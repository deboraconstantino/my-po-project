{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@portinari/portinari-ui/lib/components/po-accordion/po-accordion-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-accordion/services/po-accordion.service.ts","ng://@portinari/portinari-ui/lib/components/po-accordion/po-accordion-item/po-accordion-item.component.ts","ng://@portinari/portinari-ui/lib/components/po-accordion/po-accordion.component.ts","ng://@portinari/portinari-ui/lib/components/po-accordion/po-accordion-item-body/po-accordion-item-body.component.ts","ng://@portinari/portinari-ui/lib/components/po-accordion/po-accordion-item-header/po-accordion-item-header.component.ts","ng://@portinari/portinari-ui/lib/components/po-accordion/po-accordion.module.ts","ng://@portinari/portinari-ui/lib/components/po-avatar/po-avatar-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-avatar/po-avatar.component.ts","ng://@portinari/portinari-ui/lib/components/po-avatar/po-avatar.module.ts","ng://@portinari/portinari-ui/lib/components/po-breadcrumb/po-breadcrumb-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-breadcrumb/po-breadcrumb.component.ts","ng://@portinari/portinari-ui/lib/components/po-breadcrumb/po-breadcrumb-dropdown/po-breadcrumb-dropdown.component.ts","ng://@portinari/portinari-ui/lib/components/po-breadcrumb/po-breadcrumb-favorite/po-breadcrumb-favorite.service.ts","ng://@portinari/portinari-ui/lib/components/po-breadcrumb/po-breadcrumb-favorite/po-breadcrumb-favorite.component.ts","ng://@portinari/portinari-ui/lib/components/po-breadcrumb/po-breadcrumb-item/po-breadcrumb-item.component.ts","ng://@portinari/portinari-ui/lib/components/po-breadcrumb/po-breadcrumb.module.ts","ng://@portinari/portinari-ui/lib/utils/util.ts","ng://@portinari/portinari-ui/lib/services/po-language/po-language.service.ts","ng://@portinari/portinari-ui/lib/components/po-button-group/po-button-group-toggle.enum.ts","ng://@portinari/portinari-ui/lib/components/po-loading/po-loading-overlay/po-loading-overlay-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-loading/po-loading-overlay/po-loading-overlay.component.ts","ng://@portinari/portinari-ui/lib/services/po-language/po-language.module.ts","ng://@portinari/portinari-ui/lib/components/po-loading/po-loading-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-loading/po-loading.component.ts","ng://@portinari/portinari-ui/lib/components/po-loading/po-loading-icon/po-loading-icon.component.ts","ng://@portinari/portinari-ui/lib/components/po-loading/po-loading.module.ts","ng://@portinari/portinari-ui/lib/components/po-button/po-button-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-button/po-button.component.ts","ng://@portinari/portinari-ui/lib/components/po-button/po-button.module.ts","ng://@portinari/portinari-ui/lib/services/po-control-position/po-control-position.constants.ts","ng://@portinari/portinari-ui/lib/directives/po-tooltip/po-tooltip-base.directive.ts","ng://@portinari/portinari-ui/lib/services/po-control-position/po-control-position.service.ts","ng://@portinari/portinari-ui/lib/directives/po-tooltip/po-tooltip-control-position.service.ts","ng://@portinari/portinari-ui/lib/directives/po-tooltip/po-tooltip.directive.ts","ng://@portinari/portinari-ui/lib/directives/po-tooltip/po-tooltip.module.ts","ng://@portinari/portinari-ui/lib/components/po-button-group/po-button-group-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-chart/enums/po-chart-type.enum.ts","ng://@portinari/portinari-ui/lib/components/po-button-group/po-button-group.component.ts","ng://@portinari/portinari-ui/lib/components/po-button-group/po-button-group.module.ts","ng://@portinari/portinari-ui/lib/components/po-calendar/po-calendar-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-calendar/services/po-calendar.lang.service.ts","ng://@portinari/portinari-ui/lib/components/po-calendar/services/po-calendar.service.ts","ng://@portinari/portinari-ui/lib/services/po-date/po-date.service.ts","ng://@portinari/portinari-ui/lib/components/po-calendar/po-calendar.component.ts","ng://@portinari/portinari-ui/lib/components/po-calendar/po-calendar.module.ts","ng://@portinari/portinari-ui/lib/components/po-chart/po-chart-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-chart/po-chart-colors.constant.ts","ng://@portinari/portinari-ui/lib/components/po-chart/po-chart-types/po-chart-circular/po-chart-circular.constant.ts","ng://@portinari/portinari-ui/lib/components/po-chart/po-chart-types/po-chart-dynamic-type.component.ts","ng://@portinari/portinari-ui/lib/components/po-chart/po-chart-types/po-chart-circular/po-chart-circular.ts","ng://@portinari/portinari-ui/lib/components/po-chart/po-chart-types/po-chart-donut/po-chart-donut.component.ts","ng://@portinari/portinari-ui/lib/components/po-chart/po-chart-types/po-chart-gauge/po-chart-gauge-text-content/po-chart-gauge-text-content.component.ts","ng://@portinari/portinari-ui/lib/components/po-chart/po-chart-types/po-chart-gauge/po-chart-gauge.component.ts","ng://@portinari/portinari-ui/lib/components/po-chart/po-chart-types/po-chart-pie/po-chart-pie.component.ts","ng://@portinari/portinari-ui/lib/components/po-chart/po-chart.component.ts","ng://@portinari/portinari-ui/lib/components/po-chart/po-chart-legend/po-chart-legend.component.ts","ng://@portinari/portinari-ui/lib/components/po-chart/po-chart.module.ts","ng://@portinari/portinari-ui/lib/components/po-container/po-container-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-container/po-container.component.ts","ng://@portinari/portinari-ui/lib/components/po-container/po-container.module.ts","ng://@portinari/portinari-ui/lib/components/po-disclaimer/po-disclaimer-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-disclaimer/po-disclaimer.component.ts","ng://@portinari/portinari-ui/lib/components/po-disclaimer/po-disclaimer.module.ts","ng://@portinari/portinari-ui/lib/components/po-disclaimer-group/po-disclaimer-group-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-disclaimer-group/po-disclaimer-group.component.ts","ng://@portinari/portinari-ui/lib/components/po-disclaimer-group/po-disclaimer-remove/po-disclaimer-remove.component.ts","ng://@portinari/portinari-ui/lib/components/po-disclaimer-group/po-disclaimer-group.module.ts","ng://@portinari/portinari-ui/lib/components/po-divider/po-divider-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-divider/po-divider.component.ts","ng://@portinari/portinari-ui/lib/components/po-divider/po-divider.module.ts","ng://@portinari/portinari-ui/lib/components/po-popup/po-popup-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-popup/po-popup.component.ts","ng://@portinari/portinari-ui/lib/components/po-popup/po-popup.module.ts","ng://@portinari/portinari-ui/lib/components/po-dropdown/po-dropdown-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-dropdown/po-dropdown.component.ts","ng://@portinari/portinari-ui/lib/components/po-dropdown/po-dropdown.module.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-field-container/po-field-container-bottom/po-field-container-bottom.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-field-container/po-field-container.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-field-container/po-field-container.module.ts","ng://@portinari/portinari-ui/lib/decorators/utils-decorators.ts","ng://@portinari/portinari-ui/lib/decorators/input-boolean/input-boolean.decorator.ts","ng://@portinari/portinari-ui/lib/components/po-field/validators.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-checkbox-group/po-checkbox-group-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-progress/enums/po-progress-status.enum.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-checkbox-group/po-checkbox-group.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-checkbox-group/po-checkbox-group.module.ts","ng://@portinari/portinari-ui/lib/components/po-modal/po-modal-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-modal/po-modal-service.ts","ng://@portinari/portinari-ui/lib/components/po-modal/po-modal.component.ts","ng://@portinari/portinari-ui/lib/components/po-modal/po-modal.module.ts","ng://@portinari/portinari-ui/lib/components/po-progress/po-progress-bar/po-progress-bar.component.ts","ng://@portinari/portinari-ui/lib/components/po-progress/po-progress-base.component.ts","ng://@portinari/portinari-ui/lib/enums/po-color-palette.enum.ts","ng://@portinari/portinari-ui/lib/components/po-progress/po-progress.component.ts","ng://@portinari/portinari-ui/lib/components/po-progress/po-progress.module.ts","ng://@portinari/portinari-ui/lib/services/po-dialog/po-dialog.enum.ts","ng://@portinari/portinari-ui/lib/services/po-color-palette/po-color-palette.service.ts","ng://@portinari/portinari-ui/lib/services/po-color-palette/po-color-palette.module.ts","ng://@portinari/portinari-ui/lib/services/po-component-injector/po-component-injector.service.ts","ng://@portinari/portinari-ui/lib/services/po-component-injector/po-component-injector.module.ts","ng://@portinari/portinari-ui/lib/services/po-control-position/po-control-position.module.ts","ng://@portinari/portinari-ui/lib/services/po-date/po-date.module.ts","ng://@portinari/portinari-ui/lib/services/po-dialog/po-dialog.component.ts","ng://@portinari/portinari-ui/lib/services/po-notification/po-toaster/po-toaster-orientation.enum.ts","ng://@portinari/portinari-ui/lib/services/po-dialog/po-dialog-base.service.ts","ng://@portinari/portinari-ui/lib/services/po-dialog/po-dialog.service.ts","ng://@portinari/portinari-ui/lib/services/po-dialog/po-dialog.module.ts","ng://@portinari/portinari-ui/lib/services/po-i18n/po-i18n-base.pipe.ts","ng://@portinari/portinari-ui/lib/services/po-i18n/po-i18n.pipe.ts","ng://@portinari/portinari-ui/lib/services/po-notification/po-toaster/po-toaster-base.component.ts","ng://@portinari/portinari-ui/lib/services/po-notification/po-toaster/po-toaster-type.enum.ts","ng://@portinari/portinari-ui/lib/services/po-notification/po-toaster/po-toaster.component.ts","ng://@portinari/portinari-ui/lib/components/po-table/enums/po-table-column-sort-type.enum.ts","ng://@portinari/portinari-ui/lib/services/po-notification/po-notification.module.ts","ng://@portinari/portinari-ui/lib/services/services.module.ts","ng://@portinari/portinari-ui/lib/components/po-popover/po-popover-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-popover/po-popover.component.ts","ng://@portinari/portinari-ui/lib/components/po-popover/po-popover.module.ts","ng://@portinari/portinari-ui/lib/pipes/po-time/po-time.pipe.ts","ng://@portinari/portinari-ui/lib/pipes/po-time/po-time.module.ts","ng://@portinari/portinari-ui/lib/components/po-table/po-table-column-icon/po-table-column-icon.component.ts","ng://@portinari/portinari-ui/lib/components/po-table/po-table-column-label/po-table-column-label.component.ts","ng://@portinari/portinari-ui/lib/components/po-table/po-table-column-link/po-table-column-link.component.ts","ng://@portinari/portinari-ui/lib/components/po-table/po-table-column-manager/po-table-column-manager.component.ts","ng://@portinari/portinari-ui/lib/components/po-table/po-table-base.component.ts","ng://@portinari/portinari-ui/lib/enums/po-key-code.enum.ts","ng://@portinari/portinari-ui/lib/components/po-table/po-table-row-template/po-table-row-template.directive.ts","ng://@portinari/portinari-ui/lib/components/po-table/po-table.component.ts","ng://@portinari/portinari-ui/lib/components/po-table/po-table-detail/po-table-detail.component.ts","ng://@portinari/portinari-ui/lib/components/po-table/po-table-icon/po-table-icon.component.ts","ng://@portinari/portinari-ui/lib/components/po-table/po-table-show-subtitle/po-table-show-subtitle.component.ts","ng://@portinari/portinari-ui/lib/components/po-table/po-table-subtitle-circle/po-table-subtitle-circle.component.ts","ng://@portinari/portinari-ui/lib/components/po-table/po-table-subtitle-footer/po-table-subtitle-footer.component.ts","ng://@portinari/portinari-ui/lib/components/po-table/po-table.module.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-datepicker/po-calendar/po-calendar.lang.service.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-datepicker/po-calendar/po-calendar.service.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-datepicker/po-calendar/po-calendar.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-clean/po-clean-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-clean/po-clean.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-checkbox/po-checkbox-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-combo/po-combo-filter-mode.enum.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-checkbox/po-checkbox.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-combo/po-combo-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-datepicker/enums/po-datepicker-iso-format.enum.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-combo/po-combo-filter.service.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-combo/po-combo-option-template/po-combo-option-template.directive.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-combo/po-combo.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-input/po-mask.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-datepicker/po-datepicker-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-multiselect/po-multiselect-filter-mode.enum.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-datepicker/po-datepicker.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-datepicker-range/po-datepicker-range-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-datepicker-range/po-datepicker-range.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-input/po-input-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-decimal/po-decimal.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-input-generic/po-input-generic.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-email/po-email.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-login/po-login.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-lookup/po-lookup-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-lookup/services/po-lookup-filter.service.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-lookup/po-lookup-modal/po-lookup-modal-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-lookup/po-lookup-modal/po-lookup-modal.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-lookup/services/po-lookup-modal.service.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-lookup/po-lookup.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-multiselect/po-multiselect-search/po-multiselect-search.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-multiselect/po-multiselect-dropdown/po-multiselect-dropdown.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-multiselect/po-multiselect-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-rich-text/enums/po-rich-text-modal-type.enum.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-multiselect/po-multiselect.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-multiselect/po-multiselect-item/po-multiselect-item.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-rich-text/po-rich-text-body/po-rich-text-body.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-rich-text/po-rich-text-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-rich-text/po-rich-text.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-rich-text/po-rich-text-literals.ts","ng://@portinari/portinari-ui/lib/services/po-notification/po-notification-base.service.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-upload/po-upload-status.enum.ts","ng://@portinari/portinari-ui/lib/services/po-notification/po-notification.service.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-upload/po-upload-file.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-switch/po-switch-label-position.enum.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-upload/po-upload-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-upload/po-upload-drag-drop/po-upload-drag-drop-area/po-upload-drag-drop-area.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-upload/po-upload-drag-drop/po-upload-drag-drop.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-upload/po-upload-base.service.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-upload/po-upload.service.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-upload/po-upload.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-rich-text/po-rich-text-modal/po-rich-text-modal.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-rich-text/po-rich-text-toolbar/po-rich-text-toolbar.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-input/po-input.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-number/po-number-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-number/po-number.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-password/po-password.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-radio-group/po-radio-group-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-radio-group/po-radio-group.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-select/po-select-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-select/po-select-option-template/po-select-option-template.directive.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-select/po-select.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-switch/po-switch-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-info/po-info-orietation.enum.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-switch/po-switch.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-textarea/po-textarea-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-textarea/po-textarea.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-upload/po-upload-drag-drop/po-upload-drag-drop.directive.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-upload/po-upload-drag-drop/po-upload-drag-drop-area-overlay/po-upload-drag-drop-area-overlay.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-upload/po-upload-file-restrictions/po-upload-file-restrictions.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-url/po-url.component.ts","ng://@portinari/portinari-ui/lib/components/po-field/po-field.module.ts","ng://@portinari/portinari-ui/lib/components/po-info/po-info-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-tag/enums/po-tag-orientation.enum.ts","ng://@portinari/portinari-ui/lib/components/po-tag/enums/po-tag-type.enum.ts","ng://@portinari/portinari-ui/lib/components/po-info/po-info.component.ts","ng://@portinari/portinari-ui/lib/components/po-info/po-info.module.ts","ng://@portinari/portinari-ui/lib/components/po-tag/po-tag-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-tag/enums/po-tag-icon.enum.ts","ng://@portinari/portinari-ui/lib/components/po-tag/po-tag.component.ts","ng://@portinari/portinari-ui/lib/components/po-dynamic/po-dynamic-field-type.enum.ts","ng://@portinari/portinari-ui/lib/components/po-tag/po-tag.module.ts","ng://@portinari/portinari-ui/lib/components/po-dynamic/po-dynamic-form/po-dynamic-form-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-dynamic/po-dynamic-form/po-dynamic-form-operation/po-dynamic-form-operation.ts","ng://@portinari/portinari-ui/lib/components/po-dynamic/po-dynamic-form/po-dynamic-form-load/po-dynamic-form-load.service.ts","ng://@portinari/portinari-ui/lib/components/po-dynamic/po-dynamic-form/po-dynamic-form-validation/po-dynamic-form-validation.service.ts","ng://@portinari/portinari-ui/lib/components/po-dynamic/po-dynamic-form/po-dynamic-form.component.ts","ng://@portinari/portinari-ui/lib/components/po-dynamic/po-dynamic.util.ts","ng://@portinari/portinari-ui/lib/components/po-dynamic/po-dynamic-form/po-dynamic-form-fields/po-dynamic-form-fields-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-dynamic/po-dynamic-form/po-dynamic-form-fields/po-dynamic-form-fields.component.ts","ng://@portinari/portinari-ui/lib/components/po-dynamic/po-dynamic-view/po-dynamic-view-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-dynamic/po-dynamic-view/po-dynamic-view.service.ts","ng://@portinari/portinari-ui/lib/components/po-dynamic/po-dynamic-view/po-dynamic-view.component.ts","ng://@portinari/portinari-ui/lib/components/po-dynamic/po-dynamic.module.ts","ng://@portinari/portinari-ui/lib/components/po-grid/po-grid-cell-action/po-grid-cell-action.component.ts","ng://@portinari/portinari-ui/lib/components/po-grid/po-grid-cell/po-grid-cell.component.ts","ng://@portinari/portinari-ui/lib/components/po-grid/po-grid.component.ts","ng://@portinari/portinari-ui/lib/components/po-grid/po-grid-head/po-grid-head.component.ts","ng://@portinari/portinari-ui/lib/components/po-grid/po-grid.module.ts","ng://@portinari/portinari-ui/lib/components/po-list-view/po-list-view-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-list-view/po-list-view-content-template/po-list-view-content-template.directive.ts","ng://@portinari/portinari-ui/lib/components/po-list-view/po-list-view-detail-template/po-list-view-detail-template.directive.ts","ng://@portinari/portinari-ui/lib/components/po-list-view/po-list-view.component.ts","ng://@portinari/portinari-ui/lib/components/po-list-view/po-list-view.module.ts","ng://@portinari/portinari-ui/lib/components/po-badge/po-badge-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-badge/po-badge.component.ts","ng://@portinari/portinari-ui/lib/components/po-badge/po-badge.module.ts","ng://@portinari/portinari-ui/lib/components/po-menu/po-menu-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-menu/po-menu-header-template/po-menu-header-template.directive.ts","ng://@portinari/portinari-ui/lib/components/po-menu/services/po-menu-items.service.ts","ng://@portinari/portinari-ui/lib/components/po-menu/services/po-menu.service.ts","ng://@portinari/portinari-ui/lib/components/po-menu/po-menu.component.ts","ng://@portinari/portinari-ui/lib/components/po-menu/po-menu-filter/po-menu-filter.component.ts","ng://@portinari/portinari-ui/lib/components/po-menu/po-menu-item/po-menu-item.component.ts","ng://@portinari/portinari-ui/lib/components/po-menu/po-menu.module.ts","ng://@portinari/portinari-ui/lib/components/po-menu-panel/po-menu-panel-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-menu-panel/services/po-menu-panel-items.service.ts","ng://@portinari/portinari-ui/lib/components/po-menu-panel/po-menu-panel.component.ts","ng://@portinari/portinari-ui/lib/components/po-menu-panel/po-menu-panel-item/po-menu-panel-item.component.ts","ng://@portinari/portinari-ui/lib/components/po-menu-panel/po-menu-panel.module.ts","ng://@portinari/portinari-ui/lib/components/po-navbar/po-navbar-actions/po-navbar-action/po-navbar-action.component.ts","ng://@portinari/portinari-ui/lib/components/po-navbar/po-navbar-actions/po-navbar-action-popup/po-navbar-action-popup.component.ts","ng://@portinari/portinari-ui/lib/components/po-navbar/po-navbar-actions/po-navbar-actions.component.ts","ng://@portinari/portinari-ui/lib/components/po-navbar/po-navbar-actions/po-navbar-actions.module.ts","ng://@portinari/portinari-ui/lib/components/po-navbar/po-navbar-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-navbar/po-navbar-items/po-navbar-item/po-navbar-item.component.ts","ng://@portinari/portinari-ui/lib/components/po-navbar/po-navbar-items/po-navbar-items.component.ts","ng://@portinari/portinari-ui/lib/components/po-navbar/po-navbar.component.ts","ng://@portinari/portinari-ui/lib/components/po-navbar/po-navbar-items/po-navbar-items.module.ts","ng://@portinari/portinari-ui/lib/components/po-navbar/po-navbar-logo/po-navbar-logo.component.ts","ng://@portinari/portinari-ui/lib/components/po-navbar/po-navbar-item-navigation/po-navbar-item-navigation.component.ts","ng://@portinari/portinari-ui/lib/components/po-navbar/po-navbar-item-navigation/po-navbar-item-navigation-icon/po-navbar-item-navigation-icon.component.ts","ng://@portinari/portinari-ui/lib/components/po-navbar/po-navbar-item-navigation/po-navbar-item-navigation.module.ts","ng://@portinari/portinari-ui/lib/components/po-navbar/po-navbar.module.ts","ng://@portinari/portinari-ui/lib/components/po-page/po-page-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-page/po-page.component.ts","ng://@portinari/portinari-ui/lib/components/po-page/po-page-content/po-page-content-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-page/po-page-content/po-page-content.component.ts","ng://@portinari/portinari-ui/lib/components/po-page/po-page-default/po-page-default-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-page/po-page-default/po-page-default.component.ts","ng://@portinari/portinari-ui/lib/components/po-page/po-page-detail/po-page-detail-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-page/po-page-util/po-page-util.ts","ng://@portinari/portinari-ui/lib/components/po-page/po-page-detail/po-page-detail.component.ts","ng://@portinari/portinari-ui/lib/components/po-stepper/enums/po-stepper-status.enum.ts","ng://@portinari/portinari-ui/lib/components/po-page/po-page-edit/po-page-edit-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-page/po-page-edit/po-page-edit.component.ts","ng://@portinari/portinari-ui/lib/components/po-page/po-page-header/po-page-header-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-page/po-page-header/po-page-header.component.ts","ng://@portinari/portinari-ui/lib/components/po-page/po-page-list/po-page-list-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-page/po-page-list/po-page-list.component.ts","ng://@portinari/portinari-ui/lib/components/po-page/po-page.module.ts","ng://@portinari/portinari-ui/lib/components/po-slide/po-slide-circles/po-slide-circles.component.ts","ng://@portinari/portinari-ui/lib/components/po-slide/po-slide-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-slide/directives/po-slide-content-template.directive.ts","ng://@portinari/portinari-ui/lib/components/po-slide/po-slide-item/po-slide-item.component.ts","ng://@portinari/portinari-ui/lib/components/po-slide/po-slide.component.ts","ng://@portinari/portinari-ui/lib/components/po-slide/po-slide-control/po-slide-control.component.ts","ng://@portinari/portinari-ui/lib/components/po-slide/po-slide.module.ts","ng://@portinari/portinari-ui/lib/components/po-stepper/po-step/po-step.component.ts","ng://@portinari/portinari-ui/lib/components/po-stepper/enums/po-stepper-orientation.enum.ts","ng://@portinari/portinari-ui/lib/components/po-stepper/po-stepper-circle/po-stepper-circle.component.ts","ng://@portinari/portinari-ui/lib/components/po-stepper/po-stepper-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-stepper/po-stepper.component.ts","ng://@portinari/portinari-ui/lib/components/po-stepper/po-stepper-label/po-stepper-label.component.ts","ng://@portinari/portinari-ui/lib/components/po-stepper/po-stepper-step/po-stepper-step.component.ts","ng://@portinari/portinari-ui/lib/components/po-stepper/po-stepper.module.ts","ng://@portinari/portinari-ui/lib/components/po-tabs/po-tab-button/po-tab-button.component.ts","ng://@portinari/portinari-ui/lib/components/po-tabs/po-tab/po-tab-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-tabs/po-tab/po-tab.component.ts","ng://@portinari/portinari-ui/lib/components/po-tabs/po-tab-dropdown/po-tab-dropdown.component.ts","ng://@portinari/portinari-ui/lib/components/po-tabs/po-tabs-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-tabs/po-tabs.component.ts","ng://@portinari/portinari-ui/lib/components/po-tabs/po-tabs.module.ts","ng://@portinari/portinari-ui/lib/components/po-toolbar/po-toolbar-actions/po-toolbar-actions.component.ts","ng://@portinari/portinari-ui/lib/components/po-toolbar/po-toolbar-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-toolbar/po-toolbar.component.ts","ng://@portinari/portinari-ui/lib/components/po-toolbar/po-toolbar-notification/po-toolbar-notification.component.ts","ng://@portinari/portinari-ui/lib/components/po-toolbar/po-toolbar-profile/po-toolbar-profile.component.ts","ng://@portinari/portinari-ui/lib/components/po-toolbar/po-toolbar.module.ts","ng://@portinari/portinari-ui/lib/components/po-tree-view/po-tree-view-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-tree-view/services/po-tree-view.service.ts","ng://@portinari/portinari-ui/lib/components/po-tree-view/po-tree-view.component.ts","ng://@portinari/portinari-ui/lib/components/po-tree-view/po-tree-view-item/po-tree-view-item.component.ts","ng://@portinari/portinari-ui/lib/components/po-tree-view/po-tree-view-item-header/po-tree-view-item-header.component.ts","ng://@portinari/portinari-ui/lib/components/po-tree-view/po-tree-view.module.ts","ng://@portinari/portinari-ui/lib/components/po-widget/po-widget-base.component.ts","ng://@portinari/portinari-ui/lib/components/po-widget/po-widget.component.ts","ng://@portinari/portinari-ui/lib/components/po-widget/po-widget.module.ts","ng://@portinari/portinari-ui/lib/components/components.module.ts","ng://@portinari/portinari-ui/lib/directives/directives.module.ts","ng://@portinari/portinari-ui/lib/guards/guards.module.ts","ng://@portinari/portinari-ui/lib/interceptors/po-http-interceptor/po-http-interceptor-detail/po-http-interceptor-detail-literals.interface.ts","ng://@portinari/portinari-ui/lib/interceptors/po-http-interceptor/po-http-interceptor-detail/po-http-interceptor-detail.component.ts","ng://@portinari/portinari-ui/lib/interceptors/po-http-interceptor/po-http-interceptor-base.service.ts","ng://@portinari/portinari-ui/lib/interceptors/po-http-interceptor/po-http-interceptor.service.ts","ng://@portinari/portinari-ui/lib/interceptors/po-http-interceptor/po-http-interceptor.module.ts","ng://@portinari/portinari-ui/lib/interceptors/po-http-request/po-http-request-control-service.ts","ng://@portinari/portinari-ui/lib/interceptors/po-http-request/po-http-request-interceptor.service.ts","ng://@portinari/portinari-ui/lib/interceptors/po-http-request/po-http-request.module.ts","ng://@portinari/portinari-ui/lib/interceptors/interceptors.module.ts","ng://@portinari/portinari-ui/lib/pipes/pipes.module.ts","ng://@portinari/portinari-ui/lib/po.module.ts","ng://@portinari/portinari-ui/lib/services/po-i18n/po-i18n-config-injection-token.ts","ng://@portinari/portinari-ui/lib/services/po-i18n/po-i18n-base.service.ts","ng://@portinari/portinari-ui/lib/services/po-i18n/po-i18n.service.ts","ng://@portinari/portinari-ui/lib/services/po-i18n/po-i18n.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__values","o","m","__read","ar","error","__spread","concat","PoAccordionBaseComponent","PoAccordionService","subjectChild","Subject","receiveFromChildAccordionClicked","asObservable","sendToParentAccordionItemClicked","accordionItem","Injectable","PoAccordionItemComponent","accordionService","collapse","expanded","expand","tslib_1.__decorate","Input","ViewChild","TemplateRef","static","Component","selector","template","PoAccordionComponent","_super","_this","receiveFromChildAccordionSubscription","tslib_1.__extends","ngOnDestroy","accordionServiceSubscription","unsubscribe","headerToggle","event","poAccordionItem","toggle","subscribe","expandedActiveAccordionItem","ContentChildren","QueryList","providers","PoAccordionItemBodyComponent","animations","trigger","transition","style","height","animate","PoAccordionItemHeaderComponent","EventEmitter","onClick","emit","Output","changeDetection","ChangeDetectionStrategy","OnPush","PoAccordionModule","NgModule","imports","CommonModule","declarations","exports","PO_AVATAR_SIZES","PoAvatarBaseComponent","_size","includes","PoAvatarComponent","ngOnInit","src","undefined","onError","PoAvatarModule","PoBreadcrumbBaseComponent","itemsView","_items","items","PoBreadcrumbComponent","differs","element","renderer","showDropdown","showDropdownToggle","_breadcrumbItemsLenght","calculatedElement","hiddenWithoutResize","initialized","wasClickedonDropdown","checkClickOutElement","dropdownIcon","removeClickoutListener","differ","find","ngAfterViewInit","initializeResizeListener","ngDoCheck","breadcrumbElement","nativeElement","offsetWidth","initBreadcrumbSize","debounceResize","checkChangeOnItems","removeResizeListener","toggleDropdown","initializeClickoutListener","contains","diff","calcBreadcrumbItemsWidth","calcBreadcrumb","breadcrumbFavorite","getBreadcrumbFavoriteWidth","getBreadcrumbWidth","enableBreadcrumbResponsive","disableBreadcrumbResponsive","favoriteService","querySelector","breadcrumbItem","querySelectorAll","from","map","breadcrumb","reduce","a","slice","dropdownItems","reverse","clearTimeout","timeoutResize","setTimeout","clickoutListener","listen","resizeListener","IterableDiffers","ElementRef","Renderer2","read","PoBreadcrumbDropdownComponent","PoBreadcrumbFavoriteService","http","_url","_bodyParams","configService","url","params","item","isFavorite","link","sendStatusFavorite","status","bodyParams","post","getFavorite","get","responseType","HttpClient","PoBreadcrumbFavoriteComponent","service","favorite","paramsService","itemActive","getStatusFavorite","getSubscription","setSubscription","toggleFavoriteAction","setStatusFavorite","PoBreadcrumbItemComponent","Function","PoBreadcrumbModule","RouterModule","poLocales","poLocaleDefault","browserLanguage","getShortBrowserLanguage","formatBytes","bytes","decimals","Math","floor","log","parseFloat","pow","toFixed","getBrowserLanguage","language","navigator","shortLanguage","getShortLanguage","toLowerCase","substring","isLanguage","RegExp","test","convertToBoolean","val","trim","convertToInt","valueDefault","validNumber","parseInt","validDefaultValue","isTypeof","object","type","callFunction","fn","context","param","convertIsoToDate","start","end","date","day","month","year","setYearFrom0To100","Date","milliseconds","parse","timezone","getTimezoneOffset","convertDateToISOExtended","time","getMonth","getDate","formatYear","getFullYear","dateString","toString","isIEOrEdge","userAgent","window","isIE","isFirefox","isMobile","match","isKeyCodeEnter","keyCode","which","setFullYear","removeDuplicatedOptions","list","findIndex","splice","out_i_1","removeUndefinedAndNullOptions","validValue","isExternalLink","startsWith","openExternalLink","open","getFormattedLink","formattedLink","replace","sortValues","leftSide","rightSide","ascending","left","right","validateDateRange","dateStart","dateEnd","uuid","hex4","random","capitalizeFirstLetter","text","charAt","toUpperCase","convertNumberToDecimal","number","decimalsPlace","floatValue","isNaN","_a","validateObjectType","isArray","PoButtonGroupToggle","PoLanguageService","localStorage","getItem","setItem","getLanguage","languageDefault","getLanguageDefault","setLanguage","setLanguageDefault","providedIn","poLoadingOverlayLiteralsDefault","en","loading","es","pt","ru","PoLoadingOverlayBaseComponent","languageService","_screenLock","getTextDefault","screenLock","_text","PoLoadingOverlayComponent","changeDetector","ChangeDetectorRef","PoLanguageModule","PoLoadingBaseComponent","PoLoadingComponent","PoLoadingIconComponent","_neutralColor","PoLoadingModule","PO_BUTTON_TYPES","PoButtonBaseComponent","_disabled","_loading","_small","_type","click","PoButtonComponent","focus","disabled","buttonElement","PoButtonModule","PO_CONTROL_POSITIONS","PoTooltipBaseDirective","_tooltip","_tooltipPosition","tooltip","position","poControlPositionSidesDefault","PoControlPositionService","differenceDiagonalToWidthArrow","isSetElementWidth","offsetArrow","adjustPosition","elementPosition","customPositions","adjustCustomPosition","adjustDefaultPosition","getArrowDirection","arrowDirection","setElements","elementOffset","targetElement","isCornerAligned","positionLength","sidesCount","overflowAllSides","nextPosition","mainPositions","getMainPositions","mainPositionLength","mainSidesCount","mainPosition","getMainPosition","overflowMain","verifySubPositions","setAlignedElementPosition","setElementPosition","getMainPositionsByCustomPositions","customPositionsLength","getOverflows","sizesAndPositions","getSizesAndPositions","innerWidth","top","bottom","innerHeight","scrollY","scrollX","getBoundingClientRect","positions","index","nextIndex","overflows","setAlignedArrowDirection","setAlignedBottomPositions","displacement","setElementWidth","width","setAlignedTopPositions","setArrowDirection","setBottomPositions","setTopPositions","setRightPositions","setLeftPositions","clientWidth","align","PoTooltipControlPositionService","PoTooltipDirective","elementRef","poControlPosition","tooltipOffset","initScrollEventListenerFunction","onMouseEnter","tooltipContent","showTooltip","createTooltip","removeArrow","tooltipPosition","addArrow","lastTooltipText","onMouseLeave","hideTooltip","addClass","divArrow","addScrollEventListener","addEventListener","eventListenerFunction","createElement","divContent","textContent","createText","appendChild","isHidden","removeScrollEventListener","removeClass","removeEventListener","updateTextContent","removeChild","HostListener","Directive","PoTooltipModule","PoChartType","PO_TOGGLE_TYPE_DEFAULT","PoButtonGroupBaseComponent","_toggle","buttons","values","checkSelecteds","onButtonClick","buttonClicked","buttonIndex","Single","forEach","button","selected","Multiple","toggleMode","None","deselectAllButtons","filter","PoButtonGroupComponent","viewRef","parentRef","ViewContainerRef","PoButtonGroupModule","poCalendarLocales","PoCalendarBaseComponent","poDate","poCalendarLangService","dayVisible","displayMonths","displayWeekDays","monthVisible","yearVisible","onTouched","propagateChange","today","change","_locale","locale","initializeLanguage","_maxDate","maxDate","getDateForDateRange","_minDate","minDate","getWeekDaysArray","getMonthsArray","displayMonth","displayMonthNumber","PoCalendarLangService","months","shortWeekDays","monthLabel","yearLabel","getMonthLabel","arrMonths","getWeekDays","arrWeekDays","getYearLabel","PoCalendarService","monthDates","dayFormatter","weekFormatter","Error","weeks","week","weekStartDate","getTime","setDate","monthDays","startDate","getDay","PoDateService","dateRegex","isoRegex","getDateFromIso","miliseconds","convertDateToISO","fullYear","isoDate","isMinDate","lastHour","splitDate","validDate","bind","isValidIso","isDateRangeValid","dateA","dateB","dateASplitted","split","dateBSplitted","stringDate","sortDate","validateDate","PoCalendarComponent","poCalendarService","init","getBackgroundColor","displayValue","propertyValue","getDayBackgroundColor","getDayColor","getDayForegroundColor","getForegroundColor","onNextMonth","updateDisplay","displayYear","onPreviousMonth","onSelectDate","dateIso","onSelectMonth","selectDay","onSelectYear","lastDisplay","selectMonth","currentYear","registerOnChange","registerOnTouched","func","registerOnValidatorChange","validatorChange","selectYear","updateYear","validateModel","model","validate","writeValue","writeDate","updateDate","addAllYearsInDecade","displayDecade","equalsDate","date1","date2","getDecadeArray","updateDecade","getColorForDate","local","getColorForDateRange","getColorForToday","selectDateFromDate","selectDateFromIso","currentMonthNumber","displayStartDecade","displayFinalDecade","calendarArray","displayDays","writeDateIso","PoCalendarComponent_1","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","NG_VALIDATORS","PoCalendarModule","poChartTypeDefault","Pie","PoChartBaseComponent","poChartType","seriesClick","seriesHover","_height","setDefaultHeight","intValue","rebuildComponent","_series","chartSeries","transformObjectToArrayObject","onSeriesClick","onSeriesHover","Gauge","serie","keys","PoChartColors","PoSeriesTextBlack","poChartAngleStepInterval","PI","poChartAnimationDurationTime","poChartGaugeStartAngle","poChartStartAngle","PoChartDynamicTypeComponent","innerRadius","onSerieClick","onSerieHover","series","calculateSVGContainerDimensions","chartWrapperElement","chartHeaderElement","chartLegendElement","svgContainerHeightCalc","svgHeight","centerX","calculateTotalValue","totalValue","previousValue","PoChartCircular","el","ngZone","chartItemStartAngle","windowResizeEmitter","chartItemsEndAngleList","svgPathElementsList","svgTextElementsList","getSeriesWithValue","removeWindowResizeListener","removeWindowScrollListener","animationRunning","chartInitSetup","setEventListeners","removeTooltip","tooltipElement","drawPath","path","chartItemEndAngle","largeArc","sinAlpha","sin","cosAlpha","cos","sinBeta","cosBeta","startX","startY","endX","endY","startInnerX","startInnerY","endInnerX","endInnerY","halfGaugeCoordinates","join","pathCoordinates","setAttribute","isChartGaugeType","newSeries","color","colors","animationSetup","drawPathInit","appendGaugeBackgroundPathElement","svgPathsWrapper","svgPath","svgElement","calculateAngleRadians","calculateEndAngle","calculateCurrentEndAngle","angleCurrentPosition","endAngle","calculateSVGDimensions","chartWrapper","chartHeader","chartLegend","setInnerRadius","changeTooltipPosition","classList","tooltipPositions","setTooltipPositions","setStyle","createSVGElements","checkingIfScrollsWithPoPage","poPageContent","document","getElementsByClassName","createPath","setElementAttributes","createPaths","isSerieValueEqualZero","svgG","svgText","fontSize","getFontSize","textColor","getTextColor","getPercentValue","createTexts","Donut","viewBoxHeight","preserveAspectRatio","svgContainer","runOutsideAngular","drawSeries","currentSerieIndex","isFinishedDrawingCurrentSeries","setTextProperties","requestAnimationFrame","emitEventOnEnter","floatPercentValue","String","getTooltipValue","onMouseClick","serieOnClick","category","chartElementCategory","chartElementValue","serieOnEnter","chartElementDescription","getAttributeNS","chartBody","lastChild","tooltipText","onWindowResize","windowResizeListener","windowScrollListener","serieWidth","startAngle","centerAngle","textBox","getBBox","halfTextWidth","halfTextHeight","radius","xCoordinate","yCoordinate","clientX","clientY","offsetHeight","description","tooltipValue","PoChartDonutComponent","NgZone","PoChartGaugeTextContentComponent","_gaugeWidth","checkTextDescriptionSize","_serie","serieValueConverted","convertValueInPercentFormat","subtractionArea","gaugeWidth","max-width","descriptionElement","isEllipsisActive","detectChanges","scrollWidth","PoChartGaugeComponent","componentFactoryResolver","getGaugeSerie","drawBasePath","createComponent","factory","resolveComponentFactory","instance","svgContainerRef","getGaugeBaseWidth","resizeListenerSubscription","checkGaugeValueLimits","basePath","ComponentFactoryResolver","PoChartPieComponent","PoChartComponent","mappings","onResize","getSeriesColor","dynamicComponentSetting","checkingForSerieChanges","componentRef","destroy","chartLegendHeight","componentType","getComponentType","chartContainer","setChartProperties","setResizeListenerSubscribe","setClickSubscribe","setHoverSubscribe","typeName","colorsLength","seriesLength","quantityDuplicates","PoChartLegendComponent","PoChartModule","entryComponents","PoContainerBaseComponent","_noBorder","_noPadding","_noShadow","PoContainerComponent","PoContainerModule","PO_DISCLAIMER_TYPES","PoDisclaimerBaseComponent","_hideClose","showDisclaimer","closeAction","close","property","getLabel","PoDisclaimerComponent","onKeyPress","PoDisclaimerModule","poDisclaimerGroupLiteralsDefault","removeAll","PoDisclaimerGroupBaseComponent","_disclaimers","_hideRemoveAll","previousDisclaimers","literals","disclaimers","checkDisclaimers","checkChanges","closeItem","disclaimer","emitChange","itemIndex","emitChangeDisclaimers","isRemoveAll","hideRemoveAll","hideClose","removeAllItems","removeItems","disclaimersAreChanged","currentValues","some","PoDisclaimerGroupComponent","PoDisclaimerRemoveComponent","removeAllAction","removeAction","PoDisclaimerGroupModule","PoDividerBaseComponent","PoDividerComponent","PoDividerModule","poPopupDefaultPosition","PoPopupBaseComponent","_hideArrow","_isCornerAlign","_position","showPopup","_actions","_customPositions","_target","PoPopupComponent","viewContainerRef","router","onScroll","removeListeners","onActionClick","popupAction","actionNoDisabled","returnBooleanValue","action","openUrl","oldTarget","validateInitialContent","clickedOutDisabledItem","elementContains","parentElement","clickedOutHeaderTemplate","popupHeaderTemplate","popupRef","clickedOutTarget","closePopupOnClickout","className","hasContentToShow","clientHeight","initializeListeners","navigate","setPosition","isCornerAlign","Router","PoPopupModule","schemas","PoDropdownBaseComponent","icon","PoDropdownComponent","hideDropdown","onKeyDown","dropdownRef","checkClickArea","wasClickedOnDropdown","PoDropdownModule","PoFieldContainerBottomComponent","errorPattern","PoFieldContainerComponent","_optional","getOptionalText","PoFieldContainerModule","changeValueByCallback","decoratorProperties","decoratorName","callback","originalDescriptor","privatePropertyName","propertyName","privatePropName","console","warn","configurable","writable","createPrivateProperty","getter","set","setter","InputBoolean","requiredFailed","required","valid","maxlengpoailed","maxlength","validMaxlength","Number","minlengpoailed","minlength","validMinlength","PoProgressStatus","poCheckboxGroupColumnsDefaultLength","PoCheckboxGroupBaseComponent","checkedOptions","checkedOptionsList","mdColumns","_columns","_indeterminate","_required","autoFocus","ngModelChange","columns","getGridSystemColumns","checkIndeterminate","indeterminate","_options","setCheckboxGroupOptionsView","options","changeValue","checkOption","checkOptionModel","optionsModel","generateCheckOptions","abstractControl","isInvalidIndeterminate","checkColumnsRange","maxColumns","optionChecked","option","gridSystemColumns","every","optionFind","optionsList","checkboxGroupOptionsView","id","PoCheckboxGroupComponent","ngAfterViewChecked","checkboxLabels","checkboxLabel","preventDefault","trackByFn","ViewChildren","PoCheckboxGroupComponent_1","PoCheckboxGroupModule","FormsModule","PoModalBaseComponent","clickOut","onXClosed","xClosed","validPrimaryAction","primaryAction","PoModalService","PoModalComponent","poModalService","focusableElements","modalActive","removeEventListeners","sourceElement","closeModalOnEscapeKey","stopPropagation","getPrimaryActionButtonType","danger","getSecondaryActionButtonType","secondaryAction","onClickOut","modalContent","activeElement","handleFocus","initFocus","focusFunction","firstElement","setFirstElement","PoModalModule","PoProgressBarComponent","PoColorPaletteEnum","PoProgressBaseComponent","_value","Default","cancel","retry","integerValue","isProgressRangeValue","PoProgressComponent","observers","Success","info","infoIcon","isAllowCancel","isAllowRetry","emitCancellation","emitRetry","PoProgressModule","PoDialogType","PoColorPaletteService","getColor","getColorFromType","Color07","Color11","Color08","Color01","PoColorPaletteModule","bootstrap","PoComponentInjectorService","componentResolver","applicationRef","injector","createComponentInApplication","component","attachView","hostView","domElem","rootNodes","destroyComponentInApplication","detachView","ApplicationRef","Injector","PoComponentInjectorModule","PoControlPositionModule","PoDateTimeModule","PoToasterOrientation","poDialogAlertLiteralsDefault","ok","poDialogConfirmLiteralsDefault","confirm","PoDialogComponent","closeSubscription","poModal","configDialog","primaryLabel","secondaryLabel","dialogOptions","dialogType","title","message","setDialogLiterals","Confirm","literalsConfirm","Alert","literalsAlert","alertLiterals","confirmLiterals","PoDialogBaseService","confirmOptions","openDialog","alert","alertOptions","PoDialogService","poComponentInjector","changeDetectorRef","PoDialogModule","PoI18nBasePipe","transform","args","args_1","tslib_1.__values","args_1_1","arg","PoI18nPipe","Pipe","name","PoToasterType","PoToasterBaseComponent","orientation","Bottom","PoTableColumnSortType","PoToasterComponent","elementeRef","margin","observableOnClose","showToaster","toasterPosition","changePosition","display","Top","toaster","configToaster","poToaster","actionLabel","toasterType","Information","Warning","getShowToaster","getIcon","getToasterPosition","getToasterType","poToasterAction","PoNotificationModule","PoServicesModule","PO_POPOVER_DEFAULT_POSITION","PO_POPOVER_DEFAULT_TRIGGER","PO_POPOVER_TRIGGERS","PoPopoverBaseComponent","_trigger","PoPopoverComponent","initEventListenerFunction","setElementsControlPosition","setRendererListenInit","setPopoverPosition","setOpacity","popoverElement","opacity","mouseEnterListener","mouseLeaveListener","togglePopup","hidden","PoPopoverModule","PoTimePipe","format","amountOfF","lastIndexOf","addDotMiliseconds","formatMiliseconds","getFormatMiliseconds","formatValue","hour","minutes","seconds","PoTimeModule","PoTableColumnIconComponent","_icons","icons","convertToColumnIcon","columnIcon","isAbleAction","isDisabled","row","column","isClickable","trackByFunction","rowIcons","rowIcon","PoTableColumnLabelComponent","poColorPaletteService","PoTableColumnLinkComponent","PoTableColumnManagerMaxColumnsDefault","poTableColumnManagerLiteralsDefault","columnsManager","restoreDefault","PoTableColumnManagerComponent","_maxColumns","columnsOptions","visibleColumns","defaultColumns","visibleColumnsChange","updateColumnsOptions","ngOnChanges","changes","firstChange","onChangeColumns","onChangeVisibleColumns","checkedColumns","disableColumnsOptions","visibleTableColumns","getVisibleTableColumns","restore","isDisableColumn","getColumnTitleLabel","getVisibleColumns","visible","popover","mapTableColumnsToCheckboxOptions","currentValue","_b","PoKeyCodeEnum","poTableContainer","poTableLiteralsDefault","noColumns","noData","noVisibleColumn","loadingData","loadMoreData","seeCompleteSubtitle","completeSubtitle","PoTableBaseComponent","_hideDetail","_hideTextOverflow","hasMainColumns","mainColumns","selectAll","sortedColumn","subtitleColumns","allSelected","allUnselected","collapsed","showMore","sortBy","unselected","hasItems","hasColumns","getDefaultColumns","setColumnLink","calculateWidthHeaders","_container","showContainer","hideTextOverflow","calculateHeightTableContainer","hideDetail","_literals","selectable","checkbox","actions","_selectable","sort","showMoreDisabled","striped","hideSelectAll","singleSelect","columnMasterDetail","typesValid","col","Ascending","Descending","rowIndex","setShowDetail","getSelectedRows","$selected","getUnselectedRows","selectAllRows","emitSelectAllEvents","selectRow","emitSelectEvents","configAfterSelectRow","selectDetailRow","getClassColor","getColumnColor","toggleDetail","$showDetail","emitExpandEvents","toggleRowAction","toggleShowAction","$showAction","sortColumn","sortArray","sortType","onShowMore","rows","unselectOtherRows","isEverySelected","columnColor","getColumnMasterDetail","getMainColumns","validColumns","getSubtitleColumns","setMainColumns","setColumnMasterDetail","setSubtitleColumns","allColumnsWidthPixels","verifyWidthColumnsPixels","rowIdentifier","isShowDetail","PoTableRowTemplateDirective","templateRef","PoTableComponent","decimalPipe","tableOpacity","visibleElement","clickListener","_columnManagerTarget","columnManager","masterDetail","detail","hideSelect","visibleActions","hasVisibleSubtitleColumns","hasRowTemplate","tableRowTemplate","container","hideContainer","checkChangesItems","verifyCalculateHeightTableContainer","tableWrapperElement","checkDisabled","containsMasterDetail","nameColumnDetail","executeTableAction","tableAction","validateTableAction","formatNumber","getBooleanLabel","rowValue","columnBoolean","boolean","trueLabel","falseLabel","getColumnIcons","mergeCustomIcons","findCustomIcon","getColumnLabel","columnLabel","labels","labelItem","getSubtitleColumn","subtitleColumn","subtitles","subtitleItem","isShowMasterDetail","isShowRowTemplate","poTableRowTemplateShow","onVisibleColumnsChange","tooltipMouseEnter","innerText","checkingIfColumnHasTooltip","tooltipMouseLeave","targetRef","popupTarget","poPopupComponent","trackBy","heightTableContainer","getHeightTableFooter","setTableOpacity","headersTable","header","divHeader","containerClassList","tableContainerElement","firstChild","add","remove","changesItems","customIcon","tableFooterElement","customIcons","mergedIcons","columnValue","foundCustomIcon","verifyChangeHeightInFooter","footerHeight","DecimalPipe","ContentChild","PoTableDetailComponent","isSelectable","_detail","returnPoTableDetailObject","formatNumberDetail","onSelectRow","PoTableIconComponent","iconTooltip","clickable","allowTooltip","PoTableShowSubtitleComponent","PoTableSubtitleCircleComponent","hideTitle","_subtitle","subtitle","PoTableSubtitleFooterComponent","isVisible","getContainerSize","toggleShowCompleteSubtitle","getItemsSize","containerSize","itemsSize","showSubtitle","PoTableModule","wordMonth","wordYear","lang","getWordMonth","getWordYear","getArrayMonths","getWeedDays","getArrayWeekDays","firstWeekDay","PoCalendarComponent$1","displayWeedDays","overlayInvisible","selectedDateChange","submit","_dateEnd","_selectedDate","selectedDate","_dateStart","getArrayDecade","onPrevMonth","setMobileVisualization","PoCleanBaseComponent","defaultValue","changeEvent","clear","setInputValue","showIcon","getInputValue","hasCleanAttr","isReadonly","parentComponent","clean","readonly","PoCleanComponent","inputRef","PoComboFilterMode","PoCheckboxBaseComponent","checkboxValue","changeModelValue","PoCheckboxComponent","space","PoCheckboxComponent_1","PoDatepickerIsoFormat","poComboLiteralsDefault","PoComboBaseComponent","_changeOnEnter","_debounceTime","_disabledInitFilter","_fieldLabel","_fieldValue","_filterMinlength","_filterMode","_sort","cacheStaticOptions","comboOptionsList","cacheOptions","firstInWriteValue","isFirstFilter","isFiltering","previousSearchValue","visibleOptions","placeholder","_filterService","configAfterSetFilterService","parsedValue","unsubscribeKeyupObservable","initInputObservable","filterService","fieldValue","fieldLabel","parseValue","isInteger","selectedValue","changeOnEnter","comboListDefinitions","filterMode","endsWith","_filterParams","filterParams","updateComboList","onInitService","setService","defaultService","configProperties","compareMethod","search","getOptionFromValue","isEqual","getOptionFromLabel","updateSelectedValue","isUpdateModel","isWriteValue","optionLabel","updateInternalVariables","optionValue","updateModel","callModelChange","onModelChange","inputValue","searchForLabel","optionsGroupTitle_1","newOptions_1","addedOptionsGroupTitle_1","isOptionGroupList","selectedView","copyOptions","newOptions","selectedOption","getNextOption","optionFound","found","optionsList_1","optionsList_1_1","getIndexSelectedView","compareObjects","obj1","obj2","JSON","stringify","verifyValidOption","updateSelectedValueWithOldOption","isInputValueDiffSelectedLabel","getObjectByValue","onModelTouched","listingComboOptions","compareOptions","optionA","optionB","labelA","labelB","hasDuplicatedOption","currentOption","accumulatedGroupOptions","comboOptions","verifiedComboOptionsList","verifyComboOptions","sortOptions","verifyComboOptionsGroup","validateValue","verifyingOptionsGroup","accumulatedOptions","verifyIfHasLabel","verifiedComboOptionsGroupList","keyupSubscribe","fromWriteValue","oldOption","PoComboFilterService","getFilteredData","filterParamsValidated","pipe","response","parseToArrayComboOption","parseToComboOption","PoComboOptionTemplateDirective","PoComboComponent","controlPosition","sanitized","_isServerSearching","comboIcon","comboOpen","isProcessingGetObjectByValue","scrollTop","shouldMarkLetters","adjustContainerPosition","setContainerPosition","filterSubscription","inputElement","tab","controlComboVisibility","arrowUp","arrowDown","selectPreviousOption","selectNextOption","esc","enter","onKeyUp","useDefaultOptionsService","keyupObservable","fromEvent","isValidCharacterToSearch","currentTarget","distinctUntilChanged","tap","debounceTime","filterMinlength","controlApplyFilter","applyFilter","isServerSearching","setOptionsByApplyFilter","updateOptionByFilteredValue","onOptionClick","currentViewValue","nextOption","visibleOption","toggleComboVisibility","disabledInitFilter","applyFilterInFirstClick","toOpen","scrollTo","selectedItem","offsetTop","setScrollTop","wasClickedOnToggle","iconElement","contentElement","getLabelFormatted","labelInput","labelLowerCase","openTagBold","safeHtml","bypassSecurityTrustHtml","searchOnEnter","eventResizeListener","containerElement","DomSanitizer","PoComboComponent_1","PoMask","mask","formatModel","initialPosition","finalPosition","pattern","getRegexFromMask","valueToInput","valueToModel","keyup","$event","controlFormatting","resetPositions","setPositionNotShiftKey","setSelectionRange","shiftKey","setPositions","keydown","ctrlKey","metaKey","isKeyValid","revertPositions","getPosition","checkMaskBefore","clearRangeSelection","checkMaskAfter","isBackspace","selectionStart","selectionEnd","blur","tempPosition","valueProcessed","maskTmp","arrMasks","contMasks","hasOptionalNumber","replaceOptionalNumber","formattingEnds","guide","listValidKeys","contGuide","removeFormattingValue","charValue","isFixedCharacterGuide","isKeyValidMask","testRegex","getFixedCharacterGuide","isKeyCodeValid","keyMask","replaceMask","regex","char","PoMultiselectFilterMode","poDatepickerFormatDefault","PoDatepickerBaseComponent","_format","_noAutocomplete","_placeholder","firstStart","isExtendedISO","onChangeModel","onTouchedModel","onblur","onchange","objMask","buildMask","refreshValue","_isoFormat","Extended","getDateFromString","formatToDate","dateFormatted","controlModel","callOnChange","convertDateToISODate","poCalendarPositionDefault","PoDatepickerComponent","noAutocomplete","setDialogPickerStyleDisplay","inputEl","togglePicker","calendar","closeCalendar","setCalendarPosition","dateSelected","verifyMobile","controlChangeEmitter","wasClickedOnPicker","dialogPicker","iconDatepicker","hasOverlayClass","hasAttrCalendar","onKeyup","onKeydown","hasInvalidClass","getErrorPattern","valueBeforeChange","eventOnBlur","newDate","eventOnClick","isValidDateIso","isValidExtendedIso","isoFormat","dateTemp","dateModelFormatted","timeoutChange","hasAttribute","PoDatepickerComponent_1","poDatepickerRangeLiteralsDefault","invalidFormat","startDateGreaterThanEndDate","PoDatepickerRangeBaseComponent","poDateService","errorMessage","_clean","_readonly","dateRange","isDateRangeInputFormatValid","isStartDateRangeInputValid","onChange","_endDate","convertPatternDateFormat","endDate","updateScreenByModel","_startDate","control","requiredDateRangeFailed","dateRangeObjectFailed","dateRangeFormatFailed","dateRangeFailed","resetDateRangeInputValidation","isDateRangeObject","dateFormatFailed","isDateRangeInputValid","PoDatepickerRangeComponent","poDatepickerRangeElement","startDateInputValue","endDateInputValue","endDateInput","startDateInput","getKeyCode","getTargetElement","srcElement","isValidKey","poMaskObject","onBlur","removeFocusFromDatePickerRangeField","onFocus","applyFocusOnDatePickerRangeField","isSetFocusOnBackspace","setFocusOnBackspace","isStartDateTargetEvent","startDateInputName","setFocus","updateModelByScreen","isStartDateValid","isDateValid","endDateFormated","formatModelToScreen","startDateFormated","dateRangeField","formatDate","formatScreenToModel","getDateRangeFormatValidation","setDateRangeInputValidation","isValid","dateRangeModel","getValidatedModel","isEqualBeforeValue","endDateInputName","PoDatepickerRangeComponent_1","inputName","setFocusOnArrowLeft","setFocusOnArrowRight","setFocusOnStartDateCompleted","setFocusAndPosition","selectionRange","focusOnElement","isCursorAtStartOfInput","inputLength","isCursorAtEndOfInput","isLastKeyPressed","isNewDateCompleted","endDateFormatted","startDateFormatted","isDateRangeInputUncompleted","isDirtyDateRangeInput","dateFormatValidation","PoInputBaseComponent","passedWriteValue","maskFormatModel","changeModel","onChangePropagate","_maxlength","_minlength","controlChangeModelEmitter","callUpdateModelWithTimeout","modelLastUpdate","getScreenValue","reg","patternFailed","validatePatternOnWriteValue","extraValidation","writeValueModel","poDecimalDefaultDecimalsLength","poDecimalDefaultThousandMaxlength","PoDecimalComponent","_decimalsLength","_thousandMaxlength","decimalSeparator","fireChange","isKeyboardAndroid","minusSign","oldDotsLength","thousandSeparator","thousand","decimal","decimalsLength","isValueBetweenAllowed","isGreaterThanTotalLengthLimit","thousandMaxlength","verifyAutoFocus","setPaddingInput","hasLetters","isValidNumber","keyValue","fromCharCode","validKey","containsMoreThanOneComma","setViewValue","valueWithoutThousandSeparator","formatValueWithoutThousandSeparator","formatToViewValue","onInput","modelValue","viewValue","onInputKeyboardAndroid","addZeroBefore","formatMask","setCursorInput","formatToModelValue","setPositionValue","paddingRight","formatedViewValue","containsComma","foundComma","elementValue","formattedValue","replaceCommaToDot","formatedNumber","numberValue","valueBeforeDot","valueAfterDot","getValueBeforeSeparator","getValueAfterSeparator","separator","hasLessDot","dots","dotsLength","hasMoreDot","hasMinusSignInvalidPosition","keyIsMinusSign","isInvalidKey","charCode","isInvalidNumber","verifyInsertComma","verifyThousandLength","verifyValueAfterComma","verifyInsertMinusSign","validateCursorPositionBeforeSeparator","verifyDecimalLengthIsZeroAndKeyPressedIsComma","decimalsMaxLength","isKeyDecimalSeparator","isPositionAfterDecimalSeparator","positionCursor","indexComma","isSelectionStartDifferentSelectionEnd","maxAllowed","setInitialSelectionRange","replaceAt","substr","originalValue","valueBeforeSeparator","valueBeforeSeparatorOriginal","indexMinusSign","positionMinusSign","occurancesMinusSign","valueAfterSeparator","PoDecimalComponent_1","PoInputGeneric","afterViewInit","eventOnInput","validMaxLength","eventOnFocus","validateClassesForPattern","verifyPattern","screenValue","PoEmailComponent","listener","PoEmailComponent_1","PoLoginComponent","PoLoginComponent_1","PoLookupBaseComponent","oldValue","initializeColumn","keysDescription","selectValue","valueSelected","searchById","getFormattedLabel","cleanModel","cleanViewValue","selectModel","setUrl","PoLookupFilterService","httpClient","getFilteredItems","filteredItemsParams","restFilteredItemsParams","validatedFilterParams","validateParams","poLookupLiteralsDefault","modalPrimaryActionLabel","modalSecondaryActionLabel","modalPlaceholder","modalTitle","modalTableNoColumns","modalTableNoData","modalTableLoadingData","modalTableLoadMoreData","PoLookupModalBaseComponent","hasNext","isLoading","page","pageSize","searchValue","setTableLiterals","_title","searchSubscription","showMoreSubscription","initializeData","data","showMoreEvent","filteredParams","getFilteredParams","order","getOrderParam","tableLiterals","PoLookupModalComponent","keyUpObservable","containerHeight","tableHeight","initializeEventInput","setTableHeight","inputSearchEl","validateEnterPressed","openModal","PoLookupModalService","selectValueEvent","PoLookupComponent","poLookupFilterService","poLookupModalService","modalSubscription","openLookup","isAllowedOpenModal","fieldFormat","setInputValueWipoieldFormat","getViewValue","searchEvent","objectSelected","isEmpty","fieldFormated","PoLookupComponent_1","PoMultiselectSearchComponent","placeholderSearch","PoMultiselectDropdownComponent","show","haveOptions","hideSearch","selectedValues","changeSearch","closeDropdown","isSelectedItem","clickItem","check","updateSelectedValues","searchElement","checked","indexSelectedValues","callChangeSearch","controlVisibility","checkInitialOptions","PoRichTextModalType","poMultiselectLiteralsDefault","PoMultiselectBaseComponent","_hideSearch","selectedOptions","visibleOptionsDropdown","visibleDisclaimers","updateVisibleItems","validAndSortOptions","updateList","setUndefinedLabels","getValuesFromOptions","eventChange","lastLengthModel","getLabelByValue","changeItems","updateSelectedOptions","searchByLabel","PoMultiselectComponent","disclaimerOffset","dropdownOpen","isCalculateVisibleItems","inputWidth","getInputWidth","getDisclaimersWidth","calculateVisibleItems","disclaimersWidth","disclaimersVisible","sum","controlDropdownVisibility","toggleDropdownVisibility","openDropdown","scrollToSelectedOptions","dropdown","setVisibleOptionsDropdown","getPlaceholder","closeDisclaimer","dropdownElement","disclaimerContainerElement","clickOutListener","setPositionDropdown","PoMultiselectComponent_1","PoMultiselectItemComponent","itemClicked","poRichTextBodyCommands","PoRichTextBodyComponent","commands","selectedLink","shortcutCommand","onAnchorClick","elementLink","nodeName","href","attributes","bodyElement","designMode","updateValueWithModelValue","executeCommand","command","linkCommand","urlLink","urlLinkText","handleCommandLink","execCommand","linkEditing","isLinkEditing","emitSelectionCommands","keyK","toggleCursorOnLink","removeBrElement","onPaste","addClickListenerOnAnchorElements","update","hexColor","queryCommandState","rgbColor","queryCommandValue","rgbToHex","isCursorPositionedInALink","linkElement","getTextSelection","textSelection","getSelection","focusNode","anchorNode","parentNode","node","tagName","insertHtmlLinkElement","linkValue","makeLinkTag","getRangeAt","elementlinkText","createTextNode","deleteContents","insertNode","isLink","verifyCursorPositionInFirefoxIEEdge","isParentNodeAnchor","childNodes","rgb","sep","selection","isCtrl","isCommand","isOnCtrlLink","innerHTML","insertAdjacentHTML","nodeLink","fragmentDocument","cloneContents","firstElementChild","PoRichTextBaseComponent","invalid","PoRichTextComponent","validateClassesForRequired","addKeyListeners","onChangeValue","updateValue","PoRichTextComponent_1","poRichTextLiteralsDefault","bold","italic","underline","center","justify","unorderedList","insertLink","linkTextLabel","linkUrlTextHelper","linkUrlTextPlaceholder","editLink","insert","insertImage","urlImage","PoUploadStatus","PoNotificationBaseService","stackTop","stackBottom","defaultDuration","success","notification","createToaster","buildToaster","warning","information","setDefaultDuration","duration","destroyToaster","PoNotificationService","stack","count","PoSwitchLabelPosition","PoUploadFile","file","displayName","getFileSize","size","extension","getExtension","rawFile","uid","generateUUID","s4","kbSize","ceil","poUploadLiteralsDefault","files","folders","selectFile","selectFiles","selectFolder","deleteFile","tryAgain","startSending","dragFilesHere","dragFoldersHere","selectFilesOnComputer","selectFolderOnComputer","dropFilesHere","dropFoldersHere","invalidDropArea","invalidFileType","invalidAmount","invalidSize","numberOfFilesAllowed","allowedFormats","allowedFileSizeRange","maxFileSizeAllowed","minFileSizeAllowed","errorOccurred","sentWithSuccess","PoUploadBaseComponent","uploadService","_dragDrop","extensionNotAllowed","quantityNotAllowed","sizeNotAllowed","autoUpload","onUpload","onSuccess","_directory","canHandleDirectory","setDirectoryAttribute","_hideRestrictionsInfo","_hideSelectButton","_hideSendButton","_fileRestrictions","restrictions","initRestrictions","setAllowedExtensions","_formField","getUploadService","formField","currentFiles","_isMultiple","comparedValue","parseFiles","isExceededFileLimit","currentFilesLength","isMultiple","fileRestrictions","maxFiles","poUploadFiles","filesLength","checkRestrictions","insertFileInFiles","sendFeedback","allowedExtensions","minFileSize","maxFileSize","isAccept","isAllowedExtension","isAcceptSize","existsFileSameName","currentFile","newFile","updateExistsFileInFiles","isAllowed","ext","_allowedExtensions","fileIndex","Uploaded","PoUploadDragDropAreaComponent","selectFilesLinkElement","PoUploadDragDropHeightDefault","PoUploadDragDropComponent","_dragDropHeight","isDragOver","fileChange","dragDropHeight","dragDropAreaComponent","onAreaElement","areaElement","onDragLeave","onDragOver","onFileChange","PoUploadBaseService","requests","upload","tOnUpload","uploadCallback","successCallback","errorCallback","uploadEvent","formData","FormData","fileName","append","sendFile","request","getRequest","HttpEventType","UploadProgress","addRequest","percentDone","round","loaded","total","HttpResponse","err","req","HttpRequest","reportProgress","stopRequestByFile","requestObj","removeRequest","PoUploadService","PoUploadComponent","i18nPipe","infoByUploadStatus","Uploading","percent","progressStatusByFileStatus","calledByCleanInputValue","dragDrop","hideSendButton","hasFileNotUploaded","hasAnyFileUploading","stopUpload","removeFile","cleanInputValue","uploadButton","displayDragDrop","poUploadDragDropComponent","isAllowCancelEvent","updateFiles","onFileChangeDragDrop","inputFile","setPipeArguments","allowedExtensionsFormatted","sendFiles","uploadFiles","removeAttribute","stopUploadHandler","filesFiltered","uploadingHandler","eventResponse","responseHandler","eventError","literalAttributes","literalArguments","pipeArguments","modelFiles","mapCleanUploadFiles","progressFile","PoUploadComponent_1","uploadRestrictions","PoRichTextModalComponent","modalCancelAction","modal","retrieveCursorPosition","cleanUpFields","modalConfirmAction","insertElementRef","modalLinkConfirmAction","linkConfirmAction","toEditLink","toInsertLink","modalType","uploadModel","modalImageForm","convertToBase64","isUploadValid","uploadImage","reader","FileReader","readAsDataURL","onload","onerror","emitCommand","Image","formModelValidate","modalLinkForm","isUrlValid","saveCursorPosition","Link","prepareModalForLink","isSelectedLink","checkIfIsEmpty","formReset","markAsPristine","markAsUntouched","updateValueAndValidity","saveSelectionText","setLinkEditableForModal","restoreSelection","savedSelection","removeAllRanges","addRange","savedCursorPosition","focusOffset","getAttribute","urlLinkTextValue","NgForm","PoRichTextToolbarComponent","alignButtons","emitAlignCommand","formatButtons","listButtons","linkButtons","mediaButtons","toggleDisableButtons","removeButtonFocus","setColorInColorPicker","changeTextColor","setButtonsStates","obj","shortcutTrigger","btn","toolbarElement","colorPickerInput","state","PoInputComponent","PoInputComponent_1","PoNumberBaseComponent","valueMaxlength","substringValue","isEndWithDot","PoNumberComponent","min","parsedInt","max","maxFailed","PoNumberComponent_1","PoPasswordComponent","_hidePasswordPeek","visiblePassword","showPassword","PoPasswordComponent_1","poRadioGroupColumnsDefaultLength","PoRadioGroupBaseComponent","changedValue","getElementByValue","PoRadioGroupComponent","eventClick","radioLabels","radioLabel","isArrowKey","PoRadioGroupComponent_1","PoSelectBaseComponent","readyToValidation","onUpdateOptions","onValidatorChange","PoSelectOptionTemplateDirective","poSelectContentPositionDefault","PoSelectComponent","selectIcon","disableDefaultEventAndToggleButton","altKey","toggleButton","selectElement","hideDropDown","markForCheck","onSelectChange","findOptionValue","setScrollPosition","scrollValue","heightScrollValue","getSelectItemHeight","scrollPosition","query","selectButtonElement","selectItem","contentList","ulDropdpwn","PoSelectComponent_1","PoInfoOrientation","PoSwitchBaseComponent","switchValue","labelOn","labelOff","labelPosition","Right","PoSwitchComponent","switchContainer","getLabelPosition","Left","getSwitchPosition","PoSwitchComponent_1","PoTextareaBaseComponent","_rows","PoTextareaComponent","PoTextareaComponent_1","PoUploadDragDropDirective","dragLeave","dragOver","timeout","onDrop","getFilesFromDataTransferItems","directoryCompatible","getOnlyDirectories","dataTransfer","getOnlyFiles","getFilesFromEntry","entry","isFile","readFile","isDirectory","readDirectory","dataTransferItems","entries","dataTransferItems_1","dataTransferItems_1_1","webkitGetAsEntry","entries_1","entries_1_1","newFiles","_c","fileList","dirReader","createReader","readDirectoryEntries","readEntries","entries_2","entries_2_1","itemFiles","invalidFiles","invalidDropAreaArg","HTMLElement","PoUploadDragDropAreaOverlayComponent","DragDropAreaFixed","boundingClientRect","clientRectKey","clientRectValue","PoUploadFileRestrictionsComponent","formatAllowedExtensions","_maxFileSize","_minFileSize","setLiterals","PoUrlComponent","PoUrlComponent_1","PoFieldModule","HttpClientModule","PoTagOrientation","PoTagType","poInfoOrientationDefault","Vertical","PoInfoBaseComponent","_orientation","poInfoOrientation","_labelSize","PoInfoComponent","PoInfoModule","PoTagIcon","poTagColors","poTagOrientationDefault","PoTagBaseComponent","poTagOrientation","_color","_icon","_inverse","PoDynamicFieldType","poTagTypeDefault","Info","PoTagComponent","Danger","inverse","Horizontal","submittedTagItem","onKeyPressed","PoTagModule","PoDynamicFormBaseComponent","_groupForm","formOutput","PoDynamicFormOperation","execute","of","setFormDefaultIfEmpty","validateFields","fields","PoDynamicFormLoadService","createAndUpdateFieldsForm","loadedFields","tslib_1.__spread","updatedFields","field","updatedField","executeLoad","load","loadedFormdData","PoDynamicFormValidationService","sendFieldChange","setFieldDefaultIfEmpty","sendFormChange","updateFieldsForm","validatedFields","validatedField","PoDynamicFormComponent","loadService","validationService","_form","emitForm","loadDataOnInitialize","fieldsComponent","validateForm","previousFocusElement","disableForm","sendFormSubscription","applyFormValidation","applyFormUpdatesOnLoad","dynamicFormData","updateModelOnLoad","setFocusOnFieldByProperty","updateModelWithValidation","disabledForm","groupForm","form","onLoadSubscription","loadedFormData","getGridColumnsClasses","smColumns","lgColumns","xlColumns","gridColumns","isVisibleField","PoDynamicFormFieldsBaseComponent","titleCasePipe","visibleFields","fieldsChange","formValidate","_fields","compareTo","getVisibleFields","existsProperty","printError","createField","convertOptions","getComponentControl","hasFocus","componentClass","gridSmColumns","gridMdColumns","gridLgColumns","gridXlColumns","toLocaleLowerCase","isNumberType","isCurrencyType","isSelect","isRadioGroup","isCheckboxGroup","isMultiselect","Boolean","DateTime","Time","isCombo","isLookup","isTextarea","isPassword","optionsService","optionsMulti","Currency","searchService","secret","PoDynamicFormFieldsComponent","foundComponent","components","onChangeField","visibleField","getField","changedField","changedFieldIndex","validateField","triggerValidationOnForm","applyFieldValidation","updateFields","fieldIndex","previousDisabled","toPromise","TitleCasePipe","viewProviders","ControlContainer","PoDynamicViewBaseComponent","currencyPipe","datePipe","timePipe","dynamicViewService","_showAllValue","getConfiguredFields","newFields","getMergedFields","mergedFields","getValueFields","valueField","transformValue","classesGridColumns","cssClass","transformedValue","PoDynamicViewService","onLoad","PoDynamicViewComponent","showAllValue","updateValuesAndFieldsOnLoad","getValuesAndFieldsFromLoad","valueAndFieldsFromLoad","setFieldOnLoad","fieldOnLoad","setFieldsOnLoad","setValueOnLoad","newValue","CurrencyPipe","DatePipe","PoDynamicModule","PoGridCellActionComponent","onKeyDownContent","PoGridCellComponent","edit","editValue","freeze","tabIndex","valueChange","_width","onEditCell","dblclick","onBlurInput","onKeyDownInput","PoGridComponent","elRef","lastCell","lastRow","lastColumn","currencyCell","currencyRow","currencyColumn","logger","widporeeze","widthActions","rowActions","cssWidth","widthTableWrapper","tableWrapper","freezeColumns","prev","current","actionsColumns","cancelRow","x","isEmptyRow","removeRow","currencyObj","selectCell","beforeRemove","tableKeydown","direction","prow","pcol","saveRow","insertRow","tableClick","prop","beforeSave","requireds","beforeInsert","nextCell","PoGridHeadComponent","PoGridModule","poListViewLiteralsDefault","hideDetails","showDetails","PoListViewBaseComponent","showHeader","titleAction","_hideSelectAll","showMainHeader","_select","select","_showMoreDisabled","onClickAction","listViewAction","cleanItem","deleteInternalAttrs","runTitleAction","listItem","itemWithPublicProperties","selectAllListItems","selectListItem","checkIfItemsAreSelected","itemCopy","PoListViewContentTemplateDirective","PoListViewDetailTemplateDirective","PoListViewComponent","listViewContentTemplate","listViewDetailTemplate","ngAfterContentInit","initShowDetail","checkItemsChange","checkTitleType","propertyLink","getItemTitle","hasContentTemplate","propertyTitle","hasDetailTemplate","showDetail","overflow-y","PoListViewModule","PO_BADGE_COLORS","PoBadgeBaseComponent","setBadgeValue","validRangeValue","badgeValue","PoBadgeComponent","PoBadgeModule","poMenuLiteralsDefault","itemNotFound","PoMenuBaseComponent","menuService","_collapsed","_filter","_maxLevel","_menus","validateCollapseClass","menus","filteredItems","_service","_params","_logo","_shortLogo","setMenuExtraProperties","allowIcons","allowCollapseMenu","menuItem","_level","shortLabel","removeBadgeAlert","setMenuItemProperties","subItems","processSubItems","setMenuType","validateMenus","menu","validateMenu","menuItems","previousItem","maxLevel","setMenuBadgeAlert","subItem","parent","child","childHasSubItems","childHasBadgeAlert","childHasBadge","badge","PoMenuHeaderTemplateDirective","PoMenuItemsService","subjectParent","sendToParentMenuClicked","receiveFromChildMenuClicked","sendToChildMenuClicked","receiveFromParentMenuClicked","PoMenuService","PoMenuComponent","menuItemsService","filterLoading","mobileOpened","filteringItems","menuInitialized","menuPrevious","activeMenuItem","groupedMenuItem","isCollapsed","collapsedMobile","enableCollapseButton","menuCurrent","updateMenu","itemSubscription","routeSubscription","subscribeToMenuItem","subscribeToRoute","urlRouter","checkingRouterChildrenFragments","checkActiveMenuByUrl","activateMenuByUrl","urlPath","linkActive","activateMenuItem","validateToggleMenu","debounceFilter","timeoutFilter","filterProcess","clickMenuItem","events","NavigationEnd","NavigationCancel","toggleMenuMobile","createResizeListener","activateCollapseSubMenuItem","clearGroupMenuIfFirstLevel","isActiveItemMenuSubMenu","openParentMenu","active","grouped","activatedByRoute","areSubMenus","childrenPrimary","parseUrl","root","children","segments","it","executeMenuAction","groupMenuItem","convertToMenuItemFiltered","menuItemFiltered","toggleResize","filterItems","trimFilter","filterOnService","filterLocalItems","findItems","showNoData","catch","menuItemsFiltered","findParent","getParent","findRootParent","getRootParent","getActiveMenuParent","toggleMenuCollapse","isRootMenuEqualGroupedMenu","childMenu","toggleGroupedMenuItem","wrapper","PoMenuFilterComponent","PoMenuItemComponent","_isSelected","_isSubItem","maxHeight","_badgeValue","isSelectedSubItem","isSelected","isSubItem","_subItems","subitems","isOpened","calcMenuSubItemsMaxHeight","processMenuItem","level","accordionAnimation","menuActive","menuOpened","hasSubItemOpened","getMinimumHeight","activateMenu","menuSubItems","minimumHeight","hasSubItem","groupedMenu","isMenuOpened","PoMenuModule","PoMenuPanelBaseComponent","PoMenuPanelItemsService","PoMenuPanelComponent","location","rounterEvent","Location","PoMenuPanelItemComponent","itemsSubscription","subscribeMenuClickedFromParent","menuItemInternal","PoMenuPanelModule","PoNavbarActionComponent","PoNavbarActionPopupComponent","getLastIconAction","iconActions","PoNavbarActionsComponent","_iconActions","PoNavbarActionsModule","poNavbarLiteralsDefault","navbarLinks","PoNavbarBaseComponent","_shadow","validateMenuLogo","PoNavbarItemComponent","itemClick","PoNavbarItemsComponent","checkActiveItemByUrl","checkRouterChildrenFragments","PoNavbarComponent","builder","showItemsNavigation","offset","onMediaQueryChange","changed","changeNavbarMenuItems","matches","displayItemsNavigation","disableRight","initNavbarMenu","mediaQuery","removeListener","navigateItems","navigateLeft","navigateRight","allNavbarItemsWidth","navbarItems","allNavbarItems","previous","animation","buildTransitionAnimation","player","navbarItemsContainer","play","build","keyframes","isCollapsedMedia","calculateLeftNavigation","calculatedOffset","navbarItem","navbarItemOffset","offsetLeft","navbarItemWidth","navbarItemsWidth","calculateRightNavigation","itemBreakPoint","setOffsetToZero","matchMedia","addListener","navbarItemsElement","maxAllowedOffset","validateMaxOffset","logo","AnimationBuilder","PoNavbarItemsModule","PoNavbarLogoComponent","PoNavbarItemNavigationComponent","PoNavbarItemNavigationIconComponent","PoNavbarItemNavigationModule","PoNavbarModule","PoPageBaseComponent","PoPageComponent","PoPageContentBaseComponent","PoPageContentComponent","contentOpacity","overflowY","recalculateHeaderSize","pageHeaderElement","setHeightContent","poPageHeader","newHeight","PoPageDefaultBaseComponent","setDropdownActions","PoPageDefaultComponent","limitPrimaryActions","maxWidthMobile","setIsMobile","actionIsDisabled","callAction","hasPageHeader","dropdownActions","poPageDetailLiteralsDefault","back","PoPageDetailBaseComponent","hasAction","parentContext","PoStepperStatus","PoPageDetailComponent","callActionFn","hasActionFn","hasAnyAction","hasEditFn","hasEditOrRemoveFn","poPageEditLiteralsDefault","save","saveNew","PoPageEditBaseComponent","PoPageEditComponent","isPrimaryAction","getType","isCancelPrimaryAction","isSaveNewPrimaryAction","hasSaveAction","PoPageHeaderBaseComponent","_breadcrumb","PoPageHeaderComponent","poPageListLiteralsDefault","otherActions","PoPageListBaseComponent","_disclaimerGroup","PoPageListComponent","isRecalculate","advancedSearch","initializeFixedLiterals","callActionFilter","onkeypress","newModel","ngModel","onChangeDisclaimerGroup","disclaimerGroup","PoPageModule","PoSlideCirclesComponent","poSlideIntervalDefault","PoSlideBaseComponent","_interval","setSlideHeight","startInterval","cancelInterval","_slides","setSlideItems","startSlide","PoSlideContentTemplateDirective","PoSlideItemComponent","setLinkType","PoSlideComponent","isLoaded","currentSlideIndex","slideItems","slide","itemsElements","slideContentTemplate","slideItemWidth","slides","setSlideItemWidth","goToItem","hasElements","hasSlides","interval","nextControl","previousControl","setHeight","createArrayForTemplate","createArrayFromSlides","image","isImageSlide","poSlideDefaultHeight","imageHeight","first","itemElement","clearInterval","setInterval","PoSlideControlComponent","PoSlideModule","PoStepperOrientation","PoStepComponent","_status","Disabled","setDisplayOnActiveOrError","Active","PoStepperCircleComponent","Done","isLargeStep","poStepperOrientationDefault","PoStepperBaseComponent","_sequential","_step","_steps","onChangeStep","steps","sequential","PoStepperComponent","usePoSteps","poSteps","activeFirstStep","controlStepsStatus","getPoSteps","isDisabledStep","isErrorStep","changeStep","firstStep","getStepsAndIndex","currentActiveStep","stepIndex","nextStep","previousIndex","previousStep","isDifferentStep","allowNextStep","take","nextStepAllowed","currentStepIndex","onStepActive","previousActiveStep","stepChild","setPreviousStepAsDone","hasStepActive","poStep","nextStepIndex","isBeforeStep","switchMap","canActiveNextStep","getStepperStatusByCanActive","Observable","setStepAsActive","setNextStepAsDefault","setFinalSteppersAsDisabled","toArray","currentStep","PoStepperLabelComponent","poStepperStepSizeDefault","poStepLiteralsDefault","PoStepperStepComponent","_stepIcons","_stepSize","activated","_label","circleContent","stepIcons","stepSize","isVerticalOrientation","halfStepSize","getStatusClass","onEnter","PoStepperModule","PoTabButtonComponent","changeState","_active","emitActivated","_hide","setDisplayOnHide","hide","PoTabBaseComponent","setDisplayOnActive","PoTabComponent","PoTabDropdownComponent","tabs","getContainerClass","small","togglePopover","PoTabsBaseComponent","poTabsMaxNumberOfTabs","PoTabsComponent","maxNumberOfTabs","isMobileDevice","visibleTabs","_tab","closePopover","tabDropdown","isVisibleTab","visibleTabIndex","visibleTab","onTabActive","previousActiveTab","tabChild","deactivateTab","onTabChangeState","activeDistinctTab","selectedTab","_i","activeFirstTab","PoTabsModule","poToolbarActionsIconDefault","PoToolbarActionsComponent","_actionsIcon","PoToolbarBaseComponent","showNotification","_notificationNumber","profile","profileActions","PoToolbarComponent","titleService","setTitle","newTitle","Title","PoToolbarNotificationComponent","PoToolbarProfileComponent","avatar","PoToolbarModule","PoTreeViewBaseComponent","getItemsByMaxLevel","emitExpanded","treeViewItem","emitSelected","updateItemsOnSelect","addChildItemInParent","childItem","parentItem","addItem","expandParentItem","selectItemBySubItems","selectAllItems","everyItemSelected","itemsLength","lengthCheckedItems","newItems","currentItem","getItemsWithParentSelected","PoTreeViewService","expandedEvent","selectedEvent","emitExpandedEvent","emitSelectedEvent","onExpand","onSelect","PoTreeViewComponent","treeViewService","PoTreeViewItemComponent","visibility","PoTreeViewItemHeaderComponent","PoTreeViewModule","PoWidgetBaseComponent","_primary","onDisabled","setting","_background","_help","_primaryLabel","PoWidgetComponent","hasTitleHelpOrSetting","help","openHelp","runPrimaryAction","runSecondaryAction","bodyHeight","hasSettingOrHelp","noShadow","settingOutput","PoWidgetModule","PoComponentsModule","PoDirectivesModule","PoGuardsModule","poHttpInterceptorDetailLiteralsDefault","closeButton","details","PoHttpInterceptorDetailComponent","closed","filterByValidDetails","formatTitle","formatDetailItemTitle","code","typeColor","typeValue","addValidDetail","newDetails","getValidDetailProperties","detailedMessage","PoHttpInterceptorBaseService","componentInjector","notificationTypes","httpInterceptorDetailComponent","intercept","cloneRequest","clone","hasParameters","cloneRequestWithoutParameters","handle","processResponse","processErrorResponse","hasNoMessageParam","_messages","messages","errorResponse","hasNoErrorParam","headers","delete","createModal","responseMessage","destroyModal","hasMessage","hasMessageProperties","noErrorParam","noMessageParam","has","typeNotification","notificationAction","generateNotificationAction","generateDetailModal","notificationLabel","helpUrl","generateUrlHelpFunction","PoHttpInterceptorService","PoHttpInterceptorModule","HTTP_INTERCEPTORS","useClass","PoHttpRequesControltService","controlHttpRequest","getControlHttpRequest","send","PoHttpRequestInterceptorService","loadingOverlayComponent","pendingRequests","overlayRequests","requestClone","requestCloneWithoutHeaderParam","setCountPendingRequests","setCountOverlayRequests","catchError","throwError","getCountPendingRequests","buildLoading","destroyLoading","headersParams","isRequestClone","headerParam","isIncrement","hasCountPendingRequestHeaderParam","PoHttpRequestModule","PoInterceptorsModule","PoPipesModule","PoModule","I18N_CONFIG","InjectionToken","PoI18nBaseService","config","varI18n","useCache","servicesContext","setConfig","reload","contextDefault","setVarI18n","getLiterals","observer","getLiteralsFromContextService","getLiteralsFromContextConstant","translations","languageAlternative","languageSearch","mergeObject","searchInVarI18n","countObject","getLiteralsLocalStorageAndCache","translationTemp","searchInLocalStorage","updateVarI18n","getHttpService","updateLocalStorage","completeFaultLiterals","complete","literal","translation","content","contexts","contextContent","languageContent","objPermanent","tslib_1.__param","Inject","PoI18nService","returnPoI18nService","PoI18nModule","ngModule","PoI18nModule_1","useValue","APP_INITIALIZER","useFactory","initializeLanguageDefault","deps","default"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @description\n *\n * Componente utilizado para agrupar visualmente uma lista de conteÃºdos, mostrando-os individualmente\n * ao clicar no tÃ­tulo de cada item.\n *\n * Para utilizÃ¡-lo, Ã© necessÃ¡rio envolver cada item no componente [`po-accordion-item`](/documentation/po-accordion-item),\n * como no exemplo abaixo:\n *\n * ```\n * <po-accordion>\n *   <po-accordion-item p-label=\"Portinari Accordion 1\">\n *      Accordion 1\n *   </po-accordion-item>\n *\n *   <po-accordion-item p-label=\"Portinari Accordion 2\">\n *      Accordion 2\n *   </po-accordion-item>\n * </po-accordion>\n * ```\n *\n * O componente jÃ¡ faz o controle de abertura e fechamento dos itens automaticamente.\n *\n * Caso houver a necessidade de abrir algum dos `po-accordion-item` via Typescript\n * acesse a [documentaÃ§Ã£o do PoAccordionItem](/documentation/po-accordion-item).\n */\nexport class PoAccordionBaseComponent {}\n","import { Injectable } from '@angular/core';\n\nimport { Subject } from 'rxjs';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * ServiÃ§o para poder notificar o componente `po-accordion` quando um `po-accordion-item` for\n * expandido/colapsado.\n */\n@Injectable()\nexport class PoAccordionService {\n\n  private subjectChild = new Subject<any>();\n\n  // Recebe o accordionItem\n  receiveFromChildAccordionClicked() {\n    return this.subjectChild.asObservable();\n  }\n\n  // Envia accordionItem colapsado/expadido do accordion\n  sendToParentAccordionItemClicked(accordionItem: object) {\n    this.subjectChild.next(accordionItem);\n  }\n\n}\n","import { Component, Input, TemplateRef, ViewChild } from '@angular/core';\n\nimport { PoAccordionService } from '../services/po-accordion.service';\n\n/**\n * @description\n *\n * Componente utilizado para renderizar os itens do `po-accordion`.\n *\n * O componente `po-accordion` jÃ¡ faz o controle de abertura e fechamento dos itens automaticamente,\n * mas caso houver a necessidade de abrir algum dos `po-accordion-item` via Typescript, pode ser feita da seguinte forma:\n *\n * ```\n * <po-accordion>\n *   <po-accordion-item p-label=\"Portinari Accordion 1\" #item1>\n *      Accordion 1\n *   </po-accordion-item>\n *\n *   <po-accordion-item p-label=\"Portinari Accordion 2\">\n *      Accordion 2\n *   </po-accordion-item>\n * </po-accordion>\n * ```\n *\n * e no typescript pode-se utilizar o `@ViewChild`:\n *\n * ```\n *  @ViewChild(PoAccordionItemComponent, { static: true }) item1: PoAccordionItemComponent;\n *\n *  ngAfterContentInit() {\n *    // ou utilizar o mÃ©todo collapse()\n *    this.item1.expand();\n *  }\n * ```\n */\n@Component({\n  selector: 'po-accordion-item',\n  templateUrl: 'po-accordion-item.component.html'\n})\nexport class PoAccordionItemComponent {\n\n  expanded: boolean;\n\n  /** TÃ­tulo do item. */\n  @Input('p-label') label: string;\n\n  @ViewChild(TemplateRef, { static: true }) templateRef: TemplateRef<any>;\n\n  constructor(private accordionService: PoAccordionService) {}\n\n  /**\n   * MÃ©todo para colapsar o `po-accordion-item`.\n   */\n  collapse() {\n    this.expanded = false;\n\n    this.accordionService.sendToParentAccordionItemClicked(this);\n  }\n\n  /**\n   * MÃ©todo para expandir o `po-accordion-item`.\n   */\n  expand() {\n    this.expanded = true;\n\n    this.accordionService.sendToParentAccordionItemClicked(this);\n  }\n}\n","import { Component, ContentChildren, QueryList, OnDestroy } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { PoAccordionBaseComponent } from './po-accordion-base.component';\nimport { PoAccordionItemComponent } from './po-accordion-item/po-accordion-item.component';\nimport { PoAccordionService } from './services/po-accordion.service';\n\n/**\n * @docsExtends PoAccordionBaseComponent\n *\n * @example\n *\n * <example name=\"po-accordion-basic\" title=\"Portinari Accordion Basic\" >\n *  <file name=\"sample-po-accordion-basic/sample-po-accordion-basic.component.html\"> </file>\n *  <file name=\"sample-po-accordion-basic/sample-po-accordion-basic.component.ts\"> </file>\n *  <file name=\"sample-po-accordion-basic/sample-po-accordion-basic.component.e2e-spec.ts\"> </file>\n *  <file name=\"sample-po-accordion-basic/sample-po-accordion-basic.component.po.ts\"> </file>\n * </example>\n *\n * <example name=\"po-accordion-labs\" title=\"Portinari Accordion Labs\" >\n *  <file name=\"sample-po-accordion-labs/sample-po-accordion-labs.component.html\"> </file>\n *  <file name=\"sample-po-accordion-labs/sample-po-accordion-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-accordion-faq\" title=\"Portinari Accordion - FAQs\" >\n *  <file name=\"sample-po-accordion-faq/sample-po-accordion-faq.component.html\"> </file>\n *  <file name=\"sample-po-accordion-faq/sample-po-accordion-faq.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-accordion',\n  templateUrl: 'po-accordion.component.html',\n  providers: [ PoAccordionService ]\n})\nexport class PoAccordionComponent extends PoAccordionBaseComponent implements OnDestroy {\n\n  private accordionServiceSubscription: Subscription;\n  private expandedActiveAccordionItem: PoAccordionItemComponent;\n\n  @ContentChildren(PoAccordionItemComponent) poAccordionItems: QueryList<PoAccordionItemComponent>;\n\n  constructor(private accordionService: PoAccordionService) {\n    super();\n    this.receiveFromChildAccordionSubscription();\n  }\n\n  ngOnDestroy() {\n    this.accordionServiceSubscription.unsubscribe();\n  }\n\n  headerToggle(event: boolean, poAccordionItem: PoAccordionItemComponent) {\n    poAccordionItem.expanded = event;\n\n    this.toggle(poAccordionItem);\n  }\n\n  private receiveFromChildAccordionSubscription() {\n    this.accordionServiceSubscription = this.accordionService.receiveFromChildAccordionClicked()\n      .subscribe(poAccordionItem => this.toggle(poAccordionItem));\n  }\n\n  private toggle(poAccordionItem: PoAccordionItemComponent) {\n    const isCurrentAccordionCollapsed = !poAccordionItem.expanded;\n\n    if (isCurrentAccordionCollapsed) {\n      this.expandedActiveAccordionItem = null;\n      return;\n    }\n\n    if (this.expandedActiveAccordionItem) {\n      this.expandedActiveAccordionItem.collapse();\n    }\n\n    this.expandedActiveAccordionItem = poAccordionItem;\n  }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { animate, style, transition, trigger } from '@angular/animations';\n\n@Component({\n  selector: 'po-accordion-item-body',\n  templateUrl: 'po-accordion-item-body.component.html',\n  animations: [\n    trigger('toggleBody', [\n      transition('* => void', [\n        style({ height: '*'}),\n        animate(200, style({ height: 0 }))\n      ]),\n      transition('void => *', [\n        style({ height: '0'}),\n        animate(200, style({ height: '*' }))\n      ])\n    ])\n  ]\n})\nexport class PoAccordionItemBodyComponent {\n\n  @Input('p-expanded') expanded: boolean = false;\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'po-accordion-item-header',\n  templateUrl: 'po-accordion-item-header.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoAccordionItemHeaderComponent {\n\n  @Input('p-expanded') expanded: boolean = false;\n\n  @Input('p-label') label: string;\n\n  @Output('p-toggle') toggle = new EventEmitter<boolean>();\n\n  onClick() {\n    this.expanded = !this.expanded;\n\n    this.toggle.emit(this.expanded);\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoAccordionComponent } from './po-accordion.component';\nimport { PoAccordionItemBodyComponent } from './po-accordion-item-body/po-accordion-item-body.component';\nimport { PoAccordionItemComponent } from './po-accordion-item/po-accordion-item.component';\nimport { PoAccordionItemHeaderComponent } from './po-accordion-item-header/po-accordion-item-header.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente `po-accordion`.\n *\n * > Para o correto funcionamento do componente `po-accordion`, deve ser importado o mÃ³dulo `BrowserAnimationsModule` no\n * > mÃ³dulo principal da sua aplicaÃ§Ã£o.\n *\n * MÃ³dulo da aplicaÃ§Ã£o:\n * ```\n * import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n * import { PoModule } from '@portinari/portinari-ui';\n * ...\n *\n * @NgModule({\n *   imports: [\n *     BrowserModule,\n *     BrowserAnimationsModule,\n *     ...\n *     PoModule\n *   ],\n *   declarations: [\n *     AppComponent,\n *     ...\n *   ],\n *   providers: [],\n *   bootstrap: [AppComponent]\n * })\n * export class AppModule { }\n * ```\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    PoAccordionComponent,\n    PoAccordionItemBodyComponent,\n    PoAccordionItemComponent,\n    PoAccordionItemHeaderComponent\n  ],\n  exports: [\n    PoAccordionComponent,\n    PoAccordionItemComponent\n  ]\n})\nexport class PoAccordionModule { }\n","import { Input } from '@angular/core';\n\nconst PO_AVATAR_SIZES = ['xs', 'sm', 'md', 'lg', 'xl'];\nconst PO_AVATAR_SIZE_DEFAULT = 'md';\n\n/**\n * @description\n *\n * O componente `po-avatar` Ã© um container para imagens em miniatura, possui um formato redondo e cinco opÃ§Ãµes de\n * tamanho, pode ser utilizado para mostrar a foto do perfil de um usuÃ¡rio, entre outras possibilidades.\n *\n * AlÃ©m de poder ser utilizado separadamente, Ã© possÃ­vel usar o `po-avatar` juntamente com outros componentes e criar\n * layouts ricos e bem interessantes para os usuÃ¡rios, como por exemplo, uma lista de itens ou produtos.\n */\nexport class PoAvatarBaseComponent {\n  private _size: string = 'md';\n\n  /**\n   * Fonte da imagem que pode ser um caminho local (`./assets/images/logo-black-small.png`)\n   * ou um servidor externo (`https://portinari.io/assets/images/logo-black-small.png`).\n   */\n  @Input('p-src') src: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Tamanho de exibiÃ§Ã£o do componente.\n   *\n   * Valores vÃ¡lidos:\n   *  - `xs` (24x24)\n   *  - `sm` (32x32)\n   *  - `md` (64x64)\n   *  - `lg` (96x96)\n   *  - `xl` (144x144)\n   *\n   * @default `md`\n   */\n  @Input('p-size') set size(value: string) {\n    this._size = PO_AVATAR_SIZES.includes(value) ? value : PO_AVATAR_SIZE_DEFAULT;\n  }\n  get size(): string {\n    return this._size;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { PoAvatarBaseComponent } from './po-avatar-base.component';\n\n/**\n * @docsExtends PoAvatarBaseComponent\n *\n * @example\n *\n * <example name=\"po-avatar-basic\" title=\"Portinari Avatar Basic\" >\n *  <file name=\"sample-po-avatar-basic/sample-po-avatar-basic.component.html\"> </file>\n *  <file name=\"sample-po-avatar-basic/sample-po-avatar-basic.component.ts\"> </file>\n *  <file name=\"sample-po-avatar-basic/sample-po-avatar-basic.component.e2e-spec.ts\"> </file>\n *  <file name=\"sample-po-avatar-basic/sample-po-avatar-basic.component.po.ts\"> </file>\n * </example>\n *\n * <example name=\"po-avatar-labs\" title=\"Portinari Avatar Labs\" >\n *  <file name=\"sample-po-avatar-labs/sample-po-avatar-labs.component.html\"> </file>\n *  <file name=\"sample-po-avatar-labs/sample-po-avatar-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-avatar-business-card\" title=\"Portinari Avatar - Business Card\" >\n *  <file name=\"sample-po-avatar-business-card/sample-po-avatar-business-card.component.html\"> </file>\n *  <file name=\"sample-po-avatar-business-card/sample-po-avatar-business-card.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-avatar',\n  templateUrl: './po-avatar.component.html'\n})\nexport class PoAvatarComponent extends PoAvatarBaseComponent implements OnInit {\n\n  ngOnInit(): void {\n    if (!this.src) {\n      this.src = undefined;\n    }\n  }\n\n  onError(): void {\n    this.src = undefined;\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoAvatarComponent } from './po-avatar.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente po-avatar.\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    PoAvatarComponent\n  ],\n  exports: [\n    PoAvatarComponent\n  ]\n})\nexport class PoAvatarModule { }\n","import { Input } from '@angular/core';\n\nimport { PoBreadcrumbItem } from './po-breadcrumb-item.interface';\n\n/**\n * @description\n *\n * Este componente gera uma estrutura de navegaÃ§Ã£o que apresenta ao usuÃ¡rio a localizaÃ§Ã£o\n * da URL atual, exibindo as antecessoras conforme Ã© realizado a navegaÃ§Ã£o na aplicaÃ§Ã£o.\n *\n * Quando nÃ£o houver espaÃ§amento suficiente para exibi-lÃ¡s, o componente se encarrega tambÃ©m\n * de agrupar as URLs antecessoras, gerando assim um Ã­cone que permite a visualizaÃ§Ã£o em cascata.\n *\n * Caso um endereÃ§o seja especificado na propriedade `p-favorite-service`, o componente permite ao usuÃ¡rio\n * favoritar a URL.\n *\n * Havendo necessidade de incluir parÃ¢metros na requisiÃ§Ã£o do serviÃ§o,\n * o componente dispÃµe da propriedade `p-params-service` que recebe um objeto contendo as informaÃ§Ãµes.\n */\nexport class PoBreadcrumbBaseComponent {\n\n  itemsView: Array<PoBreadcrumbItem> = [];\n  private _items: Array<PoBreadcrumbItem> = [];\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Permite definir uma URL no componente `po-breadcrumb` para favoritar ou desfavoritar.\n   * > Para utilizar esta propriedade, o Ãºltimo `PoBreadcrumbItem` da lista de items da propriedade `p-items` deve ter um link informado.\n   *\n   * > A API deve estar preparada para retornar um objeto no formato `{ isFavorite: boolean }`.\n   *\n   * Ao iniciar, o `po-breadcrumb` faz um GET na URL definida na propriedade `p-favorite-service` e deve retornar a propriedade\n   * `{ isFavorite: boolean }` do Ãºltimo `PoBreadcrumbItem` definido na lista de itens da propriedade `p-items`.\n   *\n   * Ao clicar em favoritar ou desfavoritar o `po-breadcrumb` faz um POST com o link e a propriedade `{ isFavorite: boolean }`\n   * definidos no Ãºltimo item da propriedade `p-items`.\n   *\n   * > Caso algum parÃ¢metro seja definido na propriedade `p-params-service`, o mesmo serÃ¡ enviado para a API e retornarÃ¡\n   * apÃ³s fazer um GET ou POST.\n   *\n   * Exemplo de URL contendo o serviÃ§o de favoritar ou desfavoritar:\n   *\n   * ```\n   * https://portinari.io/sample/api/favorite\n   * ```\n   *\n   * Ao fazer o GET o `po-breadcrumb` concatena o link com a URL de serviÃ§o. Exemplo:\n   *\n   * ```\n   * GET http://<domain>/api/favorite?url=/example\n   * ```\n   *\n   * ```\n   * GET http://po.portinari.com.br/sample/api/favorite?url=/example\n   * ```\n   *\n   * ```\n   * POST\n   * payload: { isFavorite: true, url: '/example' }\n   * ```\n   *\n   * Caso possua parÃ¢metros definidos na propriedade `p-params-service`:\n   *\n   * ```\n   * POST\n   * payload: { isFavorite: true, url: \"/example\", params: \"{ id: 14, user: 'dev.portinari' }\" }\n   * ```\n   *\n   * Exemplos de retorno:\n   *\n   * ```\n   * { isFavorite: true, url: \"/example\" }\n   * ```\n   *\n   * ```\n   * { isFavorite: false, url: \"/example\" }\n   * ```\n   *\n   * ```\n   * { isFavorite: false, url: \"/example\", params: \"{ id: 14, user: 'dev.portinari' }\" }\n   * ```\n   */\n  @Input('p-favorite-service') favoriteService?: string;\n\n  /**\n   * @description\n   *\n   * Lista de itens do _breadcrumb_.\n   *\n   * **Exemplo:**\n   * ```\n   * { label: 'Po Portal', link: 'portal' }\n   * ```\n   */\n  @Input('p-items') set items(items: Array<PoBreadcrumbItem>) {\n    this._items = items;\n    this.itemsView = [].concat(items);\n  }\n\n  get items() {\n    return this._items;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto que possibilita o envio de parÃ¢metros adicionais Ã  requisiÃ§Ã£o.\n   */\n  @Input('p-params-service') paramsService?: object;\n\n  protected clickoutListener: () => void;\n\n  protected resizeListener: () => void;\n\n}\n","import { AfterViewInit, Component, DoCheck, ElementRef, IterableDiffers, OnDestroy, Renderer2, ViewChild } from '@angular/core';\n\nimport { PoBreadcrumbBaseComponent } from './po-breadcrumb-base.component';\nimport { PoBreadcrumbItem } from './po-breadcrumb-item.interface';\n\n/**\n * @docsExtends PoBreadcrumbBaseComponent\n *\n * @example\n *\n * <example name=\"po-breadcrumb-basic\" title=\"Portinari Breadcrumb Basic\">\n *  <file name=\"sample-po-breadcrumb-basic/sample-po-breadcrumb-basic.component.html\"> </file>\n *  <file name=\"sample-po-breadcrumb-basic/sample-po-breadcrumb-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-breadcrumb-labs\" title=\"Portinari Breadcrumb Labs\">\n *  <file name=\"sample-po-breadcrumb-labs/sample-po-breadcrumb-labs.component.html\"> </file>\n *  <file name=\"sample-po-breadcrumb-labs/sample-po-breadcrumb-labs.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-breadcrumb',\n  templateUrl: './po-breadcrumb.component.html'\n})\nexport class PoBreadcrumbComponent extends PoBreadcrumbBaseComponent implements AfterViewInit, DoCheck, OnDestroy {\n\n  showDropdown: boolean = false;\n  showDropdownToggle: boolean = false;\n  dropdownItems: Array<PoBreadcrumbItem>;\n\n  private _breadcrumbItemsLenght: number = 0;\n  private calculatedElement = false;\n  private differ;\n  private hiddenWithoutResize = false;\n  private initialized = false;\n  private timeoutResize;\n\n  @ViewChild('breadcrumb', { read: ElementRef, static: true }) breadcrumbElement: ElementRef;\n  @ViewChild('dropdownIcon', { read: ElementRef, static: false }) dropdownIcon: ElementRef;\n\n  constructor(differs: IterableDiffers, private element: ElementRef, public renderer: Renderer2) {\n    super();\n    this.differ = differs.find([]).create(null);\n  }\n\n  ngAfterViewInit() {\n    this.initialized = true;\n\n    this.initializeResizeListener();\n  }\n\n  ngDoCheck() {\n    const breadcrumbWidth = this.breadcrumbElement.nativeElement.offsetWidth;\n\n    // Permite que os disclaimers sejam calculados na primeira vez que o componente torna-se visÃ­vel,\n    // evitando com isso, problemas com Tabs ou Divs que iniciem escondidas.\n    if (breadcrumbWidth && !this.calculatedElement && this.initialized) {\n      this.initBreadcrumbSize();\n    }\n\n    if (this.hiddenWithoutResize) {\n      this.debounceResize();\n      this.hiddenWithoutResize = false;\n    }\n\n    this.checkChangeOnItems();\n  }\n\n  ngOnDestroy() {\n    this.removeClickoutListener();\n    this.removeResizeListener();\n  }\n\n  toggleDropdown() {\n    this.showDropdown = !this.showDropdown;\n    this.initializeClickoutListener();\n  }\n\n  private wasClickedonDropdown = (event: MouseEvent) => {\n    const clickedOutIconDropdown = this.checkClickOutElement(event, this.dropdownIcon);\n\n    if (clickedOutIconDropdown) {\n      this.showDropdown = false;\n      this.removeClickoutListener();\n    }\n  }\n\n  private checkClickOutElement(event, element) {\n    return element && !element.nativeElement.contains(event.target);\n  }\n\n  private checkChangeOnItems() {\n    if (this.differ) {\n      const changes = this.differ.diff(this.items);\n      if (changes) {\n        this.calcBreadcrumbItemsWidth();\n        this.calculatedElement = false;\n      }\n    }\n  }\n\n  private calcBreadcrumb() {\n    const breadcrumbFavorite = this.getBreadcrumbFavoriteWidth();\n    const breadcrumb = this.getBreadcrumbWidth(breadcrumbFavorite);\n\n    if (breadcrumb <= this._breadcrumbItemsLenght) {\n      this.enableBreadcrumbResponsive();\n    } else {\n      this.disableBreadcrumbResponsive();\n    }\n  }\n\n  private getBreadcrumbFavoriteWidth() {\n    return this.favoriteService ? this.element.nativeElement\n      .querySelector('.po-breadcrumb-favorite').offsetWidth + 20 : 0;\n  }\n\n  private getBreadcrumbWidth(breadcrumbFavorite) {\n    return this.element.nativeElement.querySelector('.po-breadcrumb').offsetWidth - breadcrumbFavorite;\n  }\n\n  private calcBreadcrumbItemsWidth() {\n    const breadcrumbItem = this.element.nativeElement\n      .querySelectorAll('.po-breadcrumb-item, .po-breadcrumb-item-unclickable');\n\n    this._breadcrumbItemsLenght = Array.from(breadcrumbItem)\n      .map(breadcrumb => breadcrumb['offsetWidth'])\n      .reduce((a, b) => a + b, 16);\n  }\n\n  private enableBreadcrumbResponsive() {\n    this.showDropdownToggle = true;\n    this.itemsView = this.items.slice(-2);\n    this.dropdownItems = this.items.slice(0, -2).reverse();\n  }\n\n  private disableBreadcrumbResponsive() {\n    this.showDropdownToggle = false;\n    this.itemsView = [].concat(this.items);\n    this.showDropdown = false;\n  }\n\n  private debounceResize() {\n    clearTimeout(this.timeoutResize);\n    this.timeoutResize = setTimeout(() => {\n\n      if (this.calculatedElement && !this.hiddenWithoutResize && this.breadcrumbElement.nativeElement.offsetWidth === 0) {\n        this.hiddenWithoutResize = true;\n      } else {\n        this.calcBreadcrumb();\n      }\n\n    }, 50);\n  }\n\n  private initBreadcrumbSize() {\n    this.calcBreadcrumbItemsWidth();\n    this.calcBreadcrumb();\n    this.calculatedElement = true;\n  }\n\n  private initializeClickoutListener() {\n    this.clickoutListener = this.renderer.listen('document', 'click', this.wasClickedonDropdown);\n  }\n\n  private initializeResizeListener() {\n    this.resizeListener = this.renderer.listen('window', 'resize', (event: MouseEvent) => {\n      this.debounceResize();\n    });\n  }\n\n  private removeClickoutListener() {\n    if (this.clickoutListener) {\n      this.clickoutListener();\n    }\n  }\n\n  private removeResizeListener() {\n    this.resizeListener();\n  }\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { PoBreadcrumbItem } from './../po-breadcrumb-item.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que renderiza o dropdown do po-breadcrumb.\n */\n@Component({\n  selector: 'po-breadcrumb-dropdown',\n  templateUrl: './po-breadcrumb-dropdown.component.html'\n})\nexport class PoBreadcrumbDropdownComponent {\n\n  // Itens a serem apresentados na lista do dropdown.\n  @Input('p-items') items: Array<PoBreadcrumbItem>;\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * ServiÃ§o utilizado para favoritar/desfavoritar uma url no componente po-breadcrumb.\n * A API deve retornar um objeto no formato { isFavorite: booleano, url: string }. Em ambos os mÃ©todos, GET e POST este\n * objeto deve ser retornado.\n * Ao alterar o status de favorito, a API deve retornar o objeto acima, com o novo status atualizado.\n * No mÃ©todo POST, existe a possibilidade de ser enviado parÃ¢metros junto com a requisiÃ§Ã£o. Neste caso, o objeto enviado\n * para a API terÃ¡ o formato: { isFavorite: booleano, url: string, params: {} }, onde params Ã© o objeto que pode ser enviado\n * junto com a requisiÃ§Ã£o.\n *\n */\n@Injectable()\nexport class PoBreadcrumbFavoriteService {\n\n  private _url: string;\n  private _bodyParams: object;\n\n  get url(): string { return this._url; }\n\n  get bodyParams(): object { return this._bodyParams; }\n\n  constructor(private http: HttpClient) { }\n\n  configService(url, params, item) {\n    this._url = url;\n    this._bodyParams = {\n      isFavorite: false,\n      url: item.link,\n      params: params\n    };\n  }\n\n  sendStatusFavorite(status): Observable<any> {\n    this.bodyParams['isFavorite'] = status;\n    return this.http.post(this.url, this.bodyParams);\n  }\n\n  getFavorite(): Observable<any> {\n    return this.http.get(this.url, { responseType: 'json', params: { url: this.bodyParams['url'] }});\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { PoBreadcrumbItem } from './../po-breadcrumb-item.interface';\nimport { PoBreadcrumbFavoriteService } from './po-breadcrumb-favorite.service';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que renderiza o serviÃ§o de favoritar do po-breadcrumb.\n */\n@Component({\n  selector: 'po-breadcrumb-favorite',\n  templateUrl: './po-breadcrumb-favorite.component.html',\n  providers: [PoBreadcrumbFavoriteService]\n})\nexport class PoBreadcrumbFavoriteComponent implements OnInit, OnDestroy {\n\n  favorite: boolean = false;\n  private getSubscription: Subscription;\n  private setSubscription: Subscription;\n\n  // URL do serviÃ§o.\n  @Input('p-favorite-service') favoriteService: string;\n\n  // Item do breadcrumb ativo.\n  @Input('p-item-active') itemActive: PoBreadcrumbItem;\n\n  // ParÃ¢metro que serÃ¡ enviado junto com o serviÃ§o de favoritar.\n  @Input('p-params-service') paramsService: object;\n\n  constructor(private service: PoBreadcrumbFavoriteService) { }\n\n  ngOnInit() {\n    this.service.configService(this.favoriteService, this.paramsService, this.itemActive);\n    this.getStatusFavorite();\n  }\n\n  ngOnDestroy(): void {\n\n    if (this.getSubscription) {\n      this.getSubscription.unsubscribe();\n    }\n\n    if (this.setSubscription) {\n      this.setSubscription.unsubscribe();\n    }\n  }\n\n  toggleFavoriteAction() {\n    this.favorite ? this.setStatusFavorite(false) : this.setStatusFavorite(true);\n  }\n\n  private getStatusFavorite() {\n    this.getSubscription = this.service.getFavorite().subscribe(result => this.favorite = result.isFavorite);\n  }\n\n  private setStatusFavorite(status) {\n    this.setSubscription = this.service.sendStatusFavorite(status).subscribe(result => this.favorite = result.isFavorite);\n  }\n\n}\n","import { Component, Input } from '@angular/core';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que renderiza cada item do po-breadcrumb.\n */\n@Component({\n  selector: 'po-breadcrumb-item',\n  templateUrl: './po-breadcrumb-item.component.html'\n})\nexport class PoBreadcrumbItemComponent {\n\n  // AÃ§Ã£o que serÃ¡ executada ao clicar sobre o item.\n  @Input('p-action') action: Function;\n\n  // Label do item.\n  @Input('p-label') label: string;\n\n  // Link do item.\n  @Input('p-link') link: string;\n\n  // Especifica se item Ã© o link ativo.\n  @Input('p-item-active') itemActive: boolean = false;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoBreadcrumbComponent } from './po-breadcrumb.component';\nimport { PoBreadcrumbDropdownComponent } from './po-breadcrumb-dropdown/po-breadcrumb-dropdown.component';\nimport { PoBreadcrumbFavoriteComponent } from './po-breadcrumb-favorite/po-breadcrumb-favorite.component';\nimport { PoBreadcrumbItemComponent } from './po-breadcrumb-item/po-breadcrumb-item.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente po-breadcrumb.\n *\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule\n  ],\n  declarations: [\n    PoBreadcrumbComponent,\n    PoBreadcrumbDropdownComponent,\n    PoBreadcrumbFavoriteComponent,\n    PoBreadcrumbItemComponent\n  ],\n  exports: [PoBreadcrumbComponent]\n})\nexport class PoBreadcrumbModule { }\n","// Idiomas suportados pelas pÃ¡ginas\nexport const poLocales = ['pt', 'en', 'es', 'ru'];\n// Idioma padrÃ£o\nexport const poLocaleDefault = 'pt';\n\n/**\n * @deprecated\n * Utilize o mÃ©todo `getShortBrowserLanguage`.\n *\n * @description\n * Retorna idioma do browser ou o idioma padrÃ£o.\n */\nexport function browserLanguage() {\n  return getShortBrowserLanguage();\n}\n\n/**\n * Converte e formata os bytes em formato mais legÃ­vel para o usuÃ¡rio.\n *\n * Por exemplo:\n * - 31457280 em 30 MB.\n * - 21474836480 em 20 GB.\n * - 12.5666666 em 12.57 Bytes (duas casas decimais).\n *\n * @param bytes {number} Valor em bytes\n * @param decimals {number} Quantidade de casas decimais que terÃ¡ apÃ³s a conversÃ£o.\n */\nexport function formatBytes(bytes: number, decimals = 2): string {\n\n  if (!bytes) {\n    return undefined;\n  }\n\n  const multiplier = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n  const result = Math.floor(Math.log(bytes) / Math.log(multiplier));\n  decimals = decimals < 0 ? 0 : decimals;\n\n  return `${parseFloat((bytes / Math.pow(multiplier, result)).toFixed(decimals))} ${sizes[result]}`;\n}\n\n/**\n * Retorna o idioma atual do navegador\n */\nexport function getBrowserLanguage(): string {\n  // navigator.userLanguage is the value for IE10\n  const language = navigator.language || navigator['userLanguage'];\n  const shortLanguage = getShortLanguage(language);\n\n  return poLocales.includes(shortLanguage) ? language : poLocaleDefault;\n}\n\n/**\n * Retorna o idioma do navegador, com somente as duas primeiras letras. Por exemplo: \"pt\" ou \"es\".\n *\n * Caso o valor retornado pelo navegador nÃ£o estiver dentro dos idiomas suportados pelo PO,\n * serÃ¡ retornado a linguagem padrÃ£o (poLocaleDefault).\n */\nexport function getShortBrowserLanguage(): string {\n  return getShortLanguage(getBrowserLanguage());\n}\n\n/**\n * Retorna o idioma com somente a abreviaÃ§Ã£o do idioma (duas primeiras letras).\n * Por exemplo: \"pt\" ou \"es\".\n *\n * @param language {string} linguagem.\n *\n * @returns sigla do idioma padrÃ£o {string}.\n *\n * @default pt\n */\nexport function getShortLanguage(language: string): string {\n  return (language || poLocaleDefault).toLowerCase().substring(0, 2);\n}\n\nexport function isLanguage(value) {\n  const languageRegex = new RegExp('^[a-z]{2}(\\-[a-z]{2})?$', 'i');\n\n  return languageRegex.test(value);\n}\n\n/* istanbul ignore next */\nexport function reloadCurrentPage() {\n  window.location.assign(location.href);\n}\n\nexport function convertToBoolean(val: any): boolean {\n  if (typeof val === 'string') {\n    val = val.toLowerCase().trim();\n    return (val === 'true' || val === 'on' || val === '');\n  }\n\n  if (typeof val === 'number') {\n    return val === 1;\n  }\n\n  return !!val;\n}\n\nexport function convertToInt(value: any, valueDefault?: any): number {\n  const validNumber = parseInt(value, 10);\n  const validDefaultValue = parseInt(valueDefault, 10);\n  const defaultValue = validDefaultValue || validDefaultValue === 0 ? validDefaultValue : undefined;\n\n  return validNumber || validNumber === 0 ? validNumber : defaultValue;\n}\n\nexport function isTypeof(object: any, type: any) {\n  return typeof object === type;\n}\n\n/**\n *\n * @param fn FunÃ§Ã£o que serÃ¡ executada dentro do contexto. Podendo ser o nome da funÃ§Ã£o\n * ou a referÃªncia da mesma.\n *\n * @param context Contexto do qual a funÃ§Ã£o serÃ¡ executada.\n */\nexport function callFunction(fn: any, context: any, param?): void {\n  if (isTypeof(fn, 'function')) {\n    fn.call(context, param);\n  } else {\n    context[fn](param);\n  }\n}\n\nexport function convertIsoToDate(value: string , start: boolean, end: boolean) {\n  if (value) {\n    const day = parseInt(value.substring(8, 10), 10);\n    const month = parseInt(value.substring(5, 7), 10);\n    const year = parseInt(value.substring(0, 4), 10);\n    if (start) {\n      const date = new Date(year, month - 1, day, 0, 0, 0);\n\n      setYearFrom0To100(date, year);\n\n      return date;\n    } else if (end) {\n      const date = new Date(year, month - 1, day, 23, 59, 59);\n\n      setYearFrom0To100(date, year);\n\n      return date;\n    } else {\n      const milliseconds = Date.parse(value);\n      const timezone = new Date().getTimezoneOffset() * 60000;\n      return new Date(milliseconds + timezone);\n    }\n  }\n}\n\nexport function convertDateToISODate(date: Date) {\n  if (date) {\n    const getMonth = date.getMonth() + 1;\n    const day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();\n    const month = getMonth < 10 ? '0' + getMonth : getMonth;\n    const year = formatYear(date.getFullYear());\n\n    return year + '-' + month + '-' + day;\n  } else {\n    return null;\n  }\n}\n\nexport function convertDateToISOExtended(date: Date, time?: string) {\n  if (date) {\n\n  const getMonth = date.getMonth() + 1;\n  const day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();\n  const month = getMonth < 10 ? '0' + getMonth : getMonth;\n  const year = formatYear(date.getFullYear());\n\n  const dateString = date.toString();\n\n  if (time !== null) {\n    return year + '-' + month + '-' + day + time;\n  } else {\n    return year + '-' + month + '-' + day + 'T' + dateString.substring(16, 24) +\n        dateString.substring(28, 31) + ':' + dateString.substring(31, 33);\n  }\n  } else {\n    return null;\n  }\n}\n\n/**\n * Transforma o ano em uma string no formato yyyy e caso o ano seja menor que 1000 preenche com zeros a esquerda.\n * @param year Ano\n */\nexport function formatYear(year: number) {\n\n  if (year >= 1000) {\n    return year.toString();\n  }\n\n  if (year > 99 && year < 1000) {\n    return `0${year}`;\n  }\n\n  if (year > 9 && year < 100) {\n    return `00${year}`;\n  }\n\n  if (year >= 0 && year < 10) {\n    return `000${year}`;\n  }\n\n}\n// Verifica se o navegador em que estÃ¡ sendo usado Ã© Internet Explorer ou Edge\nexport function isIEOrEdge() {\n  const userAgent = window.navigator.userAgent;\n\n  return /msie\\s|trident\\/|edge\\//i.test(userAgent);\n}\n\n// Verifica se o navegador em que estÃ¡ sendo usado Ã© Internet Explorer\nexport function isIE() {\n  const userAgent = window.navigator.userAgent;\n\n  return /msie\\s|trident/i.test(userAgent);\n}\n\n// Verifica se o navegador em que estÃ¡ sendo usado Ã© Firefox\nexport function isFirefox() {\n  const userAgent = window.navigator.userAgent;\n\n  return userAgent.toLowerCase().indexOf('firefox') > -1;\n}\n\n// Verifica qual o dispositivo que estÃ¡ sendo usado\nexport function isMobile() {\n  const userAgent = window.navigator.userAgent;\n\n  return userAgent.match(/Android|webOS|iPhone|iPad|iPod|BlackBerry|Windows Phone/i);\n}\n\nexport function isEquals(value, comparedValue) {\n  return JSON.stringify(value) === JSON.stringify(comparedValue);\n}\n\nexport function isKeyCodeEnter(event: any): boolean {\n  return event.keyCode === 13 || event.which === 13;\n}\n\n/**\n * Caso o ano original da data seja entre 0 e 100 atribui esse valor ao ano, pois o `new Date` do javascript transforma o ano para 190X.\n * @param date Data\n * @param year Ano original\n */\nexport function setYearFrom0To100(date: Date, year: number) {\n  if (year >= 0 && year < 100 ) {\n    date.setFullYear(year);\n  }\n}\n\nexport function sortOptionsByProperty(options: Array<any>, property: string) {\n  options.sort((optionA, optionB) => {\n    optionA = optionA[property].toString().toLowerCase();\n    optionB = optionB[property].toString().toLowerCase();\n\n    if (optionA < optionB) {\n      return -1;\n    }\n    if (optionA > optionB) {\n      return 1;\n    }\n    return 0;\n  });\n}\n\nexport function removeDuplicatedOptions(list: Array<any>) {\n  for (let i = 0; i < list.length; i++) {\n    if (i === 0) { continue; }\n\n    if (list.findIndex(op => op.value === list[i].value) !== i) {\n      list.splice(i, 1);\n      i--;\n    }\n  }\n}\n\nexport function removeUndefinedAndNullOptions(list: Array<any>) {\n  for (let i = 0; i < list.length; i++) {\n    if (list[i].value === undefined || list[i].value === null ) {\n      list.splice(i, 1);\n      i--;\n    }\n  }\n}\n\nexport function validValue(value: any) {\n  return (value !== null && value !== undefined && value !== '') || value === false;\n}\n\nexport function isExternalLink(url): boolean {\n  return url ? url.startsWith('http') : false;\n}\n\nexport function openExternalLink(url): void {\n  window.open(url, '_blank');\n}\n\nexport function  getFormattedLink(link: string): string {\n  let formattedLink = '';\n  // Retira todos os pontos no comeÃ§o da URL.\n  if (link) {\n    formattedLink = link.replace(/^(\\.)+/g, '');\n  }\n  // Verifica se foi utilizado uma rota que nÃ£o comece com barra.\n  if (!formattedLink.startsWith('/')) {\n    formattedLink = '/'.concat(formattedLink);\n  }\n  return formattedLink;\n}\n\n/**\n * MÃ©todo responsÃ¡vel por ordenar dois valores.\n *\n * @param leftSide Primeiro valor a ser comparado.\n * @param rightSide Segundo valor a ser comparado.\n * @param ascending Determina se serÃ¡ em ordem ascendente ou descendente.\n */\nexport function sortValues(leftSide: string, rightSide: string, ascending: boolean = true): number {\n  const left = isTypeof(leftSide, 'string') ? leftSide.toLowerCase() : leftSide;\n  const right = isTypeof(rightSide, 'string') ? rightSide.toLowerCase() : rightSide;\n\n  if (ascending) {\n    if (left < right) {\n      return -1;\n    } else if (left > right) {\n      return 1;\n    }\n  } else if (ascending === false) {\n    if (left < right) {\n      return 1;\n    } else if (left > right) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nexport function validateDateRange(date: Date, dateStart: Date, dateEnd: Date) {\n  if (dateStart && dateEnd) {\n    return (date >= dateStart && date <= dateEnd);\n  } else if (dateStart && !dateEnd) {\n    return (date >= dateStart);\n  } else if (!dateStart && dateEnd) {\n    return (date <= dateEnd);\n  } else {\n    return true;\n  }\n}\n\nexport function uuid() {\n  function hex4() {\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  }\n\n  return hex4() + hex4() + '-' + hex4() + '-' + hex4() + '-' +\n  hex4() + '-' + hex4() + hex4() + hex4();\n}\n\nexport function capitalizeFirstLetter(text: string): string {\n  return `${text.charAt(0).toUpperCase()}${text.slice(1)}`;\n}\n\n/**\n * Mapeia um novo array apenas com as propriedades definidas pelo desenvolvedor baseado em um array de\n * origem.\n *\n * Exemplo:\n *\n * ```\n * const people = [\n *  { id: 1, name: 'Fulano', birthdate: '1980-11-01', genre: 'Male', city: 'SÃ£o Paulo', dependents: 2 },\n *  { id: 2, name: 'Beltrano', birthdate: '1997-01-21', genre: 'Female', city: 'Joinville', dependents: 0 },\n *  { id: 3, name: 'Siclano', birthdate: '1995-07-15', genre: 'Male', city: 'Joinville', dependents: 0 }\n * ];\n *\n * const properties = ['id', 'name'];\n *\n * const idAndName = mapArrayByProperties(people, properties);\n *\n * console.log(idAndName); // [{ id: 1, name: 'Fulano' }, { id: 2, name: 'Beltrano' }, { id: 3, name: 'Siclano' }]\n * ```\n *\n * Um outro uso para o mÃ©todo Ã© \"parear\" todos os objetos do array com as mesmas propriedades.\n *\n * ```\n * const customers = [\n *  { id: 1, name: 'Fulano', city: 'SÃ£o Paulo', dependents: 2 }, // sem genre\n *  { id: 2, name: 'Beltrano', genre: 'Female', city: 'Joinville' }, // sem dependents\n *  { id: 3, name: 'Siclano', genre: 'Male', city: 'Joinville', dependents: 0 }\n * ];\n * const properties = ['id', 'name', 'city', 'genre', 'dependents'];\n *\n * const pattern = mapArrayByProperties(customers, properties);\n * console.log(pattern);\n *\n * // [\n * //   { id: 1, name: 'Fulano', city: 'SÃ£o Paulo', genre: undefined, dependents: 2 },\n * //   { id: 2, name: 'Beltrano', city: 'Joinville', genre: 'Female', dependents: undefined },\n * //   { id: 3, name: 'Siclano', city: 'Joinville', genre: 'Male', dependents: 0 }\n * // ]\n * ```\n *\n * @param items {Array<any>} Array de items original.\n * @param properties {Array<string>} Array de string com a lista de propriedades que devem ser retornadas.\n *\n * @returns Array<any>\n */\nexport function mapArrayByProperties(items: Array<any> = [], properties: Array<string> = []): Array<any> {\n  return items.map(item => mapObjectByProperties(item, properties));\n}\n\n/**\n * Mapeia um novo objeto apenas com as propriedades definidas pelo desenvolvedor.\n *\n * Exemplo:\n *\n * ```\n * const person = { id: 1, name: 'Fulano', birthdate: '1980-11-01', genre: 'Male', city: 'SÃ£o Paulo', dependents: 2 };\n *\n * const properties = ['id', 'name'];\n *\n * const idAndName = mapObjectByProperties(person, properties);\n *\n * console.log(idAndName); // { id: 1, name: 'Fulano' }\n * ```\n *\n * @param object {Array<any>} Array de items original.\n * @param properties {Array<string>} Array de string com a lista de propriedades que devem ser retornadas.\n *\n * @returns Array<any>\n */\nexport function mapObjectByProperties(object: any = {}, properties: Array<string> = []) {\n  const getSelectedProperties = (selectedProperties, property) => ({ ...selectedProperties, [property]: object[property] });\n\n  return properties.reduce(getSelectedProperties, {});\n}\n\n/**\n * Retorna os valores de um objeto dentro de um array.\n *\n * > Simula o Object.values(obj), o mesmo deve ser removido assim que a versÃ£o typescrit for atualizada.\n *\n * @param object Objeto de onde serÃ¡ pego os valores.\n */\nexport function valuesFromObject(object: any = {}): Array<any> {\n  return Object.keys(object).map(property => object[property]);\n}\n\n/**\n * Converte um arquivo em base64.\n *\n * @param file arquivo que serÃ¡ convertido.\n */\nexport function convertImageToBase64(file: File): Promise<any> {\n  return new Promise((resolve, reject) => {\n\n    const reader = new FileReader();\n\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n  });\n}\n\n/**\n * Converte um nÃºmero em decimal baseado na quantidade de casas decimais.\n *\n * Caso o valor seja invÃ¡lido, serÃ¡ retornado o valor `undefined`.\n * Valores invÃ¡lidos sÃ£o: `false`, `NaN`, `strings` que nÃ£o numÃ©ricas, `undefined` e `null`.\n *\n * @param number valor que serÃ¡ convertido\n * @param decimalsPlace quantidade de casas decimais\n */\nexport function convertNumberToDecimal(number: any, decimalsPlace: number): number {\n  const isValidValue = (number || number === 0) && !isNaN(number);\n\n  const floatValue = isValidValue ? parseFloat(number) : undefined;\n\n  try {\n    return parseFloat(floatValue.toFixed(decimalsPlace));\n  } catch {\n    return floatValue;\n  }\n}\n\n/**\n * Retorna uma copia do objeto sujo, sem as propriedades nulas ou indefinidas.\n * Retorna o objeto sem as propriedades que contÃ©m valores nulos ou indefinidos.\n *\n * @param dirtyObject\n */\nexport function clearObject(dirtyObject: object): any {\n  const cleanObject = {};\n\n  Object.keys(dirtyObject).forEach(key => {\n    if (dirtyObject[key] !== null && dirtyObject[key] !== undefined) {\n      cleanObject[key] = dirtyObject[key];\n    }\n  });\n\n  return cleanObject;\n}\n\nexport function validateObjectType(value: any) {\n  return isTypeof(value, 'object') && !Array.isArray(value) ? value : undefined;\n}\n","import { Injectable } from '@angular/core';\n\nimport { getBrowserLanguage, getShortLanguage, isLanguage, poLocaleDefault, poLocales } from '../../utils/util';\n\nconst poDefaultLanguage = 'PO_DEFAULT_LANGUAGE';\nconst poLocaleKey = 'PO_USER_LOCALE';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * ServiÃ§o responsÃ¡vel por gerenciar as linguagens da aplicaÃ§Ã£o.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PoLanguageService {\n\n  set languageDefault(language: string) {\n    if (language && isLanguage(language)) {\n      localStorage.setItem(poDefaultLanguage, language);\n    }\n  }\n\n  get languageDefault(): string {\n    return localStorage.getItem(poDefaultLanguage);\n  }\n\n  /**\n   * @description\n   *\n   * MÃ©todo responsÃ¡vel por retornar o idioma ativo.\n   *\n   * A busca do idioma serÃ¡ feita na seguinte ordem:\n   *\n   *   1 - o idioma que foi armazenado no *localStorage*, atravÃ©s do mÃ©todo `setLanguage()` utilizado pelo i18n.\n   *\n   *   2 - o valor inserido nas configuraÃ§Ãµes do mÃ³dulo do i18n atravÃ©s do parÃ¢metro `config`, sendo o idioma inserido\n   * na propriedade `language` da interface `PoI18nConfigDefault`.\n   *\n   *   3 - o idioma do navegador utilizado.\n   *\n   * > Caso o idioma do navegador nÃ£o seja suportado pelo PO (`pt`, `en`, `es` ou `ru`), serÃ¡ retornado valor `pt`.\n   *\n   * **Retorno:** `string` com a sigla do idioma ativo.\n   */\n  getLanguage(): string {\n    const language = localStorage.getItem(poLocaleKey) || this.languageDefault || getBrowserLanguage();\n\n    return language && language.toLowerCase();\n  }\n\n  /**\n   * @description\n   *\n   * MÃ©todo responsÃ¡vel por retornar o idioma *default* da aplicaÃ§Ã£o definido nas configuraÃ§Ãµes do mÃ³dulo do i18n atravÃ©s\n   * do parÃ¢metro `config`.\n   *\n   * **Retorno:** `string` com a sigla do idioma *default*.\n   */\n  getLanguageDefault(): string {\n    return this.languageDefault;\n  }\n\n  /**\n   * @description\n   *\n   * MÃ©todo responsÃ¡vel por retornar a abreviaÃ§Ã£o do idioma ativo na aplicaÃ§Ã£o.\n   *\n   * @default `pt`\n   *\n   * **Retorno:** `string` com a sigla abreviada do idioma ativo.\n   */\n  getShortLanguage(): string {\n    const language = this.getLanguage();\n    const shortLanguage = getShortLanguage(language);\n\n    return poLocales.includes(shortLanguage) ? shortLanguage : poLocaleDefault;\n  }\n\n  /**\n   * @description\n   *\n   * MÃ©todo para salvar o idioma da aplicaÃ§Ã£o no *storage*, utilizado pelo serviÃ§o do i18n.\n   *\n   * > Ao definir um idioma por este mÃ©todo, todos os mÃ³dulos da aplicaÃ§Ã£o utilizarÃ£o o idioma definido.\n   *\n   * @param language sigla do idioma.\n   *\n   * Esta sigla deve ser composta por duas letras representando o idioma,\n   * podendo ser adicionado outras duas letras representando o paÃ­s, por exemplo: `pt`, `pt-BR`, `pt-br`, `en` ou `en-US`.\n   *\n   * > Caso seja informado um valor diferente deste padrÃ£o, o mesmo serÃ¡ ignorado.\n   */\n  setLanguage(language: string): void {\n    if (!isLanguage(language)) {\n      return;\n    }\n\n    localStorage.setItem(poLocaleKey, language.toLowerCase());\n  }\n\n  /**\n   * @description\n   *\n   * MÃ©todo que define o idioma configurado a partir do parÃ¢metro `config` utilizado pelo mÃ³dulo do i18n.\n   *\n   * > Ao definir um idioma por este serviÃ§o, apenas o mÃ³dulo do i18n referente a esta configuraÃ§Ã£o utilizarÃ¡ o idioma definido.\n   *\n   * @param language sigla do idioma.\n   *\n   * Esta sigla deve ser composta por duas letras representando o idioma,\n   * podendo ser adicionado outras duas letras representando o paÃ­s, por exemplo: `pt`, `pt-BR`, `pt-br`, `en` ou `en-US`.\n   *\n   * > Caso seja informado um valor diferente deste padrÃ£o, o mesmo serÃ¡ ignorado.\n   */\n  setLanguageDefault(language: string): void {\n    this.languageDefault = language;\n  }\n\n}\n","/**\n * @usedBy PoButtonGroupComponent\n *\n * @description\n *\n * Define o tipo de seleÃ§Ã£o dos botÃµes do `po-button-group`.\n */\nexport enum PoButtonGroupToggle {\n\n  /** SeleÃ§Ã£o mÃºltipla. */\n  Multiple = 'multiple',\n\n  /** SeleÃ§Ã£o desabilitada. */\n  None = 'none',\n\n  /** SeleÃ§Ã£o Ãºnica. */\n  Single = 'single'\n\n}\n","import { Input } from '@angular/core';\n\nimport { convertToBoolean } from './../../../utils/util';\n\nimport { PoLanguageService } from '../../../services/po-language/po-language.service';\n\nimport { PoLoadingOverlayLiterals } from './interfaces/po-loading-overlay-literals.interface';\n\nexport const poLoadingOverlayLiteralsDefault = {\n  en: <PoLoadingOverlayLiterals> {\n    loading: 'Loading',\n  },\n  es: <PoLoadingOverlayLiterals> {\n    loading: 'Cargando',\n  },\n  pt: <PoLoadingOverlayLiterals> {\n    loading: 'Carregando',\n  },\n  ru: <PoLoadingOverlayLiterals> {\n    loading: 'Ð¿Ð¾Ð³ÑÑÐ·ÐºÐ°',\n  }\n};\n\n/**\n *\n * @description\n *\n * Este componente mostra ao usuÃ¡rio uma imagem de _loading_ e bloqueia a pÃ¡gina inteira ou o container escolhido,\n * enquanto aguarda a resposta de alguma requisiÃ§Ã£o.\n */\nexport class PoLoadingOverlayBaseComponent {\n\n  private _screenLock?: boolean = false;\n  private _text?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se o *overlay* serÃ¡ aplicado a um *container* ou a pÃ¡gina inteira.\n   *\n   * Para utilizar o componente como um *container*, o elemento pai deverÃ¡ receber uma posiÃ§Ã£o relativa, por exemplo:\n   *\n   * ```\n   * <div style=\"position: relative\">\n   *\n   *  <po-chart [p-series]=\"[{ value: 10, category: 'Example' }]\">\n   *  </po-chart>\n   *\n   *  <po-loading-overlay>\n   *  </po-loading-overlay>\n   * </div>\n   * ```\n   *\n   * @default `false`\n   */\n  @Input('p-screen-lock') set screenLock(screenLock: boolean) {\n    this._screenLock = convertToBoolean(screenLock);\n  }\n\n  get screenLock() {\n    return this._screenLock;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Texto a ser exibido no componente.\n   *\n   * > O valor padrÃ£o serÃ¡ traduzido acordo com o idioma configurado no [**PoI18n**](/documentation/po-i18n) ou navegador.\n   *\n   * @default `Carregando`\n   */\n  @Input('p-text') set text(value: string) {\n    this._text = value || this.getTextDefault();\n  }\n\n  get text(): string {\n    return this._text;\n  }\n\n  constructor(private languageService: PoLanguageService) {\n    if (!this.text) {\n      this.text = this.getTextDefault();\n    }\n  }\n\n  private getTextDefault(): string {\n    const language = this.languageService.getShortLanguage();\n\n    return poLoadingOverlayLiteralsDefault[language].loading;\n  }\n\n}\n","import { Component, ChangeDetectorRef } from '@angular/core';\n\nimport { PoLanguageService } from './../../../services/po-language/po-language.service';\n\nimport { PoLoadingOverlayBaseComponent } from './po-loading-overlay-base.component';\n\n/**\n *\n * @docsExtends PoLoadingOverlayBaseComponent\n *\n * @example\n *\n * <example name=\"po-loading-overlay-basic\" title=\"Portinari Loading Overlay Basic\">\n *  <file name=\"sample-po-loading-overlay-basic/sample-po-loading-overlay-basic.component.html\"> </file>\n *  <file name=\"sample-po-loading-overlay-basic/sample-po-loading-overlay-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-loading-overlay-labs\" title=\"Portinari Loading Overlay Labs\">\n *  <file name=\"sample-po-loading-overlay-labs/sample-po-loading-overlay-labs.component.html\"> </file>\n *  <file name=\"sample-po-loading-overlay-labs/sample-po-loading-overlay-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-loading-overlay-connection-test\" title=\"Portinari Loading Overlay - Connection Test\">\n *  <file name=\"sample-po-loading-overlay-connection-test/sample-po-loading-overlay-connection-test.component.html\"> </file>\n *  <file name=\"sample-po-loading-overlay-connection-test/sample-po-loading-overlay-connection-test.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-loading-overlay',\n  templateUrl: 'po-loading-overlay.component.html'\n})\nexport class PoLoadingOverlayComponent extends PoLoadingOverlayBaseComponent {\n\n  constructor(public changeDetector: ChangeDetectorRef, languageService: PoLanguageService) {\n    super(languageService);\n  }\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { PoLanguageService } from './po-language.service';\n\n/**\n * @description\n *\n * MÃ³dulo do serviÃ§o `po-language`.\n */\n@NgModule({\n  providers: [\n    PoLanguageService\n  ]\n})\nexport class PoLanguageModule { }\n","import { Input } from '@angular/core';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Este componente tem o objetivo de mostrar visualmente aos usuÃ¡rios que a aplicaÃ§Ã£o estÃ¡ processando\n * ou aguardando a resposta de alguma requisiÃ§Ã£o.\n */\nexport class PoLoadingBaseComponent {\n\n  /**\n   * Texto a ser exibido no componente.\n   */\n  @Input('p-text') text?: string = 'Carregando';\n\n}\n","import { Component } from '@angular/core';\n\nimport { PoLoadingBaseComponent } from './po-loading-base.component';\n\n/**\n * @docsPrivate\n *\n * @docsExtends PoLoadingBaseComponent\n */\n@Component({\n  selector: 'po-loading',\n  templateUrl: 'po-loading.component.html'\n})\nexport class PoLoadingComponent extends PoLoadingBaseComponent { }\n","import { Component, Input } from '@angular/core';\n\nimport { convertToBoolean } from '../../../utils/util';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que exibe um Ã­cone de carregamento de conteÃºdo. A cor padrÃ£o para ele Ã© a primÃ¡ria conforme o tema utilizado.\n * Ã possÃ­vel alterÃ¡-la para um tom cinza conforme a necessidade.\n */\n@Component({\n  selector: 'po-loading-icon',\n  templateUrl: 'po-loading-icon.component.html'\n})\nexport class PoLoadingIconComponent {\n\n  private _neutralColor: boolean;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * DefiniÃ§Ã£o para cor neutra (cinza) para o Ã­cone de carregamento.\n   *\n   * @default `false`\n   */\n  @Input('p-neutral-color') set neutralColor(value: boolean) {\n    this._neutralColor = convertToBoolean(value);\n  }\n\n  get neutralColor(): boolean {\n    return this._neutralColor;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PoLanguageModule } from './../../services/po-language/po-language.module';\n\nimport { PoLoadingComponent } from './po-loading.component';\nimport { PoLoadingIconComponent } from './po-loading-icon/po-loading-icon.component';\nimport { PoLoadingOverlayComponent } from './po-loading-overlay/po-loading-overlay.component';\n\n/**\n *\n * @description\n *\n * MÃ³dulo do componente po-loading-overlay.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    PoLanguageModule\n  ],\n  declarations: [\n    PoLoadingComponent,\n    PoLoadingIconComponent,\n    PoLoadingOverlayComponent\n  ],\n  exports: [\n    PoLoadingComponent,\n    PoLoadingIconComponent,\n    PoLoadingOverlayComponent\n  ]\n})\nexport class PoLoadingModule { }\n","import { EventEmitter, Input, Output } from '@angular/core';\n\nimport { convertToBoolean } from '../../utils/util';\n\nconst PO_BUTTON_TYPES = ['default', 'primary', 'danger', 'link'];\nconst PO_BUTTON_TYPE_DEFAULT = 'default';\n\n/**\n * @description\n *\n * O `po-button` permite que o usuÃ¡rio execute aÃ§Ãµes predefinidas pelo desenvolvedor.\n *\n * AtravÃ©s dos tipos, Ã© possÃ­vel identificar a importÃ¢ncia de cada aÃ§Ã£o, sendo ela primÃ¡ria (`primary`) ou atÃ© mesmo uma\n * aÃ§Ã£o irreversÃ­vel (`danger`), como a exclusÃ£o de um registro.\n *\n * #### Boas prÃ¡ticas\n *\n * - Evite `labels` extensos que quebram o layout do `po-button`, use `labels` diretos, curtos e intuitivos.\n * - Utilize apenas um `po-button` configurado como `primary` por pÃ¡gina.\n * - Para aÃ§Ãµes irreversÃ­veis use sempre o tipo `danger`.\n */\nexport class PoButtonBaseComponent {\n\n  private _disabled?: boolean = false;\n  private _loading?: boolean = false;\n  private _small?: boolean = false;\n  private _type?: string = 'default';\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Label do botÃ£o.\n   */\n  @Input('p-label') label?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Exibe um Ã­cone de carregamento Ã  esquerda do _label_ do botÃ£o.\n   *\n   * > Quando esta propriedade estiver habilitada, desabilitarÃ¡ o botÃ£o.\n   *\n   * @default `false`\n   */\n  @Input('p-loading') set loading(value: boolean) {\n    this._loading = convertToBoolean(value);\n  }\n\n  get loading(): boolean {\n    return this._loading;\n  }\n\n  /**\n   * Ãcone exibido ao lado esquerdo do label do botÃ£o.\n   *\n   * Ã possÃ­vel usar qualquer uma dos Ã­cones da [Biblioteca de Ã­cones](/guides/icons).\n   */\n  @Input('p-icon') icon?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Deixa o botÃ£o menor.\n   *\n   * @default `false`\n   */\n  @Input('p-small') set small(value: boolean) {\n    this._small = <any>value === '' ? true : convertToBoolean(value);\n  }\n  get small(): boolean {\n    return this._small;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o estilo do `po-button`.\n   *\n   * Valore vÃ¡lidos:\n   *  - `default`: estilo padrÃ£o do `po-button`.\n   *  - `primary`: deixa o `po-button` com destaque, deve ser usado para aÃ§Ãµes primÃ¡rias.\n   *  - `danger`: deve ser usado para aÃ§Ãµes que o usuÃ¡rio precisa ter cuidado ao executa-lÃ¡.\n   *  - `link`: o `po-button` recebe o estilo de um link.\n   *\n   * @default `default`\n   */\n  @Input('p-type') set type(value: string) {\n    this._type = PO_BUTTON_TYPES.includes(value) ? value : PO_BUTTON_TYPE_DEFAULT;\n  }\n  get type(): string {\n    return this._type;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita o `po-button` e nÃ£o permite que o usuÃ¡rio interaja com o mesmo.\n   *\n   * @default `false`\n   */\n  @Input('p-disabled') set disabled(value: boolean) {\n    this._disabled = <any>value === '' ? true : convertToBoolean(value);\n  }\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  /** AÃ§Ã£o que serÃ¡ executada quando o usuÃ¡rio clicar sobre o `po-button`. */\n  @Output('p-click') click = new EventEmitter<null>();\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild } from '@angular/core';\n\nimport { PoButtonBaseComponent } from './po-button-base.component';\n\n/**\n * @docsExtends PoButtonBaseComponent\n *\n * @example\n *\n * <example name=\"po-button-basic\" title=\"Portinari Button Basic\">\n *  <file name=\"sample-po-button-basic/sample-po-button-basic.component.html\"> </file>\n *  <file name=\"sample-po-button-basic/sample-po-button-basic.component.ts\"> </file>\n *  <file name=\"sample-po-button-basic/sample-po-button-basic.component.e2e-spec.ts\"> </file>\n *  <file name=\"sample-po-button-basic/sample-po-button-basic.component.po.ts\"> </file>\n * </example>\n *\n * <example name=\"po-button-labs\" title=\"Portinari Button Labs\">\n *  <file name=\"sample-po-button-labs/sample-po-button-labs.component.html\"> </file>\n *  <file name=\"sample-po-button-labs/sample-po-button-labs.component.ts\"> </file>\n *  <file name=\"sample-po-button-labs/sample-po-button-labs.component.e2e-spec.ts\"> </file>\n *  <file name=\"sample-po-button-labs/sample-po-button-labs.component.po.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-button',\n  templateUrl: './po-button.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoButtonComponent extends PoButtonBaseComponent {\n\n  @ViewChild('button', { static: true }) buttonElement: ElementRef;\n\n  /**\n   * FunÃ§Ã£o que atribui foco ao componente.\n   *\n   * Para utilizÃ¡-la Ã© necessÃ¡rio ter a instÃ¢ncia do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n   *\n   * ```\n   * import { PoButtonComponent } from '@portinari/portinari-ui';\n   *\n   * ...\n   *\n   * @ViewChild(PoButtonComponent, { static: true }) button: PoButtonComponent;\n   *\n   * focusButton() {\n   *   this.button.focus();\n   * }\n   * ```\n   */\n  focus(): void {\n    if (!this.disabled) {\n      this.buttonElement.nativeElement.focus();\n    }\n  }\n\n  onClick() {\n    this.click.emit(null);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PoLoadingModule } from './../po-loading/index';\n\nimport { PoButtonComponent } from './po-button.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente po-button.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    PoLoadingModule\n  ],\n  declarations: [\n    PoButtonComponent\n  ],\n  exports: [\n    PoButtonComponent\n  ]\n})\nexport class PoButtonModule { }\n","// Array de posiÃ§Ãµes.\nexport const PO_CONTROL_POSITIONS = [\n  'right',\n  'right-top',\n  'right-bottom',\n  'top',\n  'top-left',\n  'top-right',\n  'left',\n  'left-top',\n  'left-bottom',\n  'bottom',\n  'bottom-left',\n  'bottom-right'\n];\n","import { Input } from '@angular/core';\n\nimport { PO_CONTROL_POSITIONS } from './../../services/po-control-position/po-control-position.constants';\n\nconst CONTENT_MAX_LENGTH = 140;\nconst PO_TOOLTIP_POSITION_DEFAULT = 'bottom';\n\n/**\n * @description\n *\n * A diretiva po-tooltip deve ser utilizada para oferecer informaÃ§Ãµes adicionais quando os usuÃ¡rios\n * passam o mouse sobre o elemento alvo ao qual ela estÃ¡ atribuÃ­da.\n *\n * O conteÃºdo Ã© formado por um pequeno texto que deve contribuir para uma tomada de decisÃ£o ou\n * orientaÃ§Ã£o do usuÃ¡rio. A ativaÃ§Ã£o dele pode estar em qualquer componente ou tag HTML.\n *\n * Para textos maiores ou no caso de haver a necessidade de utilizar algum outro elemento como\n * conteÃºdo deve-se utilizar o [**po-popover**](https://portinari.io/documentation/po-popover?view=doc).\n */\n\nexport class PoTooltipBaseDirective {\n\n  private _tooltip: string = '';\n  protected _tooltipPosition?: string = 'bottom';\n\n  /**\n   * @description\n   *\n   * Habilita e atribui um texto ao po-tooltip, com limitaÃ§Ã£o de 140 caracteres.\n   */\n  @Input('p-tooltip') set tooltip(tooltip: string) {\n    if (tooltip && tooltip.length > CONTENT_MAX_LENGTH) {\n       this._tooltip = tooltip.substring(0, CONTENT_MAX_LENGTH);\n    } else {\n      this._tooltip = tooltip;\n    }\n  }\n  get tooltip() {\n    return this._tooltip;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a posiÃ§Ã£o que o po-tooltip abrirÃ¡ em relaÃ§Ã£o ao componente alvo. Sugere-se que seja\n   * usada a orientaÃ§Ã£o \"bottom\" (abaixo), porÃ©m o mesmo Ã© flexÃ­vel e serÃ¡ rotacionado\n   * automaticamente para se adequar a tela, caso necessÃ¡rio.\n   *\n   * PosiÃ§Ãµes vÃ¡lidas:\n   * - `right`: Posiciona o po-tooltip no lado direito do componente alvo.\n   * - `right-bottom`: Posiciona o po-tooltip no lado direito inferior do componente alvo.\n   * - `right-top`: Posiciona o po-tooltip no lado direito superior do componente alvo.\n   * - `bottom`: Posiciona o po-tooltip abaixo do componente alvo.\n   * - `bottom-left`: Posiciona o po-tooltip abaixo e Ã  esquerda do componente alvo.\n   * - `bottom-right`: Posiciona o po-tooltip abaixo e Ã  direita do componente alvo.\n   * - `left`: Posiciona o po-tooltip no lado esquerdo do componente alvo.\n   * - `left-top`: Posiciona o po-tooltip no lado esquerdo superior do componente alvo.\n   * - `left-bottom`: Posiciona o po-tooltip no lado esquerdo inferior do componente alvo.\n   * - `top`: Posiciona o po-tooltip acima do componente alvo.\n   * - `top-right`: Posiciona o po-tooltip acima e Ã  direita do componente alvo.\n   * - `top-left`: Posiciona o po-tooltip acima e Ã  esquerda do componente alvo.\n   *\n   * @default bottom\n   */\n  @Input('p-tooltip-position') set tooltipPosition(position: string) {\n    this._tooltipPosition = PO_CONTROL_POSITIONS.includes(position) ? position : PO_TOOLTIP_POSITION_DEFAULT;\n  }\n  get tooltipPosition(): string {\n    return this._tooltipPosition;\n  }\n\n}\n","import { ElementRef, Injectable } from '@angular/core';\n\n /**\n  * @docsPrivate\n  * @description\n  *\n  * ServiÃ§o responsÃ¡vel por gerenciar as posiÃ§Ãµes de um elemento em relaÃ§Ã£o a um elemento alvo. Ele pode receber as\n  * seguintes posiÃ§Ãµes:\n  *\n  * - `right`: Posiciona o elemento no lado direito do componente alvo.\n  * - `right-bottom`: Posiciona o elemento no lado direito inferior do componente alvo.\n  * - `right-top`: Posiciona o elemento no lado direito superior do componente alvo.\n  * - `bottom`: Posiciona o elemento abaixo do componente alvo.\n  * - `bottom-left`: Posiciona o elemento abaixo e Ã  esquerda do componente alvo.\n  * - `bottom-right`: Posiciona o elemento abaixo e Ã  direita do componente alvo.\n  * - `left`: Posiciona o elemento no lado esquerdo do componente alvo.\n  * - `left-top`: Posiciona o elemento no lado esquerdo superior do componente alvo.\n  * - `left-bottom`: Posiciona o elemento no lado esquerdo inferior do componente alvo.\n  * - `top`: Posiciona o elemento acima do componente alvo.\n  * - `top-right`: Posiciona o elemento acima e Ã  direita do componente alvo.\n  * - `top-left`: Posiciona o elemento acima e Ã  esquerda do componente alvo.\n  *\n  * Caso o elemento nÃ£o caiba na tela na posiÃ§Ã£o indicada ele serÃ¡ rotacionado automaticamente para se adequar,\n  * inicialmente no lado definido como padrÃ£o e em seguida seguindo o sentido horÃ¡rio.\n  */\n\nconst poControlPositionSidesDefault: Array<string> = [\n  'bottom', 'bottom-left', 'bottom-right',\n  'left', 'left-top', 'left-bottom',\n  'top', 'top-right', 'top-left',\n  'right', 'right-bottom', 'right-top'\n];\n\n@Injectable()\nexport class PoControlPositionService {\n\n  private arrowDirection: string;\n  private customPositions: Array<string>;\n  private differenceDiagonalToWidthArrow: number = 3;\n  private element: HTMLElement;\n  private elementOffset: number;\n  private isCornerAligned: boolean;\n  private isSetElementWidth: boolean = false;\n  // offset da seta em relaÃ§Ã£o ao canto do componente\n  private offsetArrow: number = 12;\n  private targetElement: HTMLElement;\n\n  /**\n   * @description Ajusta a posiÃ§Ã£o do elemento, caso nÃ£o couber em tela irÃ¡ para prÃ³xima posiÃ§Ã£o.\n   *\n   * @param value posiÃ§Ã£o para exibiÃ§Ã£o do elemento\n   */\n  adjustPosition(value: string) {\n    const position = value || 'bottom';\n    this.elementPosition(position);\n    this.customPositions && this.customPositions.length ? this.adjustCustomPosition(position) : this.adjustDefaultPosition(position);\n  }\n\n  /**\n   * @description Retorna a direÃ§Ã£o da seta, conforme a posiÃ§Ã£o do elemento.\n   */\n  getArrowDirection() {\n    return this.arrowDirection;\n  }\n\n  /**\n   * @description MÃ©todo responsÃ¡vel por definir as propriedades utilizadas para exibir o elemento na posiÃ§Ã£o correta.\n   *\n   * @param element elemento que serÃ¡ exibido\n   * @param elementOffset offSet do elemento\n   * @param targetElement elemento de onde deve partir a exibiÃ§Ã£o\n   * @param customPositions posiÃ§Ãµes que sobrescreve as posiÃ§Ãµes padrÃµes\n   * @param isSetElementWidth indica se deve definir o tamanho do elemento a ser exibido, caso for verdadeiro serÃ¡ igual do targetElement\n   * @param isCornerAligned indica se o elemento filho serÃ¡ alinhado nos cantos do elemneto pai.\n   */\n  setElements(element: ElementRef | HTMLElement, elementOffset: number, targetElement: ElementRef | HTMLElement,\n              customPositions?: Array<string>, isSetElementWidth: boolean = false, isCornerAligned: boolean = false) {\n\n    this.element = (element instanceof ElementRef) ? element.nativeElement : element;\n    this.targetElement = (targetElement instanceof ElementRef) ? targetElement.nativeElement : targetElement;\n\n    this.elementOffset = elementOffset;\n\n    this.customPositions = customPositions;\n    this.isSetElementWidth = isSetElementWidth;\n    this.isCornerAligned = isCornerAligned;\n  }\n\n  private adjustCustomPosition(position: string) {\n    const positionLength = this.customPositions.length;\n\n    let sidesCount = 0;\n\n    while (sidesCount++ < positionLength) {\n      if (this.overflowAllSides(position)) {\n        position = this.nextPosition(position, this.customPositions);\n        this.elementPosition(position);\n      }\n    }\n  }\n\n  private adjustDefaultPosition(position: string) {\n    const mainPositions = this.getMainPositions();\n    const mainPositionLength = mainPositions.length;\n\n    let mainSidesCount = 0;\n\n    while (mainSidesCount++ < mainPositionLength) {\n      const mainPosition = this.getMainPosition(position);\n      this.elementPosition(position);\n\n      if (this.overflowMain(mainPosition)) {\n        position = this.nextPosition(mainPosition, mainPositions);\n        continue;\n      } else if (this.overflowAllSides(position)) {\n        this.verifySubPositions(position);\n        return;\n      }\n\n      return;\n    }\n  }\n\n  private elementPosition(position: string) {\n    this.isCornerAligned ? this.setAlignedElementPosition(position) : this.setElementPosition(position);\n  }\n\n  private getMainPosition(position: string) {\n    return (position.indexOf('-') > -1) ? position.substring(0, position.indexOf('-')) : position;\n  }\n\n  private getMainPositions() {\n    const defaultMainPositions = ['top', 'right', 'bottom', 'left'];\n\n    return this.customPositions && this.customPositions.length ?\n      this.getMainPositionsByCustomPositions(this.customPositions) : defaultMainPositions;\n  }\n\n  private getMainPositionsByCustomPositions(customPositions: Array<string>) {\n    const mainPositions = [];\n    const customPositionsLength = customPositions.length;\n\n    for (let i = 0; i < customPositionsLength; i++) {\n      const position = customPositions[i];\n\n      const mainPosition = this.getMainPosition(position);\n\n      if (!mainPositions.includes(mainPosition)) {\n        mainPositions.push(mainPosition);\n      }\n    }\n\n    return mainPositions;\n  }\n\n  private getOverflows() {\n    const sizesAndPositions = this.getSizesAndPositions();\n\n    return {\n      right: (sizesAndPositions.element.right > sizesAndPositions.window.innerWidth),\n      top: (sizesAndPositions.element.top <= 0),\n      left: (sizesAndPositions.element.left <= 0),\n      bottom: (sizesAndPositions.element.bottom > sizesAndPositions.window.innerHeight)\n    };\n  }\n\n  private getSizesAndPositions() {\n    return {\n      window: {\n        scrollY: window.scrollY,\n        scrollX: window.scrollX,\n        innerWidth: window.innerWidth,\n        innerHeight: window.innerHeight\n      },\n      element: this.element.getBoundingClientRect(),\n      target: this.targetElement ? this.targetElement.getBoundingClientRect() : { top: 0, bottom: 0, right: 0, left: 0 }\n    };\n  }\n\n  private nextPosition(position: string, positions: Array<string> = []): string {\n    const index = positions.indexOf(position);\n    const nextIndex = index + 1;\n\n    if (index > -1 && nextIndex < positions.length) {\n\n      return positions[nextIndex];\n    } else {\n      return positions[0];\n    }\n\n  }\n\n  private overflowAllSides(position: string) {\n    const overflows = this.getOverflows();\n\n    switch (position) {\n      case 'top': return overflows.top || overflows.right || overflows.left;\n      case 'top-right': return overflows.top || overflows.right;\n      case 'top-left': return overflows.top || overflows.left;\n      case 'right': return overflows.right || overflows.top || overflows.bottom;\n      case 'right-top': return overflows.right || overflows.top;\n      case 'right-bottom': return overflows.right || overflows.bottom;\n      case 'bottom': return overflows.bottom || overflows.right || overflows.left;\n      case 'bottom-right': return overflows.bottom || overflows.right;\n      case 'bottom-left': return overflows.bottom || overflows.left;\n      case 'left': return overflows.left || overflows.top || overflows.bottom;\n      case 'left-top': return overflows.left || overflows.top;\n      case 'left-bottom': return overflows.left || overflows.bottom;\n    }\n  }\n\n  private overflowMain(position: string) {\n    const overflows = this.getOverflows();\n\n    switch (position) {\n      case 'top': return overflows.top;\n      case 'right': return overflows.right;\n      case 'bottom': return overflows.bottom;\n      case 'left': return overflows.left;\n    }\n  }\n\n  private setAlignedArrowDirection(elementPosition: string) {\n    switch (elementPosition) {\n      case 'top-left': return 'bottom-left';\n      case 'top-right': return 'bottom-right';\n      case 'bottom-right': return 'top-right';\n      case 'bottom-left': return 'top-left';\n    }\n  }\n\n  private setAlignedBottomPositions(displacement: number, sizesAndPositions) {\n    this.element.style.top = sizesAndPositions.target.bottom + this.elementOffset + 'px';\n    this.element.style.left = sizesAndPositions.target.left - displacement + 'px';\n  }\n\n  private setAlignedElementPosition(position: string) {\n    this.setElementWidth();\n\n    const sizesAndPositions: any = this.getSizesAndPositions();\n\n    switch (position) {\n      case 'bottom-left':\n        this.setAlignedBottomPositions(0, sizesAndPositions);\n        break;\n      case 'bottom-right':\n        this.setAlignedBottomPositions(sizesAndPositions.element.width - sizesAndPositions.target.width, sizesAndPositions);\n        break;\n      case 'top-left':\n        this.setAlignedTopPositions(0, sizesAndPositions);\n        break;\n      case 'top-right':\n        this.setAlignedTopPositions(sizesAndPositions.element.width - sizesAndPositions.target.width, sizesAndPositions);\n        break;\n    }\n\n    this.arrowDirection = this.setAlignedArrowDirection(position);\n\n  }\n\n  private setAlignedTopPositions(displacement: number, sizesAndPositions) {\n    this.element.style.top = sizesAndPositions.target.top - sizesAndPositions.element.height - this.elementOffset + 'px';\n    this.element.style.left = sizesAndPositions.target.left - displacement + 'px';\n  }\n\n  private setArrowDirection(elementPosition: string) {\n    switch (elementPosition) {\n      case 'top': return 'bottom';\n      case 'top-left': return 'bottom-right';\n      case 'top-right': return 'bottom-left';\n      case 'right': return 'left';\n      case 'right-top': return 'left-bottom';\n      case 'right-bottom': return 'left-top';\n      case 'bottom': return 'top';\n      case 'bottom-right': return 'top-left';\n      case 'bottom-left': return 'top-right';\n      case 'left': return 'right';\n      case 'left-bottom': return 'right-top';\n      case 'left-top': return 'right-bottom';\n    }\n  }\n\n  private setBottomPositions(displacement: number, sizesAndPositions) {\n    this.element.style.top = sizesAndPositions.target.bottom + this.elementOffset + 'px';\n    this.element.style.left = sizesAndPositions.target.left + (sizesAndPositions.target.width / 2) - displacement + 'px';\n  }\n\n  private setElementPosition(position: string) {\n    this.setElementWidth();\n\n    const sizesAndPositions = this.getSizesAndPositions();\n\n    switch (position) {\n      case 'top':\n        this.setTopPositions((sizesAndPositions.element.width / 2), sizesAndPositions);\n        break;\n      case 'top-left':\n        this.setTopPositions((sizesAndPositions.element.width - this.offsetArrow - this.differenceDiagonalToWidthArrow), sizesAndPositions);\n        break;\n      case 'top-right':\n        this.setTopPositions((this.offsetArrow + this.differenceDiagonalToWidthArrow), sizesAndPositions);\n        break;\n      case 'right':\n        this.setRightPositions((sizesAndPositions.element.height / 2), sizesAndPositions);\n        break;\n      case 'right-top':\n        this.setRightPositions((sizesAndPositions.element.height - this.offsetArrow - this.differenceDiagonalToWidthArrow),\n          sizesAndPositions);\n        break;\n      case 'right-bottom':\n        this.setRightPositions(this.offsetArrow, sizesAndPositions);\n        break;\n      case 'bottom':\n        this.setBottomPositions((sizesAndPositions.element.width / 2), sizesAndPositions);\n        break;\n      case 'bottom-right':\n        this.setBottomPositions((this.offsetArrow + this.differenceDiagonalToWidthArrow), sizesAndPositions);\n        break;\n      case 'bottom-left':\n        this.setBottomPositions((sizesAndPositions.element.width - this.offsetArrow - this.differenceDiagonalToWidthArrow),\n          sizesAndPositions);\n        break;\n      case 'left':\n        this.setLeftPositions((sizesAndPositions.element.height / 2), sizesAndPositions);\n        break;\n      case 'left-bottom':\n        this.setLeftPositions(this.offsetArrow, sizesAndPositions);\n        break;\n      case 'left-top':\n        this.setLeftPositions((sizesAndPositions.element.height - this.offsetArrow), sizesAndPositions);\n        break;\n    }\n\n    this.arrowDirection = this.setArrowDirection(position);\n  }\n\n  private setElementWidth() {\n    if (this.isSetElementWidth && this.targetElement) {\n      this.element.style.width = `${this.targetElement.clientWidth}px`;\n    }\n  }\n\n  private setLeftPositions(displacement: number, sizesAndPositions) {\n    this.element.style.top = sizesAndPositions.target.top - displacement + (sizesAndPositions.target.height / 2) + 'px';\n    this.element.style.left = sizesAndPositions.target.left - sizesAndPositions.element.width - this.elementOffset + 'px';\n  }\n\n  private setRightPositions(displacement: number, sizesAndPositions) {\n    this.element.style.top = sizesAndPositions.target.top - displacement + (sizesAndPositions.target.height / 2) + 'px';\n    this.element.style.left = sizesAndPositions.target.right + this.elementOffset + 'px';\n  }\n\n  private setTopPositions(displacement: number, sizesAndPositions) {\n    this.element.style.top = sizesAndPositions.target.top - sizesAndPositions.element.height - this.elementOffset + 'px';\n    this.element.style.left = sizesAndPositions.target.left + (sizesAndPositions.target.width / 2) - displacement + 'px';\n  }\n\n  private verifySubPositions(position: string) {\n    if (position.indexOf('-') > -1) {\n      position = position.substring(0, position.indexOf('-'));\n      this.elementPosition(position);\n    }\n\n    let align = 0;\n    while (align++ < 3) {\n      if (this.overflowAllSides(position)) {\n        position = this.nextPosition(position, poControlPositionSidesDefault);\n        this.elementPosition(position);\n      } else {\n        return null;\n      }\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PoControlPositionService } from '../../services/po-control-position/po-control-position.service';\n\n@Injectable()\nexport class PoTooltipControlPositionService extends PoControlPositionService { }\n","import { Directive, ElementRef, HostListener, OnInit, Renderer2 } from '@angular/core';\n\nimport { PoTooltipBaseDirective } from './po-tooltip-base.directive';\nimport { PoTooltipControlPositionService } from './po-tooltip-control-position.service';\n\n/**\n * @docsExtends PoTooltipBaseDirective\n *\n * @example\n *\n * <example name=\"po-tooltip-basic\" title=\"Portinari Tooltip Basic\" >\n *  <file name=\"sample-po-tooltip-basic/sample-po-tooltip-basic.component.html\"> </file>\n *  <file name=\"sample-po-tooltip-basic/sample-po-tooltip-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-tooltip-labs\" title=\"Portinari Tooltip Labs\" >\n *  <file name=\"sample-po-tooltip-labs/sample-po-tooltip-labs.component.html\"> </file>\n *  <file name=\"sample-po-tooltip-labs/sample-po-tooltip-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-tooltip-new-user\" title=\"Portinari Tooltip - New User\" >\n *  <file name=\"sample-po-tooltip-new-user/sample-po-tooltip-new-user.component.html\"> </file>\n *  <file name=\"sample-po-tooltip-new-user/sample-po-tooltip-new-user.component.ts\"> </file>\n * </example>\n *\n */\n@Directive({\n  selector: '[p-tooltip]',\n  providers: [ PoTooltipControlPositionService ]\n})\nexport class PoTooltipDirective extends PoTooltipBaseDirective implements OnInit {\n\n  private arrowDirection: string;\n  private divArrow;\n  private divContent;\n  private isHidden: boolean;\n  private lastTooltipText: string;\n  private textContent;\n  private tooltipContent;\n  private tooltipOffset: number = 8;\n\n  private eventListenerFunction: () => void;\n\n  constructor(private elementRef: ElementRef,\n              private renderer: Renderer2,\n              private poControlPosition: PoTooltipControlPositionService) {\n\n    super();\n  }\n\n  ngOnInit() {\n    this.initScrollEventListenerFunction();\n  }\n\n  @HostListener('mouseenter') onMouseEnter() {\n    setTimeout(() => {\n      if (this.tooltip) {\n        this.tooltipContent ? this.showTooltip() : this.createTooltip();\n\n        this.removeArrow(this.arrowDirection);\n\n        this.poControlPosition.adjustPosition(this.tooltipPosition);\n        this.arrowDirection = this.poControlPosition.getArrowDirection();\n\n        this.addArrow(this.arrowDirection);\n\n        this.lastTooltipText = this.tooltip;\n      }\n    });\n\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n    // necessita do timeout para conseguir adicionar \".po-invisible\", pois quando tem alguns elementos\n    // prÃ³ximos com tooltips e ficar passando o mouse em cima, os mesmos nÃ£o estavam ficando invisiveis.\n    setTimeout(() => {\n      this.hideTooltip();\n    });\n  }\n\n  private addArrow(arrowDirection) {\n    this.renderer.addClass(this.divArrow, `po-arrow-${arrowDirection}`);\n  }\n\n  private addScrollEventListener() {\n    window.addEventListener('scroll', this.eventListenerFunction, true);\n  }\n\n  // Monta a estrutura do tooltip\n  private createTooltip() {\n    this.tooltipContent = this.renderer.createElement('div');\n    this.renderer.addClass(this.tooltipContent, 'po-tooltip');\n\n    this.divArrow = this.renderer.createElement('div');\n    this.renderer.addClass(this.divArrow, 'po-tooltip-arrow');\n\n    this.divContent = this.renderer.createElement('div');\n    this.renderer.addClass(this.divContent, 'po-tooltip-content');\n\n    this.textContent = this.renderer.createText(this.tooltip);\n\n    this.renderer.appendChild(this.divContent, this.textContent);\n    this.renderer.appendChild(this.tooltipContent, this.divArrow);\n    this.renderer.appendChild(this.tooltipContent, this.divContent);\n    this.renderer.appendChild(this.elementRef.nativeElement, this.tooltipContent);\n\n    this.poControlPosition.setElements(this.tooltipContent, this.tooltipOffset, this.elementRef);\n\n    this.addScrollEventListener();\n  }\n\n  private initScrollEventListenerFunction() {\n    this.eventListenerFunction = () => {\n      if (!this.isHidden) {\n        setTimeout(() => {\n          this.poControlPosition.adjustPosition(this.tooltipPosition);\n        });\n      }\n    };\n  }\n\n  private hideTooltip() {\n    if (this.tooltipContent) {\n      this.renderer.addClass(this.tooltipContent, 'po-invisible');\n      this.isHidden = true;\n\n      this.removeScrollEventListener();\n    }\n  }\n\n  private removeArrow(arrowDirection) {\n    if (this.elementRef.nativeElement.querySelector(`.po-arrow-${arrowDirection}`)) {\n      this.renderer.removeClass(this.divArrow, `po-arrow-${arrowDirection}`);\n    }\n  }\n\n  private removeScrollEventListener() {\n    window.removeEventListener('scroll', this.eventListenerFunction, true);\n  }\n\n  private showTooltip() {\n    this.renderer.removeClass(this.tooltipContent, 'po-invisible');\n    this.updateTextContent();\n    this.isHidden = false;\n\n    this.addScrollEventListener();\n  }\n\n  private updateTextContent() {\n    if (this.lastTooltipText !== this.tooltip) {\n      this.renderer.removeChild(this.divContent, this.textContent);\n      this.textContent = this.renderer.createText(this.tooltip);\n      this.renderer.appendChild(this.divContent, this.textContent);\n    }\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoTooltipDirective } from './po-tooltip.directive';\n\n/**\n * @description\n *\n * MÃ³dulo da diretiva Po-Tooltip.\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [PoTooltipDirective],\n  exports: [PoTooltipDirective]\n})\n\nexport class PoTooltipModule { }\n","import { Input } from '@angular/core';\n\nimport { convertToBoolean } from '../../utils/util';\nimport { PoButtonGroupItem } from './po-button-group-item.interface';\nimport { PoButtonGroupToggle } from './po-button-group-toggle.enum';\n\nconst PO_TOGGLE_TYPE_DEFAULT = 'none';\n\n/**\n * @description\n *\n * O componente `po-button-group` Ã© formado por um conjunto de botÃµes distribuÃ­dos horizontalmente.\n * Cada botÃ£o do grupo Ã© tratado de forma individual, recebendo assim um rÃ³tulo, uma aÃ§Ã£o bem como se deverÃ¡ estar habilitado ou nÃ£o.\n *\n * Este componente alÃ©m de servir como um agrupador de botÃµes para aÃ§Ã£o, tambÃ©m permite que sejam utilizados\n * para seleÃ§Ãµes multiplas e Ãºnicas.\n *\n * O grupo de botÃµes deve ser utilizado para organizar as aÃ§Ãµes de maneira uniforme e transmitir a ideia de que os botÃµes fazem\n * parte de um mesmo contexto.\n *\n * #### Boas prÃ¡ticas\n *\n * - Evite usar o `po-button-group` com apenas 1 aÃ§Ã£o, para isso utilize o `po-button`.\n * - Procure utilizar no mÃ¡ximo 3 aÃ§Ãµes para cada `po-button-group`.\n *\n * > As recomendaÃ§Ãµes do `po-button` tambÃ©m valem para o `po-button-group`.\n */\nexport class PoButtonGroupBaseComponent {\n\n  private _small?: boolean = false;\n  private _toggle?: string = PO_TOGGLE_TYPE_DEFAULT;\n\n  /** Lista de botÃµes. */\n  @Input('p-buttons') buttons: Array<PoButtonGroupItem> = [];\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Torna o grupo de botÃµes com tamanho minificado.\n   *\n   * @default `false`\n   */\n  @Input('p-small') set small(value: boolean) {\n    this._small = <any>value === '' ? true : convertToBoolean(value);\n  }\n\n  get small(): boolean {\n    return this._small;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o modo de seleÃ§Ã£o de botÃµes.\n   *\n   * > Veja os valores vÃ¡lidos no *enum* `PoMultiselectFilterMode`.\n   *\n   * @default `none`\n   */\n  @Input('p-toggle') set toggle(value: string) {\n    this._toggle = (<any>Object).values(PoButtonGroupToggle).includes(value) ? value : PO_TOGGLE_TYPE_DEFAULT;\n\n    this.checkSelecteds(this._toggle);\n  }\n\n  get toggle(): string {\n    return this._toggle;\n  }\n\n  onButtonClick(buttonClicked: PoButtonGroupItem, buttonIndex: number) {\n    if (this.toggle === PoButtonGroupToggle.Single) {\n      this.buttons.forEach((button, index) =>\n        button.selected = index === buttonIndex ? !buttonClicked.selected : false);\n    } else if (this.toggle === PoButtonGroupToggle.Multiple) {\n      buttonClicked.selected = !buttonClicked.selected;\n    }\n  }\n\n  private checkSelecteds(toggleMode: string) {\n    if (toggleMode === PoButtonGroupToggle.None) {\n      this.deselectAllButtons();\n    } else if (toggleMode === PoButtonGroupToggle.Single) {\n      const hasMoreOneSelected = this.buttons.filter(button => button.selected).length > 1;\n      if (hasMoreOneSelected) {\n        this.deselectAllButtons();\n      }\n    }\n  }\n\n  private deselectAllButtons() {\n    this.buttons.forEach(button => button.selected = false);\n  }\n\n}\n","/**\n * @usedBy PoChartComponent\n *\n * @description\n *\n * *Enum* `PoChartType` para especificaÃ§Ã£o dos tipos de grÃ¡ficos.\n */\nexport enum PoChartType {\n\n  /**\n   * Exibe os dados em formato de rosca, dividindo em partes proporcionais.\n   */\n  Donut = 'donut',\n\n  /**\n   * O grÃ¡fico de *gauge* fornece como opÃ§Ã£o uma melhor relaÃ§Ã£o de intensidade de dados que nos grÃ¡ficos de pizza padrÃ£o ou rosca, uma vez\n   * que o centro em branco pode ser usado para exibir dados adicionais relacionados.\n   */\n  Gauge = 'gauge',\n\n  /**\n   * Exibe os dados em formato circular, dividindo proporcionalmente em fatias.\n   */\n  Pie = 'pie'\n\n}\n","import { Component, ViewContainerRef } from '@angular/core';\n\nimport { PoButtonGroupBaseComponent } from './po-button-group-base.component';\n\n/**\n * @docsExtends PoButtonGroupBaseComponent\n *\n * @example\n *\n * <example name=\"po-button-group-basic\" title=\"Portinari Button Group Basic\">\n *  <file name=\"sample-po-button-group-basic/sample-po-button-group-basic.component.html\"> </file>\n *  <file name=\"sample-po-button-group-basic/sample-po-button-group-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-button-group-labs\" title=\"Portinari Button Group Labs\">\n *  <file name=\"sample-po-button-group-labs/sample-po-button-group-labs.component.html\"> </file>\n *  <file name=\"sample-po-button-group-labs/sample-po-button-group-labs.component.ts\"> </file>\n * </example>\n *\n *\n * <example name=\"po-button-group-attendance\" title=\"Portinari Button Group - Attendance\">\n *  <file name=\"sample-po-button-group-attendance/sample-po-button-group-attendance.component.html\"> </file>\n *  <file name=\"sample-po-button-group-attendance/sample-po-button-group-attendance.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-button-group-post\" title=\"Portinari Button Group - Post\">\n *  <file name=\"sample-po-button-group-post/sample-po-button-group-post.component.html\"> </file>\n *  <file name=\"sample-po-button-group-post/sample-po-button-group-post.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-button-group',\n  templateUrl: './po-button-group.component.html'\n})\nexport class PoButtonGroupComponent extends PoButtonGroupBaseComponent {\n  parentRef: any;\n\n  constructor(viewRef: ViewContainerRef) {\n    super();\n\n    // Get instance of parent to execute the actions\n    this.parentRef = viewRef['_view']['component'];\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoButtonModule } from './../po-button/index';\nimport { PoTooltipModule } from '../../directives/po-tooltip/index';\n\nimport { PoButtonGroupComponent } from './po-button-group.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente po-button-group.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    PoButtonModule,\n    PoTooltipModule\n  ],\n  declarations: [\n    PoButtonGroupComponent\n  ],\n  exports: [\n    PoButtonGroupComponent\n  ]\n})\nexport class PoButtonGroupModule { }\n","import { EventEmitter, Input, Output } from '@angular/core';\n\nimport { PoCalendarLangService } from './services/po-calendar.lang.service';\nimport { PoDateService } from '../../services/po-date';\n\nconst poCalendarLocales = ['pt', 'en', 'es'];\nconst poCalendarLocaleDefault = 'pt';\n\n/**\n * @description\n *\n * O `po-calendar` Ã© um componente para seleÃ§Ã£o de datas. Ele permite uma fÃ¡cil navegaÃ§Ã£o clicando nas setas\n * de direcionamento e nos *labels* do ano ou mÃªs.\n *\n * Este componente pode receber os seguintes formatos de data:\n *\n * - **Data e hora combinados (E8601DZw): yyyy-mm-ddThh:mm:ss+|-hh:mm**\n * ```\n * this.date = '2017-11-28T00:00:00-02:00';\n * ```\n *\n * - **Data (E8601DAw.): yyyy-mm-dd**\n * ```\n * this.date = '2017-11-28';\n * ```\n *\n * - **JavaScript Date Object:**\n * ```\n * this.date = new Date(2017, 10, 28);\n * ```\n *\n * > Independentemente do formato utilizado, o componente trata o valor do *model* internamente com o\n * formato **Data (E8601DAw.): yyyy-mm-dd**.\n *\n * Importante:\n *\n * - Caso seja definida uma data fora do range da data mÃ­nima e data mÃ¡xima via *ngModel* o componente mostrarÃ¡\n * a data desabilitada porÃ©m o *model* nÃ£o serÃ¡ alterado.\n * - Caso seja definida uma data invÃ¡lida a mesma nÃ£o serÃ¡ atribuÃ­da ao calendÃ¡rio porÃ©m o *model* manterÃ¡ a data invÃ¡lida.\n */\nexport class PoCalendarBaseComponent {\n\n  private _locale: string;\n  private _maxDate: Date;\n  private _minDate: Date;\n\n  currentYear: number;\n  dayVisible: boolean = false;\n  displayDays: Array<number>;\n  displayDecade: Array<number>;\n  displayFinalDecade: number;\n  displayMonth: any;\n  displayMonthNumber: number;\n  displayMonths: Array<any> = Array();\n  displayStartDecade: number;\n  displayWeekDays: Array<any> = Array();\n  displayYear: number;\n  monthVisible: boolean = false;\n  yearVisible: boolean = false;\n\n  protected currentMonthNumber: number;\n  protected date: Date;\n  protected dateIso: string;\n  protected lastDisplay: string;\n  protected onTouched: any = null;\n  protected propagateChange: any = null;\n  protected today: Date = new Date();\n  protected validatorChange: any;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Idioma do calendÃ¡rio.\n   *\n   * Valores vÃ¡lidos:\n   *  - `pt`\n   *  - `en`\n   *  - `es`\n   *\n   * @default `pt`\n   */\n  @Input('p-locale') set locale(locale: string) {\n    this._locale = poCalendarLocales.includes(locale) ? locale : poCalendarLocaleDefault;\n    this.initializeLanguage();\n  }\n  get locale() {\n    return this._locale;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a data mÃ¡xima possÃ­vel de ser selecionada.\n   *\n   * Pode receber os seguintes formatos de data:\n   *\n   * - **Data e hora combinados (E8601DZw): yyyy-mm-ddThh:mm:ss+|-hh:mm**\n   * ```\n   * this.date = '2017-11-28T00:00:00-02:00';\n   * ```\n   *\n   * - **Data (E8601DAw.): yyyy-mm-dd**\n   * ```\n   * this.date = '2017-11-28';\n   * ```\n   *\n   * - **JavaScript Date Object:**\n   * ```\n   * this.date = new Date(2017, 10, 28);\n   * ```\n   */\n  @Input('p-max-date') set maxDate(maxDate: any) {\n    this._maxDate = this.poDate.getDateForDateRange(maxDate, false);\n  }\n  get maxDate() {\n    return this._maxDate;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a data mÃ­nima possÃ­vel de ser selecionada.\n   *\n   * Pode receber os seguintes formatos de data:\n   *\n   * - **Data e hora combinados (E8601DZw): yyyy-mm-ddThh:mm:ss+|-hh:mm**\n   * ```\n   * this.date = '2017-11-28T00:00:00-02:00';\n   * ```\n   *\n   * - **Data (E8601DAw.): yyyy-mm-dd**\n   * ```\n   * this.date = '2017-11-28';\n   * ```\n   *\n   * - **JavaScript Date Object:**\n   * ```\n   * this.date = new Date(2017, 10, 28);\n   * ```\n   */\n  @Input('p-min-date') set minDate(minDate: any) {\n    this._minDate = this.poDate.getDateForDateRange(minDate, true);\n  }\n  get minDate() {\n    return this._minDate;\n  }\n\n  /** Evento disparado ao selecionar um dia do calendÃ¡rio. */\n  @Output('p-change') change = new EventEmitter<string>();\n\n  constructor(\n    public poDate: PoDateService,\n    public poCalendarLangService: PoCalendarLangService\n  ) { }\n\n  initializeLanguage() {\n    this.poCalendarLangService.setLanguage(this.locale);\n    this.displayWeekDays = this.poCalendarLangService.getWeekDaysArray();\n    this.displayMonths = this.poCalendarLangService.getMonthsArray();\n    this.displayMonth = this.displayMonths[this.displayMonthNumber];\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class PoCalendarLangService {\n\n  private language = 'pt';\n\n  private months = [\n    {\n      pt: 'Janeiro',\n      en: 'January',\n      es: 'Enero'\n    },\n    {\n      pt: 'Fevereiro',\n      en: 'February',\n      es: 'Febrero'\n    },\n    {\n      pt: 'MarÃ§o',\n      en: 'March',\n      es: 'Marzo'\n    },\n    {\n      pt: 'Abril',\n      en: 'April',\n      es: 'Abril'\n    },\n    {\n      pt: 'Maio',\n      en: 'May',\n      es: 'Mayo'\n    },\n    {\n      pt: 'Junho',\n      en: 'June',\n      es: 'Junio'\n    },\n    {\n      pt: 'Julho',\n      en: 'July',\n      es: 'Julio'\n    },\n    {\n      pt: 'Agosto',\n      en: 'August',\n      es: 'Agosto'\n    },\n    {\n      pt: 'Setembro',\n      en: 'September',\n      es: 'Setiembre'\n    },\n    {\n      pt: 'Outubro',\n      en: 'October',\n      es: 'Octubre'\n    },\n    {\n      pt: 'Novembro',\n      en: 'November',\n      es: 'Noviembre'\n    },\n    {\n      pt: 'Dezembro',\n      en: 'December',\n      es: 'Diciembre'\n    }\n  ];\n\n  private shortWeekDays = [\n    {\n      pt: 'Dom',\n      en: 'Sun',\n      es: 'Dom'\n    },\n    {\n      pt: 'Seg',\n      en: 'Mon',\n      es: 'Lun'\n    },\n    {\n      pt: 'Ter',\n      en: 'Tue',\n      es: 'Mar'\n    },\n    {\n      pt: 'Qua',\n      en: 'Wed',\n      es: 'MiÃ©'\n    },\n    {\n      pt: 'Qui',\n      en: 'Thu',\n      es: 'Jue'\n    },\n    {\n      pt: 'Sex',\n      en: 'Fri',\n      es: 'Vie'\n    },\n    {\n      pt: 'SÃ¡b',\n      en: 'Sat',\n      es: 'SÃ¡b'\n    }\n  ];\n\n  private monthLabel = {\n    pt: 'MÃªs',\n    en: 'Month',\n    es: 'Mes'\n  };\n\n  private yearLabel = {\n    pt: 'Ano',\n    en: 'Year',\n    es: 'AÃ±o'\n  };\n\n  getMonth(month: number) {\n    return this.months[month][this.language];\n  }\n\n  getMonthLabel() {\n    return this.monthLabel[this.language];\n  }\n\n  getMonthsArray() {\n    const arrMonths = Array();\n    for (let i = 0; i < this.months.length; i++) {\n      arrMonths.push(this.months[i][this.language]);\n    }\n    return arrMonths;\n  }\n\n  getWeekDays(day: number) {\n    return this.shortWeekDays[day][this.language];\n  }\n\n  getWeekDaysArray() {\n    const arrWeekDays = Array();\n    for (let i = 0; i < this.shortWeekDays.length; i++) {\n      arrWeekDays.push(this.shortWeekDays[i][this.language]);\n    }\n    return arrWeekDays;\n  }\n\n  getYearLabel() {\n    return this.yearLabel[this.language];\n  }\n\n  setLanguage(language: string) {\n    if (language && language.length >= 2) {\n      language = language.toLowerCase().slice(0, 2);\n      this.language = (language === 'pt' || language === 'en' || language === 'es') ? language : 'pt';\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nconst poCalendarServiceFirstWeekDayDefault: number = 0;\n\n@Injectable()\nexport class PoCalendarService {\n\n  monthDates(year: any, month: any, dayFormatter: any = null, weekFormatter: any = null) {\n    if ((typeof month !== 'number') || (month < 0) || (month > 11)) {\n      throw Error(('month must be a number (Jan is 0)'));\n    }\n\n    const weeks: Array<any> = [];\n    let week: Array<any> = [];\n    let i = 0;\n    let date = new Date(year, month, 1);\n\n    if (year >= 0 && year < 100) {\n      date.setFullYear(year);\n    }\n\n    date = this.weekStartDate(date);\n\n    do {\n      for (i = 0; i < 7; i++) {\n        week.push(dayFormatter ? dayFormatter(date) : date);\n        date = new Date(date.getTime());\n        date.setDate(date.getDate() + 1);\n      }\n      weeks.push(weekFormatter ? weekFormatter(week) : week);\n      week = [];\n    } while ((date.getMonth() <= month) && (date.getFullYear() === year));\n    return weeks;\n  }\n\n  monthDays(year: any, month: any) {\n    const getDayOrZero = function(date: any) {\n      return date.getMonth() === month ? date : 0;\n    };\n    return this.monthDates(year, month, getDayOrZero);\n  }\n\n  weekStartDate(date: any) {\n    const startDate = new Date(date.getTime());\n    while (startDate.getDay() !== poCalendarServiceFirstWeekDayDefault) {\n      startDate.setDate(startDate.getDate() - 1);\n    }\n    return startDate;\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { sortValues } from '../../utils/util';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * ServiÃ§o responsÃ¡vel por gerenciar o tratamento dos formatos de data e hora.\n */\n@Injectable()\nexport class PoDateService {\n\n  private readonly dateRegex = new RegExp('^(?:[0-9])\\\\d{1}(?:[0-9])\\\\d{1}-' +\n  '(?:0[1-9]|1[0-2])-' +\n  '(?:0[1-9]|[12]\\\\d|3[01])$');\n\n  private readonly isoRegex = new RegExp('^(?:[0-9])\\\\d{1}(?:[0-9])\\\\d{1}-' +\n  '(?:0[1-9]|1[0-2])-' +\n  '(?:0[1-9]|[12]\\\\d|3[01])' +\n  'T(?:[01]\\\\d|2[0-3]):[0-5]\\\\d:[0-5]\\\\d(?:Z|-0[1-9]|-1\\\\d|-2[0-3]|' +\n  '-00:?(?:0[1-9]|[0-5]\\\\d)|\\\\+[01]\\\\d|\\\\+2[0-3])' +\n  '(?:|:?[0-5]\\\\d)$');\n\n  /**\n   * MÃ©todo responsÃ¡vel por converter datas do formato `yyyy-mm-ddThh:mm:ss+|-hh:mm` para o formato `Date`.\n   *\n   * @param dateString Data no formato `yyyy-mm-ddThh:mm:ss+|-hh:mm`.\n   * @param minDate Definir `true` caso seja `minDate`.\n   * @param maxDate Definir `true` caso seja `maxDate`.\n   */\n  convertIsoToDate(dateString: string , minDate: boolean, maxDate: boolean): Date {\n    if (dateString) {\n      const { year, month, day } = this.getDateFromIso(dateString);\n\n      if (minDate) {\n        const date = new Date(year, month - 1, day, 0, 0, 0);\n        this.setYearFrom0To100(date, year);\n        return date;\n      } else if (maxDate) {\n        const date = new Date(year, month - 1, day, 23, 59, 59);\n        this.setYearFrom0To100(date, year);\n        return date;\n      } else {\n        const miliseconds = Date.parse(dateString);\n        const timezone = new Date().getTimezoneOffset() * 60000;\n        return new Date(miliseconds + timezone);\n      }\n    }\n  }\n\n  /**\n   * MÃ©todo responsÃ¡vel por converter data do formato `Date` para o formato `yyyy-mm-dd`.\n   *\n   * @param date Data no formato `Date`.\n   */\n  convertDateToISO(date: Date) {\n    if (date) {\n      const fullYear = date.getFullYear();\n      const getMonth = date.getMonth() + 1;\n      const day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();\n      const month = getMonth < 10 ? '0' + getMonth : getMonth;\n      const year = this.formatYear(fullYear);\n      return year + '-' + month + '-' + day;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * MÃ©todo responsÃ¡vel por adicionar zeros a esquerda do anos em formato string.\n   *\n   * @param year Ano a ser validado.\n   */\n  formatYear(year: number) {\n\n    if (year > 999) {\n      return year.toString();\n    }\n\n    if (year > 99 && year < 1000) {\n      return `0${year}`;\n    }\n\n    if (year > 9 && year < 100) {\n      return `00${year}`;\n    }\n\n    if (year >= 0 && year < 10) {\n      return `000${year}`;\n    }\n  }\n\n  /**\n   * MÃ©todo responsÃ¡vel por retornar o dia, mÃªs e ano separados em formato de objeto.\n   *\n   * @param isoDate Ano em formato string.\n   */\n  getDateFromIso(isoDate: string): { year: number, month: number, day: number } {\n    const day = parseInt(isoDate.substring(8, 10), 10);\n    const month = parseInt(isoDate.substring(5, 7), 10);\n    const year = parseInt(isoDate.substring(0, 4), 10);\n\n    return { year, month, day };\n  }\n\n  /**\n   * MÃ©todo responsÃ¡vel por retornar a data com a hora definida para `00:00:00` caso `isMinDate` for igual a `true` ou `23:59:59`\n   * caso `isMindate` seja igual a `false` .\n   *\n   * @param date Data no formato `Date` ou `yyyy-mm-ddThh:mm:ss+|-hh:mm`.\n   * @param isMinDate Caso `true` aplica `00:00:00`, caso `false` aplica `23:59:59` a hora da data informada.\n   */\n  getDateForDateRange(date: any, isMinDate: boolean) {\n    const lastHour = isMinDate ? [0, 0, 0] : [23, 59, 59];\n    if (date instanceof Date) {\n      const { year, month, day } = this.splitDate(date);\n      const validDate = new Date(year, month, day, ...lastHour);\n      this.setYearFrom0To100(validDate, year);\n      return validDate;\n    } else if (this.isValidIso(date)) {\n      return this.convertIsoToDate(date, isMinDate, !isMinDate);\n    }\n  }\n\n  /**\n   * Retorna `true` caso o perÃ­odo seja vÃ¡lido, para isso a primeira data deve ser maior que a segunda data.\n   * @param dateA primeira data\n   * @param dateB segunda data\n   */\n  isDateRangeValid(dateA: string = '', dateB: string = ''): boolean {\n    const dateASplitted = dateA.split('-').map(item => parseInt(item, 10));\n    const dateBSplitted = dateB.split('-').map(item => parseInt(item, 10));\n\n    for (let index = 0; index <= dateASplitted.length; index++) {\n\n      if (dateASplitted[index] > dateBSplitted[index]) {\n        return true;\n      } else if (dateASplitted[index] < dateBSplitted[index]) {\n        return false;\n      }\n\n    }\n\n    return true;\n  }\n\n  /**\n   * MÃ©todo responsÃ¡vel por validar se uma data estÃ¡ no formato `yyyy-mm-ddThh:mm:ss+|-hh:mm` ou `yyyy-mm-dd`.\n   *\n   * @param stringDate Data.\n   */\n  isValidIso(stringDate: string) {\n    return this.dateRegex.test(stringDate) || this.isoRegex.test(stringDate);\n  }\n\n  /**\n   * MÃ©todo responsÃ¡vel por corrigir a data caso a mesma esteja entre os anos 0 e 99.\n   *\n   * @param date Data.\n   * @param year .\n   */\n  setYearFrom0To100(date: Date, year: number) {\n    if (year >= 0 && year < 100 ) {\n      date.setFullYear(year);\n    }\n  }\n\n  /**\n   * MÃ©todo responsÃ¡vel por ordenar duas datas.\n   *\n   * @param leftSide Primeira data a ser comparada.\n   * @param rightSide Segunda data a ser comparada.\n   * @param ascending Determina se serÃ¡ em ordem crescente ou decrescente.\n   */\n  sortDate(leftSide: string | Date, rightSide: string | Date, ascending: boolean): number {\n    return sortValues(this.validateDate(leftSide), this.validateDate(rightSide), ascending);\n  }\n\n  /**\n   * MÃ©todo responsÃ¡vel por retornar o dia , mÃªs e ano de uma data informada.\n   *\n   * @param date Valor da data.\n   */\n  splitDate(date: Date) {\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const day = date.getDate();\n    return { year, month, day };\n  }\n\n  /**\n   * MÃ©todo responsÃ¡vel por validar se uma data estÃ¡ entre a `minDate` e `maxDate`.\n   *\n   * @param date Data a ser validada.\n   * @param minDate Data inicial.\n   * @param maxDate Data final.\n   */\n  validateDateRange(date: Date, minDate: Date, maxDate: Date) {\n    if (minDate && maxDate) {\n      return (date >= minDate && date <= maxDate);\n    } else if (minDate && !maxDate) {\n      return (date >= minDate);\n    } else if (!minDate && maxDate) {\n      return (date <= maxDate);\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * MÃ©todo responsÃ¡vel por validar se a data foi informada nos padrÃµes 'yyyy-mm-dd', 'yyyy-mm-ddThh:mm:ss+|-hh:mm' ou\n   * 'Date' padrÃ£o do javascript.\n   *\n   * @param date Data que serÃ¡ validada.\n   */\n  private validateDate(date: string | Date) {\n    const validDate = date instanceof Date ? this.convertDateToISO(date) : date;\n\n    return this.isValidIso(validDate) ? validDate : undefined;\n  }\n\n}\n","import { Component, forwardRef, OnInit } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { PoCalendarBaseComponent } from './po-calendar-base.component';\nimport { PoCalendarLangService } from './services/po-calendar.lang.service';\nimport { PoCalendarService } from './services/po-calendar.service';\nimport { PoDateService } from '../../services/po-date/po-date.service';\n\n/**\n * @docsExtends PoCalendarBaseComponent\n *\n * @example\n *\n * <example name=\"po-calendar-basic\" title=\"Portinari Calendar Basic\" >\n *  <file name=\"sample-po-calendar-basic/sample-po-calendar-basic.component.html\"> </file>\n *  <file name=\"sample-po-calendar-basic/sample-po-calendar-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-calendar-labs\" title=\"Portinari Calendar Labs\" >\n *  <file name=\"sample-po-calendar-labs/sample-po-calendar-labs.component.html\"> </file>\n *  <file name=\"sample-po-calendar-labs/sample-po-calendar-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-calendar-ticket-sales\" title=\"Portinari Calendar - Ticket Sales\" >\n *  <file name=\"sample-po-calendar-ticket-sales/sample-po-calendar-ticket-sales.component.html\"> </file>\n *  <file name=\"sample-po-calendar-ticket-sales/sample-po-calendar-ticket-sales.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-calendar',\n  templateUrl: './po-calendar.component.html',\n  providers: [\n    PoCalendarService,\n    PoCalendarLangService,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PoCalendarComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => PoCalendarComponent),\n      multi: true,\n    }\n  ]\n})\nexport class PoCalendarComponent extends PoCalendarBaseComponent implements OnInit {\n\n  constructor(\n    private poCalendarService: PoCalendarService,\n    poCalendarLangService: PoCalendarLangService,\n    poDate: PoDateService) {\n    super(poDate, poCalendarLangService);\n  }\n\n  ngOnInit() {\n    this.init();\n  }\n\n  getBackgroundColor(displayValue: number, propertyValue: number) {\n    return (displayValue === propertyValue) ? 'po-calendar-box-background-selected' : 'po-calendar-box-background';\n  }\n\n  getDayBackgroundColor(date: Date) {\n    return this.getDayColor(date, 'background');\n  }\n\n  getDayForegroundColor(date: Date) {\n    return this.getDayColor(date, 'foreground');\n  }\n\n  getForegroundColor(displayValue: number, propertyValue: number) {\n    return (displayValue === propertyValue) ? 'po-calendar-box-foreground-selected' : 'po-calendar-box-foreground';\n  }\n\n  getMonthLabel() {\n    return this.poCalendarLangService.getMonthLabel();\n  }\n\n  getYearLabel() {\n    return this.poCalendarLangService.getYearLabel();\n  }\n\n  onNextMonth() {\n    this.displayMonthNumber < 11 ? this.updateDisplay(this.displayYear, this.displayMonthNumber + 1) :\n      this.updateDisplay(this.displayYear + 1, 0);\n  }\n\n  onPreviousMonth() {\n    this.displayMonthNumber > 0 ? this.updateDisplay(this.displayYear, this.displayMonthNumber - 1) :\n      this.updateDisplay(this.displayYear - 1, 11);\n  }\n\n  // Ao selecionar uma data\n  onSelectDate(date: Date) {\n    this.date = date;\n    this.dateIso = this.poDate.convertDateToISO(date);\n    if (this.propagateChange) {\n      this.propagateChange(this.dateIso);\n    }\n    this.change.emit(this.dateIso);\n  }\n\n  // Ao selecionar um mÃªs\n  onSelectMonth(year: number, month: number) {\n    this.selectDay();\n    this.updateDisplay(year, month);\n  }\n\n  // Ao selecionar um ano\n  onSelectYear(year: number, month: number) {\n    // Se veio da tela de seleÃ§Ã£o de mÃªs\n    this.lastDisplay === 'month' ? this.selectMonth() : this.selectDay();\n\n    this.currentYear = year;\n    this.updateDisplay(year, month);\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(func: any): void {\n    this.onTouched = func;\n  }\n\n  registerOnValidatorChange(fn: () => void) {\n    this.validatorChange = fn;\n  }\n\n  selectDay() {\n    this.dayVisible = true;\n    this.monthVisible = false;\n    this.yearVisible = false;\n    this.lastDisplay = 'day';\n  }\n\n  selectMonth() {\n    this.dayVisible = false;\n    this.monthVisible = true;\n    this.yearVisible = false;\n    this.lastDisplay = 'month';\n  }\n\n  selectYear() {\n    this.dayVisible = false;\n    this.monthVisible = false;\n    this.yearVisible = true;\n  }\n\n  updateYear(value: number) {\n    this.updateDisplay(this.displayYear + value, this.displayMonthNumber);\n  }\n\n  validateModel(model: any) {\n    if (this.validatorChange) {\n      this.validatorChange(model);\n    }\n  }\n\n  validate(c: AbstractControl): { [key: string]: any; } {\n    return null;\n  }\n\n  writeValue(value: any) {\n    if (value) {\n      this.writeDate(value);\n    } else {\n      this.date = undefined;\n      this.updateDate(this.today);\n    }\n  }\n\n  private addAllYearsInDecade(year: number) {\n    let i;\n    for (i = year; i < year + 10; i++) {\n      this.displayDecade.push(i);\n    }\n  }\n\n  private equalsDate(date1: Date, date2: Date): boolean {\n    try {\n      return date1.getFullYear() === date2.getFullYear() &&\n        date1.getMonth() === date2.getMonth() &&\n        date1.getDate() === date2.getDate();\n    } catch (error) {\n      return false;\n    }\n  }\n\n  // ObtÃ©m um array de todos os anos desta dÃ©cada\n  private getDecadeArray(year) {\n    this.displayDecade = Array();\n\n    if (year % 10 !== 0) {\n      while (year % 10 !== 0) {\n        year--;\n      }\n    }\n    this.updateDecade(year);\n  }\n\n  private getColorForDate(date: Date, local: string) {\n    return this.poDate.validateDateRange(date, this.minDate, this.maxDate) ? `po-calendar-box-${local}-selected` :\n      `po-calendar-box-${local}-selected-disabled`;\n  }\n\n  private getColorForDateRange(date: Date, local: string) {\n    return this.poDate.validateDateRange(date, this.minDate, this.maxDate) ? `po-calendar-box-${local}` :\n      `po-calendar-box-${local}-disabled`;\n  }\n\n  private getColorForToday(date: Date, local: string) {\n    return this.poDate.validateDateRange(date, this.minDate, this.maxDate) ? `po-calendar-box-${local}-today` :\n      `po-calendar-box-${local}-today-disabled`;\n  }\n\n  private getDayColor(date: Date, local: string) {\n    if (this.equalsDate(date, this.date)) {\n      return this.getColorForDate(date, local);\n    } else if (this.equalsDate(date, this.today)) {\n      return this.getColorForToday(date, local);\n    } else {\n      return this.getColorForDateRange(date, local);\n    }\n  }\n\n  private init() {\n    this.date && this.poDate.isValidIso(this.poDate.convertDateToISO(this.date)) ?\n      this.updateDate(this.date) : this.updateDate(this.today);\n    this.initializeLanguage();\n    this.selectDay();\n  }\n\n  private selectDateFromDate(date: Date) {\n    this.date = date;\n    this.onSelectDate(this.date);\n  }\n\n  private selectDateFromIso(stringDate: string) {\n    const { year, month, day } = this.poDate.getDateFromIso(stringDate);\n    const date = new Date(year, month - 1, day);\n    this.poDate.setYearFrom0To100(date, year);\n    this.date = date;\n    this.onSelectDate(this.date);\n  }\n\n  private updateDate(date: Date) {\n    if (date) {\n      this.currentMonthNumber = date.getMonth();\n      this.currentYear = date.getFullYear();\n      this.updateDisplay(this.currentYear, this.currentMonthNumber);\n    }\n  }\n\n  private updateDecade(year: number) {\n    this.addAllYearsInDecade(year);\n    this.displayStartDecade = year;\n    this.displayFinalDecade = year + 9;\n  }\n\n  private updateDisplay(year: number, month: number) {\n    const calendarArray = this.poCalendarService.monthDays(year, month);\n    this.displayDays = [].concat.apply([], calendarArray);\n    this.displayMonthNumber = month;\n    this.displayMonth = this.displayMonths[month];\n    this.displayYear = year;\n    this.getDecadeArray(year);\n  }\n\n  private writeDate(value: any) {\n    value instanceof Date ? this.selectDateFromDate(value) : this.writeDateIso(value);\n    this.updateDate(this.date);\n  }\n\n  private writeDateIso(value: any) {\n    this.poDate.isValidIso(value) ? this.selectDateFromIso(value) : this.date = undefined;\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoCalendarComponent } from './po-calendar.component';\nimport { PoCalendarLangService } from './services/po-calendar.lang.service';\nimport { PoCalendarService } from './services/po-calendar.service';\n\n/**\n * @description\n * MÃ³dulo do componente `po-calendar`.\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [PoCalendarComponent],\n  exports: [PoCalendarComponent],\n  providers: [\n    PoCalendarLangService,\n    PoCalendarService\n  ]\n})\nexport class PoCalendarModule { }\n","import { EventEmitter, Input, Output } from '@angular/core';\n\nimport { convertToInt, isTypeof } from '../../utils/util';\n\nimport { PoChartGaugeSerie } from './po-chart-types/po-chart-gauge/po-chart-gauge-series.interface';\nimport { PoChartType } from './enums/po-chart-type.enum';\nimport { PoDonutChartSeries } from './po-chart-types/po-chart-donut/po-chart-donut-series.interface';\nimport { PoPieChartSeries } from './po-chart-types/po-chart-pie/po-chart-pie-series.interface';\n\nconst poChartDefaultHeight = 400;\nconst poChartMinHeight = 200;\nconst poChartTypeDefault = PoChartType.Pie;\n\nexport type PoChartSeries = Array<PoDonutChartSeries | PoPieChartSeries | PoChartGaugeSerie>;\n\n/**\n * @description\n *\n * O `po-chart` Ã© um componente para renderizaÃ§Ã£o de dados atravÃ©s de grÃ¡ficos, com isso facilitando a compreensÃ£o e tornando a\n * visualizaÃ§Ã£o destes dados mais agradÃ¡vel.\n *\n * AtravÃ©s de suas principais propriedades Ã© possÃ­vel definir o tipo de grÃ¡fico, uma altura e um tÃ­tulo.\n *\n * AlÃ©m disso, tambÃ©m Ã© possÃ­vel definir uma aÃ§Ã£o que serÃ¡ executada ao clicar em determinado elemento do grÃ¡fico\n * e outra que serÃ¡ executada ao passar o *mouse* sobre o elemento.\n *\n * #### Boas prÃ¡ticas\n *\n * - Para que o grÃ¡fico nÃ£o fique ilegÃ­vel e incompreensÃ­vel, evite uma quantia excessiva de sÃ©ries.\n * - Para exibir a intensidade de um Ãºnico dado dÃª preferÃªncia ao tipo `gauge`.\n */\nexport abstract class PoChartBaseComponent {\n\n  private _height: number;\n  private _series: Array<PoDonutChartSeries | PoPieChartSeries> | PoChartGaugeSerie;\n  private _type: PoChartType = poChartTypeDefault;\n\n  // manipulaÃ§Ã£o das sÃ©ries tratadas internamente para preservar 'p-series';\n  protected chartSeries: PoChartSeries;\n\n  public readonly poChartType = PoChartType;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a altura do grÃ¡fico.\n   *\n   * O valor padrÃ£o dos grÃ¡ficos sÃ£o:\n   * - para o tipo *gauge*: `200px`;\n   * - para os demais tipos: `400px`.\n   *\n   * > O valor mÃ­nimo aceito nesta propriedade Ã© 200.\n   *\n   * @default `400px`\n   */\n  @Input('p-height') set height(value: number) {\n    const intValue = convertToInt(value);\n    let height: number;\n\n    if (isTypeof(value, 'number')) {\n      height = intValue <= poChartMinHeight ? poChartMinHeight : intValue;\n    } else {\n      height = this.setDefaultHeight();\n    }\n\n    this._height = height;\n\n    this.rebuildComponent();\n  }\n\n  get height(): number {\n    return this._height || this.setDefaultHeight();\n  }\n\n  /**\n   * @description\n   *\n   * Define os elementos do grÃ¡fico que serÃ£o criados dinamicamente.\n   *\n   * > A coleÃ§Ã£o de objetos deve implementar alguma das interfaces abaixo:\n   * - `PoDonutChartSeries`\n   * - `PoPieChartSeries`\n   * - `PoChartGaugeSerie`\n   */\n  @Input('p-series') set series(value: PoChartGaugeSerie | Array<PoDonutChartSeries | PoPieChartSeries>) {\n    this._series = value || [];\n\n    this.chartSeries = Array.isArray(this._series) ? [...this._series] : this.transformObjectToArrayObject(this._series);\n  }\n\n  get series() {\n    return this._series;\n  }\n\n  /** Define o tÃ­tulo do grÃ¡fico. */\n  @Input('p-title') title?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o tipo de grÃ¡fico.\n   *\n   * > Veja os valores vÃ¡lidos no *enum* `PoChartType`.\n   *\n   * @default `PoChartType.Pie`\n   */\n  @Input('p-type') set type(value: PoChartType) {\n    this._type = (<any>Object).values(PoChartType).includes(value) ? value : poChartTypeDefault;\n\n    this.rebuildComponent();\n  }\n\n  get type(): PoChartType {\n    return this._type;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Evento executado quando o usuÃ¡rio clicar sobre um elemento do grÃ¡fico.\n   *\n   * > SerÃ¡ passado por parÃ¢metro um objeto contendo a categoria e valor da sÃ©rie.\n   */\n  @Output('p-series-click')\n  seriesClick = new EventEmitter<PoDonutChartSeries | PoPieChartSeries | PoChartGaugeSerie>();\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Evento executado quando o usuÃ¡rio passar o *mouse* sobre um elemento do grÃ¡fico.\n   *\n   * > SerÃ¡ passado por parÃ¢metro um objeto contendo a categoria e valor da sÃ©rie.\n   */\n  @Output('p-series-hover')\n  seriesHover = new EventEmitter<PoDonutChartSeries | PoPieChartSeries | PoChartGaugeSerie>();\n\n  onSeriesClick(event: any): void {\n    this.seriesClick.emit(event);\n  }\n\n  onSeriesHover(event: any): void {\n    this.seriesHover.emit(event);\n  }\n\n  private setDefaultHeight() {\n    return this.type === PoChartType.Gauge ? poChartMinHeight : poChartDefaultHeight;\n  }\n\n  private transformObjectToArrayObject(serie: PoChartGaugeSerie) {\n    return typeof serie === 'object' && Object.keys(serie).length ? [{...serie}] : [];\n  }\n\n  abstract rebuildComponent(): void;\n\n}\n","// Array de cores para grÃ¡ficos definido pela equipe de UX Portinari.\nexport const PoChartColors = [\n  ['#29B6C5'],\n  ['#0C6C94', '#29B6C5'],\n  ['#0C6C94', '#29B6C5', '#C9ECF0'],\n  ['#0C6C94', '#0B92B4', '#29B6C5', '#94DAE2'],\n  ['#0C6C94', '#0B92B4', '#29B6C5', '#94DAE2', '#C9ECF0'],\n  ['#0C6C94', '#00A5C5', '#0082A8', '#31628D', '#364473', '#32285C'],\n  ['#0C6C94', '#00AACB', '#018DAE', '#277099', '#325783', '#35426E', '#32285D'],\n  ['#0C6C94', '#00AFCE', '#0194B6', '#117FA2', '#0088AC', '#23789F', '#2B6992', '#32285C'],\n  ['#0C6C94', '#00BAD5', '#00A7C7', '#0197B8', '#0088AC', '#23789F', '#2B6992', '#315C87', '#32285C'],\n  ['#0C6C94', '#00BAD5', '#00A7C7', '#0197B8', '#0088AC', '#23789F', '#2B6992', '#315C87', '#364E7C', '#32285C'],\n  ['#0C6C94', '#00BAD5', '#00A7C7', '#0197B8', '#0088AC', '#23789F', '#2B6992', '#315C87', '#364E7C', '#36436F', '#32285C'],\n  ['#0C6C94', '#00BAD5', '#00A7C7', '#0197B8', '#0088AC', '#23789F', '#2B6992', '#315C87', '#364E7C', '#36436F', '#333565', '#32285C'],\n];\n\n// Cores que serÃ¡ utilizado texto preto\nexport const PoSeriesTextBlack = [ '#94DAE2', '#C9ECF0' ];\n","const poChartAnimationDurationTime = 1500;\n\nexport const poChartAngleStepInterval = Math.PI * 2 / Math.floor( poChartAnimationDurationTime / 60 );\nexport const poChartCompleteCircle = 0.0001;\nexport const poChartGaugeStartAngle = -Math.PI;\nexport const poChartPadding: number = 24;\nexport const poChartStartAngle = -Math.PI / 2;\n\n// tamanho da largura da serie proporcional ao grafico do tipo Donut, o valor 0.27 fica proximo de 32px\nexport const poChartDonutSerieWidth = 0.27;\n\n// tamanho da largura da serie proporcional ao grafico do tipo Gauge, o valor 0.04 fica proximo de 8px\nexport const poChartGaugeSerieWidth = 0.06;\n","import { ElementRef, ViewChild } from '@angular/core';\n\nimport { Subject } from 'rxjs';\n\nimport { PoChartGaugeSerie } from './po-chart-gauge/po-chart-gauge-series.interface';\nimport { PoChartType } from '../enums/po-chart-type.enum';\nimport { PoDonutChartSeries } from './po-chart-donut/po-chart-donut-series.interface';\nimport { PoPieChartSeries } from './po-chart-pie/po-chart-pie-series.interface';\n\nconst Padding: number = 24;\n\nexport abstract class PoChartDynamicTypeComponent {\n\n  protected windowResizeListener: () => void;\n  protected windowScrollListener: () => void;\n\n  centerX: number;\n  chartElementCategory: any;\n  chartElementDescription: any;\n  chartElementValue: any;\n  chartHeader: number;\n  chartLegend: number;\n  chartWrapper: number;\n  colors: Array<string>;\n  height: number;\n  innerRadius: number = 0;\n  onSerieClick: Subject<PoDonutChartSeries | PoPieChartSeries | PoChartGaugeSerie> = new Subject();\n  onSerieHover: Subject<PoDonutChartSeries | PoPieChartSeries | PoChartGaugeSerie> = new Subject();\n  series: Array<any> = [];\n  svgElement: HTMLObjectElement;\n  svgHeight: number;\n  target: HTMLInputElement & EventTarget;\n  tooltipElement: HTMLObjectElement;\n  tooltipText: string;\n  totalValue: number;\n  type: PoChartType;\n\n  @ViewChild('chartBody', { static: true }) chartBody: ElementRef;\n\n  @ViewChild('svgContainer', { static: true }) svgContainer: ElementRef;\n\n  get isChartGaugeType(): boolean {\n    return this.type === PoChartType.Gauge;\n  }\n\n  calculateSVGContainerDimensions(chartWrapperElement: number, chartHeaderElement: number, chartLegendElement: number) {\n    const svgContainerHeightCalc = this.height - chartHeaderElement - chartLegendElement - (Padding * 2);\n\n    this.svgHeight = svgContainerHeightCalc <= 0 ? 0 : svgContainerHeightCalc;\n    this.centerX = chartWrapperElement / 2;\n  }\n\n  calculateTotalValue() {\n    this.totalValue = this.type === PoChartType.Gauge ? 100 : this.series.reduce((previousValue, serie) => previousValue + serie.value, 0);\n  }\n\n}\n","import { ElementRef, NgZone, OnDestroy, OnInit, Renderer2 } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { convertNumberToDecimal } from '../../../../utils/util';\n\nimport {\n  poChartAngleStepInterval,\n  poChartCompleteCircle,\n  poChartDonutSerieWidth,\n  poChartGaugeSerieWidth,\n  poChartPadding,\n  poChartStartAngle\n} from './po-chart-circular.constant';\nimport { PoChartDynamicTypeComponent } from '../po-chart-dynamic-type.component';\nimport { PoChartGaugeSerie } from '../po-chart-gauge/po-chart-gauge-series.interface';\nimport { PoChartType } from '../../enums/po-chart-type.enum';\nimport { PoCircularChartSeries } from './po-chart-circular-series.interface';\nimport { PoDonutChartSeries } from '../po-chart-donut/po-chart-donut-series.interface';\nimport { PoPieChartSeries } from '../po-chart-pie/po-chart-pie-series.interface';\nimport { PoSeriesTextBlack } from '../../po-chart-colors.constant';\n\nconst poChartBlackColor = '#000000';\nconst poChartWhiteColor = '#ffffff';\n\nexport class PoChartCircular extends PoChartDynamicTypeComponent implements OnDestroy, OnInit {\n\n  chartItemStartAngle = poChartStartAngle;\n  windowResizeEmitter: Subject<any> = new Subject();\n\n  // tslint:disable-next-line: use-type-alias\n  protected _series: Array<PoPieChartSeries | PoDonutChartSeries | PoChartGaugeSerie>;\n\n  private animationRunning: boolean;\n  private chartItemEndAngle: number;\n  private chartItemsEndAngleList: Array<number> = [];\n  private svgPathElementsList: Array<string> = [];\n  private svgTextElementsList: Array<string> = [];\n\n  set series(value: Array<PoPieChartSeries | PoDonutChartSeries | PoChartGaugeSerie>) {\n    this._series = this.getSeriesWithValue(value);\n  }\n\n  get series() {\n    return this._series;\n  }\n\n  constructor(protected el: ElementRef, private ngZone: NgZone, private renderer: Renderer2) {\n    super();\n  }\n\n  ngOnDestroy() {\n    this.removeWindowResizeListener();\n    this.removeWindowScrollListener();\n    this.animationRunning = false;\n  }\n\n  ngOnInit() {\n    this.chartInitSetup();\n    this.setEventListeners();\n  }\n\n  removeTooltip() {\n    if (this.tooltipElement) {\n      this.renderer.addClass(this.tooltipElement, 'po-invisible');\n    }\n  }\n\n  protected drawPath(path, chartItemStartAngle, chartItemEndAngle) {\n    const largeArc = chartItemEndAngle - chartItemStartAngle > Math.PI;\n\n    const sinAlpha = Math.sin(chartItemStartAngle);\n    const cosAlpha = Math.cos(chartItemStartAngle);\n\n    const sinBeta = Math.sin(chartItemEndAngle);\n    const cosBeta = Math.cos(chartItemEndAngle);\n\n    const startX = this.centerX + cosAlpha * this.centerX;\n    const startY = this.centerX + sinAlpha * this.centerX;\n\n    const endX = this.centerX + cosBeta * this.centerX;\n    const endY = this.centerX + sinBeta * this.centerX;\n\n    const startInnerX = this.centerX + cosAlpha * this.innerRadius;\n    const startInnerY = this.centerX + sinAlpha * this.innerRadius;\n\n    const endInnerX = this.centerX + cosBeta * this.innerRadius;\n    const endInnerY = this.centerX + sinBeta * this.innerRadius;\n\n    const halfGaugeCoordinates = [\n      'M', startX, startY,\n      'A', this.centerX, this.centerX, 0, '0,1', endX, endY,\n      'A', 1, 1, 0, '0,1', endInnerX, endInnerY,\n      'A', this.innerRadius, this.innerRadius, 0, '0,0', startInnerX, startInnerY,\n      'A', 1, 1, 0, '0,1', startX, startY,\n      'Z'].join(' ');\n\n    const pathCoordinates = [\n      'M', startX, startY,\n      'A', this.centerX, this.centerX, 0, largeArc ? '1,1' : '0,1', endX, endY,\n      'L', endInnerX, endInnerY,\n      'A', this.innerRadius, this.innerRadius, 0, largeArc ? '1,0' : '0,0', startInnerX, startInnerY,\n      'Z'].join(' ');\n\n    return path.setAttribute('d', this.isChartGaugeType ? halfGaugeCoordinates : pathCoordinates);\n  }\n\n  protected getSeriesWithValue(series: Array<PoCircularChartSeries | PoChartGaugeSerie>) {\n    const newSeries = [];\n\n    series.forEach((serie, index) => {\n      if (serie.value > 0) {\n        newSeries.push({ ...serie, color: this.colors[index] });\n      }\n    });\n\n    return newSeries;\n  }\n\n  private animationSetup() {\n    this.chartItemEndAngle = this.chartItemsEndAngleList[0];\n    this.animationRunning = true;\n    this.drawPathInit();\n  }\n\n  private appendGaugeBackgroundPathElement(svgPathsWrapper: any) {\n    const svgPath = this.renderer.createElement('svg:path', 'svg');\n    this.renderer.setAttribute(svgPath, 'class', 'po-chart-gauge-base-path');\n    svgPathsWrapper.appendChild(svgPath);\n    this.renderer.appendChild(this.svgElement, svgPathsWrapper);\n  }\n\n  private calculateAngleRadians() {\n    this.series.forEach((serie, index) =>\n      this.chartItemsEndAngleList[index] = this.calculateEndAngle(serie.value, this.totalValue)\n    );\n  }\n\n  private calculateCurrentEndAngle(angleCurrentPosition: number) {\n    const isSerieDrawCompleted = this.chartItemStartAngle + angleCurrentPosition > this.chartItemStartAngle + this.chartItemEndAngle;\n\n    if (isSerieDrawCompleted) {\n      return (this.chartItemStartAngle + this.chartItemEndAngle) - poChartCompleteCircle;\n    } else {\n      return this.chartItemStartAngle + angleCurrentPosition;\n    }\n  }\n\n  private calculateEndAngle(value: number, totalValue: number): number {\n    const endAngle = value / totalValue * (Math.PI * 2);\n\n    return this.isChartGaugeType ? (endAngle / 2) : endAngle;\n  }\n\n  private calculateSVGDimensions() {\n    this.calculateSVGContainerDimensions(this.chartWrapper, this.chartHeader, this.chartLegend);\n\n    this.innerRadius = this.setInnerRadius(this.type);\n  }\n\n  private changeTooltipPosition(event: MouseEvent) {\n    if (this.tooltipElement && this.tooltipElement.classList.contains('po-invisible')) {\n      this.showTooltip();\n    }\n\n    const tooltipPositions = this.setTooltipPositions(event);\n    this.renderer.setStyle(this.tooltipElement, 'left', `${tooltipPositions.left}px`);\n    this.renderer.setStyle(this.tooltipElement, 'top', `${tooltipPositions.top}px`);\n  }\n\n  private chartInitSetup() {\n    this.calculateSVGDimensions();\n    this.calculateTotalValue();\n    this.calculateAngleRadians();\n    this.createSVGElements();\n    this.animationSetup();\n  }\n\n  private checkingIfScrollsWithPoPage() {\n    const poPageContent = document.getElementsByClassName('po-page-content');\n\n    return poPageContent.length ? poPageContent[0] : window;\n  }\n\n  private createPath(serie: PoCircularChartSeries | PoChartGaugeSerie, svgPathsWrapper: any) {\n    const svgPath = this.renderer.createElement('svg:path', 'svg');\n\n    this.renderer.setAttribute(svgPath, 'class', 'po-path-item');\n    this.renderer.setAttribute(svgPath, 'fill', serie.color);\n\n    this.setElementAttributes(svgPath, serie);\n\n    svgPathsWrapper.appendChild(svgPath);\n\n    this.renderer.appendChild(this.svgElement, svgPathsWrapper);\n\n    this.svgPathElementsList.push(svgPath);\n  }\n\n  private createPaths() {\n    const svgPathsWrapper = this.renderer.createElement('svg:g', 'svg');\n\n    if (this.isChartGaugeType) {\n      this.appendGaugeBackgroundPathElement(svgPathsWrapper);\n      // Tratamento para evitar que o path desenhe os arcos referentes ao border radius do path.\n      if (this.isSerieValueEqualZero()) {\n        return;\n      }\n    }\n\n    this.series.forEach(serie => this.createPath(serie, svgPathsWrapper));\n  }\n\n  private createText(serie: PoCircularChartSeries | PoChartGaugeSerie) {\n    const { value } = serie;\n\n    const svgG = this.renderer.createElement('svg:g', 'svg');\n    const svgText = this.renderer.createElement('svg:text', 'svg');\n\n    const fontSize = this.getFontSize();\n    const textColor = this.getTextColor(serie.color);\n\n    svgText.textContent = this.getPercentValue(value, this.totalValue) + '%' ;\n\n    this.renderer.setAttribute(svgText, 'class', 'po-path-item');\n    this.renderer.setAttribute(svgText, 'fill', textColor);\n    this.renderer.setAttribute(svgText, 'font-size', fontSize);\n    this.renderer.setAttribute(svgText, 'fill-opacity', '0');\n\n    this.setElementAttributes(svgText, serie);\n\n    this.renderer.appendChild(svgG, svgText);\n\n    this.renderer.appendChild(this.svgElement, svgG);\n    this.svgTextElementsList.push(svgText);\n  }\n\n  private createTexts() {\n    if (this.type === PoChartType.Donut) {\n      this.series.forEach(serie => this.createText(serie));\n    }\n  }\n\n  private createSVGElements() {\n    const viewBoxHeight = this.isChartGaugeType ? this.centerX + (this.centerX * poChartGaugeSerieWidth) : this.chartWrapper;\n    const preserveAspectRatio = this.isChartGaugeType ? 'xMidYMax' : 'xMidYMin';\n\n    this.svgElement = this.renderer.createElement('svg:svg', 'svg');\n\n    this.renderer.setAttribute(this.svgElement, 'viewBox', `0 0 ${this.chartWrapper} ${viewBoxHeight}`);\n    this.renderer.setAttribute(this.svgElement, 'preserveAspectRatio', `${preserveAspectRatio} meet`);\n    this.renderer.setAttribute(this.svgElement, 'class', 'po-chart-svg-element');\n    this.renderer.setAttribute(this.svgElement, 'width', `${this.centerX}`);\n    this.renderer.setAttribute(this.svgElement, 'height', `${this.svgHeight}`);\n\n    this.svgContainer.nativeElement.appendChild(this.svgElement);\n\n    this.createPaths();\n    this.createTexts();\n  }\n\n  private drawPathInit() {\n    if (!this.animationRunning) {\n      return;\n    } else {\n      this.ngZone.runOutsideAngular(() => this.drawSeries());\n    }\n  }\n\n  private drawSeries(currentSerieIndex: number = 0, angleCurrentPosition: number = 0) {\n    const isFinishedDrawingCurrentSeries = angleCurrentPosition > this.chartItemEndAngle;\n    const isFinishedDrawingAllSeries = currentSerieIndex === this.svgPathElementsList.length;\n\n    if ( isFinishedDrawingAllSeries ) {\n      return;\n    }\n\n    if ( isFinishedDrawingCurrentSeries ) {\n\n      this.chartItemStartAngle = this.chartItemStartAngle + this.chartItemEndAngle;\n      currentSerieIndex++;\n      this.chartItemEndAngle = this.chartItemsEndAngleList[currentSerieIndex];\n      angleCurrentPosition = 0;\n\n    } else {\n      angleCurrentPosition += poChartAngleStepInterval;\n\n      this.drawPath(\n        this.svgPathElementsList[currentSerieIndex],\n        this.chartItemStartAngle,\n        this.calculateCurrentEndAngle(angleCurrentPosition)\n      );\n\n      this.setTextProperties(\n        this.svgTextElementsList[currentSerieIndex],\n        this.chartItemStartAngle,\n        this.calculateCurrentEndAngle(angleCurrentPosition)\n      );\n    }\n\n    window.requestAnimationFrame(this.drawSeries.bind(this, currentSerieIndex, angleCurrentPosition));\n  }\n\n  private emitEventOnEnter(event: PoDonutChartSeries | PoPieChartSeries | PoChartGaugeSerie) {\n    this.onSerieHover.next(event);\n  }\n\n  private getFontSize() {\n    const fontSizePorcent = 0.04;\n\n    const fontSize = fontSizePorcent * this.chartWrapper;\n\n    return `${fontSize.toFixed(0)}px`;\n  }\n\n  private getPercentValue(value: number, totalValue: number) {\n    const percentValue = (value / totalValue) * 100;\n\n    const floatPercentValue = convertNumberToDecimal(percentValue, 2);\n\n    return String(floatPercentValue).replace('.', ',');\n  }\n\n  private getTextColor(color: string) {\n    if (PoSeriesTextBlack.includes(color)) {\n      return poChartBlackColor;\n    }\n\n    return poChartWhiteColor;\n  }\n\n  private getTooltipValue(value: number) {\n    if (this.type === PoChartType.Pie) {\n      return value.toString();\n    }\n\n    return this.getPercentValue(value, this.totalValue) + '%';\n  }\n\n  private isSerieValueEqualZero(): boolean {\n    return this.series.length && this.series[0].value === 0;\n  }\n\n  private onMouseClick() {\n    let serieOnClick: PoDonutChartSeries | PoPieChartSeries | PoChartGaugeSerie;\n\n    if (this.isChartGaugeType) {\n      const { color, ...serie } = this.series[0];\n      serieOnClick = serie;\n    } else {\n      serieOnClick = { category: this.chartElementCategory, value: this.chartElementValue };\n    }\n\n    this.onSerieClick.next(serieOnClick);\n  }\n\n  private onMouseEnter(event) {\n    let serieOnEnter: PoDonutChartSeries | PoPieChartSeries | PoChartGaugeSerie;\n\n    if (!this.isChartGaugeType) {\n      this.tooltipElement = this.chartBody.nativeElement.lastChild;\n      this.chartElementCategory = event.target.getAttributeNS(null, 'data-tooltip-category');\n      this.chartElementValue = event.target.getAttributeNS(null, 'data-tooltip-value');\n      this.tooltipText = event.target.getAttributeNS(null, 'data-tooltip-text');\n      this.showTooltip();\n      this.changeTooltipPosition(event);\n\n      serieOnEnter = { category: this.chartElementCategory, value: this.chartElementValue };\n    } else {\n      const { color, ...serie } = this.series[0];\n\n      this.chartElementDescription = event.target.getAttributeNS(null, 'data-tooltip-category');\n      serieOnEnter = serie;\n    }\n\n    this.emitEventOnEnter(serieOnEnter);\n  }\n\n  private onWindowResize() {\n    this.calculateSVGDimensions();\n    this.renderer.setAttribute(this.svgElement, 'width', `${this.centerX}`);\n    this.renderer.setAttribute(this.svgElement, 'height', `${this.svgHeight}`);\n    this.windowResizeEmitter.next();\n  }\n\n  private removeWindowResizeListener() {\n    if (this.windowResizeListener) {\n      this.windowResizeListener();\n    }\n  }\n\n  private removeWindowScrollListener() {\n    if (this.windowScrollListener) {\n      this.windowScrollListener();\n    }\n  }\n\n  private setEventListeners() {\n    let chartSeries: Array<string> = this.el.nativeElement.querySelectorAll('.po-path-item');\n    chartSeries = Array.from(chartSeries);\n    chartSeries.forEach(serie => {\n      this.renderer.listen(serie, 'click', this.onMouseClick.bind(this));\n      this.renderer.listen(serie, 'mouseenter', this.onMouseEnter.bind(this));\n\n      if (!this.isChartGaugeType) {\n        this.renderer.listen(serie, 'mousemove', this.changeTooltipPosition.bind(this));\n        this.renderer.listen(serie, 'mouseleave', this.removeTooltip.bind(this));\n      }\n    });\n\n    this.windowResizeListener = this.renderer.listen(window, 'resize', this.onWindowResize.bind(this));\n    this.windowScrollListener = this.renderer.listen(this.checkingIfScrollsWithPoPage(), 'scroll', this.removeTooltip.bind(this));\n  }\n\n  private setInnerRadius(type: PoChartType) {\n    let serieWidth;\n\n    switch (type) {\n      case PoChartType.Donut: {\n        serieWidth = poChartDonutSerieWidth;\n\n        break;\n      }\n      case PoChartType.Gauge: {\n        serieWidth = poChartGaugeSerieWidth;\n        break;\n      }\n      case PoChartType.Pie: {\n        return 0;\n      }\n    }\n\n    return this.centerX - (this.centerX * serieWidth);\n  }\n\n  private setTextProperties(text, startAngle: number, endAngle: number) {\n    if (this.type === PoChartType.Donut) {\n      // utilizado para recuperar o angulo do meio, entre o inicio e fim para centralizar o texto\n      const centerAngle = (startAngle + endAngle) / 2;\n      const textBox = text.getBBox();\n\n      const halfTextWidth = textBox.width / 2;\n      const halfTextHeight = textBox.height / 2;\n\n      // radius interno (circulo branco) + a metade da diferenÃ§a entre tamanho do centro e radius interno\n      const radius = this.innerRadius + (this.centerX - this.innerRadius) / 2;\n\n      const xCoordinate = radius * Math.cos(centerAngle) + this.centerX - (halfTextWidth);\n      const yCoordinate = radius * Math.sin(centerAngle) + this.centerX + (halfTextHeight / 2);\n      text.setAttribute('x', xCoordinate);\n      text.setAttribute('y', yCoordinate);\n      text.setAttribute('fill-opacity', '1');\n    }\n  }\n\n  private setTooltipPositions(event: MouseEvent) {\n    const displacement: number = 8;\n\n    return {\n      left: event.clientX - this.tooltipElement.offsetWidth / 2,\n      top: event.clientY - this.tooltipElement.offsetHeight - displacement\n    };\n  }\n\n  private setElementAttributes(svgElement, serie) {\n    const { value, category, tooltip, description } = serie;\n\n    this.renderer.setAttribute(svgElement, 'data-tooltip-value', `${value}`);\n\n    if (this.isChartGaugeType) {\n      this.renderer.setAttribute(svgElement, 'data-tooltip-description', description);\n    } else {\n      const tooltipValue = this.getTooltipValue(value);\n\n      this.renderer.setAttribute(svgElement, 'data-tooltip-category', category);\n      this.renderer.setAttribute(svgElement, 'data-tooltip-text', tooltip || `${category}: ${tooltipValue}`);\n    }\n\n  }\n\n  private showTooltip() {\n    this.renderer.removeClass(this.tooltipElement, 'po-invisible');\n  }\n\n}\n","import { Component, ElementRef, NgZone, Renderer2 } from '@angular/core';\n\nimport { PoChartCircular } from '../po-chart-circular/po-chart-circular';\nimport { poChartStartAngle } from '../po-chart-circular/po-chart-circular.constant';\n\n@Component({\n  selector: 'po-chart-donut',\n  templateUrl: '../po-chart-dynamic-type.component.html'\n})\nexport class PoChartDonutComponent extends PoChartCircular {\n\n  chartItemStartAngle: number = poChartStartAngle;\n\n  constructor(el: ElementRef, ngZone: NgZone, renderer: Renderer2) {\n    super(el, ngZone, renderer);\n  }\n\n}\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, ViewChild } from '@angular/core';\n\nimport { convertNumberToDecimal } from '../../../../../utils/util';\n\nimport { PoChartGaugeSerie } from '../po-chart-gauge-series.interface';\nimport { poChartGaugeSerieWidth } from '../../po-chart-circular/po-chart-circular.constant';\n\n@Component({\n  selector: 'po-chart-gauge-text-content',\n  templateUrl: './po-chart-gauge-text-content.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoChartGaugeTextContentComponent implements AfterViewInit {\n\n  serieValueConverted: string;\n  tooltip: string;\n\n  private _gaugeWidth: number;\n  private _serie: PoChartGaugeSerie;\n\n  @Input('p-gauge-width') set gaugeWidth(value: number) {\n    this._gaugeWidth = value;\n\n    this.checkTextDescriptionSize();\n  }\n\n  get gaugeWidth() {\n    return this._gaugeWidth;\n  }\n\n  @Input('p-serie') set serie(serie: PoChartGaugeSerie) {\n    if (serie) {\n      this.serieValueConverted = this.convertValueInPercentFormat(serie.value);\n      this._serie = { ...serie };\n    } else {\n      this._serie = undefined;\n    }\n  }\n\n  get serie() {\n    return this._serie;\n  }\n\n  @ViewChild('description', { static: false, read: ElementRef }) descriptionElement: ElementRef;\n\n  constructor(private changeDetection: ChangeDetectorRef) {}\n\n  get hasSerieDescription() {\n    return this.serie && this.serie.description;\n  }\n\n  get hasSerieValue() {\n    return this.serie && this.serie.value >= 0;\n  }\n\n  get maxDescriptionWidth() {\n    // DiferenÃ§a contemplando a largura do path base e padding interno.\n    const subtractionArea = (this.gaugeWidth * poChartGaugeSerieWidth * 2) * 2;\n    const descriptionWidth = this.gaugeWidth - subtractionArea;\n\n    return { 'max-width': `${descriptionWidth}px` };\n  }\n\n  ngAfterViewInit() {\n    this.checkTextDescriptionSize();\n  }\n\n  private checkTextDescriptionSize() {\n    if (this.descriptionElement) {\n      // tooltip necessÃ¡rio para contornar comportamento inesperado do tooltip.\n      setTimeout(() => {\n        this.tooltip = this.isEllipsisActive();\n      });\n      this.changeDetection.detectChanges();\n    }\n  }\n\n  private convertValueInPercentFormat(value: number): string {\n    const decimalValue = String(convertNumberToDecimal(value, 1)).replace('.', ',');\n    return `${decimalValue}%`;\n  }\n\n  private isEllipsisActive() {\n    const isExceededWidth = this.descriptionElement.nativeElement.offsetWidth < this.descriptionElement.nativeElement.scrollWidth;\n\n    return isExceededWidth ? this.serie.description : undefined;\n  }\n\n}\n","import {\n  AfterViewInit, ChangeDetectorRef, Component, ComponentFactoryResolver, ElementRef, NgZone, Renderer2, ViewChild, ViewContainerRef\n} from '@angular/core';\n\nimport { PoChartCircular } from '../po-chart-circular/po-chart-circular';\nimport { PoChartGaugeSerie } from './po-chart-gauge-series.interface';\nimport { poChartGaugeStartAngle } from '../po-chart-circular/po-chart-circular.constant';\nimport { PoChartGaugeTextContentComponent } from './po-chart-gauge-text-content/po-chart-gauge-text-content.component';\n\n@Component({\n  selector: 'po-chart-gauge',\n  templateUrl: '../po-chart-dynamic-type.component.html'\n})\nexport class PoChartGaugeComponent extends PoChartCircular implements AfterViewInit {\n\n  chartItemStartAngle: number = poChartGaugeStartAngle;\n\n  protected _series: Array<PoChartGaugeSerie> = [];\n\n  set series(series: Array<PoChartGaugeSerie>) {\n    this._series = this.getGaugeSerie(series);\n  }\n\n  get series() {\n    return this._series;\n  }\n\n  @ViewChild('svgContainer', { static: true, read: ViewContainerRef }) svgContainerRef: ViewContainerRef;\n\n  constructor(\n    private changeDetection: ChangeDetectorRef,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    el: ElementRef,\n    ngZone: NgZone,\n    renderer: Renderer2) {\n      super(el, ngZone, renderer);\n  }\n\n  ngAfterViewInit() {\n    this.drawBasePath();\n    this.createComponent();\n  }\n\n  private createComponent() {\n    const factory = this.componentFactoryResolver.resolveComponentFactory(PoChartGaugeTextContentComponent);\n\n    const componentRef = this.svgContainerRef.createComponent(factory);\n    const instance = componentRef.instance;\n\n    instance.serie = this.series.length && this.series[0];\n    instance.gaugeWidth = this.getGaugeBaseWidth();\n\n    this.resizeListenerSubscription(instance);\n  }\n\n  private checkGaugeValueLimits(value: number) {\n    if (value <= 0) {\n      return 0;\n    } else if (value >= 100) {\n      return 100;\n    } else {\n      return value;\n    }\n  }\n\n  private drawBasePath() {\n    const basePath = this.el.nativeElement.querySelector('.po-chart-gauge-base-path');\n\n    this.drawPath(basePath, this.chartItemStartAngle, 0);\n  }\n\n  private getGaugeBaseWidth() {\n    const basePath = this.el.nativeElement.querySelector('.po-chart-gauge-base-path');\n\n    if (basePath) {\n      return basePath.getBoundingClientRect().width;\n    }\n  }\n\n  private getGaugeSerie(series: Array<PoChartGaugeSerie> = []) {\n    const [ serie ] = series;\n\n    if (serie && typeof serie === 'object') {\n      return [{\n        ...serie,\n        color: this.colors[0],\n        value: this.checkGaugeValueLimits(serie.value)\n      }];\n    }\n\n    return [];\n  }\n\n  private resizeListenerSubscription(instance: PoChartGaugeTextContentComponent) {\n    this.windowResizeEmitter.subscribe(() => {\n      instance.gaugeWidth = this.getGaugeBaseWidth();\n      this.changeDetection.detectChanges();\n\n    });\n  }\n\n}\n","import { Component, ElementRef, NgZone, Renderer2 } from '@angular/core';\n\nimport { PoChartCircular } from '../po-chart-circular/po-chart-circular';\nimport { poChartStartAngle } from '../po-chart-circular/po-chart-circular.constant';\n\n@Component({\n  selector: 'po-chart-pie',\n  templateUrl: '../po-chart-dynamic-type.component.html'\n})\nexport class PoChartPieComponent extends PoChartCircular {\n\n  chartItemStartAngle: number = poChartStartAngle;\n\n  constructor(el: ElementRef, ngZone: NgZone, renderer: Renderer2) {\n    super(el, ngZone, renderer);\n  }\n\n}\n","import { AfterViewInit, ChangeDetectorRef, Component, ComponentFactoryResolver, ComponentRef, DoCheck, ElementRef, HostListener,\n  IterableDiffers, OnDestroy, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\n\nimport { Subject } from 'rxjs';\n\nimport { PoChartBaseComponent } from './po-chart-base.component';\nimport { PoChartColors } from './po-chart-colors.constant';\nimport { PoChartDonutComponent } from './po-chart-types/po-chart-donut/po-chart-donut.component';\nimport { PoChartDynamicTypeComponent } from './po-chart-types/po-chart-dynamic-type.component';\nimport { PoChartGaugeComponent } from './po-chart-types/po-chart-gauge/po-chart-gauge.component';\nimport { PoChartPieComponent } from './po-chart-types/po-chart-pie/po-chart-pie.component';\nimport { PoChartType } from './enums/po-chart-type.enum';\n\n/**\n * @docsExtends PoChartBaseComponent\n *\n * @example\n *\n * <example name=\"po-chart-basic\" title=\"Portinari Chart Basic\">\n *  <file name=\"sample-po-chart-basic/sample-po-chart-basic.component.html\"> </file>\n *  <file name=\"sample-po-chart-basic/sample-po-chart-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-chart-labs\" title=\"Portinari Chart Labs\">\n *  <file name=\"sample-po-chart-labs/sample-po-chart-labs.component.html\"> </file>\n *  <file name=\"sample-po-chart-labs/sample-po-chart-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-chart-coffee-ranking\" title=\"Portinari Chart - Coffee Ranking\">\n *  <file name=\"sample-po-chart-coffee-ranking/sample-po-chart-coffee-ranking.component.html\"> </file>\n *  <file name=\"sample-po-chart-coffee-ranking/sample-po-chart-coffee-ranking.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-chart',\n  templateUrl: './po-chart.component.html'\n})\nexport class PoChartComponent extends PoChartBaseComponent implements AfterViewInit, DoCheck, OnDestroy, OnInit {\n\n  private calculatedElement: boolean = false;\n  private componentRef: ComponentRef<{}>;\n  private differ: any;\n  private initialized: boolean = false;\n  private windowResizeListener: Subject<any> = new Subject();\n\n  private mappings = {\n    [PoChartType.Donut]: PoChartDonutComponent,\n    [PoChartType.Gauge]: PoChartGaugeComponent,\n    [PoChartType.Pie]: PoChartPieComponent\n  };\n\n  colors: Array<string> = [];\n\n  @ViewChild('chartContainer', { read: ViewContainerRef, static: true })\n  chartContainer: ViewContainerRef;\n\n  @ViewChild('chartHeader', { static: true }) chartHeader: ElementRef;\n\n  @ViewChild('chartLegend', { static: false, read: ElementRef }) chartLegend: ElementRef;\n\n  @ViewChild('chartWrapper', { static: true }) chartWrapper: ElementRef;\n\n  @HostListener('window:resize')\n  onResize = () => this.windowResizeListener.next()\n\n  constructor(\n    public changeDetector: ChangeDetectorRef,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private differs: IterableDiffers) {\n      super();\n\n      this.differ = this.differs.find([]).create(null);\n  }\n\n  get isChartGaugeType(): boolean {\n    return this.type === PoChartType.Gauge;\n  }\n\n  ngAfterViewInit() {\n    this.initialized = true;\n  }\n\n  ngDoCheck() {\n    const charWrapperWidth = this.chartWrapper.nativeElement.offsetWidth;\n\n    // Permite que o chart seja calculado na primeira vez que o componente torna-se visÃ­vel,\n    // evitando com isso, problemas com Tabs ou Divs que iniciem escondidas.\n    if (charWrapperWidth && !this.calculatedElement && this.initialized) {\n      this.calculatedElement = true;\n      this.getSeriesColor();\n      this.dynamicComponentSetting();\n    }\n\n    this.checkingForSerieChanges();\n  }\n\n  ngOnDestroy() {\n    this.removeWindowResizeListener();\n  }\n\n  ngOnInit() {\n    this.getSeriesColor();\n  }\n\n  rebuildComponent() {\n    if (this.componentRef) {\n      this.componentRef.destroy();\n      this.getSeriesColor();\n      this.dynamicComponentSetting();\n    }\n  }\n\n  private chartLegendHeight(chartLegend: ElementRef) {\n    return chartLegend ? chartLegend.nativeElement.offsetHeight : 0;\n  }\n\n  private checkingForSerieChanges() {\n    if (this.componentRef && this.differ) {\n      const changeSeries = this.differ.diff(this.chartSeries);\n      if (changeSeries) {\n        this.getSeriesColor();\n        this.rebuildComponent();\n      }\n    }\n  }\n\n  private createComponent() {\n    const componentType = this.getComponentType(this.type);\n    const factory = this.componentFactoryResolver.resolveComponentFactory(componentType);\n\n    this.componentRef = this.chartContainer.createComponent(factory);\n\n    const instance = <PoChartDynamicTypeComponent>this.componentRef.instance;\n\n    this.setChartProperties(instance);\n\n    return instance;\n  }\n\n  private dynamicComponentSetting() {\n    const instance = this.createComponent();\n\n    this.setResizeListenerSubscribe(instance);\n    this.changeDetector.detectChanges();\n    this.setClickSubscribe(instance);\n    this.setHoverSubscribe(instance);\n  }\n\n  private getComponentType(typeName) {\n    return this.mappings[typeName];\n  }\n\n  private getSeriesColor() {\n    const colorsLength = PoChartColors.length - 1;\n\n    if (!this.chartSeries) {\n      return this.colors = PoChartColors[colorsLength];\n    }\n    if (this.type === PoChartType.Gauge) {\n      return this.colors = PoChartColors[0];\n    }\n\n    const seriesLength = this.chartSeries.length - 1;\n\n    if (seriesLength > colorsLength) {\n      let colors = PoChartColors[colorsLength];\n\n      // recupera o resultado da divisao entre tamanho das series e o numero de cores disponiveis\n      const quantityDuplicates = seriesLength / colorsLength;\n\n      for (let i = 1; i <= quantityDuplicates; i++) {\n        colors = colors.concat(PoChartColors[colorsLength]);\n      }\n\n      return this.colors = colors;\n    }\n\n    return this.colors = PoChartColors[seriesLength];\n  }\n\n  private removeWindowResizeListener() {\n    if (this.onResize) {\n      this.onResize = () => {};\n    }\n  }\n\n  private setChartProperties(instance: PoChartDynamicTypeComponent) {\n    instance.chartHeader = this.chartHeader.nativeElement.offsetHeight;\n    instance.chartLegend = this.chartLegendHeight(this.chartLegend);\n    instance.chartWrapper = this.chartWrapper.nativeElement.offsetWidth;\n    instance.colors = Array.isArray(this.colors) ? [...this.colors] : [];\n    instance.height = this.height;\n    instance.type = this.type;\n    instance.series = this.chartSeries || [];\n  }\n\n  private setClickSubscribe(instance: PoChartDynamicTypeComponent) {\n    instance.onSerieClick.subscribe(event => {\n      this.onSeriesClick(event);\n    });\n  }\n\n  private setHoverSubscribe(instance: PoChartDynamicTypeComponent) {\n    instance.onSerieHover.subscribe(event => {\n      this.onSeriesHover(event);\n    });\n  }\n\n  private setResizeListenerSubscribe(instance: PoChartDynamicTypeComponent) {\n    this.windowResizeListener.subscribe(() => {\n      instance.chartHeader = this.chartHeader.nativeElement.offsetHeight;\n      instance.chartLegend = this.chartLegendHeight(this.chartLegend);\n      instance.chartWrapper = this.chartWrapper.nativeElement.offsetWidth;\n    });\n  }\n\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\nimport { PoCircularChartSeries } from '../po-chart-types/po-chart-circular/po-chart-circular-series.interface';\n\n@Component({\n  selector: 'po-chart-legend',\n  templateUrl: './po-chart-legend.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoChartLegendComponent {\n\n  @Input('p-colors') colors: Array<string>;\n\n  @Input('p-series') series: PoCircularChartSeries;\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoTooltipModule } from '../../directives/po-tooltip/po-tooltip.module';\n\nimport { PoChartComponent } from './po-chart.component';\nimport { PoChartDonutComponent } from './po-chart-types/po-chart-donut/po-chart-donut.component';\nimport { PoChartGaugeComponent } from './po-chart-types/po-chart-gauge/po-chart-gauge.component';\nimport { PoChartGaugeTextContentComponent\n} from './po-chart-types/po-chart-gauge/po-chart-gauge-text-content/po-chart-gauge-text-content.component';\nimport { PoChartLegendComponent } from './po-chart-legend/po-chart-legend.component';\nimport { PoChartPieComponent } from './po-chart-types/po-chart-pie/po-chart-pie.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente `po-chart`.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    PoTooltipModule\n  ],\n  declarations: [\n    PoChartComponent,\n    PoChartDonutComponent,\n    PoChartGaugeComponent,\n    PoChartGaugeTextContentComponent,\n    PoChartPieComponent,\n    PoChartLegendComponent\n  ],\n  entryComponents: [\n    PoChartDonutComponent,\n    PoChartGaugeComponent,\n    PoChartGaugeTextContentComponent,\n    PoChartPieComponent\n  ],\n  exports: [\n    PoChartComponent,\n  ]\n})\nexport class PoChartModule { }\n","import { Input } from '@angular/core';\n\nimport { convertToBoolean, convertToInt } from '../../utils/util';\n\n/**\n * @description\n *\n * O `po-container` Ã© um componente que visa facilitar o agrupamento de conteÃºdos.\n * Por padrÃ£o o mesmo exibe uma borda, um efeito de sombra ao seu redor e um espaÃ§amento em sua parte interna, os quais\n * podem ser desabilitados. Ao remover sua borda a sombra tambÃ©m serÃ¡ removida. AlÃ©m disso, sua altura acompanha a\n * quantidade do conteÃºdo, porÃ©m pode ser fixada. Para controlar sua largura, utilize o [Grid System](/guides/grid-system),\n * assim possibilitando o tratamento para diferentes resoluÃ§Ãµes.\n */\nexport class PoContainerBaseComponent {\n\n  private _height?: number;\n  private _noBorder?: boolean = false;\n  private _noPadding?: boolean = false;\n  private _noShadow?: boolean = false;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a altura do `po-container`.\n   *\n   * > Caso nÃ£o seja definido um valor, a altura se ajustarÃ¡ de acordo com o conteÃºdo.\n   */\n  @Input('p-height') set height(value: number) {\n    this._height = convertToInt(value);\n  }\n\n  get height(): number {\n    return this._height;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita a borda e a sombra em torno do `po-container`.\n   *\n   * @default `false`\n   */\n  @Input('p-no-border') set noBorder(value: boolean) {\n    this._noBorder = convertToBoolean(value);\n  }\n\n  get noBorder(): boolean {\n    return this._noBorder;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita o espaÃ§amento interno do `po-container`.\n   *\n   * @default `false`\n   */\n  @Input('p-no-padding') set noPadding(value: boolean) {\n    this._noPadding = convertToBoolean(value);\n  }\n\n  get noPadding(): boolean {\n    return this._noPadding;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita o sombreamento em torno do `po-container`.\n   *\n   * @default `false`\n   */\n  @Input('p-no-shadow') set noShadow(value: boolean) {\n    this._noShadow = convertToBoolean(value);\n  }\n\n  get noShadow(): boolean {\n    return this._noShadow;\n  }\n\n}\n","import { Component } from '@angular/core';\n\nimport { PoContainerBaseComponent } from './po-container-base.component';\n\n/**\n * @docsExtends PoContainerBaseComponent\n *\n * @example\n *\n * <example name=\"po-container-basic\" title=\"Portinari Container Basic\">\n *  <file name=\"sample-po-container-basic/sample-po-container-basic.component.html\"> </file>\n *  <file name=\"sample-po-container-basic/sample-po-container-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-container-labs\" title=\"Portinari Container Labs\">\n *  <file name=\"sample-po-container-labs/sample-po-container-labs.component.html\"> </file>\n *  <file name=\"sample-po-container-labs/sample-po-container-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-container-dashboard\" title=\"Portinari Container - Dashboard\">\n *  <file name=\"sample-po-container-dashboard/sample-po-container-dashboard.component.html\"> </file>\n *  <file name=\"sample-po-container-dashboard/sample-po-container-dashboard.component.ts\"> </file>\n *  <file name=\"sample-po-container-dashboard/sample-po-container-dashboard.service.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-container',\n  templateUrl: './po-container.component.html'\n})\nexport class PoContainerComponent extends PoContainerBaseComponent { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoContainerComponent } from './po-container.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente `po-container`.\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    PoContainerComponent\n  ],\n  declarations: [\n    PoContainerComponent\n  ]\n})\nexport class PoContainerModule { }\n","import { EventEmitter, Input, Output } from '@angular/core';\n\nimport { convertToBoolean } from '../../utils/util';\n\nconst PO_DISCLAIMER_TYPES = ['default', 'danger'];\nconst PO_DISCLAIMER_DEFAULT_TYPE = 'default';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * O componente po-disclaimer Ã© responsÃ¡vel por representar tags.\n * Seu uso Ã© recomendado em buscas e em campos onde Ã© necessÃ¡rio representar objetos selecionados,\n * como por exemplo, no po-multi-select.\n *\n */\nexport class PoDisclaimerBaseComponent {\n  private _type: string = 'default';\n  private _hideClose?: boolean = false;\n\n  showDisclaimer = true;\n\n  /**\n   * Label que aparecerÃ¡ dentro do po-disclaimer.\n   * Quando nÃ£o for definido um label serÃ¡ apresentada a propriedade p-value.\n   */\n  @Input('p-label') label?: string;\n\n  /** Valor do po-disclaimer. */\n  @Input('p-value') value: string;\n\n  /** Nome da propriedade vinculada Ã  este po-disclaimer. */\n  @Input('p-property') property?: string;\n\n  /**\n   * @description\n   *\n   * Esta propriedade esconde o botÃ£o para fechamento do po-disclaimer, ao utilizar esta propriedade\n   * sem passar valor a mesma Ã© setada como false, onde o botÃ£o de fechamento estÃ¡ visÃ­vel.\n   *\n   * @default false\n   */\n  @Input('p-hide-close') set hideClose(value: boolean) {\n    this._hideClose = <any>value === '' ? true : convertToBoolean(value);\n  }\n\n  get hideClose(): boolean {\n    return this._hideClose;\n  }\n\n  /**\n   * Evento disparado ao fechar o disclaimer.\n   * Para este evento serÃ¡ passado como parÃ¢metro um objeto com value, label e property.\n   */\n  @Output('p-close-action') closeAction?: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * @description\n   *\n   * Tipo do po-disclaimer. Pode ser 'default' ou 'danger'.\n   *\n   * @default default\n   * @optional\n   */\n  @Input('p-type') set type(type: string) {\n    this._type = PO_DISCLAIMER_TYPES.includes(type) ? type : PO_DISCLAIMER_DEFAULT_TYPE;\n  }\n\n  get type(): string {\n    return this._type;\n  }\n\n  close(): void {\n    this.showDisclaimer = false;\n    this.closeAction.emit({value: this.value, label: this.label, property: this.property});\n  }\n\n  getLabel() {\n    return this.label ? this.label : this.value;\n  }\n}\n","import { Component } from '@angular/core';\n\nimport { isKeyCodeEnter } from '../../utils/util';\n\nimport { PoDisclaimerBaseComponent } from './po-disclaimer-base.component';\n\n/**\n * @docsPrivate\n *\n * @docsExtends PoDisclaimerBaseComponent\n *\n * @examplePrivate\n *\n * <example-private name=\"po-disclaimer\" title=\"Portinari Disclaimer\">\n *   <file name=\"sample-po-disclaimer.component.html\"> </file>\n *   <file name=\"sample-po-disclaimer.component.ts\"> </file>\n * </example-private>\n */\n@Component({\n  selector: 'po-disclaimer',\n  templateUrl: './po-disclaimer.component.html'\n})\nexport class PoDisclaimerComponent extends PoDisclaimerBaseComponent {\n\n  onKeyPress(event: any) {\n\n    if (isKeyCodeEnter(event)) {\n      this.close();\n    }\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PoDisclaimerComponent } from './po-disclaimer.component';\n\n/**\n * @description\n * MÃ³dulo do componente po-disclaimer.\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [PoDisclaimerComponent],\n  exports: [PoDisclaimerComponent]\n})\nexport class PoDisclaimerModule { }\n","import { DoCheck, EventEmitter, Input, IterableDiffers, Output } from '@angular/core';\n\nimport { v4 as uuid } from 'uuid';\n\nimport { browserLanguage, convertToBoolean, isKeyCodeEnter, poLocaleDefault } from '../../utils/util';\n\nimport { PoDisclaimer } from '../po-disclaimer/po-disclaimer.interface';\n\nexport const poDisclaimerGroupLiteralsDefault = {\n  en: { removeAll: 'Remove all' },\n  es: { removeAll: 'Eliminar todos' },\n  pt: { removeAll: 'Remover todos' }\n};\n\n/**\n * @description\n *\n * O componente `po-disclaimer-group` Ã© recomendado para manipular palavras-chave de filtros aplicados em uma pesquisa.\n *\n * Ã partir de dois *disclaimers* com o botÃ£o **fechar** habilitado, o componente renderiza de forma automÃ¡tica um novo e destacado\n * *disclaimer* que possibilita **remover todos**, mas que tambÃ©m pode ser desabilitado.\n *\n * TambÃ©m Ã© possÃ­vel navegar entre os *disclaimers* atravÃ©s do teclado utilizando a tecla *tab* e, para remoÃ§Ã£o do *disclaimer* selecionado,\n * basta pressionar a tecla *enter*. Esta funcionalidade nÃ£o se aplica caso a propriedade `hideClose` estiver habilitada.\n *\n * > Veja a integraÃ§Ã£o destas funcionalidade no componente [po-page-list](/documentation/po-page-list).\n */\nexport class PoDisclaimerGroupBaseComponent implements DoCheck {\n\n  private _disclaimers: Array<PoDisclaimer> = [];\n  private _hideRemoveAll: boolean = false;\n\n  private differ;\n  private previousDisclaimers: Array<PoDisclaimer> = [];\n\n  readonly literals = {\n      ...poDisclaimerGroupLiteralsDefault[poLocaleDefault],\n      ...poDisclaimerGroupLiteralsDefault[browserLanguage()]\n  };\n\n  /** Lista de *disclaimers*. */\n\n  /**\n   * @description\n   *\n   * Lista de *disclaimers*.\n   *\n   * Para que a lista de *disclaimers* seja atualizada dinamicamente deve-se passar uma nova referÃªncia do array de `PoDisclaimer`.\n   *\n   * Exemplo adicionando um *disclaimer* no array:\n   *\n   * ```\n   * this.disclaimers = [...this.disclaimers, disclaimer];\n   * ```\n   *\n   * ou\n   *\n   * ```\n   * this.disclaimers = this.disclaimers.concat(disclaimer);\n   * ```\n   */\n  @Input('p-disclaimers') set disclaimers(value: Array<PoDisclaimer>) {\n\n    this.previousDisclaimers = [...this.disclaimers];\n    this._disclaimers = this.checkDisclaimers(value);\n\n  }\n\n  get disclaimers() {\n    return this._disclaimers;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Oculta o botÃ£o para remover todos os *disclaimers* do grupo.\n   *\n   * > Por padrÃ£o, o mesmo Ã© exibido Ã  partir de dois ou mais *disclaimers* com a opÃ§Ã£o `hideClose` habilitada.\n   *\n   * @default `false`\n   */\n  @Input('p-hide-remove-all')\n  set hideRemoveAll(value: boolean) {\n    this._hideRemoveAll = <any>value === '' ? true : convertToBoolean(value);\n  }\n\n  get hideRemoveAll() {\n    return this._hideRemoveAll;\n  }\n\n  /** TÃ­tulo do grupo de *disclaimers*. */\n  @Input('p-title') title?: string;\n\n  /** FunÃ§Ã£o que serÃ¡ disparada quando a lista de *disclaimers* for modificada. */\n  @Output('p-change') change?: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(differs: IterableDiffers) {\n    this.differ = differs.find([]).create(null);\n  }\n\n  ngDoCheck() {\n    this.checkChanges();\n  }\n\n  closeItem(disclaimer: any, emitChange: boolean = true) {\n    const itemIndex = this.disclaimers.findIndex(d => d['$id'] === disclaimer['$id']);\n    this.disclaimers.splice(itemIndex, 1);\n\n    if (emitChange) {\n      this.emitChangeDisclaimers();\n    }\n  }\n\n  isRemoveAll() {\n    return !this.hideRemoveAll && this.disclaimers.filter(c => !c.hideClose).length > 1;\n  }\n\n  onKeyPress(event: any) {\n\n    if (isKeyCodeEnter(event)) {\n      this.removeAllItems();\n    }\n\n  }\n\n  removeAllItems() {\n    const removeItems = [];\n\n    this.disclaimers.forEach(disclaimer => {\n      if (!disclaimer.hideClose) {\n        removeItems.push(disclaimer);\n      }\n    });\n\n    removeItems.forEach(disclaimer => this.closeItem(disclaimer, false));\n\n    this.emitChangeDisclaimers();\n  }\n\n  private checkChanges() {\n\n    if (this.differ) {\n      const changes = this.differ.diff(this.disclaimers);\n\n      if (changes && this.disclaimersAreChanged(this.disclaimers)) {\n        this.emitChangeDisclaimers();\n      }\n\n    }\n\n  }\n\n  private checkDisclaimers(disclaimers: Array<PoDisclaimer>) {\n    if (Array.isArray(disclaimers)) {\n\n      for (let i = 0; i < disclaimers.length; i++) {\n        const disclaimer = disclaimers[i];\n\n        if (disclaimer.value || disclaimer.value === 0 || disclaimer.value === false) {\n\n          disclaimer['$id'] = uuid();\n\n        } else {\n\n          disclaimers.splice(i, 1);\n          i--;\n        }\n      }\n\n      return disclaimers;\n    }\n\n    return [];\n  }\n\n  private disclaimersAreChanged(disclaimers: Array<PoDisclaimer>): boolean {\n    const currentValues: Array<PoDisclaimer> = disclaimers;\n\n    if (currentValues.length !== this.previousDisclaimers.length) {\n      return true;\n    }\n\n    return currentValues.some((disclaimer, index) => disclaimer.value !== this.previousDisclaimers[index].value\n      || disclaimer.property !== this.previousDisclaimers[index].property);\n  }\n\n  private emitChangeDisclaimers() {\n    setTimeout(() => {\n      this.change.emit(this.disclaimers);\n    });\n    this.previousDisclaimers = [...this._disclaimers];\n  }\n\n}\n","import { Component, IterableDiffers } from '@angular/core';\n\nimport { PoDisclaimerGroupBaseComponent } from './po-disclaimer-group-base.component';\n\n/**\n * @docsExtends PoDisclaimerGroupBaseComponent\n *\n * @example\n *\n * <example name=\"po-disclaimer-group-basic\" title=\"Portinari Disclaimer Group Basic\">\n *   <file name=\"sample-po-disclaimer-group-basic/sample-po-disclaimer-group-basic.component.html\"> </file>\n *   <file name=\"sample-po-disclaimer-group-basic/sample-po-disclaimer-group-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-disclaimer-group-labs\" title=\"Portinari Disclaimer Group Labs\">\n *   <file name=\"sample-po-disclaimer-group-labs/sample-po-disclaimer-group-labs.component.html\"> </file>\n *   <file name=\"sample-po-disclaimer-group-labs/sample-po-disclaimer-group-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-disclaimer-group-sw-planets\" title=\"Portinari Disclaimer Group - Star Wars Planets\">\n *   <file name=\"sample-po-disclaimer-group-sw-planets/sample-po-disclaimer-group-sw-planets.component.html\"> </file>\n *   <file name=\"sample-po-disclaimer-group-sw-planets/sample-po-disclaimer-group-sw-planets.component.ts\"> </file>\n *   <file name=\"sample-po-disclaimer-group-sw-planets/sample-po-disclaimer-group-sw-planets.service.ts\"> </file>\n * </example>\n *\n */\n@Component({\n  selector: 'po-disclaimer-group',\n  templateUrl: './po-disclaimer-group.component.html'\n})\nexport class PoDisclaimerGroupComponent extends PoDisclaimerGroupBaseComponent {\n\n  constructor(differs: IterableDiffers) {\n    super(differs);\n  }\n\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n/**\n * @docsPrivate\n *\n * @description\n *\n * Este Ã© um componente interno utilizado pelo po-disclaimer-group, se comporta como um botÃ£o e recebe uma aÃ§Ã£o para remover todos os\n * po-disclaimers do grupo.\n */\n@Component({\n  selector: 'po-disclaimer-remove',\n  templateUrl: './po-disclaimer-remove.component.html'\n})\nexport class PoDisclaimerRemoveComponent {\n\n  /** Texto exibido.  */\n  @Input('p-label') label?: string;\n\n  /** AÃ§Ã£o para remover todos.  */\n  @Output('p-remove-all-action') removeAllAction = new EventEmitter();\n\n  // Emite a aÃ§Ã£o de remover todos.\n  removeAction() {\n    this.removeAllAction.emit();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PoDisclaimerModule } from '../po-disclaimer/po-disclaimer.module';\n\nimport { PoDisclaimerGroupComponent } from './po-disclaimer-group.component';\nimport { PoDisclaimerRemoveComponent } from './po-disclaimer-remove/po-disclaimer-remove.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente po-disclaimer-group.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    PoDisclaimerModule\n  ],\n  declarations: [PoDisclaimerGroupComponent, PoDisclaimerRemoveComponent],\n  exports: [PoDisclaimerGroupComponent]\n})\nexport class PoDisclaimerGroupModule { }\n","import { Input } from '@angular/core';\n\n/**\n * @description\n *\n * Este componente apresenta uma linha demarcadora de blocos e pode conter um *label*. Seu uso Ã© indicado para definiÃ§Ã£o\n * e organizaÃ§Ã£o de informaÃ§Ãµes em uma tela e sua caracterÃ­stica Ã© semelhante Ã  tag `<hr>`.\n */\nexport class PoDividerBaseComponent {\n\n  /** Valor do rÃ³tulo a ser exibido. */\n  @Input('p-label') label?: string;\n\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { PoDividerBaseComponent } from './po-divider-base.component';\n\n/**\n * @docsExtends PoDividerBaseComponent\n *\n * @example\n *\n * <example name=\"po-divider-basic\" title=\"Portinari Divider Basic\" >\n *  <file name=\"sample-po-divider-basic/sample-po-divider-basic.component.html\"> </file>\n *  <file name=\"sample-po-divider-basic/sample-po-divider-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-divider-labs\" title=\"Portinari Divider Labs\" >\n *  <file name=\"sample-po-divider-labs/sample-po-divider-labs.component.html\"> </file>\n *  <file name=\"sample-po-divider-labs/sample-po-divider-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-divider-user-detail\" title=\"Portinari Divider - User Detail\" >\n *  <file name=\"sample-po-divider-user-detail/sample-po-divider-user-detail.component.html\"> </file>\n *  <file name=\"sample-po-divider-user-detail/sample-po-divider-user-detail.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-divider',\n  templateUrl: './po-divider.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoDividerComponent extends PoDividerBaseComponent { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoDividerComponent } from './po-divider.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente po-divider.\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    PoDividerComponent\n  ],\n  exports: [\n    PoDividerComponent\n  ]\n})\nexport class PoDividerModule { }\n","import { ElementRef, Input } from '@angular/core';\n\nimport { convertToBoolean } from '../../utils/util';\nimport { PO_CONTROL_POSITIONS } from './../../services/po-control-position/po-control-position.constants';\n\nimport { PoPopupAction } from './po-popup-action.interface';\n\nconst poPopupDefaultPosition = 'bottom-left';\n\n/**\n * @description\n *\n * O componente `po-popup` Ã© um container pequeno recomendado para aÃ§Ãµes de navegaÃ§Ã£o:\n * Ele abre sobreposto aos outros componentes.\n *\n * Ã possÃ­vel escolher as posiÃ§Ãµes do `po-popup` em relaÃ§Ã£o ao componente alvo, para isto veja a propriedade `p-position`.\n *\n * TambÃ©m Ã© possÃ­vel informar um _template_ _header_ para o `po-popup`, que serÃ¡ exibido acima das aÃ§Ãµes.\n * Para funcionar corretamente Ã© preciso adicionar a propriedade `p-popup-header-template` no elemento que servirÃ¡ de template, por exemplo:\n *\n * ```\n * <po-popup [p-target]=\"target\">\n *   <div p-popup-header-template>\n *     <div>\n *       Dev Portinari\n *     </div>\n *     <div>\n *       dev.portinari@portinari.com.br\n *     </div>\n *   </div>\n * </po-popup >\n * ```\n */\nexport class PoPopupBaseComponent {\n\n  private _actions: Array<PoPopupAction>;\n  private _customPositions?: Array<string>;\n  private _hideArrow: boolean = false;\n  private _isCornerAlign: boolean = false;\n  private _position?: string = poPopupDefaultPosition;\n  private _target: any;\n\n  arrowDirection: string = 'top-right';\n  showPopup: boolean = false;\n\n  protected oldTarget;\n  protected param;\n  protected parentRef;\n\n  /** Lista de aÃ§Ãµes que serÃ£o exibidas no componente. */\n  @Input('p-actions') set actions(value: Array<PoPopupAction>) {\n    this._actions = Array.isArray(value) ? value : [];\n  }\n\n  get actions() {\n    return this._actions;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Oculta a seta do componente *popup*.\n   *\n   * @default `false`\n   */\n  @Input('p-hide-arrow') set hideArrow(value: boolean) {\n    this._hideArrow = convertToBoolean(value);\n  }\n\n  get hideArrow(): boolean {\n    return this._hideArrow;\n  }\n\n  // Define se o `po-popup` serÃ¡ alinhado pelos cantos do elemento target.\n  @Input('p-is-corner-align') set isCornerAlign(value: boolean) {\n    this._isCornerAlign = convertToBoolean(value);\n  }\n\n  get isCornerAlign(): boolean {\n    return this._isCornerAlign;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a posiÃ§Ã£o inicial que o `po-popup` abrirÃ¡ em relaÃ§Ã£o ao componente alvo. Sugere-se que seja\n   * usada a orientaÃ§Ã£o `bottom-left` (abaixo e a esquerda), porÃ©m o mesmo Ã© flexÃ­vel e serÃ¡ rotacionado\n   * automaticamente para se adequar a tela, caso necessÃ¡rio.\n   *\n   * > Caso seja definido um `p-custom-positions` o componente irÃ¡ abrir na posiÃ§Ã£o definida na propriedade `p-position`\n   * e caso nÃ£o caiba na posiÃ§Ã£o inicial ele irÃ¡ rotacionar seguindo a ordem de posiÃ§Ãµes definidas no `p-custom-positions`.\n   *\n   * PosiÃ§Ãµes vÃ¡lidas:\n   * - `right`: Posiciona o po-popup no lado direito do componente alvo.\n   * - `right-bottom`: Posiciona o po-popup no lado direito inferior do componente alvo.\n   * - `right-top`: Posiciona o po-popup no lado direito superior do componente alvo.\n   * - `bottom`: Posiciona o po-popup abaixo do componente alvo.\n   * - `bottom-left`: Posiciona o po-popup abaixo e Ã  esquerda do componente alvo.\n   * - `bottom-right`: Posiciona o po-popup abaixo e Ã  direita do componente alvo.\n   * - `left`: Posiciona o po-popup no lado esquerdo do componente alvo.\n   * - `left-top`: Posiciona o po-popup no lado esquerdo superior do componente alvo.\n   * - `left-bottom`: Posiciona o po-popup no lado esquerdo inferior do componente alvo.\n   * - `top`: Posiciona o po-popup acima do componente alvo.\n   * - `top-right`: Posiciona o po-popup acima e Ã  direita do componente alvo.\n   * - `top-left`: Posiciona o po-popup acima e Ã  esquerda do componente alvo.\n   *\n   * @default `bottom-left`\n   */\n  @Input('p-position') set position(value: string) {\n    this._position = PO_CONTROL_POSITIONS.includes(value) ? value : poPopupDefaultPosition;\n  }\n\n  get position(): string {\n    return this._position;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define as posiÃ§Ãµes e a sequÃªncia que o `po-popup` poderÃ¡ rotacionar. A sequÃªncia serÃ¡ definida pela ordem passada\n   * no *array*. Caso nÃ£o seja definido, o `po-popup` irÃ¡ rotacionar em todas as posiÃ§Ãµes vÃ¡lidas.\n   *\n   * > O componente sempre irÃ¡ abrir na posiÃ§Ã£o definida no `p-position` e caso nÃ£o caiba na posiÃ§Ã£o definida o mesmo\n   * irÃ¡ rotacionar seguindo a ordem definida pelo `p-custom-position`.\n   *\n   * PosiÃ§Ãµes vÃ¡lidas:\n   * - `right`: Posiciona o po-popup no lado direito do componente alvo.\n   * - `right-bottom`: Posiciona o po-popup no lado direito inferior do componente alvo.\n   * - `right-top`: Posiciona o po-popup no lado direito superior do componente alvo.\n   * - `bottom`: Posiciona o po-popup abaixo do componente alvo.\n   * - `bottom-left`: Posiciona o po-popup abaixo e Ã  esquerda do componente alvo.\n   * - `bottom-right`: Posiciona o po-popup abaixo e Ã  direita do componente alvo.\n   * - `left`: Posiciona o po-popup no lado esquerdo do componente alvo.\n   * - `left-top`: Posiciona o po-popup no lado esquerdo superior do componente alvo.\n   * - `left-bottom`: Posiciona o po-popup no lado esquerdo inferior do componente alvo.\n   * - `top`: Posiciona o po-popup acima do componente alvo.\n   * - `top-right`: Posiciona o po-popup acima e Ã  direita do componente alvo.\n   * - `top-left`: Posiciona o po-popup acima e Ã  esquerda do componente alvo.\n   */\n  @Input('p-custom-positions') set customPositions(value: Array<string>) {\n    this._customPositions = Array.isArray(value) ? value : [];\n  }\n\n  get customPositions() {\n    return this._customPositions;\n  }\n\n  /**\n   * @description\n   *\n   * Para utilizar o `po-popup` deve-se colocar uma variÃ¡vel local no componente que dispararÃ¡ o evento\n   * de abertura no mesmo e com isso, invocarÃ¡ a funÃ§Ã£o `toggle`, por exemplo:\n   *\n   * ```\n   * <span #icon class=\"po-icon po-icon-credit-payment\" (click)=\"popup.toggle()\">\n   *   Credit Actions\n   * </span>\n   *\n   * <po-popup #popup\n   *   [p-actions]=\"actions\"\n   *   [p-target]=\"icon\">\n   * </po-popup>\n   * ```\n   *\n   * Caso o elemento alvo for um componente, serÃ¡ preciso obter o `ElementRef` do mesmo e passÃ¡-lo Ã  propriedade, por exemplo:\n   *\n   * ```\n   * // component.html\n   *\n   * <po-button #poButton\n   *   p-label=\"Open Popover\"\n   *   (p-click)=\"popup.toggle()\">\n   * </po-button>\n   *\n   * <po-popup #popup\n   *   [p-actions]=\"actions\"\n   *   [p-target]=\"poButtonRef\">\n   * </po-popup>\n   *\n   * // component.ts\n   *\n   * @ViewChild('poButton', { read: ElementRef }) poButtonRef: ElementRef;\n   * ```\n   */\n  @Input('p-target') set target(value: any) {\n    this._target = (value instanceof ElementRef) ? value.nativeElement : value;\n  }\n\n  get target() {\n    return this._target;\n  }\n\n  protected clickoutListener: () => void;\n  protected resizeListener: () => void;\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Renderer2, ViewChild, ViewContainerRef } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { callFunction, isExternalLink, isTypeof, openExternalLink } from '../../utils/util';\nimport { PoControlPositionService } from '../../services/po-control-position/po-control-position.service';\n\nimport { PoPopupAction } from './po-popup-action.interface';\nimport { PoPopupBaseComponent } from './po-popup-base.component';\n\n/**\n *\n * @docsExtends PoPopupBaseComponent\n *\n * @example\n *\n * <example name=\"po-popup-basic\" title=\"Portinari Popup - Basic\">\n *   <file name=\"sample-po-popup-basic/sample-po-popup-basic.component.html\"> </file>\n *   <file name=\"sample-po-popup-basic/sample-po-popup-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-popup-labs\" title=\"Portinari Popup - Labs\">\n *   <file name=\"sample-po-popup-labs/sample-po-popup-labs.component.html\"> </file>\n *   <file name=\"sample-po-popup-labs/sample-po-popup-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-popup-email\" title=\"Portinari Popup Email\">\n *   <file name=\"sample-po-popup-email/sample-po-popup-email.component.html\"> </file>\n *   <file name=\"sample-po-popup-email/sample-po-popup-email.component.ts\"> </file>\n * </example>\n *\n */\n@Component({\n  selector: 'po-popup',\n  templateUrl: './po-popup.component.html',\n  providers: [ PoControlPositionService ]\n})\nexport class PoPopupComponent extends PoPopupBaseComponent {\n\n  @ViewChild('popupRef', { read: ElementRef, static: false }) popupRef: ElementRef;\n\n  constructor(\n    viewContainerRef: ViewContainerRef,\n    private renderer: Renderer2,\n    private router: Router,\n    private poControlPosition: PoControlPositionService,\n    public changeDetector: ChangeDetectorRef) {\n    super();\n    this.parentRef = viewContainerRef['_view']['component'];\n  }\n\n  /**\n   * Fecha o componente *popup*.\n   *\n   * > Por padrÃ£o, este comportamento Ã© acionado somente ao clicar fora do componente ou em determinada aÃ§Ã£o / url.\n   */\n  close() {\n    this.removeListeners();\n\n    this.showPopup = false;\n  }\n\n  onActionClick(popupAction: PoPopupAction) {\n    const actionNoDisabled = popupAction && !this.returnBooleanValue(popupAction, 'disabled');\n\n    if (popupAction && popupAction.action && actionNoDisabled) {\n      this.close();\n      return callFunction(popupAction.action, this.parentRef, this.param || popupAction);\n    }\n\n    if (popupAction && popupAction.url && actionNoDisabled) {\n      this.close();\n      return this.openUrl(popupAction.url);\n    }\n  }\n\n  /**\n   * Abre o componente *popup*.\n   *\n   * > Ã possÃ­vel informar um parÃ¢metro que serÃ¡ utilizado na execuÃ§Ã£o da aÃ§Ã£o do item e na funÃ§Ã£o de desabilitar.\n   */\n  open(param?) {\n    this.oldTarget = this.target;\n    this.param = param;\n    this.showPopup = true;\n    this.changeDetector.detectChanges();\n    this.validateInitialContent();\n  }\n\n  returnBooleanValue(popupAction: any, property: string) {\n    return isTypeof(popupAction[property], 'function') ? popupAction[property](this.param || popupAction) : popupAction[property];\n  }\n\n  /**\n   * ResponsÃ¡vel por abrir e fechar o *popup*.\n   *\n   * Quando disparado abrirÃ¡ o *popup* e caso o mesmo jÃ¡ estiver aberto e possuir o mesmo `target` irÃ¡ fecha-lo.\n   *\n   * Ã possÃ­vel informar um parÃ¢metro que serÃ¡ utilizado na execuÃ§Ã£o da aÃ§Ã£o do item e na funÃ§Ã£o de desabilitar.\n   */\n  toggle(param?) {\n    this.showPopup && this.oldTarget === this.target ? this.close() : this.open(param);\n  }\n\n  private clickedOutDisabledItem(event) {\n    const containsItemDisabled = this.elementContains(event.target, 'po-popup-item-disabled') ||\n      this.elementContains(event.target.parentElement, 'po-popup-item-disabled');\n\n    return !containsItemDisabled;\n  }\n\n  private clickedOutHeaderTemplate(event) {\n    const popupHeaderTemplate = this.popupRef && this.popupRef.nativeElement.querySelector('[p-popup-header-template]');\n    return !(popupHeaderTemplate && popupHeaderTemplate.contains(event.target));\n  }\n\n  private clickedOutTarget(event) {\n    return this.target && !this.target.contains(event.target);\n  }\n\n  private closePopupOnClickout(event: MouseEvent) {\n\n    if (this.clickedOutTarget(event) && this.clickedOutDisabledItem(event) && this.clickedOutHeaderTemplate(event)) {\n\n      this.close();\n    }\n\n  }\n\n  private elementContains(element: HTMLElement, className: string) {\n    return element && element.classList.contains(className);\n  }\n\n  private hasContentToShow() {\n    return !!(this.popupRef.nativeElement && this.popupRef.nativeElement.clientHeight);\n  }\n\n  private initializeListeners() {\n    this.resizeListener = this.renderer.listen('window', 'resize', () => {\n      this.close();\n    });\n\n    this.clickoutListener = this.renderer.listen('document', 'click', (event: MouseEvent) => {\n      this.closePopupOnClickout(event);\n    });\n\n    window.addEventListener('scroll', this.onScroll, true);\n  }\n\n  private onScroll = (): void => {\n    if (this.showPopup) {\n      this.close();\n    }\n  }\n\n  private openUrl(url: string) {\n    if (isExternalLink(url)) {\n      return openExternalLink(url);\n    }\n\n    if (url) {\n      return this.router.navigate([url]);\n    }\n  }\n\n  private removeListeners() {\n    if (this.clickoutListener) {\n      this.clickoutListener();\n    }\n\n    if (this.resizeListener) {\n      this.resizeListener();\n    }\n\n    window.removeEventListener('scroll', this.onScroll, true);\n  }\n\n  private setPosition() {\n    this.poControlPosition.setElements(this.popupRef.nativeElement, 8, this.target, this.customPositions, false, this.isCornerAlign);\n    this.poControlPosition.adjustPosition(this.position);\n    this.arrowDirection = this.poControlPosition.getArrowDirection();\n  }\n\n  private validateInitialContent() {\n    if (this.hasContentToShow()) {\n      this.setPosition();\n      this.initializeListeners();\n    } else {\n      this.close();\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PoPopupComponent } from './po-popup.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente po-popup.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    PoPopupComponent,\n  ],\n  exports: [\n    PoPopupComponent\n  ],\n  providers: [],\n  schemas: []\n})\nexport class PoPopupModule { }\n","import { Input } from '@angular/core';\n\nimport { convertToBoolean } from './../../utils/util';\n\nimport { PoDropdownAction } from './po-dropdown-action.interface';\n\n/**\n * @description\n *\n * O componente `po-dropdown` pode ser utilizado como um agrupador de aÃ§Ãµes e / ou opÃ§Ãµes.\n *\n * > Caso nÃ£o haja configuraÃ§Ã£o de rotas em sua aplicaÃ§Ã£o, se faz necessÃ¡rio importar o `RouterModule`\n * no mÃ³dulo principal para o correto funcionamento deste componente:\n *\n * ```\n * import { RouterModule } from '@angular/router';\n *\n * @NgModule({\n *   imports: [\n *     ...\n *     RouterModule.forRoot([]),\n *     PoModule\n *   ],\n *   declarations: [\n *     AppComponent\n *   ],\n *   exports: [],\n *   providers: [],\n *   bootstrap: [\n *     AppComponent\n *   ]\n * })\n * export class AppModule { }\n * ```\n * > Para maiores dÃºvidas referente Ã  configuraÃ§Ã£o de rotas, acesse em nosso portal /Guias /ComeÃ§ando\n * [/Configurando as rotas do po-menu](/guides/getting-started).\n */\n\nexport class PoDropdownBaseComponent {\n\n  private _actions: Array<PoDropdownAction>;\n  private _disabled: boolean = false;\n\n  icon: string = 'po-icon-arrow-down';\n  open: boolean = false;\n\n  /** Lista de aÃ§Ãµes que serÃ£o exibidas no componente. */\n  @Input('p-actions') set actions(value: Array<PoDropdownAction>) {\n    this._actions = Array.isArray(value) ? value : [];\n  }\n\n  get actions() {\n    return this._actions;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita o campo.\n   *\n   * @default `false`\n   */\n  @Input('p-disabled') set disabled(value: boolean) {\n    this._disabled = convertToBoolean(value);\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  /** Adiciona um rÃ³tulo ao `dropdown`. */\n  @Input('p-label') label: string;\n\n}\n","import { Component, ElementRef, Renderer2, ViewChild } from '@angular/core';\n\nimport { isKeyCodeEnter } from './../../utils/util';\n\nimport { PoDropdownBaseComponent } from './po-dropdown-base.component';\n\n/**\n * @docsExtends PoDropdownBaseComponent\n *\n * @example\n *\n * <example name=\"po-dropdown-basic\" title=\"Portinari Dropdown Basic\" >\n *  <file name=\"sample-po-dropdown-basic/sample-po-dropdown-basic.component.html\"> </file>\n *  <file name=\"sample-po-dropdown-basic/sample-po-dropdown-basic.component.ts\"> </file>\n *  <file name=\"sample-po-dropdown-basic/sample-po-dropdown-basic.component.e2e-spec.ts\"> </file>\n *  <file name=\"sample-po-dropdown-basic/sample-po-dropdown-basic.component.po.ts\"> </file>\n * </example>\n *\n * <example name=\"po-dropdown-labs\" title=\"Portinari Dropdown Labs\" >\n *  <file name=\"sample-po-dropdown-labs/sample-po-dropdown-labs.component.html\"> </file>\n *  <file name=\"sample-po-dropdown-labs/sample-po-dropdown-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-dropdown-social-network\" title=\"Portinari Dropdown - Social Network\" >\n *  <file name=\"sample-po-dropdown-social-network/sample-po-dropdown-social-network.component.html\"> </file>\n *  <file name=\"sample-po-dropdown-social-network/sample-po-dropdown-social-network.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-dropdown',\n  templateUrl: './po-dropdown.component.html'\n})\nexport class PoDropdownComponent extends PoDropdownBaseComponent {\n\n  private clickoutListener: () => void;\n  private resizeListener: () => void;\n\n  @ViewChild('dropdownRef', { read: ElementRef, static: true }) dropdownRef: ElementRef;\n  @ViewChild('popupRef', { static: false }) popupRef: any;\n\n  constructor(private renderer: Renderer2) {\n    super();\n  }\n\n  onKeyDown(event: any) {\n    if (isKeyCodeEnter(event)) {\n      this.toggleDropdown();\n    }\n  }\n\n  toggleDropdown(): void {\n    this.dropdownRef && !this.open && !this.disabled ? this.showDropdown() : this.hideDropdown();\n  }\n\n  private checkClickArea(event: MouseEvent) {\n    return this.dropdownRef && this.dropdownRef.nativeElement.contains(event.target);\n  }\n\n  private hideDropdown() {\n    this.icon = 'po-icon-arrow-down';\n    this.removeListeners();\n    this.popupRef.close();\n    this.open = false;\n  }\n\n  private initializeListeners() {\n    this.clickoutListener = this.renderer.listen('document', 'click', (event: MouseEvent) => {\n      this.wasClickedOnDropdown(event);\n    });\n\n    this.resizeListener = this.renderer.listen('window', 'resize', () => {\n      this.hideDropdown();\n    });\n\n    window.addEventListener('scroll', this.onScroll, true);\n  }\n\n  private onScroll = (): void => {\n    if (this.open) {\n      this.hideDropdown();\n    }\n  }\n\n  private removeListeners() {\n    if (this.clickoutListener) {\n      this.clickoutListener();\n    }\n\n    if (this.resizeListener) {\n      this.resizeListener();\n    }\n\n    window.removeEventListener('scroll', this.onScroll, true);\n  }\n\n  private showDropdown() {\n    this.icon = 'po-icon-arrow-up';\n    this.initializeListeners();\n    this.popupRef.open();\n    this.open = true;\n  }\n\n  private wasClickedOnDropdown(event: MouseEvent) {\n    const clickedOnDropdown = this.checkClickArea(event);\n\n    if (!clickedOnDropdown) {\n      this.hideDropdown();\n    }\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoPopupModule } from '../po-popup/po-popup.module';\n\nimport { PoDropdownComponent } from './po-dropdown.component';\n/**\n * @description\n * MÃ³dulo do componente po-dropdown.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    PoPopupModule\n  ],\n  declarations: [PoDropdownComponent],\n  exports: [PoDropdownComponent]\n})\nexport class PoDropdownModule { }\n","import { Component, Input } from '@angular/core';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente de uso interno, responsÃ¡vel por gerar uma margem inferior nos componentes que utilizam o po-field-container.\n * Essa margem inferior pode conter uma mensagem de erro.\n */\n@Component({\n  selector: 'po-field-container-bottom',\n  templateUrl: './po-field-container-bottom.component.html'\n})\nexport class PoFieldContainerBottomComponent {\n\n  /**\n   * Mensagem que serÃ¡ apresentada quando o pattern ou a mÃ¡scara nÃ£o for satisfeita.\n   * Obs: Esta mensagem nÃ£o Ã© apresentada quando o campo estiver vazio, mesmo que ele seja requerido.\n   */\n  @Input('p-error-pattern') errorPattern?: string = '';\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { convertToBoolean, getShortBrowserLanguage } from '../../../utils/util';\n\n/**\n * @docsPrivate\n *\n * Componente de uso interno, responsÃ¡vel por atribuir uma label para o campo\n */\n@Component({\n  selector: 'po-field-container',\n  templateUrl: './po-field-container.component.html'\n})\nexport class PoFieldContainerComponent {\n\n  private _optional: boolean = false;\n\n  /** Label do campo. */\n  @Input('p-label') label?: string;\n\n  /** Texto de apoio do campo. */\n  @Input('p-help') help: string;\n\n  /** Indica se o campo serÃ¡ opcional. */\n  @Input('p-optional') set optional(value: boolean) {\n    this._optional = convertToBoolean(value);\n  }\n\n  get optional() {\n    return this._optional;\n  }\n\n  getOptionalText() {\n    const browserLanguage = getShortBrowserLanguage();\n\n    const optional = {\n      pt: '(Opcional)',\n      en: '(Optional)',\n      es: '(Opcional)'\n    };\n\n    return optional[browserLanguage];\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoFieldContainerBottomComponent } from './po-field-container-bottom/po-field-container-bottom.component';\nimport { PoFieldContainerComponent } from './po-field-container.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente `po-field-container`.\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    PoFieldContainerBottomComponent,\n    PoFieldContainerComponent\n  ],\n  declarations: [\n    PoFieldContainerBottomComponent,\n    PoFieldContainerComponent\n  ]\n})\nexport class PoFieldContainerModule { }\n","import { PropertyDecoratorInterface } from './property-decorator.interface';\n\n/**\n * FunÃ§Ã£o utilizada pela fÃ¡brica de decoradores para validar uma propriedade de uma classe durante\n * o ciclo de vida do Angular.\n *\n * @param decoratorProperties propriedades da interface PoPropertyDecoratorInterface.\n * @param lifecycleName clico de vida que se deseja executar com a validaÃ§Ã£o.\n * @param callback funÃ§Ã£o que serÃ¡ executada para validadar a propriedade.\n */\nexport function validatePropertyOnLifeCycle(\n  decoratorProperties: PropertyDecoratorInterface,\n  lifecycleName: string,\n  callback: Function) {\n\n  const { target, property } = decoratorProperties;\n  const emptyFunction = () => { };\n  const lifecycleFunctionClone: Function | null = target[lifecycleName] || emptyFunction;\n\n  Object.defineProperty(target, lifecycleName, {\n    value: function() {\n      callback.call(this, property, target);\n      lifecycleFunctionClone.call(this);\n    }\n  });\n\n}\n\n/**\n * FunÃ§Ã£o utilizada pela fÃ¡brica de decoradores para alterar/manipular o valor de uma propriedade.\n *\n * > Este decorator irÃ¡ criar os mÃ©todos get e set internamente. Portanto,\n * Ã© importante **nÃ£o** criar nomes privados para as propriedades utilizando\n * `$$__nomeDaPropriedade` ao utilizar este decorator, pois ela serÃ¡ sobrescrita pela propriedade privada\n * criada pelo decorator.\n *\n * @param decoratorProperties propriedades da interface PoPropertyDecoratorInterface.\n * @param decoratorName nome do decorator\n * @param callback funÃ§Ã£o que serÃ¡ executada para alterar o valor da propriedade\n */\nexport function changeValueByCallback(decoratorProperties: PropertyDecoratorInterface, decoratorName: string, callback: Function) {\n  const { target, property, originalDescriptor } = decoratorProperties;\n  const privatePropertyName = createPrivateProperty(target, property, decoratorName);\n\n  return {\n    get: getter(originalDescriptor, privatePropertyName),\n    set: setter(originalDescriptor, callback, privatePropertyName)\n  };\n\n}\nfunction setter(originalDescriptor, callback: Function, privatePropertyName: string) {\n  return function(value): void {\n\n    if (originalDescriptor && originalDescriptor.set) {\n      originalDescriptor.set.bind(this)(callback(value));\n    }\n\n    this[privatePropertyName] = callback(value);\n  };\n}\n\nfunction getter(originalDescriptor: TypedPropertyDescriptor<any>, privatePropName: string) {\n  return function() {\n    return originalDescriptor && originalDescriptor.get ? originalDescriptor.get.bind(this)() : this[privatePropName];\n  };\n}\n\nexport function createPrivateProperty(target: any, propertyName: string, decoratorName: string) {\n  const privatePropName = `$$__${propertyName}`;\n\n  if (Object.prototype.hasOwnProperty.call(target, privatePropName)) {\n    console.warn(`The prop \"${privatePropName}\" is already exist, it will be overrided by ${decoratorName} decorator.`);\n  }\n\n  Object.defineProperty(target, privatePropName, {\n    configurable: true,\n    writable: true\n  });\n\n  return privatePropName;\n}\n","import { convertToBoolean } from '../../utils/util';\nimport { changeValueByCallback } from '../utils-decorators';\nimport { PropertyDecoratorInterface } from '../property-decorator.interface';\n\n/**\n * Converte o valor de um campo de entrada para booleano.\n *\n * Forma de utilizaÃ§Ã£o:\n *\n * ```\n * @Input('p-loading') @InputBoolean() loading: boolean;\n * ```\n */\n\nexport function InputBoolean(): any {\n  return function(target: any, property: string, originalDescriptor?) {\n\n    const decoratorProperties: PropertyDecoratorInterface = { target, property, originalDescriptor };\n\n    return changeValueByCallback(decoratorProperties, 'InputBoolean', convertToBoolean);\n  };\n}\n","\nexport function requiredFailed(required: boolean, disabled: boolean, value: string | Array<any> | number | boolean) {\n  const valid = ((typeof value === 'string' && value) || (typeof value === 'object' && value && value.length)\n                || (typeof value === 'number' && (value || value === 0)) || (typeof value === 'boolean' && value));\n  return (required && !disabled && !valid);\n}\n\nexport function maxlengpoailed(maxlength: number, value: string | number) {\n  const validMaxlength = maxlength || maxlength === 0;\n  const validValue = (value || value === 0) && value.toString();\n  return validMaxlength && validValue && validValue.length > Number(maxlength);\n}\n\nexport function minlengpoailed(minlength: number, value: string | number) {\n  const validMinlength = minlength || minlength === 0;\n  const validValue = (value || value === 0) && value.toString();\n  return validMinlength && validValue && validValue.length < Number(minlength);\n}\n\nexport function patternFailed(pattern: string, value: string) {\n  let reg;\n  try {\n    reg = new RegExp(pattern);\n  } catch (e) {\n    return true;\n  }\n  return (pattern && value && !reg.test(value));\n}\n\nexport function minFailed(min: number, value: number) {\n  const validValue = value || value === 0;\n  const validMin = min || min === 0;\n  return validValue && validMin && value < min;\n}\n\nexport function maxFailed(max: number, value: number) {\n  const validValue = value || value === 0;\n  const validMax = max || max === 0;\n  return validValue && validMax && value > max;\n}\n\nexport function dateFailed(value: string) {\n  return (value && isNaN(Date.parse(value)));\n}\n","import { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\nimport { EventEmitter, Input, Output } from '@angular/core';\n\nimport { convertToBoolean, convertToInt, uuid } from './../../../utils/util';\nimport { InputBoolean } from '../../../decorators';\nimport { requiredFailed } from '../validators';\n\nimport { PoCheckboxGroupOption } from './interfaces/po-checkbox-group-option.interface';\nimport { PoCheckboxGroupOptionView } from './interfaces/po-checkbox-group-option-view.interface';\n\nconst poCheckboxGroupColumnsDefaultLength: number = 6;\nconst poCheckboxGroupColumnsTotalLength: number = 12;\n\n/**\n * @description\n *\n * O componente `po-checkbox-group` exibe uma lista de mÃºltipla escolha onde o usuÃ¡rio pode marcar e desmarcar,\n * utilizando a tecla de espaÃ§o ou o clique do mouse, vÃ¡rias opÃ§Ãµes.\n *\n * > Para seleÃ§Ã£o Ãºnica, utilize o [**Portinari Radio Group**](/documentation/po-radio-group).\n *\n * Por padrÃ£o, o po-checkbox-group retorna um array com os valores dos itens selecionados para o model.\n *\n * ```\n * favorites = ['PO', 'Angular'];\n * ```\n *\n * Na maioria das situaÃ§Ãµes, o array com os objetos setados jÃ¡ atende as necessidades mas, caso o desenvolvedor\n * tenha necessidade de usar um valor indeterminado (`null`), ou seja, nem marcado (`true`) e nem desmarcado (`false`),\n * deve setar a propriedade `p-indeterminate` como `true`.\n *\n * Nesse caso, o po-checkbox-group vai retornar um objeto com todas as opÃ§Ãµes disponÃ­veis e seus valores.\n *\n * ```\n * favorites = {\n *  PO: true,\n *  Angular: true,\n *  VueJS: false,\n *  React: null // indeterminado\n * };\n * ```\n */\nexport class PoCheckboxGroupBaseComponent implements ControlValueAccessor, Validator {\n\n  checkboxGroupOptionsView: Array<PoCheckboxGroupOptionView>;\n  checkedOptions: any = {};\n  checkedOptionsList: any = [];\n  mdColumns: number = poCheckboxGroupColumnsDefaultLength;\n  propagateChange: any;\n  validatorChange: any;\n\n  private _columns: number = poCheckboxGroupColumnsDefaultLength;\n  private _disabled?: boolean = false;\n  private _indeterminate?: boolean = false;\n  private _options?: Array<PoCheckboxGroupOption>;\n  private _required?: boolean = false;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Aplica foco no elemento ao ser iniciado.\n   *\n   * > Caso mais de um elemento seja configurado com essa propriedade, apenas o Ãºltimo elemento declarado com ela terÃ¡ o foco.\n   *\n   * @default `false`\n   */\n  @Input('p-auto-focus') @InputBoolean() autoFocus: boolean = false;\n\n  /** Nome dos checkboxes */\n  @Input('name') name: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Possibilita definir a quantidade de colunas para exibiÃ§Ã£o dos itens do *checkbox*.\n   * - Ã possÃ­vel exibir as opÃ§Ãµes entre `1` e `4` colunas.\n   * - Para resoluÃ§Ã£o `sm` a colunagem invariavelmente passa para `1` coluna.\n   * - Quando se trata de resoluÃ§Ã£o `md` e o valor estabelecido para colunas for superior a `2`,\n   * o *grid system* serÃ¡ composto por `2` colunas.\n   * - Para evitar a quebra de linha, prefira a utilizaÃ§Ã£o de `1` coluna para opÃ§Ãµes com textos grandes.\n   *\n   * @default `2`\n   *\n   */\n  @Input('p-columns') set columns(value: number) {\n    const columns = convertToInt(value, poCheckboxGroupColumnsDefaultLength);\n\n    this._columns = this.getGridSystemColumns(columns, 4);\n    this.mdColumns = this.getGridSystemColumns(columns, 2);\n  }\n\n  get columns() {\n    return this._columns;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita todos os itens do checkbox.\n   *\n   * @default `false`\n   */\n  @Input('p-disabled') set disabled(value: boolean) {\n    this._disabled = convertToBoolean(value);\n\n    this.validateModel(this.checkIndeterminate());\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  /** Texto de apoio do campo */\n  @Input('p-help') help?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caso exista a necessidade de usar o valor indeterminado (`null`) dentro da lista de opÃ§Ãµes, Ã© necessÃ¡rio setar\n   * a propriedade `p-indeterminate` como `true`, por padrÃ£o essa propriedade vem desabilitada (`false`).\n   *\n   * Quando essa propriedade Ã© setada como `true`, o *po-checkbox-group* passa a devolver um objeto completo para o\n   * `ngModel`, diferente do array que contÃ©m apenas os valores selecionados.\n   *\n   * @default `false`\n   */\n  @Input('p-indeterminate') set indeterminate(indeterminate: boolean) {\n    this._indeterminate = convertToBoolean(indeterminate);\n  }\n\n  get indeterminate() {\n    return this._indeterminate;\n  }\n\n  /** Label do campo */\n  @Input('p-label') label?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `p-required`;\n   * - NÃ£o possuir `p-help` e/ou `p-label`.\n   *\n   * @default `false`\n   */\n  @Input('p-optional') optional: boolean;\n\n  /**\n   * @optional\n   *\n   * @description\n   * Lista de opÃ§Ãµes que serÃ£o exibidas\n   * Nesta propriedade deve ser definido um array de objetos que implementam a interface PoCheckboxGroupOption\n   */\n  @Input('p-options') set options(value: Array<PoCheckboxGroupOption>) {\n    this._options = Array.isArray(value) ? value : [];\n    this.removeDuplicatedOptions();\n    this.setCheckboxGroupOptionsView(this.options);\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define que o campo serÃ¡ obrigatÃ³rio.\n   *\n   * @default `false`\n   */\n  @Input('p-required') set required(required: boolean) {\n    this._required = convertToBoolean(required);\n\n    this.validateModel(this.checkIndeterminate());\n  }\n\n  get required() {\n    return this._required;\n  }\n\n  // FunÃ§Ã£o para atualizar o `ngModel` do componente, necessÃ¡rio quando nÃ£o for utilizado dentro da tag form.\n  @Output('ngModelChange') ngModelChange?: EventEmitter<any> = new EventEmitter<any>();\n\n  /** Evento disparado ao alterar valor do campo */\n  @Output('p-change') change?: EventEmitter<any> = new EventEmitter<any>();\n\n  changeValue() {\n\n    const value = this.checkIndeterminate();\n\n    if (this.propagateChange) {\n      this.propagateChange(value);\n    } else {\n      this.ngModelChange.emit(value);\n    }\n\n    this.change.emit(value);\n  }\n\n  checkIndeterminate() {\n    return this.indeterminate ? this.checkedOptions : this.checkedOptionsList;\n  }\n\n  checkOption(value: PoCheckboxGroupOption) {\n    if (!this._disabled && !value.disabled) {\n      this.checkOptionModel(value);\n      this.changeValue();\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void { }\n\n  writeValue(optionsModel: any) {\n    if (optionsModel && this.checkedOptions !== optionsModel) {\n      this.generateCheckOptions(optionsModel);\n    } else {\n      this.checkedOptionsList = [];\n      this.checkedOptions = {};\n    }\n  }\n\n  registerOnValidatorChange(fn: () => void) {\n    this.validatorChange = fn;\n  }\n\n  validate(abstractControl: AbstractControl): { [key: string]: any; } {\n\n    if ((!this.indeterminate && requiredFailed(this.required, this.disabled, abstractControl.value)) || this.isInvalidIndeterminate()) {\n      return {\n        required: {\n          valid: false,\n        }\n      };\n    }\n\n  }\n\n  protected validateModel(model: any) {\n    if (this.validatorChange) {\n      this.validatorChange(model);\n    }\n  }\n\n  private checkColumnsRange(columns, maxColumns): boolean {\n    const minColumns = 1;\n\n    return columns >= minColumns && columns <= maxColumns;\n  }\n\n  private checkOptionModel(optionChecked: PoCheckboxGroupOption) {\n    this.checkedOptions[optionChecked.value] = !this.checkedOptions[optionChecked.value];\n\n    if (!this.indeterminate && this.checkedOptionsList.includes(optionChecked.value)) {\n      this.checkedOptionsList.splice(this.checkedOptionsList.indexOf(optionChecked.value), 1);\n\n    } else if (!this.indeterminate) {\n      this.checkedOptionsList.push(optionChecked.value);\n    }\n  }\n\n  private generateCheckOptions(optionsModel: any) {\n\n    this.checkedOptions = {};\n\n    if (optionsModel instanceof Array) {\n      this.checkedOptionsList = optionsModel;\n\n      this.options.forEach((option: PoCheckboxGroupOption) => {\n        this.checkedOptions[option.value] = optionsModel.includes(option.value);\n      });\n    } else {\n      this.options.forEach((option: PoCheckboxGroupOption) => {\n        optionsModel[option.value] = optionsModel[option.value] === undefined ? false : optionsModel[option.value];\n        this.checkedOptions = optionsModel;\n      });\n    }\n  }\n\n  private getGridSystemColumns(columns: number, maxColumns: number): number {\n    const gridSystemColumns = poCheckboxGroupColumnsTotalLength / columns;\n\n    return this.checkColumnsRange(columns, maxColumns) ? gridSystemColumns : poCheckboxGroupColumnsDefaultLength;\n  }\n\n  private isInvalidIndeterminate() {\n    if (this.indeterminate && this.required && this.checkedOptions) {\n      return (<any>Object).values(this.checkedOptions).every(value => value === false);\n    }\n    return false;\n  }\n\n  private removeDuplicatedOptions() {\n    this.options.forEach((option, index) => {\n      const duplicatedIndex = this.options.findIndex((optionFind: any) => optionFind.value === option.value) === index;\n      if (!duplicatedIndex) {\n        this.options.splice(this.options.indexOf(option), 1);\n      }\n    });\n  }\n\n  private setCheckboxGroupOptionsView(optionsList: Array<PoCheckboxGroupOption>) {\n    this.checkboxGroupOptionsView = optionsList.map(option => {\n      return { ...option, id: uuid() };\n    });\n  }\n\n}\n","/**\n * @usedBy PoProgressComponent\n *\n * @description\n *\n * *Enum* `PoProgressStatus` para os status de barra de progresso.\n */\nexport enum PoProgressStatus {\n\n  /** Define o status `default` para a barra de progresso. */\n  Default = 'default',\n\n  /** Define o status de `error` para a barra de progresso. */\n  Error = 'error',\n\n  /** Define o status de `success` para a barra de progresso. */\n  Success = 'success'\n\n}\n","import { AfterViewChecked, AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef,\n  forwardRef, QueryList, ViewChildren } from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { PoCheckboxGroupBaseComponent } from './po-checkbox-group-base.component';\nimport { PoCheckboxGroupOption } from './interfaces/po-checkbox-group-option.interface';\n\n/**\n * @docsExtends PoCheckboxGroupBaseComponent\n *\n * @example\n *\n * <example name=\"po-checkbox-group-basic\" title=\"Portinari Checkbox Group Basic\">\n *  <file name=\"sample-po-checkbox-group-basic/sample-po-checkbox-group-basic.component.html\"> </file>\n *  <file name=\"sample-po-checkbox-group-basic/sample-po-checkbox-group-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-checkbox-group-labs\" title=\"Portinari Checkbox Group Labs\">\n *  <file name=\"sample-po-checkbox-group-labs/sample-po-checkbox-group-labs.component.html\"> </file>\n *  <file name=\"sample-po-checkbox-group-labs/sample-po-checkbox-group-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-checkbox-group-password-policy\" title=\"Portinari Checkbox Group â Security policy\">\n *  <file name=\"sample-po-checkbox-group-password-policy/sample-po-checkbox-group-password-policy.component.html\"> </file>\n *  <file name=\"sample-po-checkbox-group-password-policy/sample-po-checkbox-group-password-policy.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-checkbox-group',\n  templateUrl: './po-checkbox-group.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PoCheckboxGroupComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => PoCheckboxGroupComponent),\n      multi: true,\n    }\n  ]\n})\nexport class PoCheckboxGroupComponent extends PoCheckboxGroupBaseComponent implements AfterViewChecked, AfterViewInit {\n\n  @ViewChildren('checkboxLabel') checkboxLabels: QueryList<ElementRef>;\n\n  constructor(private changeDetector: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewChecked(): void {\n    this.changeDetector.detectChanges();\n  }\n\n  ngAfterViewInit() {\n    if (this.autoFocus) {\n      this.focus();\n    }\n  }\n\n  /**\n   * FunÃ§Ã£o que atribui foco ao componente.\n   *\n   * Para utilizÃ¡-la Ã© necessÃ¡rio ter a instÃ¢ncia do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n   *\n   * ```\n   * import { PoCheckboxGroupComponent } from '@portinari/portinari-ui';\n   *\n   * ...\n   *\n   * @ViewChild(PoCheckboxGroupComponent, { static: true }) checkbox: PoCheckboxGroupComponent;\n   *\n   * focusCheckbox() {\n   *   this.checkbox.focus();\n   * }\n   * ```\n   */\n  focus(): void {\n    if (this.checkboxLabels && !this.disabled) {\n      const checkboxLabel = this.checkboxLabels.find((_, index) => !this.options[index].disabled);\n\n      if (checkboxLabel) {\n        checkboxLabel.nativeElement.focus();\n      }\n    }\n  }\n\n  onKeyDown(event: KeyboardEvent, option: PoCheckboxGroupOption) {\n    const spaceBar = 32;\n\n    if (event.which === spaceBar || event.keyCode === spaceBar) {\n      this.checkOption(option);\n\n      event.preventDefault();\n    }\n  }\n\n  trackByFn(index) {\n    return index;\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { PoFieldContainerModule } from '../po-field-container/po-field-container.module';\n\nimport { PoCheckboxGroupComponent } from './po-checkbox-group.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente `po-checkbox-group`.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    PoFieldContainerModule\n  ],\n  exports: [\n    PoCheckboxGroupComponent\n  ],\n  declarations: [\n    PoCheckboxGroupComponent\n  ]\n})\nexport class PoCheckboxGroupModule { }\n","import { Input, EventEmitter } from '@angular/core';\n\nimport { convertToBoolean } from './../../utils/util';\nimport { PoModalAction } from './po-modal-action.interface';\n\n/**\n * @description\n *\n * O componente `po-modal` Ã© utilizado para incluir conteÃºdos rÃ¡pidos e informativos.\n *\n * No cabeÃ§alho do componente Ã© possÃ­vel definir um tÃ­tulo e como tambÃ©m permite ocultar o Ã­cone de fechamento da modal.\n *\n * Em seu corpo Ã© possÃ­vel definir um conteÃºdo informativo, podendo utilizar componentes como por exemplo `po-chart`,\n * `po-table` e os demais componentes do PO.\n *\n * No rodapÃ© encontram-se os botÃµes de aÃ§Ã£o primÃ¡ria e secundÃ¡ria, no qual permitem definir uma aÃ§Ã£o e um rÃ³tulo, bem como\n * definir um estado de carregando e / ou desabilitado. TambÃ©m Ã© possÃ­vel definir o botÃ£o com o tipo *danger*.\n *\n * > Ã possÃ­vel fechar a modal atravÃ©s da tecla *ESC*, quando a propriedade `p-hide-close` nÃ£o estiver habilitada.\n */\nexport class PoModalBaseComponent {\n\n  private _hideClose?: boolean = false;\n  private _size?: string = 'md';\n\n  /** TÃ­tulo da modal. */\n  @Input('p-title') title: string;\n\n  /**\n   * Deve ser definido um objeto que implementa a interface `PoModalAction` contendo a label e a funÃ§Ã£o da primeira aÃ§Ã£o.\n   * Caso esta propriedade nÃ£o seja definida ou esteja incompleta, automaticamente serÃ¡ adicionado um botÃ£o de aÃ§Ã£o com\n   * a funÃ§Ã£o de fechar a modal.\n   */\n  @Input('p-primary-action') primaryAction?: PoModalAction;\n\n  /** Deve ser definido um objeto que implementa a interface `PoModalAction` contendo a label e a funÃ§Ã£o da segunda aÃ§Ã£o. */\n  @Input('p-secondary-action') secondaryAction?: PoModalAction;\n\n  /**\n   * Define o tamanho da modal.\n   *\n   * Valores vÃ¡lidos:\n   *  - `sm` (pequeno)\n   *  - `md` (mÃ©dio)\n   *  - `lg` (grande)\n   *  - `xl` (extra grande)\n   *  - `auto` (automÃ¡tico)\n   *\n   * > Quando informado `auto` a modal calcularÃ¡ automaticamente seu tamanho baseado em seu conteÃºdo.\n   * Caso nÃ£o seja informado um valor, a modal terÃ¡ o tamanho definido como `md`.\n   *\n   * > Todas as opÃ§Ãµes de tamanho possuem uma largura mÃ¡xima de **768px**.\n   */\n  @Input('p-size') set size(value: string) {\n    const sizes = ['sm', 'md', 'lg', 'xl', 'auto'];\n    this._size = sizes.indexOf(value) > -1 ? value : 'md';\n  }\n\n  get size() {\n    return this._size;\n  }\n\n  /**\n   * Define o fechamento da modal ao clicar fora da mesma.\n   * Informe o valor `true` para ativar o fechamento ao clicar fora da modal.\n   */\n  clickOut?: boolean = false;\n  @Input('p-click-out') set setClickOut(value: boolean | string) {\n    this.clickOut = (value === '') ? false : convertToBoolean(value);\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Oculta o Ã­cone de fechar do cabeÃ§alho da modal.\n   *\n   * > Caso a propriedade estiver habilitada, nÃ£o serÃ¡ possÃ­vel fechar a modal atravÃ©s da tecla *ESC*.\n   *\n   * @default `false`\n   */\n  @Input('p-hide-close') set hideClose(value: boolean) {\n    this._hideClose = convertToBoolean(value);\n  }\n\n  get hideClose() {\n    return this._hideClose;\n  }\n\n  // Controla se a modal fica oculto ou visÃ­vel, por padrÃ£o Ã© oculto\n  isHidden = true;\n\n  // Event emmiter para quando a modal Ã© fechada pelo 'X'.\n  public onXClosed = new EventEmitter<boolean>();\n\n  /** FunÃ§Ã£o para fechar a modal. */\n  close(xClosed = false): void {\n    this.isHidden = true;\n    if (xClosed) {\n      this.onXClosed.emit(xClosed);\n    }\n  }\n\n  /** FunÃ§Ã£o para abrir a modal. */\n  open(): void {\n    this.validPrimaryAction();\n\n    this.isHidden = false;\n  }\n\n  validPrimaryAction() {\n    if (!this.primaryAction) {\n      this.primaryAction = {\n        action: () => this.close(),\n        label: 'Ok',\n      };\n    }\n\n    if (!this.primaryAction['action']) {\n      this.primaryAction['action'] = () => this.close();\n    }\n    if (!this.primaryAction['label']) {\n      this.primaryAction['label'] = 'Ok';\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class PoModalService {\n\n  modalActive: string;\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Renderer2, ViewChild } from '@angular/core';\n\nimport { v4 as uuid } from 'uuid';\n\nimport { PoModalBaseComponent } from './po-modal-base.component';\nimport { PoModalService } from './po-modal-service';\n\n/**\n * @docsExtends PoModalBaseComponent\n *\n * @example\n *\n * <example name=\"po-modal-basic\" title=\"Portinari Modal Basic\">\n *  <file name=\"sample-po-modal-basic/sample-po-modal-basic.component.html\"> </file>\n *  <file name=\"sample-po-modal-basic/sample-po-modal-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-modal-labs\" title=\"Portinari Modal Labs\">\n *  <file name=\"sample-po-modal-labs/sample-po-modal-labs.component.html\"> </file>\n *  <file name=\"sample-po-modal-labs/sample-po-modal-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-modal-fruits-salad\" title=\"Portinari Modal - Fruits Salad\">\n *  <file name=\"sample-po-modal-fruits-salad/sample-po-modal-fruits-salad.component.html\"> </file>\n *  <file name=\"sample-po-modal-fruits-salad/sample-po-modal-fruits-salad.component.ts\"> </file>\n * </example>\n */\n\n@Component({\n  selector: 'po-modal',\n  templateUrl: './po-modal.component.html'\n})\nexport class PoModalComponent extends PoModalBaseComponent {\n\n  @ViewChild('modalContent', { read: ElementRef, static: false }) modalContent: ElementRef;\n\n  private firstElement;\n  private focusFunction;\n  private focusableElements = 'input, select, textarea, button:not([disabled]), a';\n  private id: string = uuid();\n  private sourceElement;\n\n  onResizeListener: () => void;\n\n  constructor(private poModalService: PoModalService, private renderer: Renderer2, private changeDetector: ChangeDetectorRef) {\n    super();\n  }\n\n  close(xClosed = false) {\n    this.poModalService.modalActive = undefined;\n\n    super.close(xClosed);\n\n    this.removeEventListeners();\n\n    if (this.sourceElement) {\n      this.sourceElement.focus();\n    }\n  }\n\n  closeModalOnEscapeKey(event) {\n    if (!this.hideClose) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.close();\n    }\n  }\n\n  getPrimaryActionButtonType() {\n    return this.primaryAction.danger ? 'danger' : 'primary';\n  }\n\n  getSecondaryActionButtonType() {\n    return this.secondaryAction && this.secondaryAction.danger && !this.primaryAction.danger ? 'danger' : 'default';\n  }\n\n  onClickOut(event) {\n    if (this.clickOut && !this.modalContent.nativeElement.contains(event.target)) {\n      this.close();\n    }\n  }\n\n  open() {\n    this.sourceElement = document.activeElement;\n\n    super.open();\n\n    this.handleFocus();\n  }\n\n  private handleFocus(): any {\n    this.poModalService.modalActive = this.id;\n\n    setTimeout(() => {\n      if (this.modalContent) {\n        this.initFocus();\n        document.addEventListener('focus', this.focusFunction, true);\n      }\n    });\n  }\n\n  private initFocus() {\n    this.focusFunction = (event: any) => {\n      this.poModalService.modalActive = this.poModalService.modalActive || this.id;\n      const modalElement = this.modalContent.nativeElement;\n\n      if (!modalElement.contains(event.target) && this.poModalService.modalActive === this.id) {\n        event.stopPropagation();\n        this.firstElement.focus();\n      }\n    };\n\n    this.setFirstElement();\n\n    if (this.hideClose) {\n      this.firstElement.focus();\n    } else {\n      const firstFieldElement =\n        this.modalContent.nativeElement.querySelectorAll(this.focusableElements)[1] ||\n        this.modalContent.nativeElement;\n      firstFieldElement.focus();\n    }\n  }\n\n  private removeEventListeners() {\n    document.removeEventListener('focus', this.focusFunction, true);\n  }\n\n  private setFirstElement() {\n    this.firstElement = this.modalContent.nativeElement.querySelector(this.focusableElements) || this.modalContent.nativeElement;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PoButtonModule } from './../po-button/po-button.module';\nimport { PoModalComponent } from './po-modal.component';\nimport { PoModalService } from './po-modal-service';\n\n/**\n * @description\n * MÃ³dulo do componente po-modal\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    PoButtonModule\n  ],\n  declarations: [\n    PoModalComponent\n  ],\n  exports: [ PoModalComponent ],\n  providers: [PoModalService]\n})\nexport class PoModalModule { }\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'po-progress-bar',\n  templateUrl: './po-progress-bar.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoProgressBarComponent {\n\n  @Input('p-indeterminate') indeterminate: boolean;\n\n  @Input('p-value') value: number;\n\n  get valueScale() {\n    return `${this.value / 100}`;\n  }\n\n}\n","import { EventEmitter, Input, Output } from '@angular/core';\n\nimport { convertToBoolean, convertToInt } from '../../utils/util';\n\nimport { PoProgressStatus } from './enums/po-progress-status.enum';\n\nconst poProgressMaxValue = 100;\nconst poProgressMinValue = 0;\n\n/**\n * @description\n *\n * Componente de barra de progresso que possibilita exibir visualmente o progresso/carregamento de uma tarefa.\n *\n * Este componente pode ser utilizado no *upload* de arquivos, uma atualizaÃ§Ã£o no sistema ou o processamento de uma imagem.\n */\nexport class PoProgressBaseComponent {\n\n  private _indeterminate?: boolean;\n  private _value?: number = 0;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Habilita o modo indeterminado na barra de progresso, que mostra uma animaÃ§Ã£o fixa sem um valor estabelecido.\n   *\n   * Esta opÃ§Ã£o pode ser utilizada quando nÃ£o souber quanto tempo levarÃ¡ para que um processo seja concluÃ­do.\n   *\n   * > Caso esta propriedade e a `p-value` seja habilitada, a propriedade `p-value` serÃ¡ ignorada.\n   *\n   * @default `false`\n   */\n  @Input('p-indeterminate') set indeterminate(indeterminate: boolean) {\n    this._indeterminate = convertToBoolean(indeterminate);\n  }\n\n  get indeterminate(): boolean {\n    return this._indeterminate;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * InformaÃ§Ã£o adicional que aparecerÃ¡ abaixo da barra de progresso ao lado direito.\n   */\n  @Input('p-info') info?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Ãcone que aparecerÃ¡ ao lado do texto da propriedade `p-info`.\n   *\n   * Exemplo: `po-icon-ok`.\n   */\n  @Input('p-info-icon') infoIcon?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Status da barra de progresso que indicarÃ¡ visualmente ao usuÃ¡rio\n   * o andamento, por exemplo, se a mesma foi concluÃ­da com sucesso.\n   *\n   * @default `PoProgressStatus.Default`\n   */\n  @Input('p-status') status: PoProgressStatus = PoProgressStatus.Default;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Texto principal que aparecerÃ¡ abaixo da barra de progresso no lado esquerdo.\n   */\n  @Input('p-text') text?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Valor que representarÃ¡ o progresso.\n   *\n   * > Os valores aceitos sÃ£o nÃºmeros inteiros de `0` Ã  `100`.\n   *\n   * @default `0`\n   */\n  @Input('p-value') set value(value: number) {\n    const integerValue = convertToInt(value, poProgressMinValue);\n    const isProgressRangeValue = this.isProgressRangeValue(integerValue);\n\n    this._value = isProgressRangeValue ? integerValue : poProgressMinValue;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Evento que serÃ¡ disparado ao clicar no Ã­cone de cancelamento (\"x\") na parte inferior da barra de progresso.\n   *\n   * Ao ser disparado, a funÃ§Ã£o receberÃ¡ como parÃ¢metro o status atual da barra de progresso.\n   *\n   * > Se nenhuma funÃ§Ã£o for passada para o evento ou a barra de progresso estiver com o status `PoProgressStatus.Success`,\n   * o Ã­cone de cancelamento nÃ£o serÃ¡ exibido.\n   */\n  @Output('p-cancel') cancel: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Evento que serÃ¡ disparado ao clicar no Ã­cone de tentar novamente na parte inferior da barra de progresso.\n   *\n   * > o Ã­cone serÃ¡ exibido apenas se informar uma funÃ§Ã£o neste evento e o status da barra de progresso for\n   * `PoProgressStatus.Error`.\n   */\n  @Output('p-retry') retry: EventEmitter<any> = new EventEmitter();\n\n  private isProgressRangeValue(value: number): boolean {\n    return value >= poProgressMinValue && value <= poProgressMaxValue;\n  }\n\n}\n","/**\n * @docsPrivate\n *\n * @description\n *\n * Enum que contÃ©m paleta de 12 cores.\n */\nexport enum PoColorPaletteEnum {\n\n  /** #0c9abe */\n  Color01 = 'color-01' ,\n\n  /** #2c85c8 */\n  Color02 = 'color-02',\n\n  /** #2c43c8 */\n  Color03 = 'color-03',\n\n  /** #5843c8 */\n  Color04 = 'color-04',\n\n  /** #ab43c8 */\n  Color05 = 'color-05',\n\n  /** #ab4391 */\n  Color06 = 'color-06',\n\n  /** #c64840 */\n  Color07 = 'color-07',\n\n  /** #ea9b3e */\n  Color08 = 'color-08',\n\n  /** #abc249 */\n  Color09 = 'color-09',\n\n  /** #56b96b */\n  Color10 = 'color-10',\n\n  /** #00b28e */\n  Color11 = 'color-11',\n\n  /** #06a6a5 */\n  Color12 = 'color-12'\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { PoProgressBaseComponent } from './po-progress-base.component';\nimport { PoProgressStatus } from './enums/po-progress-status.enum';\n\n/**\n * @docsExtends PoProgressBaseComponent\n *\n * @example\n * <example name=\"po-progress-basic\" title=\"Portinari Progress Basic\">\n *   <file name=\"sample-po-progress-basic/sample-po-progress-basic.component.html\"> </file>\n *   <file name=\"sample-po-progress-basic/sample-po-progress-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-progress-labs\" title=\"Portinari Progress Labs\">\n *   <file name=\"sample-po-progress-labs/sample-po-progress-labs.component.html\"> </file>\n *   <file name=\"sample-po-progress-labs/sample-po-progress-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-progress-publication\" title=\"Portinari Progress - Publication\">\n *   <file name=\"sample-po-progress-publication/sample-po-progress-publication.component.html\"> </file>\n *   <file name=\"sample-po-progress-publication/sample-po-progress-publication.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-progress',\n  templateUrl: './po-progress.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoProgressComponent extends PoProgressBaseComponent {\n\n  get isAllowCancel(): boolean {\n    return !!this.cancel.observers.length && this.status !== PoProgressStatus.Success;\n  }\n\n  get isAllowProgressInfo(): boolean {\n    return !!(this.info || this.infoIcon || this.isAllowCancel || this.isAllowRetry);\n  }\n\n  get isAllowRetry(): boolean {\n    return !!this.retry.observers.length && this.status === PoProgressStatus.Error;\n  }\n\n  get statusClass(): string {\n\n    if (this.status === PoProgressStatus.Success) {\n      return 'po-progress-success';\n    }\n\n    if (this.status === PoProgressStatus.Error) {\n      return 'po-progress-error';\n    }\n\n    return 'po-progress-default';\n  }\n\n  emitCancellation() {\n    this.cancel.emit(this.status);\n  }\n\n  emitRetry() {\n    this.retry.emit();\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoProgressBarComponent } from './po-progress-bar/po-progress-bar.component';\nimport { PoProgressComponent } from './po-progress.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente `po-progress`.\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    PoProgressComponent\n  ],\n  declarations: [\n    PoProgressBarComponent,\n    PoProgressComponent\n  ]\n})\nexport class PoProgressModule {}\n","/**\n * @docsPrivate\n *\n * @usedBy PoDialogService\n *\n * @description\n * Enums para as aÃ§Ãµes do componente po-dialog-base.service.\n */\nexport enum PoDialogType {\n  // Enum para alert\n  Alert,\n  // Enum para confirm\n  Confirm\n}\n","import { Injectable } from '@angular/core';\n\nimport { PoColorPaletteEnum } from '../../enums/po-color-palette.enum';\n\n@Injectable()\nexport class PoColorPaletteService {\n\n  getColor(value: { color?: string, type?: string }): string {\n    return (<any>Object).values(PoColorPaletteEnum).includes(value.color) ?\n      value.color : this.getColorFromType(value.type || value.color);\n  }\n\n  private getColorFromType(type: string): PoColorPaletteEnum {\n    switch (type) {\n      case 'danger':\n        return PoColorPaletteEnum.Color07;\n      case 'success':\n        return PoColorPaletteEnum.Color11;\n      case 'warning':\n        return PoColorPaletteEnum.Color08;\n      default:\n        return PoColorPaletteEnum.Color01;\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { PoColorPaletteService } from './po-color-palette.service';\n\n/**\n * @description\n *\n * MÃ³dulo do serviÃ§o `po-color-palette`.\n */\n@NgModule({\n  providers: [\n    PoColorPaletteService\n  ],\n  bootstrap: []\n})\nexport class PoColorPaletteModule { }\n","import { Injectable, ComponentRef, ComponentFactoryResolver, ApplicationRef, Injector } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PoComponentInjectorService {\n\n  constructor(private componentResolver: ComponentFactoryResolver, private applicationRef: ApplicationRef, private injector: Injector) {}\n\n  // Cria um dinamicamente no ApplicationRef\n  createComponentInApplication(component: any): ComponentRef<any> {\n    const componentRef = this.componentResolver.resolveComponentFactory(component).create(this.injector);\n    this.applicationRef.attachView(componentRef.hostView);\n    const domElem = (<any>componentRef.hostView).rootNodes[0];\n    document.body.appendChild(domElem);\n    return componentRef;\n  }\n\n  // DestrÃ³i o componente e remove do ApplicationRef\n  destroyComponentInApplication(componentRef: any) {\n    this.applicationRef.detachView(componentRef.hostView);\n    componentRef.destroy();\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { PoComponentInjectorService } from './po-component-injector.service';\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  exports: [],\n  providers: [\n    PoComponentInjectorService\n  ],\n  bootstrap: []\n})\nexport class PoComponentInjectorModule { }\n","import { NgModule } from '@angular/core';\n\nimport { PoControlPositionService } from './po-control-position.service';\n\n/**\n * @description\n *\n * MÃ³dulo do serviÃ§o po-control-position.\n */\n@NgModule({\n  providers: [\n    PoControlPositionService\n  ]\n})\nexport class PoControlPositionModule { }\n","import { NgModule } from '@angular/core';\n\nimport { PoDateService } from './po-date.service';\n\n/**\n * @description\n *\n * MÃ³dulo do serviÃ§o `po-date`.\n */\n@NgModule({\n  providers: [\n    PoDateService\n  ],\n  bootstrap: []\n})\nexport class PoDateTimeModule { }\n","import { Component, ComponentRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { browserLanguage, poLocaleDefault } from '../../utils/util';\n\nimport { PoDialogAlertLiterals } from './interfaces/po-dialog-alert-literals.interface';\nimport { PoDialogAlertOptions, PoDialogConfirmOptions } from './interfaces/po-dialog.interface';\nimport { PoDialogConfirmLiterals } from './interfaces/po-dialog-confirm-literals.interface';\nimport { PoDialogType } from './po-dialog.enum';\nimport { PoModalAction } from '../../components/po-modal/po-modal-action.interface';\nimport { PoModalComponent } from '../../components/po-modal/po-modal.component';\n\nexport const poDialogAlertLiteralsDefault = {\n  en: <PoDialogAlertLiterals> { ok: 'Ok' },\n  es: <PoDialogAlertLiterals> { ok: 'Ok' },\n  pt: <PoDialogAlertLiterals> { ok: 'Ok' },\n  ru: <PoDialogAlertLiterals> { ok: 'ÐÐº' }\n};\n\nexport const poDialogConfirmLiteralsDefault = {\n  en: <PoDialogConfirmLiterals> { cancel: 'Cancel', confirm: 'Confirm' },\n  es: <PoDialogConfirmLiterals> { cancel: 'Cancelar', confirm: 'Confirmar' },\n  pt: <PoDialogConfirmLiterals> { cancel: 'Cancelar', confirm: 'Confirmar' },\n  ru: <PoDialogConfirmLiterals> { cancel: 'Ð¾ÑÐ¼ÐµÐ½Ð¸ÑÑ', confirm: 'Ð¿Ð¾Ð´ÑÐ²ÐµÑÐ´Ð¸ÑÑ' }\n};\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que serve como container do po-dialog.service\n */\n\n@Component({\n  templateUrl: './po-dialog.component.html'\n})\nexport class PoDialogComponent implements OnDestroy, OnInit {\n  // ViewChild para o uso do po-modal.component\n  @ViewChild(PoModalComponent, { static: true }) poModal: PoModalComponent;\n\n  // Title do poModal\n  title: string;\n\n  // Message do poModal\n  message: string;\n\n  // Objeto primary do poModal\n  primaryAction: PoModalAction = { label: 'ok', action: () => { } };\n\n  // Objeto secondary do poModal\n  secondaryAction: PoModalAction;\n\n  // Literais usadas nos botÃ£o de alerta do poModal\n  literalsAlert: PoDialogAlertLiterals;\n\n  // Literais usadas nos botÃµes de confirmaÃ§Ã£o do poModal\n  literalsConfirm: PoDialogConfirmLiterals;\n\n  // Atributo para armazenar a referencia do componente criado via serviÃ§o.\n  private componentRef: ComponentRef<PoDialogComponent>;\n  private closeSubscription: Subscription;\n\n  ngOnDestroy() {\n    this.closeSubscription.unsubscribe();\n  }\n\n  ngOnInit() {\n    this.closeSubscription = this.poModal.onXClosed.subscribe(close => this.destroy());\n  }\n\n    // Fecha o poModal\n  close(): void {\n    this.poModal.close();\n    this.destroy();\n  }\n\n  destroy() {\n    if (this.componentRef) {\n      this.componentRef.destroy();\n    }\n  }\n\n  // Insere os valores recebidos de this.open para o poModal\n  configDialog(primaryLabel?, primaryAction?, secondaryLabel?, secondaryAction?) {\n\n    this.primaryAction = {\n      label: primaryLabel,\n      action: () => {\n          if (primaryAction) {\n            primaryAction();\n          }\n          this.close();\n      }\n    };\n\n    if (secondaryLabel) {\n      this.secondaryAction = {\n        label: secondaryLabel,\n        action: () => {\n          if (secondaryAction) {\n            secondaryAction();\n          }\n          this.close();\n        }\n      };\n    }\n  }\n\n  // Insere os valores recebidos de po-dialog.service de acordo com o tipo de diÃ¡lago solicitado\n  open(dialogOptions: (PoDialogConfirmOptions | PoDialogAlertOptions),\n       dialogType: PoDialogType,\n       componentRef?: ComponentRef<PoDialogComponent>): void {\n\n    this.title = dialogOptions.title;\n    this.message = dialogOptions.message;\n\n    this.componentRef = componentRef;\n\n    this.setDialogLiterals(dialogOptions, dialogType);\n\n    switch (dialogType) {\n      case PoDialogType.Confirm: {\n        this.configDialog(\n          this.literalsConfirm.confirm, (<PoDialogConfirmOptions>dialogOptions).confirm,\n          this.literalsConfirm.cancel, (<PoDialogConfirmOptions>dialogOptions).cancel);\n        break;\n      }\n      case PoDialogType.Alert: {\n        this.configDialog(this.literalsAlert.ok, (<PoDialogAlertOptions>dialogOptions).ok);\n        break;\n      }\n    }\n\n    this.poModal.open();\n  }\n\n  private setDialogLiterals(dialogOptions: PoDialogConfirmOptions | PoDialogAlertOptions, dialogType: PoDialogType) {\n    const alertLiterals = poDialogAlertLiteralsDefault;\n    const confirmLiterals = poDialogConfirmLiteralsDefault;\n    const literals = dialogOptions.literals;\n\n    if (dialogType === PoDialogType.Alert) {\n      this.literalsAlert = {...alertLiterals[poLocaleDefault], ...alertLiterals[browserLanguage()], ...literals};\n    } else {\n      this.literalsConfirm = {...confirmLiterals[poLocaleDefault], ...confirmLiterals[browserLanguage()], ...literals};\n    }\n  }\n}\n","/**\n * @docsPrivate\n *\n * Enums para a orientaÃ§Ã£o da notificaÃ§Ã£o, do componente po-toaster-base.component.\n */\nexport enum PoToasterOrientation {\n  /** OrientÃ§Ã£o do componente fica no rodapÃ© */\n  Bottom,\n  /** OrientÃ§Ã£o do componente fica no topo */\n  Top\n}\n","import { PoDialogAlertOptions, PoDialogConfirmOptions } from './interfaces/po-dialog.interface';\nimport { PoDialogType } from './po-dialog.enum';\n\n/**\n * @description\n *\n * O po-dialog Ã© um serviÃ§o para exibiÃ§Ã£o de caixas de diÃ¡logo, Ã© possÃ­vel customiza-los passando alguns parÃ¢metros de acordo com a\n * necessidade do desenvolvedor.\n */\n\nexport abstract class PoDialogBaseService {\n\n  /** Exibe um diÃ¡logo de confirmaÃ§Ã£o, Ã© possÃ­vel definir aÃ§Ãµes para as opÃ§Ãµes de confirmaÃ§Ã£o e cancelamento. */\n  confirm(confirmOptions: PoDialogConfirmOptions): void {\n    this.openDialog(PoDialogType.Confirm, confirmOptions);\n  }\n\n  /** Exibe um diÃ¡logo de alerta. */\n  alert(alertOptions: PoDialogAlertOptions): void {\n    this.openDialog(PoDialogType.Alert, alertOptions);\n  }\n\n  // Usado para chamar um diÃ¡logo\n  abstract openDialog(dialogType: PoDialogType, dialogOptions: (PoDialogAlertOptions | PoDialogConfirmOptions)): void;\n}\n","import { Injectable, ComponentRef } from '@angular/core';\n\nimport { PoComponentInjectorService } from './../po-component-injector/po-component-injector.service';\nimport { PoDialogAlertOptions, PoDialogConfirmOptions } from './interfaces/po-dialog.interface';\nimport { PoDialogBaseService } from './po-dialog-base.service';\nimport { PoDialogComponent } from './po-dialog.component';\nimport { PoDialogType } from './po-dialog.enum';\n\n/**\n * @docsExtends PoDialogBaseService\n *\n * @example\n *\n * <example name=\"po-dialog-basic\" title=\"Portinari Dialog Basic\">\n *  <file name=\"sample-po-dialog-basic/sample-po-dialog-basic.component.html\"> </file>\n *  <file name=\"sample-po-dialog-basic/sample-po-dialog-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-dialog-labs\" title=\"Portinari Dialog Labs\">\n *  <file name=\"sample-po-dialog-labs/sample-po-dialog-labs.component.html\"> </file>\n *  <file name=\"sample-po-dialog-labs/sample-po-dialog-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-dialog-cancel-credit-card\" title=\"Portinari Dialog - Cancel Credit Card\">\n *  <file name=\"sample-po-dialog-cancel-credit-card/sample-po-dialog-cancel-credit-card.component.html\"> </file>\n *  <file name=\"sample-po-dialog-cancel-credit-card/sample-po-dialog-cancel-credit-card.component.ts\"> </file>\n * </example>\n */\n@Injectable()\nexport class PoDialogService extends PoDialogBaseService {\n\n  constructor(private poComponentInjector: PoComponentInjectorService) {\n    super();\n  }\n\n  openDialog(dialogType: PoDialogType, dialogOptions: PoDialogAlertOptions | PoDialogConfirmOptions): void {\n    const componentRef: ComponentRef<any> = this.poComponentInjector.createComponentInApplication(PoDialogComponent);\n    componentRef.changeDetectorRef.detectChanges();\n    componentRef.instance.open(dialogOptions, dialogType, componentRef);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { PoModalModule } from '../../components/po-modal/po-modal.module';\nimport { PoDialogComponent } from './po-dialog.component';\nimport { PoDialogService } from './po-dialog.service';\n\n@NgModule({\n  declarations: [\n    PoDialogComponent\n  ],\n  imports: [\n    PoModalModule\n  ],\n  exports: [\n    PoDialogComponent\n  ],\n  entryComponents: [\n    PoDialogComponent\n  ],\n  providers: [\n    PoDialogService\n  ]\n})\nexport class PoDialogModule { }\n","import { PipeTransform } from '@angular/core';\n\n/**\n * @description\n *\n * O pipe po-i18n Ã© responsÃ¡vel por tratar literais parÃ¢metrizadas, dando mais flexibilidade as literais de traduÃ§Ã£o.\n * O nÃºmero de parÃ¢metros inseridos nas literais deve coincidir com a quantia de parÃ¢metros passados por parÃ¢metro,\n * os parÃ¢metros serÃ£o substituidos de acordo com a ordem informada.\n *\n * Para inserir um parÃ¢metro em uma literal, o mesmo deverÃ¡ ser inserido entre chaves dentro da literal e posicionado\n * de acordo como deve ser exibido apÃ³s a sua transformaÃ§Ã£o.\n *\n * ```\n * const i18nPT = {\n *   pagination: 'PÃ¡gina {1} de {2} pÃ¡ginas.',\n *   totalPages: 'Total de {totalPages} encontradas.'\n * };\n * ```\n *\n * Ã possÃ­vel passar um valor ou um array de valores para o pipe, caso seja passado um array, os valores devem obedecer a ordem\n * informada na literal.\n *\n * ```\n * {{ i18nPT.pagination | poI18n:[1,10] }}\n * {{ i18nPT.totalPages | poI18n:10 }}\n * ```\n */\nexport class PoI18nBasePipe implements PipeTransform {\n\n  transform(value: string, args: any): string {\n    if (!value) {\n      return '';\n    }\n\n    if (!(args instanceof Array)) {\n      args = [args];\n    }\n\n    for (const arg of args) {\n      value = value.replace(/(\\{\\w*\\})+/,  arg);\n    }\n\n    return value;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { PoI18nBasePipe } from './po-i18n-base.pipe';\n\n/**\n * @docsExtends PoI18nBasePipe\n *\n * @example\n * <example name='po-i18n-pipe-labs' title='Portinari i18n Pipe Labs' >\n *  <file name='sample-po-i18n-pipe-labs.component.html'> </file>\n *  <file name='sample-po-i18n-pipe-labs.component.ts'> </file>\n *  <file name='sample-po-i18n-pipe.component.html'> </file>\n *  <file name='sample-po-i18n-pipe.component.ts'> </file>\n * </example>\n */\n@Pipe({\n  name: 'poI18n'\n})\nexport class PoI18nPipe extends PoI18nBasePipe implements PipeTransform { }\n","import { PoToasterOrientation } from './po-toaster-orientation.enum';\nimport { PoToasterType } from './po-toaster-type.enum';\nimport { PoToaster } from './po-toaster.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * O componente po-toaster foi construÃ­do para exibir notificaÃ§Ãµes para o usuÃ¡rio.\n */\nexport abstract class PoToasterBaseComponent {\n\n  /** Disponibiliza uma aÃ§Ã£o para a notificaÃ§Ã£o. */\n  action: Function;\n\n  /** Permite alterar o label do botÃ£o quando houver uma aÃ§Ã£o definida. */\n  actionLabel: string;\n\n  /** Mensagem a ser exibida na notificaÃ§Ã£o. */\n  message: string;\n\n  /** OrientaÃ§Ã£o da notificaÃ§Ã£o, a mesma pode ser exibida na parte superior ou inferior da pÃ¡gina. */\n  orientation: PoToasterOrientation = PoToasterOrientation.Bottom;\n\n  /** ComponentRef */\n  componentRef: any;\n\n  /** PosiÃ§Ã£o para notificaÃ§Ã£o aparecer na tela. */\n  position: number;\n\n  /** Tipo de notificaÃ§Ã£o. */\n  type: PoToasterType;\n\n  /** Fecha a notificaÃ§Ã£o. */\n  abstract close(): void;\n\n  /**\n   * Altera a posiÃ§Ã£o da notificaÃ§Ã£o.\n   * @param number value\n   */\n  abstract changePosition(value: number): void;\n\n  /**\n   * Configura o componente po-toaster de acordo com as definiÃ§Ãµes do usuÃ¡rio.\n   * @param PoToaster poToaster\n   * @param ComponentRef comp\n   */\n  abstract configToaster(poToaster: PoToaster): void;\n\n}\n","/**\n * @docsPrivate\n *\n * Enums para os tipos de notificaÃ§Ã£o, do componente po-toaster-base.component.\n */\nexport enum PoToasterType {\n  /** Enum para informaÃ§Ãµes do tipo \"Erro\" */\n  Error,\n  /** Enum para informaÃ§Ãµes do tipo \"InformaÃ§Ã£o\" */\n  Information,\n  /** Enum para informaÃ§Ãµes do tipo \"Sucesso\" */\n  Success,\n  /** Enum para informaÃ§Ãµes do tipo \"AtenÃ§Ã£o\" */\n  Warning\n}\n","import { ChangeDetectorRef, Component, ElementRef, ViewChild } from '@angular/core';\n\nimport { Subject } from 'rxjs';\n\nimport { PoToasterBaseComponent } from './po-toaster-base.component';\nimport { PoToaster } from './po-toaster.interface';\nimport { PoToasterType } from './po-toaster-type.enum';\nimport { PoToasterOrientation } from './po-toaster-orientation.enum';\n\n/**\n * @docsPrivate\n *\n * @docsExtends PoToasterBaseComponent\n */\n@Component({\n  selector: 'po-toaster',\n  templateUrl: './po-toaster.component.html'\n})\nexport class PoToasterComponent extends PoToasterBaseComponent {\n\n  /* Ãcone do Toaster */\n  private icon: string;\n  /* Margem do Toaster referÃªnte Ã  sua orientaÃ§Ã£o e posiÃ§Ã£o*/\n  private margin: number = 20;\n  /* Observable para monitorar o Close to Toaster */\n  private observableOnClose = new Subject<any>();\n  /* Mostra ou oculta o Toaster */\n  private showToaster: boolean = true;\n  /* PosiÃ§Ã£o do Toaster*/\n  private toasterPosition: string = 'po-toaster-bottom';\n  /* Tipo do Toaster */\n  private toasterType: string;\n\n  /* Componente toaster */\n  @ViewChild('toaster', { static: false }) toaster: ElementRef;\n\n  constructor(public changeDetector: ChangeDetectorRef, private elementeRef?: ElementRef) {\n    super();\n  }\n\n  /* Muda a posiÃ§Ã£o do Toaster na tela*/\n  changePosition(position: number): void {\n    this.elementeRef.nativeElement.style.display = 'table';\n\n    this.margin = 6 + (44 * (position)) + position * 6;\n\n    if (this.orientation === PoToasterOrientation.Top) {\n      this.toaster.nativeElement.style.top = this.margin + 'px';\n    } else {\n      this.toaster.nativeElement.style.bottom = this.margin + 'px';\n    }\n\n  }\n\n  /* Fecha o componente Toaster */\n  close(): void {\n    this.showToaster = false;\n    this.observableOnClose.next(true);\n  }\n\n  /* Configura o Toaster com os atributos passados para ele */\n  configToaster(poToaster: PoToaster) {\n    this.type = poToaster.type;\n    this.message = poToaster.message;\n    this.orientation = poToaster.orientation;\n    this.position = poToaster.position;\n    this.action = poToaster.action;\n    this.actionLabel = (poToaster.actionLabel) ? poToaster.actionLabel : 'Fechar';\n    this.componentRef = poToaster.componentRef;\n\n    /* Muda a orientaÃ§Ã£o do Toaster */\n    if (this.orientation === PoToasterOrientation.Top) {\n      this.toasterPosition = 'po-toaster-top';\n    }\n\n    /* Muda a posiÃ§Ã£o do Toaster */\n    this.changePosition(this.position);\n\n    /* Switch para o tipo de Toaster */\n    switch (this.type) {\n      case PoToasterType.Error: {\n        this.toasterType = 'po-toaster-error';\n        this.icon = 'po-icon-close';\n        break;\n      }\n      case PoToasterType.Information: {\n        this.toasterType = 'po-toaster-info';\n        this.icon = 'po-icon-info';\n        break;\n      }\n      case PoToasterType.Success: {\n        this.toasterType = 'po-toaster-success';\n        this.icon = 'po-icon-ok';\n        break;\n      }\n      case PoToasterType.Warning: {\n        this.toasterType = 'po-toaster-warning';\n        this.icon = 'po-icon-warning';\n        break;\n      }\n    }\n\n    this.changeDetector.detectChanges();\n  }\n\n  getShowToaster() {\n    return this.showToaster;\n  }\n\n  getIcon() {\n    return this.icon;\n  }\n\n  getToasterPosition() {\n    return this.toasterPosition;\n  }\n\n  getToasterType() {\n    return this.toasterType;\n  }\n\n  /* Chama a funÃ§Ã£o passada pelo atributo `action` */\n  poToasterAction(): void {\n    this.action(this);\n  }\n\n}\n","/**\n * @usedBy PoTableComponent\n *\n * @description\n * Tipos de ordenaÃ§Ã£o das colunas da tabela.\n */\nexport enum PoTableColumnSortType {\n\n  /** OrdenaÃ§Ã£o ascendente */\n  Ascending = 'ascending',\n\n  /** OrdenaÃ§Ã£o descendente */\n  Descending = 'descending'\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PoToasterComponent } from './po-toaster/po-toaster.component';\n\n@NgModule({\n  declarations: [\n    PoToasterComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n  ],\n  entryComponents: [\n    PoToasterComponent\n  ],\n  providers: [],\n  bootstrap: []\n})\nexport class PoNotificationModule { }\n","import { NgModule } from '@angular/core';\n\nimport { PoColorPaletteModule } from './po-color-palette/po-color-palette.module';\nimport { PoComponentInjectorModule } from './po-component-injector/po-component-injector.module';\nimport { PoControlPositionModule } from './po-control-position/po-control-position.module';\nimport { PoDateTimeModule } from './po-date/po-date.module';\nimport { PoDialogModule } from './po-dialog/po-dialog.module';\nimport { PoI18nPipe } from './po-i18n/po-i18n.pipe';\nimport { PoLanguageModule } from './po-language/po-language.module';\nimport { PoNotificationModule } from './po-notification/po-notification.module' ;\n\n@NgModule({\n  declarations: [\n    PoI18nPipe\n  ],\n  imports: [\n    PoColorPaletteModule,\n    PoComponentInjectorModule,\n    PoControlPositionModule,\n    PoDateTimeModule,\n    PoDialogModule,\n    PoLanguageModule,\n    PoNotificationModule\n  ],\n  exports: [\n    PoColorPaletteModule,\n    PoComponentInjectorModule,\n    PoControlPositionModule,\n    PoDateTimeModule,\n    PoDialogModule,\n    PoI18nPipe,\n    PoNotificationModule\n  ],\n  providers: [],\n  bootstrap: []\n})\nexport class PoServicesModule { }\n","import { ElementRef, Input } from '@angular/core';\n\nimport { convertToBoolean } from '../../utils/util';\nimport { PO_CONTROL_POSITIONS } from './../../services/po-control-position/po-control-position.constants';\n\nconst PO_POPOVER_DEFAULT_POSITION = 'right';\nconst PO_POPOVER_DEFAULT_TRIGGER = 'click';\nconst PO_POPOVER_TRIGGERS = ['click', 'hover'];\n\n/**\n * @description\n *\n * O componente `po-popover` Ã© um container pequeno recomendado para incluir vÃ¡rios tipos de conteÃºdo como:\n * grÃ¡ficos, textos, imagens e inputs. Ele abre sobreposto aos outros componentes.\n *\n * Para mostrar apenas pequenos textos recomenda-se o uso da diretiva\n * [**po-tooltip**](https://portinari.io/documentation/po-tooltip?view=doc).\n *\n * Para conteÃºdos maiores recomenda-se o uso do [**po-modal**](https://portinari.io/documentation/po-modal?view=doc).\n *\n * Ele contÃ©m um tÃ­tulo e tambÃ©m Ã© possÃ­vel escolher as posiÃ§Ãµes do popover em relaÃ§Ã£o ao componente pai,\n * as posiÃ§Ãµes permitidas sÃ£o: `right`, `right-top`, `right-bottom`, `top`, `top-left`, `top-right`,\n * `left`, `left-top`, `left-bottom`, `bottom`, `bottom-left` e `bottom-right`.\n *\n * TambÃ©m Ã© possÃ­vel escolher entre os dois eventos que podem abrir o *popover*.\n * Os eventos permitidos sÃ£o: `click` e `hover`.\n *\n */\nexport class PoPopoverBaseComponent {\n\n  // Controla se o popover fica oculto ou visÃ­vel, por padrÃ£o Ã© oculto.\n  isHidden: boolean = true;\n\n  private _hideArrow: boolean = false;\n  private _position?: string = PO_POPOVER_DEFAULT_POSITION;\n  private _trigger?: string = PO_POPOVER_DEFAULT_TRIGGER;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita a seta do componente *popover*.\n   *\n   * @default `false`\n   */\n  @Input('p-hide-arrow') set hideArrow(value: boolean) {\n    this._hideArrow = convertToBoolean(value);\n  }\n\n  get hideArrow(): boolean {\n    return this._hideArrow;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a posiÃ§Ã£o que o po-popover abrirÃ¡ em relaÃ§Ã£o ao componente alvo. Sugere-se que seja\n   * usada a orientaÃ§Ã£o \"right\" (direita), porÃ©m o mesmo Ã© flexÃ­vel e serÃ¡ rotacionado\n   * automaticamente para se adequar a tela, caso necessÃ¡rio.\n   *\n   * PosiÃ§Ãµes vÃ¡lidas:\n   * - `right`: Posiciona o po-popover no lado direito do componente alvo.\n   * - `right-bottom`: Posiciona o po-popover no lado direito inferior do componente alvo.\n   * - `right-top`: Posiciona o po-popover no lado direito superior do componente alvo.\n   * - `bottom`: Posiciona o po-popover abaixo do componente alvo.\n   * - `bottom-left`: Posiciona o po-popover abaixo e Ã  esquerda do componente alvo.\n   * - `bottom-right`: Posiciona o po-popover abaixo e Ã  direita do componente alvo.\n   * - `left`: Posiciona o po-popover no lado esquerdo do componente alvo.\n   * - `left-top`: Posiciona o po-popover no lado esquerdo superior do componente alvo.\n   * - `left-bottom`: Posiciona o po-popover no lado esquerdo inferior do componente alvo.\n   * - `top`: Posiciona o po-popover acima do componente alvo.\n   * - `top-right`: Posiciona o po-popover acima e Ã  direita do componente alvo.\n   * - `top-left`: Posiciona o po-popover acima e Ã  esquerda do componente alvo.\n   *\n   *\n   * @default right\n   */\n  @Input('p-position') set position(value: string) {\n    this._position = PO_CONTROL_POSITIONS.includes(value) ? value : PO_POPOVER_DEFAULT_POSITION;\n  }\n\n  get position(): string {\n    return this._position;\n  }\n\n  /**\n   * @description\n   *\n   * ElementRef do componente de origem responsÃ¡vel por abrir o popover.\n   * Para utilizar o po-popover deve-se colocar uma variÃ¡vel no componente que vai disparar o evento\n   * de abertura, exemplo:\n   *\n   * ```\n   * <po-button\n   *   p-label=\"Open Popover\">\n   * </po-button>\n   *\n   * <po-popover\n   *   [p-origin]=\"poButton\"\n   *   [p-title]=\"Portinari Popover\">\n   * </po-popover>\n   * ```\n   *\n   * TambÃ©m deve-se criar um ViewChild para cada popover, passando como referÃªncia o elemento do\n   * HTML que irÃ¡ disparar o evento. Exemplo:\n   *\n   * ```\n   * @ViewChild(PoButtonComponent, {read: ElementRef}) poButton: PoButtonComponent;\n   * ```\n   */\n  @Input('p-target') target: ElementRef;\n\n  /** TÃ­tulo do popover. */\n  @Input('p-title') title?: string;\n\n  /**\n   * @description\n   *\n   * Define o evento que abrirÃ¡ o po-popover.\n   *\n   * Valores vÃ¡lidos:\n   *  - `click`: Abre ao clicar no componente alvo.\n   *  - `hover`: Abre ao passar o mouse sobre o componente alvo.\n   *\n   * @default click\n   * @optional\n   */\n  @Input('p-trigger') set trigger(value: string) {\n    this._trigger = PO_POPOVER_TRIGGERS.includes(value) ? value : PO_POPOVER_DEFAULT_TRIGGER;\n  }\n\n  get trigger(): string {\n    return this._trigger;\n  }\n\n  protected clickoutListener: () => void;\n  protected mouseEnterListener: () => void;\n  protected mouseLeaveListener: () => void;\n  protected resizeListener: () => void;\n\n}\n","import { AfterViewInit, Component, ElementRef, OnDestroy, Renderer2, ViewChild } from '@angular/core';\n\nimport { PoControlPositionService } from './../../services/po-control-position/po-control-position.service';\nimport { PoPopoverBaseComponent } from './po-popover-base.component';\n\n/**\n *\n * @docsExtends PoPopoverBaseComponent\n *\n * @example\n *\n * <example name=\"po-popover-basic\" title=\"Portinari Popover Basic\">\n *   <file name=\"sample-po-popover-basic/sample-po-popover-basic.component.html\"> </file>\n *   <file name=\"sample-po-popover-basic/sample-po-popover-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-popover-labs\" title=\"Portinari Popover Labs\">\n *   <file name=\"sample-po-popover-labs/sample-po-popover-labs.component.html\"> </file>\n *   <file name=\"sample-po-popover-labs/sample-po-popover-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-popover-credit-card\" title=\"Portinari Popover - Credit Card\">\n *   <file name=\"sample-po-popover-credit-card/sample-po-popover-credit-card.component.html\"> </file>\n *   <file name=\"sample-po-popover-credit-card/sample-po-popover-credit-card.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-popover',\n  templateUrl: './po-popover.component.html',\n  providers: [ PoControlPositionService ]\n})\nexport class PoPopoverComponent extends PoPopoverBaseComponent implements AfterViewInit, OnDestroy {\n\n  arrowDirection = 'left';\n  timeoutResize;\n\n  eventListenerFunction: () => void;\n\n  @ViewChild('popoverElement', {read: ElementRef, static: true }) popoverElement: ElementRef;\n\n  constructor(private renderer: Renderer2, private poControlPosition: PoControlPositionService) {\n    super();\n  }\n\n  ngAfterViewInit(): void {\n    this.initEventListenerFunction();\n\n    this.setElementsControlPosition();\n\n    this.setRendererListenInit();\n  }\n\n  ngOnDestroy() {\n    this.removeListeners();\n  }\n\n  close(): void {\n    this.isHidden = true;\n  }\n\n  debounceResize() {\n    clearTimeout(this.timeoutResize);\n    this.timeoutResize = setTimeout(() => {\n      this.setPopoverPosition();\n    }, 200);\n  }\n\n  open(): void {\n    this.addScrollEventListener();\n\n    this.isHidden = false;\n    this.setOpacity(0);\n\n    setTimeout(() => {\n      this.setElementsControlPosition();\n      this.setPopoverPosition();\n      this.setOpacity(1);\n    });\n  }\n\n  setOpacity(value: number): void {\n    this.popoverElement.nativeElement.style.opacity = value;\n  }\n\n  setPopoverPosition() {\n    this.poControlPosition.adjustPosition(this.position);\n    this.arrowDirection = this.poControlPosition.getArrowDirection();\n  }\n\n  setRendererListenInit() {\n\n    this.resizeListener = this.renderer.listen('window', 'resize', (event: Event) => {\n      if (!this.isHidden) {\n        this.debounceResize();\n      }\n    });\n\n    if (this.trigger === 'hover') {\n      this.mouseEnterListener = this.renderer.listen(this.target.nativeElement, 'mouseenter', (event: MouseEvent) => {\n        this.open();\n      });\n\n      this.mouseLeaveListener = this.renderer.listen(this.target.nativeElement, 'mouseleave', (event: MouseEvent) => {\n        this.close();\n      });\n    } else {\n      this.clickoutListener = this.renderer.listen('document', 'click', (event: MouseEvent) => {\n        this.togglePopup(event);\n      });\n    }\n  }\n\n  togglePopup(event): void {\n    if (!this.isHidden && !this.popoverElement.nativeElement.contains(event.target) &&\n    !this.target.nativeElement.contains(event.target)) {\n\n      this.close();\n    } else if (this.target.nativeElement.contains(event.target)) {\n\n      this.popoverElement.nativeElement.hidden ? this.open() : this.close();\n    }\n  }\n\n  private addScrollEventListener() {\n    window.addEventListener('scroll', this.eventListenerFunction, true);\n  }\n\n  private initEventListenerFunction() {\n    this.eventListenerFunction = () => {\n        this.setPopoverPosition();\n    };\n  }\n\n  private removeListeners() {\n\n    if (this.clickoutListener) {\n      this.clickoutListener();\n    }\n    if (this.mouseEnterListener) {\n      this.mouseEnterListener();\n    }\n    if (this.mouseLeaveListener) {\n      this.mouseLeaveListener();\n    }\n\n    this.resizeListener();\n\n    window.removeEventListener('scroll', this.eventListenerFunction, true);\n  }\n\n  private setElementsControlPosition() {\n    const popoverOffset = 8;\n    this.poControlPosition.setElements(this.popoverElement.nativeElement, popoverOffset, this.target);\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoPopoverComponent } from './po-popover.component';\n\n/**\n * @description\n * MÃ³dulo do componente po-popover.\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [PoPopoverComponent],\n  exports: [PoPopoverComponent]\n})\nexport class PoPopoverModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { isTypeof } from '../../utils/util';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Pipe responsÃ¡vel por apresentar um horÃ¡rio baseado no formato de entrada definido na API da Portinari.\n */\n@Pipe({\n  name: 'po_time'\n})\nexport class PoTimePipe implements PipeTransform {\n\n  transform(time: string, format?: string): string {\n\n    const hourRegex = /^(([0-1][0-9])|(2[0-3])):[0-5][0-9]:[0-5][0-9][\\.]?([0-9]{1,6})?$/g;\n\n    if (isTypeof(time, 'string') && hourRegex.test(time)) {\n\n      const amountOfF = format ? format.lastIndexOf('f') - format.indexOf('f') + 1 : 0;\n\n      const miliseconds = this.addDotMiliseconds(time.substring(9, 9 + amountOfF), amountOfF);\n      const formatMiliseconds: string = this.getFormatMiliseconds(amountOfF);\n\n      return this.formatValue(time, format, formatMiliseconds, miliseconds);\n    }\n    return null;\n  }\n\n  private addDotMiliseconds(miliseconds: string, amountOfF: number): string {\n    if (miliseconds && amountOfF) {\n      miliseconds = '.' + miliseconds;\n    }\n    return miliseconds;\n  }\n\n  private formatValue(time: string, format: string, formatMiliseconds: string, miliseconds: string): string {\n    if (time && format) {\n      const hour = time.substring(0, 2);\n      const minutes = time.substring(3, 5);\n      const seconds = time.substring(6, 8);\n\n      format = format.replace('HH', hour);\n      format = format.replace('mm', minutes);\n      format = format.replace('ss', seconds);\n      format = format.replace(`.${formatMiliseconds}`, miliseconds);\n\n      return format;\n    } else {\n      return time;\n    }\n  }\n\n  private getFormatMiliseconds(amountOfF: number): string {\n    let formatMiliseconds: string = '';\n\n    for (let i = 0; i < amountOfF; i++) {\n      formatMiliseconds += 'f';\n    }\n\n    return formatMiliseconds;\n  }\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { PoTimePipe } from './po-time.pipe';\n\n/**\n * @description\n *\n * MÃ³dulo do pipe `po-time`.\n */\n@NgModule({\n  declarations: [\n    PoTimePipe\n  ],\n  imports: [],\n  exports: [\n    PoTimePipe\n  ],\n  providers: [],\n  bootstrap: []\n})\nexport class PoTimeModule { }\n","import { Component, ChangeDetectionStrategy, Input } from '@angular/core';\n\nimport { PoTableColumn } from '../interfaces/po-table-column.interface';\nimport { PoTableColumnIcon } from './po-table-column-icon.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente responsÃ¡vel por exibir Ã­cones nas colunas.\n */\n@Component({\n  selector: 'po-table-column-icon',\n  templateUrl: './po-table-column-icon.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class PoTableColumnIconComponent {\n\n  private _icons: Array<PoTableColumnIcon> = [];\n\n  /** DefiniÃ§Ã£o da coluna que utiliza os icones. */\n  @Input('p-column') column: PoTableColumn;\n\n  /** Lista de colunas com Ã­cones. */\n  @Input('p-icons') set icons(icons: Array<PoTableColumnIcon> | Array<string> | string) {\n    this._icons = this.convertToColumnIcon(icons);\n  }\n\n  get icons() {\n    return this._icons;\n  }\n\n  /** Dados da linha da tabela. */\n  @Input('p-row') row: any;\n\n  click(columnIcon: PoTableColumnIcon): void {\n    const isAbleAction = !this.isDisabled(columnIcon);\n\n    if (columnIcon.action && isAbleAction) {\n      columnIcon.action(this.row, columnIcon);\n    } else if (this.column.action && isAbleAction) {\n      this.column.action(this.row, columnIcon);\n    }\n\n  }\n\n  getColor(column: PoTableColumnIcon): string {\n    const color = typeof column.color === 'function' ? column.color(this.row, column) : column.color;\n\n    if (color) {\n      return `po-text-${color}`;\n    }\n  }\n\n  getIcon(column: PoTableColumnIcon) {\n    return column.icon || column.value;\n  }\n\n  isClickable(columnIcon: PoTableColumnIcon): boolean {\n    return !!(!this.isDisabled(columnIcon) && (columnIcon.action || this.column.action));\n  }\n\n  isDisabled(column: PoTableColumnIcon): boolean {\n    return column.disabled ? column.disabled(this.row) : false;\n  }\n\n  trackByFunction(index) {\n    return index;\n  }\n\n  private convertToColumnIcon(rowIcons: Array<PoTableColumnIcon> | Array<string> | string): Array<PoTableColumnIcon> {\n\n    if (Array.isArray(rowIcons)) {\n      return (<any> rowIcons).map(rowIcon => typeof rowIcon === 'string' ? { value: rowIcon } : rowIcon);\n    }\n\n    if (typeof rowIcons === 'string') {\n      return [{ value: rowIcons }];\n    }\n\n    return [];\n  }\n\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\nimport { PoColorPaletteService } from './../../../services/po-color-palette/po-color-palette.service';\nimport { PoTableColumnLabel } from './po-table-column-label.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente para a criaÃ§Ã£o da representaÃ§Ã£o da legenda, em formato de texto .\n */\n\n@Component({\n  selector: 'po-table-column-label',\n  templateUrl: './po-table-column-label.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoTableColumnLabelComponent {\n\n  private _value: PoTableColumnLabel;\n\n  /** Objeto com os dados do label */\n  @Input('p-value') set value(value: PoTableColumnLabel) {\n    if (value) {\n      value.color = this.poColorPaletteService.getColor(value);\n    }\n\n    this._value = value;\n  }\n  get value(): PoTableColumnLabel {\n    return this._value;\n  }\n\n  constructor(private poColorPaletteService: PoColorPaletteService) { }\n\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\nimport { isExternalLink } from '../../../utils/util';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente responsÃ¡vel por exibir link nas colunas.\n */\n@Component({\n  selector: 'po-table-column-link',\n  templateUrl: './po-table-column-link.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class PoTableColumnLinkComponent {\n\n  @Input('p-action') action: Function;\n\n  @Input('p-disabled') disabled: boolean;\n\n  @Input('p-link') link: string;\n\n  @Input('p-row') row;\n\n  @Input('p-value') value: string;\n\n  get type() {\n\n    if (this.disabled) {\n      return 'disabled';\n    }\n\n    if (this.action) {\n       return 'action';\n    }\n\n    if (isExternalLink(this.link)) {\n      return 'externalLink';\n    }\n\n    return 'internalLink';\n\n  }\n\n}\n","import { Component, ElementRef, EventEmitter, Input, OnChanges, OnDestroy, OnInit,\n  Output, SimpleChange, SimpleChanges, Renderer2, ViewChild } from '@angular/core';\n\nimport { browserLanguage, capitalizeFirstLetter, convertToInt, poLocaleDefault } from '../../../utils/util';\nimport { PoCheckboxGroupOption } from '../../po-field/po-checkbox-group/interfaces/po-checkbox-group-option.interface';\nimport { PoPopoverComponent } from '../../po-popover/po-popover.component';\n\nimport { PoTableColumn } from '../interfaces/po-table-column.interface';\n\nconst PoTableColumnManagerMaxColumnsDefault = 99999;\n\nexport const poTableColumnManagerLiteralsDefault = {\n  en: {\n    columnsManager: 'Columns manager',\n    restoreDefault: 'Restore default'\n  },\n  es: {\n    columnsManager: 'Gerente de columna',\n    restoreDefault: 'Restaurar por defecto'\n  },\n  pt: {\n    columnsManager: 'Gerenciador de colunas',\n    restoreDefault: 'Restaurar padrÃ£o'\n  },\n  ru: {\n    columnsManager: 'Ð¼ÐµÐ½ÐµÐ´Ð¶ÐµÑ ÐºÐ¾Ð»Ð¾Ð½Ð¾Ðº',\n    restoreDefault: 'ÑÐ±ÑÐ¾Ñ Ð½Ð°ÑÑÑÐ¾ÐµÐº'\n  }\n};\n\n@Component({\n  selector: 'po-table-column-manager',\n  templateUrl: './po-table-column-manager.component.html'\n})\nexport class PoTableColumnManagerComponent implements OnInit, OnChanges, OnDestroy {\n\n  private _maxColumns: number = PoTableColumnManagerMaxColumnsDefault;\n\n  columnsOptions: Array<PoCheckboxGroupOption> = [];\n  literals = {\n    ...poTableColumnManagerLiteralsDefault[poLocaleDefault],\n    ...poTableColumnManagerLiteralsDefault[browserLanguage()]\n  };\n  visibleColumns: Array<string> = [];\n\n  private defaultColumns: Array<PoTableColumn> = [];\n  private resizeListener: () => void;\n\n  @Input('p-columns') columns: Array<PoTableColumn> = [];\n\n  @Input('p-max-columns') set maxColumns(value: number) {\n    this._maxColumns = convertToInt(value, PoTableColumnManagerMaxColumnsDefault);\n  }\n\n  get maxColumns() {\n    return this._maxColumns;\n  }\n\n  @Input('p-target') target: ElementRef;\n\n  @Output('p-visible-columns-change') visibleColumnsChange = new EventEmitter<Array<PoTableColumn>>();\n\n  @ViewChild(PoPopoverComponent, { static: false }) popover: PoPopoverComponent;\n\n  constructor(private renderer: Renderer2) {}\n\n  ngOnInit() {\n    this.updateColumnsOptions(this.columns);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const { columns, maxColumns, target } = changes;\n\n    if (target && target.firstChange) {\n      this.initializeListeners();\n    }\n\n    if (columns) {\n      this.onChangeColumns(columns);\n    }\n\n    if (maxColumns) {\n      this.updateColumnsOptions(this.columns);\n    }\n  }\n\n  ngOnDestroy() {\n    this.removeListeners();\n  }\n\n  onChangeVisibleColumns(checkedColumns: Array<string>) {\n    this.disableColumnsOptions(this.columnsOptions);\n\n    const visibleTableColumns = this.getVisibleTableColumns(checkedColumns);\n\n    this.visibleColumnsChange.emit(visibleTableColumns);\n  }\n\n  restore() {\n    this.updateColumnsOptions(this.defaultColumns);\n  }\n\n  // desabilitarÃ¡ as colunas, que nÃ£o estiverem selecionadas, apÃ³s exeder o numero maximo de colunas.\n  private disableColumnsOptions(columns: Array<PoCheckboxGroupOption> = []) {\n    // necessario timeout para que seja possivel atualizar os columnsOptions apos a mudanÃ§a do model\n    setTimeout(() => {\n      this.columnsOptions = columns.map(column => ({\n        ...column,\n        disabled: this.isDisableColumn(column.value)\n      }));\n    });\n  }\n\n  private getColumnTitleLabel(column: PoTableColumn) {\n    return column.label || capitalizeFirstLetter(column.property);\n  }\n\n  /** Retorna um Array de column.property das colunas que sÃ£o visiveis. */\n  private getVisibleColumns(columns: Array<PoTableColumn>): Array<string> {\n    const visibleColumns = [];\n\n    columns.forEach(column => {\n      if (column.visible !== false && visibleColumns.length < this.maxColumns && column.type !== 'detail') {\n\n        visibleColumns.push(column.property);\n      }\n    });\n\n    return visibleColumns;\n  }\n\n  /** Retorna um Array PoTableColumn a partir das colunas visiveis no gerenciador de colunas. */\n  private getVisibleTableColumns(visibleColumns: Array<string>): Array<PoTableColumn> {\n    return this.columns.map(column => ({\n      ...column,\n      visible: visibleColumns.includes(column.property) || column.type === 'detail'\n    }));\n  }\n\n  private initializeListeners() {\n    this.resizeListener = this.renderer.listen('window', 'resize', () => {\n      if (this.popover) {\n        this.popover.close();\n      }\n    });\n\n  }\n\n  private isDisableColumn(property: string): boolean {\n    return this.visibleColumns.length >= this.maxColumns ? !this.visibleColumns.includes(property) : false;\n  }\n\n  private mapTableColumnsToCheckboxOptions(columns: Array<PoTableColumn> = []) {\n    const columnsOptions = [];\n\n    columns.forEach(column => {\n      if (column.type !== 'detail') {\n        columnsOptions.push({\n          value: column.property,\n          label: this.getColumnTitleLabel(column),\n          disabled: this.isDisableColumn(column.property)\n        });\n      }\n\n    });\n\n    return columnsOptions;\n  }\n\n  private onChangeColumns(columns: SimpleChange) {\n    const { firstChange, currentValue = [], previousValue = [] } = columns;\n\n    // atualizara o defaultColumns, quando for a primeira vez ou quando o defaultColumns for diferente do currentValue\n    if (firstChange || (this.defaultColumns.length !== currentValue.length)) {\n      this.defaultColumns = currentValue;\n    }\n\n    // verifica se o valor anterior Ã© diferente do atual para atualizar as columnsOptions apenas quando for necessario\n    if (previousValue.length !== currentValue.length) {\n      this.updateColumnsOptions(currentValue);\n    }\n  }\n\n  private removeListeners() {\n    if (this.resizeListener) {\n      this.resizeListener();\n    }\n  }\n\n  private updateColumnsOptions(columns: Array<PoTableColumn>) {\n    this.visibleColumns = this.getVisibleColumns(columns);\n    this.columnsOptions = this.mapTableColumnsToCheckboxOptions(columns);\n\n    this.onChangeVisibleColumns(this.visibleColumns);\n  }\n\n}\n","import { EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport { browserLanguage, capitalizeFirstLetter, convertToBoolean, isTypeof, sortValues, poLocaleDefault } from '../../utils/util';\nimport { PoDateService } from '../../services/po-date/po-date.service';\n\nimport { PoTableAction } from './interfaces/po-table-action.interface';\nimport { PoTableColumn } from './interfaces/po-table-column.interface';\nimport { PoTableColumnSort } from './interfaces/po-table-column-sort.interface';\nimport { PoTableColumnSortType } from './enums/po-table-column-sort-type.enum';\nimport { PoTableLiterals } from './interfaces/po-table-literals.interface';\n\nexport const poTableContainer = ['border', 'shadow'];\nexport const poTableContainerDefault = 'border';\n\nexport const poTableLiteralsDefault = {\n  en: <PoTableLiterals>{\n    noColumns: 'Columns are not defined',\n    noData: 'No data found',\n    noVisibleColumn: 'No visible column',\n    loadingData: 'Loading',\n    loadMoreData: 'Load more data',\n    seeCompleteSubtitle: 'See complete subtitle',\n    completeSubtitle: 'Complete subtitle',\n    columnsManager: 'Columns manager'\n  },\n  es: <PoTableLiterals>{\n    noColumns: 'Columnas no definidas',\n    noData: 'Datos no encontrados',\n    noVisibleColumn: 'Sin columnas visibles',\n    loadingData: 'Cargando datos',\n    loadMoreData: 'Cargar mÃ¡s resultados',\n    seeCompleteSubtitle: 'Ver subtitulo completo',\n    completeSubtitle: 'Subtitulo completo',\n    columnsManager: 'Gerente de columna'\n  },\n  pt: <PoTableLiterals>{\n    noColumns: 'Nenhuma definiÃ§Ã£o de colunas',\n    noData: 'Nenhum dado encontrado',\n    noVisibleColumn: 'Nenhuma coluna visÃ­vel',\n    loadingData: 'Carregando',\n    loadMoreData: 'Carregar mais resultados',\n    seeCompleteSubtitle: 'Ver legenda completa',\n    completeSubtitle: 'Legenda completa',\n    columnsManager: 'Gerenciador de colunas'\n  },\n  ru: <PoTableLiterals>{\n    noColumns: 'ÐÐµÑ Ð¾Ð¿ÑÐµÐ´ÐµÐ»ÐµÐ½Ð¸Ñ ÑÑÐ¾Ð»Ð±ÑÐ°',\n    noData: 'ÐÐ°Ð½Ð½ÑÐµ Ð½Ðµ Ð½Ð°Ð¹Ð´ÐµÐ½Ñ',\n    noVisibleColumn: 'Ð½ÐµÑ Ð²Ð¸Ð´Ð¸Ð¼ÑÑ ÑÑÐ¾Ð»Ð±ÑÐ¾Ð²',\n    loadingData: 'Ð¿Ð¾Ð³ÑÑÐ·ÐºÐ°',\n    loadMoreData: 'Ð·Ð°Ð³ÑÑÐ·ÐºÐ°',\n    seeCompleteSubtitle: 'ÐÐ¾ÑÐ¼Ð¾ÑÑÐµÑÑ Ð¿Ð¾Ð»Ð½ÑÐ¹ ÑÑÐ±ÑÐ¸ÑÑ',\n    completeSubtitle: 'ÐÐ¾Ð»Ð½ÑÐ¹ Ð·Ð°Ð³Ð¾Ð»Ð¾Ð²Ð¾Ðº',\n    columnsManager: 'Ð¼ÐµÐ½ÐµÐ´Ð¶ÐµÑ ÐºÐ¾Ð»Ð¾Ð½Ð¾Ðº'\n  }\n};\n\n/**\n * @description\n *\n * Este componente de tabela Ã© utilizado para exibiÃ§Ã£o de dados com diferentes tipos como por exemplo textos, data, horas e nÃºmeros com\n * formato personalizado.\n *\n * TambÃ©m Ã© possivel criar tabelas com ordenaÃ§Ã£o de dados, linhas com detalhes, coluna para seleÃ§Ã£o de linhas, coluna com aÃ§Ãµes e tambÃ©m\n * carregamento por demanda atravÃ©s do botÃ£o **Carregar mais resultados**.\n *\n * > As linhas de detalhes podem tambÃ©m ser customizadas atravÃ©s do [`p-table-row-template`](/documentation/po-table-row-template).\n *\n * O componente permite gerenciar a exibiÃ§Ã£o das colunas dinamicamente. Esta funcionalidade pode ser acessada atravÃ©s do Ã­cone de engrenagem\n * no canto superior direito do cabeÃ§alho da tabela.\n *\n * Caso a largura de todas as colunas forem definidas e o total ultrapassar o tamanho tabela, serÃ¡ exibido um *scroll* na horizontal para a\n * completa visualizaÃ§Ã£o dos dados.\n */\nexport abstract class PoTableBaseComponent implements OnChanges {\n\n  private _actions?: Array<PoTableAction> = [];\n  private _columns: Array<PoTableColumn> = [];\n  private _container?: string;\n  private _height?: number;\n  private _hideDetail?: boolean = false;\n  private _hideTextOverflow?: boolean = false;\n  private _items: Array<PoTableColumn>;\n  private _literals: PoTableLiterals;\n  private _loading?: boolean = false;\n  private _selectable?: boolean;\n\n  allColumnsWidthPixels: boolean;\n  columnMasterDetail: PoTableColumn;\n  hasMainColumns: boolean = false;\n  mainColumns: Array<PoTableColumn> = [];\n  selectAll = false;\n  sortedColumn = { property: <PoTableColumn>null, ascending: true };\n  subtitleColumns: Array<PoTableColumn> = [];\n\n  /**\n   * @description\n   *\n   * Lista de itens da tabela.\n   * > Se falso, serÃ¡ inicializado como um *array* vazio.\n   */\n  @Input('p-items') set items(items: Array<any>) {\n    this._items = Array.isArray(items) ? items : [];\n\n    // when haven't items, selectAll should be unchecked.\n    if (!this.hasItems) {\n      this.selectAll = false;\n    } else if (!this.hasColumns) {\n      this.columns = this.getDefaultColumns(items[0]);\n    }\n  }\n\n  get items() {\n    return this._items;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Lista das colunas da tabela, deve receber um *array* de objetos que implementam a interface `PoTableColumn`.\n   * Por padrÃ£o receberÃ¡ como valor a primeira coluna da lista de itens da tabela.\n   * > Caso nÃ£o encontre valor, a mensagem 'Nenhuma definiÃ§Ã£o de colunas' serÃ¡ exibida.\n   *\n   */\n  @Input('p-columns') set columns(columns: Array<PoTableColumn>) {\n\n    this._columns = columns || [];\n\n    if (this._columns.length) {\n      this.setColumnLink();\n      this.calculateWidthHeaders();\n    } else if (this.hasItems) {\n      this._columns = this.getDefaultColumns(this.items[0]);\n    }\n\n    this.onChangeColumns();\n  }\n\n  get columns() {\n    return this._columns;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Adiciona um contorno arredondado ao `po-table`, as opÃ§Ãµes sÃ£o:\n   * - `border`: com bordas/linhas.\n   * - `shadow`: com sombras.\n   *\n   * @default `border`\n   */\n  @Input('p-container') set container(value: string) {\n    this._container = poTableContainer.includes(value) ? value : poTableContainerDefault;\n    this.showContainer(this._container);\n  }\n\n  get container(): string {\n    return this._container;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Se verdadeiro, habilita a quebra de texto ao transborda-lo dentro de qualquer coluna.\n   * > Quando ocorrer a quebra de texto, ao passar o mouse no conteÃºdo da cÃ©lula,\n   * o mesmo serÃ¡ exibido atravÃ©s do [`po-tooltip`](/documentation/po-tooltip).\n   */\n  @Input('p-hide-text-overflow') set hideTextOverflow(hideTextOverflow: boolean) {\n    this._hideTextOverflow = convertToBoolean(hideTextOverflow);\n  }\n\n  get hideTextOverflow() {\n    return this._hideTextOverflow;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a altura da tabela em *pixels* e fixa o cabeÃ§alho.\n   */\n  @Input('p-height') set height(height: number) {\n    this._height = height;\n    this.calculateHeightTableContainer(height);\n    this.calculateWidthHeaders();\n  }\n\n  get height() {\n    return this._height;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Habilita a visualizaÃ§Ã£o da lista de detalhes de cada linha da coluna.\n   *\n   * @default `false`\n   */\n  @Input('p-hide-detail') set hideDetail(hideDetail: boolean) {\n    this._hideDetail = hideDetail != null && hideDetail.toString() === '' ? true : convertToBoolean(hideDetail);\n    this.calculateWidthHeaders();\n  }\n\n  get hideDetail() {\n    return this._hideDetail;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com as literais usadas no `po-table`.\n   *\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\n   *\n   * ```\n   *  const customLiterals: PoTableLiterals = {\n   *    loadMoreData: 'Buscar mais dados',\n   *    loadingData: 'Processando',\n   *    noColumns: 'Sem colunas',\n   *    noData: 'Sem dados',\n   *    seeCompleteSubtitle: 'Mostrar legenda completa',\n   *    completeSubtitle: 'Todas legendas'\n   *  };\n   * ```\n   *\n   * Ou passando apenas as literais que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: PoTableLiterals = {\n   *    noData: 'Sem dados'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <po-table\n   *   [p-literals]=\"customLiterals\">\n   * </po-table>\n   * ```\n   *\n   *  > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do *browser* (pt, en, es).\n   */\n  @Input('p-literals') set literals(value: PoTableLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...poTableLiteralsDefault[poLocaleDefault],\n        ...poTableLiteralsDefault[browserLanguage()],\n        ...value\n      };\n    } else {\n      this._literals = poTableLiteralsDefault[browserLanguage()];\n    }\n  }\n  get literals() {\n    return this._literals || poTableLiteralsDefault[browserLanguage()];\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Bloqueia interaÃ§Ã£o do usuÃ¡rio com os dados da _table_, apresentando um _loading_ ao centro da mesma.\n   *\n   * @default `false`\n   */\n  @Input('p-loading') set loading(loading: boolean) {\n    this._loading = convertToBoolean(loading);\n    this.calculateWidthHeaders();\n  }\n\n  get loading() {\n    return this._loading;\n  }\n\n  /**\n   * @optional\n   *\n   * @deprecated 2.X.X\n   * @description\n   *\n   * **Deprecated**\n   *\n   * > Esta propriedade estÃ¡ depreciada, utilize a propriedade `p-selectable`.\n   *\n   * Habilita na primeira coluna a opÃ§Ã£o de selecionar linhas,\n   * todos os itens da lista possuem a propriedade dinÃ¢mica `$selected` para identificar se a linha estÃ¡ selecionada.\n   * > Exemplo: `item.$selected` ou `item['$selected']`.\n   * > Os itens filhos possuem comportamento independente do item pai.\n   *\n   * @default `false`\n   */\n  @Input('p-checkbox') set checkbox(checkbox: boolean) {\n    this.selectable = checkbox;\n  }\n\n  get checkbox() {\n    return this.selectable;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define uma lista de aÃ§Ãµes.\n   *\n   * Quando houver apenas uma aÃ§Ã£o definida ela serÃ¡ exibida diretamente na coluna, caso contrÃ¡rio, o componente\n   * se encarrega de agrupÃ¡-las exibindo o Ã­cone [**po-icon-more**](/guides/icons) que listarÃ¡ as aÃ§Ãµes ao ser clicado.\n   *\n   * **A coluna de aÃ§Ãµes nÃ£o serÃ¡ exibida quando:**\n   *  - a lista conter valores invÃ¡lidos ou indefinidos.\n   *  - tenha uma Ãºnica aÃ§Ã£o e a mesma nÃ£o for visÃ­vel.\n   */\n  @Input('p-actions') set actions(actions: Array<PoTableAction>) {\n    this._actions = actions;\n    this.calculateWidthHeaders();\n  }\n\n  get actions() {\n    return this._actions;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Permite a seleÃ§Ã£o de linhas na tabela e, caso a propriedade `p-single-select` esteja definida serÃ¡ possÃ­vel\n   * selecionar apenas uma Ãºnica linha.\n   *\n   * **Importante:**\n   *  - As linhas de detalhe definidas em `PoTableDetail` possuem comportamento independente da linha mestre;\n   *  - Cada linha possui por padrÃ£o a propriedade dinÃ¢mica `$selected`, na qual Ã© possÃ­vel validar se a linha\n   * estÃ¡ selecionada, por exemplo: `item.$selected` ou `item['$selected']`.\n   *\n   * @default `false`\n   */\n  @Input('p-selectable') set selectable(value: boolean) {\n    this._selectable = <any>value === '' ? true : convertToBoolean(value);\n    this.calculateWidthHeaders();\n  }\n\n  get selectable() {\n    return this._selectable;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Habilita em todas as colunas a opÃ§Ã£o de ordenaÃ§Ã£o de dados. Caso a coluna seja do tipo 'data' ou 'dateTime' a\n   * mesma deve respeitar os tipos de entrada definidos para que sejam ordenadas.\n   *\n   * @default `false`\n   */\n  sort?: boolean;\n  @Input('p-sort') set setSort(sort: string) {\n    this.sort = sort === '' ? false : convertToBoolean(sort);\n  }\n\n  /**\n   * @description\n   *\n   * Se verdadeiro, torna habilitado o botÃ£o \"Carregar mais resultados\".\n   *\n   * @default `false`\n   */\n  showMoreDisabled?: boolean;\n  @Input('p-show-more-disabled') set setShowMoreDisabled(showMoreDisabled: string) {\n    this.showMoreDisabled = showMoreDisabled === '' ? false : convertToBoolean(showMoreDisabled);\n  }\n\n  /**\n   * @description\n   *\n   * Habilita ou desabilita o estilo listrado da tabela (`striped`).\n   * > Recomendado para tabelas com maior nÃºmero de dados, facilitando a sua visualizaÃ§Ã£o na tabela.\n   *\n   * @default `false`\n   */\n  striped?: boolean;\n  @Input('p-striped') set setStriped(striped: string) {\n    this.striped = striped === '' ? false : convertToBoolean(striped);\n  }\n\n  /**\n   * @description\n   *\n   * Esconde o *checkbox* para seleÃ§Ã£o de todas as linhas.\n   *\n   * > Sempre receberÃ¡ *true* caso a seleÃ§Ã£o de apenas uma linha esteja ativa.\n   *\n   * @default `false`\n   */\n  hideSelectAll?: boolean;\n  @Input('p-hide-select-all') set setHideSelectAll(hideSelectAll: string) {\n    this.hideSelectAll = hideSelectAll === '' ? false : convertToBoolean(hideSelectAll);\n  }\n\n  /**\n   * @description\n   *\n   * Define que somente uma linha da tabela pode ser selecionada.\n   *\n   * > Esta definiÃ§Ã£o nÃ£o se aplica aos itens filhos, os mesmos possuem comportamento independente do item pai.\n   */\n  singleSelect?: boolean;\n  @Input('p-single-select') set setSingleSelect(value: string) {\n    this.singleSelect = value === '' ? true : convertToBoolean(value);\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define uma quantidade mÃ¡xima de colunas que serÃ£o exibidas na tabela.\n   *\n   * Quando chegar no valor informado, as colunas que nÃ£o estiverem selecionadas ficarÃ£o\n   * desabilitadas e caso houver mais colunas visÃ­veis do que o permitido, as excedentes\n   * serÃ£o ignoradas por ordem de posiÃ§Ã£o.\n   */\n  @Input('p-max-columns') maxColumns?: number;\n\n  /** Evento executado quando todas as linhas sÃ£o selecionadas por meio do *checkbox* que seleciona todas as linhas. */\n  @Output('p-all-selected') allSelected?: EventEmitter<any> = new EventEmitter<any>();\n\n  /** Evento executado quando a seleÃ§Ã£o das linhas Ã© desmarcada por meio do *checkbox* que seleciona todas as linhas. */\n  @Output('p-all-unselected') allUnselected?: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * Evento executado ao colapsar uma linha do `po-table`.\n   *\n   * > Como parÃ¢metro o componente envia o item colapsado.\n   */\n  @Output('p-collapsed') collapsed?: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * Evento executado ao expandir uma linha do `po-table`.\n   *\n   * > Como parÃ¢metro o componente envia o item expandido.\n   */\n  @Output('p-expanded') expanded?: EventEmitter<any> = new EventEmitter<any>();\n\n  /** Evento executado ao selecionar uma linha do `po-table`. */\n  @Output('p-selected') selected?: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * Recebe uma aÃ§Ã£o de clique para o botÃ£o \"Carregar mais resultados\", caso nenhuma aÃ§Ã£o for definida o mesmo\n   * nÃ£o Ã© visÃ­vel.\n   *\n   * Recebe um objeto `{ column, type }` onde:\n   *\n   * - column (`PoTableColumn`): objeto da coluna que estÃ¡ ordenada.\n   * - type (`PoTableColumnSortType`): tipo da ordenaÃ§Ã£o.\n   */\n  @Output('p-show-more') showMore?: EventEmitter<PoTableColumnSort> = new EventEmitter<PoTableColumnSort>();\n\n  /**\n   * Evento executado ao ordenar colunas da tabela.\n   *\n   * Recebe um objeto `{ column, type }` onde:\n   *\n   * - column (`PoTableColumn`): objeto da coluna que foi clicada/ordenada.\n   * - type (`PoTableColumnSortType`): tipo da ordenaÃ§Ã£o.\n   */\n  @Output('p-sort-by') sortBy?: EventEmitter<PoTableColumnSort> = new EventEmitter<PoTableColumnSort>();\n\n  /** Evento executado ao desmarcar a seleÃ§Ã£o de uma linha do `po-table`. */\n  @Output('p-unselected') unselected?: EventEmitter<any> = new EventEmitter<any>();\n\n  get hasColumns(): boolean {\n    return this.columns && this.columns.length > 0;\n  }\n\n  get hasItems(): boolean {\n    return !!(this.items && this.items.length);\n  }\n\n  get nameColumnDetail() {\n    return this.columnMasterDetail ? this.columnMasterDetail.property : null;\n  }\n\n  get validColumns() {\n    const typesValid = ['string', 'number', 'boolean', 'date', 'time', 'dateTime', 'currency', 'subtitle', 'link', 'label', 'icon'];\n    return this.columns.filter(col => !col.type || typesValid.includes(col.type));\n  }\n\n  private get sortType(): PoTableColumnSortType {\n    return this.sortedColumn.ascending ? PoTableColumnSortType.Ascending : PoTableColumnSortType.Descending;\n  }\n\n  constructor(private poDate: PoDateService) { }\n\n  ngOnChanges(): void {\n    if (this.singleSelect || this.hideSelectAll) {\n      this.selectAll = false;\n      this.hideSelectAll = true;\n    }\n  }\n\n  /**\n   * MÃ©todo que colapsa uma linha com detalhe quando executada.\n   *\n   * @param { number } rowIndex Ãndice da linha que serÃ¡ colapsada.\n   * > Ao reordenar os dados da tabela, o valor contido neste Ã­ndice serÃ¡ alterado conforme a ordenaÃ§Ã£o.\n   */\n  collapse(rowIndex: number) {\n    this.setShowDetail(rowIndex, false);\n  }\n\n  /**\n   * MÃ©todo que expande uma linha com detalhe quando executada.\n   *\n   * @param { number } rowIndex Ãndice da linha que serÃ¡ expandida.\n   * > Ao reordenar os dados da tabela, o valor contido neste Ã­ndice serÃ¡ alterado conforme a ordenaÃ§Ã£o.\n   */\n  expand(rowIndex: number) {\n    this.setShowDetail(rowIndex, true);\n  }\n\n  /**\n   * Retorna as linhas do `po-table` que estÃ£o selecionadas.\n   */\n  getSelectedRows() {\n    return this.items.filter(item => item.$selected);\n  }\n\n  /**\n   * Retorna as linhas do `po-table` que nÃ£o estÃ£o selecionadas.\n   */\n  getUnselectedRows() {\n    return this.items.filter(item => !item.$selected);\n  }\n\n  selectAllRows() {\n    if (!this.hideSelectAll) {\n      this.selectAll = !this.selectAll;\n\n      this.items.forEach(item => {\n        item.$selected = this.selectAll;\n      });\n\n      this.emitSelectAllEvents(this.selectAll, this.items);\n    }\n  }\n\n  selectRow(row: any) {\n    row.$selected = !row.$selected;\n\n    this.emitSelectEvents(row);\n\n    this.configAfterSelectRow(this.items, row);\n  }\n\n  selectDetailRow(row: any) {\n    this.emitSelectEvents(row);\n  }\n\n  getClassColor(row, column) {\n    return column.color ? `po-text-${this.getColumnColor(row, column)}` : '';\n  }\n\n  toggleDetail(row: any) {\n    this.setShowDetail(row, !row.$showDetail);\n    this.emitExpandEvents(row);\n  }\n\n  toggleRowAction(row: any) {\n    const toggleShowAction = row.$showAction;\n\n    this.items.forEach(item => {\n      if (item.$showAction) {\n        item.$showAction = false;\n      }\n    });\n    row.$showAction = !toggleShowAction;\n  }\n\n  sortColumn(column: PoTableColumn) {\n    if (!this.sort || column.type === 'detail') {\n      return;\n    }\n\n    this.sortedColumn.ascending = this.sortedColumn.property === column ? !this.sortedColumn.ascending : true;\n\n    this.sortArray(column, this.sortedColumn.ascending);\n    this.sortBy.emit({ column, type: this.sortType});\n\n    this.sortedColumn.property = column;\n  }\n\n  onShowMore(): void {\n    const sort = this.sortedColumn.property ? { column: this.sortedColumn.property, type: this.sortType } : undefined;\n\n    this.showMore.emit(sort);\n  }\n\n  protected abstract calculateHeightTableContainer(height);\n\n  protected abstract calculateWidthHeaders();\n\n  protected abstract showContainer(container);\n\n  protected getDefaultColumns(item: any) {\n    const keys = Object.keys(item);\n\n    return keys.filter(key => (typeof item[key] !== 'object')).map(key => {\n      return { label: capitalizeFirstLetter(key), property: key };\n    });\n  }\n\n  private configAfterSelectRow(rows: Array<any>, row) {\n    if (this.singleSelect) {\n\n      this.unselectOtherRows(rows, row);\n\n    } else if (!this.hideSelectAll) {\n\n      this.selectAll = this.isEverySelected(rows);\n    }\n  }\n\n  private emitExpandEvents(row: any) {\n    row.$showDetail ? this.expanded.emit(row) : this.collapsed.emit(row);\n  }\n\n  private emitSelectAllEvents(selectAll: boolean, rows: any) {\n    selectAll ? this.allSelected.emit(rows) : this.allUnselected.emit(rows);\n  }\n\n  private emitSelectEvents(row: any) {\n    row.$selected ? this.selected.emit(row) : this.unselected.emit(row);\n  }\n\n  private getColumnColor(row, column) {\n    const columnColor = column.color;\n\n    return isTypeof(columnColor, 'function') ? columnColor(row, column.property) : columnColor;\n  }\n\n  // Retorna a coluna da lista de colunas que Ã© do tipo detail\n  private getColumnMasterDetail() {\n    return this.columns.find(col => col.type === 'detail');\n  }\n\n  // Colunas que sÃ£o inseridas no <head> da tabela\n  private getMainColumns() {\n    return this.validColumns.filter(col => col.visible !== false);\n  }\n\n  // Retorna as colunas com status\n  private getSubtitleColumns() {\n    return this.columns.filter(col => col.type === 'subtitle');\n  }\n\n  private isEverySelected(items: Array<any>): boolean {\n    const someCheckedOrIndeterminate = item => item.$selected || item.$selected === null;\n    const everyChecked = item => item.$selected;\n\n    if (items.every(everyChecked)) {\n      return true;\n    }\n\n    if (items.some(someCheckedOrIndeterminate)) {\n      return null;\n    }\n\n    return false;\n  }\n\n  private onChangeColumns() {\n    this.setMainColumns();\n    this.setColumnMasterDetail();\n    this.setSubtitleColumns();\n  }\n\n  private setColumnLink() {\n    this.columns.forEach(column => {\n      if (column['type'] === 'link' && !column['link']) {\n        column['link'] = 'link';\n      }\n    });\n  }\n\n  private setColumnMasterDetail() {\n    this.columnMasterDetail = this.getColumnMasterDetail();\n  }\n\n  private setMainColumns() {\n    this.mainColumns = this.getMainColumns();\n\n    this.hasMainColumns = !!this.mainColumns.length;\n\n    this.allColumnsWidthPixels = this.verifyWidthColumnsPixels();\n  }\n\n  private setShowDetail(rowIdentifier: any | number, isShowDetail: boolean) {\n\n    const isRowIndex = typeof rowIdentifier === 'number' && this.items[rowIdentifier];\n\n    const row = isRowIndex ? this.items[rowIdentifier] : rowIdentifier;\n\n    row.$showDetail = isShowDetail;\n  }\n\n  private setSubtitleColumns() {\n    this.subtitleColumns = this.getSubtitleColumns();\n  }\n\n  private sortArray(column: PoTableColumn, ascending: boolean) {\n\n    this.items.sort((leftSide, rightSide): number => {\n\n      if (column.type === 'date' || column.type === 'dateTime') {\n        return this.poDate.sortDate(leftSide[column.property], rightSide[column.property], ascending);\n      } else {\n        return sortValues(leftSide[column.property], rightSide[column.property], ascending);\n      }\n\n    });\n\n  }\n\n  private unselectOtherRows(rows: Array<any>, row) {\n    rows.forEach(item => {\n      if (item !== row) {\n        item.$selected = false;\n      }\n    });\n  }\n\n  private verifyWidthColumnsPixels() {\n    return this.hasMainColumns ? this.mainColumns.every(column => column.width && column.width.includes('px')) : false;\n  }\n\n}\n","/**\n * @docsPrivate\n *\n * @description\n *\n * Enum que contÃ©m os valores numÃ©ricos dos *keyCodes*.\n */\nexport enum PoKeyCodeEnum {\n\n    /** Seta para baixo */\n    arrowDown = 40,\n\n    /** Seta para cima */\n    arrowUp = 38,\n\n    /** Backspace */\n    backspace = 8,\n\n    /** Delete */\n    delete = 46,\n\n    /** Enter */\n    enter = 13,\n\n    /** Esc */\n    esc = 27,\n\n    /** Tecla K */\n    keyK = 75,\n\n    /** Tecla L */\n    keyL = 76,\n\n    /** EspaÃ§o */\n    space = 32,\n\n    /** Tab */\n    tab = 9\n\n}\n","import { Directive, Input, TemplateRef } from '@angular/core';\n\n/**\n * @usedBy PoTableComponent\n *\n * @description\n *\n * Esta diretiva permite que seja apresentada informaÃ§Ãµes adicionais a respeito de uma determinada linha de\n * dados, de forma que possam ser exibidas e ocultadas atravÃ©s do botÃ£o de acionamento.\n *\n * > Quando utilizada, sobrepÃµe as funcionalidade bÃ¡sicas do *master-detail*.\n *\n * Em seu uso, deve-se utilizar como parÃ¢metro a referÃªncia da _linha_ e/ou _Ã­ndice_, sendo por padrÃ£o linha. Caso nÃ£o seja declarado,\n * o componente nÃ£o exibirÃ¡ conteÃºdo.\n *  - Linha: `row` determina o item da linha corrente.\n *  - Ãndice: `rowIndex` determina o Ã­ndice da linha corrente.\n *\n * Esta diretiva compÃµe-se de dois meios para uso, de forma explÃ­cita tal como em *syntax sugar*. Veja a seguir ambos, respectivamente:\n *\n * ```\n * ...\n * <po-table\n *   [p-columns]=\"columns\"\n *   [p-items]=\"items\">\n *     <ng-template p-table-row-template let-rowItem let-i=\"rowIndex\" [p-table-row-template-show]=\"isShow\">\n *       <detail-row [row]=\"rowItem\"></detail-row>\n *     </ng-template>\n * ...\n * ```\n *\n * ```\n * ...\n * <po-table\n *   [p-columns]=\"columns\"\n *   [p-items]=\"items\">\n *     <div *p-table-row-template=\"let rowItem, let i=rowIndex\">\n *       <detail-row [row]=\"rowItem\"></detail-row>\n *     </div>\n * ...\n *\n * ```\n *\n * A diretiva **p-table-row-template**, possibilita tambÃ©m que determinada linha apresente ou nÃ£o seu _template_. Para isto,\n * Ã© necessÃ¡rio atribuir a referÃªncia da funÃ§Ã£o que faz esta verificaÃ§Ã£o, Ã  propriedade `p-table-row-template-show`,\n * a mesma deve retornar um valor do tipo *boolean*. Veja o exemplo a seguir:\n *\n * ```\n * ...\n * @Component({\n *    selector: 'app-root',\n *    templateUrl: `\n *      ...\n *      <po-table\n *        [p-columns]=\"columns\"\n *        [p-items]=\"items\">\n *          <ng-template p-table-row-template let-rowItem let-i=\"rowIndex\" [p-table-row-template-show]=\"isUndelivered\">\n *            <detail-row [row]=\"rowItem\"> </detail-row>\n *          </div>\n *      ...\n *    `\n * })\n * export class AppComponent {\n *    public dataTable = [{\n *      code: 1200,\n *      product: 'Rice',\n *      costumer: 'Supermarket 1',\n *      quantity: 3,\n *      status: 'delivered',\n *      license_plate: 'MDJD9191',\n *      batch_product: 18041822,\n *      driver: 'JosÃ© Oliveira'\n *    }, {\n *      code: 1355,\n *      product: 'Bean',\n *      costumer: 'Supermarket 2',\n *      quantity: 1,\n *      status: 'transport',\n *      license_plate: 'XXA5454',\n *      batch_product: 18041821,\n *      driver: 'Francisco Pereira'\n *    }];\n *\n *    isUndelivered(row, index: number) {\n *      return row.status !== 'delivered';\n *    }\n * }\n * ```\n * > No exemplo acima, somente serÃ¡ disponibilizado os detalhes de informaÃ§Ãµes nas linhas cujo o valor de `status`\n * nÃ£o correspondam Ã  *delivered*.\n */\n@Directive({\n  selector: '[p-table-row-template]'\n})\nexport class PoTableRowTemplateDirective {\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * FunÃ§Ã£o que deve retornar um valor booleano, informando se apresentarÃ¡ o template da linha.\n   * SerÃ£o passados o objeto da linha e o indice da mesma por parÃ¢metro, para que seja possÃ­vel\n   * tomar uma decisÃ£o a partir do objeto da linha corrente.\n   *\n   * Caso nÃ£o ser utilizado esta propriedade, serÃ£o apresentados todos os detalhes das linhas.\n   *\n   * @default `true`\n   */\n  @Input('p-table-row-template-show') poTableRowTemplateShow: (row: any, index: number) => boolean;\n\n  // NecessÃ¡rio manter templateRef para o funcionamento do row template.\n  constructor(public templateRef: TemplateRef<any>) { }\n\n}\n","import {\n  AfterViewInit, ChangeDetectorRef, Component, ContentChild, DoCheck, ElementRef, IterableDiffers,\n  OnDestroy, QueryList, Renderer2, ViewChild, ViewChildren, ViewContainerRef } from '@angular/core';\nimport { DecimalPipe } from '@angular/common';\nimport { Router } from '@angular/router';\n\nimport { convertToBoolean } from '../../utils/util';\nimport { PoDateService } from '../../services/po-date/po-date.service';\nimport { PoPopupComponent } from '../po-popup/po-popup.component';\n\nimport { PoTableAction } from './interfaces/po-table-action.interface';\nimport { PoTableBaseComponent } from './po-table-base.component';\nimport { PoTableColumn } from './interfaces/po-table-column.interface';\nimport { PoTableColumnLabel } from './po-table-column-label/po-table-column-label.interface';\nimport { PoTableRowTemplateDirective } from './po-table-row-template/po-table-row-template.directive';\nimport { PoTableSubtitleColumn } from './po-table-subtitle-footer/po-table-subtitle-column.interface';\n\n/**\n * @docsExtends PoTableBaseComponent\n *\n * @example\n *\n * <example name=\"po-table-basic\" title=\"Portinari Table Basic\">\n *  <file name=\"sample-po-table-basic/sample-po-table-basic.component.ts\"> </file>\n *  <file name=\"sample-po-table-basic/sample-po-table-basic.component.html\"> </file>\n * </example>\n *\n * <example name=\"po-table-labs\" title=\"Portinari Table Labs\">\n *  <file name=\"sample-po-table-labs/sample-po-table-labs.component.ts\"> </file>\n *  <file name=\"sample-po-table-labs/sample-po-table-labs.component.html\"> </file>\n *  <file name=\"sample-po-table-labs/sample-po-table-labs.component.e2e-spec.ts\"> </file>\n *  <file name=\"sample-po-table-labs/sample-po-table-labs.component.po.ts\"> </file>\n *  <file name=\"sample-po-table-labs/sample-po-table-labs.service.ts\"> </file>\n * </example>\n *\n * <example name=\"po-table-transport\" title=\"Portinari Table - Transport\">\n *  <file name=\"sample-po-table-transport/sample-po-table-transport.component.ts\"> </file>\n *  <file name=\"sample-po-table-transport/sample-po-table-transport.component.html\"> </file>\n *  <file name=\"sample-po-table-transport/sample-po-table-transport.service.ts\"> </file>\n * </example>\n *\n * <example name=\"po-table-airfare\" title=\"Portinari Table - Airfare\">\n *  <file name=\"sample-po-table-airfare/sample-po-table-airfare.component.ts\"> </file>\n *  <file name=\"sample-po-table-airfare/sample-po-table-airfare.component.html\"> </file>\n *  <file name=\"sample-po-table-airfare/sample-po-table-airfare.service.ts\"> </file>\n * </example>\n *\n * <example name=\"po-table-components\" title=\"Portinari Table - Po Field Components\">\n *  <file name=\"sample-po-table-components/sample-po-table-components.component.ts\"> </file>\n *  <file name=\"sample-po-table-components/sample-po-table-components.component.html\"> </file>\n *  <file name=\"sample-po-table-components/sample-po-table-components.service.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-table',\n  templateUrl: './po-table.component.html',\n  providers: [PoDateService]\n})\nexport class PoTableComponent extends PoTableBaseComponent implements AfterViewInit, DoCheck, OnDestroy {\n\n  private _columnManagerTarget: ElementRef;\n\n  heightTableContainer: number;\n  popupTarget;\n  tableOpacity: number = 0;\n  tooltipText: string;\n\n  private differ;\n  private footerHeight;\n  private initialized = false;\n  private parentRef: any;\n  private timeoutResize;\n  private visibleElement = false;\n\n  private clickListener: () => void;\n  private resizeListener: () => void;\n\n  @ContentChild(PoTableRowTemplateDirective, { static: true }) tableRowTemplate: PoTableRowTemplateDirective;\n\n  @ViewChild('columnManagerTarget', { static: false }) set columnManagerTarget(value: ElementRef) {\n    this._columnManagerTarget = value;\n\n    this.changeDetector.detectChanges();\n  }\n\n  get columnManagerTarget() {\n    return this._columnManagerTarget;\n  }\n\n  @ViewChild('noColumnsHeader', { read: ElementRef, static: false }) noColumnsHeader;\n  @ViewChild('popup', { static: false }) poPopupComponent: PoPopupComponent;\n\n  @ViewChild('tableContainer', { read: ElementRef, static: true }) tableContainerElement;\n  @ViewChild('tableFooter', { read: ElementRef, static: true }) tableFooterElement;\n  @ViewChild('tableWrapper', { read: ElementRef, static: true }) tableWrapperElement;\n\n  @ViewChildren('actionsIconElement', { read: ElementRef }) actionsIconElement: QueryList<any>;\n  @ViewChildren('actionsElement', { read: ElementRef }) actionsElement: QueryList<any>;\n  @ViewChildren('headersTable') headersTable: QueryList<any>;\n\n  constructor(\n    poDate: PoDateService,\n    differs: IterableDiffers,\n    viewRef: ViewContainerRef,\n    renderer: Renderer2,\n    private changeDetector: ChangeDetectorRef,\n    private decimalPipe: DecimalPipe,\n    private router: Router) {\n\n    super(poDate);\n\n    this.parentRef = viewRef['_view']['component'];\n    this.differ = differs.find([]).create(null);\n\n    // TODO: #5550 ao remover este listener, no portal, quando as colunas forem fixas nÃ£o sofrem\n    // alteraÃ§Ã£o de largura, pois o ngDoCheck nÃ£o Ã© executado.\n    this.clickListener = renderer.listen('document', 'click', () => { });\n\n    this.resizeListener = renderer.listen('window', 'resize', (event: any) => {\n      this.debounceResize();\n    });\n\n  }\n\n  get columnCount() {\n    return (this.mainColumns.length +\n      (this.actions.length > 0 ? 1 : 0) +\n      (this.selectable ? 1 : 0) +\n      (!this.hideDetail && this.columnMasterDetail !== undefined ? 1 : 0)\n    );\n  }\n\n  get columnCountForMasterDetail() {\n    // caso tiver aÃ§Ãµes serÃ¡ utilizado a sua coluna para exibir o columnManager\n    const columnManager = this.actions.length ? 0 : 1;\n\n    return (this.mainColumns.length + 1) + (this.actions.length > 0 ? 1 : 0) + (this.selectable ? 1 : 0) + columnManager;\n  }\n\n  get detailHideSelect() {\n    const masterDetail = this.columnMasterDetail;\n    return masterDetail && masterDetail.detail ? masterDetail.detail.hideSelect : false;\n  }\n\n  get displayColumnManagerCell() {\n    return !this.visibleActions.length;\n  }\n\n  get firstAction(): PoTableAction {\n    return this.visibleActions && this.visibleActions[0];\n  }\n\n  get hasFooter(): boolean {\n    return this.hasItems && this.hasVisibleSubtitleColumns;\n  }\n\n  get hasMasterDetailColumn(): boolean {\n    return this.hasMainColumns &&\n      this.hasItems && !this.hideDetail &&\n      !!(this.columnMasterDetail || this.hasRowTemplate);\n  }\n\n  get hasRowTemplate(): boolean {\n    return !!this.tableRowTemplate;\n  }\n\n  get hasSelectableColumn(): boolean {\n    return this.selectable && this.hasItems && this.hasMainColumns;\n  }\n\n  get hasValidColumns() {\n    return !!this.validColumns.length;\n  }\n\n  get hasVisibleSubtitleColumns() {\n    return this.subtitleColumns.some(column => column.visible !== false);\n  }\n\n  get isSingleAction() {\n    return this.visibleActions.length === 1;\n  }\n\n  get visibleActions() {\n    return this.actions && this.actions.filter(action => action.visible !== false);\n  }\n\n  ngAfterViewInit() {\n    this.initialized = true;\n\n    if (!this.container) {\n      this.hideContainer();\n    }\n  }\n\n  ngDoCheck() {\n    this.checkChangesItems();\n    this.verifyCalculateHeightTableContainer();\n    // Permite que os cabeÃ§alhos sejam calculados na primeira vez que o componente torna-se visÃ­vel,\n    // evitando com isso, problemas com Tabs ou Divs que iniciem escondidas.\n    if (this.tableWrapperElement.nativeElement.offsetWidth && !this.visibleElement && this.initialized) {\n      this.debounceResize();\n      this.visibleElement = true;\n    }\n  }\n\n  ngOnDestroy() {\n    this.removeListeners();\n  }\n\n  checkDisabled(row, column: PoTableColumn) {\n    return column.disabled ? column.disabled(row) : false;\n  }\n\n  containsMasterDetail(row) {\n    return row[this.nameColumnDetail] && row[this.nameColumnDetail].length;\n  }\n\n  executeTableAction(row: any, tableAction: any) {\n    if (!row.disabled && !this.validateTableAction(row, tableAction)) {\n      tableAction.action.call(this.parentRef, row);\n      this.toggleRowAction(row);\n    }\n  }\n\n  formatNumber(value: any, format: string) {\n    if (!format) {\n      return value;\n    }\n\n    return this.decimalPipe.transform(value, format);\n  }\n\n  getBooleanLabel(rowValue: any, columnBoolean: PoTableColumn): string {\n\n    if (rowValue || rowValue === false || rowValue === 0) {\n      rowValue = convertToBoolean(rowValue);\n\n      if (columnBoolean.boolean) {\n        return rowValue ? columnBoolean.boolean.trueLabel || 'Sim' : columnBoolean.boolean.falseLabel || 'NÃ£o';\n      } else {\n        return rowValue ? 'Sim' : 'NÃ£o';\n      }\n    }\n\n    return rowValue;\n  }\n\n  getColumnIcons(row: any, column: PoTableColumn) {\n    const rowIcons = row[column.property];\n\n    if (column.icons) {\n      if (Array.isArray(rowIcons)) {\n        return this.mergeCustomIcons(rowIcons, column.icons);\n      } else {\n        return this.findCustomIcon(rowIcons, column);\n      }\n    }\n\n    return rowIcons;\n  }\n\n  getColumnLabel(row: any, columnLabel: PoTableColumn): PoTableColumnLabel {\n    return columnLabel.labels.find(labelItem => row[columnLabel.property] === labelItem.value);\n  }\n\n  getSubtitleColumn(row: any, subtitleColumn: PoTableColumn): PoTableSubtitleColumn {\n    return subtitleColumn.subtitles.find(subtitleItem => row[subtitleColumn.property] === subtitleItem.value);\n  }\n\n  isShowMasterDetail(row) {\n    return !this.hideDetail &&\n      this.nameColumnDetail &&\n      row.$showDetail &&\n      this.containsMasterDetail(row) &&\n      !this.hasRowTemplate;\n  }\n\n  isShowRowTemplate(row, index: number): boolean {\n\n    if (this.tableRowTemplate && this.tableRowTemplate.poTableRowTemplateShow) {\n      return this.tableRowTemplate.poTableRowTemplateShow(row, index);\n    }\n\n    return true;\n  }\n\n  onVisibleColumnsChange(columns: Array<PoTableColumn>) {\n    this.columns = columns;\n\n    this.changeDetector.detectChanges();\n  }\n\n  tooltipMouseEnter(event: any, column?: PoTableColumn, row?: any) {\n    this.tooltipText = undefined;\n\n    if (this.hideTextOverflow &&\n        event.target.offsetWidth < event.target.scrollWidth &&\n        event.target.innerText.trim()) {\n      return this.tooltipText = event.target.innerText;\n    }\n\n    if (column) {\n      this.checkingIfColumnHasTooltip(column, row);\n    }\n  }\n\n  tooltipMouseLeave() {\n    this.tooltipText = undefined;\n  }\n\n  togglePopup(row, targetRef) {\n    this.popupTarget = targetRef;\n    this.changeDetector.detectChanges();\n\n    this.poPopupComponent.toggle(row);\n  }\n\n  trackBy(index: number) {\n    return index;\n  }\n\n  validateTableAction(row: any, tableAction: any) {\n    if (typeof tableAction.disabled === 'function') {\n      return tableAction.disabled.call(this.parentRef, row);\n    } else {\n      return tableAction.disabled;\n    }\n  }\n\n  protected calculateHeightTableContainer(height) {\n    const value = parseFloat(height);\n    this.heightTableContainer = value ? (value - this.getHeightTableFooter()) : undefined;\n    this.setTableOpacity(1);\n    this.changeDetector.detectChanges();\n  }\n\n  protected calculateWidthHeaders() {\n    setTimeout(() => {\n      if (this.height) {\n        this.headersTable.forEach(header => {\n          const divHeader = header.nativeElement.querySelector('.po-table-header-fixed-inner');\n          if (divHeader) {\n            divHeader.style.width = `${header.nativeElement.offsetWidth}px`;\n          }\n        });\n      }\n    });\n  }\n\n  protected showContainer(container: string) {\n    const containerClassList = this.tableContainerElement.nativeElement.firstChild.classList;\n\n    containerClassList.add('po-container');\n\n    container === 'border' ? containerClassList.add('po-container-no-shadow') : containerClassList.remove('po-container-no-shadow');\n  }\n\n  private checkChangesItems() {\n    const changesItems = this.differ.diff(this.items);\n\n    if (changesItems && this.selectAll) {\n      this.selectAll = null;\n    }\n\n    if (changesItems && !this.hasColumns && this.hasItems) {\n      this.columns = this.getDefaultColumns(this.items[0]);\n    }\n  }\n\n  private checkingIfColumnHasTooltip(column, row) {\n    if (column.type === 'link' && column.tooltip && !this.checkDisabled(row, column)) {\n      return this.tooltipText = column.tooltip;\n    }\n\n    if (column.type === 'label') {\n      const columnLabel = this.getColumnLabel(row, column);\n      return this.tooltipText = columnLabel.tooltip;\n    }\n  }\n\n  private debounceResize() {\n    clearTimeout(this.timeoutResize);\n    this.timeoutResize = setTimeout(() => {\n      this.calculateWidthHeaders();\n\n      // show the table\n      this.setTableOpacity(1);\n    });\n  }\n\n  private findCustomIcon(rowIcons, column: PoTableColumn) {\n    const customIcon = column.icons.find(icon => rowIcons === icon.value);\n    return customIcon ? [ customIcon ] : undefined;\n  }\n\n  private getHeightTableFooter() {\n    return this.tableFooterElement ? this.tableFooterElement.nativeElement.offsetHeight : 0;\n  }\n\n  private hideContainer() {\n    const containerClassList = this.tableContainerElement.nativeElement.firstChild.classList;\n    containerClassList.remove('po-container');\n  }\n\n  private mergeCustomIcons(rowIcons: Array<string>, customIcons: Array<any>) {\n    const mergedIcons = [];\n\n    rowIcons.forEach(columnValue => {\n      const foundCustomIcon = customIcons.find(customIcon => columnValue === customIcon.icon || columnValue === customIcon.value);\n      foundCustomIcon ? mergedIcons.push(foundCustomIcon) : mergedIcons.push(columnValue);\n    });\n\n    return mergedIcons;\n  }\n\n  private removeListeners() {\n    if (this.resizeListener) {\n      this.resizeListener();\n    }\n\n    if (this.clickListener) {\n      this.clickListener();\n    }\n  }\n\n  private setTableOpacity(value: number) {\n    this.tableOpacity = value;\n  }\n\n  private verifyChangeHeightInFooter() {\n    return this.footerHeight !== this.getHeightTableFooter();\n  }\n\n  private verifyCalculateHeightTableContainer() {\n    if (this.height && this.verifyChangeHeightInFooter()) {\n      this.footerHeight = this.getHeightTableFooter();\n      this.calculateHeightTableContainer(this.height);\n    }\n  }\n\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { DecimalPipe } from '@angular/common';\n\nimport { capitalizeFirstLetter, isTypeof } from '../../../utils/util';\n\nimport { PoTableDetail } from './po-table-detail.interface';\nimport { PoTableDetailColumn } from './po-table-detail-column.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente responsÃ¡vel por apresentar o detalhe de cada linha da tabela.\n */\n@Component({\n  selector: 'po-table-detail',\n  templateUrl: './po-table-detail.component.html'\n})\nexport class PoTableDetailComponent {\n\n  private _detail: PoTableDetail;\n\n  /**\n   * ConfiguraÃ§Ã£o da linha de detalhes.\n   */\n  @Input('p-detail') set detail(value: PoTableDetail) {\n    this._detail = this.returnPoTableDetailObject(value);\n  }\n\n  get detail() {\n    return this._detail;\n  }\n\n  /**\n   * Lista de itens do _detail_ da tabela.\n   */\n  @Input('p-items') items: Array<any>;\n\n  /**\n   * Define se a tabela possui a opÃ§Ã£o de `selectable` habilitada.\n   */\n  @Input('p-selectable') isSelectable?: boolean = false;\n\n  /**\n   * AÃ§Ã£o executada ao selecionar ou desmarcar a seleÃ§Ã£o de uma linha de detalhe do `po-table`.\n   */\n  @Output('p-select-row') selectRow?: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(private decimalPipe: DecimalPipe) {}\n\n  get detailColumns(): Array<PoTableDetailColumn> {\n    return this.detail && this.detail.columns || [];\n  }\n\n  get typeHeaderInline(): boolean {\n    return this.detail && !this.detail['typeHeader'] || this.detail['typeHeader'] === 'inline';\n  }\n\n  get typeHeaderTop(): boolean {\n    return this.detail && this.detail['typeHeader'] === 'top';\n  }\n\n  formatNumberDetail(value: any, format: string) {\n    if (!format) {\n      return value;\n    }\n\n    return this.decimalPipe.transform(value, format);\n  }\n\n  getColumnTitleLabel(detail: PoTableDetailColumn) {\n    return detail.label || capitalizeFirstLetter(detail.property);\n  }\n\n  onSelectRow(item) {\n    item.$selected = !item.$selected;\n    this.selectRow.emit(item);\n  }\n\n  private returnPoTableDetailObject(value: any) {\n    if (value && isTypeof(value, 'object')) {\n\n      if (value.columns) {\n        value.columns.forEach(column => column.property = column.property || column.column);\n      }\n\n      if (Array.isArray(value)) {\n        return { columns: value };\n      }\n\n      if (value.columns) {\n        return value;\n      }\n    }\n  }\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente responsÃ¡vel por exibir um Ã­cone na tabela.\n */\n@Component({\n  selector: 'po-table-icon',\n  templateUrl: './po-table-icon.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class PoTableIconComponent {\n\n  tooltip: string;\n\n  /** Define se o Ã­cone Ã© clicÃ¡vel. */\n  @Input('p-clickable') clickable: boolean;\n\n  /** Cor do Ã­cone. */\n  @Input('p-color') color: string;\n\n  /** Desabilitado. */\n  @Input('p-disabled') disabled: boolean;\n\n  /** Classe css do Ã­cone. */\n  @Input('p-icon') icon: string;\n\n  /** Texto do tooltip. */\n  @Input('p-icon-tooltip') iconTooltip: string;\n\n  /** Output click. */\n  @Output('p-click') click: EventEmitter<any> = new EventEmitter();\n\n  private get allowTooltip() {\n    return !this.disabled && this.iconTooltip;\n  }\n\n  onClick() {\n    if (this.clickable) {\n      this.click.emit();\n    }\n  }\n\n  tooltipMouseEnter() {\n    if (this.allowTooltip) {\n      this.tooltip = this.iconTooltip;\n    }\n  }\n\n  tooltipMouseLeave() {\n    this.tooltip = undefined;\n  }\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { PoTableSubtitleColumn } from '../po-table-subtitle-footer/po-table-subtitle-column.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente para a criaÃ§Ã£o de um botÃ£o e modal para visualizaÃ§Ã£o de todas as legendas.\n */\n@Component({\n  selector: 'po-table-show-subtitle',\n  templateUrl: './po-table-show-subtitle.component.html'\n})\nexport class PoTableShowSubtitleComponent {\n\n  /** Objeto com os dados da legenda. */\n  @Input('p-subtitles') subtitles: Array<PoTableSubtitleColumn>;\n\n  /** Propriedade que recebe as literais definidas no `po-table`. */\n  @Input('p-literals') literals;\n\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\nimport { PoColorPaletteService } from './../../../services/po-color-palette/po-color-palette.service';\nimport { PoTableSubtitleColumn } from './../po-table-subtitle-footer/po-table-subtitle-column.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente para a criaÃ§Ã£o da representaÃ§Ã£o da legenda, em formato de cÃ­rculo.\n */\n@Component({\n  selector: 'po-table-subtitle-circle',\n  templateUrl: './po-table-subtitle-circle.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoTableSubtitleCircleComponent {\n\n  private _subtitle: PoTableSubtitleColumn;\n\n  /** Objeto com os dados da legenda. */\n  @Input('p-subtitle') set subtitle(subtitle: PoTableSubtitleColumn) {\n    if (subtitle) {\n      subtitle.color = this.poColorPaletteService.getColor(subtitle);\n    }\n    this._subtitle = subtitle;\n  }\n  get subtitle(): PoTableSubtitleColumn {\n    return this._subtitle;\n  }\n\n  /** Esconde a tooltip. */\n  @Input('p-hide-title')\n  hideTitle: boolean = false;\n\n  constructor(private poColorPaletteService: PoColorPaletteService) { }\n\n}\n","import { AfterViewInit, Component, DoCheck, ElementRef, Input, OnDestroy, Renderer2 } from '@angular/core';\n\nimport { PoTableSubtitleColumn } from './po-table-subtitle-column.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente para a criaÃ§Ã£o de um conjunto de legendas.\n */\n@Component({\n  selector: 'po-table-subtitle-footer',\n  templateUrl: './po-table-subtitle-footer.component.html'\n})\nexport class PoTableSubtitleFooterComponent implements AfterViewInit, DoCheck, OnDestroy {\n\n  showSubtitle: boolean;\n\n  private isVisible: boolean;\n  private timeoutResize;\n  protected resizeListener: () => void;\n\n  /** Propriedade que recebe as literais definidas no `po-table`. */\n  @Input('p-literals') literals;\n\n  /** Propriedade que recebe as legendas definidas no `PoTableSubtitleCircleComponent`. */\n  @Input('p-subtitles') subtitles: Array<PoTableSubtitleColumn>;\n\n  constructor(private element: ElementRef, public renderer: Renderer2) { }\n\n  ngAfterViewInit() {\n    this.initializeResizeListener();\n    this.debounceResize();\n  }\n\n  ngDoCheck() {\n\n    if (!this.isVisible && this.getContainerSize() > 0) {\n      this.toggleShowCompleteSubtitle();\n      this.isVisible = true;\n    }\n\n  }\n\n  ngOnDestroy() {\n    this.removeResizeListener();\n  }\n\n  private debounceResize() {\n    clearTimeout(this.timeoutResize);\n    this.timeoutResize = setTimeout(() => {\n      this.toggleShowCompleteSubtitle();\n    });\n  }\n\n  private getContainerSize() {\n    return this.element.nativeElement.querySelector('.po-table-subtitle-footer-container').offsetWidth;\n  }\n\n  private getItemsSize() {\n    const items = this.element.nativeElement.querySelectorAll('.po-table-subtitle-footer');\n\n    return Array.from(items).map(item => item['offsetWidth']).reduce((a, b) => a + b, 16);\n  }\n\n  private initializeResizeListener() {\n    this.resizeListener = this.renderer.listen('window', 'resize', (event: MouseEvent) => {\n      this.debounceResize();\n    });\n  }\n\n  private removeResizeListener() {\n    this.resizeListener();\n  }\n\n  private toggleShowCompleteSubtitle() {\n    const containerSize = this.getContainerSize();\n    const itemsSize = this.getItemsSize();\n\n    this.showSubtitle = itemsSize > containerSize;\n  }\n\n}\n","import { CommonModule, DecimalPipe } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoButtonModule } from './../po-button/po-button.module';\nimport { PoCheckboxGroupModule } from '../po-field/po-checkbox-group/po-checkbox-group.module';\nimport { PoContainerModule } from '../po-container/po-container.module';\nimport { PoLoadingModule } from '../po-loading/po-loading.module';\nimport { PoModalModule } from '../po-modal/po-modal.module';\nimport { PoPopoverModule } from '../po-popover/po-popover.module';\nimport { PoPopupModule } from './../po-popup/po-popup.module';\nimport { PoTimeModule } from '../../pipes/po-time/index';\nimport { PoTooltipModule } from '../../directives/po-tooltip/index';\n\nimport { PoTableColumnIconComponent } from './po-table-column-icon/po-table-column-icon.component';\nimport { PoTableColumnLabelComponent } from './po-table-column-label/po-table-column-label.component';\nimport { PoTableColumnLinkComponent } from './po-table-column-link/po-table-column-link.component';\nimport { PoTableColumnManagerComponent } from './po-table-column-manager/po-table-column-manager.component';\nimport { PoTableComponent } from './po-table.component';\nimport { PoTableDetailComponent } from './po-table-detail/po-table-detail.component';\nimport { PoTableIconComponent } from './po-table-icon/po-table-icon.component';\nimport { PoTableRowTemplateDirective } from './po-table-row-template/po-table-row-template.directive';\nimport { PoTableShowSubtitleComponent } from './po-table-show-subtitle/po-table-show-subtitle.component';\nimport { PoTableSubtitleCircleComponent } from './po-table-subtitle-circle/po-table-subtitle-circle.component';\nimport { PoTableSubtitleFooterComponent } from './po-table-subtitle-footer/po-table-subtitle-footer.component';\n\n/**\n * @description\n * MÃ³dulo do componente po-table\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    PoButtonModule,\n    PoCheckboxGroupModule,\n    PoContainerModule,\n    PoLoadingModule,\n    PoModalModule,\n    PoPopoverModule,\n    PoPopupModule,\n    PoTimeModule,\n    PoTooltipModule\n  ],\n  declarations: [\n    PoTableComponent,\n    PoTableColumnIconComponent,\n    PoTableColumnLabelComponent,\n    PoTableColumnLinkComponent,\n    PoTableColumnManagerComponent,\n    PoTableDetailComponent,\n    PoTableIconComponent,\n    PoTableRowTemplateDirective,\n    PoTableShowSubtitleComponent,\n    PoTableSubtitleCircleComponent,\n    PoTableSubtitleFooterComponent\n  ],\n  exports: [\n    PoTableComponent,\n    PoTableRowTemplateDirective\n  ],\n  providers: [DecimalPipe]\n})\nexport class PoTableModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class PoCalendarLangService {\n\n  months = [\n    {\n      pt: 'Janeiro',\n      en: 'January',\n      es: 'Enero'\n    },\n    {\n      pt: 'Fevereiro',\n      en: 'February',\n      es: 'Febrero'\n    },\n    {\n      pt: 'MarÃ§o',\n      en: 'March',\n      es: 'Marzo'\n    },\n    {\n      pt: 'Abril',\n      en: 'April',\n      es: 'Abril'\n    },\n    {\n      pt: 'Maio',\n      en: 'May',\n      es: 'Mayo'\n    },\n    {\n      pt: 'Junho',\n      en: 'June',\n      es: 'Junio'\n    },\n    {\n      pt: 'Julho',\n      en: 'July',\n      es: 'Julio'\n    },\n    {\n      pt: 'Agosto',\n      en: 'August',\n      es: 'Agosto'\n    },\n    {\n      pt: 'Setembro',\n      en: 'September',\n      es: 'Setiembre'\n    },\n    {\n      pt: 'Outubro',\n      en: 'October',\n      es: 'Octubre'\n    },\n    {\n      pt: 'Novembro',\n      en: 'November',\n      es: 'Noviembre'\n    },\n    {\n      pt: 'Dezembro',\n      en: 'December',\n      es: 'Diciembre'\n    }\n  ];\n\n  shortWeekDays = [\n    {\n      pt: 'Dom',\n      en: 'Sun',\n      es: 'Dom'\n    },\n    {\n      pt: 'Seg',\n      en: 'Mon',\n      es: 'Lun'\n    },\n    {\n      pt: 'Ter',\n      en: 'Tue',\n      es: 'Mar'\n    },\n    {\n      pt: 'Qua',\n      en: 'Wed',\n      es: 'MiÃ©'\n    },\n    {\n      pt: 'Qui',\n      en: 'Thu',\n      es: 'Jue'\n    },\n    {\n      pt: 'Sex',\n      en: 'Fri',\n      es: 'Vie'\n    },\n    {\n      pt: 'SÃ¡b',\n      en: 'Sat',\n      es: 'SÃ¡b'\n    }\n  ];\n\n  wordMonth = {\n    pt: 'MÃªs',\n    en: 'Month',\n    es: 'Mes'\n  };\n\n  wordYear = {\n    pt: 'Ano',\n    en: 'Year',\n    es: 'AÃ±o'\n  };\n\n  lang = 'pt';\n\n  constructor() { }\n\n  setLanguage(lang: string) {\n    if (lang && lang.length >= 2) {\n      lang = lang.toLowerCase().slice(0, 2);\n      this.lang = (lang === 'pt' || lang === 'en' || lang === 'es') ? lang : 'pt';\n    }\n  }\n\n  getWordMonth() {\n    return this.wordMonth[this.lang];\n  }\n\n  getWordYear() {\n    return this.wordYear[this.lang];\n  }\n\n  getMonth(month: number) {\n    return this.months[month][this.lang];\n  }\n\n  getArrayMonths() {\n    const arrMonths = Array();\n    for (let i = 0; i < this.months.length; i++) {\n      arrMonths.push(this.months[i][this.lang]);\n    }\n    return arrMonths;\n  }\n\n  getWeedDays(day: number) {\n    return this.shortWeekDays[day][this.lang];\n  }\n\n  getArrayWeekDays() {\n    const arrWeekDays = Array();\n    for (let i = 0; i < this.shortWeekDays.length; i++) {\n      arrWeekDays.push(this.shortWeekDays[i][this.lang]);\n    }\n    return arrWeekDays;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { setYearFrom0To100 } from '../../../../utils/util';\n\n@Injectable()\nexport class PoCalendarService {\n  firstWeekDay: number;\n\n  constructor() {\n    this.firstWeekDay = 0; // 0 = sunday\n  }\n\n  weekStartDate(date: any) {\n    const startDate = new Date(date.getTime());\n    while (startDate.getDay() !== this.firstWeekDay) {\n      startDate.setDate(startDate.getDate() - 1);\n    }\n    return startDate;\n  }\n\n  monthDates(year: any, month: any, dayFormatter: any = null, weekFormatter: any = null) {\n    if ((typeof month !== 'number') || (month < 0) || (month > 11)) {\n      throw Error(('month must be a number (Jan is 0)'));\n    }\n\n    const weeks: Array<any> = [];\n    let week: Array<any> = [];\n    let i = 0;\n    let date = new Date(year, month, 1);\n    setYearFrom0To100(date, year);\n    date = this.weekStartDate(date);\n\n    do {\n      for (i = 0; i < 7; i++) {\n        week.push(dayFormatter ? dayFormatter(date) : date);\n        date = new Date(date.getTime());\n        date.setDate(date.getDate() + 1);\n      }\n      weeks.push(weekFormatter ? weekFormatter(week) : week);\n      week = [];\n    } while ((date.getMonth() <= month) && (date.getFullYear() === year));\n    return weeks;\n  }\n\n  monthDays(year: any, month: any) {\n    const getDayOrZero = function(date: any) {\n      return date.getMonth() === month ? date : 0;\n    };\n    return this.monthDates(year, month, getDayOrZero);\n  }\n}\n","import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\n\nimport { isMobile, setYearFrom0To100, validateDateRange } from '../../../../utils/util';\nimport { PoCalendarLangService } from './po-calendar.lang.service';\nimport { PoCalendarService } from './po-calendar.service';\n\nconst poCalendarLocaleDefault = 'pt';\nconst poCalendarLocales = ['pt', 'en', 'es'];\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente de calendÃ¡rio de uso interno\n */\n@Component({\n  selector: 'po-calendar',\n  templateUrl: './po-calendar.component.html',\n  providers: [PoCalendarService, PoCalendarLangService ]\n})\nexport class PoCalendarComponent {\n\n  private _dateEnd: Date;\n  private _dateStart: Date;\n  private _locale: string;\n  private _selectedDate?: Date;\n\n  currentYear: number;\n  dayVisible: boolean = false;\n  displayDays: Array<number>;\n  displayDecade: Array<number>;\n  displayFinalDecade: number;\n  displayMonth: any;\n  displayMonthNumber: number;\n  displayMonths: Array<any> = Array();\n  displayStartDecade: number;\n  displayWeedDays: Array<any> = Array();\n  displayYear: number;\n  monthVisible: boolean = false;\n  overlayInvisible: boolean = true;\n  visible: boolean = false;\n  yearVisible: boolean = false;\n\n  private currentMonthNumber: number;\n  private isMobile: any = isMobile;\n  private lastDisplay: string;\n  private today: Date = new Date();\n\n  @ViewChild('days', { read: ElementRef, static: true }) elDays: ElementRef;\n  @ViewChild('months', { read: ElementRef, static: true }) elMonths: ElementRef;\n  @ViewChild('years', { read: ElementRef, static: true }) elYears: ElementRef;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Data mÃ¡xima possÃ­vel de ser selecionada no calendÃ¡rio.\n   */\n  @Input('p-date-end') set dateEnd(val: Date) {\n    if (val && val instanceof Date) {\n      const year = val.getFullYear();\n      const month = val.getMonth();\n      const day = val.getDate();\n\n      const date = new Date(year, month, day, 23, 59, 59);\n      setYearFrom0To100(date, year);\n\n      this._dateEnd = date;\n    } else {\n      this._dateEnd = undefined;\n    }\n  }\n  get dateEnd() {\n    return this._dateEnd;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Idioma do calendÃ¡rio.\n   *\n   * Valores vÃ¡lidos:\n   *  - `pt`\n   *  - `en`\n   *  - `es`\n   */\n  @Input('p-locale') set locale(locale: string) {\n    this._locale = poCalendarLocales.includes(locale) ? locale : poCalendarLocaleDefault;\n    this.initializeLanguage();\n  }\n  get locale() {\n    return this._locale;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Data selecionada no calendÃ¡rio.\n   */\n  @Input('p-selected-date') set selectedDate(selectedDate: Date) {\n    this._selectedDate  = selectedDate && selectedDate instanceof Date ? selectedDate : undefined;\n  }\n  get selectedDate(): Date {\n    return this._selectedDate;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Data mÃ­nima possÃ­vel de ser selecionada no calendÃ¡rio.\n   */\n  @Input('p-date-start') set dateStart(val: Date) {\n    if (val && val instanceof Date) {\n      const year = val.getFullYear();\n      const month = val.getMonth();\n      const day = val.getDate();\n\n      const date = new Date(year, month, day, 0, 0, 0);\n      setYearFrom0To100(date, year);\n\n      this._dateStart = date;\n    } else {\n      this._dateStart = undefined;\n    }\n  }\n  get dateStart() {\n    return this._dateStart;\n  }\n\n  @Output('p-selected-dateChange') selectedDateChange = new EventEmitter<Date>();\n  @Output('p-submit') submit = new EventEmitter<Date>();\n\n  constructor(\n    private poCalendarService: PoCalendarService,\n    private poCalendarLangService: PoCalendarLangService) {\n  }\n\n  close() {\n    this.overlayInvisible = true;\n    this.visible = false;\n  }\n\n  // ObtÃ©m um array de todos os anos desta dÃ©cada\n  getArrayDecade(year) {\n    this.displayDecade = Array();\n\n    if (year % 10 !== 0) {\n      while (year % 10 !== 0) {\n        year--;\n      }\n    }\n    this.updateDecade(year);\n  }\n\n  getBackgroundColor(displayValue: number, propertyValue: number) {\n    return (displayValue === propertyValue) ? 'po-calendar-box-background-selected' : 'po-calendar-box-background';\n  }\n\n  getDayBackgroundColor(date: Date) {\n    if (this.equalsDate(date, this.selectedDate)) {\n      return 'po-calendar-box-background-selected';\n    } else if (this.equalsDate(date, this.today)) {\n      return 'po-calendar-box-background-today';\n    } else if (date) {\n      if (validateDateRange(date, this.dateStart, this.dateEnd)) {\n        return 'po-calendar-box-background';\n      } else {\n        return 'po-calendar-box-background-disabled';\n      }\n    } else {\n      return '';\n    }\n  }\n\n  getDayForegroundColor(date: Date) {\n    if (this.equalsDate(date, this.selectedDate)) {\n      return 'po-calendar-box-foreground-selected';\n    } else if (this.equalsDate(date, this.today)) {\n      return 'po-calendar-box-foreground-today';\n    } else {\n      if (validateDateRange(date, this.dateStart, this.dateEnd)) {\n        return 'po-calendar-box-foreground';\n      } else {\n        return 'po-calendar-box-foreground-disabled';\n      }\n    }\n  }\n\n  getForegroundColor(displayValue: number, propertyValue: number) {\n    return (displayValue === propertyValue) ? 'po-calendar-box-foreground-selected' : 'po-calendar-box-foreground';\n  }\n\n  getWordMonth() {\n    return this.poCalendarLangService.getWordMonth();\n  }\n\n  getWordYear() {\n    return this.poCalendarLangService.getWordYear();\n  }\n\n  init() {\n    this.selectedDate ? this.updateDate(this.selectedDate) : this.updateDate(this.today);\n\n    this.initializeLanguage();\n\n    this.selectDay();\n\n    if (this.isMobile()) {\n      this.overlayInvisible = false;\n    }\n\n    this.visible = true;\n  }\n\n  initializeLanguage() {\n    this.poCalendarLangService.setLanguage(this.locale);\n    this.displayWeedDays = this.poCalendarLangService.getArrayWeekDays();\n    this.displayMonths = this.poCalendarLangService.getArrayMonths();\n  }\n\n  onNextMonth() {\n    if (this.displayMonthNumber < 11) {\n      this.updateDisplay(this.displayYear, this.displayMonthNumber + 1);\n    } else {\n      this.updateDisplay(this.displayYear + 1, 0);\n    }\n  }\n\n  onPrevMonth() {\n    if (this.displayMonthNumber > 0) {\n      this.updateDisplay(this.displayYear, this.displayMonthNumber - 1);\n    } else {\n      this.updateDisplay(this.displayYear - 1, 11);\n    }\n  }\n\n  // Ao selecionar uma data\n  onSelectDate(date: Date) {\n    if (validateDateRange(date, this.dateStart, this.dateEnd)) {\n      this.selectedDate = date;\n      this.selectedDateChange.emit(date);\n      this.submit.emit(date);\n    }\n  }\n\n  // Ao selecionar um mÃªs\n  onSelectMonth(year: number, month: number) {\n    this.selectDay();\n    this.updateDisplay(year, month);\n  }\n\n  // Ao selecionar um ano\n  onSelectYear(year: number, month: number) {\n    // Se veio da tela de seleÃ§Ã£o de mÃªs\n    this.lastDisplay === 'month' ? this.selectMonth() : this.selectDay();\n\n    this.currentYear = year;\n    this.updateDisplay(year, month);\n  }\n\n  selectDay() {\n    this.dayVisible = true;\n    this.monthVisible = false;\n    this.yearVisible = false;\n    this.lastDisplay = 'day';\n  }\n\n  selectMonth() {\n    this.dayVisible = false;\n    this.monthVisible = true;\n    this.yearVisible = false;\n    this.lastDisplay = 'month';\n  }\n\n  selectYear() {\n    this.dayVisible = false;\n    this.monthVisible = false;\n    this.yearVisible = true;\n  }\n\n  setMobileVisualization() {\n    return this.isMobile() ? 'po-calendar po-calendar-mobile' : 'po-calendar';\n  }\n\n  updateYear(value: number) {\n    this.updateDisplay(this.displayYear + value, this.displayMonthNumber);\n  }\n\n  private addAllYearsInDecade(year: number) {\n    let i;\n    for (i = year; i < year + 10; i++) {\n      this.displayDecade.push(i);\n    }\n  }\n\n  private equalsDate(date1: Date, date2: Date): boolean {\n    try {\n      return date1.getFullYear() === date2.getFullYear() &&\n        date1.getMonth() === date2.getMonth() &&\n        date1.getDate() === date2.getDate();\n    } catch (error) {\n      return false;\n    }\n  }\n\n  private updateDate(date: Date) {\n    this.currentMonthNumber = date.getMonth();\n    this.currentYear = date.getFullYear();\n    this.updateDisplay(this.currentYear, this.currentMonthNumber);\n  }\n\n  private updateDecade(year: number) {\n    this.addAllYearsInDecade(year);\n    this.displayStartDecade = year;\n    this.displayFinalDecade = year + 9;\n  }\n\n  private updateDisplay(year: number, month: number) {\n    const calendarArray = this.poCalendarService.monthDays(year, month);\n    this.displayDays = [].concat.apply([], calendarArray);\n    this.displayMonthNumber = month;\n    this.displayMonth = this.displayMonths[month];\n    this.displayYear = year;\n    this.getArrayDecade(year);\n  }\n\n}\n","import { ElementRef, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * @docsPrivate\n *\n * Este componente Ã© de uso interno utilizado por componentes de entrada de dados com o objetivo de resetar as informaÃ§Ãµes do model.\n *\n * Por padrÃ£o limpa o valor do campo e executa o mÃ©todo onChangePropagate, caso tenha a necessidade de tratar a funÃ§Ã£o de limpar o campo,\n * deve implementar a interface PoClean.\n */\nexport abstract class PoCleanBaseComponent {\n\n  /** Nesta propriedade deve-se informar o elementRef do campo de entrada que utilizarÃ¡ o po-clean. */\n  @Input('p-element-ref') inputRef: ElementRef;\n\n  /** Valor que serÃ¡ atribuÃ­do ao campo quando for clicado no po-clean. */\n  @Input('p-default-value') defaultValue?: string = '';\n\n  /**\n   * Evento disparado quando executada aÃ§Ã£o do po-clean.\n   * Este evento deve ser usado para avisar para o componente que estÃ¡ usando o po-clean, que o botÃ£o foi disparado,\n   * e provavelmente serÃ¡ preciso emitir o evento para atualizar o model.\n   */\n  @Output('p-change-event') changeEvent?: EventEmitter<any> = new EventEmitter<any>();\n\n  protected parentComponent: any;\n\n  clear() {\n    this.setInputValue(this.defaultValue);\n    this.changeEvent.emit(this.defaultValue);\n  }\n\n  showIcon() {\n    return this.defaultValue !== this.getInputValue() && this.hasCleanAttr() && !this.isDisabled() && !this.isReadonly();\n  }\n\n  // Este mÃ©todo verifica se o componente pai possui a propriedade clean diferente de vazio,\n  // ou seja, se o po-clean deve ser usado.\n  private hasCleanAttr(): boolean {\n    return this.parentComponent.clean;\n  }\n\n  // Este mÃ©todo verifica se o componente pai estÃ¡ desabilitado.\n  private isDisabled(): boolean {\n    return this.parentComponent.disabled;\n  }\n\n  // Este mÃ©todo verifica se o componente pai estÃ¡ somente leitura.\n  private isReadonly(): boolean {\n    return this.parentComponent.readonly;\n  }\n\n  abstract setInputValue(value: string): void;\n\n  abstract getInputValue(): string;\n\n}\n","import { Component, ViewContainerRef } from '@angular/core';\n\nimport { PoCleanBaseComponent } from './po-clean-base.component';\n\n/**\n * @docsPrivate\n *\n * @docsExtends PoCleanBaseComponent\n *\n * @examplePrivate\n *\n * <example-private name=\"po-clean-labs\" title=\"Portinari Clean Labs\">\n *   <file name=\"sample-po-clean-labs.component.html\"> </file>\n *   <file name=\"sample-po-clean-labs.component.ts\"> </file>\n * </example-private>\n */\n@Component({\n  selector: 'po-clean',\n  templateUrl: './po-clean.component.html'\n})\nexport class PoCleanComponent extends PoCleanBaseComponent {\n\n  constructor(private viewRef: ViewContainerRef) {\n    super();\n    this.parentComponent = this.viewRef['_view']['component'];\n  }\n\n  setInputValue(value?: string) {\n    if (this.inputRef && this.inputRef.nativeElement) {\n      this.inputRef.nativeElement.value = value;\n    }\n  }\n\n  getInputValue() {\n    if (this.inputRef && this.inputRef.nativeElement) {\n      return this.inputRef.nativeElement.value;\n    }\n  }\n\n}\n","import { ControlValueAccessor } from '@angular/forms';\nimport { EventEmitter, Input, Output } from '@angular/core';\n\nimport { convertToBoolean, uuid } from './../../../utils/util';\nimport { InputBoolean } from '../../../decorators';\n\n/**\n * @description\n *\n * O componente `po-checkbox` exibe uma caixa de opÃ§Ã£o com um texto ao lado, na qual Ã© possÃ­vel marcar e desmarcar atravÃ©s tanto\n * no *click* do *mouse* quanto por meio da tecla *space* quando estiver com foco.\n *\n * Cada opÃ§Ã£o poderÃ¡ receber um estado de marcado, desmarcado, indeterminado e desabilitado, como tambÃ©m uma aÃ§Ã£o que serÃ¡ disparada quando\n * ocorrer mudanÃ§as do valor.\n *\n * > O *model* deste componente aceitarÃ¡ valores igual Ã  `true`, `false` ou `null` para quando for indeterminado.\n */\nexport abstract class PoCheckboxBaseComponent implements ControlValueAccessor {\n\n  checkboxValue: boolean | null;\n  id = uuid();\n  propagateChange: any;\n\n  private _disabled?: boolean = false;\n\n  /** Define o nome do *checkbox*. */\n  @Input('name') name: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Aplica foco no elemento ao ser iniciado.\n   *\n   * > Caso mais de um elemento seja configurado com essa propriedade, apenas o Ãºltimo elemento declarado com ela terÃ¡ o foco.\n   *\n   * @default `false`\n   */\n  @Input('p-auto-focus') @InputBoolean() autoFocus: boolean = false;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o estado do *checkbox* como desabilitado.\n   *\n   * @default `false`\n   */\n  @Input('p-disabled') set disabled(value: boolean) {\n    this._disabled = convertToBoolean(value);\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  /** Texto de exibiÃ§Ã£o do *checkbox*. */\n  @Input('p-label') label?: string;\n\n  /** Evento disparado quando o valor do *checkbox* for alterado. */\n  @Output('p-change') change?: EventEmitter<any> = new EventEmitter<any>();\n\n  changeValue() {\n    if (this.propagateChange) {\n      this.propagateChange(this.checkboxValue);\n    }\n\n    this.change.emit(this.checkboxValue);\n  }\n\n  checkOption(value: boolean | null) {\n    if (!this.disabled) {\n      this.changeModelValue(!value);\n      this.changeValue();\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void { }\n\n  writeValue(value: any) {\n    if (value !== this.checkboxValue) {\n      this.changeModelValue(value);\n    }\n  }\n\n  protected abstract changeModelValue(value: boolean | null);\n}\n","/**\n * @usedBy PoComboComponent\n *\n * @description\n *\n * Define o tipo de busca usado no po-combo.\n */\nexport enum PoComboFilterMode {\n  /** Verifica se o texto *inicia* com o valor pesquisado. Caso nÃ£o seja especificado um tipo, serÃ¡ esse o utilizado. */\n  startsWith,\n  /** Verifica se o texto *contÃ©m* o valor pesquisado. */\n  contains,\n  /** Verifica se o texto *finaliza* com o valor pesquisado. */\n  endsWith\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, forwardRef, ViewChild, AfterViewInit } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { PoKeyCodeEnum } from './../../../enums/po-key-code.enum';\n\nimport { PoCheckboxBaseComponent } from './po-checkbox-base.component';\n\n/**\n * @docsExtends PoCheckboxBaseComponent\n *\n * @example\n *\n * <example name=\"po-checkbox-basic\" title=\"Portinari Checkbox Basic\">\n *   <file name=\"sample-po-checkbox-basic/sample-po-checkbox-basic.component.html\"> </file>\n *   <file name=\"sample-po-checkbox-basic/sample-po-checkbox-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-checkbox-labs\" title=\"Portinari Checkbox Labs\">\n *   <file name=\"sample-po-checkbox-labs/sample-po-checkbox-labs.component.html\"> </file>\n *   <file name=\"sample-po-checkbox-labs/sample-po-checkbox-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-checkbox-acceptance-term\" title=\"Portinari Checkbox - Acceptance Term\">\n *   <file name=\"sample-po-checkbox-acceptance-term/sample-po-checkbox-acceptance-term.component.html\"> </file>\n *   <file name=\"sample-po-checkbox-acceptance-term/sample-po-checkbox-acceptance-term.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-checkbox',\n  templateUrl: './po-checkbox.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PoCheckboxComponent),\n      multi: true\n    }\n  ]\n})\nexport class PoCheckboxComponent extends PoCheckboxBaseComponent implements AfterViewInit {\n\n  @ViewChild('checkboxLabel', { static: true }) checkboxLabel: ElementRef;\n\n  constructor(private changeDetector: ChangeDetectorRef) {\n    super();\n  }\n\n  /**\n   * FunÃ§Ã£o que atribui foco ao *checkbox*.\n   *\n   * Para utilizÃ¡-la Ã© necessÃ¡rio capturar a referÃªncia do componente no DOM atravÃ©s do `ViewChild`, como por exemplo:\n   *\n   * ```\n   * ...\n   * import { ViewChild } from '@angular/core';\n   * import { PoCheckboxComponent } from '@portinari/portinari-ui';\n   *\n   * ...\n   *\n   * @ViewChild(PoCheckboxComponent, { static: true }) checkbox: PoCheckboxComponent;\n   *\n   * focusCheckbox() {\n   *   this.checkbox.focus();\n   * }\n   * ```\n   */\n  focus(): void {\n    if (this.checkboxLabel && !this.disabled) {\n      this.checkboxLabel.nativeElement.focus();\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.autoFocus) {\n      this.focus();\n    }\n  }\n\n  onKeyDown(event: KeyboardEvent, value: boolean) {\n    if (event.which === PoKeyCodeEnum.space || event.keyCode === PoKeyCodeEnum.space) {\n      this.checkOption(value);\n\n      event.preventDefault();\n    }\n  }\n\n  protected changeModelValue(value: boolean | null) {\n    this.checkboxValue = (typeof value === 'boolean' || value === null) ? value : false;\n    this.changeDetector.detectChanges();\n  }\n\n}\n","import { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\nimport { EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nimport { browserLanguage, convertToBoolean, isTypeof, removeDuplicatedOptions, poLocaleDefault, validValue } from '../../../utils/util';\nimport { InputBoolean } from '../../../decorators';\nimport { requiredFailed } from '../validators';\n\nimport { PoComboFilter } from './interfaces/po-combo-filter.interface';\nimport { PoComboFilterMode } from './po-combo-filter-mode.enum';\nimport { PoComboFilterService } from './po-combo-filter.service';\nimport { PoComboGroup } from './interfaces/po-combo-group.interface';\nimport { PoComboLiterals } from './interfaces/po-combo-literals.interface';\nimport { PoComboOption } from './interfaces/po-combo-option.interface';\nimport { PoComboOptionGroup } from './interfaces/po-combo-option-group.interface';\n\nconst PO_COMBO_DEBOUNCE_TIME_DEFAULT = 400;\nconst PO_COMBO_FIELD_LABEL_DEFAULT = 'label';\nconst PO_COMBO_FIELD_VALUE_DEFAULT = 'value';\n\nexport const poComboLiteralsDefault = {\n  en: <PoComboLiterals> {\n    noData: 'No data found'\n  },\n  es: <PoComboLiterals> {\n    noData: 'Datos no encontrados'\n  },\n  pt: <PoComboLiterals> {\n    noData: 'Nenhum dado encontrado'\n  },\n  ru: <PoComboLiterals> {\n    noData: 'ÐÐ°Ð½Ð½ÑÐµ Ð½Ðµ Ð½Ð°Ð¹Ð´ÐµÐ½Ñ'\n  }\n};\n\n/**\n * @description\n *\n * O `po-combo` exibe uma lista de opÃ§Ãµes com fÃ¡cil seleÃ§Ã£o e filtragem.\n *\n * AlÃ©m da exibiÃ§Ã£o padrÃ£o, nele Ã© possÃ­vel listar as opÃµes em agrupamentos.\n *\n * Ã possÃ­vel selecionar e navegar entre as opÃ§Ãµes da lista tanto atravÃ©s do *mouse* quanto do teclado. No teclado navegue com\n * as setas e pressione *Enter* na opÃ§Ã£o que desejar.\n *\n * Com ele tambÃ©m Ã© possÃ­vel definir uma lista Ã  partir da requisiÃ§Ã£o de um serviÃ§o definido em `p-filter-service`.\n *\n * Em `p-filter-mode`, o filtro poderÃ¡ ser configurado para buscar opÃµes que correspondam ao inÃ­cio, fim ou que contenha o valor digitado.\n *\n * O `po-combo` guarda o Ãºltimo valor caso o usuÃ¡rio desista de uma busca, deixando o campo ou pressionando *Esc*. Caso seja digitado no\n * campo de busca a descriÃ§Ã£o completa de um item, entÃ£o a seleÃ§Ã£o serÃ¡ automaticamente efetuada ao deixar o campo ou pressionando *Enter*.\n */\nexport abstract class PoComboBaseComponent implements ControlValueAccessor, OnInit, Validator {\n\n  private _changeOnEnter?: boolean = false;\n  private _debounceTime?: number = 400;\n  private _disabled?: boolean = false;\n  private _disabledInitFilter?: boolean = false;\n  private _fieldLabel?: string = 'label';\n  private _fieldValue?: string = 'value';\n  private _filterMinlength?: number = 0;\n  private _filterMode?: PoComboFilterMode = PoComboFilterMode.startsWith;\n  private _filterParams?: any;\n  private _filterService?: PoComboFilter | string;\n  private _literals?: PoComboLiterals;\n  private _options: Array<PoComboOption | PoComboOptionGroup> = [];\n  private _required?: boolean = false;\n  private _sort?: boolean = false;\n\n  protected cacheStaticOptions: Array<PoComboOption | PoComboGroup> = [];\n  protected comboOptionsList: Array<PoComboOption | PoComboGroup> = [];\n\n  cacheOptions: Array<PoComboOption | PoComboGroup> = [];\n  defaultService: PoComboFilterService;\n  firstInWriteValue: boolean = true;\n  isFirstFilter: boolean = true;\n  isFiltering: boolean = false;\n  keyupSubscribe: any;\n  onModelChange: any;\n  onModelTouched: any;\n  previousSearchValue: string = '';\n  selectedOption: PoComboOption | PoComboGroup;\n  selectedValue: any;\n  selectedView: any;\n  service: PoComboFilterService;\n  visibleOptions: Array<PoComboOption | PoComboGroup> = [];\n\n  private validatorChange: any;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Aplica foco no elemento ao ser iniciado.\n   *\n   * > Caso mais de um elemento seja configurado com essa propriedade, apenas o Ãºltimo elemento declarado com ela terÃ¡ o foco.\n   *\n   * @default `false`\n   */\n  @Input('p-auto-focus') @InputBoolean() autoFocus: boolean = false;\n\n  /** Label no componente. */\n  @Input('p-label') label?: string;\n\n  /** Texto de apoio para o campo. */\n  @Input('p-help') help?: string;\n\n  /** Mensagem apresentada enquanto o campo estiver vazio. */\n  @Input('p-placeholder') placeholder?: string = '';\n\n  /** Nome do componente. */\n  @Input('name') name: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   * Nesta propriedade deve ser informada a URL do serviÃ§o em que serÃ¡ realizado o filtro para carregamento da lista de\n   * itens no componente.\n   * Caso haja a necessidade de customizaÃ§Ã£o, entÃ£o pode ser informado um serviÃ§o implementando a interface PoComboFilter.\n   *\n   * Caso utilizado uma URL, o serviÃ§o deve ser retornado no padrÃ£o API TOTVS e utiliza as propriedades\n   * `p-field-label` e `p-field-value` para a construÃ§Ã£o da lista de itens.\n   *\n   * Quando utilizada uma URL de serviÃ§o, entÃ£o serÃ¡ concatenada nesta URL o valor que deseja-se filtrar da seguinte forma:\n   * ```\n   * url + ?filter=Peter\n   * ```\n   *\n   * Se for definida a propriedade `p-filter-params`, a mesma tambÃ©m serÃ¡ concatenada. Por exemplo, para o\n   * parÃ¢metro `{ age: 23 }` a URL ficaria:\n   *\n   * ```\n   * url + ?page=1&pageSize=20&age=23&filter=Peter\n   * ```\n   */\n  @Input('p-filter-service') set filterService(service: PoComboFilter | string) {\n    this._filterService = service;\n\n    this.configAfterSetFilterService(service);\n  }\n\n  get filterService(): PoComboFilter | string {\n    return this._filterService;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   * Esta propriedade define em quanto tempo (em milissegundos), aguarda para acionar o evento de filtro apÃ³s cada pressionamento de tecla.\n   * SerÃ¡ utilizada apenas quando houver serviÃ§o (`p-filter-service`).\n   *\n   * @default `400`\n   */\n  @Input('p-debounce-time') set debounceTime(value: number) {\n    const parsedValue = parseInt(<any> value, 10);\n\n    this._debounceTime = !isNaN(parsedValue) && parsedValue > 0 ? parsedValue : PO_COMBO_DEBOUNCE_TIME_DEFAULT;\n\n    this.unsubscribeKeyupObservable();\n    this.initInputObservable();\n  }\n\n  get debounceTime(): number {\n    return this._debounceTime;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   * Desabilita o filtro inicial no serviÃ§o, que Ã© executado no primeiro clique no campo.\n   *\n   * @default `false`\n   *\n   */\n  @Input('p-disabled-init-filter') set disabledInitFilter(value: boolean) {\n    this._disabledInitFilter = convertToBoolean(value);\n  }\n\n  get disabledInitFilter(): boolean {\n    return this._disabledInitFilter;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   * Deve ser informado o nome da propriedade do objeto que serÃ¡ utilizado para a conversÃ£o dos itens apresentados na lista do componente\n   * (`p-options`), esta propriedade serÃ¡ responsÃ¡vel pelo valor de cada item da lista.\n   *\n   * NecessÃ¡rio quando informar o serviÃ§o como URL e o mesmo nÃ£o estiver retornando uma lista de objetos no padrÃ£o da interface\n   * PoComboOption.\n   *\n   * @default `value`\n   */\n  @Input('p-field-value') set fieldValue(value: string) {\n    this._fieldValue = value || PO_COMBO_FIELD_VALUE_DEFAULT;\n\n    if (isTypeof(this.filterService, 'string') && this.service) {\n      this.service.fieldValue = this._fieldValue;\n    }\n  }\n\n  get fieldValue() {\n    return this._fieldValue;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   * Deve ser informado o nome da propriedade do objeto que serÃ¡ utilizado para a conversÃ£o dos itens apresentados na lista do componente\n   * (`p-options`), esta propriedade serÃ¡ responsÃ¡vel pelo texto de apresentaÃ§Ã£o de cada item da lista.\n   *\n   * NecessÃ¡rio quando informar o serviÃ§o como URL e o mesmo nÃ£o estiver retornando uma lista de objetos no padrÃ£o da interface\n   * PoComboOption.\n   *\n   * @default `label`\n   */\n  @Input('p-field-label') set fieldLabel(value: string) {\n    this._fieldLabel = value || PO_COMBO_FIELD_LABEL_DEFAULT;\n\n    if (isTypeof(this.filterService, 'string') && this.service) {\n      this.service.fieldLabel = this._fieldLabel;\n    }\n  }\n\n  get fieldLabel() {\n    return this._fieldLabel;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   * Valor mÃ­nimo de caracteres para realizar o filtro no serviÃ§o.\n   *\n   * @default `0`\n   */\n  @Input('p-filter-minlength') set filterMinlength(value: number) {\n    const parseValue = (typeof value === 'string') ? parseInt(value, 10) : value;\n\n    this._filterMinlength = Number.isInteger(parseValue) ? parseValue : 0;\n  }\n\n  get filterMinlength() {\n    return this._filterMinlength;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   * Indica que o campo serÃ¡ obrigatÃ³rio.\n   *\n   * @default `false`\n   */\n  @Input('p-required') set required(required: boolean) {\n    this._required = convertToBoolean(required);\n\n    this.validateModel(this.selectedValue);\n  }\n\n  get required() {\n    return this._required;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   * Indica que o evento `p-change` sÃ³ serÃ¡ disparado ao clicar ou pressionar a tecla \"Enter\" sobre uma opÃ§Ã£o selecionada.\n   *\n   * @default `false`\n   */\n  @Input('p-change-on-enter') set changeOnEnter(changeOnEnter: boolean) {\n    this._changeOnEnter = convertToBoolean(changeOnEnter);\n  }\n\n  get changeOnEnter() {\n    return this._changeOnEnter;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   * Indica que o campo serÃ¡ desabilitado.\n   *\n   * @default `false`\n   */\n  @Input('p-disabled') set disabled(disabled: boolean) {\n    this._disabled = convertToBoolean(disabled);\n\n    this.validateModel(this.selectedValue);\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o Ã­cone que serÃ¡ exibido no inÃ­cio do campo.\n   *\n   * > Veja a disponibilidade de Ã­cones em [biblioteca de Ã­cones](guides/icons).\n   */\n  @Input('p-icon') icon?: string;\n\n  /** Indica que a lista definida na propriedade p-options serÃ¡ ordenada pela descriÃ§Ã£o. */\n  @Input('p-sort') set sort(sort: boolean) {\n    this._sort = convertToBoolean(sort);\n    this.comboListDefinitions();\n  }\n\n  get sort() {\n    return this._sort;\n  }\n\n  /**\n   * Nesta propriedade define a lista de opÃ§Ãµes do `po-combo`.\n   *\n   * > A lista pode ser definida em dois formatos, simples ou com agrupamentos.\n   * - Utilize `PoComboOption` para lista de opÃ§Ãµes simples.\n   * - Utilize `PoComboOptionGroup` para lista de opÃ§Ãµes com agrupamento.\n   *\n   * **Importante:**\n   * - A lista deve seguir as definiÃ§Ãµes descritas nas respectivas interfaces, caso contrÃ¡rio nÃ£o exibirÃ¡ a(as) opÃ§Ã£o(Ãµes) fora dos padrÃµes.\n   * - O componente interpretarÃ¡ o formato da lista de acordo com a interface utilizada e sÃ³ exibirÃ¡ as opÃ§Ãµes correspondentes Ã  ela.\n   * - Um agrupamento sÃ³ serÃ¡ exibido se houver pelo menos uma opÃ§Ã£o vÃ¡lida.\n   */\n  @Input('p-options') set options(options: Array<PoComboOption | PoComboOptionGroup>) {\n    this._options = Array.isArray(options) ? options : [];\n\n    this.comboListDefinitions();\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `p-required`;\n   * - NÃ£o possuir `p-help` e/ou `p-label`.\n   *\n   * @default `false`\n   */\n  @Input('p-optional') optional: boolean;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o modo de pesquisa utilizado no filtro da lista de seleÃ§Ã£o: `startsWith`, `contains` ou `endsWith`.\n   *\n   * > Quando utilizar a propriedade `p-filter-service` esta propriedade serÃ¡ ignorada.\n   *\n   * @default `startsWith`\n   */\n  @Input('p-filter-mode') set filterMode(filterMode: PoComboFilterMode) {\n    this._filterMode = (filterMode in PoComboFilterMode) ? filterMode : PoComboFilterMode.startsWith;\n    switch (this._filterMode.toString()) {\n      case 'startsWith':\n        this._filterMode = PoComboFilterMode.startsWith;\n        break;\n      case 'contains':\n        this._filterMode = PoComboFilterMode.contains;\n        break;\n      case 'endsWith':\n        this._filterMode = PoComboFilterMode.endsWith;\n        break;\n    }\n  }\n\n  get filterMode(): PoComboFilterMode {\n    return this._filterMode;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Valor que serÃ¡ repassado como parÃ¢metro para a URL ou aos mÃ©todos do serviÃ§o que implementam a interface *PoComboFilter*.\n   *\n   * > Caso a lista contenha agrupamentos, os mesmos sÃ³ serÃ£o exibidos se houver no mÃ­nimo uma opÃ§Ã£o que corresponda Ã  pesquisa.\n   */\n  @Input('p-filter-params') set filterParams(filterParams: any) {\n    this._filterParams = (filterParams || filterParams === 0 || filterParams === false) ? filterParams : undefined;\n  }\n\n  get filterParams() {\n    return this._filterParams;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com as literais usadas no `po-combo`.\n   *\n   * Para utilizar basta passar a literal que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: PoComboLiterals = {\n   *    noData: 'Nenhum valor'\n   *  };\n   * ```\n   *\n   * E para carregar a literal customizada, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <po-combo\n   *   [p-literals]=\"customLiterals\">\n   * </po-combo>\n   * ```\n   *\n   * > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do *browser* (pt, en, es).\n   */\n  @Input('p-literals') set literals(value: PoComboLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...poComboLiteralsDefault[poLocaleDefault],\n        ...poComboLiteralsDefault[browserLanguage()],\n        ...value\n      };\n    } else {\n      this._literals = poComboLiteralsDefault[browserLanguage()];\n    }\n  }\n\n  get literals() {\n    return this._literals || poComboLiteralsDefault[browserLanguage()];\n  }\n\n  /** Deve ser informada uma funÃ§Ã£o que serÃ¡ disparada quando houver alteraÃ§Ãµes no ngModel. */\n  @Output('p-change') change?: EventEmitter<any> = new EventEmitter<any>();\n\n  // FunÃ§Ã£o para atualizar o ngModel do componente, necessÃ¡rio quando nÃ£o for utilizado dentro da tag form.\n  @Output('ngModelChange') ngModelChange?: EventEmitter<any> = new EventEmitter<any>();\n\n  abstract setInputValue(value: any): void;\n\n  abstract applyFilter(value: string): void;\n\n  abstract getObjectByValue(value: string): void;\n\n  abstract getInputValue(): string;\n\n  abstract initInputObservable(): void;\n\n  get isOptionGroupList(): boolean {\n    return this._options.length && this._options[0].hasOwnProperty('options');\n  }\n\n  ngOnInit() {\n    this.updateComboList();\n  }\n\n  onInitService() {\n    if (this.filterService) {\n      this.setService(this.filterService);\n      this.initInputObservable();\n    }\n  }\n\n  setService(service: PoComboFilter | string) {\n    if (service) {\n      if (isTypeof(service, 'object')) {\n        this.service = <PoComboFilterService> service;\n      } else {\n        this.service = this.defaultService;\n        this.service.configProperties(<string>service, this.fieldLabel, this.fieldValue);\n      }\n    }\n  }\n\n  compareMethod(search: string, option: PoComboOption | PoComboGroup, filterMode: PoComboFilterMode) {\n    switch (filterMode) {\n      case PoComboFilterMode.startsWith:\n        return this.startsWith(search, option);\n      case PoComboFilterMode.contains:\n        return this.contains(search, option);\n      case PoComboFilterMode.endsWith:\n        return this.endsWith(search, option);\n    }\n  }\n\n  startsWith(search: string, option: PoComboOption | PoComboGroup) {\n    return option.label.toLowerCase().startsWith(search.toLowerCase());\n  }\n\n  contains(search: string, option: PoComboOption | PoComboGroup) {\n    return option.label.toLowerCase().indexOf(search.toLowerCase()) > -1;\n  }\n\n  endsWith(search: string, option: PoComboOption | PoComboGroup) {\n    return option.label.toLowerCase().endsWith(search.toLowerCase());\n  }\n\n  getOptionFromValue(value: any, options: any) {\n    return (options) ? options.find((option: any) => this.isEqual(option.value, value)) : null;\n  }\n\n  getOptionFromLabel(label: any, options: any) {\n    if (options) {\n      return options.find((option: any) => {\n        return option.label.toString().toLowerCase() === label.toString().toLowerCase();\n      });\n    } else {\n      return null;\n    }\n  }\n\n  updateSelectedValue(option: PoComboOption | PoComboGroup, isUpdateModel: boolean = true, isWriteValue = false) {\n    const optionLabel = option && option.label || '';\n\n    this.updateInternalVariables(option);\n\n    // atualiza o valor do input quando for changeOnEnter apenas se for para atualizar o model.\n    if (this.changeOnEnter && isUpdateModel) {\n      this.setInputValue(optionLabel);\n    } else if (!this.changeOnEnter) {\n      this.setInputValue(optionLabel);\n    }\n\n    if (isUpdateModel) {\n      const optionValue = option && option.value || undefined;\n\n      this.updateModel(optionValue, isWriteValue);\n    }\n  }\n\n  callModelChange(value: any) {\n    // Caso o componente estiver dentro de um form, terÃ¡ acesso ao mÃ©todo onModelChange.\n    return (this.onModelChange) ? this.onModelChange(value) : this.ngModelChange.emit(value);\n  }\n\n  isEqual(value: any, inputValue: any): boolean {\n    if ((value || value === 0) && inputValue) {\n      return value.toString() === inputValue.toString();\n    }\n\n    if ((value === null && inputValue !== null) || (value === undefined && inputValue !== undefined)) {\n      value = `${value}`; // Transformando em string\n    }\n\n    return value === inputValue;\n  }\n\n  searchForLabel(search: string, options: Array<PoComboOption | PoComboGroup>, filterMode: PoComboFilterMode) {\n    if (search && options && options.length) {\n      const newOptions: Array<PoComboOption | PoComboGroup> = [];\n      let addedOptionsGroupTitle: boolean = false;\n      let optionsGroupTitle: PoComboGroup;\n\n      options.forEach(option => {\n\n        if ('options' in option) {\n          addedOptionsGroupTitle = false;\n          return optionsGroupTitle = option;\n        }\n\n        if (option.label && (this.compareMethod(search, option, filterMode) || this.service)) {\n          if (this.isOptionGroupList && !addedOptionsGroupTitle) {\n            newOptions.push(optionsGroupTitle);\n            addedOptionsGroupTitle = true;\n          }\n\n          newOptions.push(option);\n        }\n      });\n\n      this.selectedView = newOptions[this.isOptionGroupList ? 1 : 0];\n      this.updateComboList(newOptions);\n    } else {\n      this.updateComboList();\n    }\n  }\n\n  updateComboList(options?: Array<PoComboOption | PoComboGroup>) {\n    const copyOptions = options || [...this.comboOptionsList];\n\n    const newOptions = !options && this.selectedValue ? [{ ...this.selectedOption }] : copyOptions;\n\n    if (newOptions) {\n      this.visibleOptions = newOptions;\n\n      if (!this.selectedView && this.visibleOptions.length) {\n        this.selectedView = copyOptions.find(option => option.value !== undefined);\n      }\n    }\n  }\n\n  getNextOption(value: any, options: Array<PoComboOption | PoComboGroup>, reverse: boolean = false) {\n    const optionsList = reverse ? options.slice(0).reverse() : options.slice(0);\n    let optionFound = null;\n    let found = false;\n\n    for (const option of optionsList) {\n      if (option.value && !optionFound) {\n        optionFound = option;\n      }\n      if (option.value && found) {\n        return option;\n      }\n      if (this.isEqual(option.value, value)) {\n        found = true;\n      }\n    }\n\n    return optionFound;\n  }\n\n  getIndexSelectedView() {\n    for (let i = 0; i < this.visibleOptions.length; i++) {\n      if (this.compareObjects(this.visibleOptions[i], this.selectedView)) {\n        return i;\n      }\n    }\n    return null;\n  }\n\n  compareObjects(obj1: any, obj2: any) {\n    return JSON.stringify(obj1) === JSON.stringify(obj2);\n  }\n\n  verifyValidOption() {\n    const inputValue = this.getInputValue();\n\n    const optionFound = this.getOptionFromLabel(inputValue, this.comboOptionsList);\n\n    if (optionFound && optionFound.value !== this.selectedValue) {\n\n      this.updateSelectedValue(optionFound);\n\n      this.previousSearchValue = optionFound.label;\n      return;\n\n    } else if (this.selectedValue && this.selectedOption && this.selectedOption.label !== inputValue) {\n      this.updateSelectedValueWithOldOption();\n\n      this.previousSearchValue = this.selectedOption.label;\n      return;\n\n    } else if (inputValue && !optionFound) {\n      const isInputValueDiffSelectedLabel = !!(this.selectedOption && this.selectedOption.label !== inputValue);\n\n      this.updateSelectedValue(null, isInputValueDiffSelectedLabel || this.changeOnEnter);\n\n      this.previousSearchValue = '';\n      return;\n    }\n\n  }\n\n  // Recebe as alteraÃ§Ãµes do model\n  writeValue(value: any) {\n\n    if (validValue(value) && !this.service && this.comboOptionsList && this.comboOptionsList.length) {\n      const option = this.getOptionFromValue(value, this.comboOptionsList);\n      this.updateSelectedValue(option);\n      this.updateComboList();\n      return;\n    }\n\n    // Se houver serviÃ§o busca pelo model.\n    if (value && this.service) {\n      return this.getObjectByValue(value);\n    }\n\n    if (!validValue(value)) {\n      this.updateSelectedValue(null, true, true);\n      this.updateComboList();\n    }\n\n  }\n\n  registerOnChange(fn: any): void {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onModelTouched = fn;\n  }\n\n  registerOnValidatorChange(fn: () => void) {\n    this.validatorChange = fn;\n  }\n\n  validate(abstractControl: AbstractControl): { [key: string]: any; } {\n\n    if ((requiredFailed(this.required, this.disabled, abstractControl.value))) {\n      return {\n        required: {\n          valid: false,\n        }\n      };\n    }\n\n  }\n\n  protected validateModel(model: any) {\n    if (this.validatorChange) {\n      this.validatorChange(model);\n    }\n  }\n\n  private comboListDefinitions() {\n    this.comboOptionsList = this.options.length > 0 ? this.listingComboOptions(this.options) : this.options;\n    this.cacheStaticOptions = this.comboOptionsList;\n\n    this.updateComboList();\n  }\n\n  private compareOptions(optionA: any, optionB: any) {\n    const labelA = optionA.label.toString().toLowerCase();\n    const labelB = optionB.label.toString().toLowerCase();\n\n    return (labelA < labelB) ? -1 : (labelA > labelB) ? 1 : 0;\n  }\n\n  private configAfterSetFilterService(service: PoComboFilter | string) {\n    if (service) {\n      this.comboOptionsList = [];\n      this.unsubscribeKeyupObservable();\n      this.onInitService();\n    } else {\n      this.service = undefined;\n      this.comboOptionsList = this.cacheStaticOptions;\n    }\n\n    this.visibleOptions = [];\n    this.isFirstFilter = true;\n  }\n\n  private hasDuplicatedOption(\n    options: Array<PoComboOption | PoComboGroup>,\n    currentOption: string,\n    accumulatedGroupOptions?: Array<PoComboGroup>) {\n    return options.some(option => option.label === currentOption) ||\n    accumulatedGroupOptions && accumulatedGroupOptions.some(option => option.label === currentOption);\n  }\n\n  private listingComboOptions(comboOptions: Array<PoComboOption | PoComboOptionGroup>) {\n    const comboOptionsList = comboOptions.concat();\n    const verifiedComboOptionsList = this.verifyComboOptions(comboOptionsList);\n\n    this.sortOptions(verifiedComboOptionsList);\n\n    if (this.isOptionGroupList && verifiedComboOptionsList.length > 0) {\n      return this.verifyComboOptionsGroup(verifiedComboOptionsList);\n    }\n\n    return verifiedComboOptionsList;\n  }\n\n  private sortOptions(comboOptionsList: Array<PoComboGroup>) {\n    if (comboOptionsList.length > 0 && this.sort) {\n      return comboOptionsList.sort(this.compareOptions);\n    }\n  }\n\n  private validateValue(currentOption: PoComboGroup, verifyingOptionsGroup?: boolean) {\n    const { label, options, value } = currentOption;\n\n    if (this.isOptionGroupList) {\n      return validValue(label) && options && options.length > 0 || verifyingOptionsGroup === true && validValue(value);\n    }\n\n    return validValue(value) && !options;\n  }\n\n  private verifyComboOptions(\n    comboOptions: Array<PoComboOption | PoComboOptionGroup>,\n    verifyingOptionsGroup?: boolean,\n    accumulatedGroupOptions?: Array<PoComboGroup>) {\n    return comboOptions.reduce((accumulatedOptions, currentOption) => {\n      if (\n        !this.verifyIfHasLabel(currentOption) ||\n        this.hasDuplicatedOption(accumulatedOptions, currentOption.label, accumulatedGroupOptions) ||\n        !this.validateValue(currentOption, verifyingOptionsGroup)\n      ) {\n        return accumulatedOptions;\n      }\n\n      accumulatedOptions.push(currentOption);\n      return accumulatedOptions;\n    }, []);\n  }\n\n  private verifyComboOptionsGroup(comboOptionsList: Array<PoComboOptionGroup>) {\n    return comboOptionsList.reduce((accumulatedGroupOptions, currentOption) => {\n      const { options, label } = currentOption;\n      const verifiedComboOptionsGroupList = this.verifyComboOptions(options, true, accumulatedGroupOptions);\n\n      if (verifiedComboOptionsGroupList.length > 0) {\n        this.sortOptions(verifiedComboOptionsGroupList);\n\n        accumulatedGroupOptions.push(\n          { label: label, options: true },\n          ...verifiedComboOptionsGroupList\n        );\n      }\n\n      return accumulatedGroupOptions;\n    }, []);\n  }\n\n  private verifyIfHasLabel(currentOption: PoComboGroup) {\n    const { label, options, value } = currentOption;\n\n    if (\n      this.isOptionGroupList && options && !label ||\n      !label && !value ||\n      !this.isOptionGroupList && options ) {\n      return false;\n    }\n\n    if (!currentOption.label) {\n      currentOption.label = currentOption.value.toString();\n      return true;\n    }\n\n    return true;\n  }\n\n  private unsubscribeKeyupObservable() {\n    if (this.keyupSubscribe) {\n      this.keyupSubscribe.unsubscribe();\n    }\n  }\n\n  private updateInternalVariables(option: PoComboOption | PoComboGroup) {\n    if (option) {\n      this.selectedView = option;\n      this.selectedOption = option;\n    } else {\n      this.selectedView = undefined;\n      this.selectedOption = undefined;\n    }\n  }\n\n  private updateModel(value: any, fromWriteValue = false): void {\n    if (value !== this.selectedValue) {\n\n      if (!fromWriteValue) {\n        this.callModelChange(value);\n      }\n\n      this.change.emit(value);\n    }\n\n    this.selectedValue = value;\n  }\n\n  private updateSelectedValueWithOldOption() {\n    const oldOption = this.getOptionFromValue(this.selectedValue, this.comboOptionsList);\n\n    if (oldOption && oldOption.label) {\n      return this.updateSelectedValue(oldOption);\n    }\n  }\n\n}\n","/**\n * @usedBy PoDatepickerComponent\n *\n * @description\n *\n * *Enum* que define o padrÃ£o de formataÃ§Ã£o das datas.\n *\n * > Caso um formato padrÃ£o seja definido, o mesmo nÃ£o serÃ¡ mais alterado de acordo com o formato de entrada.\n */\nexport enum PoDatepickerIsoFormat {\n\n  /** PadrÃ£o **E8601DAw** (*yyyy-mm-dd*). */\n  Basic = 'basic',\n\n  /** PadrÃ£o **E8601DZw** (*yyyy-mm-ddThh:mm:ss+|-hh:mm*). */\n  Extended = 'extended'\n\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { PoComboFilter } from './interfaces/po-combo-filter.interface';\nimport { PoComboOption } from './interfaces/po-combo-option.interface';\nimport { PoResponse } from './interfaces/po-response.interface';\nimport { validateObjectType } from '../../../utils/util';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * ServiÃ§o padrÃ£o utilizado para filtrar os dados do componente po-combo.\n */\n@Injectable()\nexport class PoComboFilterService implements PoComboFilter {\n\n  private _url: string;\n\n  fieldLabel: string = 'label';\n  fieldValue: string = 'value';\n\n  get url(): string { return this._url; }\n\n  constructor(private http: HttpClient) { }\n\n  getFilteredData(param: any, filterParams?: any): Observable<Array<PoComboOption>> {\n    const value = param.value;\n    const filterParamsValidated = validateObjectType(filterParams);\n\n    const params = { ...filterParamsValidated, filter: value };\n\n    return this.http.get(`${this.url}`, {responseType: 'json', params: params})\n      .pipe(map((response: PoResponse) => this.parseToArrayComboOption(response.items)));\n  }\n\n  getObjectByValue(value: string | number, filterParams?: any): Observable<PoComboOption> {\n    const filterParamsValidated = validateObjectType(filterParams);\n\n    return this.http.get(`${this.url}/${value}`, { params: filterParamsValidated }).pipe(map(item => this.parseToComboOption(item)));\n  }\n\n  configProperties(url: string, fieldLabel: string, fieldValue: string) {\n    this._url = url;\n    this.fieldLabel = fieldLabel;\n    this.fieldValue = fieldValue;\n  }\n\n  private parseToArrayComboOption(items: Array<any>): Array<PoComboOption> {\n    if (items && items.length > 0) {\n\n      return items.map(item => {\n        return this.parseToComboOption(item);\n      });\n\n    }\n\n    return [];\n  }\n\n  private parseToComboOption(item: any): PoComboOption {\n    if (item && item[this.fieldValue]) {\n\n      const label = item[this.fieldLabel];\n      const value = item[this.fieldValue];\n\n      return { label, value };\n    }\n  }\n\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n/**\n * @usedBy PoComboComponent\n *\n * @description\n *\n * Esta diretiva permite personalizar o conteÃºdo dos itens exibidos na lista de opÃ§Ãµes do componente.\n *\n * > Quando utilizada em dispositivos *mobile* serÃ¡ exibido o componente nativo.\n *\n * Para personalizar o conteÃºdo de cada item da lista deve-se utilizar a diretiva `p-combo-option-template` com `ng-template`\n * dentro da *tag* `po-combo`.\n *\n * Para obter a referÃªncia do item atual utilize `let-option`, com isso vocÃª terÃ¡ acesso aos valores e poderÃ¡ personalizar sua exibiÃ§Ã£o.\n *\n * Esta diretiva compÃµe-se de dois meios para uso, de forma explÃ­cita tal como em *syntax sugar*. Veja a seguir ambos, respectivamente:\n *\n * ```\n * ...\n * <po-combo\n *   name=\"combo\"\n *   [(ngModel)]=\"combo\"\n *   [p-options]=\"options\">\n *     <ng-template p-combo-option-template let-option>\n *       <option-template [option]=\"option\"></option-template>\n *     </ng-template>\n * </po-combo>\n * ...\n * ```\n *\n * ```\n * ...\n * <po-combo\n *   name=\"combo\"\n *   [(ngModel)]=\"combo\"\n *   [p-options]=\"options\">\n *     <div *p-combo-option-template=\"let option\">\n *       <option-template [option]=\"option\"></option-template>\n *     </div>\n * </po-combo>\n * ...\n *\n * ```\n * Para o caso de personalizaÃ§Ã£o de opÃ§Ãµes com agrupamentos, deve-se seguir a mesma orientaÃ§Ã£o acima. PorÃ©m, cabe ao desenvolvedor\n * a responsabilidade de estilizaÃ§Ã£o dos elementos da lista, tais como tÃ­tulo e links dos grupos. Abaixo hÃ¡ um exemplo de aplicaÃ§Ã£o:\n *\n * ```\n * ...\n * <ng-template p-combo-option-template let-option>\n *   <ng-container *ngIf=\"option.options; then optionsGroupTitle; else optionsGroupList\"></ng-container>\n *   <ng-template #optionsGroupTitle>\n *     <p class=\"po-combo-item-title\" [innerHtml]=\"option.label\"></p>\n *   </ng-template>\n *   <ng-template #optionsGroupList>\n *     <div class=\"po-combo-item\">\n *       <div class=\"po-row\">\n *         <po-avatar class=\"po-md-1\" p-size=\"sm\"></po-avatar>\n *         <div class=\"po-md-11\" [innerHtml]=\"option.label\"></div>\n *       </div>\n *     </div>\n *   </ng-template>\n * </ng-template>\n * ...\n *\n * ```\n */\n@Directive({\n  selector: '[p-combo-option-template]'\n})\nexport class PoComboOptionTemplateDirective {\n\n  // NecessÃ¡rio manter templateRef para o funcionamento do row template.\n  constructor(public templateRef: TemplateRef<any>) { }\n\n}\n","import { AfterViewInit, ChangeDetectorRef, Component, ContentChild, ElementRef, forwardRef,\n  IterableDiffers, OnDestroy, Renderer2, ViewChild } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { fromEvent, Subscription } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, filter, map, tap } from 'rxjs/operators';\n\nimport { PoControlPositionService } from '../../../services/po-control-position/po-control-position.service';\nimport { PoKeyCodeEnum } from './../../../enums/po-key-code.enum';\n\nimport { PoComboBaseComponent } from './po-combo-base.component';\nimport { PoComboFilterMode } from './po-combo-filter-mode.enum';\nimport { PoComboFilterService } from './po-combo-filter.service';\nimport { PoComboGroup } from './interfaces/po-combo-group.interface';\nimport { PoComboOption } from './interfaces/po-combo-option.interface';\nimport { PoComboOptionTemplateDirective } from './po-combo-option-template/po-combo-option-template.directive';\n\nconst poComboContainerOffset = 8;\nconst poComboContainerPositionDefault = 'bottom';\n\n/**\n * @docsExtends PoComboBaseComponent\n *\n * @description\n * Utilizando po-combo com serviÃ§o, Ã© possivel digitar um valor no campo de entrada e pressionar a tecla 'tab' para que o componente\n * faÃ§a uma requisiÃ§Ã£o Ã  URL informada passando o valor digitado no campo. Se encontrado o valor, entÃ£o o mesmo serÃ¡ selecionado, caso\n * nÃ£o seja encontrado, entÃ£o a lista de itens voltarÃ¡ para o estado inicial.\n *\n * @example\n *\n * <example name=\"po-combo-basic\" title=\"Portinari Combo Basic\">\n *   <file name=\"sample-po-combo-basic/sample-po-combo-basic.component.html\"> </file>\n *   <file name=\"sample-po-combo-basic/sample-po-combo-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-combo-labs\" title=\"Portinari Combo Labs\">\n *   <file name=\"sample-po-combo-labs/sample-po-combo-labs.component.html\"> </file>\n *   <file name=\"sample-po-combo-labs/sample-po-combo-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-combo-scheduling\" title=\"Portinari Combo - Scheduling\">\n *   <file name=\"sample-po-combo-scheduling/sample-po-combo-scheduling.component.html\"> </file>\n *   <file name=\"sample-po-combo-scheduling/sample-po-combo-scheduling.component.ts\"> </file>\n *   <file name=\"sample-po-combo-scheduling/sample-po-combo-scheduling.service.ts\"> </file>\n * </example>\n *\n * <example name=\"po-combo-transfer\" title=\"Portinari Combo - Banking Transfer\">\n *   <file name=\"sample-po-combo-transfer/sample-po-combo-transfer.component.html\"> </file>\n *   <file name=\"sample-po-combo-transfer/sample-po-combo-transfer.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-combo-heroes\" title=\"Portinari Combo - Heroes\">\n *   <file name=\"sample-po-combo-heroes/sample-po-combo-heroes.component.html\"> </file>\n *   <file name=\"sample-po-combo-heroes/sample-po-combo-heroes.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-combo-heroes-reactive-form\" title=\"Portinari Combo - Heroes Reactive Form\">\n *   <file name=\"sample-po-combo-heroes-reactive-form/sample-po-combo-heroes-reactive-form.component.html\"> </file>\n *   <file name=\"sample-po-combo-heroes-reactive-form/sample-po-combo-heroes-reactive-form.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-combo-hotels\" title=\"Portinari Combo - Booking Hotel\">\n *   <file name=\"sample-po-combo-hotels/sample-po-combo-hotels.component.html\"> </file>\n *   <file name=\"sample-po-combo-hotels/sample-po-combo-hotels.component.ts\"> </file>\n *   <file name=\"sample-po-combo-hotels/sample-po-combo-hotels.service.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-combo',\n  templateUrl: './po-combo.component.html',\n  providers: [\n    PoComboFilterService,\n    PoControlPositionService,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PoComboComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => PoComboComponent),\n      multi: true,\n    }\n  ]\n})\nexport class PoComboComponent extends PoComboBaseComponent implements AfterViewInit, OnDestroy {\n\n  private _isServerSearching: boolean = false;\n\n  comboIcon: string = 'po-icon-arrow-down';\n  comboOpen: boolean = false;\n  differ: any;\n  isProcessingGetObjectByValue: boolean = false;\n  scrollTop = 0;\n  service: PoComboFilterService;\n  shouldMarkLetters: boolean = true;\n\n  private clickoutListener: () => void;\n  private eventResizeListener: () => void;\n\n  private filterSubscription: Subscription;\n  private getSubscription: Subscription;\n\n  @ContentChild(PoComboOptionTemplateDirective, { static: true }) comboOptionTemplate: PoComboOptionTemplateDirective;\n\n  @ViewChild('containerElement', { read: ElementRef, static: false }) containerElement: ElementRef;\n  @ViewChild('contentElement', { read: ElementRef, static: false }) contentElement: ElementRef;\n  @ViewChild('iconArrow', { read: ElementRef, static: true }) iconElement: ElementRef;\n  @ViewChild('inputElement', { read: ElementRef, static: true }) inputElement: ElementRef;\n\n  constructor(\n    public element: ElementRef,\n    public differs: IterableDiffers,\n    public defaultService: PoComboFilterService,\n    public renderer: Renderer2,\n    private changeDetector: ChangeDetectorRef,\n    private controlPosition: PoControlPositionService,\n    private sanitized: DomSanitizer) {\n\n    super();\n\n    this.differ = differs.find([]).create(null);\n  }\n\n  set isServerSearching(value: boolean) {\n    if (value) {\n      this._isServerSearching = value;\n\n      this.changeDetector.detectChanges();\n\n      this.setContainerPosition();\n      this.initializeListeners();\n    } else {\n      this._isServerSearching = value;\n\n      this.removeListeners();\n    }\n  }\n\n  get isServerSearching() {\n    return this._isServerSearching;\n  }\n\n  ngAfterViewInit() {\n    if (this.autoFocus) {\n      this.focus();\n    }\n  }\n\n  ngOnDestroy() {\n    this.removeListeners();\n\n    if (this.filterSubscription) {\n      this.filterSubscription.unsubscribe();\n    }\n\n    if (this.getSubscription) {\n      this.getSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * FunÃ§Ã£o que atribui foco ao componente.\n   *\n   * Para utilizÃ¡-la Ã© necessÃ¡rio ter a instÃ¢ncia do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n   *\n   * ```\n   * import { PoComboComponent } from '@portinari/portinari-ui';\n   *\n   * ...\n   *\n   * @ViewChild(PoComboComponent, { static: true }) combo: PoComboComponent;\n   *\n   * focusCombo() {\n   *   this.combo.focus();\n   * }\n   * ```\n   */\n  focus(): void {\n    if (!this.disabled) {\n      this.inputElement.nativeElement.focus();\n    }\n  }\n\n  onKeyDown(event?: any) {\n    const key = event.keyCode;\n    const inputValue = event.target.value;\n\n    // busca um registro quando acionar o tab\n    if (this.service && key === PoKeyCodeEnum.tab && inputValue) {\n      this.controlComboVisibility(false);\n      return this.getObjectByValue(inputValue);\n    }\n\n    // Teclas \"up\" e \"down\"\n    if (key === PoKeyCodeEnum.arrowUp || key === PoKeyCodeEnum.arrowDown) {\n      event.preventDefault();\n\n      if (this.comboOpen) {\n        if (key === PoKeyCodeEnum.arrowUp) {\n          this.selectPreviousOption();\n        } else {\n          this.selectNextOption();\n        }\n      }\n\n      this.controlComboVisibility(true);\n      this.isFiltering = this.changeOnEnter ? this.isFiltering : false;\n      this.shouldMarkLetters = this.changeOnEnter ? this.shouldMarkLetters : false;\n      return;\n    }\n\n    // Teclas \"tab\" ou \"esc\"\n    if (key === PoKeyCodeEnum.tab || key === PoKeyCodeEnum.esc) {\n\n      if (key === PoKeyCodeEnum.esc && this.comboOpen) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n\n      this.controlComboVisibility(false);\n      this.verifyValidOption();\n\n      if (!this.service) {\n        // caso for changeOnEnter e nao ter selectedValue deve limpar o selectedView para reinicia-lo.\n        this.selectedView = this.changeOnEnter && !this.selectedValue ? undefined : this.selectedView;\n\n        this.updateComboList();\n      }\n\n      return;\n    }\n\n    // Tecla \"enter\"\n    if (key === PoKeyCodeEnum.enter && this.selectedView && this.comboOpen) {\n      const isUpdateModel = (this.selectedView.value !== this.selectedValue) || (inputValue !== this.selectedView.label);\n\n      this.controlComboVisibility(false);\n\n      this.updateSelectedValue(this.selectedView, isUpdateModel);\n      this.isFiltering = false;\n\n      this.updateComboList();\n      return;\n    }\n\n    if (key === PoKeyCodeEnum.enter) {\n      this.controlComboVisibility(true);\n    }\n  }\n\n  onKeyUp(event?: any) {\n    const key = event.keyCode || event.which;\n    const inputValue = event.target.value;\n\n    const isValidKey = (key !== PoKeyCodeEnum.arrowUp && key !== PoKeyCodeEnum.arrowDown && key !== PoKeyCodeEnum.enter);\n\n    if (isValidKey) {\n\n      if (inputValue) {\n        if (!this.service && this.previousSearchValue !== inputValue) {\n          this.shouldMarkLetters = true;\n          this.isFiltering = true;\n          this.searchForLabel(inputValue, this.comboOptionsList, this.filterMode);\n        }\n\n      } else {\n        // quando apagar rapido o campo e conter serviÃ§o, valor, nÃ£o disparava o keyup observable\n        // necessario este tratamento para retornar a lista 'default'.\n        const useDefaultOptionsService = this.service && this.selectedValue && this.selectedOption.label === this.previousSearchValue;\n\n        this.updateSelectedValue(null);\n\n        if (!this.service) {\n          this.updateComboList();\n        } else if (useDefaultOptionsService) {\n          this.updateComboList([...this.cacheOptions]);\n        }\n\n        this.isFiltering = false;\n      }\n\n      // caso o valor pesquisado for diferente do anterior deve abrir o combo\n      if (this.previousSearchValue !== inputValue) {\n        this.changeDetector.detectChanges();\n\n        this.controlComboVisibility(true);\n      }\n\n    }\n\n    this.previousSearchValue = inputValue;\n  }\n\n  initInputObservable() {\n    if (this.service) {\n      const keyupObservable = fromEvent(this.inputElement.nativeElement, 'keyup')\n                                .pipe(\n                                  filter((e: any) => this.isValidCharacterToSearch(e.keyCode)),\n                                  map((e: any) => e.currentTarget.value),\n                                  distinctUntilChanged(),\n                                  tap(() => {\n                                    this.shouldMarkLetters = false;\n                                  }),\n                                  debounceTime(this.debounceTime)\n                                );\n\n      this.keyupSubscribe = keyupObservable.subscribe(value => {\n        if (value.length >= this.filterMinlength || !value) {\n          this.controlApplyFilter(value);\n        }\n      });\n    }\n  }\n\n  controlApplyFilter(value) {\n    if (!this.isProcessingGetObjectByValue && (!this.selectedOption || value !== this.selectedOption.label)) {\n      this.applyFilter(value);\n    }\n  }\n\n  applyFilter(value: string) {\n    this.controlComboVisibility(false);\n    this.isServerSearching = true;\n\n    const param = { property: this.fieldLabel, value };\n\n    this.filterSubscription = this.service.getFilteredData(param, this.filterParams)\n      .subscribe(items => this.setOptionsByApplyFilter(value, items));\n  }\n\n  setOptionsByApplyFilter(value, items) {\n    this.shouldMarkLetters = true;\n    this.isServerSearching = false;\n    this.options = items;\n\n    this.searchForLabel(value, items, this.filterMode);\n\n    this.changeDetector.detectChanges();\n\n    this.controlComboVisibility(true);\n\n    if (this.isFirstFilter) {\n      this.isFirstFilter = !this.isFirstFilter;\n\n      this.cacheOptions = this.comboOptionsList;\n    }\n  }\n\n  getObjectByValue(value) {\n    if (!this.selectedValue) {\n      this.isProcessingGetObjectByValue = true;\n\n      this.getSubscription = this.service.getObjectByValue(value, this.filterParams)\n        .subscribe(item => this.updateOptionByFilteredValue(item));\n    }\n  }\n\n  updateOptionByFilteredValue(item) {\n    if (item) {\n      this.options = [item];\n      this.onOptionClick(item);\n    } else {\n      this.updateSelectedValue(null);\n    }\n\n    setTimeout(() => { this.isProcessingGetObjectByValue = false; }, this.debounceTime);\n  }\n\n  selectPreviousOption() {\n    const currentViewValue = this.selectedView && this.selectedView.value;\n\n    if (currentViewValue) {\n      const nextOption = this.getNextOption(currentViewValue, this.visibleOptions, true);\n\n      this.updateSelectedValue(nextOption, nextOption && nextOption.value !== currentViewValue && !this.changeOnEnter);\n    } else if (this.visibleOptions.length) {\n      const visibleOption = this.visibleOptions[this.visibleOptions.length - 1];\n\n      this.updateSelectedValue(visibleOption, visibleOption.value !== currentViewValue && !this.changeOnEnter);\n    }\n  }\n\n  selectNextOption() {\n    const currentViewValue = this.selectedView && this.selectedView.value;\n\n    if (currentViewValue) {\n      const nextOption = this.getNextOption(currentViewValue, this.visibleOptions);\n\n      this.updateSelectedValue(nextOption, nextOption && nextOption.value !== currentViewValue && !this.changeOnEnter);\n    } else if (this.visibleOptions.length) {\n      const index = this.changeOnEnter ? 1 : 0;\n\n      const visibleOption = this.visibleOptions[index];\n\n      this.updateSelectedValue(visibleOption, visibleOption.value !== currentViewValue && !this.changeOnEnter);\n    }\n  }\n\n  toggleComboVisibility(): void {\n    if (this.disabled) {\n      return;\n    }\n\n    if (this.service && !this.disabledInitFilter) {\n      this.applyFilterInFirstClick();\n    }\n\n    this.controlComboVisibility(!this.comboOpen);\n  }\n\n  applyFilterInFirstClick() {\n    if (this.isFirstFilter && !this.selectedValue) {\n      this.applyFilter('');\n    }\n  }\n\n  controlComboVisibility(toOpen: boolean) {\n    toOpen ? this.open() : this.close();\n  }\n\n  onOptionClick(option: PoComboOption | PoComboGroup, event?: any) {\n    const inputValue = this.getInputValue();\n    const isUpdateModel = (option.value !== this.selectedValue) || !!(this.selectedView && inputValue !== this.selectedView.label);\n\n    if (event) {\n      event.stopPropagation();\n    }\n\n    this.updateSelectedValue(option, isUpdateModel);\n    this.controlComboVisibility(false);\n    this.updateComboList([{ ...this.selectedView }]);\n\n    this.previousSearchValue = this.selectedView.label;\n  }\n\n  scrollTo(index) {\n    const selectedItem = this.element.nativeElement.querySelectorAll('.po-combo-item-selected');\n    const scrollTop = !selectedItem.length || (index <= 1) ? 0 : selectedItem[0].offsetTop - 88;\n\n    this.setScrollTop(scrollTop);\n  }\n\n  getInputValue() {\n    return this.inputElement.nativeElement.value;\n  }\n\n  setInputValue(value: string): void {\n    this.inputElement.nativeElement.value = value;\n  }\n\n  wasClickedOnToggle(event: MouseEvent): void {\n    if (this.comboOpen &&\n        !this.inputElement.nativeElement.contains(event.target) &&\n        !this.iconElement.nativeElement.contains(event.target) &&\n        (!this.contentElement || !this.contentElement.nativeElement.contains(event.target))) {\n      // Esconde Content do Combo quando for clicado fora\n      this.controlComboVisibility(false);\n\n      this.verifyValidOption();\n\n      // caso for changeOnEnter deve limpar o selectedView para reinicia-lo\n      this.selectedView = this.changeOnEnter && !this.selectedValue ? undefined : this.selectedView;\n\n      this.updateComboList();\n    } else {\n      if (this.service && !this.getInputValue() && !this.isFirstFilter) {\n        this.applyFilter('');\n      }\n    }\n  }\n\n  getLabelFormatted(label): SafeHtml {\n    let format = label;\n\n    if (this.isFiltering ||\n      (this.service && this.getInputValue() && !this.compareObjects(this.cacheOptions, this.visibleOptions) && this.shouldMarkLetters)) {\n\n      const labelInput = this.getInputValue().toString().toLowerCase();\n      const labelLowerCase = label.toLowerCase();\n\n      const openTagBold = '<span class=\"po-font-text-large-bold\">';\n      const closeTagBold = '</span>';\n\n      let startString;\n      let middleString;\n      let endString;\n\n      switch (this.filterMode) {\n        case PoComboFilterMode.startsWith:\n        case PoComboFilterMode.contains:\n          startString = label.substring(0, labelLowerCase.indexOf(labelInput));\n          middleString = label.substring(labelLowerCase.indexOf(labelInput),\n            labelLowerCase.indexOf(labelInput) + labelInput.length);\n          endString = label.substring(labelLowerCase.indexOf(labelInput) + labelInput.length);\n\n          format = startString + openTagBold + middleString + closeTagBold + endString;\n          break;\n        case PoComboFilterMode.endsWith:\n          startString = label.substring(0, labelLowerCase.lastIndexOf(labelInput));\n          middleString = label.substring(labelLowerCase.lastIndexOf(labelInput));\n\n          format = startString + openTagBold + middleString + closeTagBold;\n          break;\n      }\n    }\n\n    return this.safeHtml(format);\n  }\n\n  safeHtml(value): SafeHtml {\n    return this.sanitized.bypassSecurityTrustHtml(value);\n  }\n\n  isValidCharacterToSearch(keyCode) {\n    return (keyCode !== 9 && // tab\n            keyCode !== 13 && // entet\n            keyCode !== 16 && // shift\n            keyCode !== 17 && // ctrl\n            keyCode !== 18 && // alt\n            keyCode !== 20 && // capslock\n            keyCode !== 27 && // esc\n            keyCode !== 37 && // seta\n            keyCode !== 38 && // seta\n            keyCode !== 39 && // seta\n            keyCode !== 40 && // seta\n            keyCode !== 93); // windows menu\n  }\n\n  searchOnEnter(value: string) {\n    if (this.service && !this.selectedView && value.length >= this.filterMinlength) {\n      this.controlApplyFilter(value);\n    }\n  }\n\n  private adjustContainerPosition() {\n    this.controlPosition.adjustPosition(poComboContainerPositionDefault);\n  }\n\n  private close() {\n    this.comboOpen = false;\n\n    this.changeDetector.detectChanges();\n\n    this.comboIcon = 'po-icon-arrow-down';\n\n    this.removeListeners();\n\n    this.isFiltering = false;\n  }\n\n  private initializeListeners() {\n    this.removeListeners();\n\n    this.clickoutListener = this.renderer.listen('document', 'click', (event: MouseEvent) => {\n      this.wasClickedOnToggle(event);\n    });\n\n    this.eventResizeListener = this.renderer.listen('window', 'resize', () => {\n      // timeout necessario pois a animaÃ§Ã£o do po-menu impacta no ajuste da posiÃ§Ã£o do container.\n      setTimeout(() => this.adjustContainerPosition(), 250);\n    });\n\n    window.addEventListener('scroll', this.onScroll, true);\n  }\n\n  private onScroll = (): void => {\n    this.adjustContainerPosition();\n  }\n\n  private open() {\n    this.comboOpen = true;\n\n    this.changeDetector.detectChanges();\n\n    this.comboIcon = 'po-icon-arrow-up';\n\n    this.initializeListeners();\n\n    this.inputElement.nativeElement.focus();\n    this.scrollTo(this.getIndexSelectedView());\n\n    this.setContainerPosition();\n  }\n\n  private removeListeners() {\n    if (this.clickoutListener) {\n      this.clickoutListener();\n    }\n\n    if (this.eventResizeListener) {\n      this.eventResizeListener();\n    }\n\n    window.removeEventListener('scroll', this.onScroll, true);\n  }\n\n  private setContainerPosition() {\n    this.controlPosition.setElements(\n      this.containerElement.nativeElement,\n      poComboContainerOffset,\n      this.inputElement,\n      ['top', 'bottom'],\n      true\n    );\n\n    this.adjustContainerPosition();\n  }\n\n  private setScrollTop(scrollTop: number) {\n    if (this.contentElement) {\n      this.contentElement.nativeElement.scrollTop = scrollTop;\n    }\n  }\n\n}\n","/**\n * Para usar o po-mask Ã© preciso instanciar esta classe passando a mÃ¡scara como\n * primeiro parÃ¢metro, e no segundo parÃ¢metro, deve se informado true, caso queira\n * que o model seja formatado ou false para o que o model seja limpo.\n */\nexport class PoMask {\n  mask: string = '';\n  formatModel: boolean = false;\n  // controle de posiÃ§Ã£o\n  initialPosition: number = 0;\n  finalPosition: number = 0;\n\n  pattern: string = '';\n  get getPattern(): string {\n    return this.pattern;\n  }\n\n  valueToInput: string;\n  get getValueToInput(): string {\n    return this.valueToInput;\n  }\n  set setValueToInput(value: string) {\n    this.valueToInput = value;\n  }\n\n  valueToModel: string;\n  get getValueToModel(): string {\n    return this.valueToModel;\n  }\n  set setValueToModel(value: string) {\n    this.valueToModel = value;\n  }\n\n  formattingEnds: boolean;\n\n  constructor(mask: string, formatModel: boolean) {\n    this.mask = mask;\n    this.formatModel = formatModel;\n    this.pattern = this.getRegexFromMask(mask);\n  }\n\n  keyup($event: any) {\n    if (this.mask) {\n      const value = $event.target.value;\n      // formata o valor quando for colado com control + v e reposiciona o cursor\n      if ($event.keyCode === 17 || $event.keyCode === 91) {\n        $event.target.value = this.controlFormatting(value);\n        this.resetPositions($event);\n      }\n\n      $event.preventDefault();\n\n      switch ($event.keyCode) {\n        case 37: // seta esquerda\n          if (this.initialPosition > 0) {\n            this.initialPosition--;\n          }\n          this.setPositionNotShiftKey($event);\n          this.setSelectionRange($event);\n          break;\n\n        case 39: // seta direita\n          if (this.initialPosition < value.toString().length) {\n            this.initialPosition++;\n          }\n          this.setPositionNotShiftKey($event);\n          this.setSelectionRange($event);\n          break;\n\n        case 35: // end\n          this.finalPosition = value.toString().length;\n          if ($event.shiftKey) {\n            this.setPositions($event);\n          } else {\n            this.initialPosition = this.finalPosition;\n            this.setPositions($event);\n          }\n          break;\n\n        case 36: // HOME\n          if ($event.shiftKey) {\n            this.finalPosition = this.initialPosition;\n            this.initialPosition = 0;\n            this.setPositions($event);\n          } else {\n            this.initialPosition = 0;\n            this.finalPosition = 0;\n            this.setPositions($event);\n          }\n          break;\n      }\n    }\n  }\n\n  setPositionNotShiftKey($event: any) {\n    if (!$event.shiftKey) {\n      this.finalPosition = this.initialPosition;\n    }\n  }\n\n  setSelectionRange($event: any) {\n    if (this.initialPosition > this.finalPosition) {\n      $event.target.setSelectionRange(this.finalPosition, this.initialPosition);\n    } else {\n      $event.target.setSelectionRange(this.initialPosition, this.finalPosition);\n    }\n  }\n\n  keydown($event: any) {\n    if (this.mask) {\n      let value: string = $event.target.value;\n      if ($event.keyCode === 9) {\n        return;\n      }\n\n      if (!$event.ctrlKey && !$event.metaKey) {\n        $event.preventDefault();\n      }\n\n      // NÃ£o faz nada quando for digitado CTRL ou COMMAND e V\n      // JÃ¡ estÃ¡ sendo tratado no evento keyup\n      if ($event.ctrlKey || $event.metaKey && ($event.keyCode !== 86) ||\n        ($event.keyCode >= 37 && $event.keyCode <= 40) || $event.keyCode === 16 || $event.keyCode === 9 ) {\n        return;\n      }\n\n      // Valida a tecla digitada\n      if (this.isKeyValid($event.keyCode)) {\n        if (this.finalPosition === null) {\n          this.finalPosition = this.initialPosition;\n        }\n        this.revertPositions(this.initialPosition, this.finalPosition);\n\n        switch ($event.keyCode) {\n          case 8: // backspace\n            this.getPosition($event);\n            if (this.initialPosition < 0) {\n              this.initialPosition = 0;\n              this.setPositions($event);\n            }\n            if (this.initialPosition === this.finalPosition) {\n              this.checkMaskBefore($event, -1);\n              if (this.initialPosition !== 0) {\n                value = value.slice(0, this.initialPosition - 1) + value.slice(this.finalPosition);\n                value = this.controlFormatting(value);\n                $event.target.value = value;\n                this.changePosition($event , -1);\n                this.checkMaskBefore($event, -1);\n                this.setPositions($event);\n                this.resetPositions($event);\n              }\n            } else {\n              this.clearRangeSelection(value, $event, true);\n            }\n            this.setPositions($event);\n            break;\n\n          case 46: // delete\n            this.getPosition($event);\n            if (this.initialPosition === this.finalPosition) {\n              this.checkMaskAfter($event, 1);\n              value = value.slice(0, this.initialPosition) + value.slice(this.finalPosition + 1);\n              value = this.controlFormatting(value);\n              $event.target.value = value;\n              this.setPositions($event);\n              this.resetPositions($event);\n            } else {\n              this.clearRangeSelection(value, $event, false);\n            }\n            this.setPositions($event);\n            break;\n\n          default: // qualquer outra tecla vÃ¡lida\n            value = value.slice(0, this.initialPosition) + $event.key + value.slice(this.finalPosition);\n            value = this.controlFormatting(value);\n            $event.target.value = value;\n            this.changePosition($event, 1);\n            this.checkMaskBefore($event, 1);\n            this.setPositions($event);\n            this.resetPositions($event);\n            this.setPositions($event);\n        }\n      }\n    }\n  }\n\n  clearRangeSelection(value: string, $event: any, isBackspace: boolean) {\n    value = value.slice(0, this.initialPosition) + value.slice(this.finalPosition);\n    value = this.controlFormatting(value);\n    $event.target.value = value;\n\n    if (isBackspace) {\n      this.checkMaskBefore($event, -1);\n    }\n\n    this.setPositions($event);\n    this.resetPositions($event);\n  }\n\n  // passa a posiÃ§Ã£o do click para o controle de posiÃ§Ã£o\n  click($event: any) {\n    this.initialPosition = $event.target.selectionStart;\n    this.finalPosition = $event.target.selectionEnd;\n  }\n\n  blur($event: any) {\n    // Se houver algum valor definido na mÃ¡scara\n    if (this.mask) {\n      // pega o valor do campo, formata e passa para o model\n      let value = $event.target.value;\n      value = this.controlFormatting(value);\n      $event.target.value = value;\n    }\n  }\n\n  revertPositions(initialPosition: number, finalPosition: number) {\n    if (initialPosition > finalPosition) {\n      // inverte o controle de posiÃ§Ã£o caso o inicial esteja maior que o final\n      let tempPosition;\n      tempPosition = initialPosition;\n      this.initialPosition = finalPosition;\n      this.finalPosition = tempPosition;\n    }\n  }\n\n  // reseta o controle de posiÃ§Ã£o\n  resetPositions($event: any) {\n    this.initialPosition = $event.target.selectionStart;\n    this.finalPosition = this.initialPosition;\n  }\n\n  // posiciona o cursor de acordo com o controle de posiÃ§Ã£o\n  setPositions($event: any) {\n    $event.target.setSelectionRange(this.initialPosition, this.finalPosition);\n  }\n\n  // muda a posiÃ§Ã£o do cursor e atualiza o controle de posiÃ§Ã£o\n  changePosition($event: any, value: number) {\n    this.initialPosition = this.initialPosition + value;\n    this.finalPosition = this.finalPosition + value;\n    this.setPositions($event);\n  }\n\n  getPosition($event: any) {\n    this.initialPosition = $event.target.selectionStart;\n    this.finalPosition = $event.target.selectionEnd;\n    this.setPositions($event);\n  }\n\n  // MÃ©todo responsÃ¡vel por controlar a formataÃ§Ã£o e aplicar todas as mÃ¡scara possÃ­veis\n  // quando houver valores opcionais (?)\n  controlFormatting(value: string) {\n    // Se o valor for vazio, retorna vazio\n    if (!value) {\n      this.valueToInput = '';\n      this.valueToModel = '';\n      return '';\n    }\n    let valueProcessed;\n    let maskTmp = this.mask;\n\n    // Array que serÃ¡ usado para armazenar todas as mÃ¡scaras possÃ­veis para\n    // quando houver um valor opcional (?)\n    const arrMasks: Array<any> = [];\n    let contMasks = 0;\n\n    // Enquanto houver algum 9? na mÃ¡scara\n    while (this.hasOptionalNumber(maskTmp)) {\n      arrMasks.push(maskTmp);\n      maskTmp = this.replaceOptionalNumber(maskTmp);\n    }\n    arrMasks.push(maskTmp);\n\n    // Inverte o array\n    arrMasks.reverse();\n\n    // Informa que a formataÃ§Ã£o ainda nÃ£o chegou ao fim\n    this.formattingEnds = false;\n\n    while (!this.formattingEnds) {\n      // Seta a formataÃ§Ã£o como terminada\n      // EntÃ£o o mÃ©todo formatValue irÃ¡ setar como nÃ£o terminado caso haja\n      this.formattingEnds = true;\n\n      // Se nÃ£o existe mais nenhuma mÃ¡scara possÃ­vel, entÃ£o encerra a formataÃ§Ã£o\n      if (!arrMasks[contMasks]) {\n        break;\n      }\n\n      // Chama a formataÃ§Ã£o passando a mÃ¡scara e o valor\n      valueProcessed = this.formatValue(value, arrMasks[contMasks]);\n      contMasks++;\n    }\n\n    return valueProcessed;\n  }\n\n  // FunÃ§Ã£o que formata a mÃ¡scara com o valor passado\n  formatValue(value: string, mask: string) {\n\n    // Remove as marcas de valor opciona (?)\n    mask = mask.replace(/\\?/g, '');\n\n    // Substitui todos os caracteres que nÃ£o sÃ£o fixos da mÃ¡scara por _\n    const guide = mask.replace(this.listValidKeys(), '_');\n\n    // Contador usado para percorrer o guide\n    let contGuide: number = 0;\n\n    // String final formatada\n    let valueProcessed: string = '';\n\n    // Remove do valor todos os caracteres fixos como ()/-+\n    value = this.removeFormattingValue(value);\n\n    // Percorre todo o valor e coloca a formataÃ§Ã£o de acordo com a mÃ¡scara\n    for (let i = 0; i < value.length; i++) {\n      const charValue = value[i];\n\n      // Se o guide acabou, seta a formataÃ§Ã£o como nÃ£o terminada para que o mÃ©todo controlFormatting\n      // tente formatar com outra possÃ­vel mÃ¡scara\n      if (!guide[contGuide]) {\n        this.formattingEnds = false;\n        break;\n      }\n\n      // Percorre o Guide enquanto tem caracteres fixos\n      while (this.isFixedCharacterGuide(guide[contGuide]) && guide[contGuide]) {\n        valueProcessed += guide[contGuide];\n        contGuide++;\n      }\n\n      // Ã um caracter vÃ¡lido de acordo com a mÃ¡scara\n      if (this.isKeyValidMask(charValue, mask[contGuide])) {\n        valueProcessed += charValue;\n        contGuide++;\n      } else {\n        // Se nÃ£o Ã© um caracter vÃ¡lido, deve interromper.\n        break;\n      }\n    }\n\n    if (this.formatModel) {\n      this.valueToInput = valueProcessed;\n      this.valueToModel = valueProcessed;\n    } else {\n      this.valueToInput = valueProcessed;\n      this.valueToModel = this.removeFormattingValue(valueProcessed);\n    }\n    return valueProcessed;\n  }\n  // verifica se tem algum caracter de mascara antes do cursor\n  checkMaskBefore($event: any, position: number) {\n    if (this.isFixedCharacterGuide($event.target.value.toString().charAt(this.initialPosition - 1))) {\n      this.changePosition($event, position);\n      this.checkMaskBefore($event, position);\n    }\n  }\n\n  // verifica se tem algum caracter de mascara depois do cursor\n  checkMaskAfter($event: any, position: number) {\n    if (this.isFixedCharacterGuide($event.target.value.toString().charAt(this.initialPosition))) {\n      this.changePosition($event, position);\n      this.checkMaskAfter($event, position);\n    }\n  }\n\n  // Retorna a mÃ¡scara sem um valor opcional\n  replaceOptionalNumber(mask: string) {\n    let i = 9;\n    while (i >= 0) {\n      if (mask.indexOf(i + '?') > -1) {\n        return mask.replace(i + '?', '');\n      }\n      i--;\n    }\n    return mask;\n  }\n\n  // Verifica se contÃ©m caracteres permitidos somente na mÃ¡scara \\/() +-\n  isFixedCharacterGuide(key: any) {\n    return this.testRegex(key, this.getFixedCharacterGuide());\n  }\n\n  // Retorna caracteres permitidos somente na mÃ¡scara \\/() +-\n  getFixedCharacterGuide() {\n    return /[\\\\\\/() +-.\\:]/g;\n  }\n\n  // Caracteres permitidos de serem digitados\n  listValidKeys() {\n    return /[a-zA-Z0-9]/g;\n  }\n\n  // Se Ã© um dÃ­gito vÃ¡lido\n  isKeyValid(keyCode: any) {\n    return this.isKeyCodeValid(keyCode);\n  }\n\n  // Verifica se a tecla digitada Ã© permitida\n  // Permite apenas nÃºmeros, letras, backspace e del\n  isKeyCodeValid(keyCode: number) {\n    return (\n      (keyCode >= 48 && keyCode <= 57) ||\n      (keyCode >= 65 && keyCode <= 90) ||\n      (keyCode >= 96 && keyCode <= 105) ||\n      (keyCode === 8) || keyCode === 9 ||\n      (keyCode === 46)\n    );\n  }\n\n  // Se estÃ¡ de acordo com a mÃ¡scara\n  isKeyValidMask(key: any, keyMask: any) {\n    return this.testRegex(key, this.replaceMask(keyMask));\n  }\n\n  // Retorna se a chave foi aprovada pela expressÃ£o regular\n  testRegex(key: any, regex: any) {\n    return regex.test(key);\n  }\n\n  // Remove a formatacÃ£o do valor\n  // Ã possÃ­vel ser melhorado para remover pontualmente os caracteres fixos de acordo com a mÃ¡scara\n  removeFormattingValue(value: string) {\n    return value.replace(this.getFixedCharacterGuide(), '');\n  }\n\n  // Verifica se contÃ©m valor opcional na mÃ¡scara 0-9?\n  hasOptionalNumber(mask: string) {\n    return mask.match(/\\d\\?/g);\n  }\n\n  // Retorna a expressÃ£o regular correspondente ao comando passado\n  replaceMask(char: string) {\n    let regex = /./;\n    switch (char) {\n      case '0': regex = /[0]/;\n                break;\n      case '1': regex = /[0-1]/;\n                break;\n      case '2': regex = /[0-2]/;\n                break;\n      case '3': regex = /[0-3]/;\n                break;\n      case '4': regex = /[0-4]/;\n                break;\n      case '5': regex = /[0-5]/;\n                break;\n      case '6': regex = /[0-6]/;\n                break;\n      case '7': regex = /[0-7]/;\n                break;\n      case '8': regex = /[0-8]/;\n                break;\n      case '9': regex = /[0-9]/;\n                break;\n      case ' ': regex = /\\s/;\n                break;\n      case '@': regex = /[a-zA-Z]/;\n                break;\n      case 'w': regex = /[a-zA-Z0-9]/;\n                break;\n    }\n    return regex;\n  }\n\n  getRegexFromMask(mask: string) {\n    if (mask) {\n      let pattern;\n      if (this.formatModel) {\n        pattern = mask.replace(/\\\\/g, '\\\\\\\\');\n        pattern = pattern.replace(/\\+/g, '\\\\+');\n        pattern = pattern.replace(/\\./g, '\\\\.');\n        pattern = pattern.replace(/-/g, '-');\n        pattern = pattern.replace(/\\(/g, '\\\\(');\n        pattern = pattern.replace(/\\)/g, '\\\\)');\n        pattern = pattern.replace(/\\//g, '\\\\/');\n        pattern = pattern.replace(/\\s/g, '\\\\s');\n        pattern = pattern.replace(/:/g, '\\\\:');\n        pattern = pattern.replace(/\\@(?!\\s)/g, '\\\\w');\n        pattern = pattern.replace(/\\d/g, '\\\\w');\n      } else {\n        pattern = mask.replace(/\\\\/g, '');\n        pattern = pattern.replace(/\\+/g, '');\n        pattern = pattern.replace(/\\./g, '');\n        pattern = pattern.replace(/-/g, '');\n        pattern = pattern.replace(/\\(/g, '');\n        pattern = pattern.replace(/\\)/g, '');\n        pattern = pattern.replace(/\\//g, '');\n        pattern = pattern.replace(/\\s/g, '');\n        pattern = pattern.replace(/:/g, '');\n        pattern = pattern.replace(/\\@/g, '\\\\w');\n        pattern = pattern.replace(/\\d/g, '\\\\w');\n      }\n      return pattern;\n    } else {\n      return null;\n    }\n  }\n\n}\n","import { EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\n\nimport { convertDateToISODate, convertDateToISOExtended, convertIsoToDate, convertToBoolean, formatYear,\n  getShortBrowserLanguage, isTypeof, setYearFrom0To100, validateDateRange } from '../../../utils/util';\nimport { dateFailed, requiredFailed } from './../validators';\nimport { InputBoolean } from '../../../decorators';\nimport { PoMask } from '../po-input/po-mask';\n\nimport { PoDatepickerIsoFormat } from './enums/po-datepicker-iso-format.enum';\n\nconst poDatepickerFormatDefault: string = 'dd/mm/yyyy';\n\n/**\n * @description\n *\n * O `po-datepicker` Ã© um componente especÃ­fico para manipulaÃ§Ã£o de datas permitindo a digitaÃ§Ã£o e / ou seleÃ§Ã£o.\n *\n * O formato de exibiÃ§Ã£o da data, ou seja, o formato que Ã© apresentado ao usuÃ¡rio Ã© o dd/mm/yyyy,\n * mas podem ser definidos outros padrÃµes (veja mais na propriedade `p-format`).\n *\n * O idioma padrÃ£o do calendÃ¡rio serÃ¡ exibido de acordo com o navegador, caso tenha necessidade de alterar\n * use a propriedade `p-locale`.\n *\n * O datepicker aceita trÃªs formatos de data: o E8601DZw (yyyy-mm-ddThh:mm:ss+|-hh:mm), o E8601DAw (yyyy-mm-dd) e o\n * Date padrÃ£o do Javascript.\n *\n * > Por padrÃ£o, o formato de saÃ­da do *model* se ajustarÃ¡ conforme o formato de entrada. Se por acaso precisar controlar o valor de saÃ­da,\n * a propriedade `p-iso-format` provÃª esse controle independentemente do formato de entrada. Veja abaixo os formatos disponÃ­veis:\n *\n * - Formato de entrada e saÃ­da (E8601DZw) - `'2017-11-28T00:00:00-02:00'`;\n *\n * - Formato de entrada e saÃ­da (E8601DAw) - `'2017-11-28'`;\n *\n * - Formato de entrada (Date) - `new Date(2017, 10, 28)` e saÃ­da (E8601DAw) - `'2017-11-28'`;\n *\n * **Importante:**\n *\n * - Para utilizar datas com ano inferior a 100, verificar o comportamento do [`new Date`](https://www.w3schools.com/js/js_dates.asp)\n * e utilizar o mÃ©todo [`setFullYear`](https://www.w3schools.com/jsref/jsref_setfullyear.asp).\n * - Caso a data esteja invÃ¡lida, o `model` receberÃ¡ **'Data invÃ¡lida'**.\n * - Caso o `input` esteja passando um `[(ngModel)]`, mas nÃ£o tenha um `name`, entÃ£o irÃ¡ ocorrer um erro\n * do prÃ³prio Angular (`[ngModelOptions]=\"{standalone: true}\"`).\n *\n * Exemplo:\n *\n * ```\n * <po-datepicker\n *   [(ngModel)]=\"pessoa.nome\"\n *   [ngModelOptions]=\"{standalone: true}\"\n * </po-datepicker>\n * ```\n *\n * > NÃ£o esqueÃ§a de importar o `FormsModule` em seu mÃ³dulo, tal como para utilizar o `input default`.\n */\nexport abstract class PoDatepickerBaseComponent implements ControlValueAccessor, OnInit, Validator {\n\n  private _format?: string = poDatepickerFormatDefault;\n  private _isoFormat: PoDatepickerIsoFormat;\n  private _maxDate: Date;\n  private _minDate: Date;\n  private _noAutocomplete?: boolean = false;\n  private _placeholder?: string = '';\n\n  protected date: Date;\n  protected firstStart = true;\n  protected hour: string = 'T00:00:01-00:00';\n  protected isExtendedISO: boolean = false;\n  protected objMask: any;\n  protected onChangeModel: any = null;\n  protected onTouchedModel: any = null;\n  protected validatorChange: any;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Aplica foco no elemento ao ser iniciado.\n   *\n   * > Caso mais de um elemento seja configurado com essa propriedade, apenas o Ãºltimo elemento declarado com ela terÃ¡ o foco.\n   *\n   * @default `false`\n   */\n  @Input('p-auto-focus') @InputBoolean() autoFocus: boolean = false;\n\n  /* Nome do componente datepicker. */\n  @Input('name') name: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a propriedade nativa `autocomplete` do campo como `off`.\n   *\n   * @default `false`\n   */\n  @Input('p-no-autocomplete') set noAutocomplete(value: boolean) {\n    this._noAutocomplete = convertToBoolean(value);\n  }\n\n  get noAutocomplete() {\n    return this._noAutocomplete;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Mensagem que aparecerÃ¡ enquanto o campo nÃ£o estiver preenchido.\n   */\n  @Input('p-placeholder') set placeholder(placeholder: string) {\n    this._placeholder = isTypeof(placeholder, 'string') ? placeholder : '';\n  }\n\n  get placeholder() {\n    return this._placeholder;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `p-required`;\n   * - NÃ£o possuir `p-help` e/ou `p-label`.\n   *\n   * @default `false`\n   */\n  @Input('p-optional') optional: boolean;\n\n  /** Desabilita o campo. */\n  disabled?: boolean = false;\n  @Input('p-disabled') set setDisabled(disabled: string) {\n    this.disabled = disabled === '' ? true : convertToBoolean(disabled);\n\n    this.validateModel(convertDateToISOExtended(this.date, this.hour));\n  }\n\n  /** Torna o elemento somente leitura. */\n  readonly?: boolean = false;\n  @Input('p-readonly') set setReadonly(readonly: string) {\n    this.readonly = readonly === '' ? true : convertToBoolean(readonly);\n  }\n\n  /** Faz com que o campo seja obrigatÃ³rio. */\n  required?: boolean = false;\n  @Input('p-required') set setRequired(required: string) {\n    this.required = required === '' ? true : convertToBoolean(required);\n\n    this.validateModel(convertDateToISOExtended(this.date, this.hour));\n  }\n\n  /**\n   * @optional\n   *\n   * @deprecated 2.0.0\n   * @description\n   *\n   * **Deprecated**\n   *\n   * > Esta propriedade estÃ¡ depreciada e serÃ¡ excluÃ­da na versÃ£o 2.0.0, utilize a propriedade `p-auto-focus`.\n   *\n   * Aplica foco no elemento ao ser iniciado.\n   *\n   * @default `false`\n   */\n  @Input('p-focus') set oldfocus(focus: boolean) {\n    this.autoFocus = focus;\n  }\n\n  /** Habilita aÃ§Ã£o para limpar o campo. */\n  clean?: boolean = false;\n  @Input('p-clean') set setClean(clean: string) {\n    this.clean = clean === '' ? true : convertToBoolean(clean);\n  }\n\n  /**\n   * Mensagem apresentada quando a data for invÃ¡lida ou fora do perÃ­odo.\n   *\n   * > Esta mensagem nÃ£o Ã© apresentada quando o campo estiver vazio, mesmo que ele seja obrigatÃ³rio.\n   */\n  @Input('p-error-pattern') errorPattern?: string = '';\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define uma data mÃ­nima para o `po-datepicker`.\n   */\n  @Input('p-min-date') set minDate(value: string | Date) {\n    if (value instanceof Date) {\n      const year = value.getFullYear();\n\n      const date = new Date(year, value.getMonth(), value.getDate(), 0, 0, 0);\n      setYearFrom0To100(date, year);\n\n      this._minDate = date;\n    } else {\n      this._minDate = convertIsoToDate(value, true , false);\n    }\n\n    this.validateModel(convertDateToISOExtended(this.date, this.hour));\n  }\n\n  get minDate() {\n    return this._minDate;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define uma data mÃ¡xima para o `po-datepicker`.\n   */\n  @Input('p-max-date') set maxDate(value: string | Date) {\n    if (value instanceof Date) {\n      const year = value.getFullYear();\n\n      const date = new Date(year, value.getMonth(), value.getDate(), 23, 59, 59);\n      setYearFrom0To100(date, year);\n\n      this._maxDate = date;\n    } else {\n      this._maxDate = convertIsoToDate(value, false , true);\n    }\n\n    this.validateModel(convertDateToISOExtended(this.date, this.hour));\n  }\n\n  get maxDate() {\n    return this._maxDate;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Formato de exibiÃ§Ã£o da data.\n   *\n   * Valores vÃ¡lidos:\n   *  - `dd/mm/yyyy`\n   *  - `mm/dd/yyyy`\n   *  - `yyyy/mm/dd`\n   *\n   * @default `dd/mm/yyyy`\n   */\n  @Input('p-format') set format(value: string) {\n    if (value) {\n      value = value.toLowerCase();\n      if (value.match(/dd/) && value.match(/mm/) && value.match(/yyyy/)) {\n        this._format = value;\n        this.objMask = this.buildMask();\n        this.refreshValue(this.date);\n        return;\n      }\n    }\n    this._format = poDatepickerFormatDefault;\n    this.objMask = this.buildMask();\n  }\n\n  get format() {\n    return this._format;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * PadrÃ£o de formataÃ§Ã£o para saÃ­da do *model*, independentemente do formato de entrada.\n   *\n   * > Veja os valores vÃ¡lidos no *enum* `PoDatepickerIsoFormat`.\n   */\n  @Input('p-iso-format') set isoFormat(value: PoDatepickerIsoFormat) {\n    if (Object.values(PoDatepickerIsoFormat).includes(value)) {\n      this._isoFormat = value;\n      this.isExtendedISO = value === PoDatepickerIsoFormat.Extended;\n    }\n  }\n\n  get isoFormat() {\n    return this._isoFormat;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Idioma do Datepicker.\n   *\n   * Valores vÃ¡lidos:\n   *  - `pt`\n   *  - `en`\n   *  - `es`\n   */\n  _locale?: string;\n  @Input('p-locale') set locale(value: string) {\n    if (value) {\n      this._locale = value.length >= 2 ? value : 'pt';\n    } else {\n      this._locale = getShortBrowserLanguage();\n    }\n  }\n  get locale() {\n    return this._locale || getShortBrowserLanguage();\n  }\n\n  /** Evento disparado ao sair do campo. */\n  @Output('p-blur') onblur?: EventEmitter<any> = new EventEmitter<any>();\n\n  /** Evento disparado ao alterar valor do campo. */\n  @Output('p-change') onchange?: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor() { }\n\n  abstract writeValue(value: any): void;\n\n  abstract refreshValue(value: Date): void;\n\n  ngOnInit() {\n    // Classe de mÃ¡scara\n    this.objMask = this.buildMask();\n  }\n\n  // Converte um objeto string em Date\n  getDateFromString(dateString: string) {\n    const day = parseInt(dateString.substring(this.format.indexOf('d'), this.format.indexOf('d') + 2), 10);\n    const month = parseInt(dateString.substring(this.format.indexOf('m'), this.format.indexOf('m') + 2), 10) - 1;\n    const year = parseInt(dateString.substring(this.format.indexOf('y'), this.format.indexOf('y') + 4), 10);\n\n    const date = new Date(year, month, day);\n\n    setYearFrom0To100(date, year);\n\n    return (date.getFullYear() === year && date.getMonth() === month && date.getDate() === day) ? date : null;\n  }\n\n  // Formata a data.\n  formatToDate(value: Date) {\n    let dateFormatted = this.format;\n\n    dateFormatted = dateFormatted.replace('dd', ('0' + value.getDate()).slice(-2));\n    dateFormatted = dateFormatted.replace('mm', ('0' + (value.getMonth() + 1)).slice(-2));\n    dateFormatted = dateFormatted.replace('yyyy', formatYear(value.getFullYear()));\n\n    return dateFormatted;\n  }\n\n  // MÃ©todo responsÃ¡vel por controlar o modelo.\n  controlModel(date: Date) {\n    this.date = date;\n    if (date && this.isExtendedISO) {\n      this.callOnChange(convertDateToISOExtended(this.date, this.hour));\n    } else if (date && !this.isExtendedISO) {\n      this.callOnChange(convertDateToISODate(this.date));\n    } else {\n      date === undefined ? this.callOnChange('') : this.callOnChange('Data invÃ¡lida');\n    }\n  }\n\n  // Executa a funÃ§Ã£o onChange\n  callOnChange(value: any, retry: boolean = true) {\n    if (this.onChangeModel) {\n      this.onChangeModel(value);\n    } else if (retry) {\n      setTimeout(() => this.callOnChange(value, false));\n    }\n  }\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  // Usada para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model\n  registerOnChange(func: any): void {\n    this.onChangeModel = func;\n  }\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  // Usada para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model\n  registerOnTouched(func: any): void {\n    this.onTouchedModel = func;\n  }\n\n  registerOnValidatorChange(fn: () => void) {\n    this.validatorChange = fn;\n  }\n\n  protected validateModel(model: any) {\n    if (this.validatorChange) {\n      this.validatorChange(model);\n    }\n  }\n\n  // Retorna um objeto do tipo PoMask com a mascara configurada.\n  protected buildMask() {\n    let mask = this.format.toUpperCase();\n\n    mask = mask.replace(/DD/g, '99');\n    mask = mask.replace(/MM/g, '99');\n    mask = mask.replace(/YYYY/g, '9999');\n\n    return new PoMask(mask, true);\n  }\n\n  validate(c: AbstractControl): { [key: string]: any; } {\n    // Verifica se jÃ¡ possui algum error pattern padrÃ£o.\n    this.errorPattern = this.errorPattern !== 'Data invÃ¡lida' && this.errorPattern !== 'Data fora do perÃ­odo' ? this.errorPattern : '';\n\n    if (dateFailed(c.value)) {\n      this.errorPattern = this.errorPattern || 'Data invÃ¡lida';\n\n      return { date: {\n        valid: false,\n      }};\n    }\n\n    if (requiredFailed(this.required, this.disabled, c.value)) {\n      return { required: {\n        valid: false,\n      }};\n    }\n\n    if ((this.date && !validateDateRange(this.date, this._minDate, this._maxDate))) {\n      this.errorPattern = this.errorPattern || 'Data fora do perÃ­odo';\n\n      return { date: {\n        valid: false,\n      }};\n    }\n\n    return null;\n  }\n\n}\n","/**\n * @usedBy PoMultiselectComponent\n *\n * @description\n *\n * Define o tipo de busca usado no po-multiselect.\n */\nexport enum PoMultiselectFilterMode {\n  /** Verifica se o texto *inicia* com o valor pesquisado. */\n  startsWith,\n  /** Verifica se o texto *contÃ©m* o valor pesquisado. */\n  contains,\n  /** Verifica se o texto *finaliza* com o valor pesquisado. */\n  endsWith\n}\n","import { AfterViewInit, Component, ElementRef, forwardRef, HostListener, Input, OnDestroy, Renderer2, ViewChild } from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { formatYear, isMobile, setYearFrom0To100 } from '../../../utils/util';\nimport { PoControlPositionService } from './../../../services/po-control-position/po-control-position.service';\n\nimport { PoCalendarComponent } from './po-calendar/po-calendar.component';\nimport { PoDatepickerBaseComponent } from './po-datepicker-base.component';\n\nconst poCalendarContentOffset = 8;\nconst poCalendarPositionDefault = 'bottom-left';\n\n/**\n * @docsExtends PoDatepickerBaseComponent\n *\n * @example\n *\n * <example name=\"po-datepicker-basic\" title=\"Portinari Datepicker Basic\">\n *  <file name=\"sample-po-datepicker-basic/sample-po-datepicker-basic.component.html\"> </file>\n *  <file name=\"sample-po-datepicker-basic/sample-po-datepicker-basic.component.ts\"> </file>\n *  <file name=\"sample-po-datepicker-basic/sample-po-datepicker-basic.component.po.ts\"> </file>\n *  <file name=\"sample-po-datepicker-basic/sample-po-datepicker-basic.component.e2e-spec.ts\"> </file>\n * </example>\n *\n * <example name=\"po-datepicker-labs\" title=\"Portinari Datepicker Labs\">\n *  <file name=\"sample-po-datepicker-labs/sample-po-datepicker-labs.component.html\"> </file>\n *  <file name=\"sample-po-datepicker-labs/sample-po-datepicker-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-datepicker-airfare\" title=\"Portinari Datepicker - Airfare\">\n *  <file name=\"sample-po-datepicker-airfare/sample-po-datepicker-airfare.component.html\"> </file>\n *  <file name=\"sample-po-datepicker-airfare/sample-po-datepicker-airfare.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-datepicker-airfare-reactive-form\" title=\"Portinari Datepicker - Airfare Reactive Form\">\n *  <file name=\"sample-po-datepicker-airfare-reactive-form/sample-po-datepicker-airfare-reactive-form.component.html\"> </file>\n *  <file name=\"sample-po-datepicker-airfare-reactive-form/sample-po-datepicker-airfare-reactive-form.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-datepicker',\n  templateUrl: './po-datepicker.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PoDatepickerComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => PoDatepickerComponent),\n      multi: true,\n    },\n    PoControlPositionService\n  ]\n})\nexport class PoDatepickerComponent extends PoDatepickerBaseComponent implements AfterViewInit, OnDestroy {\n\n  date;\n  el: ElementRef;\n  hour: string;\n\n  private clickListener;\n  private readonly dateRegex = new RegExp('^(?:[0-9])\\\\d{1}(?:[0-9])\\\\d{1}-' +\n  '(?:0[1-9]|1[0-2])-' +\n  '(?:0[1-9]|[12]\\\\d|3[01])$');\n  private readonly isoRegex = new RegExp('^(?:[0-9])\\\\d{1}(?:[0-9])\\\\d{1}-' +\n  '(?:0[1-9]|1[0-2])-' +\n  '(?:0[1-9]|[12]\\\\d|3[01])' +\n  'T(?:[01]\\\\d|2[0-3]):[0-5]\\\\d:[0-5]\\\\d(?:Z|-0[1-9]|-1\\\\d|-2[0-3]|' +\n  '-00:?(?:0[1-9]|[0-5]\\\\d)|\\\\+[01]\\\\d|\\\\+2[0-3])' +\n  '(?:|:?[0-5]\\\\d)$');\n  private timeoutChange: any;\n  private valueBeforeChange: string;\n\n  eventListenerFunction: () => void;\n  eventResizeListener: () => void;\n\n  @ViewChild('calendar', { static: true }) calendar: PoCalendarComponent;\n  @ViewChild('dialogPicker', { read: ElementRef, static: true }) dialogPicker: ElementRef;\n  @ViewChild('iconDatepicker', { read: ElementRef, static: true }) iconDatepicker: ElementRef;\n  @ViewChild('inp', { read: ElementRef, static: true }) inputEl: ElementRef;\n\n  get autocomplete() {\n    return this.noAutocomplete ? 'off' : 'on';\n  }\n\n  /** RÃ³tulo do campo. */\n  @Input('p-label') label?: string;\n\n  /** Texto de apoio do campo. */\n  @Input('p-help') help?: string;\n\n  constructor(private controlPosition: PoControlPositionService, private renderer: Renderer2, el: ElementRef) {\n    super();\n    this.el = el;\n  }\n\n  ngAfterViewInit() {\n    this.setDialogPickerStyleDisplay('none');\n    if (this.autoFocus) {\n      this.focus();\n    }\n  }\n\n  ngOnDestroy() {\n    this.removeListeners();\n  }\n\n  /**\n   * FunÃ§Ã£o que atribui foco ao componente.\n   *\n   * Para utilizÃ¡-la Ã© necessÃ¡rio ter a instÃ¢ncia do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n   *\n   * ```\n   * import { PoDatepickerComponent } from '@portinari/portinari-ui';\n   *\n   * ...\n   *\n   * @ViewChild(PoDatepickerComponent, { static: true }) datepicker: PoDatepickerComponent;\n   *\n   * focusDatepicker() {\n   *   this.datepicker.focus();\n   * }\n   * ```\n   */\n  focus(): void {\n    if (!this.disabled) {\n      this.inputEl.nativeElement.focus();\n    }\n  }\n\n  togglePicker() {\n    if (this.disabled || this.readonly) {\n      return;\n    }\n\n    if (!this.calendar.visible) {\n      this.calendar.init();\n      this.setCalendarPosition();\n      this.initializeListeners();\n\n    } else {\n      this.inputEl.nativeElement.disabled = false;\n      this.closeCalendar();\n    }\n  }\n\n  dateSelected() {\n    if (!this.verifyMobile()) {\n      this.inputEl.nativeElement.focus();\n    }\n\n    this.inputEl.nativeElement.value = this.formatToDate(this.date);\n    this.controlModel(this.date);\n    this.controlChangeEmitter();\n    this.closeCalendar();\n  }\n\n  // Esconde Picker quando for clicado fora\n  wasClickedOnPicker(event: any): void {\n    if (!this.dialogPicker || !this.iconDatepicker) {\n      return;\n    }\n\n    if ((!this.dialogPicker.nativeElement.contains(event.target) || this.hasOverlayClass(event.target)) &&\n      !this.iconDatepicker.nativeElement.contains(event.target) && !this.hasAttrCalendar(event.target)) {\n        this.closeCalendar();\n    }\n  }\n\n  @HostListener('keyup', ['$event'])\n  onKeyup($event: any) {\n    if (this.readonly) {\n      return;\n    }\n\n    this.objMask.keyup($event);\n    // Controla a atualizaÃ§Ã£o do model, verificando se a data Ã© valida\n    if (this.objMask.valueToModel || this.objMask.valueToModel === '') {\n      if (this.objMask.valueToModel.length >= 10) {\n        this.controlModel(this.getDateFromString(this.inputEl.nativeElement.value));\n        this.date = this.getDateFromString(this.inputEl.nativeElement.value);\n      } else {\n        this.date = undefined;\n        this.controlModel(this.date);\n      }\n    } else {\n      this.date = undefined;\n    }\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeydown($event?: any) {\n    if (this.readonly) {\n      return;\n    }\n\n    this.objMask.keydown($event);\n  }\n\n  hasInvalidClass() {\n    return (this.el.nativeElement.classList.contains('ng-invalid') &&\n      this.el.nativeElement.classList.contains('ng-dirty') &&\n      this.inputEl.nativeElement.value !== '');\n  }\n\n  getErrorPattern() {\n    return (this.errorPattern !== '' && this.hasInvalidClass()) ? this.errorPattern : '';\n  }\n\n  clear() {\n    this.valueBeforeChange = this.formatToDate(this.date);\n    this.date = undefined;\n    this.controlModel(this.date);\n\n    this.controlChangeEmitter();\n  }\n\n  eventOnBlur($event: any) {\n\n    const date = this.inputEl.nativeElement.value;\n    const newDate = date ? this.getDateFromString(date) : undefined;\n    this.objMask.blur($event);\n    this.onblur.emit();\n\n    if (this.objMask.valueToModel) {\n      if (this.objMask.valueToModel.length >= 10) {\n        this.controlModel(newDate);\n        this.date = newDate;\n      } else {\n        this.date = undefined;\n        this.controlModel(this.date);\n      }\n\n    } else {\n      this.date = undefined;\n      this.callOnChange(this.date);\n    }\n\n    this.controlChangeEmitter();\n\n  }\n\n  eventOnClick($event) {\n    if (this.verifyMobile()) {\n      $event.target.blur();\n\n      // abre o calendar quando clicar no input somente no mobile\n      setTimeout(() => this.togglePicker(), 0);\n    } else {\n      // Atualiza a posiÃ§Ã£o do cursor ao clicar\n      this.objMask.click($event);\n    }\n  }\n\n  formatToDate(value: Date) {\n    if (!value) {\n      return undefined;\n    }\n\n    let dateFormatted = this.format;\n\n    dateFormatted = dateFormatted.replace('dd', ('0' + value.getDate()).slice(-2));\n    dateFormatted = dateFormatted.replace('mm', ('0' + (value.getMonth() + 1)).slice(-2));\n    dateFormatted = dateFormatted.replace('yyyy', formatYear(value.getFullYear()));\n\n    return dateFormatted;\n  }\n\n  refreshValue(value: Date) {\n    if (value) {\n      this.inputEl.nativeElement.value = this.formatToDate(value);\n    }\n  }\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  writeValue(value: any) {\n    if (this.inputEl && value) {\n      if (value instanceof Date) {\n        const dateString = value.toString();\n        this.hour = 'T' + dateString.substring(16, 24) + dateString.substring(28, 31) + ':' + dateString.substring(31, 33);\n        this.date = value;\n        this.inputEl.nativeElement.value = this.formatToDate(value);\n\n      } else if (this.isValidDateIso(value) || this.isValidExtendedIso(value)) {\n\n        if (this.isValidExtendedIso(value)) {\n          this.hour = value.substring(10, 25);\n        }\n\n        if (this.isoFormat === undefined) {\n          this.isExtendedISO = this.isValidExtendedIso(value);\n        }\n\n        const day = parseInt(value.substring(8, 10), 10);\n        const month = parseInt(value.substring(5, 7), 10) - 1;\n        const year = parseInt(value.substring(0, 4), 10);\n\n        const dateTemp = new Date(year, month, day);\n\n        setYearFrom0To100(dateTemp, year);\n\n        this.date = dateTemp;\n        this.inputEl.nativeElement.value = this.formatToDate(dateTemp);\n      } else {\n        this.inputEl.nativeElement.value = '';\n        this.date = undefined;\n      }\n      this.controlModel(this.date);\n    } else if (this.inputEl) {\n      this.inputEl.nativeElement.value = '';\n      this.date = undefined;\n    }\n\n    this.valueBeforeChange = this.formatToDate(this.date);\n  }\n\n  isValidDateIso(value: string) {\n    return this.dateRegex.test(value);\n  }\n\n  isValidExtendedIso(value) {\n    return this.isoRegex.test(value);\n  }\n\n  hasOverlayClass(element: any) {\n    return element.classList.contains('po-calendar-overlay');\n  }\n\n  /* istanbul ignore next */\n  verifyMobile() {\n    return isMobile();\n  }\n\n  private closeCalendar() {\n    this.calendar.close();\n    this.removeListeners();\n    this.setDialogPickerStyleDisplay('none');\n  }\n\n  private controlChangeEmitter() {\n    const dateModelFormatted = this.formatToDate(this.date);\n\n    if (dateModelFormatted !== this.valueBeforeChange) {\n      this.valueBeforeChange = dateModelFormatted;\n\n      clearTimeout(this.timeoutChange);\n      this.timeoutChange = setTimeout(() => {\n        this.onchange.emit(dateModelFormatted);\n      }, 200);\n    }\n  }\n\n  private hasAttrCalendar(element: any) {\n    const attrCalendar = 'attr-calendar';\n\n    return (element && element.hasAttribute(attrCalendar)) || (element.parentElement && element.parentElement.hasAttribute(attrCalendar));\n  }\n\n  private initializeListeners() {\n    this.clickListener = this.renderer.listen('document', 'click', (event: MouseEvent) => {\n      this.wasClickedOnPicker(event);\n    });\n\n    this.eventResizeListener = this.renderer.listen('window', 'resize', () => {\n      this.closeCalendar();\n    });\n\n    window.addEventListener('scroll', this.onScroll, true);\n  }\n\n  private onScroll = (): void => {\n    this.controlPosition.adjustPosition(poCalendarPositionDefault);\n  }\n\n  private removeListeners() {\n    if (this.clickListener) {\n      this.clickListener();\n    }\n\n    if (this.eventResizeListener) {\n      this.eventResizeListener();\n    }\n\n    window.removeEventListener('scroll', this.onScroll, true);\n  }\n\n  private setDialogPickerStyleDisplay(value) {\n    this.dialogPicker.nativeElement.style.display = value;\n  }\n\n  private setCalendarPosition() {\n    this.setDialogPickerStyleDisplay('block');\n\n    this.controlPosition.setElements(\n      this.dialogPicker.nativeElement,\n      poCalendarContentOffset,\n      this.inputEl,\n      ['top-left', 'bottom-left'],\n      false,\n      true\n    );\n\n    this.controlPosition.adjustPosition(poCalendarPositionDefault);\n  }\n\n}\n","import { AbstractControl, ControlValueAccessor, ValidationErrors, Validator } from '@angular/forms';\nimport { EventEmitter, Input, Output } from '@angular/core';\n\nimport { browserLanguage, convertToBoolean, poLocaleDefault } from './../../../utils/util';\nimport { requiredFailed } from '../validators';\n\nimport { InputBoolean } from '../../../decorators';\nimport { PoDatepickerRange } from './interfaces/po-datepicker-range.interface';\nimport { PoDatepickerRangeLiterals } from './interfaces/po-datepicker-range-literals.interface';\nimport { PoDateService } from './../../../services/po-date/po-date.service';\n\nexport const poDatepickerRangeLiteralsDefault = {\n  en: <PoDatepickerRangeLiterals> {\n    invalidFormat: 'Date in invalid format',\n    startDateGreaterThanEndDate: 'Start date greater than end date',\n  },\n  es: <PoDatepickerRangeLiterals> {\n    invalidFormat: 'Fecha en formato no vÃ¡lido',\n    startDateGreaterThanEndDate: 'Fecha de inicio mayor que fecha final',\n  },\n  pt: <PoDatepickerRangeLiterals> {\n    invalidFormat: 'Data no formato invÃ¡lido',\n    startDateGreaterThanEndDate: 'Data inicial maior que data final',\n  },\n  ru: <PoDatepickerRangeLiterals> {\n    invalidFormat: 'ÐÐ°ÑÐ° Ð² Ð½ÐµÐ²ÐµÑÐ½Ð¾Ð¼ ÑÐ¾ÑÐ¼Ð°ÑÐµ',\n    startDateGreaterThanEndDate: 'ÐÐ°ÑÐ° Ð½Ð°ÑÐ°Ð»Ð° Ð±Ð¾Ð»ÑÑÐµ Ð´Ð°ÑÑ Ð¾ÐºÐ¾Ð½ÑÐ°Ð½Ð¸Ñ',\n  }\n};\n\n/**\n * @description\n *\n * O `po-datepicker-range` Ã© um componente para seleÃ§Ã£o de um perÃ­odo entre duas datas, onde Ã© possÃ­vel informar apenas\n * a data inicial ou a data final.\n *\n * O componente `[(ngModel)]` do `po-datepicker-range` trabalha com um objeto que implementa a interface\n * `PoDatepickerRange`, contendo as seguintes propriedades:\n * ```\n * { \"start\": '2017-11-28', \"end\": '2017-11-30' }\n * ```\n *\n * <a id=\"accepted-formats\"></a>\n * Este componente pode receber os seguintes formatos de data:\n *\n * - **Data e hora combinados (E8601DZw): yyyy-mm-ddThh:mm:ss+|-hh:mm**\n * ```\n * '2017-11-28T00:00:00-02:00';\n * ```\n *\n * - **Data (E8601DAw.): yyyy-mm-dd**\n * ```\n * '2017-11-28';\n * ```\n *\n * - **JavaScript Date Object:**\n * ```\n * new Date(2017, 10, 28);\n * ```\n *\n * > O componente respeitarÃ¡ o formato passado para o *model* via codificaÃ§Ã£o. PorÃ©m, caso seja feita alteraÃ§Ã£o em algum\n * dos valores de data em tela, o componente atribuirÃ¡ o formato **Data (E8601DAw.): yyyy-mm-dd** ao model.\n *\n * Importante:\n *\n * - Quando preenchidas a data inicial e final, a data inicial deve ser sempre menor ou igual a data final;\n * - Ao passar uma data invÃ¡lida via codificaÃ§Ã£o, o valor serÃ¡ mantido no *model* e o `input` da tela aparecerÃ¡ vazio;\n * - Permite trabalhar com as duas datas separadamente atravÃ©s das propriedades `p-start-date` e `p-end-date` no lugar do\n * `[(ngModel)]`, no entanto sem a validaÃ§Ã£o do formulÃ¡rio;\n * - Para a validaÃ§Ã£o do formulÃ¡rio, utilize o `[(ngModel)]`.\n */\nexport abstract class PoDatepickerRangeBaseComponent implements ControlValueAccessor, Validator {\n\n  errorMessage: string = '';\n\n  private _clean?: boolean = false;\n  private _disabled?;\n  private _endDate?;\n  private _literals?: any;\n  private _noAutocomplete?: boolean = false;\n  private _readonly: boolean = false;\n  private _required?: boolean = false;\n  private _startDate?;\n  private onChangeModel: any;\n  private validatorChange: any;\n\n  protected dateRange: PoDatepickerRange = { start: '', end: '' };\n  protected format: any = 'dd/mm/yyyy';\n  protected isDateRangeInputFormatValid: boolean = true;\n  protected isStartDateRangeInputValid: boolean = true;\n  protected onTouchedModel: any;\n\n  get isDateRangeInputValid() {\n    return this.isDateRangeInputFormatValid && this.isStartDateRangeInputValid;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Aplica foco no elemento ao ser iniciado.\n   *\n   * > Caso mais de um elemento seja configurado com essa propriedade, apenas o Ãºltimo elemento declarado com ela terÃ¡ o foco.\n   *\n   * @default `false`\n   */\n  @Input('p-auto-focus') @InputBoolean() autoFocus: boolean = false;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Habilita aÃ§Ã£o para limpar o campo.\n   *\n   * @default `false`\n   */\n  @Input('p-clean') set clean(clean: boolean) {\n    this._clean = convertToBoolean(clean);\n  }\n\n  get clean() {\n    return this._clean;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita o campo.\n   *\n   * @default `false`\n   */\n  @Input('p-disabled') set disabled(value: boolean) {\n    this._disabled = convertToBoolean(value);\n\n    this.validateModel(this.dateRange);\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Data final.\n   */\n  @Input('p-end-date') set endDate(date: string | Date) {\n    this._endDate = this.convertPatternDateFormat(date);\n    this.dateRange.end = this.endDate;\n\n    this.updateScreenByModel(this.dateRange);\n    this.updateModel(this.dateRange);\n  }\n\n  get endDate() {\n    return this._endDate;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Texto de apoio do campo.\n   */\n  @Input('p-help') help?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * RÃ³tulo do campo.\n   */\n  @Input('p-label') label?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com as literais usadas no `po-datepicker-range`.\n   *\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\n   *\n   * ```\n   *  const customLiterals: PoDatepickerRangeLiterals = {\n   *    invalidFormat: 'Date in inconsistent format',\n   *    startDateGreaterThanEndDate: 'End date less than start date'\n   *  };\n   * ```\n   *\n   * Ou passando apenas as literais que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: PoDatepickerRangeLiterals = {\n   *    invalidFormat: 'Date in inconsistent format'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <po-datepicker-range\n   *   [p-literals]=\"customLiterals\">\n   * </po-datepicker-range>\n   * ```\n   *\n   * > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do browser (pt, en, es).\n   */\n  @Input('p-literals') set literals(value: PoDatepickerRangeLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...poDatepickerRangeLiteralsDefault[poLocaleDefault],\n        ...poDatepickerRangeLiteralsDefault[browserLanguage()],\n        ...value\n      };\n    } else {\n      this._literals = poDatepickerRangeLiteralsDefault[browserLanguage()];\n    }\n  }\n\n  get literals() {\n    return this._literals || poDatepickerRangeLiteralsDefault[browserLanguage()];\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a propriedade nativa `autocomplete` do campo como `off`.\n   *\n   * @default `false`\n   */\n  @Input('p-no-autocomplete') set noAutocomplete(value: boolean) {\n    this._noAutocomplete = convertToBoolean(value);\n  }\n\n  get noAutocomplete() {\n    return this._noAutocomplete;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `p-required`;\n   * - NÃ£o possuir `p-help` e/ou `p-label`.\n   *\n   * @default `false`\n   */\n  @Input('p-optional') optional: boolean;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ somente leitura.\n   *\n   * @default `false`\n   */\n  @Input('p-readonly') set readonly(value: boolean) {\n    this._readonly = convertToBoolean(value);\n\n    this.validateModel(this.dateRange);\n  }\n\n  get readonly() {\n    return this._readonly;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ obrigatÃ³rio.\n   *\n   * @default `false`\n   */\n  @Input('p-required') set required(required: boolean) {\n    this._required = convertToBoolean(required);\n\n    this.validateModel(this.dateRange);\n  }\n\n  get required() {\n    return this._required;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Data inicial.\n   */\n  @Input('p-start-date') set startDate(date: string | Date) {\n    this._startDate = this.convertPatternDateFormat(date);\n    this.dateRange.start = this.startDate;\n\n    this.updateScreenByModel(this.dateRange);\n    this.updateModel(this.dateRange);\n  }\n\n  get startDate() {\n    return this._startDate;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Evento disparado ao alterar valor do campo.\n   */\n  @Output('p-change') onChange?: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(protected poDateService: PoDateService) { }\n\n  protected abstract resetDateRangeInputValidation(): void;\n\n  protected abstract updateScreenByModel(dateRange: PoDatepickerRange);\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  // Usada para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model\n  registerOnChange(func: any): void {\n    this.onChangeModel = func;\n  }\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  // Usada para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model\n  registerOnTouched(func: any): void {\n    this.onTouchedModel = func;\n  }\n\n  registerOnValidatorChange?(fn: () => void): void {\n    this.validatorChange = fn;\n  }\n\n  validate(control: AbstractControl): ValidationErrors {\n\n    const value: PoDatepickerRange = control.value || {};\n    const startDate = value.start ? this.convertPatternDateFormat(value.start) : '';\n    const endDate = value.end ? this.convertPatternDateFormat(value.end) : '';\n\n    if (this.requiredDateRangeFailed(startDate, endDate)) {\n      this.errorMessage = '';\n\n      return { required: {\n        valid: false,\n      }};\n    }\n\n    if (this.dateRangeObjectFailed(control.value) || this.dateRangeFormatFailed(startDate, endDate)) {\n      this.errorMessage = this.literals.invalidFormat;\n\n      return { date: {\n        valid: false,\n      }};\n    }\n\n    if (this.dateRangeFailed(startDate, endDate)) {\n      this.errorMessage = this.literals.startDateGreaterThanEndDate;\n\n      return { date: {\n        valid: false,\n      }};\n    }\n\n    return null;\n  }\n\n  writeValue(dateRange: PoDatepickerRange): void {\n    this.resetDateRangeInputValidation();\n\n    if (!dateRange || this.dateRangeObjectFailed(dateRange)) {\n      this.dateRange = { start: '', end: '' };\n    }\n\n    if (!dateRange) {\n      this.validateModel(this.dateRange);\n    }\n\n    if (this.dateRangeObjectFailed(dateRange)) {\n      this.updateModel(dateRange);\n    }\n\n    if (this.isDateRangeObject(dateRange)) {\n      this.dateRange = {\n        start: this.convertPatternDateFormat(dateRange.start),\n        end: this.convertPatternDateFormat(dateRange.end)\n      };\n\n      this.updateModel(this.dateRange);\n    }\n\n    this.updateScreenByModel(this.dateRange);\n  }\n\n  protected dateFormatFailed(value: string): boolean {\n    return value && !this.poDateService.isValidIso(value);\n  }\n\n  // Executa a funÃ§Ã£o onChange\n  protected updateModel(value: any) {\n    const model = typeof(value) === 'object' ? { ...value } : value;\n    // Quando o input nÃ£o possui um formulÃ¡rio, entÃ£o esta funÃ§Ã£o nÃ£o Ã© registrada\n    if (this.onChangeModel) {\n      this.onChangeModel(model);\n    }\n\n  }\n\n  protected validateModel(value: any) {\n    const model = { ...value };\n    if (this.validatorChange) {\n      this.validatorChange(model);\n    }\n  }\n\n  private convertPatternDateFormat(value: any) {\n\n    if (value instanceof Date) {\n      return this.poDateService.convertDateToISO(value);\n    }\n\n    return value;\n  }\n\n  private dateRangeFailed(startDate: string, endDate: string): boolean {\n    return !this.poDateService.isDateRangeValid(endDate, startDate) || !this.isStartDateRangeInputValid;\n  }\n\n  private dateRangeFormatFailed(startDate: string, endDate: string): boolean {\n    return this.dateFormatFailed(endDate) || this.dateFormatFailed(startDate) || !this.isDateRangeInputFormatValid;\n  }\n\n  private dateRangeObjectFailed(value): boolean {\n    return value && !this.isDateRangeObject(value);\n  }\n\n  private isDateRangeObject(value): boolean {\n    return value && value.hasOwnProperty('start') && value.hasOwnProperty('end');\n  }\n\n  private requiredDateRangeFailed(startDate: string, endDate: string): boolean {\n    return this.isDateRangeInputValid &&\n      requiredFailed(this.required, this.disabled, startDate) &&\n      requiredFailed(this.required, this.disabled, endDate);\n  }\n\n}\n","import { Component, ElementRef, forwardRef, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { PoDatepickerRange } from './interfaces/po-datepicker-range.interface';\nimport { PoDatepickerRangeBaseComponent } from './po-datepicker-range-base.component';\nimport { PoDateService } from './../../../services/po-date/po-date.service';\nimport { PoMask } from '../po-input/po-mask';\n\nconst arrowLeftKey = 37;\nconst arrowRightKey = 39;\nconst backspaceKey = 8;\nconst poDatepickerRangeDateLengthDefault = 10;\n\n/**\n * @docsExtends PoDatepickerRangeBaseComponent\n *\n * @example\n *\n * <example name=\"po-datepicker-range-basic\" title=\"Portinari Datepicker Range Basic\">\n *  <file name=\"sample-po-datepicker-range-basic/sample-po-datepicker-range-basic.component.html\"> </file>\n *  <file name=\"sample-po-datepicker-range-basic/sample-po-datepicker-range-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-datepicker-range-labs\" title=\"Portinari Datepicker Range Labs\">\n *  <file name=\"sample-po-datepicker-range-labs/sample-po-datepicker-range-labs.component.html\"> </file>\n *  <file name=\"sample-po-datepicker-range-labs/sample-po-datepicker-range-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-datepicker-range-vacations\" title=\"Portinari Datepicker Range - Vacations Suggestion\">\n *  <file name=\"sample-po-datepicker-range-vacations/sample-po-datepicker-range-vacations.component.html\"> </file>\n *  <file name=\"sample-po-datepicker-range-vacations/sample-po-datepicker-range-vacations.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-datepicker-range-vacations-reactive-form\" title=\"Portinari Datepicker Range - Vacations Reactive Form\">\n *  <file name=\"sample-po-datepicker-range-vacations-reactive-form/sample-po-datepicker-range-vacations-reactive-form.component.html\">\n *  </file>\n *  <file name=\"sample-po-datepicker-range-vacations-reactive-form/sample-po-datepicker-range-vacations-reactive-form.component.ts\">\n *  </file>\n * </example>\n */\n@Component({\n  selector: 'po-datepicker-range',\n  templateUrl: './po-datepicker-range.component.html',\n  providers: [\n  {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => PoDatepickerRangeComponent),\n    multi: true,\n  },\n  {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => PoDatepickerRangeComponent),\n    multi: true,\n  }]\n})\nexport class PoDatepickerRangeComponent extends PoDatepickerRangeBaseComponent implements AfterViewInit, OnInit {\n\n  private poDatepickerRangeElement: ElementRef<any>;\n  private poMaskObject: PoMask;\n\n  @ViewChild('dateRangeField', { read: ElementRef, static: true }) dateRangeField: ElementRef;\n  @ViewChild('endDateInput', { read: ElementRef, static: true }) endDateInput: ElementRef;\n  @ViewChild('startDateInput', { read: ElementRef, static: true }) startDateInput: ElementRef;\n\n  get autocomplete() {\n    return this.noAutocomplete ? 'off' : 'on';\n  }\n\n  get enableCleaner(): boolean {\n    return (this.startDateInputValue || this.endDateInputValue) && !this.disabled && !this.readonly;\n  }\n\n  get endDateInputName(): string {\n    return 'end-date';\n  }\n\n  get endDateInputValue(): string {\n    return this.endDateInput.nativeElement.value;\n  }\n\n  get getErrorMessage(): string {\n    return (this.errorMessage !== '' && this.hasInvalidClass()) ? this.errorMessage : '';\n  }\n\n  get isDateRangeInputUncompleted(): boolean {\n    return this.endDateInputValue.length < poDatepickerRangeDateLengthDefault\n      && this.startDateInputValue.length < poDatepickerRangeDateLengthDefault;\n  }\n\n  get isDirtyDateRangeInput(): boolean {\n    return this.endDateInputValue.length > 0 || this.startDateInputValue.length > 0;\n  }\n\n  get startDateInputName(): string {\n    return 'start-date';\n  }\n\n  get startDateInputValue(): string {\n    return this.startDateInput.nativeElement.value;\n  }\n\n  static getKeyCode(event: KeyboardEvent) {\n    return event.keyCode || event.which;\n  }\n\n  static getTargetElement(event: any) {\n    return event.target || event.srcElement;\n  }\n\n  static isValidKey(keyCode: number): boolean {\n    const isNumericKey = keyCode >= 48 && keyCode <= 57;\n    const isNumericNumpadKey = keyCode >= 96 && keyCode <= 105;\n\n    return isNumericKey || isNumericNumpadKey;\n  }\n\n  constructor(poDateService: PoDateService, poDatepickerRangeElement: ElementRef) {\n    super(poDateService);\n    this.poDatepickerRangeElement = poDatepickerRangeElement;\n  }\n\n  ngAfterViewInit() {\n    if (this.autoFocus) {\n      this.focus();\n    }\n  }\n\n  ngOnInit() {\n    // Classe de mÃ¡scara\n    this.poMaskObject = this.buildMask();\n  }\n\n  clear() {\n    this.resetDateRangeInputValidation();\n    this.dateRange = { start: '', end: '' };\n\n    this.updateScreenByModel(this.dateRange);\n    this.updateModel(this.dateRange);\n  }\n\n  /**\n   * FunÃ§Ã£o que atribui foco ao componente.\n   *\n   * Para utilizÃ¡-la Ã© necessÃ¡rio ter a instÃ¢ncia do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n   *\n   * ```\n   * import { PoDatepickerRangeComponent } from '@portinari/portinari-ui';\n   *\n   * ...\n   *\n   * @ViewChild(PoDatepickerRangeComponent, { static: true }) datepickerRange: PoDatepickerRangeComponent;\n   *\n   * focusDatepickerRange() {\n   *   this.datepickerRange.focus();\n   * }\n   * ```\n   */\n  focus(): void {\n    if (!this.disabled) {\n      this.startDateInput.nativeElement.focus();\n    }\n  }\n\n  onBlur() {\n    this.removeFocusFromDatePickerRangeField();\n  }\n\n  onFocus() {\n    this.applyFocusOnDatePickerRangeField();\n  }\n\n  onKeydown(event?: any) {\n\n    if (this.readonly) {\n      return;\n    }\n\n    if (this.isSetFocusOnBackspace(event)) {\n      event.preventDefault();\n      this.setFocusOnBackspace();\n    } else {\n      this.poMaskObject.keydown(event);\n    }\n\n  }\n\n  onKeyup(event: any) {\n    if (this.readonly) {\n      return;\n    }\n\n    const isStartDateTargetEvent = event.target.name === this.startDateInputName;\n\n    this.setFocus(event);\n    this.poMaskObject.keyup(event);\n    this.updateModelByScreen(isStartDateTargetEvent);\n  }\n\n  resetDateRangeInputValidation() {\n    this.isStartDateRangeInputValid = true;\n    this.isDateRangeInputFormatValid = true;\n  }\n\n  updateScreenByModel(model: PoDatepickerRange) {\n    const dateRange = { start: model.start as string, end: model.end as string };\n    const isStartDateValid = this.poDateService.isDateRangeValid(dateRange.end, dateRange.start);\n    const isDateValid = date => !this.dateFormatFailed(date) && isStartDateValid;\n\n    const endDateFormated = isDateValid(dateRange.end) ? this.formatModelToScreen(dateRange.end) : '';\n    const startDateFormated = isDateValid(dateRange.start) ? this.formatModelToScreen(dateRange.start) : '';\n\n    this.endDateInput.nativeElement.value = endDateFormated;\n    this.startDateInput.nativeElement.value = startDateFormated;\n  }\n\n  private applyFocusOnDatePickerRangeField() {\n    this.dateRangeField.nativeElement.classList.add('po-datepicker-range-field-focused');\n  }\n\n  // Retorna um objeto do tipo PoMask com a mascara configurada.\n  private buildMask(): PoMask {\n    let mask = this.format.toUpperCase();\n\n    mask = mask.replace(/DD/g, '99');\n    mask = mask.replace(/MM/g, '99');\n    mask = mask.replace(/YYYY/g, '9999');\n\n    return new PoMask(mask, true);\n  }\n\n  private formatDate(format: string, day: string = '', month: string = '', year: string = ''): string {\n    let dateFormatted = format;\n\n    day = day && day.includes('T') ? day.slice(0, 2) : day;\n\n    dateFormatted = dateFormatted.replace('dd', ('0' + day).slice(-2));\n    dateFormatted = dateFormatted.replace('mm', ('0' + (month)).slice(-2));\n    dateFormatted = dateFormatted.replace('yyyy', String(year));\n\n    return dateFormatted;\n  }\n\n  private formatScreenToModel(value: string = ''): string {\n    const [day, month, year] = value.split('/');\n\n    return value ? this.formatDate('yyyy-mm-dd', day, month, year) : '';\n  }\n\n  private formatModelToScreen(value: string = ''): string {\n    const [year, month, day] = value.split('-');\n\n    return value ? this.formatDate(this.format, day, month, year) : '';\n  }\n\n  private getDateRangeFormatValidation(startDate: string, endDate: string, isStartDateTargetEvent: boolean):\n    { isValid: boolean, dateRangeModel: PoDatepickerRange } {\n\n    this.setDateRangeInputValidation(startDate, endDate);\n\n    return {\n      isValid: this.isDateRangeInputFormatValid && this.isStartDateRangeInputValid,\n      dateRangeModel: this.getValidatedModel(startDate, endDate, isStartDateTargetEvent)\n    };\n\n  }\n\n  private getValidatedModel(startDate: string, endDate: string, isStartDateTargetEvent: boolean): PoDatepickerRange {\n    const dateRangeModel = { start: '', end: '' };\n\n    dateRangeModel.end = (isStartDateTargetEvent || this.isStartDateRangeInputValid)\n      && !this.dateFormatFailed(endDate) ? endDate : '' ;\n\n    dateRangeModel.start = (!isStartDateTargetEvent || this.isStartDateRangeInputValid)\n      && !this.dateFormatFailed(startDate) ? startDate : '';\n\n    return dateRangeModel;\n  }\n\n  private hasInvalidClass(): boolean {\n    return (this.poDatepickerRangeElement.nativeElement.classList.contains('ng-invalid') &&\n      this.poDatepickerRangeElement.nativeElement.classList.contains('ng-dirty'));\n  }\n\n  private isEqualBeforeValue(startDate: string, endDate: string): boolean {\n    return this.isDateRangeInputFormatValid && endDate === this.dateRange.end && startDate === this.dateRange.start;\n  }\n\n  private isSetFocusOnBackspace(event: any) {\n    return event.target.name === this.endDateInputName &&\n      this.endDateInput.nativeElement.selectionStart === 0 && this.endDateInput.nativeElement.selectionEnd === 0 &&\n      event.keyCode === backspaceKey;\n  }\n\n  private removeFocusFromDatePickerRangeField() {\n    this.dateRangeField.nativeElement.classList.remove('po-datepicker-range-field-focused');\n  }\n\n  private setDateRangeInputValidation(startDate: string, endDate: string) {\n    this.isStartDateRangeInputValid = this.poDateService.isDateRangeValid(endDate, startDate);\n\n    this.isDateRangeInputFormatValid = !this.dateFormatFailed(startDate) && !this.dateFormatFailed(endDate);\n  }\n\n  private setFocus(event: any) {\n    const inputElement = PoDatepickerRangeComponent.getTargetElement(event);\n    const keyCode = PoDatepickerRangeComponent.getKeyCode(event);\n    const inputName = inputElement['name'];\n\n    this.setFocusOnArrowLeft(keyCode, inputName);\n    this.setFocusOnArrowRight(keyCode, inputName, inputElement);\n    this.setFocusOnStartDateCompleted(keyCode, inputName);\n  }\n\n  private setFocusAndPosition(position: number, inputElement: ElementRef, selectionRange: number) {\n    this.focusOnElement(inputElement);\n\n    setTimeout(() => {\n      inputElement.nativeElement.setSelectionRange(selectionRange, selectionRange);\n      this.poMaskObject.initialPosition = position;\n      this.poMaskObject.finalPosition = position;\n    });\n  }\n\n  private focusOnElement(inputElement: ElementRef) {\n    inputElement.nativeElement.focus();\n  }\n\n  private setFocusOnArrowLeft(keyCode: number, inputName: string) {\n    const isCursorAtStartOfInput = this.endDateInput.nativeElement.selectionStart === 0;\n\n    if (inputName === this.endDateInputName && isCursorAtStartOfInput && keyCode === arrowLeftKey) {\n      const inputLength = this.startDateInput.nativeElement.value.length;\n      this.setFocusAndPosition(inputLength, this.startDateInput, inputLength);\n    }\n  }\n\n  private setFocusOnArrowRight(keyCode: number, inputName: string, inputElement: any) {\n    const isCursorAtEndOfInput = this.startDateInput.nativeElement.selectionStart === inputElement.value.length;\n\n    if (inputName === this.startDateInputName && isCursorAtEndOfInput && keyCode === arrowRightKey) {\n      this.setFocusAndPosition(0, this.endDateInput, 0);\n    }\n  }\n\n  private setFocusOnBackspace() {\n    const inputLength = this.startDateInput.nativeElement.value.length;\n\n    this.startDateInput.nativeElement.value = this.startDateInputValue.slice(0, -1);\n    this.setFocusAndPosition(inputLength, this.startDateInput, inputLength);\n  }\n\n  private setFocusOnStartDateCompleted(keyCode: number, inputName: string) {\n    const isLastKeyPressed = this.startDateInput.nativeElement.selectionStart === poDatepickerRangeDateLengthDefault;\n    const isNewDateCompleted = this.startDateInputValue.length === poDatepickerRangeDateLengthDefault && isLastKeyPressed;\n    const isValidKey = PoDatepickerRangeComponent.isValidKey(keyCode);\n\n    if (inputName === this.startDateInputName && isNewDateCompleted && isValidKey) {\n      this.setFocusAndPosition(0, this.endDateInput, 0);\n    }\n  }\n\n  private updateModelByScreen(isStartDateTargetEvent: boolean) {\n    const endDateFormatted = this.formatScreenToModel(this.endDateInputValue);\n    const startDateFormatted = this.formatScreenToModel(this.startDateInputValue);\n\n    if (this.isDateRangeInputUncompleted && this.isDirtyDateRangeInput) {\n      this.updateModel(this.dateRange);\n      return;\n    }\n\n    if (this.isEqualBeforeValue(startDateFormatted, endDateFormatted)) {\n      this.resetDateRangeInputValidation();\n      this.validateModel(this.dateRange);\n      return;\n    }\n\n    const dateFormatValidation = this.getDateRangeFormatValidation(startDateFormatted, endDateFormatted, isStartDateTargetEvent);\n\n    if (dateFormatValidation.isValid) {\n      this.dateRange = { start: startDateFormatted, end: endDateFormatted };\n      this.updateModel(this.dateRange);\n      this.onChange.emit({ ...this.dateRange });\n    }\n\n    if (!dateFormatValidation.isValid) {\n      this.dateRange = { ...dateFormatValidation.dateRangeModel };\n      this.updateModel(dateFormatValidation.dateRangeModel);\n    }\n\n  }\n\n}\n","import { EventEmitter, Input, Output } from '@angular/core';\nimport { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\n\nimport { convertToBoolean } from '../../../utils/util';\nimport { requiredFailed, maxlengpoailed, minlengpoailed, patternFailed } from './../validators';\nimport { InputBoolean } from '../../../decorators';\nimport { PoMask } from './po-mask';\n\n/**\n * @description\n *\n * Este Ã© um componente baseado em input, com vÃ¡rias propriedades do input nativo e outras\n * propriedades extras como: mÃ¡scara, pattern, mensagem de erro e etc.\n * VocÃª deve informar a variÃ¡vel que contÃ©m o valor como [(ngModel)]=\"variavel\", para que o\n * input receba o valor da variÃ¡vel e para que ela receba as alteraÃ§Ãµes do valor (two-way-databinding).\n * A propriedade name Ã© obrigatÃ³ria para que o formulÃ¡rio e o model funcionem corretamente.\n *\n * Importante:\n *\n * - Caso o input tenha um [(ngModel)] sem o atributo name, ocorrerÃ¡ um erro de angular.\n * EntÃ£o vocÃª precisa informar o atributo name ou o atributo [ngModelOptions]=\"{standalone: true}\".\n * Exemplo: [(ngModel)]=\"pessoa.nome\" [ngModelOptions]=\"{standalone: true}\"\n */\nexport abstract class PoInputBaseComponent implements ControlValueAccessor, Validator {\n\n  private _maxlength?: number;\n  private _minlength?: number;\n  private _noAutocomplete?: boolean = false;\n  private _placeholder?: string = '';\n\n  protected passedWriteValue: boolean = false;\n  protected validatorChange: any;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Aplica foco no elemento ao ser iniciado.\n   *\n   * > Caso mais de um elemento seja configurado com essa propriedade, apenas o Ãºltimo elemento declarado com ela terÃ¡ o foco.\n   *\n   * @default `false`\n   */\n  @Input('p-auto-focus') @InputBoolean() autoFocus: boolean = false;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o Ã­cone que serÃ¡ exibido no inÃ­cio do campo.\n   *\n   * > Veja a disponibilidade de Ã­cones em [biblioteca de Ã­cones](guides/icons).\n   */\n  @Input('p-icon') icon?: string;\n\n  /** RÃ³tulo do campo. */\n  @Input('p-label') label?: string;\n\n  /** Texto de apoio do campo. */\n  @Input('p-help') help?: string;\n\n  /** Nome e identificador do campo. */\n  @Input('name') name: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a propriedade nativa `autocomplete` do campo como `off`.\n   *\n   * @default `false`\n   */\n  @Input('p-no-autocomplete') set noAutocomplete(value: boolean) {\n    this._noAutocomplete = convertToBoolean(value);\n  }\n\n  get noAutocomplete() {\n    return this._noAutocomplete;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Mensagem que aparecerÃ¡ enquanto o campo nÃ£o estiver preenchido.\n   *\n   * @default ''\n   */\n  @Input('p-placeholder') set placeholder(value: string) {\n    this._placeholder = value || '';\n  }\n  get placeholder() {\n    return this._placeholder;\n  }\n\n  /**\n   * @description\n   *\n   * Se verdadeiro, desabilita o campo.\n   *\n   * @default `false`\n   */\n  disabled?: boolean = false;\n  @Input('p-disabled') set setDisabled(disabled: string) {\n    this.disabled = disabled === '' ? true : convertToBoolean(disabled);\n\n    this.validateModel();\n  }\n\n  /** Indica que o campo serÃ¡ somente leitura. */\n  readonly?: boolean = false;\n  @Input('p-readonly') set setReadonly(readonly: string) {\n    this.readonly = readonly === '' ? true : convertToBoolean(readonly);\n  }\n\n  /**\n   * @description\n   *\n   * Indica que o campo serÃ¡ obrigatÃ³rio.\n   *\n   * > Esta propriedade Ã© desconsiderada quando o input estÃ¡ desabilitado `(p-disabled)`.\n   *\n   * @default `false`\n   */\n  required?: boolean = false;\n  @Input('p-required') set setRequired(required: string) {\n    this.required = required === '' ? true : convertToBoolean(required);\n\n    this.validateModel();\n  }\n\n  /**\n   * @optional\n   *\n   * @deprecated 2.0.0\n   * @description\n   *\n   * **Deprecated**\n   *\n   * > Esta propriedade estÃ¡ depreciada e serÃ¡ excluÃ­da na versÃ£o 2.0.0, utilize a propriedade `p-auto-focus`.\n   *\n   * Aplica foco no elemento ao ser iniciado.\n   *\n   * @default `false`\n   */\n  @Input('p-focus') set oldfocus(focus: boolean) {\n    this.autoFocus = focus;\n  }\n\n  /** Se verdadeiro, o campo receberÃ¡ um botÃ£o para ser limpo. */\n  clean?: boolean = false;\n  @Input('p-clean') set setClean(clean: string) {\n    this.clean = clean === '' ? true : convertToBoolean(clean);\n  }\n\n  /**\n   * @description\n   *\n   * ExpressÃ£o regular para validar o campo.\n   * Quando o campo possuir uma mÃ¡scara `(p-mask)` serÃ¡ automaticamente validado por ela, porÃ©m\n   * Ã© possÃ­vel definir um p-pattern para substituir a validaÃ§Ã£o da mÃ¡scara.\n   */\n  pattern?: string;\n  @Input('p-pattern') set setPattern(pattern: string) {\n    this.pattern = pattern;\n\n    this.validateModel();\n  }\n\n  /**\n   * @description\n   *\n   * Mensagem que serÃ¡ apresentada quando o `pattern` ou a mÃ¡scara nÃ£o for satisfeita.\n   *\n   * > Esta mensagem nÃ£o Ã© apresentada quando o campo estiver vazio, mesmo que ele seja requerido.\n   */\n  @Input('p-error-pattern') errorPattern?: string = '';\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica a quantidade mÃ¡xima de caracteres que o campo aceita.\n   */\n  @Input('p-maxlength') set maxlength(value: number) {\n    if (!isNaN(parseInt(<any> value, 10))) {\n      this._maxlength = parseInt(<any> value, 10);\n\n      this.validateModel();\n    } else if (!value) {\n      this._maxlength = undefined;\n\n      this.validateModel();\n    }\n  }\n\n  get maxlength() {\n    return this._maxlength;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica a quantidade mÃ­nima de caracteres que o campo aceita.\n   */\n  @Input('p-minlength') set minlength(value: number) {\n    if (!isNaN(parseInt(<any> value, 10))) {\n      this._minlength = parseInt(<any> value, 10);\n\n      this.validateModel();\n    } else if (!value) {\n      this._minlength = undefined;\n\n      this.validateModel();\n    }\n  }\n\n  get minlength() {\n    return this._minlength;\n  }\n\n  /**\n   * @description\n   *\n   * Indica uma mÃ¡scara para o campo. Exemplos: (+99) (99) 99999?-9999, 99999-999, 999.999.999-99.\n   * A mÃ¡scara gera uma validaÃ§Ã£o automÃ¡tica do campo, podendo esta ser substituÃ­da por um REGEX especÃ­fico\n   * atravÃ©s da propriedade p-pattern.\n   * O campo serÃ¡ sinalizado e o formulÃ¡rio ficarÃ¡ invÃ¡lido quando o valor informado estiver fora do padrÃ£o definido,\n   * mesmo quando desabilitado.\n   */\n  mask?: string = '';\n  @Input('p-mask') set setMask(mask: string) {\n    this.mask = mask;\n\n    // Atualiza MÃ¡scara do Campo\n    this.objMask = new PoMask(this.mask, this.maskFormatModel);\n\n    this.validateModel();\n  }\n\n  /**\n   * @description\n   *\n   * Indica se o `model` receberÃ¡ o valor formatado pela mÃ¡scara ou apenas o valor puro (sem formataÃ§Ã£o).\n   *\n   * @default `false`\n   */\n  maskFormatModel?: boolean = false;\n  @Input('p-mask-format-model') set setMaskFormatModel(maskFormatModel: string) {\n    this.maskFormatModel = maskFormatModel === '' ? true : convertToBoolean(maskFormatModel);\n\n    if (this.objMask instanceof PoMask) {\n      this.objMask.formatModel = this.maskFormatModel;\n\n      this.validateModel();\n    }\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `p-required`;\n   * - NÃ£o possuir `p-help` e/ou `p-label`.\n   *\n   * @default `false`\n   */\n  @Input('p-optional') optional: boolean;\n\n  /** Evento disparado ao sair do campo. */\n  @Output('p-blur') blur?: EventEmitter<any> = new EventEmitter();\n\n  /** Evento disparado ao entrar do campo. */\n  @Output('p-enter') enter?: EventEmitter<any> = new EventEmitter();\n\n  /** Evento disparado ao alterar valor e deixar o campo. */\n  @Output('p-change') change?: EventEmitter<any> = new EventEmitter();\n\n  /** Evento disparado ao alterar valor do model. */\n  @Output('p-change-model') changeModel?: EventEmitter<any> = new EventEmitter();\n\n  type: string;\n\n  onChangePropagate: any = null;\n  onTouched: any = null;\n  objMask: any;\n  modelLastUpdate: any;\n\n  callOnChange(value: any) {\n    this.updateModel(value);\n\n    this.controlChangeModelEmitter(value);\n  }\n\n  callUpdateModelWithTimeout(value) {\n    setTimeout(() => this.updateModel(value));\n  }\n\n  controlChangeModelEmitter(value: any) {\n    if (this.modelLastUpdate !== value) {\n      this.changeModel.emit(value);\n      this.modelLastUpdate = value;\n    }\n  }\n\n  /**\n   * FunÃ§Ã£o que atribui foco ao componente.\n   *\n   * Para utilizÃ¡-la Ã© necessÃ¡rio ter a instÃ¢ncia do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n   *\n   * ```\n   * import { PoNomeDoComponenteComponent } from '@portinari/portinari-ui';\n   *\n   * ...\n   *\n   * @ViewChild(PoNomeDoComponenteComponent, { static: true }) nomeDoComponente: PoNomeDoComponenteComponent;\n   *\n   * focusComponent() {\n   *   this.nomeDoComponente.focus();\n   * }\n   * ```\n   */\n  abstract focus(): void;\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  // Usada para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model\n  registerOnChange(func: any): void {\n    this.onChangePropagate = func;\n  }\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  // Usada para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model\n  registerOnTouched(func: any): void {\n    this.onTouched = func;\n  }\n\n  registerOnValidatorChange(fn: () => void) {\n    this.validatorChange = fn;\n  }\n\n  updateModel(value: any) {\n    // Quando o input nÃ£o possui um formulÃ¡rio, entÃ£o esta funÃ§Ã£o nÃ£o Ã© registrada\n    if (this.onChangePropagate) {\n      this.onChangePropagate(value);\n    }\n  }\n\n  validate(c: AbstractControl): { [key: string]: any; } {\n\n    if (requiredFailed(this.required, this.disabled, this.getScreenValue())) {\n      return { required: {\n        valid: false,\n      }};\n    }\n\n    if (maxlengpoailed(this.maxlength, this.getScreenValue())) {\n      return { maxlength: {\n        valid: false,\n      }};\n    }\n\n    if (minlengpoailed(this.minlength, this.getScreenValue())) {\n      return { minlength: {\n        valid: false,\n      }};\n    }\n\n    if (patternFailed(this.pattern, c.value)) {\n      this.validatePatternOnWriteValue(c.value);\n      return { pattern: {\n        valid: false,\n      }};\n    }\n\n    return this.extraValidation(c);\n  }\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  writeValue(value: any) {\n    this.writeValueModel(value);\n  }\n\n  protected validateModel() {\n    if (this.validatorChange) {\n      this.validatorChange();\n    }\n  }\n\n  // MÃ©todo que receberÃ¡ o valor do model\n  abstract writeValueModel(value: any): void;\n\n  // ValidaÃ§Ãµes do campo\n  abstract extraValidation(c: AbstractControl): { [key: string]: any; };\n\n  // Deve retornar o valor do campo\n  abstract getScreenValue(): string;\n\n  // utilizado para validar o pattern na inicializacao, fazendo dessa forma o campo fica sujo (dirty).\n  private validatePatternOnWriteValue(value: string) {\n    if (value && this.passedWriteValue) {\n\n      setTimeout(() => {\n        this.updateModel(value);\n      });\n\n      this.passedWriteValue = false;\n    }\n  }\n\n}\n","import { AfterViewInit, Component, ElementRef, forwardRef, Input, ViewChild } from '@angular/core';\nimport { AbstractControl, NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\n\nimport { convertToInt } from '../../../utils/util';\nimport { PoInputBaseComponent } from '../po-input/po-input-base.component';\n\nconst poDecimalDefaultDecimalsLength = 2;\nconst poDecimalDefaultThousandMaxlength = 13;\nconst poDecimalMaxDecimalsLength = 15;\nconst poDecimalTotalLengthLimit = 16;\n\n/**\n *\n * @docsExtends PoInputBaseComponent\n *\n * @description\n *\n * <br>\n * - O `po-decimal` Ã© um *input* especÃ­fico para receber apenas nÃºmeros decimais, por isso recebe as seguintes caracterÃ­sticas:\n *  + Aceita apenas nÃºmeros;\n *  + Utiliza ',' como separador de decimal;\n *  + Utiliza '.' para separaÃ§Ã£o de milhar;\n *  + Ã possÃ­vel configurar a quantidade de casas decimais e a quantidade de digitos do campo.\n *\n * > **Importante:**\n * Atualmente o JavaScript limita-se a um conjunto de dados de `32 bits`, e para que os valores comportem-se devidamente,\n * o `po-decimal` contÃ©m um tratamento que limita em 16 o nÃºmero total de casas antes e apÃ³s a vÃ­rgula.\n * Veja abaixo as demais regras nas documentaÃ§Ãµes de `p-decimals-length` e `p-thousand-maxlength`.\n *\n * @example\n *\n * <example name=\"po-decimal-basic\" title=\"Portinari Decimal Basic\">\n *  <file name=\"sample-po-decimal-basic/sample-po-decimal-basic.component.html\"> </file>\n *  <file name=\"sample-po-decimal-basic/sample-po-decimal-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-decimal-labs\" title=\"Portinari Decimal Labs\">\n *  <file name=\"sample-po-decimal-labs/sample-po-decimal-labs.component.html\"> </file>\n *  <file name=\"sample-po-decimal-labs/sample-po-decimal-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-decimal-hourly-wage\" title=\"Portinari Decimal - Hourly Wage\">\n *  <file name=\"sample-po-decimal-hourly-wage/sample-po-decimal-hourly-wage.component.html\"> </file>\n *  <file name=\"sample-po-decimal-hourly-wage/sample-po-decimal-hourly-wage.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-decimal-hourly-wage-reactive-form\" title=\"Portinari Decimal - Hourly Wage Reactive Form\">\n *  <file name=\"sample-po-decimal-hourly-wage-reactive-form/sample-po-decimal-hourly-wage-reactive-form.component.html\"> </file>\n *  <file name=\"sample-po-decimal-hourly-wage-reactive-form/sample-po-decimal-hourly-wage-reactive-form.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-decimal',\n  templateUrl: './po-decimal.component.html',\n  providers: [\n  {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => PoDecimalComponent),\n    multi: true,\n  },\n  {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => PoDecimalComponent),\n    multi: true,\n  }\n  ]\n})\nexport class PoDecimalComponent extends PoInputBaseComponent implements AfterViewInit {\n\n  private _decimalsLength?: number = poDecimalDefaultDecimalsLength;\n  private _thousandMaxlength?: number = poDecimalDefaultThousandMaxlength;\n\n  private decimalSeparator: string = ',';\n  private fireChange: boolean = false;\n  private isKeyboardAndroid: boolean = false;\n  private minusSign: string = '-';\n  private oldDotsLength = null;\n  private thousandSeparator: string = '.';\n  private valueBeforeChange: any;\n\n  private regex = {\n    thousand: new RegExp('\\\\' + '.' , 'g'),\n    decimal: new RegExp('\\\\' + ',' , 'g')\n  };\n\n  @ViewChild('inp', {read: ElementRef, static: true }) inputEl: ElementRef;\n\n  get autocomplete() {\n    return this.noAutocomplete ? 'off' : 'on';\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Quantidade mÃ¡xima de casas decimais.\n   *\n   * > **Importante:**\n   * - O valor mÃ¡ximo permitido Ã© 15;\n   * - A soma total de `p-decimals-length` com `p-thousand-maxlength` limita-se Ã  16;\n   * - Esta propriedade sobrepÃµe apenas o valor **padrÃ£o** de `p-thousand-maxlength`;\n   * - Caso `p-thousand-maxlength` tenha um valor definido, esta propriedade poderÃ¡ receber apenas o valor restante do limite total (16).\n   *\n   * @default `2`\n   */\n  @Input('p-decimals-length') set decimalsLength(value: number) {\n    let decimalsLength = convertToInt(value);\n\n    decimalsLength = this.isValueBetweenAllowed(decimalsLength, poDecimalMaxDecimalsLength) ?\n    decimalsLength : poDecimalDefaultDecimalsLength;\n\n    if (this.isGreaterThanTotalLengthLimit(decimalsLength, this.thousandMaxlength)) {\n      this.thousandMaxlength = poDecimalTotalLengthLimit - decimalsLength;\n    }\n\n    this._decimalsLength = decimalsLength;\n  }\n\n  get decimalsLength() {\n    return this._decimalsLength;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Quantidade mÃ¡xima de dÃ­gitos antes do separador decimal.\n   *\n   * > **Importante:**\n   * - O valor mÃ¡ximo permitido Ã© 13;\n   * - A soma total de `p-decimals-length` com `p-thousand-maxlength` limita-se Ã  16;\n   * - Esta propriedade sobrepÃµe o valor definido em `p-decimals-length`.\n   *\n   * @default `13`\n   */\n  @Input('p-thousand-maxlength') set thousandMaxlength(value: number) {\n    let thousandMaxlength = convertToInt(value);\n\n    if (this.decimalsLength > poDecimalDefaultDecimalsLength && !thousandMaxlength) {\n      thousandMaxlength = poDecimalTotalLengthLimit - this.decimalsLength;\n    }\n\n    thousandMaxlength = this.isValueBetweenAllowed(thousandMaxlength, poDecimalDefaultThousandMaxlength) ?\n    thousandMaxlength : poDecimalDefaultThousandMaxlength;\n\n    if (this.isGreaterThanTotalLengthLimit(this.decimalsLength, thousandMaxlength)) {\n      this.decimalsLength = poDecimalTotalLengthLimit - thousandMaxlength;\n    }\n\n    this._thousandMaxlength = thousandMaxlength;\n  }\n\n  get thousandMaxlength() {\n    return this._thousandMaxlength;\n  }\n\n  constructor(private el: ElementRef) {\n    super();\n    this.isKeyboardAndroid = !!navigator.userAgent.match(/Android/i);\n  }\n\n  ngAfterViewInit() {\n    this.verifyAutoFocus();\n    this.setPaddingInput();\n  }\n\n  clear(value) {\n    this.callOnChange(value);\n    this.controlChangeEmitter();\n  }\n\n  extraValidation(c: AbstractControl): { [key: string]: any; } {\n    return null;\n  }\n\n  focus(): void {\n    if (!this.disabled) {\n      this.inputEl.nativeElement.focus();\n    }\n  }\n\n  getScreenValue() {\n    return (this.inputEl) ? this.inputEl.nativeElement.value : '';\n  }\n\n  hasInvalidClass() {\n    return (\n      this.el.nativeElement.classList.contains('ng-invalid') &&\n      this.el.nativeElement.classList.contains('ng-dirty') &&\n      this.getScreenValue() !== ''\n    );\n  }\n\n  hasLetters(value: string = '') {\n    return value.match(/[a-zA-Z:;+=_Â´`^~\"'?!@#$%Â¨&*()><{}Ã§Ã\\[\\]/\\\\|]+/);\n  }\n\n  isValidNumber(event: any): boolean {\n    // - event.key nÃ£o existia em alguns browsers, como Samsung browser e Firefox.\n    const keyValue = <any> String.fromCharCode(event.which);\n    const validKey = event.which !== 8 && event.which !== 0;\n\n    return !this.hasLetters(keyValue) && validKey;\n  }\n\n  // funÃ§Ã£o responsÃ¡vel por adicionar os zeroes com as casa decimais ao sair do campo.\n  onBlur(event: any) {\n    const value = event.target.value;\n\n    if (value) {\n\n      if (this.hasLetters(value) || this.containsMoreThanOneComma(value)) {\n        this.setViewValue('');\n        this.callOnChange(undefined);\n        return;\n      }\n\n      const valueWithoutThousandSeparator = this.formatValueWithoutThousandSeparator(value);\n      this.setViewValue(this.formatToViewValue(valueWithoutThousandSeparator));\n    }\n\n    this.blur.emit();\n    this.controlChangeEmitter();\n  }\n\n  onFocus(event: FocusEvent) {\n    // Atualiza valor da variÃ¡vel que serÃ¡ usada para verificar se o campo teve alteraÃ§Ã£o\n    this.valueBeforeChange = this.getScreenValue();\n\n    // Dispara evento quando o usuÃ¡rio entrar no campo\n    // Este evento tambÃ©m Ã© disparado quando o campo inicia com foco.\n    this.enter.emit();\n  }\n\n  onInput(event: any) {\n    const selectionStart = event.target.selectionStart;\n    const selectionEnd = event.target.selectionEnd;\n\n    let modelValue;\n    let viewValue;\n\n    // - Browsers nativos do Android ex: Samsung Browser.\n    if (this.isKeyboardAndroid) {\n      this.onInputKeyboardAndroid(event);\n    }\n\n    modelValue = this.formatValueWithoutThousandSeparator(event.target.value);\n    modelValue = this.addZeroBefore(modelValue);\n    viewValue = this.formatMask(modelValue);\n\n    // validaÃ§Ã£o para nÃ£o quebrar IE com placeholder definido e Input vazio\n    if (viewValue) {\n      this.setViewValue(viewValue);\n      this.setCursorInput(event, selectionStart, selectionEnd);\n    }\n\n    this.callOnChange(this.formatToModelValue(modelValue));\n  }\n\n  onInputKeyboardAndroid(event: any) {\n    const inputValue = event.target.value;\n    const selectionStart = event.target.selectionStart;\n    const hasLetters = this.hasLetters(inputValue);\n\n    if (hasLetters) {\n      this.setViewValue(inputValue.replace(hasLetters[0], ''));\n\n      return event.preventDefault();\n    } else {\n      const position = selectionStart - 1;\n      const key = inputValue.charAt(position);\n\n      this.setPositionValue(event);\n\n      if (this.isValidKey(event, key)) {\n        this.setViewValue(inputValue);\n      }\n    }\n  }\n\n  onKeyPress(event: KeyboardEvent) {\n    this.isValidKey(event);\n  }\n\n  setPaddingInput() {\n    setTimeout(() => {\n      const selectorIcons = '.po-field-icon-container:not(.po-field-icon-container-left) > .po-icon';\n      let icons = this.el.nativeElement.querySelectorAll(selectorIcons).length;\n      if (this.clean) {\n        icons++;\n      }\n      if (icons) {\n        this.inputEl.nativeElement.style.paddingRight = `${icons * 36}px`;\n      }\n    });\n  }\n\n  writeValueModel(value) {\n    if (this.inputEl) {\n      if (value || value === 0) {\n        const formatedViewValue = this.formatToViewValue(value);\n        this.setViewValue(formatedViewValue);\n      } else {\n        this.setViewValue('');\n      }\n    }\n\n    if (value) {\n      this.change.emit(value);\n    }\n  }\n\n  // reponsÃ¡vel por adicionar 0 antes da virgula (decimalSeparator).\n  private addZeroBefore(value) {\n    const isDecimalSeparator = value === this.decimalSeparator;\n\n    return isDecimalSeparator ? `0${value}` : value;\n  }\n\n  private containsComma(value) {\n    return value.includes(this.decimalSeparator);\n  }\n\n  private containsMoreThanOneComma(value: string = '') {\n    const foundComma = value.match(/,/g);\n\n    return !!(foundComma && foundComma.length > 1);\n  }\n\n  private controlChangeEmitter() {\n    const elementValue = this.getScreenValue();\n\n    // Emite o evento change manualmente quando o campo Ã© alterado\n    // Este evento Ã© controlado manualmente devido ao preventDefault existente na mÃ¡scara\n    // e devido ao controle do p-clean, que tambÃ©m precisa emitir change\n    if (elementValue !== this.valueBeforeChange) {\n      this.fireChange = true;\n      setTimeout(() => {\n        if (this.fireChange) {\n          this.change.emit(elementValue);\n        }\n      }, 200);\n    }\n  }\n\n  private formatMask(value: string) {\n    // necessÃ¡rio para nÃ£o adicionar . nas casa decimais.\n    // por exemplo: 12.345,123.45 (errado)\n    // 12.345,12345 (correto)\n\n    if (value.match(this.regex.decimal)) {\n      const regex = new RegExp('(\\\\d)(?=(\\\\d{3})+(?!\\\\d),)', 'g');\n      return value.toString().replace(regex, '$1.');\n    }\n\n    return value.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1.');\n  }\n\n  private formatToModelValue(value: string) {\n    const formattedValue = this.replaceCommaToDot(value);\n    const parsedValue = formattedValue ? parseFloat(Number(formattedValue).toFixed(this.decimalsLength)) : undefined;\n\n    return parsedValue === 0 || parsedValue ? parsedValue : undefined;\n  }\n\n  private formatToViewValue(value: string) {\n    let formatedNumber;\n    let numberValue;\n    let valueBeforeDot;\n    let valueAfterDot;\n\n    // - NecessÃ¡rio para tratar valores que contenham decimalSeparator\n    value = this.replaceCommaToDot(value);\n\n    numberValue = Number(value).toFixed(this.decimalsLength);\n\n    valueBeforeDot = this.getValueBeforeSeparator(numberValue, this.thousandSeparator);\n    valueAfterDot = this.getValueAfterSeparator(numberValue, this.thousandSeparator);\n\n    formatedNumber = this.formatMask(valueBeforeDot);\n\n    if (this.decimalsLength === 0) {\n      return formatedNumber;\n    } else {\n      return formatedNumber + this.decimalSeparator + valueAfterDot;\n    }\n\n  }\n\n  private formatValueWithoutThousandSeparator(value: string = '') {\n    return value.toString().replace(this.regex.thousand, '');\n  }\n\n  private getValueAfterSeparator(value = '', separator) {\n    return value.split(separator)[1] || '';\n  }\n\n  private getValueBeforeSeparator(value = '', separator) {\n    return value.split(separator)[0] || '';\n  }\n\n  private hasLessDot(value) {\n    if (value) {\n      const dots = value.match(this.regex.thousand);\n      const dotsLength = dots && dots.length;\n\n      if (dotsLength < this.oldDotsLength) {\n        this.oldDotsLength = dotsLength;\n        return true;\n      }\n    }\n\n    if (!value) { this.oldDotsLength = null; }\n\n    return false;\n  }\n\n  private hasMoreDot(value) {\n    if (value) {\n      const dots = value.match(this.regex.thousand);\n      const dotsLength = dots && dots.length;\n\n      if (dotsLength > this.oldDotsLength) {\n          this.oldDotsLength = dotsLength;\n          return true;\n      }\n    }\n\n    if (!value) { this.oldDotsLength = null; }\n\n    return false;\n  }\n\n  private hasMinusSignInvalidPosition(event: any): boolean {\n    const keyIsMinusSign = event.key === this.minusSign;\n    const selectionStart = event.target.selectionStart;\n\n    return keyIsMinusSign && selectionStart !== 0;\n  }\n\n  private isInvalidKey(event: any, charCode: any) {\n    const isInvalidNumber = !this.isValidNumber(event);\n\n    return this.verifyInsertComma(event) || this.verifyThousandLength(event) ||\n      this.verifyValueAfterComma(event) || this.verifyInsertMinusSign(event) ||\n      this.hasMinusSignInvalidPosition(event) || isInvalidNumber ||\n      this.validateCursorPositionBeforeSeparator(event) || this.verifyDecimalLengthIsZeroAndKeyPressedIsComma(charCode);\n  }\n\n  private isGreaterThanTotalLengthLimit(decimalsMaxLength: number, thousandMaxlength: number) {\n    return (decimalsMaxLength + thousandMaxlength) > poDecimalTotalLengthLimit;\n  }\n\n  private isKeyDecimalSeparator(event) {\n    return event.key === this.decimalSeparator || event.char === this.decimalSeparator;\n  }\n\n  private isPositionAfterDecimalSeparator(positionCursor, value) {\n    const indexComma = value && value.indexOf(this.decimalSeparator);\n\n    if (indexComma && this.decimalsLength > 0) {\n      return positionCursor > indexComma;\n    }\n  }\n\n  private isSelectionStartDifferentSelectionEnd(target: any) {\n    return target.selectionStart !== target.selectionEnd;\n  }\n\n  private isValidKey(event: any, key?: string) {\n    const charCode = event.which || event.keyCode;\n    const validKey = event.which === 8 || event.which === 0;\n\n    if (validKey && !this.isKeyboardAndroid) {\n      return;\n    }\n\n    if (key) {\n      event.key = key;\n    }\n\n    if (this.isInvalidKey(event, charCode)) {\n      event.preventDefault();\n      return false;\n    }\n    return true;\n  }\n\n  private isValueBetweenAllowed(value: number, maxAllowed: number) {\n    return  value >= 0 && value <= maxAllowed;\n  }\n\n  // Quando decimalsLength for 0 nÃ£o deve permitir informar vÃ­rgula (decimalSeparator)\n  private verifyDecimalLengthIsZeroAndKeyPressedIsComma(charCode: number) {\n    return (charCode === 44 && this.decimalsLength === 0);\n  }\n\n  private verifyAutoFocus() {\n    if (this.autoFocus) {\n      this.focus();\n    }\n  }\n\n  private setInitialSelectionRange(target: any, selectionStart, selectionEnd) {\n    if (selectionStart === 1 && selectionEnd === 1) {\n      return target.setSelectionRange(selectionStart + 1, selectionEnd + 1);\n    }\n    return target.setSelectionRange(selectionStart - 1, selectionEnd - 1);\n  }\n\n  private replaceAt(value, index, replace) {\n    return value.substring(0, index) + replace + value.substring(index + 1);\n  }\n\n  private replaceCommaToDot(value: string = '') {\n    return value.toString().replace(this.regex.decimal, '.');\n  }\n\n  private setCursorInput(event, selectionStart, selectionEnd) {\n    const target = event.target;\n    const viewValue = target.value;\n\n    // Caso houver mais . do que anteriormente soma o valor com 1.\n    if (this.hasMoreDot(viewValue) || viewValue === ('0' + this.decimalSeparator)) {\n      return target.setSelectionRange(selectionStart + 1, selectionEnd + 1);\n    }\n\n    // Caso houver menos . do que anteriormente subtrai o valor por 1.\n    if (this.hasLessDot(viewValue)) {\n      this.setInitialSelectionRange(target, selectionStart, selectionEnd);\n    }\n    return target.setSelectionRange(selectionStart, selectionEnd);\n  }\n\n  private setPositionValue(event: any) {\n    const value = event.target.value;\n    const position = event.target.selectionStart - 1;\n\n    if (position > 0 && event.key === this.minusSign) {\n      event.target.value = value.substring(0, position) + value.substr(position + 1);\n    }\n  }\n\n  private setViewValue(value: string) {\n    this.inputEl.nativeElement.value = value;\n  }\n\n  private validateCursorPositionBeforeSeparator(event: any): boolean {\n    const target = event.target;\n    const originalValue = this.formatValueWithoutThousandSeparator(target.value);\n    const valueBeforeSeparator = this.getValueBeforeSeparator(target.value, this.decimalSeparator);\n    const valueBeforeSeparatorOriginal = this.getValueBeforeSeparator(originalValue, this.decimalSeparator);\n\n    if (this.isSelectionStartDifferentSelectionEnd(target)) {\n      return false;\n    }\n    return target.selectionStart <= valueBeforeSeparator.length &&\n    valueBeforeSeparatorOriginal.length === this.thousandMaxlength &&\n    !this.isKeyDecimalSeparator(event);\n  }\n\n  private verifyThousandLength(event: any): boolean {\n    const target = event.target;\n    const originalValue = this.formatValueWithoutThousandSeparator(target.value);\n    const valueBeforeSeparatorOriginal = this.getValueBeforeSeparator(originalValue, this.decimalSeparator);\n\n    if (this.isSelectionStartDifferentSelectionEnd(target)) {\n      return false;\n    }\n    return valueBeforeSeparatorOriginal.length >= this.thousandMaxlength &&\n      !this.isKeyDecimalSeparator(event) &&\n      this.isPositionAfterDecimalSeparator(target.selectionStart - this.decimalsLength, target.value);\n  }\n\n  private verifyInsertComma(e: any): boolean {\n    const hasComma = this.containsComma(e.target.value);\n\n    return hasComma && e.key === this.decimalSeparator;\n  }\n\n  private verifyInsertMinusSign(event: any): boolean {\n    const value = event.target.value;\n    const indexMinusSign = (value.lastIndexOf(this.minusSign) !== -1);\n    const positionMinusSign = value.lastIndexOf('-') ;\n    const occurancesMinusSign = value.match(new RegExp('-', 'g'));\n\n    if (this.isKeyboardAndroid && indexMinusSign && occurancesMinusSign.length > 1) {\n      event.target.value = this.replaceAt(value, positionMinusSign, '');\n    }\n    return indexMinusSign && event.key === this.minusSign;\n  }\n\n  private verifyValueAfterComma(event: any): boolean {\n    const value = event.target.value;\n    const selectionStart = event.target.selectionStart;\n    const valueAfterSeparator = this.getValueAfterSeparator(value, this.decimalSeparator);\n\n    return this.isPositionAfterDecimalSeparator(selectionStart, value) && valueAfterSeparator.length >= this.decimalsLength;\n  }\n\n}\n","import { AfterViewInit, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { PoInputBaseComponent } from '../po-input/po-input-base.component';\n\nexport abstract class PoInputGeneric extends PoInputBaseComponent implements AfterViewInit {\n\n  @ViewChild('inp', {read: ElementRef, static: true }) inputEl: ElementRef;\n\n  type = 'text';\n\n  el: ElementRef;\n  valueBeforeChange: any;\n  timeoutChange: any;\n\n  get autocomplete() {\n    return this.noAutocomplete ? 'off' : 'on';\n  }\n\n  constructor(el: ElementRef) {\n    super();\n\n    this.el = el;\n  }\n\n  ngAfterViewInit() {\n    this.afterViewInit();\n  }\n\n  afterViewInit() {\n    this.verifyAutoFocus();\n    if (this.type !== 'password') {\n      this.setPaddingInput();\n    }\n  }\n\n  focus() {\n    if (!this.disabled) {\n      this.inputEl.nativeElement.focus();\n    }\n  }\n\n  setPaddingInput() {\n    setTimeout(() => {\n      const selectorIcons = '.po-field-icon-container:not(.po-field-icon-container-left) > .po-icon';\n      let icons = this.el.nativeElement.querySelectorAll(selectorIcons).length;\n      if (this.clean) {\n        icons++;\n      }\n      if (icons) {\n        this.inputEl.nativeElement.style.paddingRight = `${icons * 36}px`;\n      }\n    });\n  }\n\n  verifyAutoFocus() {\n    if (this.autoFocus) {\n      this.focus();\n    }\n  }\n\n  @HostListener('keydown', ['$event']) onKeydown(e: any) {\n    if (this.mask && !this.readonly && e.target.keyCode !== 229) {\n      this.eventOnBlur(e);\n      this.objMask.keydown(e);\n    }\n  }\n\n  @HostListener('keyup', ['$event']) onKeyup(e: any) {\n    if (this.mask && !this.readonly) {\n      if (e.target.keyCode !== 229) {\n        this.eventOnBlur(e);\n        this.objMask.keyup(e);\n      }\n      this.callOnChange(this.objMask.valueToModel);\n    }\n  }\n\n  eventOnInput(e: any) {\n    let value = '';\n    if (!this.mask) {\n      value = this.validMaxLength(this.maxlength, e.target.value);\n      this.inputEl.nativeElement.value = value;\n    } else {\n      this.objMask.blur(e);\n      this.inputEl.nativeElement.value = this.objMask.valueToInput;\n      value = this.objMask.valueToModel;\n    }\n    this.callOnChange(value);\n  }\n\n  validMaxLength(maxlength: number, value: string) {\n    return ((maxlength || maxlength === 0) && value.length > maxlength) ? value.toString().substring(0, maxlength) : value;\n  }\n\n  eventOnFocus(e: any) {\n    // Atualiza valor da variÃ¡vel que serÃ¡ usada para verificar se o campo teve alteraÃ§Ã£o\n    this.valueBeforeChange = this.inputEl.nativeElement.value;\n\n    // Dispara evento quando o usuÃ¡rio entrar no campo\n    // Este evento tambÃ©m Ã© disparado quando o campo inicia com foco.\n    this.enter.emit();\n  }\n\n  eventOnBlur(e: any) {\n    if (this.mask) {\n      this.objMask.blur(e);\n    }\n\n    if (e.type === 'blur') {\n      this.blur.emit();\n      this.controlChangeEmitter();\n    }\n\n  }\n\n  controlChangeEmitter() {\n    const elementValue = this.inputEl.nativeElement.value;\n\n    // Emite o evento change manualmente quando o campo Ã© alterado\n    // Este evento Ã© controlado manualmente devido ao preventDefault existente na mÃ¡scara\n    // e devido ao controle do p-clean, que tambÃ©m precisa emitir change\n    if (elementValue !== this.valueBeforeChange) {\n      clearTimeout(this.timeoutChange);\n      this.timeoutChange = setTimeout(() => {\n        this.change.emit(elementValue);\n      }, 200);\n    }\n  }\n\n  eventOnClick(e: any) {\n    // Atualiza a posiÃ§Ã£o do cursor ao clicar\n    if (this.mask) {\n      this.objMask.click(e);\n    }\n  }\n\n  hasInvalidClass() {\n    return (\n      this.el.nativeElement.classList.contains('ng-invalid') &&\n      this.el.nativeElement.classList.contains('ng-dirty') &&\n      this.inputEl.nativeElement.value !== ''\n    );\n  }\n\n  getErrorPattern() {\n    return (this.errorPattern !== '' && this.hasInvalidClass()) ? this.errorPattern : '';\n  }\n\n  validateClassesForPattern() {\n    const value = this.getScreenValue();\n    const element = this.el.nativeElement;\n\n    if (value && !this.verifyPattern(this.pattern, value)) {\n      element.classList.add('ng-invalid');\n      element.classList.add('ng-dirty');\n    } else {\n      element.classList.remove('ng-invalid');\n    }\n  }\n\n  verifyPattern(pattern: string, value: any) {\n    return new RegExp(pattern).test(value);\n  }\n\n  clear(value) {\n    this.callOnChange(value);\n    this.controlChangeEmitter();\n  }\n\n  writeValueModel(value) {\n    this.passedWriteValue = true;\n    if (this.inputEl) {\n      if (value) {\n        if (this.mask) {\n          this.inputEl.nativeElement.value = this.objMask.controlFormatting(String(value));\n\n          // Se o model for definido como formatado, entÃ£o precisa atualizÃ¡-lo no primeiro acesso\n          if (this.objMask.formatModel) {\n            this.callUpdateModelWithTimeout(this.objMask.valueToModel);\n\n          }\n        } else {\n          this.inputEl.nativeElement.value = value;\n        }\n      } else {\n        // Se o valor for indefinido, deve limpar o campo.\n        this.inputEl.nativeElement.value = '';\n      }\n    }\n\n    // Emite evento quando o model Ã© atualizado, inclusive a primeira vez\n    if (value) {\n      this.changeModel.emit(value);\n    }\n  }\n\n  getScreenValue() {\n    const screenValue = this.inputEl && this.inputEl.nativeElement.value || undefined;\n\n    if (this.type === 'number') {\n      const parsedValue = parseFloat(screenValue);\n      return parsedValue || parsedValue === 0 ? parsedValue : null;\n    } else {\n      return screenValue;\n    }\n  }\n\n  abstract extraValidation(c: AbstractControl): { [key: string]: any; };\n\n}\n","import { AfterViewInit, Component, ElementRef, forwardRef, OnDestroy } from '@angular/core';\nimport { AbstractControl, NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\n\nimport { PoInputGeneric } from '../po-input-generic/po-input-generic';\n\n/**\n * @docsExtends PoInputBaseComponent\n *\n * @description\n *\n * po-email Ã© um input especÃ­fico para receber E-mail, com o pattern jÃ¡ configurado.\n *\n * @example\n *\n * <example name=\"po-email-basic\" title=\"Portinari Email Basic\">\n *  <file name=\"sample-po-email-basic/sample-po-email-basic.component.html\"> </file>\n *  <file name=\"sample-po-email-basic/sample-po-email-basic.component.ts\"> </file>\n *  <file name=\"sample-po-email-basic/sample-po-email-basic.component.e2e-spec.ts\"> </file>\n *  <file name=\"sample-po-email-basic/sample-po-email-basic.component.po.ts\"> </file>\n * </example>\n *\n * <example name=\"po-email-labs\" title=\"Portinari Email Labs\">\n *  <file name=\"sample-po-email-labs/sample-po-email-labs.component.html\"> </file>\n *  <file name=\"sample-po-email-labs/sample-po-email-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-email-newsletter\" title=\"Portinari Email - Newsletter\">\n *  <file name=\"sample-po-email-newsletter/sample-po-email-newsletter.component.html\"> </file>\n *  <file name=\"sample-po-email-newsletter/sample-po-email-newsletter.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-email',\n  templateUrl: '../po-input/po-input.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PoEmailComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => PoEmailComponent),\n      multi: true\n    }\n  ]\n})\nexport class PoEmailComponent extends PoInputGeneric implements AfterViewInit, OnDestroy {\n\n  icon = 'po-icon-mail';\n\n  maxlength: number = 254;\n\n  type = 'email';\n\n  pattern = '^([\\\\w-]+(?:\\\\.[\\\\w-]+)*)@((?:[\\\\w-]+\\\\.)*\\\\w[\\\\w-]{0,66})\\\\.([a-z]{2,6}(?:\\\\.[a-z]{2})?)$';\n\n  mask = '';\n\n  private listener = this.validateClassesForPattern.bind(this);\n\n  constructor(el: ElementRef) {\n    super(el);\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n    // Se nÃ£o tem ngModel ou reactive form adiciona validaÃ§Ã£o com classes css\n      if (!this.onChangePropagate) {\n        this.inputEl.nativeElement.addEventListener('keyup', this.listener);\n      }\n    });\n    super.ngAfterViewInit();\n  }\n\n  ngOnDestroy() {\n    if (!this.onChangePropagate) {\n      this.inputEl.nativeElement.removeEventListener('keyup', this.listener);\n    }\n  }\n\n    extraValidation(c: AbstractControl): { [key: string]: any } {\n    return null;\n  }\n}\n","import { Component, ElementRef, forwardRef } from '@angular/core';\nimport { AbstractControl, NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\n\nimport { PoInputGeneric } from '../po-input-generic/po-input-generic';\n\n/**\n * @docsExtends PoInputBaseComponent\n *\n * @description\n * O po-login Ã© um input especÃ­fico para login. JÃ¡ possui tipo, estilo e Ã­cone predefinidos.\n *\n * @example\n *\n * <example name=\"po-login-basic\" title=\"Portinari Login Basic\">\n *  <file name=\"sample-po-login-basic/sample-po-login-basic.component.html\"> </file>\n *  <file name=\"sample-po-login-basic/sample-po-login-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-login-labs\" title=\"Portinari Login Labs\">\n *  <file name=\"sample-po-login-labs/sample-po-login-labs.component.html\"> </file>\n *  <file name=\"sample-po-login-labs/sample-po-login-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-login-confirm\" title=\"Portinari Login - Confirm Identity\">\n *  <file name=\"sample-po-login-confirm/sample-po-login-confirm.component.html\"> </file>\n *  <file name=\"sample-po-login-confirm/sample-po-login-confirm.component.ts\"> </file>\n * </example>\n *\n */\n@Component({\n  selector: 'po-login',\n  templateUrl: './po-login.component.html',\n  providers: [\n  {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => PoLoginComponent),\n    multi: true,\n  },\n  {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => PoLoginComponent),\n    multi: true,\n  }]\n})\nexport class PoLoginComponent extends PoInputGeneric {\n\n  type = 'text';\n\n  constructor(el: ElementRef) {\n    super(el);\n  }\n\n  extraValidation(c: AbstractControl): { [key: string]: any; } {\n    return null;\n  }\n\n}\n","import { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\nimport { EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { convertToBoolean, isTypeof } from '../../../utils/util';\nimport { requiredFailed } from '../validators';\n\nimport { PoLookupColumn } from './interfaces/po-lookup-column.interface';\nimport { PoLookupFilter } from './interfaces/po-lookup-filter.interface';\nimport { PoLookupFilterService } from './services/po-lookup-filter.service';\nimport { PoLookupLiterals } from './interfaces/po-lookup-literals.interface';\nimport { InputBoolean } from '../../../decorators';\n\n/**\n * @description\n *\n * Componente utilizado para abrir uma janela de busca com uma tabela que lista dados de um serviÃ§o. Nesta janela Ã© possÃ­vel buscar e\n * selecionar o registro que serÃ¡ enviado para o campo. O `po-lookup` permite que o usuÃ¡rio digite um valor e pressione a tecla *TAB* para\n * buscar um registro.\n *\n * > Caso o campo seja iniciado ou preenchido com um valor inexistente na busca, o mesmo serÃ¡ limpado.\n * No segundo caso ocorrerÃ¡ apÃ³s este perder o foco; ambos os casos o campo ficarÃ¡ invÃ¡lido quando requerido.\n *\n * Este componente nÃ£o Ã© recomendado quando a busca dos dados possuir poucas informaÃ§Ãµes, para isso utilize outros componentes como o\n * `po-select` ou o `po-combo`.\n */\nexport abstract class PoLookupBaseComponent implements ControlValueAccessor, OnDestroy, OnInit, Validator {\n\n  private _disabled?: boolean = false;\n  private _filterService: PoLookupFilter | string;\n  private _noAutocomplete: boolean;\n  private _required?: boolean = false;\n\n  protected getSubscription: Subscription;\n  protected keysDescription: Array<any>;\n  protected oldValue: string = '';\n  protected valueToModel;\n\n  private onChangePropagate: any = null;\n  // tslint:disable-next-line\n  private onTouched: any = null;\n  private validatorChange: any;\n\n  service: any;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Aplica foco no elemento ao ser iniciado.\n   *\n   * > Caso mais de um elemento seja configurado com essa propriedade, apenas o Ãºltimo elemento declarado com ela terÃ¡ o foco.\n   *\n   * @default `false`\n   */\n  @Input('p-auto-focus') @InputBoolean() autoFocus: boolean = false;\n\n  /**\n   * Label do campo.\n   *\n   * > Quando utilizar esta propriedade o seu valor serÃ¡ utilizado como tÃ­tulo da modal do componente caso nÃ£o tenha\n   * sido definido um `modalTitle` na propriedade `p-literals`.\n   */\n  @Input('p-label') label?: string;\n\n  /**\n   * @description\n   *\n   * Objeto com as literais usadas no `po-lookup`.\n   *\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\n   *\n   * ```\n   *  const customLiterals: PoLookupLiterals = {\n   *    modalPrimaryActionLabel: 'Select',\n   *    modalSecondaryActionLabel: 'Cancel',\n   *    modalPlaceholder: 'Search Value',\n   *    modalTableNoColumns: 'No columns',\n   *    modalTableNoData: 'No data',\n   *    modalTableLoadingData: 'Loading data',\n   *    modalTableLoadMoreData: 'Load more',\n   *    modalTitle: 'Select a user'\n   *  };\n   * ```\n   *\n   * Ou passando apenas as literais que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: PoLookupLiterals = {\n   *    modalPrimaryActionLabel: 'Select'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <po-lookup\n   *   [p-literals]=\"customLiterals\">\n   * </po-lookup>\n   * ```\n   *\n   * > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do browser (pt, en, es).\n   */\n  @Input('p-literals') literals?: PoLookupLiterals;\n\n  /** Texto de apoio do campo. */\n  @Input('p-help') help?: string;\n\n  /** Mensagem que aparecerÃ¡ enquanto o campo nÃ£o estiver preenchido. */\n  @Input('p-placeholder') placeholder?: string = '';\n\n  /** Nome e Id do componente. */\n  @Input('name') name: string;\n\n  /**\n   * @description\n   *\n   * Indica a coluna que serÃ¡ utilizada como valor do campo.\n   *\n   * > AtenÃ§Ã£o: Caso nÃ£o seja passada ou tenha o conteÃºdo incorreto, nÃ£o irÃ¡ atualizar o model do formulÃ¡rio.\n   */\n  @Input('p-field-value') fieldValue: string;\n\n  /** Indica a coluna que serÃ¡ utilizada como descriÃ§Ã£o do campo e como filtro dentro da janela. */\n  @Input('p-field-label') fieldLabel: string;\n\n  /** Valor que serÃ¡ repassado como parÃ¢metro para a URL ou aos mÃ©todos do serviÃ§o que implementam a interface `PoLookupFilter`. */\n  @Input('p-filter-params') filterParams?: any;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Formato de exibiÃ§Ã£o do campo.\n   *\n   * Recebe uma funÃ§Ã£o que deve retornar uma *string* com o/os valores do objeto formatados para exibiÃ§Ã£o, por exemplo:\n   *\n   * ```\n   * fieldFormat(obj) {\n   *   return `${obj.id} - ${obj.name}`;\n   * }\n   * ```\n   * > Esta propriedade sobrepÃµe o valor da propriedade `p-field-label` na descriÃ§Ã£o do campo.\n   */\n  @Input('p-field-format') fieldFormat?: (value) => string;\n\n  /**\n   * Lista das colunas da tabela.\n   * Essa propriedade deve receber um array de objetos que implementam a interface PoLookupColumn.\n   */\n  @Input('p-columns') columns?: Array<PoLookupColumn>;\n\n  /**\n   * ServiÃ§o responsÃ¡vel por buscar os dados da tabela na janela. Pode ser informado um serviÃ§o que implemente a interface\n   * `PoLookupFilter` ou uma URL.\n   *\n   * Quando utilizada uma URL de um serviÃ§o, serÃ¡ concatenada nesta URL o valor que deseja-se filtrar, por exemplo:\n   *\n   * ```\n   * url + ?page=1&pageSize=20&filter=Peter\n   * ```\n   *\n   * Caso utilizar ordenaÃ§Ã£o, a coluna ordenada serÃ¡ enviada atravÃ©s do parÃ¢metro `order`, por exemplo:\n   * - Coluna decrescente:\n   * ```\n   *  url + ?page=1&pageSize=20&filter=Peter&order=-name\n   * ```\n   *\n   * - Coluna ascendente:\n   * ```\n   *  url + ?page=1&pageSize=20&filter=Peter&order=name\n   * ```\n   *\n   * Se for definido a propriedade `p-filter-params`, o mesmo tambÃ©m serÃ¡ concatenado. Por exemplo, para o\n   * parÃ¢metro `{ age: 23 }` a URL ficaria:\n   *\n   * ```\n   * url + ?page=1&pageSize=20&age=23&filter=Peter\n   * ```\n   *\n   * > Esta URL deve retornar e receber os dados no padrÃ£o de\n   * [API da PORTINARI](http://tdn.portinari.com/display/public/INT/Guia+de+implementacao+das+APIs+PORTINARI) e utiliza os valores\n   * definidos nas propriedades `p-field-label` e `p-field-value` para a construÃ§Ã£o do `po-lookup`.\n   */\n  @Input('p-filter-service') set filterService(filterService: PoLookupFilter | string) {\n    this._filterService = filterService;\n    this.setService(this.filterService);\n  }\n\n  get filterService() {\n    return this._filterService;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a propriedade nativa `autocomplete` do campo como `off`.\n   *\n   * @default `false`\n   */\n  @Input('p-no-autocomplete') set noAutocomplete(value: boolean) {\n    this._noAutocomplete = convertToBoolean(value);\n  }\n\n  get noAutocomplete() {\n    return this._noAutocomplete;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `p-required`;\n   * - NÃ£o possuir `p-help` e/ou `p-label`.\n   *\n   * @default `false`\n   */\n  @Input('p-optional') optional: boolean;\n\n  /**\n   * @optional\n   * @description\n   *\n   * Indica que o campo serÃ¡ obrigatÃ³rio. Esta propriedade Ã© desconsiderada quando o campo estÃ¡ desabilitado (p-disabled).\n   *\n   * @default `false`\n   */\n  @Input('p-required') set required(required: boolean) {\n    this._required = convertToBoolean(required);\n\n    this.validateModel(this.valueToModel);\n  }\n\n  get required(): boolean {\n    return this._required;\n  }\n\n  /**\n   * @optional\n   *\n   * @deprecated 2.0.0\n   * @description\n   *\n   * **Deprecated**\n   *\n   * > Esta propriedade estÃ¡ depreciada e serÃ¡ excluÃ­da na versÃ£o 2.0.0, utilize a propriedade `p-auto-focus`.\n   *\n   * Aplica foco no elemento ao ser iniciado.\n   *\n   * @default `false`\n   */\n  @Input('p-focus') set oldfocus(focus: boolean) {\n    this.autoFocus = focus;\n  }\n\n  /**\n   * @description\n   *\n   * Indica que o campo serÃ¡ desabilitado.\n   *\n   * @default false\n   * @optional\n   */\n  @Input('p-disabled') set disabled(disabled: boolean) {\n    this._disabled = <any>disabled === '' ? true : convertToBoolean(disabled);\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  /**\n   * Evento serÃ¡ disparado quando ocorrer algum erro na requisiÃ§Ã£o de busca do item.\n   * SerÃ¡ passado por parÃ¢metro o objeto de erro retornado.\n   */\n  @Output('p-error') onError?: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * Evento serÃ¡ disparado quando ocorrer alguma seleÃ§Ã£o.\n   * SerÃ¡ passado por parÃ¢metro o objeto com o valor selecionado.\n   */\n  @Output('p-selected') selected?: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(private defaultService: PoLookupFilterService) {}\n\n  ngOnDestroy() {\n\n    if (this.getSubscription) {\n      this.getSubscription.unsubscribe();\n    }\n  }\n\n  ngOnInit(): void {\n    this.initializeColumn();\n  }\n\n  private initializeColumn(): void {\n    if (this.fieldLabel) {\n      this.keysDescription = [this.fieldLabel];\n    } else {\n      this.keysDescription = [];\n\n      this.keysDescription = this.columns.filter(element => element.fieldLabel)\n        .map(element => element.property);\n    }\n  }\n\n  registerOnValidatorChange(fn: () => void) {\n    this.validatorChange = fn;\n  }\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor.\n  // Usada para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model.\n  registerOnChange(func: any): void {\n    this.onChangePropagate = func;\n  }\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor.\n  // Usada para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model.\n  registerOnTouched(func: any): void {\n    this.onTouched = func;\n  }\n\n  // Seleciona o valor do model.\n  selectValue(valueSelected: any) {\n    this.valueToModel = valueSelected[this.fieldValue];\n\n    this.callOnChange(this.valueToModel);\n    this.selected.emit(valueSelected);\n  }\n\n  callOnChange(value: any) {\n    // Quando o input nÃ£o possui um formulÃ¡rio, entÃ£o esta funÃ§Ã£o nÃ£o Ã© registrada.\n    if (this.onChangePropagate) {\n      this.onChangePropagate(value);\n    }\n  }\n\n  searchById(value: string) {\n    if (typeof(value) === 'string') {\n      value = value.trim();\n    }\n\n    if (value !== '') {\n      this.getSubscription = this.service.getObjectByValue(value, this.filterParams).subscribe(element => {\n        if (element) {\n          this.oldValue = element[this.fieldLabel];\n          this.selectValue(element);\n          this.setViewValue(this.getFormattedLabel(element), element);\n        } else {\n          this.cleanModel();\n        }\n      }, error => {\n        this.cleanModel();\n        this.onError.emit(error);\n      });\n\n    } else {\n      this.cleanModel();\n    }\n  }\n\n  validate(abstractControl: AbstractControl): { [key: string]: any; } {\n    if (requiredFailed(this.required, this.disabled, abstractControl.value)) {\n      return {\n        required: {\n          valid: false,\n        }\n      };\n    }\n  }\n\n  writeValue(value: any): void {\n    if (value && value instanceof Object) {\n      // Esta condiÃ§Ã£o Ã© executada quando Ã© retornado o objeto selecionado do componente Po Lookup Modal.\n      this.oldValue = value[this.fieldLabel];\n      this.valueToModel = value[this.fieldValue];\n      this.setViewValue(this.getFormattedLabel(value), value);\n    } else if (value) {\n      // Esta condiÃ§Ã£o Ã© executada somente quando Ã© passado o ID para realizar a busca pelo ID.\n      this.searchById(value);\n    } else {\n      this.cleanViewValue();\n    }\n  }\n\n  // Atribui um ou mais valores ao campo.\n  abstract setViewValue(value: any, object: any): void;\n\n  // MÃ©todo com a implementaÃ§Ã£o para abrir o lookup.\n  abstract openLookup(): void;\n\n  protected cleanModel() {\n    this.cleanViewValue();\n    this.callOnChange(undefined);\n  }\n\n  protected cleanViewValue() {\n    this.setViewValue('', {});\n    this.oldValue = '';\n    this.valueToModel = null;\n  }\n\n  // Formata a label do campo.\n  protected getFormattedLabel(value: any): string {\n    return value ? this.keysDescription.map(column => value[column]).join(' - ') : '';\n  }\n\n  // Chama o mÃ©todo writeValue e preenche o model.\n  protected selectModel(value: any) {\n    this.writeValue(value);\n    if (value && value instanceof Object) {\n      this.selectValue(value);\n    }\n  }\n\n  protected validateModel(model: any) {\n    if (this.validatorChange) {\n      this.validatorChange(model);\n    }\n  }\n\n  private setService(service: PoLookupFilter | string) {\n\n    if (isTypeof(service, 'object')) {\n      this.service = <PoLookupFilterService> service;\n    }\n\n    if (service && isTypeof(service, 'string')) {\n      this.service = this.defaultService;\n      this.service.setUrl(service);\n    }\n\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { isTypeof } from '../../../../utils/util';\n\nimport { PoLookupFilter } from '../interfaces/po-lookup-filter.interface';\nimport { PoLookupFilteredItemsParams } from '../interfaces/po-lookup-filtered-items-params.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * ServiÃ§o padrÃ£o utilizado para filtrar os dados do componente po-lookup.\n */\n@Injectable()\nexport class PoLookupFilterService implements PoLookupFilter {\n\n  private url: string;\n\n  constructor(private httpClient: HttpClient) {}\n\n  getFilteredItems(filteredItemsParams: PoLookupFilteredItemsParams): Observable<any> {\n    const { filterParams, ...restFilteredItemsParams } = filteredItemsParams;\n\n    const validatedFilterParams = this.validateParams(filterParams);\n\n    const params = { ...restFilteredItemsParams, ...validatedFilterParams };\n\n    return this.httpClient.get(this.url, { params });\n  }\n\n  getObjectByValue(value: string, filterParams?: any): Observable<any> {\n    const validatedFilterParams = this.validateParams(filterParams);\n\n    return this.httpClient.get(`${this.url}/${value}`, { params: validatedFilterParams });\n  }\n\n  setUrl(url: string) {\n    this.url = url;\n  }\n\n  private validateParams(params: any) {\n    return isTypeof(params, 'object') && !Array.isArray(params) ? params : undefined;\n  }\n\n}\n","import { EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\n\nimport { Observable , Subscription } from 'rxjs';\nimport { browserLanguage, isTypeof, poLocaleDefault } from '../../../../utils/util';\nimport { PoModalAction } from '../../../../components/po-modal';\nimport { PoModalComponent } from '../../../../components/po-modal/po-modal.component';\nimport { PoTableColumnSort } from '../../../po-table/interfaces/po-table-column-sort.interface';\nimport { PoTableColumnSortType } from '../../../po-table';\nimport { poTableLiteralsDefault } from '../../../po-table/po-table-base.component';\n\nimport { PoLookupColumn } from '../interfaces/po-lookup-column.interface';\nimport { PoLookupFilter } from '../interfaces/po-lookup-filter.interface';\nimport { PoLookupFilteredItemsParams } from '../interfaces/po-lookup-filtered-items-params.interface';\nimport { PoLookupLiterals } from '../interfaces/po-lookup-literals.interface';\nimport { PoLookupResponseApi } from '../interfaces/po-lookup-response-api.interface';\n\nexport const poLookupLiteralsDefault = {\n  en: <PoLookupLiterals> {\n    modalPrimaryActionLabel: 'Select',\n    modalSecondaryActionLabel: 'Cancel',\n    modalPlaceholder: 'Search',\n    modalTitle: 'Select a record',\n    modalTableNoColumns: poTableLiteralsDefault.en.noColumns,\n    modalTableNoData: poTableLiteralsDefault.en.noData,\n    modalTableLoadingData: poTableLiteralsDefault.en.loadingData,\n    modalTableLoadMoreData: poTableLiteralsDefault.en.loadMoreData\n  },\n  es: <PoLookupLiterals> {\n    modalPrimaryActionLabel: 'Seleccionar',\n    modalSecondaryActionLabel: 'Cancelar',\n    modalPlaceholder: 'Buscar',\n    modalTitle: 'Seleccione un registro',\n    modalTableNoColumns: poTableLiteralsDefault.es.noColumns,\n    modalTableNoData: poTableLiteralsDefault.es.noData,\n    modalTableLoadingData: poTableLiteralsDefault.es.loadingData,\n    modalTableLoadMoreData: poTableLiteralsDefault.es.loadMoreData\n  },\n  pt: <PoLookupLiterals> {\n    modalPrimaryActionLabel: 'Selecionar',\n    modalSecondaryActionLabel: 'Cancelar',\n    modalPlaceholder: 'Pesquisar',\n    modalTitle: 'Selecione um registro',\n    modalTableNoColumns: poTableLiteralsDefault.pt.noColumns,\n    modalTableNoData: poTableLiteralsDefault.pt.noData,\n    modalTableLoadingData: poTableLiteralsDefault.pt.loadingData,\n    modalTableLoadMoreData: poTableLiteralsDefault.pt.loadMoreData\n  },\n  ru: <PoLookupLiterals>{\n    modalPrimaryActionLabel: 'Ð²ÑÐ±Ð¸ÑÐ°ÑÑ',\n    modalSecondaryActionLabel: 'Ð¾ÑÐ¼ÐµÐ½Ð¸ÑÑ',\n    modalPlaceholder: 'Ð¿Ð¾Ð¸ÑÐº',\n    modalTitle: 'ÐÑÐ±ÐµÑÐ¸ÑÐµ Ð·Ð°Ð¿Ð¸ÑÑ',\n    modalTableNoColumns: poTableLiteralsDefault.ru.noColumns,\n    modalTableNoData: poTableLiteralsDefault.ru.noData,\n    modalTableLoadingData: poTableLiteralsDefault.ru.loadingData,\n    modalTableLoadMoreData: poTableLiteralsDefault.ru.loadMoreData\n  }\n};\n\n/**\n * @docsPrivate\n *\n * Classe base do componente Po Lookup Modal.\n */\nexport abstract class PoLookupModalBaseComponent implements OnDestroy, OnInit {\n\n  private _literals: any;\n  private _title: any;\n\n  hasNext = true;\n  isLoading = false;\n  page = 1;\n  pageSize = 10;\n  primaryAction: PoModalAction = {\n    action: () => {\n      this.items.forEach(element => {\n        if (element['$selected']) {\n          this.model.emit(element);\n          this.poModal.close();\n        }\n      });\n    },\n    label: this.literals.modalPrimaryActionLabel\n  };\n  searchValue: string = '';\n  secondaryAction: PoModalAction = {\n    action: () => {\n      this.model.emit(null);\n      this.poModal.close();\n    },\n    label: this.literals.modalSecondaryActionLabel\n  };\n  tableLiterals: any;\n\n  protected sort: PoTableColumnSort;\n\n  private filterSubscription: Subscription;\n  private searchSubscription: Subscription;\n  private showMoreSubscription: Subscription;\n\n  @ViewChild(PoModalComponent, { static: true }) poModal: PoModalComponent;\n\n  /**\n   * Lista das colunas da tabela.\n   * Essa propriedade deve receber um array de objetos que implementam a interface PoLookupColumn.\n   */\n  @Input('p-columns') columns: Array<PoLookupColumn>;\n\n  /** Lista de itens da tabela. */\n  @Input('p-items') items: Array<any>;\n\n  /** Objeto com as literais usadas no `po-lookup-modal`. */\n  @Input('p-literals') set literals(value: PoLookupLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...poLookupLiteralsDefault[poLocaleDefault],\n        ...poLookupLiteralsDefault[browserLanguage()],\n        ...value\n      };\n      if (value.modalTitle) {\n        this.title = this.literals.modalTitle;\n      }\n    } else {\n      this._literals = poLookupLiteralsDefault[browserLanguage()];\n    }\n    this.primaryAction.label = this.literals.modalPrimaryActionLabel;\n    this.secondaryAction.label = this.literals.modalSecondaryActionLabel;\n    this.setTableLiterals();\n  }\n\n  get literals() {\n    return this._literals || poLookupLiteralsDefault[browserLanguage()];\n  }\n\n  /** TÃ­tulo da modal. */\n  @Input('p-title') set title(value: string) {\n    this._title = isTypeof(value, 'string') ? value : this.literals.modalTitle;\n  }\n\n  get title() {\n    return this._title;\n  }\n\n  /** Classe de serviÃ§o com a implementaÃ§Ã£o do cliente. */\n  @Input('p-filter-service') filterService: PoLookupFilter;\n\n  /** Classe de serviÃ§o com a implementaÃ§Ã£o do cliente. */\n  @Input('p-filter-params') filterParams: any;\n\n  /** Evento utilizado ao selecionar um registro da tabela. */\n  @Output('p-change-model') model: EventEmitter<any> = new EventEmitter<any>();\n\n  ngOnDestroy() {\n    if (this.filterSubscription) {\n      this.filterSubscription.unsubscribe();\n    }\n\n    if (this.searchSubscription) {\n      this.searchSubscription.unsubscribe();\n    }\n\n    if (this.showMoreSubscription) {\n      this.showMoreSubscription.unsubscribe();\n    }\n  }\n\n  ngOnInit() {\n    this.initializeData();\n    this.setTableLiterals();\n  }\n\n  search(): void {\n    this.page = 1;\n    if (this.searchValue) {\n      this.isLoading = true;\n      this.searchSubscription = this.getFilteredItems(this.searchValue).subscribe(data => {\n        this.items = data.items;\n        this.hasNext = data.hasNext;\n        this.isLoading = false;\n      });\n    } else {\n      this.initializeData();\n    }\n  }\n\n  showMoreEvent() {\n    this.page ++;\n    this.isLoading = true;\n    this.showMoreSubscription = this.getFilteredItems(this.searchValue).subscribe(data => {\n      data.items.forEach(item => {\n        this.items.push(item);\n      });\n      this.hasNext = data.hasNext;\n      this.isLoading = false;\n    });\n  }\n\n  // MÃ©todo responsÃ¡vel por abrir a modal de busca das informaÃ§Ãµes.\n  abstract openModal(): void;\n\n  private getFilteredItems(filter: string): Observable<PoLookupResponseApi> {\n    const { page, pageSize, filterParams } = this;\n\n    if (this.filterService.getFilteredItems) {\n      const filteredParams: PoLookupFilteredItemsParams = this.getFilteredParams(filter);\n\n      return this.filterService.getFilteredItems(filteredParams);\n    }\n\n    return this.filterService.getFilteredData(filter, page, pageSize, filterParams);\n  }\n\n  private getFilteredParams(filter: string) {\n    const { page, pageSize, filterParams, sort } = this;\n\n    const filteredParams = {};\n    const order = this.getOrderParam(sort);\n    const params = { filter, page, pageSize, order, filterParams };\n\n    for (const key in params) {\n      if (params.hasOwnProperty(key) && params[key]) {\n        filteredParams[key] = params[key];\n      }\n    }\n\n    return filteredParams;\n  }\n\n  private getOrderParam(sort: PoTableColumnSort = { type: undefined }) {\n    const { column, type } = sort;\n\n    if (!column) {\n      return;\n    }\n\n    if (type === PoTableColumnSortType.Descending) {\n      return `-${column.property}`;\n    }\n\n    return `${column.property}`;\n  }\n\n  private initializeData(): void {\n    this.isLoading = true;\n\n    this.filterSubscription = this.getFilteredItems('').subscribe(data => {\n      this.items = data.items;\n      this.hasNext = data.hasNext;\n      this.isLoading = false;\n    });\n  }\n\n  private setTableLiterals() {\n    this.tableLiterals = {\n      'noColumns': this.literals.modalTableNoColumns,\n      'noData': this.literals.modalTableNoData,\n      'loadingData': this.literals.modalTableLoadingData,\n      'loadMoreData': this.literals.modalTableLoadMoreData,\n    };\n  }\n\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\n\nimport { fromEvent, Observable } from 'rxjs';\nimport { debounceTime, filter } from 'rxjs/operators';\n\nimport { PoTableColumnSort } from '../../../po-table/interfaces/po-table-column-sort.interface';\n\nimport { PoLookupModalBaseComponent } from '../po-lookup-modal/po-lookup-modal-base.component';\n\n/**\n * @docsPrivate\n *\n * @docsExtends PoLookupModalBaseComponent\n */\n@Component({\n  selector: 'po-lookup-modal',\n  templateUrl: './po-lookup-modal.component.html'\n})\nexport class PoLookupModalComponent extends PoLookupModalBaseComponent implements OnInit {\n\n  @ViewChild('inpsearch', { static: true }) inputSearchEl: ElementRef;\n\n  keyUpObservable: Observable<any> = null;\n\n  containerHeight: number = 375;\n  tableHeight: number = 370;\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.initializeEventInput();\n    this.setTableHeight();\n  }\n\n  initializeEventInput(): void {\n    this.keyUpObservable = fromEvent(this.inputSearchEl.nativeElement, 'keyup')\n      .pipe(\n        filter((e: any) => this.validateEnterPressed(e)),\n        debounceTime(400)\n      );\n\n    this.keyUpObservable.subscribe(() => {\n      this.search();\n    });\n  }\n\n  openModal() {\n    this.poModal.open();\n  }\n\n  sortBy(sort: PoTableColumnSort) {\n    this.sort = sort;\n  }\n\n  private setTableHeight() {\n    if (window.innerHeight < 615) {\n      this.tableHeight -= 50;\n      this.containerHeight -= 50;\n    }\n  }\n\n  private validateEnterPressed(e: any) {\n    return e.keyCode === 13;\n  }\n\n}\n","import { Injectable, ComponentRef, EventEmitter } from '@angular/core';\n\nimport { PoComponentInjectorService } from '../../../../services/po-component-injector/po-component-injector.service';\nimport { PoLookupColumn } from '../../../../components/po-field/po-lookup/interfaces/po-lookup-column.interface';\nimport { PoLookupFilter } from '../../../../components/po-field/po-lookup/interfaces/po-lookup-filter.interface';\nimport { PoLookupLiterals } from '../interfaces/po-lookup-literals.interface';\nimport { PoLookupModalComponent } from '../po-lookup-modal/po-lookup-modal.component';\n\n/**\n * @docsPrivate\n *\n * ServiÃ§o responsÃ¡vel por controlar a abertura do componente Po Lookup Modal.\n */\n@Injectable()\nexport class PoLookupModalService {\n\n  private componentRef: ComponentRef<any> = null;\n\n  selectValueEvent: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(private poComponentInjector: PoComponentInjectorService) {}\n\n  /**\n   * MÃ©todo responsÃ¡vel por abrir a modal de busca das informaÃ§Ãµes.\n   *\n   * @param service {PoLookupFilter} ServiÃ§o responsÃ¡vel por realizar a busca no serviÃ§o dos dados.\n   * @param columns {Array<PoLookupColumn>} DefiniÃ§Ã£o das colunas na modal de busca.\n   * @param filterParams {any} Valor que serÃ¡ repassado aos mÃ©todos do serviÃ§o para auxiliar no filtro dos dados.\n   * @param title {string} DefiniÃ§Ã£o do tÃ­tulo da modal.\n   * @param literals {PoLookupLiterals} Literais utilizadas no componente.\n   */\n  openModal(params: {\n    service: PoLookupFilter,\n    columns: Array<PoLookupColumn>,\n    filterParams: any,\n    title: string,\n    literals: PoLookupLiterals\n  }): void {\n    const { service, columns, filterParams, title, literals } = params;\n\n    this.componentRef = this.poComponentInjector.createComponentInApplication(PoLookupModalComponent);\n    this.componentRef.instance.title = title;\n    this.componentRef.instance.columns = columns;\n    this.componentRef.instance.filterService = service;\n    this.componentRef.instance.filterParams = filterParams;\n    this.componentRef.instance.literals = literals;\n    this.componentRef.instance.model.subscribe($event => {\n      this.selectValue($event);\n    });\n    this.componentRef.changeDetectorRef.detectChanges();\n    this.componentRef.instance.openModal();\n\n  }\n\n  // Este metodo Ã© chamado quando Ã© selecionado um item na lookup modal.\n  selectValue(value) {\n    if (value) {\n      this.selectValueEvent.emit(value);\n    }\n    this.componentRef.destroy();\n  }\n}\n","import { Component, ElementRef, forwardRef, OnDestroy, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { NG_VALIDATORS , NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\n\nimport { PoLookupBaseComponent } from './po-lookup-base.component';\nimport { PoLookupFilterService } from './services/po-lookup-filter.service';\nimport { PoLookupModalService } from './services/po-lookup-modal.service';\n\n/**\n * @docsExtends PoLookupBaseComponent\n *\n * @description\n *\n * Quando existe muitos dados o po-lookup por padrÃ£o traz apenas 10 itens na tabela e os demais sÃ£o carregados por demanda atravÃ©s do\n * botÃ£o 'Carregar mais resultados'. Para que funcione corretamente, Ã© importante que o serviÃ§o siga o\n * [Guia de implementaÃ§Ã£o das APIs TOTVS](http://tdn.totvs.com/pages/releaseview.action?pageId=271660444).\n *\n * Importante:\n *\n * - Caso o po-lookup contenha o [(ngModel)] sem o atributo name, ocorrerÃ¡ um erro de angular.\n * EntÃ£o serÃ¡ necessÃ¡rio informar o atributo name ou o atributo [ngModelOptions]=\"{standalone: true}\".\n * ```\n * <po-lookup\n *   [(ngModel)]=\"pessoa.nome\"\n *   [ngModelOptions]=\"{standalone: true}\">\n * </po-lookup>\n * ```\n *\n * @example\n *\n * <example name=\"po-lookup-basic\" title=\"Portinari Lookup Basic\">\n *  <file name=\"sample-po-lookup-basic/sample-po-lookup-basic.component.html\"> </file>\n *  <file name=\"sample-po-lookup-basic/sample-po-lookup-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-lookup-labs\" title=\"Portinari Lookup Labs\">\n *  <file name=\"sample-po-lookup-labs/sample-po-lookup-labs.component.html\"> </file>\n *  <file name=\"sample-po-lookup-labs/sample-po-lookup-labs.component.ts\"> </file>\n *  <file name=\"sample-po-lookup.service.ts\"> </file>\n * </example>\n *\n * <example name=\"po-lookup-hero\" title=\"Portinari Lookup - Hero\">\n *  <file name=\"sample-po-lookup-hero/sample-po-lookup-hero.component.html\"> </file>\n *  <file name=\"sample-po-lookup-hero/sample-po-lookup-hero.component.ts\"> </file>\n *  <file name=\"sample-po-lookup.service.ts\"> </file>\n * </example>\n *\n * <example name=\"po-lookup-hero-reactive-form\" title=\"Portinari Lookup - Hero Reactive Form\">\n *  <file name=\"sample-po-lookup-hero-reactive-form/sample-po-lookup-hero-reactive-form.component.html\"> </file>\n *  <file name=\"sample-po-lookup-hero-reactive-form/sample-po-lookup-hero-reactive-form.component.ts\"> </file>\n *  <file name=\"sample-po-lookup.service.ts\"> </file>\n * </example>\n *\n * <example name=\"po-lookup-sw-films\" title=\"Portinari Lookup - Star Wars films\">\n *  <file name=\"sample-po-lookup-sw-films/sample-po-lookup-sw-films.component.html\"> </file>\n *  <file name=\"sample-po-lookup-sw-films/sample-po-lookup-sw-films.component.ts\"> </file>\n *  <file name=\"sample-po-lookup-sw-films/sample-po-lookup-sw-films.service.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-lookup',\n  templateUrl: './po-lookup.component.html',\n  providers: [\n    PoLookupFilterService,\n    PoLookupModalService,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PoLookupComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => PoLookupComponent),\n      multi: true,\n    }]\n})\nexport class PoLookupComponent extends PoLookupBaseComponent implements AfterViewInit, OnDestroy, OnInit {\n\n  private modalSubscription: Subscription;\n\n  @ViewChild('inp', {read: ElementRef, static: true }) inputEl: ElementRef;\n\n  get autocomplete() {\n    return this.noAutocomplete ? 'off' : 'on';\n  }\n\n  constructor(poLookupFilterService: PoLookupFilterService, private poLookupModalService: PoLookupModalService) {\n    super(poLookupFilterService);\n  }\n\n  ngAfterViewInit() {\n    if (this.autoFocus) {\n      this.focus();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.modalSubscription) {\n      this.modalSubscription.unsubscribe();\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  /**\n   * FunÃ§Ã£o que atribui foco ao componente.\n   *\n   * Para utilizÃ¡-la Ã© necessÃ¡rio ter a instÃ¢ncia do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n   *\n   * ```\n   * import { PoLookupComponent } from '@portinari/portinari-ui';\n   *\n   * ...\n   *\n   * @ViewChild(PoLookupComponent, { static: true }) lookup: PoLookupComponent;\n   *\n   * focusLookup() {\n   *   this.lookup.focus();\n   * }\n   * ```\n   */\n  focus(): void {\n    if (!this.disabled) {\n      this.inputEl.nativeElement.focus();\n    }\n  }\n\n  openLookup(): void {\n    if (this.isAllowedOpenModal()) {\n      const { service, columns, filterParams, literals } = this;\n\n      this.poLookupModalService.openModal({ service, columns, filterParams, title: this.label, literals });\n\n      if (!this.modalSubscription) {\n        this.modalSubscription = this.poLookupModalService.selectValueEvent.subscribe(element => {\n          this.selectModel(element);\n        });\n      }\n    }\n  }\n\n  setViewValue(value: any, object: any): void {\n    if (this.fieldFormat) {\n      this.setInputValueWipoieldFormat(object);\n    } else {\n      this.inputEl.nativeElement.value = this.valueToModel || this.valueToModel === 0 ? value : '';\n    }\n  }\n\n  getViewValue(): string {\n    return this.inputEl.nativeElement.value;\n  }\n\n  searchEvent() {\n    const value = this.getViewValue();\n\n    if (this.oldValue !== value) {\n      this.searchById(value);\n    }\n  }\n\n  private isAllowedOpenModal(): boolean {\n\n    if (!this.service) {\n      console.warn('No service informed');\n    }\n\n    return !!(this.service && !this.disabled);\n  }\n\n  private setInputValueWipoieldFormat(objectSelected: any) {\n    const isEmpty = Object.keys(objectSelected).length === 0;\n    const fieldFormated = this.fieldFormat(objectSelected);\n\n    this.oldValue = isEmpty ? '' : fieldFormated;\n    this.inputEl.nativeElement.value = isEmpty ? '' : fieldFormated;\n  }\n\n}\n","import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\n\nimport { isTypeof } from '../../../../utils/util';\n\nimport { PoMultiselectLiterals } from '../../index';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente de pesquisa que serÃ¡ criado dentro do dropdown do `po-multiselect`.\n */\n@Component({\n  selector: 'po-multiselect-search',\n  templateUrl: './po-multiselect-search.component.html',\n})\nexport class PoMultiselectSearchComponent {\n\n  private _placeholder?: string;\n\n  /** Propriedade que recebe as literais definidas no `po-multiselect`. */\n  @Input('p-literals') literals?: PoMultiselectLiterals;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Placeholder do campo de pesquisa.\n   *\n   * > Caso o mesmo nÃ£o seja informado, o valor padrÃ£o serÃ¡ traduzido com base no idioma do navegador (pt, es e en).\n   *\n   * @default `Buscar`\n   */\n  @Input('p-placeholder') set placeholder(placeholder: string) {\n    this._placeholder = placeholder && isTypeof(placeholder, 'string') ? placeholder : this.literals.placeholderSearch;\n  }\n\n  get placeholder() {\n    return this._placeholder || this.literals.placeholderSearch;\n  }\n\n  /** Evento que serÃ¡ disparado a cada tecla digitada no campo de busca. */\n  @Output('p-change') change = new EventEmitter();\n\n  @ViewChild('inputElement', {read: ElementRef, static: true }) inputElement: ElementRef;\n\n  onChange(event) {\n    this.change.emit({event: event, value: this.inputElement.nativeElement.value});\n  }\n\n  setFocus() {\n    this.inputElement.nativeElement.focus();\n  }\n\n  clean() {\n    this.inputElement.nativeElement.value = '';\n  }\n\n}\n","import { Component, ElementRef, EventEmitter, HostListener, Input, Output, ViewChild } from '@angular/core';\n\nimport { PoMultiselectLiterals } from '../../index';\nimport { PoMultiselectOption } from '../po-multiselect-option.interface';\nimport { PoMultiselectSearchComponent } from './../po-multiselect-search/po-multiselect-search.component';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que construÃ­ra o dropdown, contendo o campo de pesquisa e os itens para seleÃ§Ã£o.\n */\n@Component({\n  selector: 'po-multiselect-dropdown',\n  templateUrl: './po-multiselect-dropdown.component.html'\n})\nexport class PoMultiselectDropdownComponent {\n\n  scrollTop = 0;\n  show: boolean = false;\n  haveOptions: boolean = false;\n\n  /** Propriedade que indica se o campo de pesquisa deverÃ¡ ser escondido. */\n  @Input('p-hide-search') hideSearch?: boolean = false;\n\n  /** Propriedade que que recebe as literais definidas no componente `po-multiselect`. */\n  @Input('p-literals') literals?: PoMultiselectLiterals;\n\n  /** Placeholder do campo de pesquisa. */\n  @Input('p-placeholder-search') placeholderSearch: string;\n\n  /** Propriedade que recebe a lista de opÃ§Ãµes selecionadas. */\n  @Input('p-selected-values') selectedValues: Array<any> = [];\n\n  /** Propriedade que recebe a lista de opÃ§Ãµes que deverÃ£o ser criadas no dropdown. */\n  @Input('p-options') options: Array<PoMultiselectOption> = [];\n\n  /** Evento disparado a cada tecla digitada na pesquisa. */\n  @Output('p-change-search') changeSearch = new EventEmitter();\n\n  /** Evento disparado a cada alteraÃ§Ã£o na lista das opÃ§Ãµes selecionadas. */\n  @Output('p-change') change = new EventEmitter();\n\n  /**\n   * Evento disparado quando for detectada uma aÃ§Ã£o que necessite fechar o dropdown.\n   * Por exemplo, no caso de ser teclado TAB dentro do dropdown, entÃ£o Ã© disparado este evento\n   * para notificar o componente principal que deve fechar o dropdown.\n   */\n  @Output('p-close-dropdown') closeDropdown = new EventEmitter();\n\n  @ViewChild('container', { read: ElementRef, static: true }) container: ElementRef;\n  @ViewChild('ulElement', {read: ElementRef, static: true }) ulElement: ElementRef;\n  @ViewChild('searchElement', { static: false }) searchElement: PoMultiselectSearchComponent;\n\n  scrollTo(index) {\n    this.scrollTop = (index <= 2) ? 0 : (index * 44) - 88;\n  }\n\n  isSelectedItem(option: PoMultiselectOption) {\n    return this.selectedValues.some(selectedItem => selectedItem === option.value);\n  }\n\n  clickItem(check, option) {\n    this.updateSelectedValues(check, option);\n\n    if (!this.hideSearch) {\n      this.searchElement.setFocus();\n    }\n  }\n\n  updateSelectedValues(checked, option) {\n    if (checked) {\n      this.selectedValues.push(option.value);\n    } else {\n      const indexSelectedValues = this.selectedValues.indexOf(option.value);\n      this.selectedValues.splice(indexSelectedValues, 1);\n    }\n\n    this.change.emit(this.selectedValues);\n  }\n\n  callChangeSearch(event) {\n    this.changeSearch.emit(event);\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeydown(event: any) {\n    if (event.keyCode === 9) {\n      this.closeDropdown.emit();\n    }\n  }\n\n  controlVisibility(toOpen) {\n    this.show = toOpen;\n    this.checkInitialOptions();\n\n    setTimeout(() => {\n      if (toOpen && this.searchElement && !this.hideSearch) {\n        this.searchElement.setFocus();\n        this.searchElement.clean();\n      }\n    });\n  }\n\n  private checkInitialOptions() {\n    if (this.options.length) {\n      this.haveOptions = true;\n    }\n  }\n\n}\n","import { EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\n\nimport { browserLanguage, convertToBoolean, removeDuplicatedOptions, removeUndefinedAndNullOptions, sortOptionsByProperty,\n          poLocaleDefault } from '../../../utils/util';\nimport { requiredFailed } from './../validators';\n\nimport { PoMultiselectFilterMode } from './po-multiselect-filter-mode.enum';\nimport { PoMultiselectLiterals } from './po-multiselect-literals.interface';\nimport { PoMultiselectOption } from './po-multiselect-option.interface';\nimport { InputBoolean } from '../../../decorators';\n\nexport const poMultiselectLiteralsDefault = {\n  en: <PoMultiselectLiterals> {\n    noData: 'No data found',\n    placeholderSearch: 'Search'\n  },\n  es: <PoMultiselectLiterals> {\n    noData: 'Datos no encontrados',\n    placeholderSearch: 'Busca'\n  },\n  pt: <PoMultiselectLiterals> {\n    noData: 'Nenhum dado encontrado',\n    placeholderSearch: 'Buscar'\n  },\n  ru: <PoMultiselectLiterals>{\n    noData: 'ÐÐ°Ð½Ð½ÑÐµ Ð½Ðµ Ð½Ð°Ð¹Ð´ÐµÐ½Ñ',\n    placeholderSearch: 'Ð¸ÑÐºÐ°ÑÑ'\n  }\n};\n\n/**\n * @description\n *\n * O po-multiselect Ã© um componente de mÃºltipla seleÃ§Ã£o.\n * Este componente Ã© recomendado para dar ao usuÃ¡rio a opÃ§Ã£o de selecionar vÃ¡rios itens em uma lista.\n *\n * Quando a lista possuir poucos itens, deve-se dar preferÃªncia para o uso do po-checkbox-group, por ser mais simples\n * e mais rÃ¡pido para a seleÃ§Ã£o do usuÃ¡rio.\n *\n * Este componente tambÃ©m nÃ£o deve ser utilizado em casos onde a seleÃ§Ã£o seja Ãºnica. Nesses casos, deve-se utilizar o\n * po-select, po-combo ou po-radio-group.\n */\nexport abstract class PoMultiselectBaseComponent implements ControlValueAccessor, OnInit, Validator {\n\n  private _disabled?: boolean = false;\n  private _filterMode?: PoMultiselectFilterMode = PoMultiselectFilterMode.startsWith;\n  private _hideSearch?: boolean = false;\n  private _literals: PoMultiselectLiterals;\n  private _options: Array<PoMultiselectOption>;\n  private _required?: boolean = false;\n  private _sort?: boolean = false;\n\n  private lastLengthModel;\n  private onModelChange: any;\n  // tslint:disable-next-line\n  private onModelTouched: any;\n  private validatorChange: any;\n\n  selectedOptions: Array<PoMultiselectOption> = [];\n  visibleOptionsDropdown: Array<PoMultiselectOption> = [];\n  visibleDisclaimers = [];\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Aplica foco no elemento ao ser iniciado.\n   *\n   * > Caso mais de um elemento seja configurado com essa propriedade, apenas o Ãºltimo elemento declarado com ela terÃ¡ o foco.\n   *\n   * @default `false`\n   */\n  @Input('p-auto-focus') @InputBoolean() autoFocus: boolean = false;\n\n  /** Label no componente. */\n  @Input('p-label') label?: string;\n\n  /** Texto de apoio para o campo. */\n  @Input('p-help') help?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com as literais usadas no `po-multiselect`.\n   *\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\n   *\n   * ```\n   *  const customLiterals: PoMultiselectLiterals = {\n   *    noData: 'Nenhum dado encontrado',\n   *    placeholderSearch: 'Buscar'\n   *  };\n   * ```\n   *\n   * Ou passando apenas as literais que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: PoMultiselectLiterals = {\n   *    noData: 'Sem dados'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente:\n   *\n   * ```\n   * <po-multiselect\n   *   [p-literals]=\"customLiterals\">\n   * </po-po-multiselect>\n   * ```\n   *\n   *  > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do *browser* (pt, en, es).\n   */\n  @Input('p-literals') set literals(value: PoMultiselectLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...poMultiselectLiteralsDefault[poLocaleDefault],\n        ...poMultiselectLiteralsDefault[browserLanguage()],\n        ...value\n      };\n    } else {\n      this._literals = poMultiselectLiteralsDefault[browserLanguage()];\n    }\n  }\n  get literals() {\n    return this._literals || poMultiselectLiteralsDefault[browserLanguage()];\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `p-required`;\n   * - NÃ£o possuir `p-help` e/ou `p-label`.\n   *\n   * @default `false`\n   */\n  @Input('p-optional') optional: boolean;\n\n  /** Mensagem apresentada enquanto o campo estiver vazio. */\n  @Input('p-placeholder') placeholder?: string = '';\n\n  /**\n   * @description\n   *\n   * Placeholder do campo de pesquisa.\n   *\n   * > Caso o mesmo nÃ£o seja informado, o valor padrÃ£o serÃ¡ traduzido com base no idioma do navegador (pt, es e en).\n   *\n   * @default `Buscar`\n   */\n  @Input('p-placeholder-search') placeholderSearch?: string = '';\n\n  /** Nome do componente. */\n  @Input('name') name: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ obrigatÃ³rio. Esta propriedade Ã© desconsiderada quando o campo estÃ¡ desabilitado (p-disabled).\n   *\n   * @default `false`\n   */\n  @Input('p-required') set required(required: boolean) {\n    this._required = <any>required === '' ? true : convertToBoolean(required);\n    this.validateModel();\n  }\n\n  get required() {\n    return this._required;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ desabilitado.\n   *\n   * @default `false`\n   */\n  @Input('p-disabled') set disabled(disabled: boolean) {\n    this._disabled = <any>disabled === '' ? true : convertToBoolean(disabled);\n    this.validateModel();\n\n    this.updateVisibleItems();\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Esconde o campo de pesquisa existente dentro do dropdown do po-multiselect.\n   *\n   * @default `false`\n   */\n  @Input('p-hide-search') set hideSearch(hideSearch: boolean) {\n    this._hideSearch = <any>hideSearch === '' ? true : convertToBoolean(hideSearch);\n  }\n\n  get hideSearch() {\n    return this._hideSearch;\n  }\n\n  /**\n   * @description\n   *\n   * Nesta propriedade deve ser definida uma lista de objetos que implementam a interface PoMultiselectOption.\n   * Esta lista deve conter os valores e os labels que serÃ£o apresentados na tela.\n   *\n   * > Para atualizar a lista de opÃ§Ãµes do `po-multiselect` dinamicamente deve-se utilizar dados imutÃ¡veis.\n   * Exemplo de adiÃ§Ã£o de um novo item com spread:\n   * ```\n   * this.options = [...this.options, { label: 'Example', value: 'example' }];\n   * ```\n   */\n  @Input('p-options') set options(options: Array<PoMultiselectOption>) {\n    this._options = options;\n\n    this.validAndSortOptions();\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que a lista definida na propriedade p-options serÃ¡ ordenada pelo label antes de ser apresentada no\n   * dropdown.\n   *\n   * @default `false`\n   */\n  @Input('p-sort') set sort(sort: boolean) {\n    this._sort = <any>sort === '' ? true : convertToBoolean(sort);\n\n    this.validAndSortOptions();\n  }\n\n  get sort() {\n    return this._sort;\n  }\n\n  /**\n   * @optional\n   *\n   * @deprecated 2.0.0\n   * @description\n   *\n   * **Deprecated**\n   *\n   * > Esta propriedade estÃ¡ depreciada e serÃ¡ excluÃ­da na versÃ£o 2.0.0, utilize a propriedade `p-auto-focus`.\n   *\n   * Aplica foco no elemento ao ser iniciado.\n   *\n   * @default `false`\n   */\n  @Input('p-focus') set oldfocus(focus: boolean) {\n    this.autoFocus = focus;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o modo de pesquisa utilizado no campo de busca, quando habilitado.\n   * Valores definidos no enum: PoMultiselectFilterMode\n   *\n   * @default `startsWith`\n   */\n  @Input('p-filter-mode') set filterMode(filterMode: PoMultiselectFilterMode) {\n    this._filterMode = (filterMode in PoMultiselectFilterMode) ? filterMode : PoMultiselectFilterMode.startsWith;\n    switch (this._filterMode.toString()) {\n      case 'startsWith':\n        this._filterMode = PoMultiselectFilterMode.startsWith;\n        break;\n      case 'contains':\n        this._filterMode = PoMultiselectFilterMode.contains;\n        break;\n      case 'endsWith':\n        this._filterMode = PoMultiselectFilterMode.endsWith;\n        break;\n    }\n  }\n\n  get filterMode() {\n    return this._filterMode;\n  }\n\n  /** Pode ser informada uma funÃ§Ã£o que serÃ¡ disparada quando houver alteraÃ§Ãµes no ngModel. */\n  @Output('p-change') change?: EventEmitter<any> = new EventEmitter<any>();\n\n  protected clickOutListener: () => void;\n  protected resizeListener: () => void;\n\n  ngOnInit() {\n    this.updateList(this.options);\n  }\n\n  validAndSortOptions() {\n    if (this.options && this.options.length) {\n\n      removeUndefinedAndNullOptions(this.options);\n      removeDuplicatedOptions(this.options);\n      this.setUndefinedLabels(this.options);\n\n      if (this.sort) {\n        sortOptionsByProperty(this.options, 'label');\n      }\n    }\n  }\n\n  setUndefinedLabels(options) {\n    options.forEach(option => {\n      if (!option['label']) {\n        option.label = option.value;\n      }\n    });\n  }\n\n  updateList(options: Array<PoMultiselectOption>) {\n    if (options) {\n      this.visibleOptionsDropdown = options;\n    }\n  }\n\n  callOnChange(selectedOptions: Array<PoMultiselectOption>) {\n    if (this.onModelChange) {\n      this.onModelChange(this.getValuesFromOptions(selectedOptions));\n      this.eventChange(selectedOptions);\n    }\n  }\n\n  eventChange(selectedOptions) {\n    if (selectedOptions && this.lastLengthModel !== selectedOptions.length) {\n      this.change.emit(selectedOptions);\n    }\n    this.lastLengthModel = selectedOptions ? selectedOptions.length : null;\n  }\n\n  getValuesFromOptions(selectedOptions: Array<PoMultiselectOption>) {\n    return selectedOptions && selectedOptions.length ? selectedOptions.map(option => option.value) : [];\n  }\n\n  getLabelByValue(value) {\n    const index = this.options.findIndex(option => option.value === value);\n    return this.options[index].label;\n  }\n\n  changeItems(selectedValues) {\n    this.updateSelectedOptions(selectedValues);\n    this.callOnChange(this.selectedOptions);\n  }\n\n  searchByLabel(search: string, options: Array<PoMultiselectOption>, filterMode: PoMultiselectFilterMode) {\n    if (search && options && options.length) {\n      const newOptions: Array<PoMultiselectOption> = [];\n      options.forEach(option => {\n        if (option.label && this.compareMethod(search, option, filterMode)) {\n          newOptions.push(option);\n        }\n      });\n      this.visibleOptionsDropdown = newOptions;\n    }\n  }\n\n  compareMethod(search: string, option: PoMultiselectOption, filterMode: PoMultiselectFilterMode) {\n    switch (filterMode) {\n      case PoMultiselectFilterMode.startsWith:\n        return this.startsWith(search, option);\n      case PoMultiselectFilterMode.contains:\n        return this.contains(search, option);\n      case PoMultiselectFilterMode.endsWith:\n        return this.endsWith(search, option);\n    }\n  }\n\n  startsWith(search: string, option: PoMultiselectOption) {\n    return option.label.toLowerCase().startsWith(search.toLowerCase());\n  }\n\n  contains(search: string, option: PoMultiselectOption) {\n    return option.label.toLowerCase().indexOf(search.toLowerCase()) > -1;\n  }\n\n  endsWith(search: string, option: PoMultiselectOption) {\n    return option.label.toLowerCase().endsWith(search.toLowerCase());\n  }\n\n  validate(c: AbstractControl): { [key: string]: any; } {\n    if (requiredFailed(this.required, this.disabled, c.value)) {\n      return { required: {\n        valid: false,\n      }};\n    }\n\n    return null;\n  }\n\n  updateSelectedOptions(values) {\n    this.selectedOptions = [];\n\n    values.forEach(value => {\n      this.options.forEach(option => {\n        if (option.value === value) {\n          this.selectedOptions.push(option);\n        }\n      });\n    });\n\n    this.updateVisibleItems();\n  }\n\n  writeValue(values: any): void {\n    values = values || [];\n\n    // Validar se todos os items existem entre os options, senÃ£o atualizar o model\n    this.updateSelectedOptions(values);\n\n    if (this.selectedOptions.length < values.length) {\n      this.callOnChange(this.selectedOptions);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onModelTouched = fn;\n  }\n\n  registerOnValidatorChange(fn: () => void) {\n    this.validatorChange = fn;\n  }\n\n  private validateModel() {\n    if (this.validatorChange) {\n      this.validatorChange();\n    }\n  }\n\n  abstract updateVisibleItems(): void;\n\n}\n","/**\r\n * @docsPrivate\r\n *\r\n * @usedBy PoRichTextComponent\r\n *\r\n * @description\r\n *\r\n * *Enum* `PoRichTextModalType` para especificaÃ§Ã£o dos tipos de modal.\r\n */\r\nexport enum PoRichTextModalType {\r\n\r\n/**\r\n * Exibe os dados para inserÃ§Ã£o de imagens.\r\n */\r\nImage = 'image',\r\n\r\n/**\r\n * Exibe os dados para inserÃ§Ã£o de link e texto customizado para link.\r\n */\r\nLink = 'link'\r\n\r\n}\r\n","import {\n  AfterViewInit, ChangeDetectorRef, Component, DoCheck, ElementRef, forwardRef, OnDestroy, Renderer2, ViewChild\n} from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { isMobile } from './../../../utils/util';\nimport { PoControlPositionService } from './../../../services/po-control-position/po-control-position.service';\nimport { PoKeyCodeEnum } from './../../../enums/po-key-code.enum';\n\nimport { PoMultiselectBaseComponent } from './po-multiselect-base.component';\n\nconst poMultiselectContainerOffset = 8;\nconst poMultiselectContainerPositionDefault = 'bottom';\n\n/**\n * @docsExtends PoMultiselectBaseComponent\n *\n * @example\n *\n * <example name=\"po-multiselect-basic\" title=\"Portinari Multiselect Basic\">\n *   <file name=\"sample-po-multiselect-basic/sample-po-multiselect-basic.component.html\"> </file>\n *   <file name=\"sample-po-multiselect-basic/sample-po-multiselect-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-multiselect-labs\" title=\"Portinari Multiselect Labs\">\n *   <file name=\"sample-po-multiselect-labs/sample-po-multiselect-labs.component.html\"> </file>\n *   <file name=\"sample-po-multiselect-labs/sample-po-multiselect-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-multiselect-vacation\" title=\"Portinari Multiselect - Vacation\">\n *   <file name=\"sample-po-multiselect-vacation/sample-po-multiselect-vacation.component.html\"> </file>\n *   <file name=\"sample-po-multiselect-vacation/sample-po-multiselect-vacation.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-multiselect-vacation-reactive-form\" title=\"Portinari Multiselect - Vacation Reactive Form\">\n *   <file name=\"sample-po-multiselect-vacation-reactive-form/sample-po-multiselect-vacation-reactive-form.component.html\"> </file>\n *   <file name=\"sample-po-multiselect-vacation-reactive-form/sample-po-multiselect-vacation-reactive-form.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-multiselect',\n  templateUrl: './po-multiselect.component.html',\n  providers: [\n    PoControlPositionService,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PoMultiselectComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => PoMultiselectComponent),\n      multi: true,\n    }\n  ]\n})\nexport class PoMultiselectComponent extends PoMultiselectBaseComponent implements AfterViewInit, DoCheck, OnDestroy {\n\n  @ViewChild('dropdownElement', { read: ElementRef, static: true }) dropdownElement: ElementRef;\n  @ViewChild('dropdownElement', { static: true }) dropdown;\n  @ViewChild('disclaimerContainer', { read: ElementRef, static: true }) disclaimerContainerElement: ElementRef;\n  @ViewChild('iconElement', { read: ElementRef, static: true }) iconElement: ElementRef;\n  @ViewChild('inputElement', {read: ElementRef, static: true }) inputElement: ElementRef;\n\n  disclaimerOffset = 0;\n  dropdownIcon: string = 'po-icon-arrow-down';\n  dropdownOpen: boolean = false;\n  initialized = false;\n  positionDisclaimerExtra;\n  timeoutResize;\n  visibleElement = false;\n\n  private isCalculateVisibleItems: boolean = true;\n\n  constructor(\n    public renderer: Renderer2,\n    private changeDetector: ChangeDetectorRef,\n    private controlPosition: PoControlPositionService,\n    private el: ElementRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    if (this.autoFocus) {\n      this.focus();\n    }\n    this.initialized = true;\n  }\n\n  ngDoCheck() {\n    const inputWidth = this.inputElement.nativeElement.offsetWidth;\n    // Permite que os disclaimers sejam calculados na primeira vez que o componente torna-se visÃ­vel,\n    // evitando com isso, problemas com Tabs ou Divs que iniciem escondidas.\n    if ((inputWidth && !this.visibleElement && this.initialized) || (inputWidth && this.isCalculateVisibleItems)) {\n      this.debounceResize();\n      this.visibleElement = true;\n      return;\n    }\n  }\n\n  ngOnDestroy() {\n    this.removeListeners();\n  }\n\n  /**\n   * FunÃ§Ã£o que atribui foco ao componente.\n   *\n   * Para utilizÃ¡-la Ã© necessÃ¡rio ter a instÃ¢ncia do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n   *\n   * ```\n   * import { PoMultiselectComponent } from '@portinari/portinari-ui';\n   *\n   * ...\n   *\n   * @ViewChild(PoMultiselectComponent, { static: true }) multiselect: PoMultiselectComponent;\n   *\n   * focusMultiselect() {\n   *   this.multiselect.focus();\n   * }\n   * ```\n   */\n  focus(): void {\n    if (!this.disabled) {\n      this.inputElement.nativeElement.focus();\n    }\n  }\n\n  getInputWidth() {\n    return this.el.nativeElement.querySelector('.po-input').offsetWidth - 40;\n  }\n\n  getDisclaimersWidth() {\n    const disclaimers = this.el.nativeElement.querySelectorAll('po-disclaimer');\n    return Array.from(disclaimers).map(disclaimer => disclaimer['offsetWidth']);\n  }\n\n  calculateVisibleItems() {\n    const disclaimersWidth = this.getDisclaimersWidth();\n    const inputWidth = this.getInputWidth();\n    const extraDisclaimerSize = 38;\n    const disclaimersVisible = disclaimersWidth[0];\n\n    this.visibleDisclaimers = [];\n\n    if (inputWidth > 0) {\n      let sum = 0;\n      let i = 0;\n      for (i = 0; i < this.selectedOptions.length; i++) {\n        sum += disclaimersWidth[i];\n        this.visibleDisclaimers.push(this.selectedOptions[i]);\n\n        if (sum > inputWidth) {\n          sum -= disclaimersWidth[i];\n          this.isCalculateVisibleItems = false;\n          break;\n        }\n      }\n\n      if (disclaimersVisible || !this.selectedOptions.length) {\n\n        if (i === this.selectedOptions.length) {\n          this.isCalculateVisibleItems = false;\n          return;\n        }\n\n        if (sum + extraDisclaimerSize > inputWidth) {\n          this.visibleDisclaimers.splice(-2, 2);\n          const label = '+' + (this.selectedOptions.length + 1 - i).toString();\n          this.visibleDisclaimers.push({value: '', label: label});\n        } else {\n          this.visibleDisclaimers.splice(-1, 1);\n          const label = '+' + (this.selectedOptions.length - i).toString();\n          this.visibleDisclaimers.push({value: '', label: label});\n        }\n\n      }\n    }\n  }\n\n  updateVisibleItems() {\n    this.visibleDisclaimers = [].concat(this.selectedOptions);\n\n    this.debounceResize();\n\n    // quando estiver dentro de modal\n    if (!this.inputElement.nativeElement.offsetWidth) {\n      this.isCalculateVisibleItems = true;\n    }\n  }\n\n  debounceResize() {\n    clearTimeout(this.timeoutResize);\n    this.timeoutResize = setTimeout(() => {\n      this.calculateVisibleItems();\n    }, 200);\n  }\n\n  onKeyDown(event?: any) {\n    if (event.keyCode === PoKeyCodeEnum.arrowUp || event.keyCode === PoKeyCodeEnum.arrowDown) {\n      event.preventDefault();\n      this.controlDropdownVisibility(true);\n      return;\n    }\n\n    if (event.keyCode === PoKeyCodeEnum.tab) {\n      this.controlDropdownVisibility(false);\n      return;\n    }\n  }\n\n  toggleDropdownVisibility() {\n    if (this.disabled) {\n      return;\n    }\n\n    this.controlDropdownVisibility(!this.dropdownOpen);\n  }\n\n  openDropdown(toOpen) {\n\n    if (toOpen && !this.disabled) {\n      this.controlDropdownVisibility(true);\n    }\n\n  }\n\n  controlDropdownVisibility(toOpen: boolean) {\n    toOpen ? this.open() : this.close();\n  }\n\n  scrollToSelectedOptions() {\n  if (this.selectedOptions && this.selectedOptions.length) {\n      const index = this.options.findIndex(option => option.value === this.selectedOptions[0].value);\n      this.dropdown.scrollTo(index);\n    }\n  }\n\n  setVisibleOptionsDropdown(options) {\n    this.visibleOptionsDropdown = options;\n  }\n\n  changeSearch(event) {\n    (event && event.value) ? this.searchByLabel(event.value, this.options, this.filterMode) : this.setVisibleOptionsDropdown(this.options);\n\n    // timeout necessÃ¡rio para reposicionar corretamente quando dropdown estiver pra cima do input e realizar busca no input\n    setTimeout(() => this.adjustContainerPosition());\n  }\n\n  getPlaceholder() {\n    return (this.placeholder && !this.visibleDisclaimers.length) ? this.placeholder : '';\n  }\n\n  closeDisclaimer(value) {\n    const index = this.selectedOptions.findIndex(option => option.value === value);\n    this.selectedOptions.splice(index, 1);\n\n    this.updateVisibleItems();\n    this.callOnChange(this.selectedOptions);\n  }\n\n  wasClickedOnToggle(event: MouseEvent): void {\n    if (!this.inputElement.nativeElement.contains(event.target) &&\n      !this.iconElement.nativeElement.contains(event.target) &&\n      !this.dropdownElement.nativeElement.contains(event.target) &&\n      !this.disclaimerContainerElement.nativeElement.contains(event.target) &&\n      this.dropdownOpen) {\n\n      this.controlDropdownVisibility(false);\n    }\n  }\n\n  private adjustContainerPosition(): void {\n    this.controlPosition.adjustPosition(poMultiselectContainerPositionDefault);\n  }\n\n  private close(): void {\n    this.dropdownIcon = 'po-icon-arrow-down';\n    this.dropdownOpen = false;\n\n    this.dropdown.controlVisibility(false);\n    this.setVisibleOptionsDropdown(this.options);\n\n    this.removeListeners();\n  }\n\n  private initializeListeners(): void {\n    this.clickOutListener = this.renderer.listen('document', 'click', (event: MouseEvent) => {\n      this.wasClickedOnToggle(event);\n    });\n\n    this.resizeListener = this.renderer.listen('window', 'resize', () => {\n      this.updateVisibleItems();\n\n      isMobile() ? this.adjustContainerPosition() : this.close();\n    });\n\n    window.addEventListener('scroll', this.onScroll, true);\n  }\n\n  private onScroll = (): void => {\n    this.adjustContainerPosition();\n  }\n\n  private open(): void {\n    this.dropdownIcon = 'po-icon-arrow-up';\n    this.dropdownOpen = true;\n\n    this.dropdown.controlVisibility(true);\n    this.setVisibleOptionsDropdown(this.options);\n    this.initializeListeners();\n    this.scrollToSelectedOptions();\n\n    this.changeDetector.detectChanges();\n    this.setPositionDropdown();\n  }\n\n  private removeListeners(): void {\n    if (this.clickOutListener) {\n      this.clickOutListener();\n    }\n\n    if (this.resizeListener) {\n      this.resizeListener();\n    }\n\n    window.removeEventListener('scroll', this.onScroll, true);\n  }\n\n  private setPositionDropdown(): void {\n    this.controlPosition.setElements(\n      this.dropdown.container.nativeElement,\n      poMultiselectContainerOffset,\n      this.inputElement,\n      ['top', 'bottom'],\n      true\n    );\n\n    this.adjustContainerPosition();\n  }\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que constrÃ³i cada item no dropdown, contendo o checkbox e o label.\n */\n@Component({\n  selector: 'po-multiselect-item',\n  templateUrl: './po-multiselect-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoMultiselectItemComponent {\n\n  /** RÃ³tulo do item. */\n  @Input('p-label') label: string;\n\n  /** Esta propriedade indica se o campo estÃ¡ selecionado ou nÃ£o. */\n  @Input('p-selected') selected?: boolean = false;\n\n  /** Evento que serÃ¡ disparado toda vez que o usuÃ¡rio marcar ou desmarcar um item. */\n  @Output('p-change') change = new EventEmitter();\n\n  itemClicked() {\n    this.selected = !this.selected;\n    this.change.emit(this.selected);\n  }\n}\n","import { Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\n\nimport { isFirefox, isIE, isIEOrEdge, openExternalLink } from './../../../../utils/util';\nimport { PoKeyCodeEnum } from './../../../../enums/po-key-code.enum';\n\nconst poRichTextBodyCommands = [\n  'bold', 'italic', 'underline', 'justifyleft', 'justifycenter', 'justifyright', 'justifyfull', 'insertUnorderedList', 'Createlink'\n];\n\n@Component({\n  selector: 'po-rich-text-body',\n  templateUrl: './po-rich-text-body.component.html'\n})\nexport class PoRichTextBodyComponent implements OnInit {\n\n  private isLinkEditing: boolean;\n  private linkElement: any;\n  private timeoutChange: any;\n  private valueBeforeChange: any;\n\n  @ViewChild('bodyElement', { static: true }) bodyElement: ElementRef;\n\n  @Input('p-height') height?: string;\n\n  @Input('p-model-value') modelValue?: string;\n\n  @Input('p-placeholder') placeholder?: string;\n\n  @Input('p-readonly') readonly?: string;\n\n  @Output('p-change') change = new EventEmitter<any>();\n\n  @Output('p-commands') commands = new EventEmitter<any>();\n\n  @Output('p-selected-link') selectedLink = new EventEmitter<any>();\n\n  @Output('p-shortcut-command') shortcutCommand = new EventEmitter<any>();\n\n  @Output('p-value') value = new EventEmitter<any>();\n\n  ngOnInit() {\n    this.bodyElement.nativeElement.designMode = 'on';\n\n    // timeout necessÃ¡rio para setar o valor vindo do writeValue do componente principal.\n    setTimeout(() => this.updateValueWithModelValue());\n  }\n\n  executeCommand(command: (string | { command: any, value: string | any })) {\n    this.bodyElement.nativeElement.focus();\n\n    if (typeof (command) === 'object') {\n\n      if (command.command === 'InsertHTML') {\n        const { command: linkCommand, value : { urlLink }, value : { urlLinkText} } = command;\n\n        this.handleCommandLink(linkCommand, urlLink, urlLinkText);\n      } else {\n        document.execCommand(command.command, false, command.value);\n      }\n    } else {\n      document.execCommand(command, false, null);\n    }\n\n    this.updateModel();\n    this.value.emit(this.modelValue);\n  }\n\n  linkEditing(event) {\n    this.isLinkEditing = !!event;\n  }\n\n  onBlur() {\n    if (this.modelValue !== this.valueBeforeChange) {\n      clearTimeout(this.timeoutChange);\n      this.timeoutChange = setTimeout(() => {\n        this.change.emit(this.modelValue);\n      }, 200);\n    }\n  }\n\n  focus(): void {\n    this.bodyElement.nativeElement.focus();\n  }\n\n  onClick() {\n    this.emitSelectionCommands();\n  }\n\n  onFocus() {\n    this.valueBeforeChange = this.modelValue;\n  }\n\n  onKeyDown(event) {\n    const keyK = event.keyCode === PoKeyCodeEnum.keyK;\n    const isLinkShortcut = keyK && event.ctrlKey || keyK && event.metaKey;\n\n    if (isLinkShortcut) {\n      event.preventDefault();\n      this.shortcutCommand.emit();\n    }\n\n    this.toggleCursorOnLink(event, 'add');\n  }\n\n  onKeyUp(event: any) {\n    this.toggleCursorOnLink(event, 'remove');\n\n    this.removeBrElement();\n    this.updateModel();\n    this.emitSelectionCommands();\n  }\n\n  onPaste() {\n    this.addClickListenerOnAnchorElements();\n    this.update();\n  }\n\n  update() {\n    setTimeout(() => this.updateModel());\n\n    setTimeout(() => {\n      this.removeBrElement();\n      this.updateModel();\n      this.emitSelectionCommands();\n    });\n  }\n\n  private addClickListenerOnAnchorElements() {\n    this.bodyElement.nativeElement.querySelectorAll('a').forEach(element => {\n\n      element.addEventListener('click', this.onAnchorClick);\n    });\n  }\n\n  private emitSelectionCommands() {\n    const commands = poRichTextBodyCommands.filter(command => document.queryCommandState(command));\n    const rgbColor = document.queryCommandValue('ForeColor');\n\n    let hexColor;\n    if (!isIE()) {\n      hexColor = this.rgbToHex(rgbColor);\n    }\n\n    if (this.isCursorPositionedInALink()) {\n      commands.push('Createlink');\n    }\n\n    this.selectedLink.emit(this.linkElement); // importante ficar fora do if para emitir mesmo undefined.\n    this.commands.emit({commands, hexColor});\n  }\n\n  private getTextSelection() {\n    const textSelection = document.getSelection();\n    if (!textSelection) {\n      return;\n    }\n    const focusNode = textSelection.focusNode ? textSelection.focusNode.parentElement : undefined;\n    const anchorNode = textSelection.anchorNode ? textSelection.anchorNode.parentNode : undefined;\n    const node = focusNode || anchorNode;\n    let tagName;\n\n    if (node) {\n      tagName = node['tagName'] || node['nodeName'];\n      return {\n        node,\n        tagName\n      };\n    }\n\n  }\n\n  private handleCommandLink(linkCommand: string, urlLink: string, urlLinkText: string) {\n    if (isIE()) {\n      this.insertHtmlLinkElement(urlLink, urlLinkText);\n\n    } else {\n      // '&nbsp;' necessÃ¡rio para o cursor nÃ£o ficar preso dentro do link no Firefox.\n      const linkValue = isFirefox() && !this.isLinkEditing ?\n      `&nbsp;${this.makeLinkTag(urlLink, urlLinkText)}&nbsp;` :\n      this.makeLinkTag(urlLink, urlLinkText);\n\n      document.execCommand(linkCommand, false, linkValue);\n    }\n\n    this.addClickListenerOnAnchorElements();\n  }\n\n  // tratamento especÃ­fico para IE pois nÃ£o suporta o comando 'insertHTML'.\n  private insertHtmlLinkElement(urlLink: string, urlLinkText: string) {\n    constÂ selectionÂ =Â document.getSelection();\n    const selectionRange = selection.getRangeAt(0);\n    const elementLink = document.createElement('a');\n    const elementlinkText = document.createTextNode(urlLinkText);\n\n    elementLink.appendChild(elementlinkText);\n    elementLink.href = urlLink;\n    elementLink.setAttribute('target', '_blank');\n    elementLink.classList.add('po-rich-text-link');\n\n    selectionRange.deleteContents();\n    selectionRange.insertNode(elementLink);\n  }\n\n  privateÂ isCursorPositionedInALink(): booleanÂ {\n    constÂ textSelectionÂ =Â this.getTextSelection();\n    this.linkElement = undefined;\n\n    let isLink = false;\n\n    ifÂ (textSelection && textSelection.node && textSelection.tagNameÂ ===Â 'A')Â {\n      this.linkElement = textSelection.node;\n      isLink = true;\n\n    } else if ((isFirefox() || isIEOrEdge()) && this.verifyCursorPositionInFirefoxIEEdge()) {\n      isLink = true;\n\n    } else {\n      isLink = textSelection ? this.isParentNodeAnchor(textSelection) : false;\n    }\n    return isLink;\n  }\n\n  privateÂ isParentNodeAnchor(textSelection): boolean {\n    let element = textSelection.node;\n    let isLink = false;\n\n    whileÂ (element && (element.tagNameÂ !== null || element.nodeName !== null))Â {\n      ifÂ (element.tagNameÂ === 'A' || element.nodeName === 'A')Â {\n        this.linkElement = element;\n        isLink = true;\n        returnÂ isLink;\n      }\n      element = element.parentElement || element.parentNode;\n    }\n\n    this.linkElement = undefined;\n    returnÂ isLink;\n  }\n\n  private makeLinkTag(urlLink: string, urlLinkText: string) {\n    return `<a class=\"po-rich-text-link\" href=\"${urlLink}\" target=\"_blank\">${urlLinkText || urlLink}</a>`;\n  }\n\n  private onAnchorClick = event => {\n    const { target, ctrlKey, metaKey } = event;\n    let url;\n    let elementLink;\n\n    if (ctrlKey || metaKey) {\n      if (event.path) {\n        event.path.forEach(element => {\n          if (element.nodeName === 'A') {\n            url = element.href;\n            elementLink = element;\n          }\n        });\n      } else {\n        url = target.attributes.href.value;\n        elementLink = target;\n      }\n      openExternalLink(url);\n      elementLink.classList.remove('po-clickable');\n    }\n  }\n\n  // Tratamento necessÃ¡rio para eliminar a tag <br> criada no firefox quando o body for limpo.\n  private removeBrElement() {\n    const bodyElement = this.bodyElement.nativeElement;\n\n    if (!bodyElement.innerText.trim() && bodyElement.childNodes.length === 1 && bodyElement.querySelector('br')) {\n      bodyElement.querySelector('br').remove();\n    }\n  }\n\n  private rgbToHex(rgb) {\n    // Tratamento necessÃ¡rio para converter o cÃ³digo rgb para hexadecimal.\n    const sep = rgb.indexOf(',') > -1 ? ',' : ' ';\n    rgb = rgb.substr(4).split(')')[0].split(sep);\n\n    let r = (+rgb[0]).toString(16);\n    let g = (+rgb[1]).toString(16);\n    let b = (+rgb[2]).toString(16);\n\n    if (r.length === 1) {\n      r = '0' + r;\n    }\n    if (g.length === 1) {\n      g = '0' + g;\n    }\n    if (b.length === 1) {\n      b = '0' + b;\n    }\n\n    return '#' + r + g + b;\n  }\n\n  private toggleCursorOnLink(event: any, action: 'add' | 'remove') {\n    const selection = document.getSelection();\n    const element = selection.focusNode ? selection.focusNode.parentNode : undefined;\n    const isCtrl = event.key === 'Control';\n    const isCommand = event.key === 'Meta';\n    const isOnCtrlLink = this.isCursorPositionedInALink() && (isCtrl || isCommand);\n\n    if (element) {\n      if (isOnCtrlLink) {\n        element['classList'][action]('po-clickable');\n\n      } else {\n        const isClickable = element['classList'] && element['classList'].contains('po-clickable');\n\n        if (isClickable) {\n          element['classList'].remove('po-clickable');\n        }\n      }\n      this.updateModel();\n    }\n\n  }\n\n  private updateModel() {\n    this.modelValue = this.bodyElement.nativeElement.innerHTML;\n\n    this.value.emit(this.modelValue);\n  }\n\n  private updateValueWithModelValue() {\n    if (this.modelValue) {\n      this.bodyElement.nativeElement.insertAdjacentHTML('afterbegin', this.modelValue);\n    }\n  }\n\n  private verifyCursorPositionInFirefoxIEEdge(): boolean {\n    const textSelection = document.getSelection();\n    const nodeLink = textSelection.focusNode;\n    let isLink = false;\n\n    if (nodeLink && nodeLink.nodeName === 'A') {\n      this.linkElement = nodeLink;\n      isLink = true;\n\n    } else {\n      const range = textSelection.getRangeAt(0);\n      const fragmentDocument = range.cloneContents();\n      const element = fragmentDocument.childNodes[0] || fragmentDocument.firstElementChild;\n\n      this.linkElement = (element && element.nodeName === 'A') ? element : undefined;\n      isLink = !!this.linkElement;\n    }\n\n    return isLink;\n  }\n\n}\n","import { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\nimport { EventEmitter, Input, Output } from '@angular/core';\n\nimport { convertToBoolean } from '../../../utils/util';\nimport { requiredFailed } from '../validators';\nimport { InputBoolean } from '../../../decorators';\n\n/**\n * @description\n *\n * O componente `po-rich-text` Ã© um editor de textos enriquecidos.\n *\n * Para ediÃ§Ã£o de texto simples sem formataÃ§Ã£o recomenda-se o uso do componente [**po-textarea**](/documentation/po-textarea).\n *\n * > No navegador Internet Explorer nÃ£o Ã© possÃ­vel alterar a cor do texto.\n */\nexport abstract class PoRichTextBaseComponent implements ControlValueAccessor, Validator {\n\n  private _height?: number;\n  private _placeholder: string;\n  private _readonly: boolean;\n  private _required: boolean;\n\n  invalid: boolean = false;\n  onChangeModel: any = null;\n  value: string;\n\n  // tslint:disable-next-line\n  private onTouched: any = null;\n  private validatorChange: any;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Aplica foco no elemento ao ser iniciado.\n   *\n   * > Caso mais de um elemento seja configurado com essa propriedade, apenas o Ãºltimo elemento declarado com ela terÃ¡ o foco.\n   *\n   * @default `false`\n   */\n  @Input('p-auto-focus') @InputBoolean() autoFocus: boolean = false;\n\n  /**\n   * @description\n   *\n   * Mensagem que serÃ¡ apresentada quando a propriedade required estiver habilitada e o campo for limpo apÃ³s algo ser digitado.\n   */\n  @Input('p-error-message') errorMessage?: string = '';\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a altura da Ã¡rea de ediÃ§Ã£o de texto.\n   *\n   * > Altura mÃ­nima do componente Ã© `94` e a altura mÃ¡xima Ã© `262`.\n   */\n  @Input('p-height') set height(height: number) {\n    this._height = height;\n  }\n\n  get height() {\n    return this._height;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Texto de apoio do campo.\n   */\n  @Input('p-help') help?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * RÃ³tulo do campo.\n   */\n  @Input('p-label') label?: string;\n\n  /** Nome e identificador do campo. */\n  @Input('name') name: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `p-required`;\n   * - NÃ£o possuir `p-help` e/ou `p-label`.\n   *\n   * @default `false`\n   */\n  @Input('p-optional') optional: boolean;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Mensagem que aparecerÃ¡ enquanto o campo nÃ£o estiver preenchido.\n   *\n   * @default ''\n   */\n  @Input('p-placeholder') set placeholder(value: string) {\n    this._placeholder = value || '';\n  }\n\n  get placeholder() {\n    return this._placeholder;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ somente leitura.\n   *\n   * @default `false`\n   */\n  @Input('p-readonly') set readonly(value: boolean) {\n    this._readonly = convertToBoolean(value);\n  }\n\n  get readonly() {\n    return this._readonly;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ obrigatÃ³rio.\n   *\n   * @default `false`\n   */\n  @Input('p-required') set required(value: boolean) {\n    this._required = convertToBoolean(value);\n\n    this.validateModel(this.value);\n  }\n\n  get required() {\n    return this._required;\n  }\n\n  /** Evento disparado ao deixar o campo e que recebe como parÃ¢metro o valor alterado. */\n  @Output('p-change') change?: EventEmitter<any> = new EventEmitter();\n\n  /** Evento disparado ao modificar valor do model e que recebe como parÃ¢metro o valor alterado. */\n  @Output('p-change-model') changeModel?: EventEmitter<any> = new EventEmitter();\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  // Usada para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model\n  registerOnChange(func: any): void {\n    this.onChangeModel = func;\n  }\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  // Usada para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model\n  registerOnTouched(func: any): void {\n    this.onTouched = func;\n  }\n\n  registerOnValidatorChange(fn: () => void) {\n    this.validatorChange = fn;\n  }\n\n  validate(abstractControl: AbstractControl): { [key: string]: any; } {\n    if (requiredFailed(this.required, false, abstractControl.value)) {\n      return { required: {\n        valid: false,\n      }};\n    }\n  }\n\n  writeValue(value: string): void {\n    this.value = value;\n  }\n\n  // Executa a funÃ§Ã£o onChange\n  protected updateModel(value: any) {\n    // Quando o rich-text nÃ£o possui um formulÃ¡rio, entÃ£o esta funÃ§Ã£o nÃ£o Ã© registrada\n    if (this.onChangeModel) {\n      this.onChangeModel(value);\n    }\n  }\n\n  protected validateModel(value: any) {\n    if (this.validatorChange) {\n      this.validatorChange(value);\n    }\n  }\n\n}\n","import { AfterViewInit, Component, ElementRef, forwardRef, OnDestroy, ViewChild } from '@angular/core';\n\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { PoRichTextBaseComponent } from './po-rich-text-base.component';\nimport { PoRichTextBodyComponent } from './po-rich-text-body/po-rich-text-body.component';\n\n/**\n * @docsExtends PoRichTextBaseComponent\n *\n * @example\n *\n * <example name=\"po-rich-text-basic\" title=\"Portinari Rich Text Basic\">\n *   <file name=\"sample-po-rich-text-basic/sample-po-rich-text-basic.component.html\"> </file>\n *   <file name=\"sample-po-rich-text-basic/sample-po-rich-text-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-rich-text-labs\" title=\"Portinari Rich Text Labs\">\n *   <file name=\"sample-po-rich-text-labs/sample-po-rich-text-labs.component.html\"> </file>\n *   <file name=\"sample-po-rich-text-labs/sample-po-rich-text-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-rich-text-recipe\" title=\"Portinari Rich Text Recipe\">\n *   <file name=\"sample-po-rich-text-recipe/sample-po-rich-text-recipe-image-base-64.ts\"> </file>\n *   <file name=\"sample-po-rich-text-recipe/sample-po-rich-text-recipe.component.html\"> </file>\n *   <file name=\"sample-po-rich-text-recipe/sample-po-rich-text-recipe.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-rich-text',\n  templateUrl: './po-rich-text.component.html',\n  providers: [\n  {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => PoRichTextComponent),\n    multi: true,\n  },\n  {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => PoRichTextComponent),\n    multi: true,\n  }]\n})\nexport class PoRichTextComponent extends PoRichTextBaseComponent implements AfterViewInit, OnDestroy {\n\n  private listener = this.validateClassesForRequired.bind(this);\n  private modelLastUpdate: any;\n\n  @ViewChild(PoRichTextBodyComponent, { static: true }) bodyElement: PoRichTextBodyComponent;\n\n  get errorMsg() {\n    return (this.errorMessage !== '' && !this.value && this.required && this.invalid) ? this.errorMessage : '';\n  }\n\n  constructor(private element: ElementRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    // Se nÃ£o tem ngModel ou reactive form adiciona validaÃ§Ã£o com classes css\n    this.addKeyListeners();\n    this.verifyAutoFocus();\n  }\n\n  ngOnDestroy() {\n    if (!this.onChangeModel) {\n      this.element.nativeElement.removeEventListener('keyup', this.listener);\n      this.element.nativeElement.removeEventListener('keydown', this.listener);\n      this.element.nativeElement.removeEventListener('cut', this.listener);\n      this.element.nativeElement.removeEventListener('paste', this.listener);\n    }\n  }\n\n  /**\n   * FunÃ§Ã£o que atribui foco ao componente.\n   *\n   * Para utilizÃ¡-la Ã© necessÃ¡rio ter a instÃ¢ncia do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n   *\n   * ```\n   * import { PoRichTextComponent } from '@portinari/portinari-ui';\n   *\n   * ...\n   *\n   * @ViewChild(PoRichTextComponent, { static: true }) richText: PoRichTextComponent;\n   *\n   * focusRichText() {\n   *   this.richText.focus();\n   * }\n   * ```\n   */\n  focus(): void {\n    this.bodyElement.focus();\n  }\n\n  onChangeValue(value: any) {\n    this.change.emit(value);\n  }\n\n  updateValue(value: string) {\n    this.value = value;\n    this.invalid = !value;\n    this.controlChangeModelEmitter(this.value);\n    this.updateModel(this.value);\n  }\n\n  private addKeyListeners() {\n    if (!this.onChangeModel) {\n      this.element.nativeElement.addEventListener('keyup', this.listener);\n      this.element.nativeElement.addEventListener('keydown', this.listener);\n      this.element.nativeElement.addEventListener('cut', this.listener);\n      this.element.nativeElement.addEventListener('paste', this.listener);\n    }\n  }\n\n  private controlChangeModelEmitter(value: any) {\n    if (this.modelLastUpdate !== value) {\n      this.changeModel.emit(value);\n      this.modelLastUpdate = value;\n    }\n  }\n\n  private verifyAutoFocus() {\n    if (this.autoFocus) {\n      this.focus();\n    }\n  }\n\n  private validateClassesForRequired() {\n    setTimeout(() => {\n      const value = this.value;\n      const element = this.element.nativeElement;\n\n      if (!value && this.required) {\n        element.classList.add('ng-invalid');\n        element.classList.add('ng-dirty');\n      } else {\n        element.classList.remove('ng-invalid');\n      }\n    });\n  }\n\n}\n","export const poRichTextLiteralsDefault = {\n  en: {\n    bold: 'Bold',\n    italic: 'Italic',\n    underline: 'Underline',\n    left: 'Left',\n    center: 'Center',\n    right: 'Right',\n    justify: 'Justify',\n    textColor: 'Text color',\n    unorderedList: 'Bulleted list',\n    insertLink: 'Insert link',\n    linkTextLabel: 'Text with link',\n    linkUrlTextHelper: 'Paste in the text box below the copied browser link',\n    linkUrlTextPlaceholder: 'Enter the link address that will be attached to the text.',\n    cancel: 'Cancel',\n    editLink: 'Edit link',\n    insert: 'Insert',\n    insertImage: 'Insert image',\n    urlImage: 'URL image'\n  },\n  es: {\n    bold: 'Negrita',\n    italic: 'Cursiva',\n    underline: 'Subrayado',\n    left: 'Izquierda',\n    center: 'Centro',\n    right: 'Derecha',\n    justify: 'Justificado',\n    textColor: 'Color del texto',\n    unorderedList: 'Lista con viÃ±etas',\n    insertLink: 'Insertar el link',\n    linkTextLabel: 'Texto con enlace',\n    linkUrlTextHelper: 'Pegue en el cuadro de texto debajo del enlace del navegador copiado',\n    linkUrlTextPlaceholder: 'Ingrese la direcciÃ³n del enlace que se adjuntarÃ¡ al texto.',\n    cancel: 'Cancelar',\n    editLink: 'Editar enlace',\n    insert: 'Insertar',\n    insertImage: 'Insertar imagen',\n    urlImage: 'Imagen URL'\n  },\n  pt: {\n    bold: 'Negrito',\n    italic: 'ItÃ¡lico',\n    underline: 'Sublinhado',\n    left: 'Esquerda',\n    center: 'Centro',\n    right: 'Direita',\n    justify: 'Justificado',\n    textColor: 'Cor do texto',\n    unorderedList: 'Lista com marcadores',\n    insertLink: 'Inserir link',\n    linkTextLabel: 'Texto com link',\n    linkUrlTextHelper: 'Cole na caixa de texto abaixo o link copiado do navegador',\n    linkUrlTextPlaceholder: 'Insira o endereÃ§o do link que serÃ¡ anexado ao texto',\n    cancel: 'Cancelar',\n    editLink: 'Editar link',\n    insert: 'Inserir',\n    insertImage: 'Inserir imagem',\n    urlImage: 'Imagem em URL'\n  }\n};\n","import { ComponentRef } from '@angular/core';\n\nimport { PoNotification } from './po-notification.interface';\nimport { PoToaster } from './po-toaster/po-toaster.interface';\nimport { PoToasterOrientation } from './po-toaster/po-toaster-orientation.enum';\nimport { PoToasterType } from './po-toaster/po-toaster-type.enum';\n\n/**\n * @description\n *\n * ServiÃ§o responsÃ¡vel por emitir as notificaÃ§Ãµes em uma pÃ¡gina. SÃ£o disponibilizados os mÃ©todos de:\n *\n * - success,\n * - warning,\n * - error,\n * - information.\n *\n * Cada um destes mÃ©todos recebe como parÃ¢metro o objeto \"PoNotification\" que contÃ©m os dados da mensagem e o\n * objeto ViewContainerRef que Ã© a representaÃ§Ã£o do container do componente onde serÃ¡ criada a notificaÃ§Ã£o.\n *\n * Estas notificaÃ§Ãµes serÃ£o exibidas durante 10 segundos por padrÃ£o, podendo ser alterada conforme necessidade.\n * ApÃ³s este tempo a mesma Ã© removida automaticamente.\n *\n */\nexport abstract class PoNotificationBaseService {\n\n   // Array responsÃ¡vel por guardar a instÃ¢ncia de po-toaster's superiores.\n  stackTop: Array<ComponentRef<any>> = [];\n\n  // Array responsÃ¡vel por guardar a instÃ¢ncia de po-toaster's inferiores.\n  stackBottom: Array<ComponentRef<any>> = [];\n\n  // DuraÃ§Ã£o da notificaÃ§Ã£o ativa.\n  private defaultDuration = 10000;\n\n  /**\n   * Emite uma notificaÃ§Ã£o de sucesso.\n   *\n   * @param {PoNotification | string} notification Objeto com os dados da notificaÃ§Ã£o ou somente a string com a mensagem da notificaÃ§Ã£o.\n   */\n  public success(notification: PoNotification | string) {\n    this.createToaster(this.buildToaster(notification, PoToasterType.Success));\n  }\n\n  /**\n   * Emite uma notificaÃ§Ã£o de atenÃ§Ã£o.\n   *\n   * @param {PoNotification | string} notification Objeto com os dados da notificaÃ§Ã£o ou somente a string com a mensagem da notificaÃ§Ã£o\n   */\n  public warning(notification: PoNotification | string) {\n    this.createToaster(this.buildToaster(notification, PoToasterType.Warning));\n  }\n\n  /**\n   * Emite uma notificaÃ§Ã£o de erro.\n   *\n   * @param {PoNotification | string} notification Objeto com os dados da notificaÃ§Ã£o ou somente a string com a mensagem da notificaÃ§Ã£o\n   */\n  public error(notification: PoNotification | string) {\n    this.createToaster(this.buildToaster(notification, PoToasterType.Error));\n  }\n\n  /**\n   * Emite uma notificaÃ§Ã£o de informaÃ§Ã£o.\n   *\n   * @param {PoNotification | string} notification Objeto com os dados da notificaÃ§Ã£o ou somente a string com a mensagem da notificaÃ§Ã£o\n   */\n  public information(notification: PoNotification | string) {\n    this.createToaster(this.buildToaster(notification, PoToasterType.Information));\n  }\n\n  /**\n   * Define em milissegundos a duraÃ§Ã£o padrÃ£o para as notificaÃ§Ãµes.\n   *\n   * > PadrÃ£o 10 segundos.\n   *\n   * @param {number} defaultDuration DuraÃ§Ã£o em milisegundos\n   */\n  public setDefaultDuration(defaultDuration: number) {\n    this.defaultDuration = defaultDuration;\n  }\n\n  /**\n   * @docsPrivate\n   *\n   * Cria um objeto do tipo PoToaster de acordo o tipo.\n   *\n   * @param {PoNotification | string} notification Objeto PoNotification com os dados da notificaÃ§Ã£o\n   */\n  private buildToaster(notification: PoNotification | string, type: PoToasterType): PoToaster {\n    let index = 0;\n    let orientation;\n\n    if ((<PoNotification>notification).orientation === undefined ||\n        (<PoNotification>notification).orientation === PoToasterOrientation.Bottom) {\n      index = this.stackBottom.length;\n      orientation = PoToasterOrientation.Bottom;\n    } else {\n      index = this.stackTop.length;\n      orientation = PoToasterOrientation.Top;\n    }\n\n    const toaster: PoToaster = {\n      componentRef: undefined,\n      message: (<PoNotification>notification).message || <string>notification,\n      type: type,\n      orientation: orientation,\n      action: (<PoNotification>notification).action,\n      actionLabel: (<PoNotification>notification).actionLabel,\n      position: index,\n      duration: (<PoNotification>notification).duration || this.defaultDuration\n    };\n\n    if ((<PoNotification>notification).action) {\n      toaster.action = (param: any) => {\n        (<PoNotification>notification).action();\n        this.destroyToaster(param.componentRef);\n      };\n    }\n\n    return toaster;\n  }\n\n  /**\n   * @docsPrivate\n   *\n   * MÃ©todo responsÃ¡vel por criar o po-toaster.\n   *\n   * @param {PoToaster} toaster Objeto contendo as informaÃ§Ãµes do toaster.\n   */\n  abstract createToaster(toaster: PoToaster): void;\n\n  /**\n   * @docsPrivate\n   *\n   * MÃ©todo responsÃ¡vel por destruir o po-toaster.\n   *\n   * @param {ComponentRef} toaster NÃºmero da posiÃ§Ã£o ou instancia do toaster a ser destruÃ­do.\n   * @param {PoToasterOrientation} orientation OrientaÃ§Ã£o do PoToaster: Top ou Bottom\n   */\n  abstract destroyToaster(toaster: ComponentRef<any>): void;\n\n}\n","// Enum de status de envio dos arquivos.\nexport enum PoUploadStatus {\n  // Enviou com sucesso.\n  Uploaded,\n  // EstÃ¡ enviando.\n  Uploading,\n  // Ocorreu algum erro no envio.\n  Error,\n  // NÃ£o enviou ou aconteceu algum erro.\n  None\n}\n","import { ComponentRef, Injectable } from '@angular/core';\n\nimport { PoComponentInjectorService } from './../po-component-injector/po-component-injector.service';\nimport { PoNotificationBaseService } from './po-notification-base.service';\nimport { PoToaster } from './po-toaster/po-toaster.interface';\nimport { PoToasterOrientation } from './po-toaster/po-toaster-orientation.enum';\nimport { PoToasterComponent } from './po-toaster/po-toaster.component';\n\n/**\n * @docsExtends PoNotificationBaseService\n *\n * @example\n *\n * <example name=\"po-notification-basic\" title=\"Portinari Notification Basic\">\n *  <file name=\"sample-po-notification-basic/sample-po-notification-basic.component.html\"> </file>\n *  <file name=\"sample-po-notification-basic/sample-po-notification-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-notification-labs\" title=\"Portinari Notification Labs\">\n *  <file name=\"sample-po-notification-labs/sample-po-notification-labs.component.html\"> </file>\n *  <file name=\"sample-po-notification-labs/sample-po-notification-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-notification-sales\" title=\"Portinari Notification - Sales\">\n *  <file name=\"sample-po-notification-sales/sample-po-notification-sales.component.html\"> </file>\n *  <file name=\"sample-po-notification-sales/sample-po-notification-sales.component.ts\"> </file>\n * </example>\n */\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PoNotificationService extends PoNotificationBaseService {\n\n  constructor(private poComponentInjector: PoComponentInjectorService) {\n    super();\n  }\n\n  createToaster(toaster: PoToaster): void {\n    const componentRef: ComponentRef<any> = this.poComponentInjector.createComponentInApplication(PoToasterComponent);\n\n    toaster.componentRef = componentRef;\n\n    componentRef.changeDetectorRef.detectChanges();\n    componentRef.instance.configToaster(toaster);\n\n    if (toaster.orientation === PoToasterOrientation.Top) {\n      this.stackTop.push(componentRef);\n    } else {\n      this.stackBottom.push(componentRef);\n    }\n\n    this.observableOnClose(componentRef);\n\n    if (toaster.action === undefined) {\n      setTimeout(() => {\n        this.destroyToaster(componentRef);\n      }, toaster.duration);\n    }\n  }\n\n  destroyToaster(toaster: any): void {\n    let stack;\n\n    if (toaster.instance.orientation === PoToasterOrientation.Top) {\n      stack = this.stackTop;\n    } else {\n      stack = this.stackBottom;\n    }\n\n    const index = stack.indexOf(toaster);\n    stack.splice(index, 1);\n\n    this.poComponentInjector.destroyComponentInApplication(toaster);\n\n    for (let count = 0; count < stack.length; count++) {\n      stack[count].instance.changePosition(count);\n    }\n  }\n\n  private observableOnClose(componentRef: any) {\n    componentRef.instance.observableOnClose.subscribe(() => {\n      this.destroyToaster(componentRef);\n    });\n  }\n\n}\n","import { PoUploadStatus } from './po-upload-status.enum';\n\n// Classe responsÃ¡vel pelo arquivo do PO Upload\nexport class PoUploadFile {\n  // Nome do arquivo.\n  public name: string;\n  // Arquivo bruto.\n  public rawFile: File;\n  // Status de envio do arquivo.\n  public status?: PoUploadStatus;\n  // Identificador do arquivo.\n  public uid: string;\n  // ExtensÃ£o do arquivo.\n  public extension: string;\n  // Tamanho do arquivo em bytes;\n  public size: number;\n\n  // propriedade para auxiliar a exibiÃ§Ã£o do texto no componente progress\n  displayName?: string;\n\n  // porcentagem utilizada para repassar ao componente progress\n  percent?: number;\n\n  constructor(file: any) {\n    if (file) {\n      this.name = file.name;\n      this.displayName = `${file.name} - ${this.getFileSize(file.size)}`;\n      this.extension = this.getExtension(file.name);\n      this.size = file.size;\n      this.rawFile = file;\n      this.uid = this.generateUUID();\n      this.status = PoUploadStatus.None;\n    }\n  }\n\n  private getExtension(value: string) {\n    if (value) {\n      const extension = value.substr(value.lastIndexOf('.'));\n      return extension.toLowerCase();\n    }\n\n    return '';\n  }\n\n  private generateUUID() {\n    function s4() {\n      return Math.floor((1 + Math.random()) * 0x10000)\n        .toString(16)\n        .substring(1);\n    }\n\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n      s4() + '-' + s4() + s4() + s4();\n  }\n\n  // Retorna o tamanho do arquivo em KBytes.\n  private getFileSize(size: number): string {\n    let kbSize = 0;\n\n    if (size) {\n        kbSize = Math.ceil(size / 1024);\n    }\n\n    return `${kbSize} KB`;\n  }\n\n}\n","/**\n * @usedBy PoSwitchComponent\n *\n * @description\n *\n * Enum para posicionar o label do valor do po-switch.\n */\nexport enum PoSwitchLabelPosition {\n  /** Posiciona o label do lado esquerdo do switch. */\n  Right,\n  /** Posiciona o label do lado direito do switch. */\n  Left\n}\n","import { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\r\nimport { EventEmitter, Input, Output } from '@angular/core';\r\n\r\nimport { browserLanguage, convertToBoolean, isEquals, isIE, isMobile, poLocaleDefault } from '../../../utils/util';\r\nimport { requiredFailed } from '../validators';\r\n\r\nimport { PoUploadFile } from './po-upload-file';\r\nimport { PoUploadFileRestrictions } from './interfaces/po-upload-file-restriction.interface';\r\nimport { PoUploadLiterals } from './interfaces/po-upload-literals.interface';\r\nimport { PoUploadService } from './po-upload.service';\r\nimport { PoUploadStatus } from './po-upload-status.enum';\r\nimport { InputBoolean } from '../../../decorators';\r\n\r\nexport const poUploadLiteralsDefault = {\r\n  en: <PoUploadLiterals>{\r\n    files: 'files',\r\n    folders: 'folders',\r\n    selectFile: 'Select file',\r\n    selectFiles: 'Select files',\r\n    selectFolder: 'Select folder',\r\n    deleteFile: 'Delete',\r\n    cancel: 'Cancel',\r\n    tryAgain: 'Try again',\r\n    startSending: 'Start sending',\r\n    dragFilesHere: 'Drag files here',\r\n    dragFoldersHere: 'Drag folders here',\r\n    selectFilesOnComputer: 'or select files on your computer',\r\n    selectFolderOnComputer: 'or select folder on your computer',\r\n    dropFilesHere: 'Drop files here',\r\n    dropFoldersHere: 'Drop folders here',\r\n    invalidDropArea: '{0} were not dropped in the correct area',\r\n    invalidFileType: 'Failed to load {0} file(s) as it is not the allowed file type.',\r\n    invalidAmount: 'Failed to load {0} file(s), as it exceeds the limit amount of files.',\r\n    invalidFormat: 'Failed to load {0} file(s), as it does not match the format(s): {1}.',\r\n    invalidSize: 'Failed to load {0} files(s), as it is not the allowed size: from {1} to {2}.',\r\n    numberOfFilesAllowed: '{0} file(s) allowed',\r\n    allowedFormats: 'Accepted file formats: {0}.',\r\n    allowedFileSizeRange: 'Size limit per file: from {0} to {1}',\r\n    maxFileSizeAllowed: 'Size limit per file: {0} maximum',\r\n    minFileSizeAllowed: 'Size limit per file: {0} minimum',\r\n    errorOccurred: 'An error has occurred',\r\n    sentWithSuccess: 'Sent with success'\r\n  },\r\n  es: <PoUploadLiterals>{\r\n    files: 'archivos',\r\n    folders: 'carpetas',\r\n    selectFile: 'Seleccionar archivo',\r\n    selectFiles: 'Seleccionar archivos',\r\n    selectFolder: 'Seleccionar carpeta',\r\n    deleteFile: 'Borrar',\r\n    cancel: 'Cancelar',\r\n    tryAgain: 'Intentar de nuevo',\r\n    startSending: 'Iniciar carga',\r\n    dragFilesHere: 'Arrastra los archivos aquÃ­',\r\n    dragFoldersHere: 'Arrastra las carpetas aquÃ­',\r\n    selectFilesOnComputer: 'o selecciona los archivos en tu computadora',\r\n    selectFolderOnComputer: 'o selecciona la carpeta en tu computadora',\r\n    dropFilesHere: 'Deja los archivos aquÃ­',\r\n    dropFoldersHere: 'Deja las carpetas aquÃ­',\r\n    invalidDropArea: 'Los {0} no se insertaron en la ubicaciÃ³n correcta',\r\n    invalidFileType: 'Error al cargar {0} archivo (s) ya que no es el tipo de archivo permitido',\r\n    invalidAmount: 'Error al cargar {0} archivo (s) ya que excede la cantidad limite de archivos.',\r\n    invalidFormat: 'Error al cargar {0} archivo (s) ya que no coincide con el formato (s): {1}.',\r\n    invalidSize: 'Error al cargar {0} archivo (s) ya que no cumple con el tamaÃ±o permitido: desde {1} hasta {2}.',\r\n    numberOfFilesAllowed: '{0} archivo(s) permitido(s)',\r\n    allowedFormats: 'Formatos aceptados: {0}.',\r\n    allowedFileSizeRange: 'Limite de tamaÃ±o de archivo: desde {0} hasta {1}',\r\n    maxFileSizeAllowed: 'Limite de tamaÃ±o de archivo: hasta {0}',\r\n    minFileSizeAllowed: 'Limite de tamaÃ±o de archivo: minimo {0}',\r\n    errorOccurred: 'Ocurrio un error',\r\n    sentWithSuccess: 'Enviado con Ã©xito'\r\n  },\r\n  pt: <PoUploadLiterals>{\r\n    files: 'arquivos',\r\n    folders: 'diretÃ³rios',\r\n    selectFile: 'Selecionar arquivo',\r\n    selectFiles: 'Selecionar arquivos',\r\n    selectFolder: 'Selecionar pasta',\r\n    deleteFile: 'Excluir',\r\n    cancel: 'Cancelar',\r\n    tryAgain: 'Tentar Novamente',\r\n    startSending: 'Iniciar envio',\r\n    dragFilesHere: 'Arraste os arquivos aqui',\r\n    dragFoldersHere: 'Arraste as pastas aqui',\r\n    selectFilesOnComputer: 'ou selecione os arquivos no computador',\r\n    selectFolderOnComputer: 'ou selecione a pasta no computador',\r\n    dropFilesHere: 'Solte os arquivos aqui',\r\n    dropFoldersHere: 'Solte as pastas aqui',\r\n    invalidDropArea: 'Os {0} nÃ£o foram inseridos no local correto',\r\n    invalidFileType: 'Falha ao carregar {0} arquivo (s), pois nÃ£o Ã© o tipo de arquivo permitido',\r\n    invalidAmount: 'Falha ao carregar {0} arquivo(s), pois excede(m) a quantidade limite de arquivos.',\r\n    invalidFormat: 'Falha ao carregar {0} arquivo(s), pois nÃ£o corresponde(m) ao(s) formato(s): {1}.',\r\n    invalidSize: 'Falha ao carregar {0} arquivo(s), pois nÃ£o atende ao tamanho permitido: {1} atÃ© {2}.',\r\n    numberOfFilesAllowed: 'Quantidade mÃ¡xima: {0} arquivo(s)',\r\n    allowedFormats: 'Formatos adotados: {0}.',\r\n    allowedFileSizeRange: 'Limite de tamanho por arquivo: de {0} atÃ© {1}',\r\n    maxFileSizeAllowed: 'Limite de tamanho por arquivo: atÃ© {0}',\r\n    minFileSizeAllowed: 'Limite de tamanho por arquivo: no mÃ­nimo {0}',\r\n    errorOccurred: 'Ocorreu um erro',\r\n    sentWithSuccess: 'Enviado com sucesso'\r\n  },\r\n  ru: <PoUploadLiterals>{\r\n    files: 'ÑÐ°Ð¹Ð»Ñ',\r\n    folders: 'Ð¿Ð°Ð¿ÐºÐ¸ Ñ ÑÐ°Ð¹Ð»Ð°Ð¼Ð¸',\r\n    selectFile: 'ÐÑÐ±ÐµÑÐ¸ÑÐµ ÑÐ°Ð¹Ð»',\r\n    selectFiles: 'ÐÑÐ±ÐµÑÐ¸ÑÐµ ÑÐ°Ð¹Ð»Ñ',\r\n    selectFolder: 'ÐÑÐ±ÐµÑÐ¸ÑÐµ Ð¿Ð°Ð¿ÐºÑ Ñ ÑÐ°Ð¹Ð»Ð°Ð¼Ð¸',\r\n    deleteFile: 'ÑÐ´Ð°Ð»ÑÑÑ',\r\n    cancel: 'Ð¾ÑÐ¼ÐµÐ½Ð¸ÑÑ',\r\n    tryAgain: 'Ð¿Ð¾Ð¿ÑÐ¾Ð±ÑÐ¹ÑÐµ ÐµÑÐµ ÑÐ°Ð·',\r\n    startSending: 'ÐÐ°ÑÐ°ÑÑ Ð·Ð°Ð³ÑÑÐ·ÐºÑ',\r\n    dragFilesHere: 'ÐÐµÑÐµÑÐ°ÑÐ¸ÑÐµ ÑÐ°Ð¹Ð»Ñ ÑÑÐ´Ð°',\r\n    dragFoldersHere: 'ÐÐµÑÐµÑÐ°ÑÐ¸ÑÐµ ÑÑÐ´Ð° Ð¿Ð°Ð¿ÐºÐ¸',\r\n    selectFilesOnComputer: 'Ð¸Ð»Ð¸ Ð²ÑÐ±ÐµÑÐ¸ÑÐµ ÑÐ°Ð¹Ð»Ñ Ð½Ð° ÐºÐ¾Ð¼Ð¿ÑÑÑÐµÑÐµ',\r\n    selectFolderOnComputer: 'Ð¸Ð»Ð¸ Ð²ÑÐ±ÐµÑÐ¸ÑÐµ Ð¿Ð°Ð¿ÐºÑ Ð½Ð° Ð²Ð°ÑÐµÐ¼ ÐºÐ¾Ð¼Ð¿ÑÑÑÐµÑÐµ',\r\n    dropFilesHere: 'ÐÑÑÐ°Ð²ÑÑÐµ ÑÐ°Ð¹Ð»Ñ Ð·Ð´ÐµÑÑ',\r\n    dropFoldersHere: 'ÐÐµÑÐµÑÐ°ÑÐ¸ÑÐµ ÑÑÐ´Ð° Ð¿Ð°Ð¿ÐºÐ¸',\r\n    invalidDropArea: '{0} Ð½Ðµ Ð±ÑÐ»Ð¸ Ð²ÑÑÐ°Ð²Ð»ÐµÐ½Ñ Ð² Ð¿ÑÐ°Ð²Ð¸Ð»ÑÐ½Ð¾Ð¼ Ð¼ÐµÑÑÐµ.',\r\n    invalidFileType: 'ÐÐµ ÑÐ´Ð°Ð»Ð¾ÑÑ Ð·Ð°Ð³ÑÑÐ·Ð¸ÑÑ ÑÐ°Ð¹Ð»Ñ {0}, ÑÐ°Ðº ÐºÐ°Ðº ÑÑÐ¾ Ð½ÐµÐ²ÐµÑÐ½ÑÐ¹ ÑÐ¸Ð¿ ÑÐ°Ð¹Ð»Ð°',\r\n    invalidAmount: 'NÃ£o foi possÃ­vel carregar os arquivos {0} porque eles excederam o limite de arquivos.',\r\n    invalidFormat: 'ÐÐµ ÑÐ´Ð°Ð»Ð¾ÑÑ Ð·Ð°Ð³ÑÑÐ·Ð¸ÑÑ ÑÐ°Ð¹Ð»Ñ {0}, ÑÐ°Ðº ÐºÐ°Ðº Ð¾Ð½Ð¸ Ð½Ðµ ÑÐ¾Ð¾ÑÐ²ÐµÑÑÑÐ²ÑÑÑ ÑÐ¾ÑÐ¼Ð°ÑÑ (Ð°Ð¼): {1}.',\r\n    invalidSize: 'ÐÐµ ÑÐ´Ð°Ð»Ð¾ÑÑ Ð·Ð°Ð³ÑÑÐ·Ð¸ÑÑ ÑÐ°Ð¹Ð»Ñ {0}, Ð¿Ð¾ÑÐºÐ¾Ð»ÑÐºÑ Ð¾Ð½Ð¸ Ð½Ðµ ÑÐ¾Ð¾ÑÐ²ÐµÑÑÑÐ²ÑÑÑ ÑÐ°Ð·ÑÐµÑÐµÐ½Ð½Ð¾Ð¼Ñ ÑÐ°Ð·Ð¼ÐµÑÑ: Ð¾Ñ {1} Ð´Ð¾ {2}.',\r\n    numberOfFilesAllowed: 'ÐÐ°ÐºÑÐ¸Ð¼Ð°Ð»ÑÐ½Ð¾Ðµ ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾: {0} ÑÐ°Ð¹Ð»Ð¾Ð²',\r\n    allowedFormats: 'Ð¤Ð¾ÑÐ¼Ð°ÑÑ Ð¿ÑÐ¸Ð½ÑÑÑ: {0}.',\r\n    allowedFileSizeRange: 'ÐÐ³ÑÐ°Ð½Ð¸ÑÐµÐ½Ð¸Ðµ ÑÐ°Ð·Ð¼ÐµÑÐ° ÑÐ°Ð¹Ð»Ð°: Ð¾Ñ {0} Ð´Ð¾ {1}',\r\n    maxFileSizeAllowed: 'ÐÐ³ÑÐ°Ð½Ð¸ÑÐµÐ½Ð¸Ðµ ÑÐ°Ð·Ð¼ÐµÑÐ° ÑÐ°Ð¹Ð»Ð°: Ð´Ð¾ {0}',\r\n    minFileSizeAllowed: 'ÐÐ³ÑÐ°Ð½Ð¸ÑÐµÐ½Ð¸Ðµ ÑÐ°Ð·Ð¼ÐµÑÐ° ÑÐ°Ð¹Ð»Ð°: Ð½Ðµ Ð¼ÐµÐ½ÐµÐµ {0}',\r\n    errorOccurred: 'ÐÑÐ¾Ð¸Ð·Ð¾ÑÐ»Ð° Ð¾ÑÐ¸Ð±ÐºÐ°.',\r\n    sentWithSuccess: 'Ð£ÑÐ¿ÐµÑÐ½Ð¾ Ð¾ÑÐ¿ÑÐ°Ð²Ð»ÐµÐ½Ð¾'\r\n  }\r\n};\r\n\r\nconst poUploadFormFieldDefault = 'files';\r\n\r\nconst poUploadMaxFileSize = 31457280; // 30MB\r\nconst poUploadMinFileSize = 0;\r\n\r\n/**\r\n * @description\r\n *\r\n * O componente `po-upload` permite que o usuÃ¡rio envie arquivo(s) ao servidor e acompanhe o progresso.\r\n * Este componente tambÃ©m possibilita algumas configuraÃ§Ãµes como:\r\n *  â Envio de diretÃ³rios, onde ele acessa o diretÃ³rio selecionado assim como seus sub-diretÃ³rios;\r\n *  - MÃºltipla seleÃ§Ã£o, onde o usuÃ¡rio pode enviar mais de um arquivo ao servidor.\r\n *  - Auto envio, onde o arquivo Ã© enviado imediatamente apÃ³s a seleÃ§Ã£o do usuÃ¡rio, nÃ£o necessitando que o usuÃ¡rio\r\n * clique em enviar.\r\n *  - RestriÃ§Ãµes de formatos de arquivo e tamanho.\r\n *  - FunÃ§Ã£o de sucesso que serÃ¡ disparada quando os arquivos forem enviados com sucesso.\r\n *  - FunÃ§Ã£o de erro que serÃ¡ disparada quando houver erro no envio dos arquivos.\r\n *  - Permite habilitar uma Ã¡rea onde os arquivos podem ser arrastados.\r\n */\r\nexport abstract class PoUploadBaseComponent implements ControlValueAccessor, Validator {\r\n\r\n  private _directory?: boolean;\r\n  private _disabled?: boolean;\r\n  private _dragDrop?: boolean = false;\r\n  private _fileRestrictions?: PoUploadFileRestrictions;\r\n  private _formField?: string;\r\n  private _hideRestrictionsInfo?: boolean;\r\n  private _hideSelectButton?: boolean;\r\n  private _hideSendButton?: boolean;\r\n  private _isMultiple?: boolean;\r\n  private _literals?: any;\r\n  private _required?: boolean;\r\n\r\n  allowedExtensions: string;\r\n  currentFiles: Array<PoUploadFile>;\r\n\r\n  canHandleDirectory: boolean;\r\n  onModelChange: any;\r\n  onModelTouched: any;\r\n\r\n  private validatorChange: any;\r\n\r\n  protected extensionNotAllowed = 0;\r\n  protected quantityNotAllowed = 0;\r\n  protected sizeNotAllowed = 0;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Aplica foco no elemento ao ser iniciado.\r\n   *\r\n   * > Caso mais de um elemento seja configurado com essa propriedade, apenas o Ãºltimo elemento declarado com ela terÃ¡ o foco.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-auto-focus') @InputBoolean() autoFocus: boolean = false;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Permite a seleÃ§Ã£o de diretÃ³rios contendo um ou mais arquivos para envio.\r\n   *\r\n   * > A habilitaÃ§Ã£o desta propriedade se restringe apenas Ã  seleÃ§Ã£o de diretÃ³rios.\r\n   *\r\n   * > DefiniÃ§Ã£o nÃ£o suportada pelo browser **Internet Explorer**, todavia serÃ¡ possÃ­vel a seleÃ§Ã£o de arquivos padrÃ£o.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-directory') set directory(value: boolean) {\r\n    this._directory = convertToBoolean(value);\r\n\r\n    this.canHandleDirectory = this._directory && !isIE() && !isMobile();\r\n    this.setDirectoryAttribute(this.canHandleDirectory);\r\n  }\r\n\r\n  get directory() {\r\n    return this._directory;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define em *pixels* a altura da Ã¡rea onde podem ser arrastados os arquivos. A altura mÃ­nima aceita Ã© `160px`.\r\n   *\r\n   * > Esta propriedade funciona somente se a propriedade `p-drag-drop` estiver habilitada.\r\n   *\r\n   * @default `320`\r\n   */\r\n  @Input('p-drag-drop-height') dragDropHeight: number;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Exibe a Ã¡rea onde Ã© possÃ­vel arrastar e selecionar os arquivos. Quando estiver definida, omite o botÃ£o para seleÃ§Ã£o de arquivos\r\n   * automaticamente.\r\n   *\r\n   * > Recomendamos utilizar apenas um `po-upload` com esta funcionalidade por tela.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-drag-drop') set dragDrop(value: boolean) {\r\n    this._dragDrop = convertToBoolean(value);\r\n  }\r\n\r\n  get dragDrop() {\r\n    return this._dragDrop;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Oculta visualmente as informaÃ§Ãµes de restriÃ§Ãµes para o upload.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-hide-restrictions-info') set hideRestrictionsInfo(value: boolean) {\r\n    this._hideRestrictionsInfo = convertToBoolean(value);\r\n  }\r\n\r\n  get hideRestrictionsInfo() {\r\n    return this._hideRestrictionsInfo;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Omite o botÃ£o de seleÃ§Ã£o de arquivos.\r\n   *\r\n   * > Caso o valor definido seja `true`, caberÃ¡ ao desenvolvedor a responsabilidade\r\n   * pela chamada do mÃ©todo `selectFiles()` para seleÃ§Ã£o de arquivos.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-hide-select-button') set hideSelectButton(value: boolean) {\r\n    this._hideSelectButton = convertToBoolean(value);\r\n  }\r\n  get hideSelectButton(): boolean {\r\n    return this._hideSelectButton;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Omite o botÃ£o de envio de arquivos.\r\n   *\r\n   * > Caso o valor definido seja `true`, caberÃ¡ ao desenvolvedor a responsabilidade\r\n   * pela chamada do mÃ©todo `sendFiles()` para envio do(s) arquivo(s) selecionado(s).\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-hide-send-button') set hideSendButton(value: boolean) {\r\n    this._hideSendButton = convertToBoolean(value);\r\n  }\r\n  get hideSendButton(): boolean {\r\n    return this._hideSendButton;\r\n  }\r\n\r\n  /** RÃ³tulo do campo. */\r\n  @Input('p-label') label?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Objeto com as literais usadas no `po-upload`.\r\n   *\r\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\r\n   *\r\n   * ```\r\n   *  const customLiterals: PoUploadLiterals = {\r\n   *    cancel: 'Desistir',\r\n   *    deleteFile: 'Deletar',\r\n   *  };\r\n   *\r\n   * Ou passando apenas as literais que deseja customizar:,\r\n   *    selectFile: 'Buscar arquivo',\r\n   * ```\r\n   *    startSending: 'Enviar'\r\n   *   tryAgain: 'RecomeÃ§ar',\r\n   *\r\n   * ```\r\n   *  const customLiterals: PoUploadLiterals = {\r\n   *    deleteFile: 'Deletar'\r\n   *  };\r\n   * ```\r\n   *\r\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente:\r\n   *\r\n   * ```\r\n   * <po-upload\r\n   *   [p-literals]=\"customLiterals\">\r\n   * </po-upload>\r\n   * ```\r\n   *\r\n   * > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do *browser* (pt, en, es).\r\n   */\r\n  @Input('p-literals') set literals(value: PoUploadLiterals) {\r\n    if (value instanceof Object && !(value instanceof Array)) {\r\n      this._literals = {\r\n        ...poUploadLiteralsDefault[poLocaleDefault],\r\n        ...poUploadLiteralsDefault[browserLanguage()],\r\n        ...value\r\n      };\r\n    } else {\r\n      this._literals = poUploadLiteralsDefault[browserLanguage()];\r\n    }\r\n  }\r\n  get literals() {\r\n    return this._literals || poUploadLiteralsDefault[browserLanguage()];\r\n  }\r\n\r\n  /** Texto de apoio para o campo. */\r\n  @Input('p-help') help?: string;\r\n\r\n  /** URL que deve ser feita a requisiÃ§Ã£o com os arquivos selecionados. */\r\n  @Input('p-url') url: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Objeto que segue a definiÃ§Ã£o da interface `PoUploadFileRestrictions`,\r\n   * que possibilita definir tamanho mÃ¡ximo/mÃ­nimo e extensÃ£o dos arquivos permitidos.\r\n   */\r\n  @Input('p-restrictions') set fileRestrictions(restrictions: PoUploadFileRestrictions) {\r\n    this._fileRestrictions = this.initRestrictions(restrictions);\r\n\r\n    this.setAllowedExtensions(restrictions);\r\n  }\r\n\r\n  get fileRestrictions(): PoUploadFileRestrictions {\r\n    return this._fileRestrictions;\r\n  }\r\n\r\n  /** Define o valor do atributo `name` do componente. */\r\n  @Input('name') name: string = 'file';\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Nome do campo de formulÃ¡rio que serÃ¡ enviado para o serviÃ§o informado na propriedade `p-url`.\r\n   *\r\n   * @default `files`\r\n   */\r\n  @Input('p-form-field') set formField(value: string) {\r\n    this._formField = value && typeof value === 'string' ? value : poUploadFormFieldDefault;\r\n\r\n    this.getUploadService().formField = this.formField;\r\n  }\r\n\r\n  get formField(): string {\r\n    return this._formField;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Indica que o campo serÃ¡ desabilitado.\r\n   */\r\n  @Input('p-disabled') set disabled(value: boolean) {\r\n    this._disabled = convertToBoolean(value);\r\n\r\n    this.validateModel(this.currentFiles);\r\n  }\r\n\r\n  get disabled() {\r\n    return this._disabled;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define se o envio do arquivo serÃ¡ automÃ¡tico ao selecionar o mesmo.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-auto-upload') autoUpload?: boolean = false;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define se pode selecionar mais de um arquivo.\r\n   *\r\n   * > Se utilizada a `p-directory`, habilita-se automaticamente esta propriedade.\r\n   */\r\n  @Input('p-multiple') set isMultiple(value: boolean) {\r\n    this._isMultiple = convertToBoolean(value);\r\n  }\r\n\r\n  get isMultiple() {\r\n    return this.canHandleDirectory ? true : this._isMultiple;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\r\n   *\r\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\r\n   *  - O campo conter `p-required`;\r\n   *  - NÃ£o possuir `p-help` e/ou `p-label`.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-optional') optional: boolean;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Indica que o campo serÃ¡ obrigatÃ³rio.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-required') set required(required: boolean) {\r\n    this._required = convertToBoolean(required);\r\n\r\n    this.validateModel(this.currentFiles);\r\n  }\r\n\r\n  get required() {\r\n    return this._required;\r\n  }\r\n\r\n  /**\r\n   * FunÃ§Ã£o que serÃ¡ executada no momento de realizar o envio do arquivo,\r\n   * onde serÃ¡ possÃ­vel adicionar informaÃ§Ãµes ao parÃ¢metro que serÃ¡ enviado na requisiÃ§Ã£o.\r\n   * Ã passado por parÃ¢metro um objeto com o arquivo e a propiedade data nesta propriedade pode ser informado algum dado,\r\n   * que serÃ¡ enviado em conjunto com o arquivo na requisiÃ§Ã£o, por exemplo:\r\n   *\r\n   * ```\r\n   *   event.data = {id: 'id do usuario'};\r\n   * ```\r\n   */\r\n  @Output('p-upload') onUpload?: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * Evento serÃ¡ disparado quando ocorrer algum erro no envio do arquivo.\r\n   * > Por parÃ¢metro serÃ¡ passado o objeto do retorno que Ã© do tipo `HttpErrorResponse`.\r\n   */\r\n  @Output('p-error') onError?: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * Evento serÃ¡ disparado quando o envio do arquivo for realizado com sucesso.\r\n   * > Por parÃ¢metro serÃ¡ passado o objeto do retorno que Ã© do tipo `HttpResponse`.\r\n   */\r\n  @Output('p-success') onSuccess?: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  // FunÃ§Ã£o para atualizar o ngModel do componente, necessÃ¡rio quando nÃ£o for utilizado dentro da *tag* `form`.\r\n  @Output('ngModelChange') ngModelChange?: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  constructor(protected uploadService: PoUploadService) { }\r\n\r\n  abstract sendFeedback(): void;\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onModelChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onModelTouched = fn;\r\n  }\r\n\r\n  registerOnValidatorChange(fn: () => void) {\r\n    this.validatorChange = fn;\r\n  }\r\n\r\n  validate(abstractControl: AbstractControl): { [key: string]: any; } {\r\n\r\n    if (requiredFailed(this.required, this.disabled, abstractControl.value)) {\r\n      return {\r\n        required: {\r\n          valid: false,\r\n        }\r\n      };\r\n    }\r\n\r\n  }\r\n\r\n  writeValue(model: any): void {\r\n    if (model) {\r\n      if (!isEquals(this.currentFiles, model)) {\r\n\r\n        this.currentFiles = this.parseFiles(model);\r\n      }\r\n    } else {\r\n\r\n      this.currentFiles = undefined;\r\n    }\r\n  }\r\n\r\n  protected isExceededFileLimit(currentFilesLength: number): boolean {\r\n    return this.isMultiple &&\r\n      this.fileRestrictions &&\r\n      this.fileRestrictions.maxFiles > 0 &&\r\n      this.fileRestrictions.maxFiles <= currentFilesLength;\r\n  }\r\n\r\n  // Faz o parse dos arquivos selecionados para arquivos do formato PoUploadFile e atualiza os arquivos correntes.\r\n  protected parseFiles(files: Array<File>): Array<PoUploadFile> {\r\n    let poUploadFiles: Array<PoUploadFile> = this.currentFiles || [];\r\n    const filesLength = files.length;\r\n\r\n    for (let i = 0; i < filesLength; i++) {\r\n\r\n      if (this.isExceededFileLimit(poUploadFiles.length)) {\r\n        this.quantityNotAllowed = filesLength - this.fileRestrictions.maxFiles;\r\n        break;\r\n      }\r\n      const file = new PoUploadFile(files[i]);\r\n\r\n      if (this.checkRestrictions(file)) {\r\n        poUploadFiles = this.insertFileInFiles(file, poUploadFiles);\r\n      }\r\n\r\n    }\r\n    this.sendFeedback();\r\n    return poUploadFiles;\r\n  }\r\n\r\n  protected validateModel(model: any) {\r\n    if (this.validatorChange) {\r\n      this.validatorChange(model);\r\n    }\r\n  }\r\n\r\n  // Verifica se o arquivo estÃ¡ de acordo com as restriÃ§Ãµes.\r\n  private checkRestrictions(file: PoUploadFile): boolean {\r\n    const restrictions = this.fileRestrictions;\r\n\r\n    if (restrictions) {\r\n      const allowedExtensions = restrictions.allowedExtensions;\r\n      const minFileSize = restrictions.minFileSize;\r\n      const maxFileSize = restrictions.maxFileSize;\r\n\r\n      const isAccept = allowedExtensions ? this.isAllowedExtension(file.extension, allowedExtensions) : true;\r\n      const isAcceptSize = file.size >= minFileSize && file.size <= maxFileSize;\r\n\r\n      if (!isAcceptSize) {\r\n        this.sizeNotAllowed = this.sizeNotAllowed + 1;\r\n      }\r\n\r\n      return isAccept && isAcceptSize;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private existsFileSameName(file: PoUploadFile, files: Array<PoUploadFile>): boolean {\r\n    return files.some(currentFile => file.name === currentFile.name);\r\n  }\r\n\r\n  private getUploadService(): PoUploadService {\r\n    return this.uploadService;\r\n  }\r\n\r\n  private insertFileInFiles(newFile: PoUploadFile, files: Array<PoUploadFile>) {\r\n\r\n    if (this.existsFileSameName(newFile, files)) {\r\n\r\n      return this.updateExistsFileInFiles(newFile, files);\r\n    }\r\n\r\n    if (this.isMultiple) {\r\n\r\n      files.push(newFile);\r\n    } else {\r\n\r\n      files.splice(0, files.length, newFile);\r\n    }\r\n\r\n    return files;\r\n  }\r\n\r\n  private isAllowedExtension(extension: string, allowedExtensions: Array<string> = []): boolean {\r\n    const isAllowed = allowedExtensions.some(ext => ext.toLowerCase() === extension);\r\n    if (!isAllowed) {\r\n      this.extensionNotAllowed = this.extensionNotAllowed + 1;\r\n    }\r\n    return isAllowed;\r\n  }\r\n\r\n  private setAllowedExtensions(restrictions: PoUploadFileRestrictions = {}) {\r\n    const _allowedExtensions = restrictions.allowedExtensions || [];\r\n\r\n    this.allowedExtensions = _allowedExtensions.join(',');\r\n  }\r\n\r\n  private initRestrictions(restrictions: PoUploadFileRestrictions): PoUploadFileRestrictions {\r\n\r\n    if (!restrictions) {\r\n      return;\r\n    }\r\n\r\n    const minFileSize = restrictions.minFileSize || poUploadMinFileSize;\r\n    const maxFileSize = restrictions.maxFileSize || poUploadMaxFileSize;\r\n\r\n    return {\r\n      ...restrictions,\r\n      maxFileSize: maxFileSize,\r\n      minFileSize: minFileSize\r\n    };\r\n\r\n  }\r\n\r\n  private updateExistsFileInFiles(newFile: PoUploadFile, files: Array<PoUploadFile>) {\r\n    const fileIndex = files.findIndex(currentFile => newFile.name === currentFile.name && currentFile.status !== PoUploadStatus.Uploaded);\r\n\r\n    if (fileIndex !== -1) {\r\n      files.splice(fileIndex, 1, newFile);\r\n    }\r\n\r\n    return files;\r\n  }\r\n\r\n  abstract setDirectoryAttribute(value: boolean);\r\n\r\n}\r\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\n\r\nimport { PoUploadLiterals } from '../../interfaces/po-upload-literals.interface';\r\n\r\n@Component({\r\n  selector: 'po-upload-drag-drop-area',\r\n  templateUrl: './po-upload-drag-drop-area.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PoUploadDragDropAreaComponent {\r\n\r\n  @Input('p-directory-compatible') directoryCompatible: boolean;\r\n\r\n  @Input('p-disabled') disabled: boolean;\r\n\r\n  @Input('p-height') height: number;\r\n\r\n  @Input('p-literals') literals: PoUploadLiterals;\r\n\r\n  @Input('p-overlay') overlay: boolean;\r\n\r\n  @Output('p-select-files') selectFiles: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  @ViewChild('selectFilesLink', { static: false }) selectFilesLinkElement: ElementRef;\r\n\r\n  constructor(public elementRef: ElementRef) {}\r\n\r\n  focus() {\r\n    this.selectFilesLinkElement.nativeElement.focus();\r\n  }\r\n\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\n\r\nimport { convertToInt } from '../../../../utils/util';\r\n\r\nimport { PoUploadDragDropAreaComponent } from './po-upload-drag-drop-area/po-upload-drag-drop-area.component';\r\nimport { PoUploadLiterals } from '../interfaces/po-upload-literals.interface';\r\n\r\nconst PoUploadDragDropHeightDefault = 320;\r\nconst PoUploadDragDropHeightMin = 160;\r\n\r\n@Component({\r\n  selector: 'po-upload-drag-drop',\r\n  templateUrl: './po-upload-drag-drop.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PoUploadDragDropComponent {\r\n\r\n  private _dragDropHeight?: number = PoUploadDragDropHeightDefault;\r\n\r\n  areaElement: HTMLElement;\r\n  isDragOver: boolean = false;\r\n\r\n  @ViewChild('dragDropOverlay', { read: ElementRef, static: false }) dragDropOverlayElement: ElementRef;\r\n  @ViewChild(PoUploadDragDropAreaComponent, { static: true }) dragDropAreaComponent: PoUploadDragDropAreaComponent;\r\n\r\n  @Input('p-directory-compatible') directoryCompatible: boolean;\r\n\r\n  @Input('p-disabled') disabled: boolean;\r\n\r\n  @Input('p-drag-drop-height') set dragDropHeight(value: number) {\r\n    const dragDropHeight = convertToInt(value, PoUploadDragDropHeightDefault);\r\n\r\n    this._dragDropHeight = (dragDropHeight < PoUploadDragDropHeightMin) ? PoUploadDragDropHeightMin : dragDropHeight;\r\n  }\r\n\r\n  get dragDropHeight() {\r\n    return this._dragDropHeight;\r\n  }\r\n\r\n  @Input('p-literals') literals: PoUploadLiterals;\r\n\r\n  @Output('p-file-change') fileChange: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  @Output('p-select-files') selectFiles: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  constructor(private changeDetector: ChangeDetectorRef) { }\r\n\r\n  focus() {\r\n    this.dragDropAreaComponent.focus();\r\n  }\r\n\r\n  onAreaElement(element: HTMLElement) {\r\n    this.areaElement = element;\r\n\r\n    // necessÃ¡rio para nÃ£o ocorrer o erro HasBeenChecked\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  onDragLeave() {\r\n    this.isDragOver = false;\r\n  }\r\n\r\n  onDragOver() {\r\n    this.isDragOver = true;\r\n  }\r\n\r\n  onFileChange(files) {\r\n    this.isDragOver = false;\r\n\r\n    this.fileChange.emit(files);\r\n  }\r\n\r\n}\r\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { HttpClient, HttpEventType, HttpErrorResponse, HttpRequest, HttpResponse } from '@angular/common/http';\n\nimport { PoUploadFile } from './po-upload-file';\n\nimport { Observable, Subscription } from 'rxjs';\n\n@Injectable()\nexport class PoUploadBaseService {\n\n  formField: string = 'files';\n  requests: Array<any> = [];\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * MÃ©todo responsÃ¡vel por enviar os arquivos ao servidor, conforme o parÃ¢metro URL.\n   *\n   * @param url URL da requisiÃ§Ã£o a ser efetuada.\n   * @param files Arquivos a serem enviados.\n   * @param tOnUpload FunÃ§Ã£o a ser executada quando o arquivo for enviado ao servidor.\n   * @param uploadCallback FunÃ§Ã£o que serÃ¡ executada enquanto os arquivos estiverem sendo enviados.\n   * @param successCallback FunÃ§Ã£o a ser executada quando a requisiÃ§Ã£o for efetuada com sucesso.\n   * @param errorCallback FunÃ§Ã£o a ser executada quando a requisiÃ§Ã£o foi efetuada com sucesso.\n   */\n  public upload(\n    url: string,\n    files: Array<PoUploadFile>,\n    tOnUpload: EventEmitter<any>,\n    uploadCallback: (file: PoUploadFile, percent: number) => void,\n    successCallback: (file: PoUploadFile, event: any) => void,\n    errorCallback: (file: PoUploadFile, event: any) => void) {\n\n    const filesLength = files.length;\n    const uploadEvent: any = {\n      data: {},\n      file: null\n    };\n\n    for (let i = 0; i < filesLength; i++) {\n      const formData: FormData = new FormData();\n      const file = files[i];\n      const fileName = file.rawFile.name;\n\n      formData.append(this.formField, file.rawFile, fileName);\n\n      // FunÃ§Ã£o upload, onde o desenvolvedor pode enviar dados para a requisiÃ§Ã£o.\n      if (tOnUpload) {\n        uploadEvent['file'] = file;\n        tOnUpload.emit(uploadEvent);\n\n        formData.append('data', JSON.stringify(uploadEvent.data));\n      }\n\n      this.sendFile(url, file, formData, uploadCallback, successCallback, errorCallback);\n    }\n  }\n\n  public sendFile(\n    url: string,\n    file: PoUploadFile,\n    formData: FormData,\n    uploadCallback: (file: PoUploadFile, percent: number) => void,\n    successCallback: (file: PoUploadFile, event: any) => void,\n    errorCallback: (file: PoUploadFile, event: any) => void) {\n\n    const request = this.getRequest(url, formData).subscribe(event => {\n\n      if (event.type === HttpEventType.UploadProgress) {\n        this.addRequest(file, request);\n\n        const percentDone = Math.round(100 * event.loaded / event.total);\n        uploadCallback(file, percentDone);\n\n      } else if (event instanceof HttpResponse) {\n        // Sucesso, arquivos enviados.\n        successCallback(file, event);\n      }\n    },\n    (err: HttpErrorResponse) => {\n      errorCallback(file, err);\n    });\n  }\n\n  public getRequest(url: string, formData: FormData): Observable<any> {\n    const req = new HttpRequest('POST', url, formData, {\n      reportProgress: true\n    });\n\n    return this.http.request(req);\n  }\n\n  public stopRequestByFile(file: any, callback: () => void) {\n    const requestObj = this.requests.find(req => {\n      return req.file.uid === file.uid;\n    });\n\n    if (requestObj) {\n      const request = requestObj.request;\n      request.unsubscribe();\n      this.removeRequest(requestObj);\n      callback();\n    }\n  }\n\n  public removeRequest(requestObj: any) {\n    const index = this.requests.indexOf(requestObj);\n    this.requests.splice(index, 1);\n  }\n\n  public addRequest(file: PoUploadFile, request: Subscription) {\n    const hasRequest = this.requests.some(req => {\n      return req.file.uid === file.uid;\n    });\n\n    if (!hasRequest) {\n      this.requests.push({file, request});\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PoUploadBaseService } from './po-upload-base.service';\n\n@Injectable()\nexport class PoUploadService extends PoUploadBaseService { }\n","import { Component, ElementRef, forwardRef, Renderer2, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { formatBytes, isMobile } from '../../../utils/util';\r\nimport { PoButtonComponent } from './../../po-button/po-button.component';\r\nimport { PoI18nPipe } from '../../../services/po-i18n/po-i18n.pipe';\r\nimport { PoNotificationService } from '../../../services/po-notification/po-notification.service';\r\nimport { PoProgressStatus } from '../../po-progress/enums/po-progress-status.enum';\r\n\r\nimport { PoUploadBaseComponent } from './po-upload-base.component';\r\nimport { PoUploadDragDropComponent } from './po-upload-drag-drop/po-upload-drag-drop.component';\r\nimport { PoUploadFile } from './po-upload-file';\r\nimport { PoUploadService } from './po-upload.service';\r\nimport { PoUploadStatus } from './po-upload-status.enum';\r\n\r\n/**\r\n * @docsExtends PoUploadBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-upload-basic\" title=\"Portinari Upload Basic\">\r\n *   <file name=\"sample-po-upload-basic/sample-po-upload-basic.component.html\"> </file>\r\n *   <file name=\"sample-po-upload-basic/sample-po-upload-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-upload-labs\" title=\"Portinari Upload Labs\">\r\n *   <file name=\"sample-po-upload-labs/sample-po-upload-labs.component.html\"> </file>\r\n *   <file name=\"sample-po-upload-labs/sample-po-upload-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-upload-resume\" title=\"Portinari Upload - Resume\">\r\n *   <file name=\"sample-po-upload-resume/sample-po-upload-resume.component.html\"> </file>\r\n *   <file name=\"sample-po-upload-resume/sample-po-upload-resume.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-upload-rs\" title=\"Portinari Upload - Realize & Show\">\r\n *   <file name=\"sample-po-upload-rs/sample-po-upload-rs.component.html\"> </file>\r\n *   <file name=\"sample-po-upload-rs/sample-po-upload-rs.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-upload',\r\n  templateUrl: './po-upload.component.html',\r\n  providers: [\r\n    PoI18nPipe,\r\n    PoUploadService,\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => PoUploadComponent),\r\n      multi: true,\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => PoUploadComponent),\r\n      multi: true,\r\n    }\r\n  ]\r\n})\r\nexport class PoUploadComponent extends PoUploadBaseComponent implements AfterViewInit {\r\n\r\n  infoByUploadStatus: { [key: string ]: { text: (percent?: number) => string, icon?: string } } = {\r\n    [PoUploadStatus.Uploaded]: {\r\n      text: () => this.literals.sentWithSuccess,\r\n      icon: 'po-icon-ok'\r\n    },\r\n    [PoUploadStatus.Error]: {\r\n      text: () => this.literals.errorOccurred\r\n    },\r\n    [PoUploadStatus.Uploading]: {\r\n      text: percent => percent + '%'\r\n    }\r\n  };\r\n\r\n  progressStatusByFileStatus = {\r\n    [PoUploadStatus.Uploaded]: PoProgressStatus.Success,\r\n    [PoUploadStatus.Error]: PoProgressStatus.Error\r\n  };\r\n\r\n  private calledByCleanInputValue: boolean = false;\r\n\r\n  @ViewChild('inputFile', {read: ElementRef, static: true }) private inputFile: ElementRef;\r\n  @ViewChild(PoUploadDragDropComponent, { static: false }) private poUploadDragDropComponent: PoUploadDragDropComponent;\r\n  @ViewChild('uploadButton', { static: false }) private uploadButton: PoButtonComponent;\r\n\r\n  constructor(\r\n    uploadService: PoUploadService,\r\n    public renderer: Renderer2,\r\n    private i18nPipe: PoI18nPipe,\r\n    private notification: PoNotificationService) {\r\n    super(uploadService);\r\n  }\r\n\r\n  get displayDragDrop(): boolean {\r\n    return this.dragDrop && !isMobile();\r\n  }\r\n\r\n  get displaySendButton(): boolean {\r\n    const currentFiles = this.currentFiles || [];\r\n    return !this.hideSendButton && !this.autoUpload && (currentFiles.length > 0 && this.hasFileNotUploaded);\r\n  }\r\n\r\n  get selectFileButtonLabel() {\r\n    if (this.canHandleDirectory) {\r\n      return this.literals.selectFolder;\r\n    } else if (this.isMultiple) {\r\n      return this.literals.selectFiles;\r\n    } else {\r\n      return this.literals.selectFile;\r\n    }\r\n  }\r\n\r\n  get hasMoreThanFourItems(): boolean {\r\n    return this.currentFiles && this.currentFiles.length > 4;\r\n  }\r\n\r\n  get hasMultipleFiles(): boolean {\r\n    return this.currentFiles && this.currentFiles.length > 1;\r\n  }\r\n\r\n  get hasFileNotUploaded(): boolean {\r\n    if (Array.isArray(this.currentFiles)) {\r\n      return this.currentFiles.some(file => file.status !== PoUploadStatus.Uploaded);\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  get isDisabled(): boolean {\r\n    const currentFiles = this.currentFiles || [];\r\n\r\n    return !!(this.hasAnyFileUploading(currentFiles) ||\r\n    !this.url ||\r\n    this.disabled ||\r\n    this.isExceededFileLimit(currentFiles.length));\r\n  }\r\n\r\n  get maxFiles(): number {\r\n    return this.isMultiple && this.fileRestrictions && this.fileRestrictions.maxFiles;\r\n  }\r\n\r\n  cancel(file: PoUploadFile) {\r\n    if (file.status === PoUploadStatus.Uploading) {\r\n      return this.stopUpload(file);\r\n    }\r\n\r\n    this.removeFile(file);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.autoFocus) {\r\n      this.focus();\r\n    }\r\n  }\r\n\r\n  /** MÃ©todo responsÃ¡vel por **limpar** o(s) arquivo(s) selecionado(s). */\r\n  clear() {\r\n    this.currentFiles = undefined;\r\n    this.updateModel([]);\r\n    this.cleanInputValue();\r\n  }\r\n\r\n  /**\r\n   * FunÃ§Ã£o que atribui foco ao componente.\r\n   *\r\n   * Para utilizÃ¡-la Ã© necessÃ¡rio ter a instÃ¢ncia do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\r\n   *\r\n   * ```\r\n   * import { PoUploadComponent } from '@portinari/portinari-ui';\r\n   *\r\n   * ...\r\n   *\r\n   * @ViewChild(PoUploadComponent, { static: true }) upload: PoUploadComponent;\r\n   *\r\n   * focusUpload() {\r\n   *   this.upload.focus();\r\n   * }\r\n   * ```\r\n   */\r\n  focus() {\r\n    if (!this.disabled) {\r\n      if (this.uploadButton) {\r\n        this.uploadButton.focus();\r\n        return;\r\n      }\r\n\r\n      if (this.displayDragDrop) {\r\n        this.poUploadDragDropComponent.focus();\r\n      }\r\n    }\r\n  }\r\n\r\n  // Verifica se existe algum arquivo sendo enviado ao serviÃ§o.\r\n  hasAnyFileUploading(files: Array<PoUploadFile>) {\r\n    if (files && files.length) {\r\n      return files.some(file => file.status === PoUploadStatus.Uploading);\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  // retorna se o status do arquivo Ã© diferente de enviado\r\n  isAllowCancelEvent(status: PoUploadStatus) {\r\n    return status !== PoUploadStatus.Uploaded;\r\n  }\r\n\r\n  // FunÃ§Ã£o disparada ao selecionar algum arquivo.\r\n  onFileChange(event): void {\r\n\r\n    // necessÃ¡rio este tratamento quando para IE, pois nele o change Ã© disparado quando o campo Ã© limpado tambÃ©m\r\n    if (this.calledByCleanInputValue) {\r\n      this.calledByCleanInputValue = false;\r\n      return event.preventDefault();\r\n    }\r\n\r\n    const files = event.target.files;\r\n    this.updateFiles(files);\r\n\r\n    this.cleanInputValue();\r\n  }\r\n\r\n  onFileChangeDragDrop(files) {\r\n    this.updateFiles(files);\r\n  }\r\n\r\n  // Remove o arquivo passado por parÃ¢metro da lista dos arquivos correntes.\r\n  removeFile(file): void {\r\n    const index = this.currentFiles.indexOf(file);\r\n    this.currentFiles.splice(index, 1);\r\n\r\n    this.updateModel([...this.currentFiles]);\r\n  }\r\n\r\n  /** MÃ©todo responsÃ¡vel por **abrir** a janela para seleÃ§Ã£o de arquivo(s). */\r\n  selectFiles() {\r\n    this.calledByCleanInputValue = false;\r\n    this.inputFile.nativeElement.click();\r\n  }\r\n\r\n  sendFeedback(): void {\r\n\r\n    if (this.sizeNotAllowed > 0) {\r\n      const minFileSize = formatBytes(this.fileRestrictions.minFileSize);\r\n      const maxFileSize = formatBytes(this.fileRestrictions.maxFileSize);\r\n      const args = [ this.sizeNotAllowed, minFileSize || '0', maxFileSize ];\r\n      this.setPipeArguments('invalidSize', args);\r\n      this.sizeNotAllowed = 0;\r\n    }\r\n\r\n    if (this.extensionNotAllowed > 0) {\r\n      const allowedExtensionsFormatted = this.fileRestrictions.allowedExtensions.join(', ').toUpperCase();\r\n      const args = [ this.extensionNotAllowed, allowedExtensionsFormatted ];\r\n      this.setPipeArguments('invalidFormat', args);\r\n      this.extensionNotAllowed = 0;\r\n    }\r\n\r\n    if (this.quantityNotAllowed > 0) {\r\n      const args = [ this.quantityNotAllowed ];\r\n      this.setPipeArguments('invalidAmount', args);\r\n      this.quantityNotAllowed = 0;\r\n    }\r\n\r\n  }\r\n\r\n  /** MÃ©todo responsÃ¡vel por **enviar** o(s) arquivo(s) selecionado(s). */\r\n  sendFiles(): void {\r\n    if (this.currentFiles && this.currentFiles.length) {\r\n\r\n      this.uploadFiles(this.currentFiles);\r\n    }\r\n  }\r\n\r\n  setDirectoryAttribute(canHandleDirectory: boolean) {\r\n    if (canHandleDirectory) {\r\n      this.renderer.setAttribute(this.inputFile.nativeElement, 'webkitdirectory', 'true');\r\n    } else {\r\n      this.renderer.removeAttribute(this.inputFile.nativeElement, 'webkitdirectory');\r\n    }\r\n  }\r\n\r\n  // Caso o componente estiver no modo AutoUpload, o arquivo tambÃ©m serÃ¡ removido da lista.\r\n  stopUpload(file: PoUploadFile) {\r\n    this.uploadService.stopRequestByFile(file, () => {\r\n      if (this.autoUpload) {\r\n        this.removeFile(file);\r\n      } else {\r\n        this.stopUploadHandler(file);\r\n      }\r\n    });\r\n  }\r\n\r\n  trackByFn(index, file: PoUploadFile) {\r\n    return file.uid;\r\n  }\r\n\r\n  // Envia os arquivos passados por parÃ¢metro, exceto os que jÃ¡ foram enviados ao serviÃ§o.\r\n  uploadFiles(files: Array<PoUploadFile>) {\r\n    const filesFiltered = files.filter(file => file.status !== PoUploadStatus.Uploaded);\r\n\r\n    this.uploadService.upload(this.url, filesFiltered, this.onUpload,\r\n      (file, percent): any => { // UPLOADING\r\n        this.uploadingHandler(file, percent);\r\n\r\n      }, (file, eventResponse): any => { // SUCCESS\r\n        this.responseHandler(file, PoUploadStatus.Uploaded);\r\n        this.onSuccess.emit(eventResponse);\r\n\r\n      }, (file, eventError): any => { // Error\r\n        this.responseHandler(file, PoUploadStatus.Error);\r\n        this.onError.emit(eventError);\r\n    });\r\n  }\r\n\r\n  private cleanInputValue() {\r\n    this.calledByCleanInputValue = true;\r\n    this.inputFile.nativeElement.value = '';\r\n  }\r\n\r\n  // funÃ§Ã£o disparada na resposta do sucesso ou error\r\n  private responseHandler(file: PoUploadFile, status: PoUploadStatus) {\r\n    file.status = status;\r\n    file.percent = 100;\r\n  }\r\n\r\n  // mÃ©todo responsÃ¡vel por setar os argumentos do i18nPipe de acordo com a restriÃ§Ã£o.\r\n  private setPipeArguments(literalAttributes: string, literalArguments?) {\r\n    const pipeArguments = this.i18nPipe.transform(this.literals[literalAttributes], literalArguments);\r\n    this.notification.information(pipeArguments);\r\n  }\r\n\r\n  // FunÃ§Ã£o disparada ao parar um envio de arquivo.\r\n  private stopUploadHandler(file: PoUploadFile) {\r\n    file.status = PoUploadStatus.None;\r\n    file.percent = 0;\r\n  }\r\n\r\n  private updateFiles(files) {\r\n    this.currentFiles = this.parseFiles(files);\r\n\r\n    this.updateModel([...this.currentFiles]);\r\n\r\n    if (this.autoUpload) {\r\n      this.uploadFiles(this.currentFiles);\r\n    }\r\n  }\r\n\r\n  // Atualiza o ngModel para os arquivos passados por parÃ¢metro.\r\n  private updateModel(files: Array<PoUploadFile>) {\r\n    const modelFiles: Array<PoUploadFile> = this.mapCleanUploadFiles(files);\r\n    this.onModelChange ? this.onModelChange(modelFiles) : this.ngModelChange.emit(modelFiles);\r\n  }\r\n\r\n  // FunÃ§Ã£o disparada enquanto o arquivo estÃ¡ sendo enviado ao serviÃ§o.\r\n  private uploadingHandler(file: any, percent: number) {\r\n    file.status = PoUploadStatus.Uploading;\r\n    file.percent = percent;\r\n  }\r\n\r\n  // retorna os objetos do array sem as propriedades: percent e displayName\r\n  private mapCleanUploadFiles(files: Array<PoUploadFile>): Array<PoUploadFile> {\r\n    const mapedByUploadFile = progressFile => {\r\n      const { percent, displayName, ...uploadFile } = progressFile;\r\n\r\n      return uploadFile;\r\n    };\r\n\r\n    return files.map(mapedByUploadFile);\r\n  }\r\n}\r\n","import { Component, ElementRef, EventEmitter, Output, ViewChild } from '@angular/core';\r\nimport { AbstractControl, NgForm } from '@angular/forms';\r\n\r\nimport { convertImageToBase64, isExternalLink, isIE } from '../../../../utils/util';\r\nimport { PoLanguageService } from './../../../../services/po-language/po-language.service';\r\n\r\nimport { PoModalAction, PoModalComponent } from '../../../po-modal';\r\nimport { poRichTextLiteralsDefault } from '../po-rich-text-literals';\r\nimport { PoRichTextModalType } from '../enums/po-rich-text-modal-type.enum';\r\nimport { PoUploadComponent } from '../../po-upload/po-upload.component';\r\nimport { PoUploadFileRestrictions } from '../../po-upload/interfaces/po-upload-file-restriction.interface';\r\n\r\nconst uploadRestrictions = ['.apng', '.bmp', '.gif', '.ico', '.jpeg', '.jpg', '.png', '.svg'];\r\n\r\n@Component({\r\n  selector: 'po-rich-text-modal',\r\n  templateUrl: './po-rich-text-modal.component.html'\r\n})\r\nexport class PoRichTextModalComponent {\r\n\r\n  modalType: PoRichTextModalType;\r\n  savedCursorPosition;\r\n  selection = document.getSelection();\r\n  uploadModel: Array<any>;\r\n  uploadRestrictions: PoUploadFileRestrictions = {\r\n    allowedExtensions: uploadRestrictions\r\n  };\r\n  urlImage: string;\r\n  urlLink: string;\r\n  urlLinkText: string;\r\n\r\n  private isLinkEditing: boolean;\r\n  private isSelectedLink: boolean;\r\n  private linkElement: any;\r\n  private savedSelection: Range | null;\r\n\r\n  readonly literals = {\r\n    ...poRichTextLiteralsDefault[this.languageService.getShortLanguage()]\r\n  };\r\n\r\n  modalCancelAction: PoModalAction = {\r\n    label: this.literals.cancel,\r\n    action: () => {\r\n      this.modal.close();\r\n      this.command.emit();\r\n      this.retrieveCursorPosition();\r\n      this.cleanUpFields();\r\n    }\r\n  };\r\n\r\n  modalConfirmAction: PoModalAction = {\r\n    label: this.literals.insert,\r\n    disabled: false,\r\n    action: () => this.insertElementRef()\r\n  };\r\n\r\n  modalLinkConfirmAction = {\r\n    label: this.linkConfirmAction(),\r\n    disabled: true,\r\n    action: () => this.isLinkEditing ? this.toEditLink() : this.toInsertLink(this.urlLink, this.urlLinkText)\r\n  };\r\n\r\n  get modalTitle(): string {\r\n    if (this.modalType === 'image') {\r\n      return this.literals.insertImage;\r\n    }\r\n\r\n    return this.linkConfirmAction();\r\n  }\r\n\r\n  get isUploadValid(): boolean {\r\n    return !!(this.uploadModel && this.uploadModel.length);\r\n  }\r\n\r\n  get isUrlValid(): boolean {\r\n    return !!this.urlImage && this.modalImageForm && this.modalImageForm.valid;\r\n  }\r\n\r\n  get modalPrimaryAction() {\r\n    return this.modalType === 'image' ? this.modalConfirmAction : this.modalLinkConfirmAction;\r\n  }\r\n\r\n  @ViewChild('modal', { static: true }) modal: PoModalComponent;\r\n\r\n  @ViewChild('modalImageForm', { static: false }) modalImageForm: NgForm;\r\n\r\n  @ViewChild('upload', { static: true }) upload: PoUploadComponent;\r\n\r\n  @ViewChild('modalImage', { static: true }) modalImage: ElementRef;\r\n\r\n  @ViewChild('modalLink', { static: true }) modalLink: PoModalComponent;\r\n\r\n  @ViewChild('modalLinkForm', { static: false }) modalLinkForm: NgForm;\r\n\r\n  @Output('p-command') command = new EventEmitter<string | { command: string, value: string | any }>();\r\n\r\n  @Output('p-link-editing') linkEditing = new EventEmitter<any>();\r\n\r\n  constructor(private languageService: PoLanguageService) {}\r\n\r\n  async convertToBase64() {\r\n    if (this.isUploadValid) {\r\n      const uploadImage = this.uploadModel[0].rawFile;\r\n      return await convertImageToBase64(uploadImage);\r\n    }\r\n  }\r\n\r\n  linkConfirmAction(): string {\r\n    return this.isLinkEditing ? this.literals.editLink : this.literals.insertLink;\r\n  }\r\n\r\n  emitCommand(value) {\r\n    let command: string;\r\n    if (value && this.modalType === PoRichTextModalType.Image) {\r\n      command = 'insertImage';\r\n      this.command.emit(({ command, value }));\r\n    }\r\n  }\r\n\r\n  formModelValidate() {\r\n    return this.modalLinkConfirmAction.disabled = this.modalLinkForm && this.modalLinkForm.invalid;\r\n  }\r\n\r\n  async insertElementRef() {\r\n\r\n    let uploadImage: string;\r\n\r\n    if (this.modalType === PoRichTextModalType.Image && !this.urlImage) {\r\n      uploadImage = await this.convertToBase64();\r\n    }\r\n\r\n    this.retrieveCursorPosition();\r\n    this.modal.close();\r\n\r\n    if (this.isUrlValid || this.isUploadValid) {\r\n      this.emitCommand(this.urlImage || uploadImage);\r\n    }\r\n    this.cleanUpFields();\r\n  }\r\n\r\n  openModal(type: PoRichTextModalType) {\r\n    this.modalType = type;\r\n\r\n    this.saveCursorPosition();\r\n\r\n    if (this.modalType === PoRichTextModalType.Link) {\r\n      this.prepareModalForLink();\r\n      this.modalLinkConfirmAction.label = this.linkConfirmAction();\r\n    }\r\n\r\n    this.modal.open();\r\n  }\r\n\r\n  selectedLink(event) {\r\n    this.isSelectedLink = !!event;\r\n    this.linkElement = event;\r\n  }\r\n\r\n  private checkIfIsEmpty(urlLink: string, urlLinkText: string) {\r\n    return urlLinkText === undefined || urlLinkText.trim() === '' ? urlLink : urlLinkText;\r\n  }\r\n\r\n  private cleanUpFields() {\r\n    this.urlImage = undefined;\r\n    this.urlLink = undefined;\r\n    this.urlLinkText = undefined;\r\n    this.uploadModel = undefined;\r\n    this.isLinkEditing = false;\r\n    this.isSelectedLink = false;\r\n    this.linkElement = undefined;\r\n  }\r\n\r\n  private formReset(control: AbstractControl) {\r\n    control.markAsPristine();\r\n    control.markAsUntouched();\r\n    control.updateValueAndValidity();\r\n  }\r\n\r\n  private prepareModalForLink() {\r\n    this.saveSelectionText();\r\n    if (this.modalLinkForm) {\r\n      this.formReset(this.modalLinkForm.control);\r\n    }\r\n\r\n    setTimeout(() => { this.formModelValidate(); });\r\n\r\n    if (this.isSelectedLink) {\r\n      this.isLinkEditing = true;\r\n      this.setLinkEditableForModal();\r\n    }\r\n\r\n    this.linkEditing.emit(this.isLinkEditing);\r\n  }\r\n\r\n  private restoreSelection() {\r\n    if (this.savedSelection) {\r\n      if (this.selection) {\r\n        this.selection.removeAllRanges();\r\n        this.selection.addRange(this.savedSelection);\r\n      }\r\n      return true;\r\n    }  else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private retrieveCursorPosition() {\r\n    this.selection.collapse(this.savedCursorPosition[0], this.savedCursorPosition[1]);\r\n  }\r\n\r\n  private saveCursorPosition() {\r\n    this.savedCursorPosition = [ this.selection.focusNode, this.selection.focusOffset ];\r\n  }\r\n\r\n  private saveSelectionText() {\r\n    if (this.selection.anchorNode !== null) {\r\n      this.savedSelection = this.selection.getRangeAt(0);\r\n      this.urlLinkText = this.selection.toString();\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private setLinkEditableForModal() {\r\n    this.urlLinkText = this.linkElement.innerText;\r\n    this.urlLink = this.linkElement.getAttribute('href');\r\n  }\r\n\r\n  private toEditLink() {\r\n    if (isIE()) {\r\n      this.linkElement.parentNode.removeChild(this.linkElement);\r\n    } else {\r\n    this.linkElement.remove();\r\n    }\r\n\r\n    this.toInsertLink(this.urlLink, this.urlLinkText);\r\n  }\r\n\r\n  private toInsertLink(urlLink, urlLinkText) {\r\n    this.modal.close();\r\n    this.restoreSelection();\r\n\r\n    const urlLinkTextValue = this.checkIfIsEmpty(urlLink, urlLinkText);\r\n    const urlAsExternalLink = isExternalLink(urlLink) ? urlLink : `http://${urlLink}`;\r\n\r\n    const command: string = 'InsertHTML';\r\n\r\n    const value = { urlLink: urlAsExternalLink, urlLinkText: urlLinkTextValue };\r\n\r\n    this.command.emit({ command, value });\r\n\r\n    this.cleanUpFields();\r\n  }\r\n\r\n}\r\n","import { AfterViewInit, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\n\nimport { isIE } from '../../../../utils/util';\nimport { PoLanguageService } from '../../../../services/po-language/po-language.service';\n\nimport { PoButtonGroupItem } from '../../../po-button-group';\nimport { poRichTextLiteralsDefault } from '../po-rich-text-literals';\nimport { PoRichTextModalType } from '../enums/po-rich-text-modal-type.enum';\nimport { PoRichTextToolbarButtonGroupItem } from '../interfaces/po-rich-text-toolbar-button-group-item.interface';\n\nconst poRichTextDefaultColor = '#000000';\n\n@Component({\n  selector: 'po-rich-text-toolbar',\n  templateUrl: './po-rich-text-toolbar.component.html'\n})\nexport class PoRichTextToolbarComponent implements AfterViewInit {\n\n  private _readonly: boolean;\n\n  readonly literals = {\n    ...poRichTextLiteralsDefault[this.languageService.getShortLanguage()]\n  };\n\n  alignButtons: Array<PoRichTextToolbarButtonGroupItem> = [\n    {\n      command: 'justifyleft',\n      icon: 'po-icon-align-left',\n      tooltip: this.literals.left,\n      action: this.emitAlignCommand.bind(this, 'justifyleft'),\n      selected: true\n    },\n    {\n      command: 'justifycenter',\n      icon: 'po-icon-align-center',\n      tooltip: this.literals.center,\n      action: this.emitAlignCommand.bind(this, 'justifycenter')\n    },\n    {\n      command: 'justifyright',\n      icon: 'po-icon-align-right',\n      tooltip: this.literals.right,\n      action: this.emitAlignCommand.bind(this, 'justifyright')\n    },\n    {\n      command: 'justifyfull',\n      icon: 'po-icon-align-justify',\n      tooltip: this.literals.justify,\n      action: this.emitAlignCommand.bind(this, 'justifyfull')\n    }\n  ];\n\n  formatButtons: Array<PoRichTextToolbarButtonGroupItem> = [\n    {\n      command: 'bold',\n      icon: 'po-icon-text-bold',\n      tooltip: this.literals.bold,\n      action: this.emitCommand.bind(this, 'bold')\n    },\n    {\n      command: 'italic',\n      icon: 'po-icon-text-italic',\n      tooltip: this.literals.italic,\n      action: this.emitCommand.bind(this, 'italic')\n    },\n    {\n      command: 'underline',\n      icon: 'po-icon-text-underline',\n      tooltip: this.literals.underline,\n      action: this.emitCommand.bind(this, 'underline')\n    }\n  ];\n\n  listButtons: Array<PoRichTextToolbarButtonGroupItem> = [\n    {\n      command: 'insertUnorderedList',\n      icon: 'po-icon-list',\n      tooltip: this.literals.unorderedList,\n      action: this.emitCommand.bind(this, 'insertUnorderedList')\n    }\n  ];\n\n  linkButtons: Array<PoRichTextToolbarButtonGroupItem> = [\n    {\n      command: 'Createlink',\n      icon: 'po-icon-link',\n      tooltip: `${this.literals.insertLink} (Ctrl + K)`,\n      action: () => this.modal.emit(PoRichTextModalType.Link)\n    }\n  ];\n\n  mediaButtons: Array<PoButtonGroupItem> = [\n    {\n      tooltip: this.literals.insertImage,\n      icon: 'po-icon-picture',\n      action: () => this.modal.emit(PoRichTextModalType.Image)\n    }\n  ];\n\n  @ViewChild('colorPickerInput', { read: ElementRef, static: false }) colorPickerInput: ElementRef;\n\n  @ViewChild('toolbarElement', { static: true }) toolbarElement: ElementRef;\n\n  @Input('p-readonly') set readonly(value: boolean) {\n    this._readonly = value;\n    this.toggleDisableButtons(this._readonly);\n  }\n\n  get readonly() {\n    return this._readonly;\n  }\n\n  @Output('p-command') command = new EventEmitter<string | { command: string, value: string }>();\n\n  @Output('p-modal') modal = new EventEmitter<any>();\n\n  get isInternetExplorer() {\n    return isIE();\n  }\n\n  constructor(private languageService: PoLanguageService) { }\n\n  ngAfterViewInit() {\n    this.removeButtonFocus();\n    this.setColorInColorPicker(poRichTextDefaultColor);\n  }\n\n  changeTextColor(value) {\n    const command = 'foreColor';\n\n    this.command.emit({ command, value });\n  }\n\n  setButtonsStates(obj: {commands: Array<string>, hexColor: string}) {\n    if (!this.readonly) {\n      this.alignButtons.forEach(button => button.selected = obj.commands.includes(button.command));\n      this.formatButtons.forEach(button => button.selected = obj.commands.includes(button.command));\n      this.listButtons[0].selected = obj.commands.includes(this.listButtons[0].command);\n      this.linkButtons[0].selected = obj.commands.includes(this.linkButtons[0].command);\n      this.setColorInColorPicker(obj.hexColor);\n    }\n  }\n\n  shortcutTrigger() {\n    this.modal.emit(PoRichTextModalType.Link);\n  }\n\n  private emitAlignCommand(command: string) {\n    const index = this.alignButtons.findIndex(btn => btn.command === command);\n\n    if (this.alignButtons[index].selected) {\n      this.alignButtons[index].selected = false;\n    }\n\n    this.command.emit(command);\n  }\n\n  private emitCommand(command: string) {\n    this.command.emit(command);\n  }\n\n  private removeButtonFocus() {\n    const buttons = this.toolbarElement.nativeElement.querySelectorAll('button');\n\n    buttons.forEach(button => button.setAttribute('tabindex', '-1'));\n  }\n\n  private setColorInColorPicker(color: string): void {\n    this.colorPickerInput.nativeElement.value = color;\n  }\n\n  private toggleDisableButtons(state: boolean) {\n    this.alignButtons.forEach(button => button.disabled = state);\n    this.formatButtons.forEach(button => button.disabled = state);\n    this.listButtons[0].disabled = state;\n    this.linkButtons[0].disabled = state;\n    this.mediaButtons[0].disabled = state;\n  }\n\n}\n","import { Component, ElementRef, forwardRef } from '@angular/core';\nimport { AbstractControl, NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\n\nimport { PoInputGeneric } from '../po-input-generic/po-input-generic';\n\n/**\n * @docsExtends PoInputBaseComponent\n *\n * @example\n *\n * <example name=\"po-input-basic\" title=\"Portinari Input Basic\">\n *  <file name=\"sample-po-input-basic/sample-po-input-basic.component.html\"> </file>\n *  <file name=\"sample-po-input-basic/sample-po-input-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-input-labs\" title=\"Portinari Input Labs\">\n *  <file name=\"sample-po-input-labs/sample-po-input-labs.component.html\"> </file>\n *  <file name=\"sample-po-input-labs/sample-po-input-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-input-reactive-form\" title=\"Portinari Input - Reactive Form\">\n *  <file name=\"sample-po-input-reactive-form/sample-po-input-reactive-form.component.html\"> </file>\n *  <file name=\"sample-po-input-reactive-form/sample-po-input-reactive-form.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-input',\n  templateUrl: './po-input.component.html',\n  providers: [\n  {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => PoInputComponent),\n    multi: true,\n  },\n  {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => PoInputComponent),\n    multi: true,\n  }]\n})\nexport class PoInputComponent extends PoInputGeneric {\n\n  constructor(el: ElementRef) {\n    super(el);\n  }\n\n  extraValidation(c: AbstractControl): { [key: string]: any; } {\n    return null;\n  }\n\n}\n","import {  ElementRef } from '@angular/core';\n\nimport { PoInputGeneric } from '../po-input-generic/po-input-generic';\n\nexport abstract class PoNumberBaseComponent extends PoInputGeneric {\n\n  type = 'number';\n\n  constructor(elementRef: ElementRef) {\n    super(elementRef);\n  }\n\n  eventOnInput(e: any) {\n    if (!this.mask) {\n      let value = e.target.value;\n      const valueMaxlength = this.validMaxLength(this.maxlength, value);\n\n      if (value !== valueMaxlength) {\n        value = valueMaxlength;\n\n        this.inputEl.nativeElement.value = value;\n      }\n\n      this.callOnChange(this.formatNumber(value));\n    }\n  }\n\n  validMaxLength(maxlength: number, value: string) {\n\n    if (maxlength && value.length > maxlength) {\n      const substringValue = value.toString().substring(0, maxlength);\n\n      if (substringValue && this.isEndWithDot(substringValue)) {\n        return substringValue.toString().substring(0, maxlength - 1);\n      }\n\n      return substringValue;\n    }\n\n    return value;\n  }\n\n  writeValueModel(value) {\n    if (this.inputEl) {\n      if (value || value === 0) {\n        if (this.mask) {\n          this.inputEl.nativeElement.value = this.objMask.controlFormatting(String(value));\n\n          // Se o model for definido como formatado, entÃ£o precisa atualizÃ¡-lo no primeiro acesso\n          if (this.objMask.formatModel) {\n            this.onChangePropagate(this.objMask.valueToModel);\n          }\n        } else {\n          this.inputEl.nativeElement.value = value;\n        }\n      } else { // Se for o valor for undefined, deve limpar o campo\n        this.inputEl.nativeElement.value = '';\n      }\n    }\n\n    // Emite evento quando o model Ã© atualizado, inclusive a primeira vez\n\n    this.changeModel.emit(value);\n\n  }\n\n  private isEndWithDot(value: string) {\n    return value && value.lastIndexOf('.') === value.length - 1;\n  }\n\n  private formatNumber(value) {\n    return value ? Number(value) : null;\n  }\n\n}\n","import { AbstractControl, NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nimport { Component, ElementRef, forwardRef, Input } from '@angular/core';\n\nimport { minFailed, maxFailed } from '../validators';\n\nimport { PoNumberBaseComponent } from './po-number-base.component';\n\n/**\n * @docsExtends PoInputBaseComponent\n *\n * @description\n *\n * po-number Ã© um input especÃ­fico para receber apenas nÃºmeros.\n * Ã possÃ­vel configurar um valor mÃ­nimo, mÃ¡ximo e um step com p-min, p-max e p-step,\n * respectivamente.\n *\n * @example\n *\n * <example name=\"po-number-basic\" title=\"Portinari Number Basic\">\n *  <file name=\"sample-po-number-basic/sample-po-number-basic.component.html\"> </file>\n *  <file name=\"sample-po-number-basic/sample-po-number-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-number-labs\" title=\"Portinari Number Labs\">\n *  <file name=\"sample-po-number-labs/sample-po-number-labs.component.html\"> </file>\n *  <file name=\"sample-po-number-labs/sample-po-number-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-number-calculate\" title=\"Portinari Number - Calculate\">\n *  <file name=\"sample-po-number-calculate/sample-po-number-calculate.component.html\"> </file>\n *  <file name=\"sample-po-number-calculate/sample-po-number-calculate.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-number',\n  templateUrl: './po-number.component.html',\n  providers: [\n  {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => PoNumberComponent),\n    multi: true,\n  },\n  {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => PoNumberComponent),\n    multi: true,\n  }]\n})\nexport class PoNumberComponent extends PoNumberBaseComponent {\n\n  /** Valor mÃ­nimo. */\n  min?: number;\n  @Input('p-min') set setMin(min: string) {\n    const parsedInt = parseInt(min, 10);\n    this.min = !isNaN(parsedInt) ? parsedInt : undefined;\n    this.validateModel();\n  }\n\n  /** Valor mÃ¡ximo. */\n  max?: number;\n  @Input('p-max') set setMax(max: string) {\n    const parsedInt = parseInt(max, 10);\n    this.max = !isNaN(parsedInt) ? parsedInt : undefined;\n    this.validateModel();\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Intervalo.\n   *\n   * @default 1\n   */\n  @Input('p-step') step?: string = '1';\n\n  constructor(el: ElementRef) {\n    super(el);\n  }\n\n  extraValidation(abstractControl: AbstractControl): { [key: string]: any; } {\n\n    if (minFailed(this.min, abstractControl.value)) {\n      return { min: {\n        valid: false,\n      }};\n    }\n\n    if (maxFailed(this.max, abstractControl.value)) {\n      return { max: {\n        valid: false,\n      }};\n    }\n\n    return null;\n  }\n\n}\n","import { AbstractControl, NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Component, ElementRef, forwardRef, Input } from '@angular/core';\n\nimport { convertToBoolean } from '../../../utils/util';\nimport { PoInputGeneric } from '../po-input-generic/po-input-generic';\n\n/**\n * @docsExtends PoInputBaseComponent\n *\n * @description\n * O po-password Ã© um input especÃ­fico para senhas. JÃ¡ possui tipo, estilo e Ã­cone predefinidos.\n *\n * @example\n *\n * <example name=\"po-password-basic\" title=\"Portinari Password Basic\">\n *   <file name=\"sample-po-password-basic/sample-po-password-basic.component.html\"> </file>\n *   <file name=\"sample-po-password-basic/sample-po-password-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-password-labs\" title=\"Portinari Password Labs\">\n *   <file name=\"sample-po-password-labs/sample-po-password-labs.component.html\"> </file>\n *   <file name=\"sample-po-password-labs/sample-po-password-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-password-reset\" title=\"Portinari Password - Reset\">\n *   <file name=\"sample-po-password-reset/sample-po-password-reset.component.html\"> </file>\n *   <file name=\"sample-po-password-reset/sample-po-password-reset.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-password',\n  templateUrl: './po-password.component.html',\n  providers: [\n  {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => PoPasswordComponent),\n    multi: true,\n  },\n  {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => PoPasswordComponent),\n    multi: true,\n  }]\n})\nexport class PoPasswordComponent extends PoInputGeneric {\n\n  private _hidePasswordPeek?: boolean = false;\n\n  type = 'password';\n  visiblePassword = false;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Permite esconder a funÃ§Ã£o de espiar a senha digitada.\n   *\n   * @default `false`\n   */\n  @Input('p-hide-password-peek') set hidePasswordPeek(value: boolean) {\n    this._hidePasswordPeek = convertToBoolean(value);\n    if (value) {\n      this.visiblePassword = false;\n      this.type = 'password';\n    }\n  }\n\n  get hidePasswordPeek(): boolean {\n    return this._hidePasswordPeek;\n  }\n\n  constructor(el: ElementRef) {\n    super(el);\n  }\n\n  extraValidation(c: AbstractControl): { [key: string]: any; } {\n    return null;\n  }\n\n  showPassword() {\n    this.visiblePassword = !this.visiblePassword;\n    this.type = this.type === 'password' ? 'text' : 'password';\n  }\n\n}\n","import { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\nimport { EventEmitter, Input, Output } from '@angular/core';\n\nimport { convertToBoolean, convertToInt, removeDuplicatedOptions } from '../../../utils/util';\nimport { InputBoolean } from '../../../decorators';\nimport { requiredFailed } from '../validators';\n\nimport { PoRadioGroupOption } from './po-radio-group-option.interface';\n\nconst poRadioGroupColumnsDefaultLength: number = 6;\nconst poRadioGroupColumnsTotalLength: number = 12;\n\n/**\n * @description\n *\n * O componente `po-radio-group` deve ser utilizado para disponibilizar mÃºltiplas opÃ§Ãµes ao usuÃ¡rio, permitindo a ele que\n * selecione apenas uma delas. Seu uso Ã© recomendado para um nÃºmero pequeno de opÃ§Ãµes, caso contrÃ¡rio, recomenda-se o uso\n * do [**po-combo**](/documentation/po-combo) ou [**po-select**](/documentation/po-select).\n *\n * Este nÃ£o Ã© um componente de multiseleÃ§Ã£o, se for este o caso, deve-se utilizar o\n * [**po-checkbox-group**](/documentation/po-checkbox-group).\n *\n * > Ao passar um valor para o *model* que nÃ£o esteja na lista de opÃ§Ãµes, o mesmo serÃ¡ definido como `undefined`.\n */\nexport abstract class PoRadioGroupBaseComponent implements ControlValueAccessor, Validator {\n\n  private _columns: number = poRadioGroupColumnsDefaultLength;\n  private _disabled?: boolean = false;\n  private _options: Array<PoRadioGroupOption>;\n  private _required?: boolean = false;\n\n  mdColumns: number = poRadioGroupColumnsDefaultLength;\n  value: any;\n\n  private onChangePropagate: any = null;\n  private validatorChange;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Aplica foco no elemento ao ser iniciado.\n   *\n   * > Caso mais de um elemento seja configurado com essa propriedade, apenas o Ãºltimo elemento declarado com ela terÃ¡ o foco.\n   *\n   * @default `false`\n   */\n  @Input('p-auto-focus') @InputBoolean() autoFocus: boolean = false;\n\n  /** Nome das opÃ§Ãµes. */\n  @Input('name') name: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a quantidade de colunas para exibiÃ§Ã£o das opÃ§Ãµes.\n   *\n   * **ConsideraÃ§Ãµes:**\n   *  - Ã possÃ­vel exibir as opÃ§Ãµes entre `1` e `4` colunas.\n   *  - O nÃºmero mÃ¡ximo de colunas Ã© invariÃ¡vel nas seguintes resoluÃ§Ãµes:\n   *    + `sm`: `1`\n   *    + `md`: `2`\n   *\n   * @default `2`\n   */\n  @Input('p-columns') set columns(value: number) {\n    const columns = convertToInt(value, poRadioGroupColumnsDefaultLength);\n\n    this._columns = this.getGridSystemColumns(columns, 4);\n    this.mdColumns = this.getGridSystemColumns(columns, 2);\n  }\n\n  get columns() {\n    return this._columns;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ desabilitado.\n   *\n   * @default `false`\n   */\n  @Input('p-disabled') set disabled(disabled: boolean) {\n    this._disabled = convertToBoolean(disabled);\n\n    this.validateModel();\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ obrigatÃ³rio.\n   *\n   * @default `false`\n   */\n  @Input('p-required') set required(required: boolean) {\n    this._required = convertToBoolean(required);\n\n    this.validateModel();\n  }\n\n  get required() {\n    return this._required;\n  }\n\n  /**\n   * Lista de opÃ§Ãµes que serÃ£o exibidas.\n   * Nesta propriedade deve ser definido um array de objetos que implementam a interface PoRadioGroupOption.\n   */\n  @Input('p-options') set options(value: Array<PoRadioGroupOption>) {\n    this._options = value;\n    removeDuplicatedOptions(this.options);\n  }\n  get options() {\n    return this._options;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `p-required`;\n   * - NÃ£o possuir `p-help` e/ou `p-label`.\n   *\n   * @default `false`\n   */\n  @Input('p-optional') optional: boolean;\n\n  /** Evento ao alterar valor do campo. */\n  @Output('p-change') change?: EventEmitter<any> = new EventEmitter<any>();\n\n  // Deve retornar o valor elemento que contÃ©m o valor passado por parÃ¢metro\n  abstract getElementByValue(value: any): any;\n\n  // FunÃ§Ã£o que controla quando deve ser emitido onChange e atualiza o Model\n  changeValue(changedValue: any) {\n    if (this.onChangePropagate) {\n      this.onChangePropagate(changedValue);\n    }\n\n    if (this.value !== changedValue) {\n      this.change.emit(changedValue);\n    }\n\n    this.value = changedValue;\n  }\n\n  registerOnChange(fn: any) {\n    this.onChangePropagate = fn;\n  }\n\n  registerOnTouched(fn: any) { }\n\n  registerOnValidatorChange(fn: any) {\n    this.validatorChange = fn;\n  }\n\n  validate(abstractControl: AbstractControl): { [key: string]: any; } {\n\n    if (requiredFailed(this.required, this.disabled, abstractControl.value)) {\n      return {\n        required: {\n          valid: false,\n        }\n      };\n    }\n\n  }\n\n  writeValue(modelValue: any) {\n    this.value = modelValue;\n\n    // Busca radio com o valor especificado\n    const element = this.getElementByValue(modelValue);\n    if (!element && this.onChangePropagate) {\n      this.value = undefined;\n      this.onChangePropagate(this.value);\n    }\n  }\n\n  private checkColumnsRange(columns, maxColumns): boolean {\n    const minColumns = 1;\n\n    return columns >= minColumns && columns <= maxColumns;\n  }\n\n  private getGridSystemColumns(columns: number, maxColumns: number): number {\n    const gridSystemColumns = poRadioGroupColumnsTotalLength / columns;\n\n    return this.checkColumnsRange(columns, maxColumns) ? gridSystemColumns : poRadioGroupColumnsDefaultLength;\n  }\n\n  private validateModel() {\n    if (this.validatorChange) {\n      this.validatorChange();\n    }\n  }\n\n}\n","import { AfterViewInit, Component, DoCheck, ElementRef, forwardRef, Input, IterableDiffers, QueryList, ViewChild,\n  ViewChildren } from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { removeDuplicatedOptions } from '../../../utils/util';\n\nimport { PoRadioGroupBaseComponent } from './po-radio-group-base.component';\n\n/**\n * @docsExtends PoRadioGroupBaseComponent\n *\n * @example\n *\n * <example name=\"po-radio-group-basic\" title=\"Portinari Radio Group Basic\">\n *  <file name=\"sample-po-radio-group-basic/sample-po-radio-group-basic.component.html\"> </file>\n *  <file name=\"sample-po-radio-group-basic/sample-po-radio-group-basic.component.ts\"> </file>\n *  <file name=\"sample-po-radio-group-basic/sample-po-radio-group-basic.component.e2e-spec.ts\"> </file>\n *  <file name=\"sample-po-radio-group-basic/sample-po-radio-group-basic.component.po.ts\"> </file>\n * </example>\n *\n * <example name=\"po-radio-group-labs\" title=\"Portinari Radio Group Labs\">\n *  <file name=\"sample-po-radio-group-labs/sample-po-radio-group-labs.component.html\"> </file>\n *  <file name=\"sample-po-radio-group-labs/sample-po-radio-group-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-radio-group-translator\" title=\"Portinari Radio Group - Translator\">\n *  <file name=\"sample-po-radio-group-translator/sample-po-radio-group-translator.component.html\"> </file>\n *  <file name=\"sample-po-radio-group-translator/sample-po-radio-group-translator.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-radio-group-translator-reactive-form\" title=\"Portinari Radio Group - Translator Reactive Form\">\n *  <file name=\"sample-po-radio-group-translator-reactive-form/sample-po-radio-group-translator-reactive-form.component.html\"> </file>\n *  <file name=\"sample-po-radio-group-translator-reactive-form/sample-po-radio-group-translator-reactive-form.component.ts\"> </file>\n * </example>\n *\n */\n@Component({\n  selector: 'po-radio-group',\n  templateUrl: './po-radio-group.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PoRadioGroupComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => PoRadioGroupComponent),\n      multi: true,\n    }\n  ]\n})\nexport class PoRadioGroupComponent extends PoRadioGroupBaseComponent implements AfterViewInit, DoCheck {\n\n  /** Label do campo. */\n  @Input('p-label') label?: string;\n\n  /** Texto de apoio do campo. */\n  @Input('p-help') help?: string;\n\n  @ViewChild('inp', {read: ElementRef, static: true }) inputEl: ElementRef;\n  @ViewChildren('inputRadio') radioLabels: QueryList<ElementRef>;\n\n  differ: any;\n\n  constructor(differs: IterableDiffers) {\n    super();\n    this.differ = differs.find([]).create(null);\n  }\n\n  ngAfterViewInit() {\n    if (this.autoFocus) {\n      this.focus();\n    }\n  }\n\n  ngDoCheck() {\n    const change = this.differ.diff(this.options);\n    if (change) {\n      removeDuplicatedOptions(this.options);\n    }\n  }\n\n  eventClick(value: any, disabled: any) {\n    if (!disabled) {\n      this.changeValue(value);\n    }\n  }\n\n  /**\n   * FunÃ§Ã£o que atribui foco ao componente.\n   *\n   * Para utilizÃ¡-la Ã© necessÃ¡rio ter a instÃ¢ncia do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n   *\n   * ```\n   * import { PoRadioGroupComponent } from '@portinari/portinari-ui';\n   *\n   * ...\n   *\n   * @ViewChild(PoRadioGroupComponent, { static: true }) radio: PoRadioGroupComponent;\n   *\n   * focusRadio() {\n   *   this.radio.focus();\n   * }\n   * ```\n   */\n  focus(): void {\n    if (this.radioLabels && !this.disabled) {\n      const radioLabel = this.radioLabels.find((_, index) => !this.options[index].disabled);\n\n      if (radioLabel) {\n        radioLabel.nativeElement.focus();\n      }\n    }\n  }\n\n  getElementByValue(value) {\n    return this.inputEl.nativeElement.querySelector(`input[value='${value}']`);\n  }\n\n  onKeyUp(event: KeyboardEvent, value) {\n    const key = event.keyCode || event.which;\n\n    if (this.isArrowKey(key)) {\n      this.changeValue(value);\n    }\n  }\n\n  private isArrowKey(key: number) {\n    return key >= 37 && key <= 40;\n  }\n\n}\n","import { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\nimport { ChangeDetectorRef, ElementRef, EventEmitter, Input, Output } from '@angular/core';\n\nimport { convertToBoolean, removeDuplicatedOptions, removeUndefinedAndNullOptions } from '../../../utils/util';\nimport { InputBoolean } from '../../../decorators';\nimport { requiredFailed } from '../validators';\n\nimport { PoSelectOption } from './po-select-option.interface';\n\n/**\n * @description\n *\n * O componente po-select exibe uma lista de valores e permite que o usuÃ¡rio selecione um desses valores.\n * Os valores listados podem ser fixos ou dinÃ¢micos de acordo com a necessidade do desenvolvedor, dando mais flexibilidade ao componente.\n * O po-select nÃ£o permite que o usuÃ¡rio informe um valor diferente dos valores listados, isso garante a consistÃªncia da informaÃ§Ã£o.\n * O po-select nÃ£o permite que sejam passados valores duplicados, undefined e null para as opÃ§Ãµes, excluindo-os da lista.\n *\n * > Ao passar um valor para o _model_ que nÃ£o estÃ¡ na lista de opÃ§Ãµes, o mesmo serÃ¡ definido como `undefined`.\n *\n * TambÃ©m existe a possibilidade de utilizar um _template_ para a exibiÃ§Ã£o dos itens da lista,\n * veja mais em **[p-select-option-template](/documentation/po-select-option-template)**.\n */\nexport abstract class PoSelectBaseComponent implements ControlValueAccessor, Validator {\n\n  private _disabled?: boolean = false;\n  private _options: Array<PoSelectOption>;\n  private _readonly: boolean = false;\n  private _required?: boolean = false;\n\n  private onValidatorChange;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Aplica foco no elemento ao ser iniciado.\n   * > Caso mais de um elemento seja configurado com essa propriedade,\n   * o Ãºltimo elemento declarado com ela terÃ¡ o foco.\n   *\n   * @default `false`\n   */\n  @Input('p-auto-focus') @InputBoolean() autoFocus: boolean = false;\n\n  /** Adiciona uma label no componente. */\n  @Input('p-label') label?: string;\n\n  /** Nome do componente. */\n  @Input('name') name: string;\n\n  /** Texto de apoio para o campo. */\n  @Input('p-help') help?: string;\n\n  /** Mensagem que aparecerÃ¡ enquanto nenhuma opÃ§Ã£o estiver selecionada. */\n  @Input('p-placeholder') placeholder?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `p-required`;\n   * - NÃ£o possuir `p-help` e/ou `p-label`.\n   *\n   * @default `false`\n   */\n  @Input('p-optional') optional: boolean;\n\n  /**\n   * Nesta propriedade deve ser definido uma coleÃ§Ã£o de objetos que implementam a interface PoSelectOption.\n   * Caso esta lista estiver vazia, o model serÃ¡ undefined.\n   */\n  @Input('p-options') set options(options: Array<PoSelectOption>) {\n    this._options = options;\n    removeDuplicatedOptions(this._options);\n    removeUndefinedAndNullOptions(this._options);\n    this.onUpdateOptions();\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  /** Deve ser informada uma funÃ§Ã£o que serÃ¡ disparada quando houver alteraÃ§Ãµes no ngModel. */\n  @Output('p-change') change?: EventEmitter<any> = new EventEmitter<any>();\n\n  // FunÃ§Ã£o para atualizar o ngModel do componente, necessÃ¡rio quando nÃ£o for utilizado dentro da tag form.\n  @Output('ngModelChange') ngModelChange?: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ desabilitado.\n   *\n   * @default `false`\n   */\n  @Input('p-disabled') set disabled(disabled: string | boolean) {\n    this._disabled = convertToBoolean(disabled);\n\n    this.validateModel();\n  }\n  get disabled() {\n    return this._disabled;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ somente para leitura.\n   *\n   * @default `false`\n   */\n  @Input('p-readonly') set readonly(value: boolean) {\n    this._readonly = convertToBoolean(value);\n  }\n\n  get readonly() {\n    return this._readonly;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ obrigatÃ³rio.\n   *\n   * @default `false`\n   */\n  @Input('p-required')\n  set required(required: string | boolean) {\n    this._required = convertToBoolean(required);\n\n    this.validateModel();\n  }\n  get required() {\n    return this._required;\n  }\n\n  changeDetector: ChangeDetectorRef;\n  onModelChange: any;\n  onModelTouched: any;\n  readyToValidation: boolean = false;\n\n  protected clickoutListener: () => void;\n\n  constructor(public element: ElementRef, changeDetector: ChangeDetectorRef) {\n    this.element = element;\n    this.changeDetector = changeDetector;\n  }\n\n  callModelChange(value: any) {\n    // Caso o componente estiver dentro de um form, terÃ¡ acesso ao mÃ©todo onModelChange.\n    return (this.onModelChange) ? this.onModelChange(value) : this.ngModelChange.emit(value);\n  }\n\n  onChange(value) {\n    this.change.emit(value);\n  }\n\n  validate(abstractControl: AbstractControl): { [key: string]: any; } {\n\n    if (requiredFailed(this._required, this._disabled, abstractControl.value)) {\n      return {\n        required: {\n          valid: false,\n        }\n      };\n    }\n\n    return null;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onModelTouched = fn;\n  }\n\n  registerOnValidatorChange(fn: any) {\n    this.onValidatorChange = fn;\n  }\n\n  private validateModel() {\n    if (this.onValidatorChange) {\n      this.onValidatorChange();\n    }\n  }\n\n  abstract onUpdateOptions(): void;\n\n  abstract updateModel(selectOption: PoSelectOption): void;\n\n  abstract writeValue(value: any): void;\n\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n/**\n * @usedBy PoSelectComponent\n *\n * @description\n *\n * Esta diretiva permite personalizar o conteÃºdo dos itens exibidos na lista suspensa do componente.\n *\n * > Quando utilizada em _mobile_ serÃ¡ exibido o componente nativo.\n *\n * Para personalizar o conteÃºdo de cada item da lista deve-se utilizar a diretiva `p-select-option-template` com `ng-template`\n * dentro da tag `po-select`.\n *\n * Para obter a referÃªncia do item atual, use `let-option`, com isso vocÃª terÃ¡ acesso aos valores e poderÃ¡ personalizar sua exibiÃ§Ã£o.\n *\n * Esta diretiva compÃµe-se de dois meios para uso, de forma explÃ­cita tal como em *syntax sugar*. Veja a seguir ambos, respectivamente:\n *\n * ```\n * ...\n * <po-select\n *   name=\"select\"\n *   [(ngModel)]=\"select\"\n *   [p-options]=\"options\">\n *     <ng-template p-select-option-template let-option>\n *       <option-template [option]=\"option\"></option-template>\n *     </ng-template>\n * </po-select>\n * ...\n * ```\n *\n * ```\n * ...\n * <po-select\n *   name=\"select\"\n *   [(ngModel)]=\"select\"\n *   [p-options]=\"options\">\n *     <div *p-select-option-template=\"let option\">\n *       <option-template [option]=\"option\"></option-template>\n *     </div>\n * </po-select>\n * ...\n *\n * ```\n */\n@Directive({\n  selector: '[p-select-option-template]'\n})\nexport class PoSelectOptionTemplateDirective {\n\n  // NecessÃ¡rio manter templateRef para o funcionamento do row template.\n  constructor(public templateRef: TemplateRef<any>) { }\n\n}\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, ContentChild, Component, DoCheck, ElementRef, forwardRef, HostListener,\n  IterableDiffers, Renderer2, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\n\nimport { isMobile, removeDuplicatedOptions, removeUndefinedAndNullOptions, validValue } from '../../../utils/util';\nimport { PoControlPositionService } from './../../../services/po-control-position/po-control-position.service';\nimport { PoKeyCodeEnum } from './../../../enums/po-key-code.enum';\n\nimport { PoSelectBaseComponent } from './po-select-base.component';\nimport { PoSelectOption } from './po-select-option.interface';\nimport { PoSelectOptionTemplateDirective } from './po-select-option-template/po-select-option-template.directive';\n\nconst poSelectContentOffset = 8;\nconst poSelectContentPositionDefault = 'bottom';\n\n/**\n * @docsExtends PoSelectBaseComponent\n *\n * @example\n *\n * <example name=\"po-select-basic\" title=\"Portinari Select Basic\">\n *   <file name=\"sample-po-select-basic/sample-po-select-basic.component.html\"> </file>\n *   <file name=\"sample-po-select-basic/sample-po-select-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-select-labs\" title=\"Portinari Select Labs\">\n *   <file name=\"sample-po-select-labs/sample-po-select-labs.component.html\"> </file>\n *   <file name=\"sample-po-select-labs/sample-po-select-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-select-customer-registration\" title=\"Portinari Select - Customer registration\">\n *   <file name=\"sample-po-select-customer-registration/sample-po-select-customer-registration.component.html\"> </file>\n *   <file name=\"sample-po-select-customer-registration/sample-po-select-customer-registration.component.ts\"> </file>\n *   <file name=\"sample-po-select-customer-registration/sample-po-select-customer-registration.service.ts\"> </file>\n *   <file name='sample-po-select-customer-registration/sample-po-select-customer-registration.component.e2e-spec.ts'> </file>\n *   <file name='sample-po-select-customer-registration/sample-po-select-customer-registration.component.po.ts'> </file>\n * </example>\n */\n@Component({\n  selector: 'po-select',\n  templateUrl: './po-select.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PoSelectComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => PoSelectComponent),\n      multi: true,\n    },\n    PoControlPositionService\n  ]\n})\nexport class PoSelectComponent extends PoSelectBaseComponent implements AfterViewInit, DoCheck {\n\n  displayValue;\n  isMobile: any = isMobile();\n  modelValue: any;\n  open: boolean = false;\n  selectedValue: any;\n  selectIcon: string = 'po-icon-arrow-down';\n  scrollPosition: number;\n\n  private differ: any;\n\n  eventListenerFunction: () => void;\n  eventResizeListener: () => void;\n\n  @ContentChild(PoSelectOptionTemplateDirective, { static: true }) selectOptionTemplate: PoSelectOptionTemplateDirective;\n\n  @ViewChild('contentList', {read: ElementRef, static: true}) contentList: ElementRef;\n  @ViewChild('icon', {read: ElementRef, static: true}) iconElement: ElementRef;\n  @ViewChild('select', {read: ElementRef, static: true}) selectElement: ElementRef;\n  @ViewChild('selectButton', {read: ElementRef, static: true}) selectButtonElement: ElementRef;\n\n  constructor(\n    element: ElementRef,\n    changeDetector: ChangeDetectorRef,\n    differs: IterableDiffers,\n    public renderer: Renderer2,\n    private controlPosition: PoControlPositionService) {\n\n    super(element, changeDetector);\n\n    this.differ = differs.find([]).create(null);\n  }\n\n  get isInvisibleSelectNative() {\n    return this.readonly && this.isMobile;\n  }\n\n  @HostListener('keydown', ['$event']) onKeydown($event?: any) {\n\n    const charCode = $event.which || $event.keyCode;\n\n    // Tratamentos para quando o readonly for ativado.\n    if (this.readonly) {\n      // deve matar o evento do teclado devido a alterar o valor do model mesmo com os options fechados\n      if (charCode !== PoKeyCodeEnum.tab) {\n        this.disableDefaultEventAndToggleButton();\n        $event.preventDefault();\n      }\n      return;\n    }\n\n    // Seleciona os itens com as teclas \"up\" e \"down\"\n    if ((!this.open || $event.altKey) && (charCode === PoKeyCodeEnum.arrowDown || charCode === PoKeyCodeEnum.arrowUp)) {\n      this.disableDefaultEventAndToggleButton();\n    }\n\n    // Abre o po-select com as teclas \"enter\" e \"espaÃ§o\"\n    if (charCode === PoKeyCodeEnum.enter || charCode === PoKeyCodeEnum.space) {\n      this.disableDefaultEventAndToggleButton();\n    }\n\n    // Fecha o po-select com a tecla \"tab\"\n    if (this.open && charCode === PoKeyCodeEnum.tab) {\n      $event.preventDefault();\n      this.toggleButton();\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.autoFocus) {\n      this.focus();\n    }\n  }\n\n  ngDoCheck() {\n    const change = this.differ.diff(this.options);\n    if (change) {\n      removeDuplicatedOptions(this.options);\n      removeUndefinedAndNullOptions(this.options);\n    }\n  }\n\n  /**\n   * FunÃ§Ã£o que atribui foco ao componente.\n   *\n   * Para utilizÃ¡-la Ã© necessÃ¡rio ter a instÃ¢ncia do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n   *\n   * ```\n   * import { PoSelectComponent } from '@portinari/portinari-ui';\n   *\n   * ...\n   *\n   * @ViewChild(PoSelectComponent, { static: true }) select: PoSelectComponent;\n   *\n   * focusSelect() {\n   *   this.select.focus();\n   * }\n   * ```\n   */\n  focus(): void {\n    if (!this.disabled) {\n      this.selectElement.nativeElement.focus();\n    }\n  }\n\n  hideDropDown() {\n    this.selectIcon = 'po-icon-arrow-down';\n    this.selector('.po-select-container').classList.remove('po-select-show');\n    this.open = false;\n\n    this.changeDetector.markForCheck();\n    this.selectElement.nativeElement.focus();\n\n    this.removeListeners();\n  }\n\n  isEqual(value: any, inputValue: any): boolean {\n    if ((value || value === 0) && inputValue) {\n      return value.toString() === inputValue.toString();\n    }\n\n    if ((value === null && inputValue !== null) ||\n        (value === undefined && inputValue !== undefined)) {\n      value = `${value}`; // Transformando em string\n    }\n\n    return value === inputValue;\n  }\n\n  onOptionClick(option: PoSelectOption) {\n    this.updateModel(option);\n    this.toggleButton();\n  }\n\n  // Altera o valor ao selecionar um item.\n  onSelectChange(value: any) {\n    if (value && this.options && this.options.length) {\n      const optionFound: PoSelectOption = this.findOptionValue(value);\n\n      if (optionFound) {\n        this.updateModel(optionFound);\n        this.setScrollPosition(optionFound.value);\n      }\n    }\n  }\n\n  onUpdateOptions() {\n    if (this.modelValue) {\n      this.onSelectChange(this.modelValue);\n    }\n  }\n\n  scrollValue(index, clientHeight) {\n    const heightScrollValue: number = (index) * this.getSelectItemHeight();\n\n    return this.scrollPosition = heightScrollValue > clientHeight ? heightScrollValue :  0;\n  }\n\n  selector(query: string): Element {\n    return this.element.nativeElement.querySelector(query);\n  }\n\n  toggleButton(): void {\n    this.open ? this.hideDropDown() : this.showDropdown();\n  }\n\n  // Atualiza valores\n  updateModel(option: PoSelectOption): void {\n    if (this.selectedValue !== option.value) {\n      this.selectedValue = option.value;\n      this.selectElement.nativeElement.value = option.value;\n      this.callModelChange(option.value);\n      this.displayValue = option.label;\n      this.onChange(option.value);\n    }\n  }\n\n  // Esconde Content do Select quando for clicado fora\n  wasClickedOnToggle(event: MouseEvent): void {\n    if (!this.selectButtonElement.nativeElement.contains(event.target) &&\n        !this.iconElement.nativeElement.contains(event.target)) {\n      this.hideDropDown();\n    }\n  }\n\n  // Recebe as alteraÃ§Ãµes do model\n  writeValue(value: any) {\n    const optionFound: PoSelectOption = this.findOptionValue(value);\n\n    if (optionFound) {\n      this.selectElement.nativeElement.value = optionFound.value;\n      this.selectedValue = optionFound.value;\n      this.displayValue = (optionFound.label);\n      this.setScrollPosition(optionFound.value);\n\n    } else if (validValue(this.selectedValue)) {\n      this.selectElement.nativeElement.value = undefined;\n      this.callModelChange(undefined);\n      this.selectedValue = undefined;\n      this.displayValue = undefined;\n    }\n\n    this.modelValue = value;\n    this.changeDetector.detectChanges();\n  }\n\n  // MÃ©todo necessÃ¡rio para bloquear o evento default do select nativo.\n  // Ao utilizar event.preventDefault(), nos navegadores Firefox e IE o mesmo nÃ£o cancela o evento.\n  private disableDefaultEventAndToggleButton() {\n    this.selectElement.nativeElement.style.display = 'none';\n\n    setTimeout(() => {\n      this.selectElement.nativeElement.style.display = 'block';\n      this.toggleButton();\n    });\n  }\n\n  private findOptionValue(value: any) {\n    return this.options.find(option => this.isEqual(option.value, value));\n  }\n\n  private getSelectItemHeight() {\n    const selectItem = this.selector('div.po-select-item');\n\n    return selectItem && selectItem.clientHeight;\n  }\n\n  private initializeListeners() {\n\n    this.clickoutListener = this.renderer.listen('document', 'click', (event: MouseEvent) => {\n      this.wasClickedOnToggle(event);\n    });\n\n    this.eventResizeListener = this.renderer.listen('window', 'resize', () => {\n      this.hideDropDown();\n    });\n\n    window.addEventListener('scroll', this.onScroll, true);\n  }\n\n  private onScroll = (): void => {\n    this.controlPosition.adjustPosition(poSelectContentPositionDefault);\n  }\n\n  private removeListeners() {\n    if (this.clickoutListener) {\n      this.clickoutListener();\n    }\n\n    this.eventResizeListener();\n    window.removeEventListener('scroll', this.onScroll, true);\n  }\n\n  private setPositionDropdown() {\n\n    this.controlPosition.setElements(\n      this.contentList.nativeElement,\n      poSelectContentOffset,\n      this.selectButtonElement,\n      ['top', 'bottom'],\n      true\n    );\n\n    this.controlPosition.adjustPosition(poSelectContentPositionDefault);\n  }\n\n  private setScrollPosition(value: any) {\n    const ulDropdpwn = this.element.nativeElement.querySelector('ul.po-select-content');\n\n    if (value && this.options && this.options.length) {\n      const optionFound: PoSelectOption = this.findOptionValue(value);\n\n      if (optionFound) {\n        const index = this.options.indexOf(optionFound);\n        ulDropdpwn.scrollTop =  this.scrollValue(index, ulDropdpwn.clientHeight);\n      }\n    }\n  }\n\n  private showDropdown() {\n    if (!this.readonly) {\n      this.selectElement.nativeElement.focus();\n      this.selectIcon = 'po-icon-arrow-up';\n      this.selector('.po-select-container').classList.add('po-select-show');\n      this.open = true;\n      this.changeDetector.markForCheck();\n      this.setPositionDropdown();\n      this.initializeListeners();\n\n      if (this.options && this.options.length) {\n        this.setScrollPosition(this.selectedValue);\n      }\n    }\n  }\n\n}\n","import { ControlValueAccessor } from '@angular/forms';\nimport { EventEmitter, Input, Output } from '@angular/core';\n\nimport { convertToBoolean } from '../../../utils/util';\nimport { InputBoolean } from '../../../decorators';\n\nimport { PoSwitchLabelPosition } from './po-switch-label-position.enum';\n\n/**\n * @description\n *\n * O componente `po-switch` Ã© um [checkbox](/documentation/po-checkbox-group) mais intuitivo, pois faz analogia a um interruptor.\n * Deve ser usado quando deseja-se transmitir a ideia de ligar / desligar uma funcionalidade especÃ­fica.\n *\n * Pode-se ligar ou deligar o botÃ£o utilizando a tecla de espaÃ§o ou o clique do mouse.\n *\n * O texto exibido pode ser alterado de acordo com o valor setado aumentando as possibilidades de uso do componente,\n * portanto, recomenda-se informar textos que contextualizem seu uso para que facilite a compreensÃ£o do usuÃ¡rio.\n *\n * > O componente nÃ£o altera o valor incial informado no *model*, portanto indica-se inicializa-lo caso ter necessidade.\n */\nexport class PoSwitchBaseComponent implements ControlValueAccessor {\n\n  private _disabled?: boolean = false;\n\n  propagateChange: any;\n  switchValue: boolean = false;\n\n  /** Nome do componente. */\n  @Input('name') name: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Aplica o foco no elemento ao ser iniciado.\n   *  > Caso mais de um elemento seja configurado com essa propriedade,\n   * o Ãºltimo elemento declarado com ela terÃ¡ o foco.\n   *\n   * @default `false`\n   */\n  @Input('p-auto-focus') @InputBoolean() autoFocus: boolean = false;\n\n  /** RÃ³tulo exibido pelo componente. */\n  @Input('p-label') label?: string;\n\n  /** Texto de apoio para o campo. */\n  @Input('p-help') help?: string;\n\n  /**\n   * Texto exibido quando o valor do componente for `true`.\n   *\n   * @default `true`\n   */\n  labelOn?: string = 'true';\n  @Input('p-label-on') set setLabelOn(label: string) {\n    this.labelOn = label || 'true';\n  }\n\n  /**\n   * Texto exibido quando o valor do componente for `false`.\n   *\n   * @default `false`\n   */\n  labelOff?: string = 'false';\n  @Input('p-label-off') set setLabelOff(label: string) {\n    this.labelOff = label || 'false';\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * PosiÃ§Ã£o de exibiÃ§Ã£o do rÃ³tulo.\n   *\n   * > Por padrÃ£o exibe Ã  direita.\n   */\n  labelPosition?: PoSwitchLabelPosition = PoSwitchLabelPosition.Right;\n  @Input('p-label-position') set setLabelPosition(position: PoSwitchLabelPosition) {\n    this.labelPosition = (position in PoSwitchLabelPosition) ? parseInt(<any>position, 10) : PoSwitchLabelPosition.Right;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica se o campo serÃ¡ desabilitado.\n   *\n   * @default `false`\n   */\n  @Input('p-disabled') set disabled(disabled: boolean) {\n    this._disabled = convertToBoolean(disabled);\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  /** Evento disparado ao alterar valor do campo. */\n  @Output('p-change') change?: EventEmitter<any> = new EventEmitter<any>();\n\n  // FunÃ§Ã£o para atualizar o ngModel do componente, necessÃ¡rio quando nÃ£o for utilizado dentro da tag form.\n  @Output('ngModelChange') ngModelChange?: EventEmitter<any> = new EventEmitter<any>();\n\n  changeValue(value: any) {\n    if (this.switchValue !== value) {\n      this.switchValue = value;\n\n      if (this.propagateChange) {\n        this.propagateChange(value);\n      } else {\n        this.ngModelChange.emit(value);\n      }\n      this.change.emit(this.switchValue);\n    }\n  }\n\n  eventClick() {\n    if (!this.disabled) {\n      this.changeValue(!this.switchValue);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void { }\n\n  writeValue(value: any): void {\n    if (value !== this.switchValue) {\n      this.switchValue = !!value;\n    }\n  }\n\n}\n","/**\n * @usedBy PoInfoComponent\n *\n * @description\n *\n * Define os tipos de orientaÃ§Ãµes disponÃ­veis para o `po-info`.\n */\nexport enum PoInfoOrientation {\n\n  /** O valor serÃ¡ exibido na horizontal, ao lado direito em relaÃ§Ã£o ao label. */\n  Horizontal = 'horizontal',\n\n  /** Exibe o valor na vertical, ou seja, abaixo do label. */\n  Vertical = 'vertical'\n\n}\n","import { AfterViewChecked, AfterViewInit, ChangeDetectorRef, Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { PoSwitchBaseComponent } from './po-switch-base.component';\nimport { PoSwitchLabelPosition } from './po-switch-label-position.enum';\n\n/**\n * @docsExtends PoSwitchBaseComponent\n *\n * @example\n *\n * <example name=\"po-switch-basic\" title=\"Portinari Switch Basic\">\n *   <file name=\"sample-po-switch-basic/sample-po-switch-basic.component.html\"> </file>\n *   <file name=\"sample-po-switch-basic/sample-po-switch-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-switch-labs\" title=\"Portinari Switch Labs\">\n *   <file name=\"sample-po-switch-labs/sample-po-switch-labs.component.html\"> </file>\n *   <file name=\"sample-po-switch-labs/sample-po-switch-labs.component.ts\"> </file>\n *   <file name=\"sample-po-switch-labs/sample-po-switch-labs.component.e2e-spec.ts\"> </file>\n *   <file name=\"sample-po-switch-labs/sample-po-switch-labs.component.po.ts\"> </file>\n * </example>\n *\n * <example name=\"po-switch-order\" title=\"Portinari Switch - Order Summary\">\n *   <file name=\"sample-po-switch-order/sample-po-switch-order.component.html\"> </file>\n *   <file name=\"sample-po-switch-order/sample-po-switch-order.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-switch-order-reactive-form\" title=\"Portinari Switch - Order Summary Reactive Form\">\n *   <file name=\"sample-po-switch-order-reactive-form/sample-po-switch-order-reactive-form.component.html\"> </file>\n *   <file name=\"sample-po-switch-order-reactive-form/sample-po-switch-order-reactive-form.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-switch',\n  templateUrl: './po-switch.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PoSwitchComponent),\n      multi: true,\n    }\n  ]\n})\nexport class PoSwitchComponent extends PoSwitchBaseComponent implements AfterViewChecked, AfterViewInit {\n\n  @ViewChild('switchContainer', { static: true }) switchContainer: ElementRef;\n\n  constructor(private changeDetector: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewChecked(): void {\n    this.changeDetector.detectChanges();\n  }\n\n  ngAfterViewInit() {\n    if (this.autoFocus) {\n      this.focus();\n    }\n  }\n\n  /**\n   * FunÃ§Ã£o que atribui foco ao componente.\n   *\n   * Para utilizÃ¡-la Ã© necessÃ¡rio ter a instÃ¢ncia do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n   *\n   * ```\n   * import { PoSwitchComponent } from '@portinari/portinari-ui';\n   *\n   * ...\n   *\n   * @ViewChild(PoSwitchComponent, { static: true }) switch: PoSwitchComponent;\n   *\n   * focusSwitch() {\n   *   this.switch.focus();\n   * }\n   * ```\n   */\n  focus() {\n    if (!this.disabled) {\n      this.switchContainer.nativeElement.focus();\n    }\n  }\n\n  getLabelPosition() {\n    switch (this.labelPosition) {\n      case PoSwitchLabelPosition.Left: return 'left';\n      case PoSwitchLabelPosition.Right: return 'right';\n      default: return 'right';\n    }\n  }\n\n  getSwitchPosition() {\n    switch (this.labelPosition) {\n      case PoSwitchLabelPosition.Left: return 'right';\n      case PoSwitchLabelPosition.Right: return 'left';\n      default: return 'left';\n    }\n  }\n\n  onKeyDown(event) {\n    if (event.which === 32 || event.keyCode === 32)  {\n      event.preventDefault();\n      this.eventClick();\n    }\n  }\n\n}\n","import { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\nimport { EventEmitter, Input, Output } from '@angular/core';\n\nimport { convertToBoolean, convertToInt } from '../../../utils/util';\nimport { maxlengpoailed, minlengpoailed, requiredFailed } from '../validators';\nimport { InputBoolean } from '../../../decorators';\n\n/**\n * @description\n *\n * Este Ã© um componente de entrada de dados que possibilita o preechimento com mÃºltiplas linhas.\n * Ã recomendado para observaÃ§Ãµes, detalhamentos e outras situaÃ§Ãµes onde o usuÃ¡rio deva preencher com um texto.\n *\n * Importante:\n *\n * - A propriedade `name` Ã© obrigatÃ³ria para que o formulÃ¡rio e o `model` funcionem corretamente. Do contrÃ¡rio, ocorrerÃ¡ um erro de\n * _Angular_, onde serÃ¡ necessÃ¡rio informar o atributo `name` ou o atributo `[ngModelOptions]=\"{standalone: true}\"`, por exemplo:\n *\n * ```\n * <po-textarea\n *   [(ngModel)]=\"pessoa.nome\"\n *   [ngModelOptions]=\"{standalone: true}\">\n * </po-textarea>\n * ```\n */\nexport abstract class PoTextareaBaseComponent implements ControlValueAccessor, Validator {\n\n  private _disabled: boolean = false;\n  private _maxlength: number;\n  private _minlength: number;\n  private _readonly: boolean = false;\n  private _required: boolean = false;\n  private _rows: number = 3;\n\n  private modelLastUpdate: any;\n  private onChangePropagate: any = null;\n  // tslint:disable-next-line\n  private onTouched: any = null;\n  private validatorChange: any;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Aplica foco no elemento ao ser iniciado.\n   *\n   * > Caso mais de um elemento seja configurado com essa propriedade, apenas o Ãºltimo elemento declarado com ela terÃ¡ o foco.\n   *\n   * @default `false`\n   */\n  @Input('p-auto-focus') @InputBoolean() autoFocus: boolean = false;\n\n  /** Label do campo. */\n  @Input('p-label') label?: string;\n\n  /** Texto de apoio do campo. */\n  @Input('p-help') help?: string;\n\n  /** Placeholder, mensagem que aparecerÃ¡ enquanto o campo nÃ£o estiver preenchido. */\n  @Input('p-placeholder') placeholder?: string = '';\n\n  /** Nome e Id do componente. */\n  @Input('name') name: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ desabilitado.\n   *\n   * @default `false`\n   */\n  @Input('p-disabled') set disabled(disabled: boolean) {\n    this._disabled = convertToBoolean(disabled);\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se a indicaÃ§Ã£o de campo opcional serÃ¡ exibida.\n   *\n   * > NÃ£o serÃ¡ exibida a indicaÃ§Ã£o se:\n   * - O campo conter `p-required`;\n   * - NÃ£o possuir `p-help` e/ou `p-label`.\n   *\n   * @default `false`\n   */\n  @Input('p-optional') optional: boolean;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ somente leitura.\n   *\n   * @default `false`\n   */\n  @Input('p-readonly') set readonly(readonly: boolean) {\n    this._readonly = convertToBoolean(readonly);\n  }\n\n  get readonly(): boolean {\n    return this._readonly;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o campo serÃ¡ obrigatÃ³rio.\n   *\n   * > Esta propriedade Ã© desconsiderada quando o _input_ estÃ¡ desabilitado `(p-disabled)`.\n   *\n   * @default `false`\n   */\n  @Input('p-required') set required(required: boolean) {\n    this._required = convertToBoolean(required);\n\n    this.validateModel();\n  }\n\n  get required(): boolean {\n    return this._required;\n  }\n\n  /**\n   * @optional\n   *\n   * @deprecated 2.0.0\n   * @description\n   *\n   * **Deprecated**\n   *\n   * > Esta propriedade estÃ¡ depreciada e serÃ¡ excluÃ­da na versÃ£o 2.0.0, utilize a propriedade `p-auto-focus`.\n   *\n   * Aplica foco no elemento ao ser iniciado.\n   *\n   * @default `false`\n   */\n  @Input('p-focus') set oldfocus(focus: boolean) {\n    this.autoFocus = focus;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica a quantidade mÃ­nima de caracteres que o campo aceita.\n   */\n  @Input('p-minlength') set minlength(minlength: number) {\n    this._minlength = convertToInt(minlength);\n    this.validateModel();\n  }\n\n  get minlength(): number {\n    return this._minlength;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica a quantidade mÃ¡xima de caracteres que o campo aceita.\n   */\n  @Input('p-maxlength') set maxlength(maxlength: number) {\n    this._maxlength = convertToInt(maxlength);\n    this.validateModel();\n  }\n\n  get maxlength(): number {\n    return this._maxlength;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica a quantidade de linhas que serÃ£o exibidas.\n   *\n   * @default `3`\n   */\n  @Input('p-rows') set rows(value: number) {\n    this._rows = isNaN(parseInt(<any>value, 10)) || value < 3 ? 3 : parseInt(<any>value, 10);\n  }\n  get rows(): number {\n    return this._rows;\n  }\n\n  /** Evento disparado ao sair do campo. */\n  @Output('p-blur') blur?: EventEmitter<any> = new EventEmitter<any>();\n\n  /** Evento disparado ao entrar do campo. */\n  @Output('p-enter') enter?: EventEmitter<any> = new EventEmitter<any>();\n\n  /** Evento disparado ao alterar valor e deixar o campo. */\n  @Output('p-change') change?: EventEmitter<any> = new EventEmitter<any>();\n\n  /** Evento disparado ao alterar valor do model. */\n  @Output('p-change-model') changeModel?: EventEmitter<any> = new EventEmitter<any>();\n\n  callOnChange(value: any) {\n    // Quando o input nÃ£o possui um formulÃ¡rio, entÃ£o esta funÃ§Ã£o nÃ£o Ã© registrada\n    if (this.onChangePropagate) {\n      this.onChangePropagate(value);\n    }\n\n    this.controlChangeModelEmitter(value);\n  }\n\n  controlChangeModelEmitter(value: any) {\n    if (this.modelLastUpdate !== value) {\n      this.changeModel.emit(value);\n      this.modelLastUpdate = value;\n    }\n  }\n\n  // FunÃ§Ãµes `registerOnChange`, `registerOnTouched` e `registerOnValidatorChange` implementadas referentes ao ControlValueAccessor\n  // usadas para interceptar as mudanÃ§as e nÃ£o atualizar automaticamente o Model\n  registerOnChange(func: any): void {\n    this.onChangePropagate = func;\n  }\n\n  registerOnTouched(func: any): void {\n    this.onTouched = func;\n  }\n\n  registerOnValidatorChange(func: any): void {\n    this.validatorChange = func;\n  }\n\n  validate(abstractControl: AbstractControl): { [key: string]: any; } {\n\n    if (requiredFailed(this.required, this.disabled, abstractControl.value)) {\n      return { required: {\n        valid: false,\n      }};\n    }\n\n    if (minlengpoailed(this.minlength, abstractControl.value)) {\n      return { minlength: {\n        valid: false,\n      }};\n    }\n\n    if (maxlengpoailed(this.maxlength, abstractControl.value)) {\n      return { maxlength: {\n        valid: false,\n      }};\n    }\n\n  }\n\n  // FunÃ§Ã£o implementada do ControlValueAccessor\n  writeValue(value: any) {\n    this.writeValueModel(value);\n  }\n\n  protected validateModel() {\n    if (this.validatorChange) {\n      this.validatorChange();\n    }\n  }\n\n  abstract writeValueModel(value: any): void;\n\n}\n","import { Component, ElementRef, forwardRef, ViewChild, AfterViewInit } from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { PoTextareaBaseComponent } from './po-textarea-base.component';\n\n/**\n * @docsExtends PoTextareaBaseComponent\n *\n * @example\n *\n * <example name=\"po-textarea-basic\" title=\"Portinari Textarea Basic\" >\n *  <file name=\"sample-po-textarea-basic/sample-po-textarea-basic.component.html\"> </file>\n *  <file name=\"sample-po-textarea-basic/sample-po-textarea-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-textarea-labs\" title=\"Portinari Textarea Labs\" >\n *  <file name=\"sample-po-textarea-labs/sample-po-textarea-labs.component.html\"> </file>\n *  <file name=\"sample-po-textarea-labs/sample-po-textarea-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-textarea-email\" title=\"Portinari Textarea - Email\" >\n *  <file name=\"sample-po-textarea-email/sample-po-textarea-email.component.html\"> </file>\n *  <file name=\"sample-po-textarea-email/sample-po-textarea-email.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-textarea-email-reactive-form\" title=\"Portinari Textarea - Email Reactive Form\" >\n *  <file name=\"sample-po-textarea-email-reactive-form/sample-po-textarea-email-reactive-form.component.html\"> </file>\n *  <file name=\"sample-po-textarea-email-reactive-form/sample-po-textarea-email-reactive-form.component.ts\"> </file>\n * </example>\n *\n */\n@Component({\n  selector: 'po-textarea',\n  templateUrl: './po-textarea.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PoTextareaComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => PoTextareaComponent),\n      multi: true,\n    }\n  ]\n})\nexport class PoTextareaComponent extends PoTextareaBaseComponent implements AfterViewInit {\n\n  @ViewChild('inp', {read: ElementRef, static: true }) inputEl: ElementRef;\n\n  valueBeforeChange: any;\n  fireChange: boolean = false;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * FunÃ§Ã£o que atribui foco ao componente.\n   *\n   * Para utilizÃ¡-la Ã© necessÃ¡rio ter a instÃ¢ncia do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n   *\n   * ```\n   * import { PoTextareaComponent } from '@portinari/portinari-ui';\n   *\n   * ...\n   *\n   * @ViewChild(PoTextareaComponent, { static: true }) textarea: PoTextareaComponent;\n   *\n   * focusTextarea() {\n   *   this.textarea.focus();\n   * }\n   * ```\n   */\n  focus(): void {\n    if (!this.disabled) {\n      this.inputEl.nativeElement.focus();\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.autoFocus) {\n      this.focus();\n    }\n  }\n\n  writeValueModel(value: any): void {\n    if (this.inputEl) {\n      if (!value) {\n        // Se for o valor for undefined, deve limpar o campo\n        this.inputEl.nativeElement.value = '';\n      } else {\n        this.inputEl.nativeElement.value = value;\n      }\n    }\n\n    // Emite evento quando o model Ã© atualizado, inclusive a primeira vez\n    if (value) {\n      this.change.emit(value);\n    }\n  }\n\n  validMaxLength(maxlength: number, value: string) {\n    return (maxlength && value.length > maxlength) ? value.toString().substring(0, maxlength) : value;\n  }\n\n  eventOnInput(event: any) {\n    const value = this.validMaxLength(this.maxlength, event.target.value);\n    this.callOnChange(value);\n    this.inputEl.nativeElement.value = value;\n  }\n\n  eventOnFocus() {\n    // Atualiza valor da variÃ¡vel que serÃ¡ usada para verificar se o campo teve alteraÃ§Ã£o\n    this.valueBeforeChange = this.inputEl.nativeElement.value;\n\n    // Dispara evento quando o usuÃ¡rio entrar no campo\n    // Este evento tambÃ©m Ã© disparado quando o campo inicia com foco.\n    this.enter.emit();\n  }\n\n  eventOnBlur() {\n    this.blur.emit();\n    this.controlChangeEmitter();\n  }\n\n  controlChangeEmitter() {\n    const elementValue = this.inputEl.nativeElement.value;\n\n    if (elementValue !== this.valueBeforeChange) {\n      this.change.emit(elementValue);\n    }\n  }\n\n}\n","import { Directive, EventEmitter, HostListener, Input, Output } from '@angular/core';\r\n\r\nimport { PoI18nPipe } from '../../../../services/po-i18n/po-i18n.pipe';\r\nimport { PoNotificationService } from '../../../../services/po-notification/po-notification.service';\r\nimport { PoUploadLiterals } from '../interfaces/po-upload-literals.interface';\r\n\r\n@Directive({\r\n  selector: '[p-upload-drag-drop]',\r\n  providers: [ PoI18nPipe ]\r\n})\r\nexport class PoUploadDragDropDirective {\r\n\r\n  timeout: any;\r\n\r\n  private files: Array<File>;\r\n  private invalidFileType: number;\r\n\r\n  @Input('p-area-element') areaElement: HTMLElement;\r\n\r\n  @Input('p-directory-compatible') directoryCompatible: boolean;\r\n\r\n  @Input('p-disabled') disabled: boolean;\r\n\r\n  @Input('p-literals') literals: PoUploadLiterals;\r\n\r\n  @Output('p-drag-leave') dragLeave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  @Output('p-drag-over') dragOver: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  @Output('p-file-change') fileChange: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  constructor(private i18nPipe: PoI18nPipe, private notification: PoNotificationService) { }\r\n\r\n  @HostListener('document:dragleave', ['$event']) onDragLeave(event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    this.timeout = setTimeout(() => this.dragLeave.emit(), 30);\r\n  }\r\n\r\n  @HostListener('document:dragover', ['$event']) onDragOver(event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    clearTimeout(this.timeout);\r\n\r\n    if (!this.disabled) {\r\n      this.dragOver.emit();\r\n    }\r\n  }\r\n\r\n  @HostListener('document:drop', ['$event']) onDrop(event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    this.getFilesFromDataTransferItems(event);\r\n    this.dragLeave.emit();\r\n  }\r\n\r\n  private getFilesFromDataTransferItems(event: DragEvent) {\r\n    if (!this.disabled) {\r\n      this.invalidFileType = 0;\r\n      if (this.directoryCompatible) {\r\n        this.getOnlyDirectories(event.dataTransfer.items).then(() => {\r\n          this.sendFiles(event, this.files);\r\n        });\r\n      } else {\r\n        const files = this.getOnlyFiles(event.dataTransfer.files);\r\n        this.sendFiles(event, files);\r\n      }\r\n    }\r\n  }\r\n\r\n  // analisa as entradas recursivamente\r\n  private async getFilesFromEntry(entry) {\r\n    if (entry.isFile) {\r\n      const file = await this.readFile(entry);\r\n      return [file];\r\n    } else if (entry.isDirectory) {\r\n      return await this.readDirectory(entry);\r\n    }\r\n  }\r\n\r\n  private async getOnlyDirectories(dataTransferItems) {\r\n    const entries = [];\r\n\r\n    // lista todas as entradas antes de analisÃ¡-las\r\n    for (const item of dataTransferItems) {\r\n      entries.push(item.webkitGetAsEntry());\r\n    }\r\n\r\n    this.files = [];\r\n    for (const entry of entries) {\r\n      if (entry.isFile) {\r\n        this.invalidFileType++;\r\n      } else {\r\n        const newFiles = await this.getFilesFromEntry(entry);\r\n        this.files = this.files.concat(newFiles);\r\n      }\r\n    }\r\n  }\r\n\r\n  // return only files. If it is a directory, invalidFileType counts.\r\n  private getOnlyFiles(fileList: FileList): Array<File> {\r\n    return Array.from(fileList).reduce((newFiles, file) => {\r\n      if (file.type) {\r\n        return newFiles.concat(file);\r\n      } else {\r\n        this.invalidFileType++;\r\n      }\r\n      return newFiles;\r\n    }, []);\r\n  }\r\n\r\n  private readFile(entry) {\r\n    return new Promise(resolve => {\r\n      entry.file(file => {\r\n        resolve(file);\r\n      });\r\n    });\r\n  }\r\n\r\n  private async readDirectory(entry) {\r\n    const dirReader = entry.createReader();\r\n    let files = [];\r\n    let newFiles;\r\n\r\n    newFiles = await this.readDirectoryEntries(dirReader);\r\n    files = files.concat(newFiles);\r\n    return files;\r\n  }\r\n\r\n  private readDirectoryEntries(dirReader) {\r\n    return new Promise(resolve => {\r\n      dirReader.readEntries(async entries => {\r\n        let files = [];\r\n        for (const entry of entries) {\r\n          const itemFiles = await this.getFilesFromEntry(entry);\r\n          files = files.concat(itemFiles);\r\n        }\r\n        resolve(files);\r\n      });\r\n    });\r\n  }\r\n\r\n  private sendFeedback(invalidFiles: number) {\r\n    if (invalidFiles) {\r\n      this.setPipeArguments('invalidFileType', invalidFiles);\r\n    }\r\n  }\r\n\r\n  private sendFiles(event, files) {\r\n    if (this.areaElement.contains(event.target)) {\r\n\r\n      if (files.length > 0) {\r\n        this.fileChange.emit(files);\r\n      }\r\n\r\n      this.sendFeedback(this.invalidFileType);\r\n    } else {\r\n      const invalidDropAreaArg = this.directoryCompatible ? this.literals.folders : this.literals.files;\r\n      this.setPipeArguments('invalidDropArea', invalidDropAreaArg);\r\n    }\r\n  }\r\n\r\n  // mÃ©todo responsÃ¡vel por setar os argumentos do i18nPipe.\r\n  private setPipeArguments(literalAttributes: string, args?) {\r\n    const pipeArguments = this.i18nPipe.transform(this.literals[literalAttributes], args);\r\n    this.notification.information(pipeArguments);\r\n  }\r\n\r\n}\r\n","import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, Renderer2,\nViewChild } from '@angular/core';\n\nimport { PoUploadLiterals } from '../../interfaces/po-upload-literals.interface';\n\n@Component({\n  selector: 'po-upload-drag-drop-area-overlay',\n  templateUrl: 'po-upload-drag-drop-area-overlay.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoUploadDragDropAreaOverlayComponent implements AfterViewInit {\n\n  @ViewChild('DragDropAreaFixed', { read: ElementRef, static: true }) DragDropAreaFixed: ElementRef;\n\n  @Input('p-directory-compatible') directoryCompatible: boolean;\n\n  @Input('p-disabled') disabled: boolean;\n\n  @Input('p-literals') literals: PoUploadLiterals;\n\n  @Input('p-target') target: ElementRef;\n\n  @Output('p-area-element') areaElement: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(private renderer: Renderer2) { }\n\n  ngAfterViewInit() {\n    if (this.target) {\n      this.setPosition(this.target);\n    }\n    this.areaElement.emit(this.DragDropAreaFixed.nativeElement);\n  }\n\n  private setPosition(targetElement: ElementRef) {\n    const boundingClientRect = targetElement.nativeElement.getBoundingClientRect();\n    const clientRectKeys = ['bottom', 'left', 'height', 'right', 'top', 'width'];\n\n    clientRectKeys.forEach(clientRectKey => {\n      const clientRectValue = boundingClientRect[clientRectKey];\n\n      this.renderer.setStyle(this.DragDropAreaFixed.nativeElement, clientRectKey, `${clientRectValue}px`);\n    });\n  }\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\n\nimport { browserLanguage, formatBytes, poLocaleDefault } from '../../../../utils/util';\n\nimport { poUploadLiteralsDefault } from '../po-upload-base.component';\n\n@Component({\n  selector: 'po-upload-file-restrictions',\n  templateUrl: './po-upload-file-restrictions.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoUploadFileRestrictionsComponent implements OnInit {\n\n  private _allowedExtensions: string;\n  private _maxFileSize: string;\n  private  _minFileSize: string;\n\n  literals: any;\n\n  @Input('p-allowed-extensions') set allowedExtensions(value) {\n    this._allowedExtensions = this.formatAllowedExtensions(<any>value);\n  }\n\n  get allowedExtensions(): string {\n    return this._allowedExtensions;\n  }\n\n  @Input('p-max-files') maxFiles: number;\n\n  @Input('p-max-file-size') set maxFileSize(value) {\n    this._maxFileSize = formatBytes(<any>value);\n  }\n\n  get maxFileSize(): string {\n    return this._maxFileSize;\n  }\n\n  @Input('p-min-file-size') set minFileSize(value) {\n    this._minFileSize = formatBytes(<any>value);\n  }\n\n  get minFileSize(): string {\n    return this._minFileSize;\n  }\n\n  get language(): string {\n    return browserLanguage();\n  }\n\n  constructor(private changeDetector: ChangeDetectorRef) { }\n\n  ngOnInit() {\n    this.setLiterals();\n  }\n\n  private formatAllowedExtensions(allowedExtensions: Array<string>): string {\n    const conjunction = { 'pt': 'e', 'en': 'and', 'es': 'y' };\n\n    return allowedExtensions ? allowedExtensions\n      .join(', ')\n      .toUpperCase()\n      .replace(/,(?=[^,]*$)/, ` ${conjunction[this.language]}`) : undefined;\n  }\n\n  private setLiterals() {\n    this.literals = {\n      ...poUploadLiteralsDefault[poLocaleDefault],\n      ...poUploadLiteralsDefault[this.language],\n    };\n\n    this.changeDetector.detectChanges();\n  }\n\n}\n","import { AfterViewInit, Component, ElementRef, forwardRef, OnDestroy } from '@angular/core';\nimport { AbstractControl, NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\n\nimport { PoInputGeneric } from '../po-input-generic/po-input-generic';\n\n/**\n * @docsExtends PoInputBaseComponent\n *\n * @description\n *\n * po-url Ã© um input especÃ­fico para receber URL, com o pattern jÃ¡ configurado.\n *\n * @example\n *\n * <example name=\"po-url-basic\" title=\"Portinari Url Basic\">\n *   <file name=\"sample-po-url-basic/sample-po-url-basic.component.html\"> </file>\n *   <file name=\"sample-po-url-basic/sample-po-url-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-url-labs\" title=\"Portinari Url Labs\">\n *   <file name=\"sample-po-url-labs/sample-po-url-labs.component.html\"> </file>\n *   <file name=\"sample-po-url-labs/sample-po-url-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-url-shortener\" title=\"Portinari Url - Shortener\">\n *   <file name=\"sample-po-url-shortener/sample-po-url-shortener.component.html\"> </file>\n *   <file name=\"sample-po-url-shortener/sample-po-url-shortener.component.ts\"> </file>\n * </example>\n *\n */\n@Component({\n  selector: 'po-url',\n  templateUrl: '../po-input/po-input.component.html',\n  providers: [\n  {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => PoUrlComponent),\n    multi: true\n  },\n  {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => PoUrlComponent),\n    multi: true\n  }]\n})\nexport class PoUrlComponent extends PoInputGeneric implements AfterViewInit, OnDestroy {\n\n  icon = 'po-icon-world';\n\n  maxlength: number = 254;\n\n  type = 'url';\n\n  pattern = '^((https|http):\\\\/\\\\/)?' + // protocol\n  '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n  '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n  '(\\\\:\\\\d+)?(\\\\/[-A-Za-z\\\\d%_.~+]*)*' + // port and path\n  '(\\\\?[;&A-Za-z\\\\d%_.~+=-]*)?' + // query string\n  '(\\\\#[-A-Za-z\\\\d_]*)?$';\n\n  mask = '';\n\n  private listener = this.validateClassesForPattern.bind(this);\n\n  constructor(el: ElementRef) {\n    super(el);\n  }\n\n  ngAfterViewInit() {\n    // Se nÃ£o tem ngModel ou reactive form adiciona validaÃ§Ã£o com classes css\n    setTimeout(() => {\n      if (!this.onChangePropagate) {\n        this.inputEl.nativeElement.addEventListener('keyup', this.listener);\n      }\n    });\n    super.ngAfterViewInit();\n  }\n\n  ngOnDestroy() {\n    if (!this.onChangePropagate) {\n      this.inputEl.nativeElement.removeEventListener('keyup', this.listener);\n    }\n  }\n\n  extraValidation(c: AbstractControl): { [key: string]: any; } {\n    return null;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { PoButtonGroupModule } from '../po-button-group/index';\nimport { PoButtonModule } from '../po-button/index';\nimport { PoCheckboxGroupModule } from './po-checkbox-group/po-checkbox-group.module';\nimport { PoContainerModule } from '../po-container/index';\nimport { PoDisclaimerModule } from './../po-disclaimer/po-disclaimer.module';\nimport { PoFieldContainerModule } from './po-field-container/po-field-container.module';\nimport { PoLoadingModule } from '../po-loading/index';\nimport { PoModalModule } from '../po-modal/po-modal.module';\nimport { PoProgressModule } from './../po-progress/po-progress.module';\nimport { PoServicesModule } from '../../services/services.module';\nimport { PoTableModule } from '../po-table/po-table.module';\nimport { PoTooltipModule } from './../../directives/po-tooltip/po-tooltip.module';\n\nimport { PoCalendarComponent } from './po-datepicker/po-calendar/po-calendar.component';\nimport { PoCleanComponent } from './po-clean/po-clean.component';\nimport { PoCheckboxComponent } from './po-checkbox/po-checkbox.component';\nimport { PoComboComponent } from './po-combo/po-combo.component';\nimport { PoComboOptionTemplateDirective } from './po-combo/po-combo-option-template/po-combo-option-template.directive';\nimport { PoDatepickerComponent } from './po-datepicker/po-datepicker.component';\nimport { PoDatepickerRangeComponent } from './po-datepicker-range/po-datepicker-range.component';\nimport { PoDecimalComponent } from './po-decimal/po-decimal.component';\nimport { PoEmailComponent } from './po-email/po-email.component';\nimport { PoLoginComponent } from './po-login/po-login.component';\nimport { PoLookupComponent } from './po-lookup/po-lookup.component';\nimport { PoLookupModalComponent } from './po-lookup/po-lookup-modal/po-lookup-modal.component';\nimport { PoMultiselectDropdownComponent } from './po-multiselect/po-multiselect-dropdown/po-multiselect-dropdown.component';\nimport { PoMultiselectComponent } from './po-multiselect/po-multiselect.component';\nimport { PoMultiselectItemComponent } from './po-multiselect/po-multiselect-item/po-multiselect-item.component';\nimport { PoMultiselectSearchComponent } from './po-multiselect/po-multiselect-search/po-multiselect-search.component';\nimport { PoRichTextBodyComponent } from './po-rich-text/po-rich-text-body/po-rich-text-body.component';\nimport { PoRichTextComponent } from './po-rich-text/po-rich-text.component';\nimport { PoRichTextModalComponent } from './po-rich-text/po-rich-text-modal/po-rich-text-modal.component';\nimport { PoRichTextToolbarComponent } from './po-rich-text/po-rich-text-toolbar/po-rich-text-toolbar.component';\nimport { PoInputComponent } from './po-input/po-input.component';\nimport { PoNumberComponent } from './po-number/po-number.component';\nimport { PoPasswordComponent } from './po-password/po-password.component';\nimport { PoRadioGroupComponent } from './po-radio-group/po-radio-group.component';\nimport { PoSelectComponent } from './po-select/po-select.component';\nimport { PoSelectOptionTemplateDirective } from './po-select/po-select-option-template/po-select-option-template.directive';\nimport { PoSwitchComponent } from './po-switch/po-switch.component';\nimport { PoTextareaComponent } from './po-textarea/po-textarea.component';\nimport { PoUploadComponent } from './po-upload/po-upload.component';\nimport { PoUploadDragDropComponent } from './po-upload/po-upload-drag-drop/po-upload-drag-drop.component';\nimport { PoUploadDragDropDirective } from './po-upload/po-upload-drag-drop/po-upload-drag-drop.directive';\nimport {\n  PoUploadDragDropAreaOverlayComponent\n} from './po-upload/po-upload-drag-drop/po-upload-drag-drop-area-overlay/po-upload-drag-drop-area-overlay.component';\nimport { PoUploadDragDropAreaComponent } from './po-upload/po-upload-drag-drop/po-upload-drag-drop-area/po-upload-drag-drop-area.component';\nimport { PoUploadFileRestrictionsComponent } from './po-upload/po-upload-file-restrictions/po-upload-file-restrictions.component';\nimport { PoUrlComponent } from './po-url/po-url.component';\n\n/**\n * @description\n *\n * MÃ³dulo dos componentes: po-checkbox, po-checkbox-group, po-combo, po-datepicker, po-datepicker-range, po-email, po-input,\n * po-lookup, po-number, po-multiselect, po-password, po-radio-group, po-select, po-switch, po-textarea, po-upload\n * e po-url.\n *\n * > NÃ£o esqueÃ§a de importar o mÃ³dulo `FormsModule` para usar os componentes de formulÃ¡rios e caso esteja trabalhando com\n * > formulÃ¡rios reativos, importe o mÃ³dulo `ReactiveFormsModule`, ambos nativos do Angular.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n    PoButtonGroupModule,\n    PoButtonModule,\n    PoCheckboxGroupModule,\n    PoContainerModule,\n    PoDisclaimerModule,\n    PoFieldContainerModule,\n    PoLoadingModule,\n    PoModalModule,\n    PoProgressModule,\n    PoServicesModule,\n    PoTableModule,\n    PoTooltipModule\n  ],\n  exports: [\n    PoCheckboxComponent,\n    PoCheckboxGroupModule,\n    PoCleanComponent,\n    PoComboComponent,\n    PoComboOptionTemplateDirective,\n    PoDecimalComponent,\n    PoDatepickerComponent,\n    PoDatepickerRangeComponent,\n    PoEmailComponent,\n    PoInputComponent,\n    PoLoginComponent,\n    PoLookupComponent,\n    PoLookupModalComponent,\n    PoMultiselectComponent,\n    PoNumberComponent,\n    PoPasswordComponent,\n    PoRadioGroupComponent,\n    PoRichTextComponent,\n    PoSelectComponent,\n    PoSelectOptionTemplateDirective,\n    PoSwitchComponent,\n    PoTextareaComponent,\n    PoUploadComponent,\n    PoUrlComponent\n  ],\n  declarations: [\n    PoCalendarComponent,\n    PoCleanComponent,\n    PoCheckboxComponent,\n    PoComboComponent,\n    PoComboOptionTemplateDirective,\n    PoDecimalComponent,\n    PoDatepickerComponent,\n    PoDatepickerRangeComponent,\n    PoEmailComponent,\n    PoInputComponent,\n    PoLoginComponent,\n    PoLookupComponent,\n    PoLookupModalComponent,\n    PoMultiselectComponent,\n    PoMultiselectDropdownComponent,\n    PoMultiselectItemComponent,\n    PoMultiselectSearchComponent,\n    PoNumberComponent,\n    PoPasswordComponent,\n    PoRadioGroupComponent,\n    PoRichTextBodyComponent,\n    PoRichTextComponent,\n    PoRichTextModalComponent,\n    PoRichTextToolbarComponent,\n    PoSelectComponent,\n    PoSelectOptionTemplateDirective,\n    PoSwitchComponent,\n    PoTextareaComponent,\n    PoUploadComponent,\n    PoUploadDragDropComponent,\n    PoUploadDragDropDirective,\n    PoUploadDragDropAreaOverlayComponent,\n    PoUploadDragDropAreaComponent,\n    PoUploadFileRestrictionsComponent,\n    PoUrlComponent\n  ],\n  providers: [],\n  entryComponents: [\n    PoCalendarComponent,\n    PoLookupModalComponent,\n    PoRichTextModalComponent\n  ]\n})\nexport class PoFieldModule { }\n","import { Input } from '@angular/core';\n\nimport { PoInfoOrientation } from './po-info-orietation.enum';\n\nconst poInfoOrientationDefault = PoInfoOrientation.Vertical;\n\nexport class PoInfoBaseComponent {\n\n  private _labelSize: number;\n  private _orientation: PoInfoOrientation = poInfoOrientationDefault;\n\n  public readonly poInfoOrientation = PoInfoOrientation;\n\n  /** Valor do rÃ³tulo a ser exibido. */\n  @Input('p-label') label: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Quantidade de [colunas](/guides/grid-system) usadas para a exibiÃ§Ã£o da `p-label` quando o componente for\n   * utilizado na orientaÃ§Ã£o horizontal.\n   *\n   * Valores vÃ¡lidos:\n   *  - `[1 .. 11]`\n   *\n   * > A propriedade `p-value` recebe o nÃºmero de colunas restantes, por exemplo, se definido 3 colunas a mesma assume 9 colunas.\n   */\n  @Input('p-label-size') set labelSize(value: number) {\n    if (isNaN(parseInt(<any>value, 10))) {\n      this._labelSize = undefined;\n    } else {\n      value = parseInt(<any>value, 10);\n\n      this._labelSize = (value < 1 || value > 11) ? undefined : value;\n    }\n  }\n\n  get labelSize(): number {\n    return this._labelSize;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o layout de exibiÃ§Ã£o.\n   *\n   * > Quando definido na horizontal, pode-se utilizar a propriedade `p-label-size` para um maior controle das informaÃ§Ãµes exibidas.\n   *\n   * @default `vertical`\n   */\n  @Input('p-orientation') set orientation(value: PoInfoOrientation) {\n    this._orientation = (<any>Object).values(PoInfoOrientation).includes(value) ? value : poInfoOrientationDefault;\n  }\n  get orientation(): PoInfoOrientation {\n    return this._orientation;\n  }\n\n  /**\n   * Ao informar uma URL, o conteÃºdo serÃ¡ exibido na forma de um *link* e ao ser clicado serÃ¡ redirecionado para a URL informada.\n   *\n   * > Caso informar `http://` serÃ¡ aberto uma nova aba.\n   * Caso informar um caminho relativo, exemplo: `/customers`, serÃ¡ aberto na aba atual.\n   *\n   */\n  @Input('p-url') url?: string;\n\n  /** Valor do conteÃºdo a ser exibido. */\n  @Input('p-value') value?: string;\n\n}\n","/**\n * @usedBy PoTagComponent\n *\n * @description\n *\n * Define os tipos de orientaÃ§Ãµes disponÃ­veis para o `po-tag`.\n */\nexport enum PoTagOrientation {\n\n  /** A tag serÃ¡ exibida na horizontal, ao lado direito em relaÃ§Ã£o ao label. */\n  Horizontal = 'horizontal',\n\n  /** Exibe a tag na vertical, ou seja, abaixo do label. */\n  Vertical = 'vertical'\n}\n","/**\n * @usedBy PoTagComponent\n *\n * @description\n *\n * Define os tipos disponÃ­veis para o `po-tag`.\n */\nexport enum PoTagType {\n\n  /** Erro, perigo, problema ou aviso crÃ­tico. */\n  Danger = 'danger',\n\n  /** Informativo ou explicativo. */\n  Info = 'info',\n\n  /** ConfirmaÃ§Ã£o, resultados positivos ou Ãªxito */\n  Success = 'success',\n\n  /** Aviso ou advertÃªncia. */\n  Warning = 'warning'\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { isExternalLink } from '../../utils/util';\n\nimport { PoInfoBaseComponent } from './po-info-base.component';\n\n/**\n * @docsExtends PoInfoBaseComponent\n *\n * @description\n *\n * Este componente tem como objetivo renderizar valores na tela no estilo label na parte superior e\n * valor na parte inferior. Facilita a exibiÃ§Ã£o de dados pois vem com layout padrÃ£o Portinari.\n *\n * @example\n *\n * <example name=\"po-info-basic\" title=\"Portinari Info Basic\">\n *  <file name=\"sample-po-info-basic/sample-po-info-basic.component.html\"> </file>\n *  <file name=\"sample-po-info-basic/sample-po-info-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-info-labs\" title=\"Portinari Info Labs\">\n *  <file name=\"sample-po-info-labs/sample-po-info-labs.component.html\"> </file>\n *  <file name=\"sample-po-info-labs/sample-po-info-labs.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-info',\n  templateUrl: './po-info.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoInfoComponent extends PoInfoBaseComponent {\n\n  get isExternalLink() {\n    return isExternalLink(this.url);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PoInfoComponent } from './po-info.component';\nimport { RouterModule } from '@angular/router';\n/**\n * @description\n *\n * MÃ³dulo do componente po-info.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule\n  ],\n  declarations: [\n    PoInfoComponent\n  ],\n  exports: [PoInfoComponent],\n  providers: [],\n  schemas: []\n})\nexport class PoInfoModule { }\n","import { EventEmitter, Input, Output } from '@angular/core';\n\nimport { convertToBoolean } from '../../utils/util';\nimport { PoColorPaletteEnum } from '../../enums/po-color-palette.enum';\n\nimport { PoTagItem } from './interfaces/po-tag-item.interface';\nimport { PoTagOrientation } from './enums/po-tag-orientation.enum';\nimport { PoTagType } from './enums/po-tag-type.enum';\n\nconst poTagColors = (<any>Object).values(PoColorPaletteEnum);\nconst poTagOrientationDefault = PoTagOrientation.Vertical;\n\n/**\n * @description\n *\n * Este componente permite exibir um valor em forma de um marcador colorido, sendo possÃ­vel definir uma legenda e realizar customizaÃ§Ãµes\n * na cor, iconografia e tipo.\n *\n * AlÃ©m disso, Ã© possÃ­vel definir uma aÃ§Ã£o que serÃ¡ executada tanto ao *click* quanto atravÃ©s das teclas *enter/space* enquanto navega\n * utilizando a tecla *tab*.\n *\n * Seu uso Ã© recomendado para informaÃ§Ãµes que necessitem de destaque em forma de marcaÃ§Ã£o.\n */\nexport class PoTagBaseComponent {\n\n  private _color?: string;\n  private _icon?: boolean | string;\n  private _inverse?: boolean;\n  private _orientation?: PoTagOrientation = poTagOrientationDefault;\n  private _type?: PoTagType;\n\n  public readonly poTagOrientation = PoTagOrientation;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define uma cor para a *tag*.\n   *\n   * Valores vÃ¡lidos:\n   *  - <span class=\"dot po-color-01\"></span> `color-01`\n   *  - <span class=\"dot po-color-02\"></span> `color-02`\n   *  - <span class=\"dot po-color-03\"></span> `color-03`\n   *  - <span class=\"dot po-color-04\"></span> `color-04`\n   *  - <span class=\"dot po-color-05\"></span> `color-05`\n   *  - <span class=\"dot po-color-06\"></span> `color-06`\n   *  - <span class=\"dot po-color-07\"></span> `color-07`\n   *  - <span class=\"dot po-color-08\"></span> `color-08`\n   *  - <span class=\"dot po-color-09\"></span> `color-09`\n   *  - <span class=\"dot po-color-10\"></span> `color-10`\n   *  - <span class=\"dot po-color-11\"></span> `color-11`\n   *  - <span class=\"dot po-color-12\"></span> `color-12`\n   *\n   * > **AtenÃ§Ã£o:** A propriedade `p-type` sobrepÃµe esta definiÃ§Ã£o.\n   */\n  @Input('p-color') set color(value: string) {\n    this._color = poTagColors.includes(value) ? value : undefined;\n  }\n\n  get color(): string {\n    return this._color;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define ou ativa um Ã­cone que serÃ¡ exibido ao lado do valor da *tag*.\n   *\n   * > Veja os valores vÃ¡lidos na [biblioteca de Ã­cones](guides/icons).\n   *\n   * Quando `p-type` estiver definida, basta informar um valor igual a `true` para que o Ã­cone seja exibido conforme descriÃ§Ãµes abaixo:\n   * - <span class=\"po-icon po-icon-ok\"></span> - `success`\n   * - <span class=\"po-icon po-icon-warning\"></span> - `warning`\n   * - <span class=\"po-icon po-icon-close\"></span> - `danger`\n   * - <span class=\"po-icon po-icon-info\"></span> - `info`\n   *\n   * @default `false`\n   */\n  @Input('p-icon') set icon(value: boolean | string) {\n    if (this.type) {\n      this._icon = convertToBoolean(value);\n\n    } else {\n      this._icon = value;\n\n    }\n  }\n\n  get icon(): boolean | string {\n    return this._icon;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Ativa a inversÃ£o de cores configuradas no componente, possibilitando uma visualizaÃ§Ã£o de status ativo e inativo.\n   *\n   * > A cor do texto, do Ã­cone e da borda ficam com a cor utilizada na propriedade `p-color` ou a cor correspondente ao `p-type`,\n   * e a cor do fundo fica branca.\n   *\n   * @default `false`\n   */\n  @Input('p-inverse') set inverse(value: boolean) {\n    this._inverse = convertToBoolean(value);\n  }\n\n  get inverse(): boolean {\n    return this._inverse;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define uma legenda que serÃ¡ exibida acima ou ao lado da *tag*, de acordo com a `p-orientation`.\n   */\n  @Input('p-label') label?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o *layout* de exibiÃ§Ã£o.\n   *\n   * @default `vertical`\n   */\n  @Input('p-orientation') set orientation(value: PoTagOrientation) {\n    this._orientation = (<any>Object).values(PoTagOrientation).includes(value) ? value : poTagOrientationDefault;\n  }\n\n  get orientation(): PoTagOrientation {\n    return this._orientation;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o tipo da *tag*.\n   *\n   * Valores vÃ¡lidos:\n   *  - `success`: cor verde utilizada para simbolizar sucesso ou Ãªxito.\n   *  - `warning`: cor amarela que representa aviso ou advertÃªncia.\n   *  - `danger`: cor vermelha para erro ou aviso crÃ­tico.\n   *  - `info`: cor cinza escuro que caracteriza conteÃºdo informativo.\n   *\n   * > Quando esta propriedade for definida, irÃ¡ sobrepor a definiÃ§Ã£o de `p-color` e `p-icon` somente serÃ¡ exibido caso seja `true`.\n   *\n   * @default `info`\n   */\n  @Input('p-type') set type(value: PoTagType) {\n    this._type = (<any>Object).values(PoTagType).includes(value) ? value : undefined;\n  }\n\n  get type(): PoTagType {\n    return this._type;\n  }\n\n  /** Texto da tag. */\n  @Input('p-value') value: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * AÃ§Ã£o que serÃ¡ executada ao clicar sobre o `po-tag` e que receberÃ¡ como parÃ¢metro um objeto contendo o seu valor e tipo.\n   */\n  @Output('p-click') click?: EventEmitter<any> = new EventEmitter<PoTagItem>();\n\n}\n","/**\n * @docsPrivate\n *\n * @description\n *\n * Define os Ã­cones disponÃ­veis para o `po-tag`.\n */\nexport enum PoTagIcon {\n\n  /** Ãcone fechar. */\n  Danger = 'po-icon-close',\n\n  /** Ãcone de informaÃ§Ã£o. */\n  Info = 'po-icon-info',\n\n  /** Ãcone que representa confirmaÃ§Ã£o. */\n  Success = 'po-icon-ok',\n\n  /** Ãcone com ponto de exclamaÃ§Ã£o. */\n  Warning = 'po-icon-warning'\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\n\nimport { PoKeyCodeEnum } from '../../enums/po-key-code.enum';\n\nimport { PoTagBaseComponent } from './po-tag-base.component';\nimport { PoTagIcon } from './enums/po-tag-icon.enum';\nimport { PoTagItem } from './interfaces/po-tag-item.interface';\nimport { PoTagType } from './enums/po-tag-type.enum';\n\nconst poTagTypeDefault = 'po-tag-' + PoTagType.Info;\n\n/**\n * @docsExtends PoTagBaseComponent\n *\n * @example\n *\n * <example name=\"po-tag-basic\" title=\"Portinari Tag Basic\">\n *  <file name=\"sample-po-tag-basic/sample-po-tag-basic.component.html\"> </file>\n *  <file name=\"sample-po-tag-basic/sample-po-tag-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-tag-labs\" title=\"Portinari Tag Labs\">\n *  <file name=\"sample-po-tag-labs/sample-po-tag-labs.component.html\"> </file>\n *  <file name=\"sample-po-tag-labs/sample-po-tag-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-tag-bank-account\" title=\"Portinari Tag - Bank Account\">\n *  <file name=\"sample-po-tag-bank-account/sample-po-tag-bank-account.component.html\"> </file>\n *  <file name=\"sample-po-tag-bank-account/sample-po-tag-bank-account.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-tag',\n  templateUrl: './po-tag.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoTagComponent extends PoTagBaseComponent implements OnInit {\n\n  isClickable: boolean;\n\n  ngOnInit() {\n    this.isClickable = this.click.observers.length > 0;\n  }\n\n  get iconFromType() {\n    switch (this.type) {\n      case PoTagType.Danger: return PoTagIcon.Danger;\n\n      case PoTagType.Info: return PoTagIcon.Info;\n\n      case PoTagType.Success: return PoTagIcon.Success;\n\n      case PoTagType.Warning: return PoTagIcon.Warning;\n    }\n  }\n\n  get iconTypeString() {\n    return typeof this.icon === 'string';\n  }\n\n  get tagColor() {\n    if (this.type) {\n      return this.inverse ? `po-tag-${this.type}-inverse` : `po-tag-${this.type}`;\n    }\n\n    if (this.color && !this.type) {\n      return this.inverse ? `po-text-${this.color}` : `po-${this.color}`;\n    }\n\n    if (!this.type && !this.color) {\n      return this.inverse ? `${poTagTypeDefault}-inverse` : poTagTypeDefault;\n    }\n  }\n\n  get tagOrientation() {\n    return this.orientation === this.poTagOrientation.Horizontal;\n  }\n\n  onClick() {\n    const submittedTagItem: PoTagItem = { value: this.value, type: this.type };\n    this.click.emit(submittedTagItem);\n  }\n\n  onKeyPressed(event: any, keyCode: string) {\n    const isValidKey = event.keyCode === PoKeyCodeEnum[keyCode];\n\n    if (isValidKey) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.onClick();\n    }\n  }\n\n}\n","/**\n * @usedBy PoDynamicFormComponent\n *\n * @description\n *\n * Enum para definiÃ§Ã£o do tipo de campo que serÃ¡ criado dinamicamente.\n */\nexport enum PoDynamicFieldType {\n\n  /** Valor booleano. */\n  Boolean = 'boolean',\n\n  /** Valor numÃ©rico que contÃ©m casas decimais e milhar. */\n  Currency = 'currency',\n\n  /** Valor para data. */\n  Date = 'date',\n\n  /** Valor para data e hora. */\n  DateTime = 'datetime',\n\n  /** Utilizado para informar/exibir hora. */\n  Time = 'time',\n\n  /** Valor nÃºmerico. */\n  Number = 'number',\n\n  /** Texto. */\n  String = 'string'\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoTagComponent } from './po-tag.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente `po-tag`.\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    PoTagComponent\n  ],\n  exports: [\n    PoTagComponent\n  ],\n  providers: [],\n  schemas: []\n})\nexport class PoTagModule { }\n","import { EventEmitter, Input, Output } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\n\r\nimport { convertToBoolean } from '../../../utils/util';\r\n\r\nimport { PoDynamicFormField } from './po-dynamic-form-field.interface';\r\n\r\n/**\r\n *\r\n * @description\r\n *\r\n * Componente para criaÃ§Ã£o de formulÃ¡rios dinÃ¢micos a partir de uma lista de objetos.\r\n *\r\n * TambÃ©m Ã© possÃ­vel verificar se o formulÃ¡rio estÃ¡ vÃ¡lido e informar valores para a exibiÃ§Ã£o de informaÃ§Ãµes.\r\n */\r\nexport class PoDynamicFormBaseComponent {\r\n\r\n  private _groupForm?: boolean = false;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Nome da propriedade, atribuÃ­da ao `PoDynamicFormField.property`, que iniciarÃ¡ o campo com foco.\r\n   */\r\n  @Input('p-auto-focus') autoFocus?: string;\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * ColeÃ§Ã£o de objetos que implementam a interface `PoDynamicFormField`, para definiÃ§Ã£o dos campos que serÃ£o criados\r\n   * dinamicamente.\r\n   *\r\n   * > Ex: `[ { property: 'name' } ]`\r\n   *\r\n   * Regras de tipagem e criaÃ§Ã£o dos componentes:\r\n   *\r\n   * - Caso o *type* informado seja *boolean* o componente criado serÃ¡ o `po-switch`.\r\n   * - Caso o *type* informado seja *currency* e nÃ£o seja informado um *mask* ou *pattern* o componente criado serÃ¡ o `po-decimal`,\r\n   * caso seja informado um *mask* ou *pattern* o componente criado serÃ¡ o `po-input`.\r\n   * - Caso o *type* informado seja *number* e nÃ£o seja informado um *mask* ou *pattern* o componente criado serÃ¡ o `po-number`, caso seja\r\n   * informado um *mask* ou *pattern* o componente criado serÃ¡ o `po-input`.\r\n   * - Caso a lista possua a propriedade `options` e a mesma possua atÃ© 3 itens o componente criado serÃ¡ o `po-radio-group`\r\n   * ou `po-checkbox-group` se informar a propriedade `optionsMulti`.\r\n   * - Caso a mesma possua 3 ou mais itens, serÃ¡ criado o componente `po-select` ou, `po-multiselect` se a propriedade `optionsMulti`\r\n   * for verdadeira.\r\n   * - Caso o *type* informado seja *date* ou *datetime* o componente criado serÃ¡ o `po-datepicker`.\r\n   * - Caso seja informado a propriedade `optionsService` o componente criado serÃ¡ o `po-combo`.\r\n   * - Caso o *type* informado seja *time* o componente criado serÃ¡ um `po-input` podendo receber um *mask* para formatar\r\n   * o valor exibido, caso nÃ£o seja informado um *mask* o componente serÃ¡ criado com a mÃ¡scara '99:99' por padrÃ£o.\r\n   * - Caso a lista possua a propriedade `rows` e esta seja definida com valor maior ou igual a 3 o componente criado serÃ¡\r\n   * o `po-textarea`, caso o valor da propriedade `rows` seja menor que 3 o componente criado serÃ¡ o `po-input`.\r\n   * - Caso seja informada a propriedade `secret` o componente criado serÃ¡ o `po-password`.\r\n   * - Caso o *type* informado seja *string* o componente criado serÃ¡ o `po-input`.\r\n   *\r\n   * @default `[]`\r\n   */\r\n  @Input('p-fields') fields: Array<PoDynamicFormField>;\r\n\r\n  /**\r\n   * Objeto que serÃ¡ utilizado como valor para exibir as informaÃ§Ãµes, serÃ¡ recuperado e preenchido atravÃ©s do atributo *property*\r\n   * dos objetos contidos na propridade `p-fields`.\r\n   *\r\n   * Pode iniciar com valor ou apenas com um objeto vazio que serÃ¡ preenchido conforme descrito acima.\r\n   *\r\n   * > Ex: `{ name: 'po' }`\r\n   */\r\n  @Input('p-value') value: any;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Na inicializaÃ§Ã£o do componente serÃ¡ repassado o objeto de formulÃ¡rio utilizado no componente,\r\n   * podendo ser utilizado para validaÃ§Ãµes e/ou detecÃ§Ã£o de mudanÃ§a dos valores.\r\n   *\r\n   * Portanto existem duas maneiras de recuperar o formulÃ¡rio,\r\n   * atravÃ©s de *template reference* e atravÃ©s do *output*, veja os exemplos abaixo:\r\n   *\r\n   * > *template reference*\r\n   *\r\n   * ```html\r\n   *  <po-dynamic-form #dynamicForm>\r\n   *  </po-dynamic-form>\r\n   *\r\n   *  <po-button p-label=\"Adicionar\" [p-disabled]=\"dynamicForm?.form.invalid\">\r\n   *  </po-button>\r\n   *\r\n   * ```\r\n   *\r\n   * > *Output*\r\n   *\r\n   * ```html\r\n   *  ...\r\n   *  <po-dynamic-form (p-form)=\"getForm($event)\">\r\n   *  </po-dynamic-form>\r\n   *\r\n   *  <po-button p-label=\"Adicionar\" [p-disabled]=\"dynamicForm?.invalid\">\r\n   *  </po-button>\r\n   *  ...\r\n   *\r\n   * ```\r\n   *\r\n   * ```ts\r\n   *  ...\r\n   *\r\n   *  export class AppComponent {\r\n   *\r\n   *    dynamicForm: NgForm;\r\n   *\r\n   *    getForm(form: NgForm) {\r\n   *      this.dynamicForm = form;\r\n   *    }\r\n   *\r\n   *  }\r\n   * ```\r\n   *\r\n   * > Caso a propriedade `p-group-form` for verdadeira nÃ£o serÃ¡ repassado o formulÃ¡rio, pois o mesmo utilizarÃ¡\r\n   * o formulÃ¡rio pai.\r\n   */\r\n  @Output('p-form') formOutput: EventEmitter<NgForm> = new EventEmitter<NgForm>();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   * Ao informar esta propriedade, o componente passarÃ¡ a utilizar o formulÃ¡rio pai para criar os `FormControl`\r\n   * e com isso Ã© possÃ­vel recuperar o valor do formulÃ¡rio e suas validaÃ§Ãµes a partir do formulÃ¡rio pai.\r\n   *\r\n   * ```html\r\n   * <form #parentForm=\"ngForm\">\r\n   *\r\n   *   <po-dynamic-form p-group-form [p-fields]=\"fields\"></po-dynamic-form>\r\n   *\r\n   *  <po-button p-label=\"Adicionar\" [p-disabled]=\"parentForm.invalid\"></po-button>\r\n   * </form>\r\n   * ```\r\n   */\r\n  @Input('p-group-form') set groupForm(value: boolean) {\r\n    this._groupForm = <any> value === '' ? true : convertToBoolean(value);\r\n  }\r\n\r\n  get groupForm(): boolean {\r\n    return this._groupForm;\r\n  }\r\n\r\n  /**\r\n   * FunÃ§Ã£o ou serviÃ§o que serÃ¡ executado na inicializaÃ§Ã£o do componente.\r\n   *\r\n   * A propriedade aceita os seguintes tipos:\r\n   * - `string`: *Endpoint* usado pelo componente para requisiÃ§Ã£o via `POST`.\r\n   * - `function`: MÃ©todo que serÃ¡ executado.\r\n   *\r\n   * Ao ser executado, irÃ¡ receber como parÃ¢metro o objeto informado no `p-value`.\r\n   *\r\n   * O retorno desta funÃ§Ã£o deve ser do tipo [PoDynamicFormLoad](documentation/po-dynamic-form#po-dynamic-form-load),\r\n   * onde o usuÃ¡rio poderÃ¡ determinar as novas atualizaÃ§Ãµes dos campos, valores e determinar o campo a ser focado.\r\n   *\r\n   * Por exemplo:\r\n   *\r\n   * ```\r\n   * onLoadFields(): PoDynamicFormLoad {\r\n   *\r\n   *   return {\r\n   *     value: { cpf: undefined },\r\n   *     fields: [\r\n   *       { property: 'cpf' }\r\n   *     ],\r\n   *     focus: 'cpf'\r\n   *   };\r\n   * }\r\n   *\r\n   * ```\r\n   * Para referenciar a sua funÃ§Ã£o utilize a propriedade `bind`, por exemplo:\r\n   * ```\r\n   *  [p-load]=\"onLoadFields.bind(this)\"\r\n   * ```\r\n   */\r\n  @Input('p-load') load?: string | Function;\r\n\r\n  /**\r\n   * FunÃ§Ã£o ou serviÃ§o para validar as **mudanÃ§as do formulÃ¡rio**.\r\n   *\r\n   * A propriedade aceita os seguintes tipos:\r\n   * - `string`: *Endpoint* usado pelo componente para requisiÃ§Ã£o via `POST`.\r\n   * - `function`: MÃ©todo que serÃ¡ executado.\r\n   *\r\n   * Ao ser executado, irÃ¡ receber como parÃ¢metro um objeto com o nome da propriedade\r\n   * alterada e o novo valor, conforme a interface `PoDynamicFormFieldChanged`:\r\n   *\r\n   * ```\r\n   * { property: 'property name', value: 'new value' }\r\n   * ```\r\n   *\r\n   * O retorno desta funÃ§Ã£o deve ser do tipo [PoDynamicFormValidation](documentation/po-dynamic-form#po-dynamic-form-validation),\r\n   * onde o usuÃ¡rio poderÃ¡ determinar as novas atualizaÃ§Ãµes dos campos.\r\n   * Por exemplo:\r\n   *\r\n   * ```\r\n   * onChangeFields(changeValue): PoDynamicFormValidation {\r\n   *\r\n   * if (changeValue.property === 'state') {\r\n   *\r\n   *   return {\r\n   *     value: { city: undefined },\r\n   *     fields: [\r\n   *       { property: 'city', options: this.getCity(changeValue.value.state) }\r\n   *     ],\r\n   *     focus: 'city'\r\n   *   };\r\n   * }\r\n   *\r\n   * ```\r\n   * Para referenciar a sua funÃ§Ã£o utilize a propriedade `bind`, por exemplo:\r\n   * ```\r\n   *  [p-validate]=\"this.myFunction.bind(this)\"\r\n   * ```\r\n   */\r\n  @Input('p-validate') validate?: string | Function;\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\n\nimport { of } from 'rxjs';\n\nimport { PoDynamicFormLoad } from '../po-dynamic-form-load/po-dynamic-form-load.interface';\nimport { PoDynamicFormValidation } from '../po-dynamic-form-validation/po-dynamic-form-validation.interface';\n\nexport class PoDynamicFormOperation {\n\n  constructor(private http: HttpClient) { }\n\n  protected execute(action: Function | string, param: any) {\n    return typeof action === 'string' ?\n      this.post(action, param) : of(action(param));\n  }\n\n  protected post(url: string, body: PoDynamicFormValidation | any) {\n    return this.http.post(url, body);\n  }\n\n  protected setFormDefaultIfEmpty(validateFields: any): PoDynamicFormValidation | PoDynamicFormLoad {\n    return validateFields || {\n      value: {},\n      fields: [],\n      focus: undefined\n    };\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { map } from 'rxjs/operators';\n\nimport { PoDynamicFormField } from '../po-dynamic-form-field.interface';\nimport { PoDynamicFormOperation } from '../po-dynamic-form-operation/po-dynamic-form-operation';\n\n@Injectable()\nexport class PoDynamicFormLoadService extends PoDynamicFormOperation {\n\n  constructor(http: HttpClient) {\n    super(http);\n  }\n\n  createAndUpdateFieldsForm(loadedFields: Array<PoDynamicFormField> = [], fields: Array<PoDynamicFormField> = []) {\n    return [ ...loadedFields ].reduce((updatedFields, field) => {\n      const index = updatedFields.findIndex(updatedField => updatedField.property === field.property);\n      const hasProperty = index >= 0;\n\n      if (hasProperty) {\n        updatedFields[index] = { ...fields[index], ...field };\n      } else {\n        updatedFields.push(field);\n      }\n\n      return updatedFields;\n    }, [ ...fields ]);\n  }\n\n  executeLoad(load: Function | string, value: any) {\n    return this.execute(load, value)\n      .pipe(\n        map(loadedFormdData => this.setFormDefaultIfEmpty(loadedFormdData)\n      ));\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { PoDynamicFormField } from '../po-dynamic-form-field.interface';\r\nimport { PoDynamicFormFieldChanged } from './po-dynamic-form-field-changed.interface';\r\nimport { PoDynamicFormOperation } from '../po-dynamic-form-operation/po-dynamic-form-operation';\r\nimport { PoDynamicFormValidation } from './po-dynamic-form-validation.interface';\r\n\r\n@Injectable()\r\nexport class PoDynamicFormValidationService extends PoDynamicFormOperation {\r\n\r\n  constructor(http: HttpClient) {\r\n    super(http);\r\n  }\r\n\r\n  sendFieldChange(field: PoDynamicFormField, value: any) {\r\n    const changedValue: PoDynamicFormFieldChanged = { property: field.property, value };\r\n\r\n    return this.execute(field.validate, changedValue).pipe(\r\n      map(validateFields => this.setFieldDefaultIfEmpty(validateFields)));\r\n  }\r\n\r\n  sendFormChange(validate: Function | string, field: PoDynamicFormField, value: any): Observable<PoDynamicFormValidation> {\r\n    const changedValue: PoDynamicFormFieldChanged = { property: field.property, value };\r\n\r\n    return this.execute(validate, changedValue).pipe(map(validateFields => this.setFormDefaultIfEmpty(validateFields)));\r\n  }\r\n\r\n  updateFieldsForm(validatedFields: Array<PoDynamicFormField> = [], fields: Array<PoDynamicFormField> = []) {\r\n    return [ ...validatedFields ].reduce((updatedFields, validatedField) => {\r\n      const index = updatedFields.findIndex(field => field.property === validatedField.property);\r\n      const hasProperty = index >= 0;\r\n\r\n      if (hasProperty) {\r\n        updatedFields[index] = { ...fields[index], ...validatedField };\r\n      }\r\n\r\n      return updatedFields;\r\n    }, [ ...fields ]);\r\n  }\r\n\r\n  private setFieldDefaultIfEmpty(validateFields: any): any {\r\n    return validateFields || {\r\n      field: {}\r\n    };\r\n  }\r\n\r\n}\r\n","import { Component, ChangeDetectorRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { PoDynamicFormBaseComponent } from './po-dynamic-form-base.component';\r\nimport { PoDynamicFormField } from './po-dynamic-form-field.interface';\r\nimport { PoDynamicFormLoad } from './po-dynamic-form-load/po-dynamic-form-load.interface';\r\nimport { PoDynamicFormLoadService } from './po-dynamic-form-load/po-dynamic-form-load.service';\r\nimport { PoDynamicFormValidation } from './po-dynamic-form-validation/po-dynamic-form-validation.interface';\r\nimport { PoDynamicFormValidationService } from './po-dynamic-form-validation/po-dynamic-form-validation.service';\r\n\r\n/**\r\n * @docsExtends PoDynamicFormBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-dynamic-form-basic\" title=\"Portinari Dynamic Form Basic\">\r\n *  <file name=\"sample-po-dynamic-form-basic/sample-po-dynamic-form-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-dynamic-form-basic/sample-po-dynamic-form-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-dynamic-form-register\" title=\"Portinari Dynamic Form - Register\">\r\n *  <file name=\"sample-po-dynamic-form-register/sample-po-dynamic-form-register.component.html\"> </file>\r\n *  <file name=\"sample-po-dynamic-form-register/sample-po-dynamic-form-register.component.ts\"> </file>\r\n *  <file name=\"sample-po-dynamic-form-register/sample-po-dynamic-form-register.service.ts\"> </file>\r\n * </example>\r\n */\r\n\r\n@Component({\r\n  selector: 'po-dynamic-form',\r\n  templateUrl: './po-dynamic-form.component.html'\r\n})\r\nexport class PoDynamicFormComponent extends PoDynamicFormBaseComponent implements OnInit, OnDestroy {\r\n\r\n  private _form: NgForm;\r\n\r\n  disabledForm: boolean;\r\n\r\n  private onLoadSubscription: Subscription;\r\n  private sendFormSubscription: Subscription;\r\n\r\n  @ViewChild('dynamicForm', { static: false }) set form(value: NgForm) {\r\n    // necessario para nao ocorrer o ExpressionChangedAfterItHasBeenCheckedError\r\n    setTimeout(() => {\r\n      this._form = value;\r\n\r\n      this.emitForm();\r\n    });\r\n  }\r\n\r\n  get form() {\r\n    return this._form || <any> {};\r\n  }\r\n\r\n  @ViewChild('fieldsComponent', { static: false }) fieldsComponent: { focus: (property: string) => void };\r\n\r\n  constructor(\r\n    private changes: ChangeDetectorRef,\r\n    private loadService: PoDynamicFormLoadService,\r\n    private validationService: PoDynamicFormValidationService) {\r\n    super();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.removeListeners();\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.load) {\r\n      this.loadDataOnInitialize();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * FunÃ§Ã£o que atribui foco ao campo desejado.\r\n   *\r\n   * Para utilizÃ¡-la Ã© necessÃ¡rio capturar a instÃ¢ncia do `dynamic form`, como por exemplo:\r\n   *\r\n   * ``` html\r\n   * <po-dynamic-form #dynamicForm [p-fields]=\"fields\"></po-dynamic-form>\r\n   * ```\r\n   *\r\n   * ``` javascript\r\n   * import { PoDynamicFormComponent, PoDynamicFormField } from '@portinari/portinari-ui';\r\n   *\r\n   * ...\r\n   *\r\n   * @ViewChild('dynamicForm', { static: true }) dynamicForm: PoDynamicFormComponent;\r\n   *\r\n   * fields: Array<PoDynamicFormField> = [\r\n   *   { property: 'fieldOne' },\r\n   *   { property: 'fieldTwo' }\r\n   * ];\r\n   *\r\n   * fieldFocus() {\r\n   *   this.dynamicForm.focus('fieldTwo');\r\n   * }\r\n   * ```\r\n   *\r\n   * @param {string} property Nome da propriedade atribuÃ­da ao `PoDynamicFormField.property`.\r\n   */\r\n  focus(property: string) {\r\n    this.fieldsComponent.focus(property);\r\n  }\r\n\r\n  validateForm(field: PoDynamicFormField) {\r\n    const previousFocusElement = document.activeElement;\r\n\r\n    this.disableForm(true);\r\n    const errorOnValidation = () => this.disableForm(false);\r\n\r\n    this.sendFormSubscription = this.validationService\r\n      .sendFormChange(this.validate, field, this.value)\r\n      .subscribe(this.applyFormValidation(previousFocusElement), errorOnValidation);\r\n  }\r\n\r\n  private applyFormUpdatesOnLoad(previousFocusElement: Element): (dynamicFormData: PoDynamicFormLoad) => void {\r\n    return dynamicFormData => {\r\n      this.updateModelOnLoad(dynamicFormData);\r\n      this.disableForm(false);\r\n      this.setFocusOnFieldByProperty(dynamicFormData.focus, previousFocusElement);\r\n    };\r\n  }\r\n\r\n  private applyFormValidation(previousFocusElement: Element): (dynamicFormData: PoDynamicFormValidation) => void {\r\n    return dynamicFormData => {\r\n      this.updateModelWithValidation(dynamicFormData);\r\n      this.disableForm(false);\r\n      this.setFocusOnFieldByProperty(dynamicFormData.focus, previousFocusElement);\r\n    };\r\n  }\r\n\r\n  private disableForm(value: boolean) {\r\n    this.disabledForm = value;\r\n    this.changes.detectChanges();\r\n  }\r\n\r\n  private emitForm() {\r\n    if (!this.groupForm && this.formOutput.observers.length) {\r\n      this.formOutput.emit(this.form);\r\n    }\r\n  }\r\n\r\n  private loadDataOnInitialize() {\r\n    const previousFocusElement = document.activeElement;\r\n\r\n    this.disabledForm = true;\r\n    const errorOnLoad = () => this.disabledForm = false;\r\n\r\n    this.onLoadSubscription = this.loadService\r\n      .executeLoad(this.load, this.value)\r\n      .subscribe(this.applyFormUpdatesOnLoad(previousFocusElement), errorOnLoad);\r\n  }\r\n\r\n  private removeListeners() {\r\n    if (this.onLoadSubscription) {\r\n      this.onLoadSubscription.unsubscribe();\r\n    }\r\n\r\n    if (this.sendFormSubscription) {\r\n      this.sendFormSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private setFocusOnFieldByProperty(property: string, previousFocusElement: Element) {\r\n    if (property) {\r\n      // precisa do timeout para que o valor seja atribuido no campo antes de setar o focus,\r\n      // para nao disparar a mudanÃ§a posteriormente. SituaÃ§Ã£o ocorre quando retornar campo com valor e focus atribuido a ele.\r\n      setTimeout(() => this.focus(property));\r\n    } else {\r\n      previousFocusElement['focus']();\r\n    }\r\n  }\r\n\r\n  private updateModelOnLoad(loadedFormData: PoDynamicFormLoad) {\r\n    Object.assign(this.value, loadedFormData.value);\r\n    this.fields = this.loadService.createAndUpdateFieldsForm(loadedFormData.fields, this.fields);\r\n  }\r\n\r\n  private updateModelWithValidation(formData: PoDynamicFormValidation) {\r\n    Object.assign(this.value, formData.value);\r\n    this.fields = this.validationService.updateFieldsForm(formData.fields, this.fields);\r\n  }\r\n\r\n}\r\n","import { PoDynamicViewField } from './po-dynamic-view/po-dynamic-view-field.interface';\n\nexport function getGridColumnsClasses(smColumns, mdColumns, lgColumns, xlColumns, gridColumns) {\n  const systemGrid = {\n    sm: smColumns || gridColumns || 12,\n    md: mdColumns || gridColumns || 6,\n    lg: lgColumns || gridColumns || 4,\n    xl: xlColumns || gridColumns || 3\n  };\n\n  return `po-sm-${systemGrid.sm} po-md-${systemGrid.md} po-lg-${systemGrid.lg} po-xl-${systemGrid.xl}`;\n}\n\nexport function isVisibleField(field: PoDynamicViewField): boolean {\n  const containsVisible = 'visible' in field;\n\n  return containsVisible ? field.visible : true;\n}\n","import { Input, EventEmitter, Output } from '@angular/core';\r\nimport { TitleCasePipe } from '@angular/common';\r\n\r\nimport { isTypeof } from '../../../../utils/util';\r\n\r\nimport { getGridColumnsClasses, isVisibleField } from '../../po-dynamic.util';\r\nimport { PoDynamicFieldType } from '../../po-dynamic-field-type.enum';\r\nimport { PoDynamicFormField } from '../po-dynamic-form-field.interface';\r\nimport { PoDynamicFormFieldInternal } from './po-dynamic-form-field-internal.interface';\r\n\r\nexport class PoDynamicFormFieldsBaseComponent {\r\n\r\n  private _fields: Array<PoDynamicFormField>;\r\n  private _value?: any = {};\r\n\r\n  visibleFields: Array<PoDynamicFormFieldInternal> = [];\r\n\r\n  @Input('p-auto-focus') autoFocus?: string;\r\n\r\n  // array de objetos que implementam a interface PoDynamicFormField, que serÃ£o exibidos no componente.\r\n  @Input('p-fields') set fields(value: Array<PoDynamicFormField>) {\r\n    this._fields = Array.isArray(value) ? [...value] : [];\r\n  }\r\n\r\n  get fields() {\r\n    return this._fields;\r\n  }\r\n\r\n  @Output('p-fieldsChange') fieldsChange = new EventEmitter<any>();\r\n\r\n  // valor que serÃ¡ utilizado para iniciar valor no componente.\r\n  @Input('p-value') set value(value: any) {\r\n    this._value = value && isTypeof(value, 'object') ? value : {};\r\n  }\r\n\r\n  get value() {\r\n    return this._value;\r\n  }\r\n\r\n  @Input('p-disabled-form') disabledForm: boolean;\r\n\r\n  @Input('p-validate') validate?: string | Function;\r\n\r\n  @Output('p-form-validate') formValidate = new EventEmitter<any>();\r\n\r\n  constructor(private titleCasePipe: TitleCasePipe) {}\r\n\r\n  compareTo(value, compareTo) {\r\n    return value === compareTo;\r\n  }\r\n\r\n  // retorna um array com os objetos configurados e visiveis.\r\n  protected getVisibleFields() {\r\n    const visibleFields = [];\r\n\r\n    this.fields.forEach(field => {\r\n      if (this.existsProperty(visibleFields, field.property)) {\r\n        this.printError(`\"po-dynamic-form\" property \"${field.property}\" estÃ¡ duplicado. Interface: PoDynamicFormField.`);\r\n        return;\r\n      }\r\n\r\n      if (!field['property']) {\r\n        this.printError('\"po-dynamic-form\" Ã obrigatÃ³rio ser especificado um property.');\r\n        return;\r\n      }\r\n\r\n      if (isVisibleField(field)) {\r\n        visibleFields.push(this.createField(field));\r\n      }\r\n    });\r\n\r\n    return visibleFields;\r\n  }\r\n\r\n  // converte um array em string para um array de objetos que contem label e value.\r\n  private convertOptions(options: Array<any>): Array<{ label: string, value: string }> {\r\n    const everyOptionString = options.every(option => typeof option === 'string');\r\n\r\n    if (everyOptionString) {\r\n      return options.map(value => ({label: value, value}));\r\n    }\r\n\r\n    return options;\r\n  }\r\n\r\n  // cria um novo objeto com as classes de grid system, com control (tipo do componente) e label default.\r\n  private createField(field: PoDynamicFormField): PoDynamicFormFieldInternal {\r\n    const control = this.getComponentControl(field);\r\n    const options = !!field.options ? this.convertOptions(field.options) : undefined;\r\n    const focus = this.hasFocus(field);\r\n\r\n    const componentClass = getGridColumnsClasses(field.gridSmColumns,\r\n      field.gridMdColumns,\r\n      field.gridLgColumns,\r\n      field.gridXlColumns,\r\n      field.gridColumns);\r\n\r\n    return {\r\n      label: this.titleCasePipe.transform(field.property),\r\n      ...field,\r\n      componentClass,\r\n      control,\r\n      focus,\r\n      options\r\n    };\r\n  }\r\n\r\n  private existsProperty(fields: Array<PoDynamicFormField>, property: string) {\r\n    return fields.some(field => {\r\n      return field.property === property;\r\n    });\r\n  }\r\n\r\n  // recupera o componente de acordo com algumas regras do field.\r\n  private getComponentControl(field: PoDynamicFormField = <any> {}) {\r\n    const type = field && field.type ? field.type.toLocaleLowerCase() : 'string';\r\n\r\n    if (this.isNumberType(field, type)) {\r\n      return 'number';\r\n    } else if (this.isCurrencyType(field, type)) {\r\n      return 'decimal';\r\n    } else if (this.isSelect(field)) {\r\n      return 'select';\r\n    } else if (this.isRadioGroup(field)) {\r\n      return 'radioGroup';\r\n    } else if (this.isCheckboxGroup(field)) {\r\n      return 'checkboxGroup';\r\n    } else if (this.isMultiselect(field)) {\r\n      return 'multiselect';\r\n    } else if (this.compareTo(type, PoDynamicFieldType.Boolean)) {\r\n      return 'switch';\r\n    } else if (this.compareTo(type, PoDynamicFieldType.Date) || this.compareTo(type, PoDynamicFieldType.DateTime)) {\r\n      return 'datepicker';\r\n    } else if (this.compareTo(type, PoDynamicFieldType.Time)) {\r\n      field.mask = field.mask || '99:99';\r\n\r\n      return 'input';\r\n    } else if (this.isCombo(field)) {\r\n      return 'combo';\r\n    } else if (this.isLookup(field)) {\r\n      return 'lookup';\r\n    } else if (this.isTextarea(field)) {\r\n      return 'textarea';\r\n    } else if (this.isPassword(field)) {\r\n      return 'password';\r\n    }\r\n\r\n    return 'input';\r\n  }\r\n\r\n  private hasFocus(field: PoDynamicFormField) {\r\n    return !!this.autoFocus && this.autoFocus === field.property;\r\n  }\r\n\r\n  private isCheckboxGroup(field: PoDynamicFormField) {\r\n    const { optionsService, optionsMulti, options } = field;\r\n\r\n    return !optionsService && optionsMulti && !!options && options.length <= 3;\r\n  }\r\n\r\n  private isCombo(field: PoDynamicFormField) {\r\n    const { optionsService } = field;\r\n\r\n    return !!optionsService && isTypeof(optionsService, 'string');\r\n  }\r\n\r\n  private isCurrencyType(field: PoDynamicFormField, type: string) {\r\n    const { mask, pattern } = field;\r\n\r\n    return this.compareTo(type, PoDynamicFieldType.Currency) && (!mask && !pattern);\r\n  }\r\n\r\n  private isLookup(field: PoDynamicFormField) {\r\n    const { searchService } = field;\r\n\r\n    return !!searchService && isTypeof(searchService, 'string');\r\n  }\r\n\r\n  private isMultiselect(field: PoDynamicFormField) {\r\n    const { optionsService, optionsMulti, options } = field;\r\n\r\n    return !optionsService && optionsMulti && !!options && options.length > 3;\r\n  }\r\n\r\n  private isNumberType(field: PoDynamicFormField, type: string) {\r\n    const { mask, pattern } = field;\r\n\r\n    return this.compareTo(type, PoDynamicFieldType.Number) && (!mask && !pattern);\r\n  }\r\n\r\n  private isPassword(field: PoDynamicFormField) {\r\n    const { secret } = field;\r\n\r\n    return secret;\r\n  }\r\n\r\n  private isRadioGroup(field: PoDynamicFormField) {\r\n    const { optionsMulti, options } = field;\r\n\r\n    return !optionsMulti && !!options && options.length <= 3;\r\n  }\r\n\r\n  private isSelect(field: PoDynamicFormField) {\r\n    const { optionsMulti, options } = field;\r\n\r\n    return !optionsMulti && !!options && options.length > 3;\r\n  }\r\n\r\n  private isTextarea(field: PoDynamicFormField) {\r\n    const { rows } = field;\r\n\r\n    return rows && rows >= 3;\r\n  }\r\n\r\n  private printError(error: string) {\r\n    console.error(error);\r\n  }\r\n\r\n}\r\n","import { Component, ChangeDetectorRef, OnChanges, QueryList, SimpleChanges, ViewChildren } from '@angular/core';\r\nimport { ControlContainer, NgForm } from '@angular/forms';\r\nimport { TitleCasePipe } from '@angular/common';\r\n\r\nimport { PoDynamicFormField } from '../po-dynamic-form-field.interface';\r\nimport { PoDynamicFormFieldsBaseComponent } from './po-dynamic-form-fields-base.component';\r\nimport { PoDynamicFormFieldValidation } from '../po-dynamic-form-validation/po-dynamic-form-field-validation.interface';\r\nimport { PoDynamicFormValidationService } from '../po-dynamic-form-validation/po-dynamic-form-validation.service';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Componente de criaÃ§Ã£o dos campos dinÃ¢micos.\r\n */\r\n@Component({\r\n  selector: 'po-dynamic-form-fields',\r\n  templateUrl: 'po-dynamic-form-fields.component.html',\r\n  viewProviders: [ { provide: ControlContainer, useExisting: NgForm } ],\r\n  providers: [ PoDynamicFormValidationService ]\r\n})\r\nexport class PoDynamicFormFieldsComponent extends PoDynamicFormFieldsBaseComponent implements OnChanges {\r\n\r\n  @ViewChildren('component') components: QueryList<{ name: string, focus: () => void }>;\r\n\r\n  private previousValue = {};\r\n\r\n  constructor(titleCasePipe: TitleCasePipe, private validationService: PoDynamicFormValidationService, private changes: ChangeDetectorRef) {\r\n    super(titleCasePipe);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.fields) {\r\n      this.visibleFields = this.getVisibleFields();\r\n    }\r\n  }\r\n\r\n  focus(property: string) {\r\n    const foundComponent = this.components.find(component => component.name === property);\r\n    if (foundComponent) {\r\n      foundComponent.focus();\r\n    }\r\n  }\r\n\r\n  isDisabled(field: PoDynamicFormField): boolean {\r\n    return field.disabled || this.disabledForm;\r\n  }\r\n\r\n  async onChangeField(visibleField: PoDynamicFormField) {\r\n    const { property } = visibleField;\r\n    const isChangedValueField = this.previousValue[property] !== this.value[property];\r\n\r\n    if (isChangedValueField) {\r\n\r\n      const { changedField, changedFieldIndex } = this.getField(property);\r\n\r\n      if (changedField.validate) {\r\n        await this.validateField(changedField, changedFieldIndex, visibleField);\r\n      }\r\n\r\n      this.triggerValidationOnForm(changedFieldIndex);\r\n    }\r\n\r\n    this.previousValue[property] = this.value[property];\r\n  }\r\n\r\n  trackBy(index) {\r\n    return index;\r\n  }\r\n\r\n  private applyFieldValidation(index: number, validatedField: PoDynamicFormFieldValidation) {\r\n    const field = this.fields[index];\r\n\r\n    this.fields[index] = { ...field, ...validatedField.field };\r\n    this.updateFields();\r\n\r\n    if (validatedField.hasOwnProperty('value')) {\r\n      this.value[field.property] = validatedField.value;\r\n    }\r\n\r\n    this.changes.detectChanges();\r\n\r\n    if (validatedField.focus) {\r\n      this.focus(field.property);\r\n    }\r\n\r\n  }\r\n\r\n  private getField(property: string) {\r\n    const changedFieldIndex = this.fields.findIndex(field => field.property === property);\r\n    const changedField = this.fields[changedFieldIndex];\r\n\r\n    return { changedField, changedFieldIndex };\r\n  }\r\n\r\n  private triggerValidationOnForm(changedFieldIndex: number) {\r\n    const hasValidationForm = this.validate && this.formValidate.observers.length;\r\n\r\n    if (hasValidationForm) {\r\n      const updatedField = this.fields[changedFieldIndex];\r\n      this.formValidate.emit(updatedField);\r\n    }\r\n\r\n  }\r\n\r\n  private updateFields() {\r\n    this.fieldsChange.emit(this.fields);\r\n    this.visibleFields = this.getVisibleFields();\r\n  }\r\n\r\n  private async validateField(field: PoDynamicFormField, fieldIndex: number, visibleField: PoDynamicFormField) {\r\n    const value = this.value[field.property];\r\n\r\n    const previousDisabled = visibleField.disabled;\r\n    visibleField.disabled = true;\r\n    this.changes.detectChanges();\r\n\r\n    try {\r\n      const validatedField = await this.validationService.sendFieldChange(field, value).toPromise();\r\n      this.applyFieldValidation(fieldIndex, validatedField);\r\n    } catch {\r\n      visibleField.disabled = previousDisabled;\r\n    }\r\n  }\r\n\r\n}\r\n","import { Input } from '@angular/core';\nimport { CurrencyPipe, DatePipe, DecimalPipe, TitleCasePipe } from '@angular/common';\n\nimport { convertToBoolean, isTypeof } from '../../../utils/util';\nimport { PoTimePipe } from '../../../pipes/po-time/po-time.pipe';\n\nimport { getGridColumnsClasses, isVisibleField } from '../po-dynamic.util';\nimport { PoDynamicViewField } from './po-dynamic-view-field.interface';\nimport { PoDynamicViewService } from './po-dynamic-view.service';\n\n/**\n *\n * @description\n *\n * Componente para listar dados dinamicamente a partir de uma lista de objetos.\n *\n * > Por padrÃ£o esse componente cria `po-info` para exibiÃ§Ã£o, Ã© possÃ­vel criar `po-tag` passando a propriedade { tag: true }.\n *\n */\nexport class PoDynamicViewBaseComponent {\n\n  private _fields: Array<PoDynamicViewField> = [];\n  private _showAllValue: boolean = false;\n  private _value = {};\n\n  visibleFields = [];\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Lista de objetos que implementam a interface `PoDynamicView`.\n   *\n   * > Ex: `[ { property: 'age' } ]`\n   *\n   * Regras de tipagem e formataÃ§Ã£o dos valores exibidos:\n   *\n   * - Caso o *type* informado seja *currency* e nÃ£o seja informado o *format* o mesmo recebe \"'BRL', 'symbol', '1.2-2'\"\n   * como formato padrÃ£o.\n   * - Caso o *type* informado seja *date* e nÃ£o seja informado o *format* o mesmo recebe 'dd/MM/yyyy' como formato padrÃ£o.\n   * - Caso o *type* informado seja *dateTime* e nÃ£o seja informado o *format* o mesmo recebe 'dd/MM/yyyy HH:mm:ss' como formato padrÃ£o.\n   * - Caso o *type* informado seja *number* e nÃ£o seja informado o *format* o mesmo nÃ£o serÃ¡ formatado.\n   * - Caso o *type* informado seja *time* e nÃ£o seja informado o *format* o mesmo recebe 'HH:mm:ss.ffffff' como formato padrÃ£o.\n   *\n   * > As propriedades informadas serÃ£o exibidas mesmo nÃ£o contendo valor de referÃªncia no objeto da propriedade `p-value`.\n   *\n   * @default `[]`\n   */\n  @Input('p-fields') set fields(fields: Array<PoDynamicViewField>) {\n    this._fields = Array.isArray(fields) ? [...fields] : [];\n  }\n\n  get fields() {\n    return this._fields;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica se exibirÃ¡ todas as informaÃ§Ãµes contidas dentro do objeto informado na propriedade `p-value`.\n   *\n   * @default `false`\n   */\n  @Input('p-show-all-value') set showAllValue(value: boolean) {\n    this._showAllValue = convertToBoolean(value);\n  }\n\n  get showAllValue() {\n    return this._showAllValue;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Possibilita executar uma funÃ§Ã£o quando o componente Ã© inicializado.\n   *\n   * A propriedade aceita os seguintes tipos:\n   * - **String**: Endpoint usado pelo componente para requisiÃ§Ã£o via `POST`.\n   * - **Function**: MÃ©todo que serÃ¡ executado na inicializaÃ§Ã£o do componente.\n   *\n   * Para os dois tipos de utilizaÃ§Ã£o da propriedade espera-se o seguinte retorno:\n   *\n   * ```\n   * {\n   *   value: {\n   *     cnpj: '**************', // altera valor do campo\n   *     updated: (new Date()).toString() // atribui valor ao campo novo\n   *   },\n   *   fields: [\n   *     { property: 'cnpj', tag: true, inverse: true }, // atribui novas propriedades ao field\n   *     { property: 'updated', tag: true } // inclui campo novo\n   *   ]\n   * }\n   * ```\n   * > **value**: any = atribui novo valor do model.\n   *\n   * > **fields**: `Array<PoDynamicViewField>` = Lista de campos que deseja alterar as propriedades,\n   * caso enviar um campo a mais serÃ¡ criado um novo campo.\n   *\n   * - Para esconder/remover campos precisa informar no field a propriedade `visible = false`.\n   *\n   */\n  @Input('p-load') load: string | Function;\n\n  /**\n   * @description\n   *\n   * Objeto que serÃ¡ utilizado para exibir as informaÃ§Ãµes dinÃ¢micas, o valor serÃ¡ recuperado atravÃ©s do atributo *property*\n   * dos objetos contidos na propridade `p-fields`.\n   *\n   * > Ex: `{ age: '35' }`\n   */\n  @Input('p-value') set value(value: object) {\n    this._value = value && isTypeof(value, 'object') ? value : {};\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  constructor(\n    private currencyPipe: CurrencyPipe,\n    private datePipe: DatePipe,\n    private decimalPipe: DecimalPipe,\n    private timePipe: PoTimePipe,\n    private titleCasePipe: TitleCasePipe,\n    protected dynamicViewService: PoDynamicViewService) { }\n\n  // retorna os fields com os valores recuperados do objeto value.\n  protected getConfiguredFields() {\n    const newFields = [];\n\n    this.fields.forEach(field => {\n      if (isVisibleField(field)) {\n        newFields.push(this.createField(field));\n      }\n    });\n\n    return newFields;\n  }\n\n  // retorna fields ligado ao value mais os atributos do value que nÃ£o possuiam fields.\n  protected getMergedFields() {\n    const mergedFields = [...this.getConfiguredFields()];\n\n    this.getValueFields().forEach(valueField => {\n      const fieldIndex = mergedFields.findIndex(field => field.property === valueField.property);\n      const property = valueField.property;\n\n      if (fieldIndex === -1) {\n        mergedFields.push(this.createField({ property }));\n      }\n    });\n\n    return mergedFields;\n  }\n\n  // retorna o objeto value como fields.\n  protected getValueFields() {\n    return Object.keys(this.value).map(property => {\n      return this.createField({ property });\n    });\n  }\n\n  private createField(field: PoDynamicViewField) {\n    const property = field.property;\n    const value = this.transformValue(field.type, this.value[property], field.format);\n\n    const classesGridColumns = getGridColumnsClasses(field.gridSmColumns,\n      field.gridMdColumns,\n      field.gridLgColumns,\n      field.gridXlColumns,\n      field.gridColumns);\n\n    return {\n      property,\n      value,\n      label: this.titleCasePipe.transform(property),\n      cssClass: classesGridColumns,\n      ...field\n    };\n  }\n\n  private transformValue(type: string, value, format) {\n    let transformedValue = value;\n\n    switch (type) {\n      case 'currency':\n        transformedValue = this.currencyPipe.transform(value, format || 'BRL', 'symbol', '1.2-2');\n        break;\n      case 'date':\n        transformedValue = this.datePipe.transform(value, format || 'dd/MM/yyyy');\n        break;\n      case 'dateTime':\n        transformedValue = this.datePipe.transform(value, format || 'dd/MM/yyyy HH:mm:ss');\n        break;\n      case 'number':\n        transformedValue = this.decimalPipe.transform(value, format);\n        break;\n      case 'time':\n        transformedValue = this.timePipe.transform(value, format || 'HH:mm:ss.ffffff');\n        break;\n    }\n\n    return transformedValue;\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { PoDynamicFormField } from '../po-dynamic-form/po-dynamic-form-field.interface';\n\n@Injectable()\nexport class PoDynamicViewService {\n\n  constructor(private http: HttpClient) { }\n\n  onLoad(url: string, value): Promise<{ value?: any, fields?: Array<PoDynamicFormField> }> {\n    return this.http.post(url, value).toPromise();\n  }\n\n}\n","import { Component, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { CurrencyPipe, DatePipe, DecimalPipe, TitleCasePipe } from '@angular/common';\n\nimport { PoTimePipe } from '../../../pipes/po-time/po-time.pipe';\n\nimport { PoDynamicFormField } from './../po-dynamic-form/po-dynamic-form-field.interface';\nimport { PoDynamicViewBaseComponent } from './po-dynamic-view-base.component';\nimport { PoDynamicViewService } from './po-dynamic-view.service';\n\n/**\n * @docsExtends PoDynamicViewBaseComponent\n *\n * @example\n *\n * <example name=\"po-dynamic-view-basic\" title=\"Portinari Dynamic View Basic\">\n *  <file name=\"sample-po-dynamic-view-basic/sample-po-dynamic-view-basic.component.html\"> </file>\n *  <file name=\"sample-po-dynamic-view-basic/sample-po-dynamic-view-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-dynamic-view-employee\" title=\"Portinari Dynamic View - Employee\">\n *  <file name=\"sample-po-dynamic-view-employee/sample-po-dynamic-view-employee.component.html\"> </file>\n *  <file name=\"sample-po-dynamic-view-employee/sample-po-dynamic-view-employee.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-dynamic-view-employee-on-load\" title=\"Portinari Dynamic View - Employee on load\">\n *  <file name=\"sample-po-dynamic-view-employee-on-load/sample-po-dynamic-view-employee-on-load.component.html\"> </file>\n *  <file name=\"sample-po-dynamic-view-employee-on-load/sample-po-dynamic-view-employee-on-load.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-dynamic-view',\n  templateUrl: './po-dynamic-view.component.html'\n})\nexport class PoDynamicViewComponent extends PoDynamicViewBaseComponent implements OnChanges, OnInit {\n\n  constructor(\n    currencyPipe: CurrencyPipe,\n    datePipe: DatePipe,\n    decimalPipe: DecimalPipe,\n    timePipe: PoTimePipe,\n    titleCasePipe: TitleCasePipe,\n    dynamicViewService: PoDynamicViewService) {\n\n    super(currencyPipe, datePipe, decimalPipe, timePipe, titleCasePipe, dynamicViewService);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.fields || changes.value || changes.showAllValue) {\n      this.visibleFields = this.getVisibleFields();\n    }\n  }\n\n  ngOnInit() {\n    if (this.load) {\n      this.updateValuesAndFieldsOnLoad();\n    }\n  }\n\n  private async getValuesAndFieldsFromLoad(): Promise<{ value?: any, fields?: Array<PoDynamicFormField> }> {\n    let valueAndFieldsFromLoad;\n\n    if (typeof this.load === 'string') {\n      valueAndFieldsFromLoad = await this.dynamicViewService.onLoad(this.load, this.value);\n    } else if (typeof this.load === 'function') {\n      valueAndFieldsFromLoad = this.load();\n    }\n\n    return valueAndFieldsFromLoad || {};\n  }\n\n  private getVisibleFields() {\n    if (this.showAllValue) {\n      return this.getMergedFields();\n    }\n\n    return this.value && this.fields.length ? this.getConfiguredFields() : this.getValueFields();\n  }\n\n  private setFieldOnLoad(fieldOnLoad: PoDynamicFormField) {\n    const index = this.fields.findIndex(field => field.property === fieldOnLoad.property);\n\n    if (index >= 0) {\n      this.fields[index] = { ...this.fields[index], ...fieldOnLoad };\n    } else {\n      this.fields.push({ ...fieldOnLoad });\n    }\n  }\n\n  private setFieldsOnLoad(fields: Array<PoDynamicFormField>) {\n    if (fields) {\n      fields.forEach(fieldOnLoad => {\n        this.setFieldOnLoad(fieldOnLoad);\n      });\n    }\n  }\n\n  private setValueOnLoad(newValue: any) {\n    Object.assign(this.value, newValue);\n  }\n\n  private async updateValuesAndFieldsOnLoad() {\n    const { value, fields } = await this.getValuesAndFieldsFromLoad();\n\n    this.setValueOnLoad(value);\n    this.setFieldsOnLoad(fields);\n\n    this.visibleFields = this.getVisibleFields();\n  }\n}\n","import { CommonModule, CurrencyPipe, DatePipe, DecimalPipe, TitleCasePipe } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { PoDividerModule } from '../po-divider/po-divider.module';\nimport { PoFieldModule } from '../po-field/po-field.module';\nimport { PoInfoModule } from '../po-info/po-info.module';\nimport { PoTagModule } from '../po-tag/po-tag.module';\nimport { PoTimeModule } from '../../pipes/po-time/po-time.module';\nimport { PoTimePipe } from '../../pipes/po-time/po-time.pipe';\n\nimport { PoDynamicFormComponent } from './po-dynamic-form/po-dynamic-form.component';\nimport { PoDynamicFormFieldsComponent } from './po-dynamic-form/po-dynamic-form-fields/po-dynamic-form-fields.component';\nimport { PoDynamicFormLoadService } from './po-dynamic-form/po-dynamic-form-load/po-dynamic-form-load.service';\nimport { PoDynamicFormValidationService } from './po-dynamic-form/po-dynamic-form-validation/po-dynamic-form-validation.service';\nimport { PoDynamicViewComponent } from './po-dynamic-view/po-dynamic-view.component';\nimport { PoDynamicViewService } from './po-dynamic-view/po-dynamic-view.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    PoDividerModule,\n    PoInfoModule,\n    PoFieldModule,\n    PoTagModule,\n    PoTimeModule\n  ],\n  declarations: [\n    PoDynamicFormComponent,\n    PoDynamicFormFieldsComponent,\n    PoDynamicViewComponent\n  ],\n  exports: [\n    PoDynamicFormComponent,\n    PoDynamicViewComponent\n  ],\n  providers: [\n    CurrencyPipe,\n    DatePipe,\n    DecimalPipe,\n    PoTimePipe,\n    TitleCasePipe,\n    PoDynamicFormLoadService,\n    PoDynamicFormValidationService,\n    PoDynamicViewService\n  ]\n})\nexport class PoDynamicModule { }\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'po-grid-cell-action',\n  templateUrl: './po-grid-cell-action.component.html'\n})\nexport class PoGridCellActionComponent {\n\n  @Input('p-position') position?: string = '';\n\n  @Input('p-value') value?: string;\n\n  constructor() { }\n\n  onKeyDownContent(event) {\n    // console.log('onKeyDownContent: ', event);\n\n    // ENTER\n    if (event.keyCode === 13) {\n      event.preventDefault();\n\n      // this.openActions(this.value);\n\n      return;\n    }\n  }\n\n}\n","import { Component, Input, ViewChild, ElementRef, ChangeDetectorRef, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'po-grid-cell',\n  templateUrl: './po-grid-cell.component.html'\n})\nexport class PoGridCellComponent {\n\n  private _width: (string | number);\n\n  _value: any = '';\n  edit: boolean = false;\n  editValue: string = '';\n\n  @Input('p-align') align?: string = 'left';\n\n  @Input('p-freeze') freeze?: boolean = false;\n\n  @Input('p-tab-index') tabIndex?: number = -1;\n\n  @Input('p-position') position?: string = '';\n\n  @Input('p-width') set width(value: (string | number)) {\n    this._width = value;\n\n    if (this.freeze && !this._width) {\n      this._width = 100;\n    }\n  }\n  get width(): (string | number) {\n    return this._width ? `${this._width}px` : '100%';\n  }\n\n  @Input('p-readonly') readonly?: boolean = false;\n\n  @Input('p-required') required?: boolean = false;\n\n  @Output('p-valueChange') valueChange = new EventEmitter<any>();\n  // @Input('p-value') value?: string;\n  @Input('p-value') set value(value: any) {\n    this._value = value;\n    this.valueChange.emit(this._value);\n  }\n  get value(): any {\n    return this._value;\n  }\n\n  @ViewChild('inputElement', { static: true }) inputElement: ElementRef;\n  @ViewChild('contentElement', { static: true }) contentElement: ElementRef;\n\n  constructor(private changeDetectorRef: ChangeDetectorRef) { }\n\n  onKeyDownContent(event: any) {\n    // console.log('onKeyDownContent: ', event);\n\n    // BACKSPACE / DELETE\n    if ((!event.ctrlKey) && ((event.keyCode === 8) || (event.keyCode === 46))) {\n\n      if (this.readonly) {\n        return;\n      }\n\n      event.preventDefault();\n      this.value = '';\n      return;\n    }\n\n    // ENTER\n    if (event.keyCode === 13) {\n      event.preventDefault();\n      this.onEditCell(this.value);\n      return;\n    }\n\n    // A..Z - 0..9\n    if ((event.keyCode >= 65) && (event.keyCode <= 90) || (event.keyCode >= 48) && (event.keyCode <= 57)) {\n      event.preventDefault();\n      this.onEditCell(event.key);\n      return;\n    }\n  }\n\n  dblclick(event: any) {\n    // console.log('dblclick: ', event);\n\n    event.preventDefault();\n\n    this.onEditCell(this.value);\n  }\n\n  onBlurInput(event: any) {\n    // console.log('onBlurInput: ', event);\n\n    this.value = this.editValue;\n    this.editValue = undefined;\n    this.edit = false;\n  }\n\n  onKeyDownInput(event: any) {\n    // console.log('onKeyDownInput: ', event);\n\n    // ENTER\n    if (event.keyCode === 13) {\n      this.value = this.editValue;\n      this.editValue = undefined;\n      this.edit = false;\n      this.changeDetectorRef.detectChanges();\n      this.contentElement.nativeElement.focus();\n    }\n\n    // ESCAPE\n    if (event.keyCode === 27) {\n      this.editValue = undefined;\n      this.edit = false;\n      this.changeDetectorRef.detectChanges();\n      this.contentElement.nativeElement.focus();\n      event.stopPropagation();\n    }\n  }\n\n  private onEditCell(value: any) {\n    if (this.readonly) {\n      return;\n    }\n\n    this.editValue = value;\n    this.edit = true;\n    this.changeDetectorRef.detectChanges();\n    this.inputElement.nativeElement.focus();\n  }\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Input, OnDestroy, Renderer2, ViewChild } from '@angular/core';\n\nimport { PoGridRowActions } from './po-grid-row-actions.interface';\n\n/**\n * @description\n *\n * Componente grid.\n *\n * AÃ§Ãµes / atalhos:\n *\n * - ARROW-UP: Navega para celula superior / Na ultima linha adiciona uma linha em branco no grid;\n * - ARROW-DOWN: Navega para celula inferior;\n * - ARROW-RIGHT: Navega para celula direita;\n * - ARROW-LEFT: Navega para celula esquerda;\n * - TAB: Navega para prÃ³xima celula;\n * - SHIFT+TAB: Navega para celula anterior;\n * - CTRL+DEL: Remove linha;\n * - DEL/BACKSPACE: Limpa celula;\n * - ENTER: Edita linha com valor atual/Confirma ediÃ§Ã£o da celula;\n * - DOUBLE-CLICK: Edita linha com valor atual;\n * - ESC: Cancela ediÃ§Ã£o da celula / Cancela inserÃ§Ã£o de linhas em branco;\n * - A..Z/0..9: Inicia ediÃ§Ã£o com valor em branco.\n *\n * @example\n *\n * <example name=\"po-grid-basic\" title=\"Portinari Grid Basic\">\n *  <file name=\"sample-po-grid-basic/sample-po-grid-basic.component.html\"> </file>\n *  <file name=\"sample-po-grid-basic/sample-po-grid-basic.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-grid',\n  templateUrl: './po-grid.component.html'\n})\nexport class PoGridComponent implements OnDestroy {\n\n  lastCell: string = '0-0';\n  lastRow: number = 0;\n  lastColumn: number = 0;\n  currencyCell: string = '0-0';\n  currencyRow: number = 0;\n  currencyColumn: number = 0;\n  currencyObj: any;\n\n  logger = false;\n\n  width = '100%';\n  widporeeze = 0;\n  widthActions = 0;\n\n  private resizeListener: () => void;\n  private timeoutResize;\n\n  @ViewChild('table', { static: true }) tableElement: ElementRef;\n  @ViewChild('wrapper', { static: true }) tableWrapper: ElementRef;\n\n  private _columns = [];\n\n  /**\n   * @description\n   *\n   * AÃ§Ãµes disparadas quando uma linha do grid Ã© manipulada.\n   */\n  @Input('p-row-actions') rowActions: PoGridRowActions = {};\n\n  /**\n   * Colunas exibidas no grid.\n   */\n  @Input('p-columns') set columns(value: Array<any>) {\n    this._columns = [...value];\n\n    this._columns.forEach(column => {\n      column.label = column.label || column.property;\n\n      if (column.freeze === true) {\n        column.cssWidth = `${column.width || 100}px`;\n      } else {\n        column.cssWidth = column.width ? `${column.width}px` : '100%';\n      }\n    });\n  }\n  get columns(): Array<any> {\n    return this._columns.filter(column => column.freeze !== true && column.action !== true);\n  }\n\n  /**\n   * Lista com os dados que serÃ£o exibidos no grid.\n   */\n  @Input('p-data') data: Array<any> = [];\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n    private elRef: ElementRef,\n    renderer: Renderer2) {\n\n    this.debounceResize();\n\n    this.resizeListener = renderer.listen('window', 'resize', (event: any) => {\n      this.debounceResize();\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.resizeListener) {\n      this.resizeListener();\n    }\n  }\n\n  private debounceResize() {\n    clearTimeout(this.timeoutResize);\n\n    this.timeoutResize = setTimeout(() => {\n      const widthTableWrapper = this.tableWrapper.nativeElement.offsetWidth;\n      this.width = `${widthTableWrapper - (this.widporeeze + 8) - this.widthActions}px`;\n    }, 100);\n  }\n\n  get freezeColumns() {\n    const freezeColumns = this._columns.filter(column => column.freeze === true);\n\n    this.widporeeze = freezeColumns.reduce((prev, current) => prev + (current.width || 100), 0);\n\n    return freezeColumns;\n  }\n\n  get actionColumns() {\n    const actionsColumns = this._columns.filter(column => column.action === true);\n\n    this.widthActions = actionsColumns.length > 0 ? 56 : 0;\n\n    return actionsColumns;\n  }\n\n  cancelRow(event: any, row: any) {\n    const el = event.path.find(element => element.id);\n\n    if (!el) {\n      return;\n    }\n\n    const [x] = (el.id).split('-');\n\n    if (this.isEmptyRow(x)) {\n      if (!this.removeRow(event, row)) {\n        return;\n      }\n\n      this.currencyObj = Object.assign({}, this.data[this.currencyRow - 1]);\n    } else {\n      this.data[+x - 1] = Object.assign({}, this.currencyObj);\n      setTimeout(() => this.selectCell(this.currencyRow, this.currencyColumn));\n    }\n  }\n\n  removeRow(event: any, row: any): boolean {\n\n    if (this.rowActions.beforeRemove && !this.rowActions.beforeRemove(Object.assign({}, row))) {\n      return false;\n    }\n\n    const index = this.data.indexOf(row);\n\n    this.data.splice(index, 1);\n\n    this.changeDetectorRef.detectChanges();\n\n    if ((this.data.length === 0) || (index === this.data.length)) {\n      this.selectCell(this.currencyRow - 1, this.currencyColumn);\n    } else {\n      this.selectCell(this.currencyRow, this.currencyColumn);\n    }\n\n    return true;\n  }\n\n  tableKeydown(event: any, direction: string) {\n    let [row, col] = event.target.id.split('-');\n    row = +row;\n    col = +col;\n    let prow = +row;\n    let pcol = +col;\n\n    // event.preventDefault();\n    // event.stopPropagation();\n\n    // debugger;\n    if (direction === 'down') {\n      if (row <= this.data.length) {\n        prow++;\n      }\n\n      if (row === this.data.length) {\n        if (row === 0 || !this.isEmptyRow(row)) {\n          if (this.saveRow(row)) {\n            if (!this.insertRow()) {\n              return;\n            }\n          } else {\n            return;\n          }\n        } else {\n          prow--;\n        }\n      }\n    } else if ((direction === 'up') && (row > 0)) {\n      prow--;\n    } else if ((direction === 'left') && (col > 0)) {\n      pcol--;\n    } else if ((direction === 'right') && (col < this._columns.length - 1)) {\n      pcol++;\n    } else if (direction === 'next') {\n      if (col < this._columns.length - 1) {\n        pcol++;\n        event.preventDefault();\n      } else if (row < this.data.length) {\n        pcol = 0;\n        prow++;\n        event.preventDefault();\n      }\n    } else if (direction === 'prior') {\n      if (col > 0) {\n        pcol--;\n        event.preventDefault();\n      } else if (row > 0) {\n        pcol = this._columns.length - 1;\n        prow--;\n        event.preventDefault();\n      }\n    }\n\n    if (this.currencyCell === `${prow}-${pcol}`) {\n      // console.log('vazou');\n      return;\n    }\n\n    // debugger;\n    if (prow !== this.currencyRow && row > 0 && this.data.length >= row) {\n      if (!this.isEmptyRow(row)) {\n        if (!this.saveRow(row)) {\n          return;\n        }\n      } else {\n        if (!this.removeRow(event, row)) {\n          return;\n        }\n      }\n    }\n\n    if (this.currencyRow !== prow) {\n      this.currencyObj = Object.assign({}, this.data[prow - 1]);\n      // console.log('mudou de linha');\n    }\n\n    this.lastCell = event.target.id;\n    this.lastRow = row;\n    this.lastColumn = col;\n\n    this.selectCell(prow, pcol);\n  }\n\n  tableClick(event: any) {\n    const el = event.path.find(element => element.id);\n\n    if (!el) {\n      this.selectCell(this.currencyRow, this.currencyColumn);\n      return;\n    }\n\n    if (this.currencyCell === el.id) {\n      return;\n    }\n\n    const [row, col] = (el.id).split('-');\n    const prow = +row;\n    const pcol = +col;\n\n    if (prow !== this.currencyRow) {\n      if (this.currencyRow > 0) {\n        if (!this.isEmptyRow(this.currencyRow)) {\n          if (!this.saveRow(this.currencyRow)) {\n            this.selectCell(this.currencyRow, this.currencyColumn);\n            return;\n          }\n        } else {\n          if (!this.removeRow(event, row)) {\n            return;\n          }\n        }\n      }\n\n      this.currencyObj = Object.assign({}, this.data[prow - 1]);\n      // console.log('>>>>>>> ', prow - 1);\n    }\n\n    this.lastCell = this.currencyCell;\n    this.lastRow = this.currencyRow;\n    this.lastColumn = this.currencyColumn;\n\n    this.currencyCell = el.id;\n    this.currencyRow = prow;\n    this.currencyColumn = pcol;\n  }\n\n  saveRow(row: number): boolean {\n    // console.log(this.data[row - 1]);\n\n    const obj = this.data[row - 1];\n\n    if (!Object.keys(obj).some(prop => obj[prop] !== this.currencyObj[prop])) {\n      // console.log('tudo igual');\n      return true;\n    }\n\n    if (this.rowActions.beforeSave && !this.rowActions.beforeSave(obj, this.currencyObj)) {\n      return false;\n    }\n\n    const requireds = [];\n\n    this.columns.forEach(column => {\n      if (column.required === true && !obj[column.property]) {\n        requireds.push(column.property);\n      }\n    });\n\n    return requireds.length === 0;\n  }\n\n  insertRow() {\n    const obj = {};\n\n    if (this.rowActions.beforeInsert && !this.rowActions.beforeInsert(obj)) {\n      return false;\n    }\n\n    // this.currencyObj = Object.assign({}, obj);\n\n    this.data.push(obj);\n    this.changeDetectorRef.detectChanges();\n\n    return true;\n  }\n\n  isEmptyRow(row: number) {\n    const obj = this.data[row - 1];\n\n    if (!obj) { // title\n      return false;\n    }\n\n    const filled = Object.keys(obj).some(property => obj[property]);\n\n    return !filled;\n  }\n\n  selectCell(row: number, col: number) {\n    const nextCell = this.elRef.nativeElement.querySelector(`[id='${row}-${col}']`);\n\n    if (nextCell) {\n      this.currencyCell = `${row}-${col}`;\n      this.currencyRow = row;\n      this.currencyColumn = col;\n      nextCell.focus();\n    }\n  }\n}\n","import { Component, Input, ViewChild, ElementRef, ChangeDetectorRef } from '@angular/core';\n\n@Component({\n  selector: 'po-grid-head',\n  templateUrl: './po-grid-head.component.html'\n})\nexport class PoGridHeadComponent {\n\n  private _width: (string | number);\n\n  @Input('p-align') align?: string = 'left';\n\n  @Input('p-freeze') boolean?: boolean = false;\n\n  @Input('p-position') position?: string = '';\n\n  @Input('p-tab-index') tabIndex?: number = -1;\n\n  @Input('p-width') set width(value: (string | number)) {\n    this._width = value;\n  }\n  get width(): (string | number) {\n    return this._width ? `${this._width}px` : '100%';\n  }\n\n  @Input('p-title') title?: string;\n\n  constructor(private changeDetectorRef: ChangeDetectorRef) { }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { PoFieldModule } from './../../components/po-field/po-field.module';\n\nimport { PoGridCellActionComponent } from './po-grid-cell-action/po-grid-cell-action.component';\nimport { PoGridCellComponent } from './po-grid-cell/po-grid-cell.component';\nimport { PoGridComponent } from './po-grid.component';\nimport { PoGridHeadComponent } from './po-grid-head/po-grid-head.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente po-grid.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n\n    PoFieldModule\n  ],\n  declarations: [\n    PoGridCellActionComponent,\n    PoGridCellComponent,\n    PoGridComponent,\n    PoGridHeadComponent\n  ],\n  exports: [\n    PoGridComponent\n  ]\n})\nexport class PoGridModule { }\n","import { EventEmitter, Input, Output } from '@angular/core';\n\nimport { browserLanguage, poLocaleDefault, convertToBoolean } from '../../utils/util';\n\nimport { PoListViewAction } from './interfaces/po-list-view-action.interface';\nimport { PoListViewLiterals } from './interfaces/po-list-view-literals.interface';\n\nexport const poListViewLiteralsDefault = {\n  en: <PoListViewLiterals> {\n    hideDetails: 'Hide details',\n    loadMoreData: 'Load more data',\n    noData: 'No data found',\n    selectAll: 'Select all',\n    showDetails: 'Show details'\n  },\n  es: <PoListViewLiterals> {\n    hideDetails: 'Ocultar detalles',\n    loadMoreData: 'Cargar mÃ¡s resultados',\n    noData: 'Datos no encontrados',\n    selectAll: 'Seleccionar todos',\n    showDetails: 'Mostrar detalles'\n  },\n  pt: <PoListViewLiterals> {\n    hideDetails: 'Ocultar detalhes',\n    loadMoreData: 'Carregar mais resultados',\n    noData: 'Nenhum dado encontrado',\n    selectAll: 'Selecionar todos',\n    showDetails: 'Exibir detalhes'\n  },\n  ru: <PoListViewLiterals> {\n    hideDetails: 'Ð¡ÐºÑÑÑÑ Ð´ÐµÑÐ°Ð»Ð¸',\n    loadMoreData: 'ÐÐ°Ð³ÑÑÐ·Ð¸ÑÑ Ð±Ð¾Ð»ÑÑÐµ ÑÐµÐ·ÑÐ»ÑÑÐ°ÑÐ¾Ð²',\n    noData: 'ÐÐ°Ð½Ð½ÑÐµ Ð½Ðµ Ð½Ð°Ð¹Ð´ÐµÐ½Ñ',\n    selectAll: 'ÐÑÐ±ÑÐ°ÑÑ Ð²ÑÐµ',\n    showDetails: 'ÐÐ¾ÑÐ¼Ð¾ÑÑÐµÑÑ Ð´ÐµÑÐ°Ð»Ð¸'\n  }\n};\n\n/**\n * @description\n *\n * Componente de lista que recebe um array de objetos e renderiza de forma dinÃ¢mica os dados de\n * acordo com a necessidade de cada tela e deve ser utilizado em conjunto com as diretivas de *templates*\n *  **[p-list-view-content-template](/documentation/po-list-view-content-template)** e\n * **[p-list-view-detail-template](/documentation/po-list-view-detail-template)**.\n *\n * O componente disponibiliza uma Ã¡rea especÃ­fica para exibiÃ§Ã£o informaÃ§Ãµes adicionais,\n * atravÃ©s da diretiva **[p-list-view-detail-template](/documentation/po-list-view-detail-template)**.\n */\nexport class PoListViewBaseComponent {\n\n  private _actions: Array<PoListViewAction>;\n  private _height: number;\n  private _hideSelectAll: boolean;\n  private _items: Array<any>;\n  private _literals: PoListViewLiterals;\n  private _select: boolean;\n  private _showMoreDisabled: boolean;\n\n  popupTarget: any;\n  selectAll: boolean = false;\n  showHeader: boolean = false;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Lista de aÃ§Ãµes que serÃ£o exibidas no componente.\n   */\n  @Input('p-actions') set actions(value: Array<PoListViewAction>) {\n    this._actions = Array.isArray(value) ? value : [];\n  }\n\n  get actions() {\n    return this._actions;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a altura do `po-list-view` em *pixels*.\n   */\n  @Input('p-height') set height(height: number) {\n    this._height = height;\n  }\n\n  get height() {\n    return this._height;\n  }\n\n  /**\n   * @description\n   *\n   * Esconde o *checkbox* para seleÃ§Ã£o de todos os itens.\n   *\n   * @default `false`\n   */\n  @Input('p-hide-select-all') set hideSelectAll(hideSelectAll: boolean) {\n    this._hideSelectAll = convertToBoolean(hideSelectAll);\n    this.showMainHeader();\n  }\n\n  get hideSelectAll() {\n    return this._hideSelectAll;\n  }\n\n  /** Lista de itens que serÃ£o exibidos no componente. */\n  @Input('p-items') set items(value: Array<any>) {\n    this._items = Array.isArray(value) ? value : [];\n  }\n\n  get items() {\n    return this._items;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com as literais usadas no `po-list-view`.\n   *\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\n   *\n   * ```\n   *  const customLiterals: PoListViewLiterals = {\n   *    hideDetail: 'Ocultar detalhes completamente',\n   *    loadMoreData: 'Mais dados',\n   *    showDetail: 'Mostrar mais detalhes',\n   *    selectAll: 'Selecionar todos os itens'\n   *  };\n   * ```\n   *\n   * Ou passando apenas as literais que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: PoListViewLiterals = {\n   *    showDetail: 'Mostrar mais detalhes'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <po-list-view\n   *   [p-literals]=\"customLiterals\">\n   * </po-list-view>\n   * ```\n   *\n   * > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do browser (pt, en, es).\n   */\n  @Input('p-literals') set literals(value: PoListViewLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...poListViewLiteralsDefault[poLocaleDefault],\n        ...poListViewLiteralsDefault[browserLanguage()],\n        ...value\n      };\n    } else {\n      this._literals = poListViewLiteralsDefault[browserLanguage()];\n    }\n  }\n\n  get literals() {\n    return this._literals || poListViewLiteralsDefault[browserLanguage()];\n  }\n\n  /** Recebe uma propriedade que serÃ¡ utilizada para recuperar o valor do objeto que serÃ¡ usado como link para o tÃ­tulo. */\n  @Input('p-property-link') propertyLink?: string;\n\n  /** Recebe uma propriedade que serÃ¡ utilizada para recuperar o valor do objeto que serÃ¡ exibido como o tÃ­tulo de cada item. */\n  @Input('p-property-title') propertyTitle?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Habilita um *checkbox* para cada item da lista. Todos os items possuem a propriedade dinÃ¢mica `$selected` para identificar se o\n   * item estÃ¡ selecionado, por exemplo:\n   *\n   * ```\n   *  item.$selected\n   *\n   *  // ou\n   *\n   *  item['$selected']\n   * ```\n   *\n   * @default `false`\n   */\n  @Input('p-select') set select(select: boolean) {\n    this._select = convertToBoolean(select);\n    this.showMainHeader();\n  }\n\n  get select() {\n    return this._select;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Indica que o botÃ£o `Carregar Mais Resultados` serÃ¡ desabilitado.\n   */\n  @Input('p-show-more-disabled') set showMoreDisabled(value: boolean) {\n    this._showMoreDisabled = convertToBoolean(value);\n  }\n\n  get showMoreDisabled(): boolean {\n    return this._showMoreDisabled;\n  }\n\n  /**\n   * Recebe uma aÃ§Ã£o, que serÃ¡ executada quando clicar no botÃ£o \"Carregar mais resultados\".\n   *\n   * > Caso nenhuma aÃ§Ã£o for definida o mesmo nÃ£o ficarÃ¡ visÃ­vel.\n   */\n  @Output('p-show-more') showMore?: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * AÃ§Ã£o que serÃ¡ executada ao clicar no tÃ­tulo.\n   *\n   * Ao ser disparado, o mÃ©todo inserido na aÃ§Ã£o irÃ¡ receber como parÃ¢metro o item da lista clicado.\n   */\n  @Output('p-title-action') titleAction?: EventEmitter<any> = new EventEmitter<any>();\n\n  onClickAction(listViewAction: PoListViewAction, item) {\n    const cleanItem = this.deleteInternalAttrs(item);\n    if (listViewAction.action) {\n      listViewAction.action(cleanItem);\n    }\n  }\n\n  onShowMore(): void {\n    this.showMore.emit();\n  }\n\n  runTitleAction(listItem: any) {\n    const itemWithPublicProperties = this.deleteInternalAttrs(listItem);\n    this.titleAction.emit(itemWithPublicProperties);\n  }\n\n  selectAllListItems() {\n    if (!this.hideSelectAll) {\n      this.selectAll = !this.selectAll;\n\n      this.items.forEach(item => {\n        item.$selected = this.selectAll;\n      });\n    }\n  }\n\n  selectListItem(row: any) {\n    row.$selected = !row.$selected;\n\n    this.selectAll = this.checkIfItemsAreSelected(this.items);\n  }\n\n  private deleteInternalAttrs(item) {\n    const itemCopy = item ? { ...item } : undefined;\n\n    for (const key in itemCopy) {\n      if (itemCopy.hasOwnProperty(key) && key.startsWith('$')) {\n        delete itemCopy[key];\n      }\n    }\n\n    return itemCopy;\n  }\n\n  private checkIfItemsAreSelected(items: Array<any>): boolean {\n    const someCheckedOrIndeterminate = item => item.$selected || item.$selected === null;\n    const everyChecked = item => item.$selected;\n\n    if (items.every(everyChecked)) {\n      return true;\n    }\n\n    if (items.some(someCheckedOrIndeterminate)) {\n      return null;\n    }\n\n    return false;\n  }\n\n  private showMainHeader() {\n    this.showHeader = !!(this.select && !this.hideSelectAll && this.items && this.items.length);\n  }\n\n}\n","import { Directive, Input, TemplateRef } from '@angular/core';\n\n/**\n * @usedBy PoListViewComponent\n *\n * @description\n *\n * Esta diretiva permite que sejam apresentadas informaÃ§Ãµes essenciais de cada item.\n *\n * Deve-se utilizar como parÃ¢metro a referÃªncia do item e/ou Ã­ndice, sendo por padrÃ£o o item.\n *  - Item: `item` determina o item da linha corrente.\n *  - Ãndice: `index` determina o Ã­ndice da linha corrente.\n *\n * Esta diretiva pode ser usada de duas formas: explÃ­cita ou *syntax sugar*. Veja a seguir ambos, respectivamente:\n *\n * ```\n * ...\n * <po-list-view\n *   p-property-title=\"name\"\n *   [p-items]=\"[{id: 1, name: \"Register\", email: register@portinari.com}]\">\n *\n *   <ng-template p-list-view-content-template let-item let-code=\"index\">\n *     <div class=\"po-row\">\n *       <po-info class=\"po-md-6\" p-label=\"Code\" [p-value]=\"code\"></po-info>\n *       <po-info class=\"po-md-6\" p-label=\"Email\" [p-value]=\"item.email\"></po-info>\n *     </div>\n *   </ng-template>\n *\n * </po-list-view>\n *\n * ...\n * ```\n *\n * ```\n * ...\n * <po-list-view\n *    p-property-title=\"name\"\n *    [p-items]=\"[{id: 1, name: \"Register\", email: register@portinari.com}]\">\n *\n *    <div *p-list-view-content-template=\"let item, let i=index\" class=\"po-row\">\n *      <po-info class=\"po-md-12\" p-label=\"Email\" [p-value]=\"item.email\"></po-info>\n *    </div>\n * </po-list-view>\n * ...\n *\n * ```\n *\n * A diretiva **p-list-view-content-template**, possibilita tambÃ©m alterar o tÃ­tulo dos itens. Para isto,\n * Ã© necessÃ¡rio atribuir a referÃªncia da funÃ§Ã£o que faz a alteraÃ§Ã£o, Ã  propriedade `p-title`,\n * a mesma deve retornar um valor do tipo *string*. Veja o exemplo a seguir:\n *\n * ```\n * ...\n * @Component({\n *    selector: 'app-root',\n *    template: `\n *      ...\n *      <po-list-view\n *        [p-items]=\"items\">\n *        <ng-template p-list-view-content-template let-item [p-title]=\"customTitle\">\n *          <div class=\"po-row\">\n *            <po-info class=\"po-md-12\" p-label=\"Customer\" [p-value]=\"item.customer\"></po-info>\n *          </div>\n *        </ng-template>\n *      ...\n *    `\n * })\n * export class AppComponent {\n *    public items = [{\n *      code: 1200,\n *      product: 'Rice',\n *      customer: 'Supermarket 1',\n *    }, {\n *      code: 1355,\n *      product: 'Bean',\n *      customer: 'Supermarket 2'\n *    }];\n *\n *    customTitle(item) {\n *      return `${item.code} - ${item.product}`;\n *    }\n * }\n * ```\n */\n@Directive({\n  selector: '[p-list-view-content-template]'\n})\nexport class PoListViewContentTemplateDirective {\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * FunÃ§Ã£o que deve retornar um valor do tipo `string`, que serÃ¡ utilizado como o tÃ­tulo de cada item da lista.\n   *\n   * > Por parÃ¢metro serÃ¡ enviado o item corrente, onde poderÃ¡ utilizÃ¡-lo para recuperar dados sobre o mesmo.\n   */\n  @Input('p-title') title: (item) => string;\n\n  // NecessÃ¡rio manter templateRef para o funcionamento do row template.\n  constructor(public templateRef: TemplateRef<any>) { }\n\n}\n","import { Directive, TemplateRef, Input } from '@angular/core';\n\n/**\n * @usedBy PoListViewComponent\n *\n * @description\n *\n * Esta diretiva permite que sejam apresentadas informaÃ§Ãµes adicionais de cada item, construindo um\n * botÃ£o `Exibir detalhes` abaixo do conteÃºdo principal do item.\n *\n * Deve-se utilizar como parÃ¢metro a referÃªncia do item e/ou Ã­ndice, sendo por padrÃ£o o item.\n *  - Item: `item` determina o item da linha corrente.\n *  - Ãndice: `index` determina o Ã­ndice da linha corrente.\n *\n * Esta diretiva pode ser usada de duas formas: explÃ­cita ou *syntax sugar*. Veja a seguir ambos, respectivamente:\n *\n * ```\n * ...\n * <po-list-view\n *   p-property-title=\"name\"\n *   [p-items]=\"items\">\n *\n *   <ng-template p-list-view-detail-template let-item let-code=\"index\">\n *     <div class=\"po-row\">\n *       <po-info class=\"po-md-6\" p-label=\"Code\" [p-value]=\"code\"></po-info>\n *       <po-info class=\"po-md-12\" p-label=\"Email\" [p-value]=\"item.email\"></po-info>\n *     </div>\n *   </ng-template>\n *\n * </po-list-view>\n *\n * ...\n * ```\n *\n * ```\n * ...\n * <po-list-view\n *    p-property-title=\"name\"\n *    [p-items]=\"items\">\n *    <div *p-list-view-detail-template=\"let item, let i=index\" class=\"po-row\">\n *      <po-info class=\"po-md-12\" p-label=\"Email\" [p-value]=\"item.email\"></po-info>\n *    </div>\n * </po-list-view>\n * ...\n *\n * ```\n */\n@Directive({\n  selector: '[p-list-view-detail-template]'\n})\nexport class PoListViewDetailTemplateDirective {\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * FunÃ§Ã£o que deve retornar um valor do tipo `boolean`, que serÃ¡ utilizado como a validaÃ§Ã£o para que o detalhe de item\n   * da lista inicie aberto ou fechado.\n   *\n   */\n  @Input('p-show-detail') showDetail: (item) => boolean;\n\n  // NecessÃ¡rio manter templateRef para o funcionamento do row template.\n  constructor(public templateRef: TemplateRef<any>) { }\n\n}\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { AfterContentInit, ChangeDetectorRef, Component, ContentChild, DoCheck, IterableDiffers, ViewChild } from '@angular/core';\n\nimport { isTypeof } from '../../utils/util';\nimport { PoPopupComponent } from '../po-popup/po-popup.component';\n\nimport { PoListViewAction } from './interfaces/po-list-view-action.interface';\nimport { PoListViewBaseComponent } from './po-list-view-base.component';\nimport { PoListViewContentTemplateDirective } from './po-list-view-content-template/po-list-view-content-template.directive';\nimport { PoListViewDetailTemplateDirective } from './po-list-view-detail-template/po-list-view-detail-template.directive';\n\n/**\n * @docsExtends PoListViewBaseComponent\n *\n * @example\n *\n * <example name=\"po-list-view-basic\" title=\"Portinari List View Basic\">\n *  <file name=\"sample-po-list-view-basic/sample-po-list-view-basic.component.html\"> </file>\n *  <file name=\"sample-po-list-view-basic/sample-po-list-view-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-list-view-labs\" title=\"Portinari List View Labs\">\n *  <file name=\"sample-po-list-view-labs/sample-po-list-view-labs.component.html\"> </file>\n *  <file name=\"sample-po-list-view-labs/sample-po-list-view-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-list-view-hiring-processes\" title=\"Portinari List View - Hiring Processes\">\n *  <file name=\"sample-po-list-view-hiring-processes/sample-po-list-view-hiring-processes.component.html\"> </file>\n *  <file name=\"sample-po-list-view-hiring-processes/sample-po-list-view-hiring-processes.component.ts\"> </file>\n *  <file name=\"sample-po-list-view-hiring-processes/sample-po-list-view-hiring-processes.service.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-list-view',\n  templateUrl: './po-list-view.component.html',\n  animations: [\n    trigger('showHideDetail', [\n      state('*', style({ 'overflow-y': 'visible' })),\n      state('void', style({ 'overflow-y': 'hidden' })),\n      transition('* => void', [\n        style({ height: '*', 'overflow-y': 'hidden' }),\n        animate(100, style({ height: 0 }))\n      ]),\n      transition('void => *', [\n        style({ height: '0' }),\n        animate(100, style({ height: '*' }))\n      ])\n    ])\n  ]\n})\nexport class PoListViewComponent extends PoListViewBaseComponent implements AfterContentInit, DoCheck {\n\n  @ContentChild(PoListViewContentTemplateDirective, { static: true }) listViewContentTemplate: PoListViewContentTemplateDirective;\n  @ContentChild(PoListViewDetailTemplateDirective, { static: true }) listViewDetailTemplate: PoListViewDetailTemplateDirective;\n\n  @ViewChild('popup', { static: true }) poPopupComponent: PoPopupComponent;\n\n  private differ;\n\n  constructor(private changeDetector: ChangeDetectorRef, differs: IterableDiffers) {\n    super();\n    this.differ = differs.find([]).create(null);\n  }\n\n  get hasContentTemplate(): boolean {\n    return !!this.listViewContentTemplate;\n  }\n\n  get hasDetailTemplate(): boolean {\n    return !!this.listViewDetailTemplate;\n  }\n\n  get displayShowMoreButton(): boolean {\n    return this.items && this.items.length > 0 && this.showMore.observers.length > 0;\n  }\n\n  get showButtonsActions(): boolean {\n    return this.visibleActions && this.visibleActions.length > 0 && this.visibleActions.length <= 2;\n  }\n\n  get showPopupActions(): boolean {\n    return this.visibleActions && this.visibleActions.length > 2;\n  }\n\n  get titleHasAction() {\n    return this.titleAction.observers.length > 0;\n  }\n\n  get visibleActions() {\n    return this.actions && this.actions.filter(action => action.visible !== false);\n  }\n\n  ngAfterContentInit(): void {\n    this.initShowDetail();\n  }\n\n  ngDoCheck() {\n    this.checkItemsChange();\n  }\n\n  checkTitleType(item: any) {\n    if (this.propertyLink && item[this.propertyLink] ) {\n      return item[this.propertyLink].startsWith('http') ? 'externalLink' : 'internalLink';\n    }\n\n    return 'noLink';\n  }\n\n  getItemTitle(item) {\n    return this.hasContentTemplate && this.listViewContentTemplate.title ?\n    this.listViewContentTemplate.title(item) : item[this.propertyTitle];\n  }\n\n  hasItems(): boolean {\n    return this.items && this.items.length > 0;\n  }\n\n  returnBooleanValue(listViewAction: PoListViewAction, item: any) {\n    return isTypeof(listViewAction.disabled, 'function') ? (<any>listViewAction).disabled(item) : listViewAction.disabled;\n  }\n\n  trackBy(index) {\n    return index;\n  }\n\n  togglePopup(item, targetRef: HTMLElement) {\n    this.popupTarget = targetRef;\n    this.changeDetector.detectChanges();\n\n    this.poPopupComponent.toggle(item);\n  }\n\n  private checkItemsChange() {\n    const changesItems = this.differ.diff(this.items);\n\n    if (changesItems && this.selectAll) {\n      this.selectAll = null;\n    }\n\n    if (changesItems && this.items && this.items.length && this.select && !this.hideSelectAll) {\n      this.showHeader = true;\n    }\n  }\n\n  private initShowDetail() {\n    if (this.items && this.items.length > 0 && this.hasDetailTemplate && this.listViewDetailTemplate.showDetail) {\n      this.items.forEach(item => item.$showDetail = this.listViewDetailTemplate.showDetail(item));\n    }\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoButtonModule } from '../po-button/po-button.module';\nimport { PoPopupModule } from '../po-popup/po-popup.module';\n\nimport { PoListViewComponent } from './po-list-view.component';\nimport { PoListViewContentTemplateDirective } from './po-list-view-content-template/po-list-view-content-template.directive';\nimport { PoListViewDetailTemplateDirective } from './po-list-view-detail-template/po-list-view-detail-template.directive';\n\n/**\n * @description\n *\n * MÃ³dulo do componente `po-list-view`.\n *\n * > Para o correto funcionamento do componente `po-list-view`, deve ser importado o mÃ³dulo `BrowserAnimationsModule` no\n * > mÃ³dulo principal da sua aplicaÃ§Ã£o.\n *\n * MÃ³dulo da aplicaÃ§Ã£o:\n * ```\n * import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n * import { PoModule } from '@portinari/portinari-ui';\n * ...\n *\n * @NgModule({\n *   imports: [\n *     BrowserModule,\n *     BrowserAnimationsModule,\n *     ...\n *     PoModule\n *   ],\n *   declarations: [\n *     AppComponent,\n *     ...\n *   ],\n *   providers: [],\n *   bootstrap: [AppComponent]\n * })\n * export class AppModule { }\n * ```\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    PoButtonModule,\n    PoPopupModule\n  ],\n  declarations: [\n    PoListViewComponent,\n    PoListViewContentTemplateDirective,\n    PoListViewDetailTemplateDirective\n  ],\n  exports: [\n    PoListViewComponent,\n    PoListViewContentTemplateDirective,\n    PoListViewDetailTemplateDirective\n  ],\n  providers: [],\n  schemas: []\n})\nexport class PoListViewModule { }\n","import { Input } from '@angular/core';\n\nimport { convertToInt } from '../../utils/util';\n\nconst PO_BADGE_COLORS = [\n  'color-01',\n  'color-02',\n  'color-03',\n  'color-04',\n  'color-05',\n  'color-06',\n  'color-07',\n  'color-08',\n  'color-09',\n  'color-10',\n  'color-11',\n  'color-12',\n];\nconst PO_BADGE_COLOR_DEFAULT = 'color-07';\n\n/**\n * @description\n *\n * @docsPrivate\n *\n * Componente utilizado no `po-menu` para exibir por exemplo a quantidade de tarefas pendentes.\n */\nexport class PoBadgeBaseComponent {\n\n  private _color: string;\n  private _value: number;\n\n  badgeValue: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a cor de fundo do componente e aceita os valores:\n   *\n   * <span class=\"dot po-color-01\"></span> `color-01`\n   *\n   * <span class=\"dot po-color-02\"></span> `color-02`\n   *\n   * <span class=\"dot po-color-03\"></span> `color-03`\n   *\n   * <span class=\"dot po-color-04\"></span> `color-04`\n   *\n   * <span class=\"dot po-color-05\"></span> `color-05`\n   *\n   * <span class=\"dot po-color-06\"></span> `color-06`\n   *\n   * <span class=\"dot po-color-07\"></span> `color-07`\n   *\n   * <span class=\"dot po-color-08\"></span> `color-08`\n   *\n   * <span class=\"dot po-color-09\"></span> `color-09`\n   *\n   * <span class=\"dot po-color-10\"></span> `color-10`\n   *\n   * <span class=\"dot po-color-11\"></span> `color-11`\n   *\n   * <span class=\"dot po-color-12\"></span> `color-12`\n   *\n   * @default `color-07`\n   */\n  @Input('p-color') set color(value: string) {\n    this._color = PO_BADGE_COLORS.includes(value) ? value : PO_BADGE_COLOR_DEFAULT;\n  }\n\n  get color(): string {\n    return this._color;\n  }\n\n  /**\n   * @description\n   *\n   * NÃºmero exibido no componente, caso o mesmo seja maior que 99 o valor exibido serÃ¡ 99+.\n   */\n  @Input('p-value') set value(value: number) {\n    this._value = convertToInt(value);\n    this.setBadgeValue(this._value);\n  }\n\n  get value(): number {\n    return this._value;\n  }\n\n  private setBadgeValue(value: number) {\n    const validRangeValue = (value || value === 0) && (value >= 0 && value < 100);\n    this.badgeValue = validRangeValue ? value.toString() : value > 99 ? '99+' : undefined;\n  }\n\n}\n","import { Component } from '@angular/core';\n\nimport { PoBadgeBaseComponent } from './po-badge-base.component';\n\n/**\n * @docsExtends PoBadgeBaseComponent\n *\n * @docsPrivate\n */\n@Component({\n  selector: 'po-badge',\n  templateUrl: './po-badge.component.html'\n})\nexport class PoBadgeComponent extends PoBadgeBaseComponent { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoBadgeComponent } from './po-badge.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente po-badge.\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    PoBadgeComponent\n  ],\n  exports: [\n    PoBadgeComponent\n  ]\n})\nexport class PoBadgeModule { }\n","import { Input } from '@angular/core';\n\nimport { v4 as uuid } from 'uuid';\nimport { browserLanguage, convertToBoolean, convertToInt, isExternalLink, isTypeof, poLocaleDefault, validValue } from '../../utils/util';\n\nimport { PoMenuFilter } from './po-menu-filter/po-menu-filter.interface';\nimport { PoMenuItem } from './po-menu-item.interface';\nimport { PoMenuService } from './services/po-menu.service';\n\nexport const poMenuLiteralsDefault = {\n  en: { itemNotFound: 'Item not found.' },\n  es: { itemNotFound: 'Elemento no encontrado.' },\n  pt: { itemNotFound: 'Item nÃ£o encontrado.' }\n};\n\n/**\n * @description\n *\n * Este Ã© um componente de menu lateral que Ã© utilizado para navegaÃ§Ã£o nas pÃ¡ginas de uma aplicaÃ§Ã£o.\n *\n * O componente po-menu recebe uma lista de objetos do tipo `MenuItem` com as informaÃ§Ãµes dos itens de menu como\n * textos, links para redirecionamento, aÃ§Ãµes, atÃ© 4 nÃ­veis de menu e Ã­cones para o primeiro nÃ­vel de menu.\n */\nexport abstract class PoMenuBaseComponent {\n\n  private _collapsed = false;\n  private _filter = false;\n  private _level;\n  private _logo: string;\n  private _maxLevel = 4;\n  private _menus = [];\n  private _params: any;\n  private _service: string | PoMenuFilter;\n  private _shortLogo: string;\n\n  allowIcons: boolean;\n  allowCollapseMenu: boolean;\n\n  filteredItems;\n  filterService: PoMenuFilter;\n\n  readonly literals = {\n    ...poMenuLiteralsDefault[poLocaleDefault],\n    ...poMenuLiteralsDefault[browserLanguage()]\n  };\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Colapsa (retrai) o menu e caso receba o valor `false` expande o menu.\n   *\n   * > Utilize esta propriedade para iniciar o menu colapsado.\n   *\n   * > Ao utilizar os mÃ©todos [`colapse`](documentation/po-menu#colapseMethod), [`expand`](documentation/po-menu#expandMethod) e\n   * [`toggle`](documentation/po-menu#toggleMethod) o valor desta propriedade nÃ£o Ã© alterado.\n   *\n   * **Importante:**\n   *\n   * > O menu serÃ¡ colapsado/expandido apenas se todos os itens de menu tiverem valor nas propriedades `icon` e `shortLabel`.\n   *\n   * @default `false`\n   */\n  @Input('p-collapsed') set collapsed(collapsed: boolean) {\n    this._collapsed = convertToBoolean(collapsed);\n\n    this.validateCollapseClass();\n  }\n\n  get collapsed() {\n    return this._collapsed;\n  }\n\n  /** Lista dos itens do menu. Se o valor estiver indefinido ou invÃ¡lido, serÃ¡ inicializado como um array vazio. */\n  @Input('p-menus') set menus(menus: Array<PoMenuItem>) {\n    this._menus = Array.isArray(menus) ? menus : [];\n  }\n\n  get menus() {\n    return this._menus;\n  }\n\n  get maxLevel() {\n    return this._maxLevel;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Habilita um campo para pesquisa no menu.\n   * A pesquisa Ã© realizada em todos os nÃ­veis do menu e busca apenas pelos itens que contÃ©m uma aÃ§Ã£o e/ou link definidos,\n   * ou tambÃ©m, pode ser realizada atravÃ©s de um serviÃ§o definido na propriedade `p-service`.\n   *\n   * > O campo de pesquisa Ã© desabilitado se o menu estiver colapsado.\n   *\n   * @default `false`\n   */\n  @Input('p-filter') set filter(filter: boolean) {\n    this._filter = <any>filter === '' ? true : convertToBoolean(filter);\n    this.filteredItems = [...this._menus];\n  }\n\n  get filter() {\n    return this._filter;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Nesta propriedade deve ser informada a URL do serviÃ§o em que serÃ¡ utilizado para realizar o filtro de itens do\n   * menu quando realizar uma busca. Caso haja a necessidade de customizaÃ§Ã£o, pode ser informado um\n   * serviÃ§o implementando a interface `PoMenuFilter`.\n   *\n   * Caso utilizada uma URL, o serviÃ§o deve retornar os dados conforme o\n   * [Guia de implementaÃ§Ã£o de API da Portinari](http://tdn.portinari.com/display/public/INT/Guia+de+implementacao+das+APIs+PORTINARI).\n   *\n   * Quando utilizada uma URL de serviÃ§o, serÃ¡ realizado um *GET* na URL informada, passando o valor digitado\n   * no parÃ¢metro `search`, veja exemplo:\n   *\n   * > O filtro no serviÃ§o serÃ¡ realizado caso contenha no mÃ­nimo trÃªs caracteres no campo de busca, por exemplo `tot`.\n   *\n   * ```\n   * <po-menu p-service=\"/api/v1/fnd/menu\">\n   * </po-menu>\n   *\n   * RequisiÃ§Ã£o: GET /api/v1/fnd/menu?search=contas\n   * ```\n   *\n   * > Ã necessÃ¡rio que propriedade `p-filter` esteja habilitada.\n   */\n  @Input('p-service') set service(value: string | PoMenuFilter) {\n    this._service = value || undefined;\n\n    this.configService(this.service);\n  }\n\n  get service() {\n    return this._service;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Deve ser informado um objeto que deseja-se utilizar na requisiÃ§Ã£o de filtro dos itens de menu.\n   *\n   * Caso utilizado um serviÃ§o customizado, implementando a interface `PoMenuFilter`, o valor desta propriedade\n   * serÃ¡ passado como parÃ¢metro, na funÃ§Ã£o `getFilteredData`.\n   *\n   * Quando utilizada uma URL de serviÃ§o, serÃ¡ realizado um *GET* na URL informada, passando os valores informados\n   * nesta propriedade em conjunto com o parÃ¢metro `search`, veja exemplo:\n   *\n   * ```\n   * <po-menu p-service=\"/api/v1/fnd/menu\" [p-params]=\"{ company: 1, user: 297767512 }\">\n   * </po-menu>\n   *\n   * RequisiÃ§Ã£o: GET /api/v1/fnd/menu?search=contas&company=1&user=297767512\n   * ```\n   */\n  @Input('p-params') set params(value: any) {\n    this._params = value && isTypeof(value, 'object') ? value : undefined;\n  }\n\n  get params() {\n    return this._params;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caminho para a logomarca, que serÃ¡ exibida quando o componente estiver expandido, localizada na parte superior.\n   *\n   * > **Importante:**\n   * - Caso esta propriedade estiver indefinida ou invÃ¡lida o espaÃ§o para logomarca serÃ¡ removido.\n   * - Como boa prÃ¡tica, indica-se utilizar imagens com atÃ© `24px` de altura e `224px` de largura,\n   * caso ultrapassar esses valores a imagem serÃ¡ readequada no espaÃ§o disponÃ­vel.\n   */\n  @Input('p-logo') set logo(value: any) {\n    this._logo = isTypeof(value, 'string') && value.trim() ? value : undefined;\n  }\n\n  get logo() {\n    return this._logo;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caminho para a logomarca, que serÃ¡ exibida quando o componente estiver colapsado, localizada na parte superior.\n   *\n   * > **Importante:**\n   * - Caso esta propriedade estiver indefinida ou invÃ¡lida passa a assumir o valor informado na propriedade `p-logo` e na ausÃªncia desta o\n   * espaÃ§o para logomarca serÃ¡ removido.\n   * - Como boa prÃ¡tica, indica-se utilizar imagens com atÃ© `48px` de altura e `48px` de largura,\n   * caso ultrapassar esses valores a imagem serÃ¡ readequada no espaÃ§o disponÃ­vel.\n   * - Caso nÃ£o informar um valor, esta propriedade passa a assumir o valor informado na propriedade `p-logo`.\n   */\n  @Input('p-short-logo') set shortLogo(value: any) {\n    this._shortLogo = isTypeof(value, 'string') && value.trim() ? value : undefined;\n  }\n\n  get shortLogo() {\n    return this._shortLogo;\n  }\n\n  constructor(public menuService: PoMenuService) { }\n\n  private configService(service: string | PoMenuFilter) {\n    if (typeof service === 'string' && service.trim()) {\n      // service url\n      this.menuService.configProperties(service);\n      this.filterService = this.menuService;\n\n    } else if (typeof service === 'object' && service.getFilteredData) {\n      // custom service\n      this.filterService = service;\n    } else {\n      this.filterService = undefined;\n    }\n  }\n\n  protected setMenuExtraProperties() {\n    this.allowIcons = !!this.menus.length;\n    this.allowCollapseMenu = !!this.menus.length;\n\n    this.menus.forEach(menuItem => {\n      this._level = 1;\n      this.allowIcons = this.allowIcons ? validValue(menuItem.icon) : false;\n      this.allowCollapseMenu = this.allowCollapseMenu && this.allowIcons ? validValue(menuItem.shortLabel) : false;\n      this.removeBadgeAlert(menuItem);\n      this.setMenuItemProperties(menuItem);\n\n      if (menuItem.subItems) {\n        this._level++;\n        this.processSubItems(menuItem);\n      }\n    });\n  }\n\n  protected setMenuItemProperties(menuItem: PoMenuItem): void {\n    menuItem['id'] = menuItem['id'] || uuid();\n    menuItem['level'] = this._level;\n    menuItem['type'] = this.setMenuType(menuItem);\n  }\n\n  protected validateMenus(menus): void {\n    menus.forEach(menu => this.validateMenu(menu));\n  }\n\n  private processSubItems(menu) {\n    menu.subItems.forEach((menuItem, index, menuItems) => {\n\n      const previousItem = menuItems[index - 1];\n      if (previousItem && previousItem.subItems) {\n        this._level = previousItem['level'];\n      }\n\n      if (this._level <= this.maxLevel) {\n        this.setMenuItemProperties(menuItem);\n\n        if (menuItem.subItems) {\n          this._level++;\n          this.processSubItems(menuItem);\n        }\n      }\n\n      if (!menu['badgeAlert']) {\n        menu = this.setMenuBadgeAlert(menu, menuItem);\n      }\n\n    });\n\n    menu.subItems = Object.assign([], menu.subItems);\n  }\n\n  private removeBadgeAlert(menuItem: PoMenuItem): void {\n\n    if (menuItem['badgeAlert']) {\n      delete menuItem['badgeAlert'];\n    }\n\n    if (menuItem.subItems) {\n      menuItem.subItems.forEach(subItem => this.removeBadgeAlert(subItem));\n    }\n\n  }\n\n  private setMenuBadgeAlert(parent: PoMenuItem, child: PoMenuItem): PoMenuItem {\n    const childHasSubItems = child.subItems && child.subItems.length;\n    const childHasBadgeAlert = child['badgeAlert'];\n    const childHasBadge = child.badge && convertToInt(child.badge.value) >= 0;\n\n    parent['badgeAlert'] = childHasBadgeAlert || (childHasBadge && !childHasSubItems);\n\n    return parent;\n  }\n\n  private setMenuType(menuItem: PoMenuItem): string {\n    if (menuItem.subItems && menuItem.subItems.length > 0 && this._level < this.maxLevel) {\n      return 'subItems';\n    }\n    if (!menuItem.link) {\n      return 'noLink';\n    }\n    if (isExternalLink(menuItem.link)) {\n      return 'externalLink';\n    }\n    return 'internalLink';\n  }\n\n  private validateMenu(menuItem: PoMenuItem): void {\n    if (!menuItem.label || menuItem.label.trim() === '') {\n      throw new Error('O atributo PoMenuItem.label nÃ£o pode ser vazio.');\n    } else if (menuItem.subItems) {\n      menuItem.subItems.forEach(subItem => {\n        this.validateMenu(subItem);\n      });\n    }\n  }\n\n  protected abstract validateCollapseClass();\n\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n/**\n * @usedBy PoMenuComponent\n *\n * @description\n *\n * Esta diretiva permite adicionar um conteÃºdo personalizado entre a logo e o campo de filtro do cabeÃ§alho do\n * [`po-menu`](/documentation/po-menu).\n *\n * Para personalizar o conteÃºdo do cabeÃ§alho deve-se utilizar a diretiva `p-menu-header-template` dentro da *tag* do\n * [`po-menu`](/documentation/po-menu). Podendo ser utilizada de duas formas:\n *\n * Com `ng-template`\n * ```\n * ...\n * <po-menu [p-menus]=\"menus\">\n *   <ng-template p-menu-header-template>\n *     ...\n *   </ng-template>\n * </po-menu>\n * ...\n * ```\n *\n * ou com *syntax sugar*\n * ```\n * ...\n * <po-menu [p-menus]=\"menus\">\n *   <div *p-menu-header-template>\n *     ...\n *   </div>\n * </po-menu>\n * ...\n * ```\n *\n * > Quando o menu estiver colapsado ou tela for _mobile_ o conteÃºdo personalizado nÃ£o serÃ¡ exibido.\n */\n@Directive({\n  selector: '[p-menu-header-template]'\n})\nexport class PoMenuHeaderTemplateDirective {\n\n  // NecessÃ¡rio manter templateRef para o funcionamento do row template.\n  constructor(public templateRef: TemplateRef<any>) { }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Observable, Subject } from 'rxjs';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * ServiÃ§o que implementa a comunicaÃ§Ã£o entre os items do po-menu.\n */\n@Injectable()\nexport class PoMenuItemsService {\n  private subjectParent = new Subject<any>();\n  private subjectChild = new Subject<any>();\n\n  // Envia informaÃ§Ãµes do click do po-menu-item para o po-menu\n  sendToParentMenuClicked(menu: object) {\n    this.subjectChild.next(menu);\n  }\n\n  // Recebe do po-menu-item sua informaÃ§Ã£o de click.\n  receiveFromChildMenuClicked() {\n    return this.subjectChild.asObservable();\n  }\n\n  // Envia para os po-menu-item a resposta do processamento de click de um po-menu-item.\n  sendToChildMenuClicked(menu: object) {\n    this.subjectParent.next(menu);\n  }\n\n  // Recebe do po-menu as informaÃ§Ãµes processadas do click de um po-menu-item.\n  receiveFromParentMenuClicked(): Observable<any> {\n    return this.subjectParent.asObservable();\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nimport { PoMenuItemFiltered } from '../po-menu-item/po-menu-item-filtered.interface';\nimport { PoMenuFilter } from '../po-menu-filter/po-menu-filter.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * ServiÃ§o que implementa a interface `PoMenuFilter`, utilizado para fazer requisiÃ§Ãµes ao serviÃ§o informado pelo usuÃ¡rio,\n * caso for uma URL, no componente `po-menu`.\n */\n@Injectable()\nexport class PoMenuService implements PoMenuFilter {\n\n  private _url: string;\n\n  get url(): string { return this._url; }\n\n  constructor(private http: HttpClient) { }\n\n  configProperties(url: string) {\n    this._url = url;\n  }\n\n  getFilteredData(search: string, params?: any): Observable<Array<PoMenuItemFiltered>> {\n    const filterParams = {\n      search,\n      ...params\n    };\n\n    return this.http.get(this.url, { params: filterParams })\n      .pipe(map((response: { items: Array<PoMenuItemFiltered> }) => response && response.items));\n  }\n\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  DoCheck,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { NavigationCancel, NavigationEnd, Router } from '@angular/router';\n\nimport { map } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\nimport { getFormattedLink, isMobile, openExternalLink } from '../../utils/util';\n\nimport { PoMenuBaseComponent } from './po-menu-base.component';\nimport { PoMenuHeaderTemplateDirective } from './po-menu-header-template/po-menu-header-template.directive';\nimport { PoMenuItem } from './po-menu-item.interface';\nimport { PoMenuItemFiltered } from './po-menu-item/po-menu-item-filtered.interface';\nimport { PoMenuItemsService } from './services/po-menu-items.service';\nimport { PoMenuService } from './services/po-menu.service';\n\nconst poMenuDebounceTime = 400;\nconst poMenuMinLength = 3;\nconst poMenuRootLevel = 1;\n\n/**\n * @docsExtends PoMenuBaseComponent\n *\n * @description\n *\n * Aparece completo em telas com largura maior que 1200px, caso contrÃ¡rio o menu Ã© escondido e chamado por meio de um botÃ£o.\n *\n * O menu tambÃ©m pode ser colapsado. Essa opÃ§Ã£o Ã© habilitada quando todos os itens de primeiro nÃ­vel possuÃ­rem Ã­cones e textos curtos.\n * Se colapsado, somente os itens de primeiro nÃ­vel serÃ£o exibidos e, caso o item selecionado possua sub-nÃ­veis,\n * entÃ£o o menu alternarÃ¡ novamente para o estado aberto.\n *\n * Existe a possibilidade de customizar a logomarca, que Ã© exibida na parte superior do componente.\n *\n * E para adicionar um conteÃºdo personalizado entre a logomarca e o campo de filtro,\n * basta adicionar este conteÃºdo com a diretiva [**p-menu-header-template**](/documentation/po-menu-header-template).\n *\n * Caso utilizar o filtro de menus, Ã© possÃ­vel realizar buscas em serviÃ§o, apenas informando a URL do serviÃ§o ou a instÃ¢ncia de\n * um serviÃ§o customizado implementando a interface `PoMenuFilter`.\n *\n * Para o menu funcionar corretamente Ã© necessÃ¡rio importar o `RouterModule` e `Routes` do mÃ³dulo principal de\n *  sua aplicaÃ§Ã£o:\n *\n * ````\n * import { RouterModule, Routes } from '@angular/router';\n *\n * ...\n *\n * @NgModule({\n *   imports: [\n *     RouterModule,\n *     Routes,\n *     ...\n *     PoModule,\n *     ...\n *   ],\n *   declarations: [\n *     AppComponent\n *   ],\n *   providers: [],\n *   bootstrap: [AppComponent]\n * })\n * export class AppModule { }\n * ```\n *\n * AlÃ©m disso Ã© necessÃ¡rio criar um mÃ³dulo configurando as rotas da aplicaÃ§Ã£o.\n *\n * ```\n * import { NgModule } from '@angular/core';\n *\n * import { RouterModule, Routes } from '@angular/router';\n *\n * import { HelloWorldComponent } from './hello-world/hello-world.component';\n *\n * const routes: Routes = [\n *   {path: 'hello-world', component: HelloWorldComponent}\n * ];\n *\n * @NgModule({\n *   imports: [RouterModule.forRoot(routes, {useHash: true})],\n *   exports: [RouterModule]\n * })\n * export class AppRoutingModule {}\n * ```\n *\n * @example\n *\n * <example name=\"po-menu-basic\" title=\"Portinari Menu Basic\">\n *   <file name=\"sample-po-menu-basic/sample-po-menu-basic.component.html\"> </file>\n *   <file name=\"sample-po-menu-basic/sample-po-menu-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-menu-labs\" title=\"Portinari Menu Labs\">\n *   <file name=\"sample-po-menu-labs/sample-po-menu-labs.component.html\"> </file>\n *   <file name=\"sample-po-menu-labs/sample-po-menu-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-menu-human-resources\" title=\"Portinari Menu - Human Resources\">\n *   <file name=\"sample-po-menu-human-resources/sample-po-menu-human-resources.component.html\"> </file>\n *   <file name=\"sample-po-menu-human-resources/sample-po-menu-human-resources.component.ts\"> </file>\n *   <file name=\"sample-po-menu-human-resources/sample-po-menu-human-resources.service.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-menu',\n  templateUrl: './po-menu.component.html',\n  providers: [ PoMenuItemsService, PoMenuService ]\n})\nexport class PoMenuComponent extends PoMenuBaseComponent implements OnDestroy, OnInit, DoCheck {\n\n  @ContentChild(PoMenuHeaderTemplateDirective, { static: true }) menuHeaderTemplate: PoMenuHeaderTemplateDirective;\n\n  activeMenuItem: PoMenuItem;\n  collapsedMobile: boolean;\n  filterLoading = false;\n  groupedMenuItem: PoMenuItem;\n  linkActive: string;\n  mobileOpened: boolean = false;\n  noData: boolean = false;\n  parentRef: any;\n  timeoutFilter: any;\n\n  private filteringItems: boolean = false;\n  private menuInitialized: boolean = false;\n  private menuPrevious: string = null;\n  private resizeListener: () => void;\n\n  private itemSubscription: Subscription;\n  private routeSubscription: Subscription;\n\n  constructor(public changeDetector: ChangeDetectorRef,\n              viewRef: ViewContainerRef,\n              private element: ElementRef,\n              private renderer: Renderer2,\n              private router: Router,\n              private menuItemsService: PoMenuItemsService,\n              menuService: PoMenuService) {\n\n    super(menuService);\n    this.parentRef = viewRef['_view']['component'];\n  }\n\n  private get isActiveItemMenuSubMenu() {\n    return this.activeMenuItem['level'] > this.groupedMenuItem['level'];\n  }\n\n  get enableCollapse() {\n    return this.isCollapsed && !this.collapsedMobile;\n  }\n\n  get enableCollapseButton() {\n    return this.allowCollapseMenu && !this.collapsed && !this.mobileOpened;\n  }\n\n  get hasFooter() {\n    return this.allowCollapseMenu && !this.mobileOpened && this.enableCollapseButton || (this.collapsed && !this.collapsedMobile);\n  }\n\n  get isCollapsed() {\n    return this.allowCollapseMenu && this.collapsed;\n  }\n\n  ngDoCheck() {\n    if (this.filteringItems && this.filter) {\n      return;\n    }\n\n    const menuCurrent = JSON.stringify(this.menus);\n\n    if (this.menuPrevious !== menuCurrent || !this.menuInitialized) {\n      this.updateMenu();\n      this.validateCollapseClass();\n    }\n  }\n\n  ngOnDestroy() {\n    this.itemSubscription.unsubscribe();\n    this.routeSubscription.unsubscribe();\n\n    if (this.resizeListener) {\n      this.resizeListener();\n    }\n  }\n\n  ngOnInit() {\n    this.subscribeToMenuItem();\n    this.subscribeToRoute();\n\n    setTimeout(() => {\n      const urlRouter = this.checkingRouterChildrenFragments();\n      this.checkActiveMenuByUrl(urlRouter);\n    });\n  }\n\n  activateMenuByUrl(urlPath: string, menus: Array<PoMenuItem>) {\n    if (menus) {\n      return menus.some(menu => {\n        const formattedLink = getFormattedLink(menu.link);\n        if (formattedLink === urlPath) {\n          this.linkActive = formattedLink;\n          this.activateMenuItem(menu);\n          return true;\n        } else {\n          return this.activateMenuByUrl(urlPath, menu.subItems);\n        }\n      });\n    }\n  }\n\n  checkActiveMenuByUrl(urlPath: string): void {\n    if (!this.linkActive || this.linkActive !== urlPath) {\n      this.activateMenuByUrl(urlPath, this.menus);\n    }\n  }\n\n  /**\n   * <a id=\"colapseMethod\"></a>\n   *\n   * *MÃ©todo para colapsar (retrair) o menu.\n   */\n  collapse() {\n    this.validateToggleMenu(true);\n  }\n\n  debounceFilter(filter: string) {\n    clearTimeout(this.timeoutFilter);\n\n    this.timeoutFilter = setTimeout(() => {\n      this.filterProcess(filter);\n    }, poMenuDebounceTime);\n  }\n\n  /**\n   * <a id=\"expandMethod\"></a>\n   *\n   * *MÃ©todo para expandir (aumentar) o menu.\n   */\n  expand() {\n    this.validateToggleMenu(false);\n  }\n\n  subscribeToMenuItem() {\n    this.itemSubscription = this.menuItemsService.receiveFromChildMenuClicked().subscribe((menu: PoMenuItem) => {\n      this.clickMenuItem(menu);\n    });\n  }\n\n  subscribeToRoute() {\n    this.routeSubscription = this.router.events.subscribe(val => {\n      if (val instanceof NavigationEnd || val instanceof NavigationCancel) {\n        const urlRouter = this.checkingRouterChildrenFragments();\n        this.checkActiveMenuByUrl(urlRouter);\n      }\n    });\n  }\n\n  /**\n   * <a id=\"toggleMethod\"></a>\n   * *MÃ©todo que colapsa e expande o menu alternadamente.\n   *\n   * > *Os mÃ©todos apenas vÃ£o colapsar/expandir o menu se:\n   *  - Todos os itens de menu tiverem valor nas propriedades `icon` e `shortLabel`.\n   */\n  toggle() {\n    this.validateToggleMenu(!this.collapsed);\n  }\n\n  toggleMenuMobile(): void {\n    this.mobileOpened = !this.mobileOpened;\n    this.collapsedMobile = this.collapsed && this.mobileOpened;\n\n    this.validateCollapseClass(this.collapsedMobile);\n\n    if (isMobile()) {\n      return;\n    }\n\n    if (this.mobileOpened) {\n      this.createResizeListener();\n    }\n  }\n\n  private activateCollapseSubMenuItem() {\n\n    this.clearGroupMenuIfFirstLevel(this.activeMenuItem);\n\n    if (!this.collapsed && this.activeMenuItem['level'] > poMenuRootLevel && this.isActiveItemMenuSubMenu) {\n      this.openParentMenu(this.activeMenuItem);\n    }\n  }\n\n  private activateMenuItem(menu: PoMenuItem): void {\n    this.activeMenuItem = menu;\n    this.linkActive = menu.link;\n    if (this.activeMenuItem['level'] > poMenuRootLevel) {\n      this.openParentMenu(this.activeMenuItem);\n    } else {\n      this.groupedMenuItem = null;\n    }\n    this.menuItemsService.sendToChildMenuClicked({ active: this.activeMenuItem, grouped: this.groupedMenuItem, activatedByRoute: true });\n  }\n\n  private areSubMenus(menus: Array<PoMenuItem>) {\n    return menus.every(menu => menu['level'] > poMenuRootLevel);\n  }\n\n  private checkingRouterChildrenFragments() {\n    const childrenPrimary = this.router.parseUrl(this.router.url).root.children['primary'];\n\n    return childrenPrimary ? `/${childrenPrimary.segments.map(it => it.path).join('/')}` : '';\n  }\n\n  private clearGroupMenuIfFirstLevel(activeMenuItem: PoMenuItem) {\n    if (activeMenuItem['level'] === poMenuRootLevel) {\n      this.groupedMenuItem = undefined;\n    }\n  }\n\n  private clickMenuItem(menu: PoMenuItem) {\n    if (menu.action) {\n      this.executeMenuAction(menu);\n    }\n\n    if (menu['type'] === 'externalLink') {\n      openExternalLink(menu.link);\n\n    } else if (menu['type'] === 'internalLink') {\n      this.activateMenuItem(menu);\n\n    } else if (menu['type'] === 'subItems') {\n      if (this.filteringItems) {\n        this.filteringItems = false;\n      }\n\n      this.groupMenuItem(menu);\n    }\n\n    if (menu['type'] !== 'subItems') {\n      this.mobileOpened = false;\n    }\n  }\n\n  private convertToMenuItemFiltered(menuItem: any = { label: '', link: '' }): PoMenuItemFiltered {\n    const { label, link } = menuItem;\n\n    const menuItemFiltered: PoMenuItemFiltered = { label, link };\n\n    this.setMenuItemProperties(menuItemFiltered);\n\n    return menuItemFiltered;\n  }\n\n  private createResizeListener() {\n    this.resizeListener = this.renderer.listen('window', 'resize', () => {\n      this.toggleResize();\n      this.resizeListener();\n    });\n  }\n\n  private executeMenuAction(menu: PoMenuItem): void {\n    if (typeof menu.action === 'string') {\n      this.parentRef[menu.action](menu);\n    } else {\n      menu.action.call(this.parentRef, menu);\n    }\n  }\n\n  private async filterItems(filter: string) {\n    const trimFilter = filter && filter.trim();\n\n    if (trimFilter) {\n      this.filteredItems = [];\n      this.filteredItems = this.filterService ? await this.filterOnService(trimFilter) : this.filterLocalItems(trimFilter);\n      this.filteringItems = true;\n    } else {\n      this.filteredItems = [...this.menus];\n      this.filteringItems = false;\n    }\n\n  }\n\n  private filterLocalItems(filter: string) {\n    const filteredItems = [];\n\n    this.findItems(this.menus, filter.toLowerCase(), filteredItems);\n\n    return filteredItems;\n  }\n\n  private filterProcess(filter: string) {\n    this.filterLoading = true;\n\n    this.filterItems(filter).then(() => {\n\n      this.filterLoading = false;\n\n      this.showNoData();\n      this.changeDetector.detectChanges();\n      this.menuItemsService.sendToChildMenuClicked({ active: this.activeMenuItem, grouped: this.groupedMenuItem });\n\n    }).catch(error => {\n      this.filterLoading = false;\n      Promise.reject(error);\n    });\n  }\n\n  private async filterOnService(search: string = '') {\n    if (search.length >= poMenuMinLength) {\n\n      return await this.filterService.getFilteredData(search, this.params)\n        .pipe(\n          map(menuItemsFiltered => menuItemsFiltered.map(menuItem => this.convertToMenuItemFiltered(menuItem)))\n        )\n        .toPromise();\n    } else {\n      return this.filteredItems;\n    }\n  }\n\n  private findItems(menus: Array<PoMenuItem>, filter: string, filteredItems: Array<any>) {\n    menus.forEach(menu => {\n      if ((menu.label.toLowerCase().includes(filter) && !menu.subItems) ||\n          (menu.subItems && this.findItems(menu.subItems, filter, filteredItems))) {\n            filteredItems.push(menu);\n      }\n    });\n  }\n\n  private findParent(menus: Array<PoMenuItem>, menuItem: PoMenuItem): PoMenuItem {\n    const getParent = function(menuItems: Array<PoMenuItem>, id) {\n      if (menuItems) {\n        for (let index = 0; index < menuItems.length; index++) {\n          const menu = menuItems[index];\n          if (menu.subItems && menu.subItems.find(subItem => subItem['id'] === id)) {\n            return menu;\n          }\n          const found = getParent(menu.subItems, id);\n          if (found) {\n            return found;\n          }\n        }\n      }\n    };\n    return getParent(menus, menuItem['id']);\n  }\n\n  private findRootParent(menus: Array<PoMenuItem>, menu: PoMenuItem): PoMenuItem {\n\n    const findParent = this.findParent;\n\n    const getRootParent = function(menuItems: Array<PoMenuItem>, menuItem): PoMenuItem {\n\n      let parent = findParent(menuItems, menuItem);\n\n      if (parent['level'] !== poMenuRootLevel) {\n        parent = getRootParent(menuItems, parent);\n      }\n      return parent;\n    };\n    return getRootParent(menus, menu);\n  }\n\n  private getActiveMenuParent(menus: Array<PoMenuItem>, activeMenuItem: PoMenuItem, groupedMenuItem: PoMenuItem) {\n    if (this.areSubMenus([groupedMenuItem, activeMenuItem])) {\n      return this.findRootParent(menus, activeMenuItem);\n    }\n  }\n\n  private groupMenuItem(menu: PoMenuItem): void {\n    if (this.collapsed) {\n      this.toggleMenuCollapse();\n    }\n\n    menu['isOpened'] = !menu['isOpened'];\n    this.groupedMenuItem = menu;\n\n    if (this.activeMenuItem && menu['isOpened']\n      && this.isActiveItemMenuSubMenu\n      && this.isRootMenuEqualGroupedMenu(this.menus, this.activeMenuItem, menu)) {\n      this.activateMenuItem(this.activeMenuItem);\n    }\n\n    this.menuItemsService.sendToChildMenuClicked({ active: this.activeMenuItem, grouped: this.groupedMenuItem });\n  }\n\n  private isRootMenuEqualGroupedMenu(menus: Array<PoMenuItem>, activeMenuItem: PoMenuItem, groupedMenuItem: PoMenuItem) {\n    const activeMenuRootParent = this.findRootParent(menus, activeMenuItem);\n    return activeMenuRootParent['id'] === groupedMenuItem['id'];\n  }\n\n  private openParentMenu(childMenu: PoMenuItem): void {\n    const parent = this.findParent(this.menus, childMenu);\n    parent['isOpened'] = true;\n    this.groupedMenuItem = parent;\n  }\n\n  private showNoData() {\n    this.noData = this.filteredItems.length === 0;\n  }\n\n  private toggleGroupedMenuItem() {\n    this.groupedMenuItem['isOpened'] = !this.collapsed && this.allowCollapseMenu;\n  }\n\n  private toggleMenuCollapse(collapsed: boolean = false) {\n\n    this.collapsed = collapsed;\n\n    if (this.groupedMenuItem && this.activeMenuItem) {\n      this.groupedMenuItem = this.getActiveMenuParent(this.menus, this.activeMenuItem, this.groupedMenuItem) || this.groupedMenuItem;\n      this.toggleGroupedMenuItem();\n    }\n\n    if (this.activeMenuItem) {\n      this.activateCollapseSubMenuItem();\n      this.menuItemsService.sendToChildMenuClicked({ active: this.activeMenuItem, grouped: this.groupedMenuItem, activatedByRoute: true });\n    }\n\n    this.updateMenu();\n  }\n\n  private toggleResize() {\n    if (this.mobileOpened) {\n      this.mobileOpened = false;\n      this.collapsedMobile = false;\n      this.validateCollapseClass(this.collapsedMobile);\n    }\n  }\n\n  private validateToggleMenu(collapsed: boolean) {\n\n    if (!this.allowCollapseMenu) {\n      return;\n    }\n\n    this.toggleMenuCollapse(collapsed);\n  }\n\n  private updateMenu() {\n    this.menuInitialized = true;\n    this.setMenuExtraProperties();\n    this.filteredItems = [...this.menus];\n    this.menuPrevious = JSON.stringify(this.menus);\n    this.validateMenus(this.menus);\n  }\n\n  protected validateCollapseClass(collapsedMobile?: boolean) {\n    const wrapper = this.element.nativeElement.parentNode;\n    this.renderer[this.isCollapsed && !collapsedMobile ? 'addClass' : 'removeClass'](wrapper, 'po-collapsed-menu');\n  }\n\n}\n","import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que apresenta o campo de pesquisa no po-menu.\n */\n@Component({\n  selector: 'po-menu-filter',\n  templateUrl: './po-menu-filter.component.html'\n})\nexport class PoMenuFilterComponent {\n\n  // VariÃ¡vel necessÃ¡ria para o po-clean identificar que deve ser criado.\n  readonly clean = true;\n\n  @Input('p-loading') loading: boolean;\n\n  // utilizado para repassar ao po-clean\n  @ViewChild('inputFilter', { read: ElementRef, static: true }) inputFilterElement: ElementRef;\n\n  @Output('p-filter') filter = new EventEmitter();\n\n  filterItems(search: string) {\n    this.filter.emit(search);\n  }\n\n}\n","import { Component, ElementRef, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { convertToInt, convertToBoolean } from '../../../utils/util';\n\nimport { PoMenuItem } from '../po-menu-item.interface';\nimport { PoMenuItemsService } from '../services/po-menu-items.service';\n\n// valor para que caibam 3 linhas de `label`\nconst poMenuItemSubItemSize = 98;\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que implementa cada item do po-menu.\n */\n@Component({\n  selector: 'po-menu-item',\n  templateUrl: './po-menu-item.component.html'\n})\nexport class PoMenuItemComponent implements OnDestroy, OnInit {\n\n  private _badgeValue: number;\n  private _isSelected: boolean = false;\n  private _isSubItem: boolean = false;\n  private _subItems: Array<PoMenuItem>;\n\n  isSelectedSubItem;\n  maxHeight: number = 0;\n\n  private itemSubscription: Subscription;\n\n  // AÃ§Ã£o que serÃ¡ chamada ao clicar no item.\n  @Input('p-action') action: string | Function;\n\n  // Indica se contÃ©m algum item filho com o badge.\n  @Input('p-badge-alert') badgeAlert: boolean;\n\n  // Cor do badge.\n  @Input('p-badge-color') badgeColor: string;\n\n  // Valor do badge.\n  @Input('p-badge-value') set badgeValue(badgeValue: number) {\n    this._badgeValue = convertToInt(badgeValue);\n  }\n\n  get badgeValue() {\n    return this._badgeValue;\n  }\n\n  // Indica se o menu estÃ¡ colapsado\n  @Input('p-collapsed-menu') collapsedMenu: boolean;\n\n  // Ãcone de menu\n  @Input('p-icon') icon: string;\n\n  // Identificador do item.\n  @Input('p-id') id: string;\n\n  // Indica se o item estÃ¡ aberto (menu agrupado)\n  @Input('p-is-opened') isOpened: boolean;\n\n  // Indica se o item estÃ¡ selecionado.\n  @Input('p-is-selected') set isSelected(value: boolean) {\n    this._isSelected = convertToBoolean(value);\n\n    this.isSelectedSubItem = this.isSelected && this.isSubItem;\n  }\n  get isSelected() {\n    return this._isSelected;\n  }\n\n  // Indica se o item Ã© um sub item\n  @Input('p-is-sub-item') set isSubItem(value: boolean) {\n    this._isSubItem = convertToBoolean(value);\n  }\n\n  get isSubItem() {\n    return this._isSubItem;\n  }\n\n  // Texto que aparecerÃ¡ representando o item.\n  @Input('p-label') label: string;\n\n  // Indica qual em nÃ­vel do po-menu encontra-se.\n  @Input('p-level') level: number;\n\n  // Link do item.\n  @Input('p-link') link?: string;\n\n  // Texto que aparecerÃ¡ representando o item.\n  @Input('p-short-label') shortLabel: string;\n\n  // Lista de sub-items.\n  @Input('p-sub-items') set subItems(subitems: Array<PoMenuItem>) {\n    this._subItems = subitems;\n    if (this.isOpened) {\n      this.calcMenuSubItemsMaxHeight();\n    }\n  }\n\n  get subItems() {\n    return this._subItems;\n  }\n\n  // Indica o tipo de item, como 'internalLink' ou 'subItems'.\n  @Input('p-type') type: string;\n\n  @ViewChild('menuSubItems', { static: false }) menuSubItems: ElementRef;\n\n  get canShowBadge() {\n    return this.type !== 'subItems' && (this.badgeValue || this.badgeValue === 0) && this.badgeValue >= 0;\n  }\n\n  constructor(private menuItemsService: PoMenuItemsService) { }\n\n  ngOnDestroy(): void {\n    this.itemSubscription.unsubscribe();\n  }\n\n  ngOnInit(): void {\n\n    // subscribe to menu component messages\n    this.itemSubscription = this.menuItemsService.receiveFromParentMenuClicked().subscribe(menu => {\n      this.processMenuItem(menu);\n    });\n  }\n\n  clickMenuItem(event): void {\n    if (!(event.ctrlKey || event.metaKey)) {\n      event.preventDefault();\n\n      // Emmit to parent\n      this.menuItemsService.sendToParentMenuClicked({\n        link: this.link,\n        action: this.action,\n        id: this.id,\n        icon: this.icon,\n        label: this.label,\n        level: this.level,\n        subItems: this.subItems,\n        isSelected: this.isSelected,\n        isOpened: this.isOpened,\n        shortLabel: this.shortLabel,\n        type: this.type\n      });\n    }\n  }\n\n  private accordionAnimation(menuActive: PoMenuItem, menuOpened: PoMenuItem, hasSubItemOpened: boolean, activatedByRoute: boolean) {\n\n    if (this.id === menuOpened['id']) {\n      this.maxHeight = this.subItems.length * poMenuItemSubItemSize;\n    }\n\n    if (hasSubItemOpened) {\n      this.maxHeight = menuOpened['isOpened'] ?\n        (this.maxHeight + menuOpened.subItems.length * poMenuItemSubItemSize) :\n        (this.maxHeight - menuOpened.subItems.length * poMenuItemSubItemSize);\n\n      if (activatedByRoute) {\n        this.maxHeight = this.getMinimumHeight(0, this, menuActive);\n      }\n    }\n  }\n\n  private activateMenu(menu: any): void {\n    this.isSelected = menu && this.id === menu.id;\n  }\n\n  private calcMenuSubItemsMaxHeight() {\n    setTimeout(() => {\n      const subItems = Array.from(this.menuSubItems.nativeElement.querySelectorAll('.po-menu-item'));\n      subItems.forEach((menuItem: any) => this.maxHeight += menuItem.offsetHeight);\n    });\n  }\n\n  private getMinimumHeight(minimumHeight: number, menuItem: PoMenuItem, menuActive: PoMenuItem) {\n    minimumHeight += poMenuItemSubItemSize;\n\n    if (menuItem.subItems && this.hasSubItem(menuItem.subItems, menuActive['id'])) {\n      for (let index = 0; index < menuItem.subItems.length; index++) {\n        minimumHeight = this.getMinimumHeight(minimumHeight, menuItem.subItems[index], menuActive);\n      }\n    }\n\n    return minimumHeight;\n  }\n\n  private groupedMenu(menuActive: PoMenuItem, menuOpened: PoMenuItem, activatedByRoute: boolean = false): void {\n\n    const hasSubItemOpened = (menuOpened && this.id !== menuOpened['id']) ? this.hasSubItem(this.subItems, menuOpened['id']) : false;\n\n    this.isOpened = this.isMenuOpened(menuOpened, hasSubItemOpened);\n\n    this.isSelected = (menuActive && !this.isOpened) ? this.hasSubItem(this.subItems, menuActive['id']) : false;\n\n    if (!this.isOpened) {\n      this.maxHeight = 0;\n      return;\n    }\n    this.accordionAnimation(menuActive, menuOpened, hasSubItemOpened, activatedByRoute);\n  }\n\n  private hasSubItem(subItems: Array<PoMenuItem>, id: string): boolean {\n    if (subItems) {\n      return subItems.some(item => {\n        return item['id'] === id ? true : this.hasSubItem(item.subItems, id);\n      });\n    }\n  }\n\n  private isMenuOpened(menuOpened: PoMenuItem, hasSubItemOpened: boolean): boolean {\n    if (menuOpened) {\n      return (this.id === menuOpened['id']) ? menuOpened['isOpened'] : hasSubItemOpened;\n    }\n\n    return false;\n  }\n\n  private processMenuItem(menu) {\n\n    if (this.type === 'internalLink') {\n      this.activateMenu(menu.active);\n      return;\n    }\n\n    if (this.type === 'subItems') {\n      this.groupedMenu(menu.active, menu.grouped, menu.activatedByRoute);\n      return;\n    }\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoBadgeModule } from '../po-badge/po-badge.module';\nimport { PoFieldModule } from '../po-field/po-field.module';\nimport { PoLoadingModule } from '../po-loading/po-loading.module';\n\nimport { PoMenuComponent } from './po-menu.component';\nimport { PoMenuFilterComponent } from './po-menu-filter/po-menu-filter.component';\nimport { PoMenuHeaderTemplateDirective } from './po-menu-header-template/po-menu-header-template.directive';\nimport { PoMenuItemComponent } from './po-menu-item/po-menu-item.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente po-menu.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    PoBadgeModule,\n    PoFieldModule,\n    PoLoadingModule\n  ],\n  declarations: [\n    PoMenuComponent,\n    PoMenuFilterComponent,\n    PoMenuHeaderTemplateDirective,\n    PoMenuItemComponent\n  ],\n  exports: [\n    PoMenuComponent,\n    PoMenuHeaderTemplateDirective\n  ]\n})\nexport class PoMenuModule { }\n","import { Input } from '@angular/core';\n\nimport { v4 as uuid } from 'uuid';\nimport { isExternalLink } from '../../utils/util';\n\nimport { PoMenuPanelItem } from './po-menu-panel-item/po-menu-panel-item.interface';\nimport { PoMenuPanelItemInternal } from './po-menu-panel-item/po-menu-panel-item-internal.interface';\n\n/**\n * @description\n *\n * Este Ã© um componente de menu lateral composto apenas por Ã­cones e com um nÃ­vel, utilizado para navegaÃ§Ã£o\n * em pÃ¡ginas internas, externas da aplicaÃ§Ã£o ou aciona uma aÃ§Ã£o.\n *\n * O componente `po-menu-panel` recebe uma lista de objetos do tipo `MenuPanelItem` com as informaÃ§Ãµes dos\n * itens de menu como textos, links para redirecionamento, aÃ§Ãµes e Ã­cones.\n */\nexport class PoMenuPanelBaseComponent {\n\n  private _menus;\n\n  /** Lista dos itens do `po-menu-panel`. Se o valor estiver indefinido ou invÃ¡lido, serÃ¡ inicializado como um array vazio. */\n  @Input('p-menus') set menus(menus: Array<PoMenuPanelItem>) {\n    this._menus = Array.isArray(menus) ? menus : [];\n\n    this.setMenuExtraProperties(this._menus);\n    this.validateMenus(this._menus);\n  }\n\n  get menus() {\n    return this._menus;\n  }\n\n  private setMenuExtraProperties(menus: Array<PoMenuPanelItem>) {\n    menus.forEach(menuItem => this.setMenuItemProperties(<PoMenuPanelItemInternal> menuItem));\n  }\n\n  private setMenuItemProperties(menuItem: PoMenuPanelItemInternal) {\n    menuItem.id = menuItem.id || uuid();\n    menuItem.type = this.setMenuType(menuItem);\n  }\n\n  private setMenuType(menuItem: PoMenuPanelItem): string {\n    if (!menuItem.link) {\n      return 'noLink';\n    }\n\n    if (isExternalLink(menuItem.link)) {\n      return 'externalLink';\n    }\n\n    return 'internalLink';\n  }\n\n  private validateMenu(menuItem: PoMenuPanelItem) {\n    if (!menuItem.label) {\n      throw new Error('O atributo PoMenuPanelItem.label nÃ£o pode ser vazio.');\n    }\n\n    if (!menuItem.icon) {\n      throw new Error('O atributo PoMenuPanelItem.icon nÃ£o pode ser vazio.');\n    }\n  }\n\n  private validateMenus(menus): void {\n    menus.forEach(menu => this.validateMenu(menu));\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Observable, Subject } from 'rxjs';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * ServiÃ§o que implementa a comunicaÃ§Ã£o entre os items do po-menu-panel.\n */\n@Injectable()\nexport class PoMenuPanelItemsService {\n\n  private subjectChild = new Subject<any>();\n  private subjectParent = new Subject<any>();\n\n  // Recebe do po-menu-panel-item sua informaÃ§Ã£o de click.\n  receiveFromChildMenuClicked() {\n    return this.subjectChild.asObservable();\n  }\n\n  // Recebe do po-menu-panel as informaÃ§Ãµes processadas do click de um po-menu-panel-item.\n  receiveFromParentMenuClicked(): Observable<any> {\n    return this.subjectParent.asObservable();\n  }\n\n  // Envia informaÃ§Ãµes do click do po-menu-panel-item para o po-menu\n  sendToParentMenuClicked(menu: object) {\n    this.subjectChild.next(menu);\n  }\n\n  // Envia para os po-menu-panel-item a resposta do processamento de click de um po-menu-panel-item.\n  sendToChildMenuClicked(menu: object) {\n    this.subjectParent.next(menu);\n  }\n\n}\n","import { Component, OnDestroy, OnInit, ViewContainerRef } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { NavigationEnd, Router } from '@angular/router';\n\nimport { Subscription } from 'rxjs';\n\nimport { callFunction, getFormattedLink, openExternalLink } from '../../utils/util';\n\nimport { PoMenuPanelBaseComponent } from './po-menu-panel-base.component';\nimport { PoMenuPanelItem } from './po-menu-panel-item/po-menu-panel-item.interface';\nimport { PoMenuPanelItemInternal } from './po-menu-panel-item/po-menu-panel-item-internal.interface';\nimport { PoMenuPanelItemsService } from './services/po-menu-panel-items.service';\n\n/**\n * @docsExtends PoMenuPanelBaseComponent\n *\n * @description\n *\n * Para o menu funcionar corretamente Ã© necessÃ¡rio importar o `RouterModule` e `Routes` do mÃ³dulo principal de\n *  sua aplicaÃ§Ã£o:\n *\n * ````\n * import { RouterModule, Routes } from '@angular/router';\n *\n * ...\n *\n * @NgModule({\n *   imports: [\n *     RouterModule,\n *     Routes,\n *     ...\n *     PoModule,\n *     ...\n *   ],\n *   declarations: [\n *     AppComponent\n *   ],\n *   providers: [],\n *   bootstrap: [AppComponent]\n * })\n * export class AppModule { }\n * ```\n *\n * AlÃ©m disso Ã© necessÃ¡rio criar um mÃ³dulo configurando as rotas da aplicaÃ§Ã£o.\n *\n * ```\n * import { NgModule } from '@angular/core';\n *\n * import { RouterModule, Routes } from '@angular/router';\n *\n * import { HelloWorldComponent } from './hello-world/hello-world.component';\n *\n * const routes: Routes = [\n *   {path: 'hello-world', component: HelloWorldComponent}\n * ];\n *\n * @NgModule({\n *   imports: [RouterModule.forRoot(routes, {useHash: true})],\n *   exports: [RouterModule]\n * })\n * export class AppRoutingModule {}\n * ```\n *\n * @example\n *\n * <example name=\"po-menu-panel-basic\" title=\"Portinari Menu Panel Basic\">\n *   <file name=\"sample-po-menu-panel-basic/sample-po-menu-panel-basic.component.html\"> </file>\n *   <file name=\"sample-po-menu-panel-basic/sample-po-menu-panel-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-menu-panel-labs\" title=\"Portinari Menu Panel Labs\">\n *   <file name=\"sample-po-menu-panel-labs/sample-po-menu-panel-labs.component.html\"> </file>\n *   <file name=\"sample-po-menu-panel-labs/sample-po-menu-panel-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-menu-panel-customer\" title=\"Portinari Menu Panel - Customers\">\n *   <file name=\"sample-po-menu-panel-customer/sample-po-menu-panel-customer.component.html\"> </file>\n *   <file name=\"sample-po-menu-panel-customer/sample-po-menu-panel-customer.component.ts\"> </file>\n * </example>\n */\n\n@Component({\n  selector: 'po-menu-panel',\n  templateUrl: './po-menu-panel.component.html'\n})\nexport class PoMenuPanelComponent extends PoMenuPanelBaseComponent implements OnDestroy, OnInit {\n\n  activeMenuItem: PoMenuPanelItem;\n  linkActive: string;\n  parentRef: any;\n\n  private routeSubscription: Subscription;\n  private itemSubscription: Subscription;\n\n  constructor(\n    viewRef: ViewContainerRef,\n    private location: Location,\n    private menuItemsService: PoMenuPanelItemsService,\n    private router: Router) {\n\n    super();\n    this.parentRef = viewRef['_view']['component'];\n  }\n\n  ngOnDestroy() {\n    this.itemSubscription.unsubscribe();\n    this.routeSubscription.unsubscribe();\n  }\n\n  ngOnInit() {\n   this.subscribeToMenuItem();\n   this.subscribeToRoute();\n  }\n\n  private activateMenuByUrl(urlPath: string, menus: Array<PoMenuPanelItem>) {\n    if (menus) {\n      return menus.some(menu => {\n        if (getFormattedLink(menu.link) === urlPath) {\n          this.activateMenuItem(menu);\n          return true;\n        }\n      });\n    }\n  }\n\n  private activateMenuItem(menu: PoMenuPanelItem): void {\n    this.activeMenuItem = menu;\n    this.linkActive = getFormattedLink(menu.link);\n    this.menuItemsService.sendToChildMenuClicked({ active: this.activeMenuItem, activatedByRoute: true });\n  }\n\n  private checkActiveMenuByUrl(urlPath: string): void {\n    if (!this.linkActive || this.linkActive !== urlPath) {\n      this.activateMenuByUrl(urlPath, this.menus);\n    }\n  }\n\n  private clickMenuItem(menu: PoMenuPanelItemInternal) {\n    if (menu.action) {\n      callFunction(menu.action, this.parentRef, menu);\n    }\n\n    if (menu.type === 'externalLink') {\n\n      openExternalLink(menu.link);\n\n    } else if (menu.type === 'internalLink') {\n\n      this.activateMenuItem(menu);\n    }\n  }\n\n  private subscribeToRoute() {\n     this.routeSubscription = this.router.events.subscribe(rounterEvent => {\n      if (rounterEvent instanceof NavigationEnd) {\n        this.checkActiveMenuByUrl(this.location.path());\n      }\n    });\n  }\n\n  private subscribeToMenuItem() {\n    this.itemSubscription =\n      this.menuItemsService.receiveFromChildMenuClicked().subscribe((menu: PoMenuPanelItemInternal) => this.clickMenuItem(menu));\n  }\n\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { PoMenuPanelItemInternal } from './po-menu-panel-item-internal.interface';\nimport { PoMenuPanelItemsService } from '../services/po-menu-panel-items.service';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que implementa cada item do po-menu-panel.\n */\n@Component({\n  selector: 'po-menu-panel-item',\n  templateUrl: './po-menu-panel-item.component.html'\n})\nexport class PoMenuPanelItemComponent implements OnDestroy, OnInit {\n\n  itemsSubscription: Subscription;\n\n  @Input('p-menu-item-internal') menuItemInternal: PoMenuPanelItemInternal;\n\n  constructor(private menuItemsService: PoMenuPanelItemsService) { }\n\n  ngOnDestroy() {\n    this.itemsSubscription.unsubscribe();\n  }\n\n  ngOnInit() {\n    // subscribe to menu component messages\n    this.subscribeMenuClickedFromParent();\n  }\n\n  clickMenuItem(event) {\n    if (!(event.ctrlKey || event.metaKey)) {\n      event.preventDefault();\n\n      // Emmit to parent\n      this.menuItemsService.sendToParentMenuClicked(this.menuItemInternal);\n    }\n  }\n\n  private activateMenu(menu: PoMenuPanelItemInternal) {\n    this.menuItemInternal.isSelected = this.menuItemInternal.id === menu.id;\n  }\n\n  private processMenuItem(menu) {\n    if (this.menuItemInternal.type === 'internalLink') {\n      this.activateMenu(menu.active);\n    }\n  }\n\n  private subscribeMenuClickedFromParent() {\n   this.itemsSubscription = this.menuItemsService.receiveFromParentMenuClicked().subscribe(menu => {\n      this.processMenuItem(menu);\n    });\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoFieldModule } from '../po-field/po-field.module';\nimport { PoMenuPanelComponent } from './po-menu-panel.component';\nimport { PoMenuPanelItemComponent } from './po-menu-panel-item/po-menu-panel-item.component';\nimport { PoMenuPanelItemsService } from './services/po-menu-panel-items.service';\nimport { PoTooltipModule } from '../../directives/po-tooltip/index';\n\n/**\n * @description\n *\n * MÃ³dulo do componente po-menu-panel.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    PoFieldModule,\n    PoTooltipModule\n  ],\n  declarations: [\n    PoMenuPanelComponent,\n    PoMenuPanelItemComponent\n  ],\n  exports: [\n    PoMenuPanelComponent\n  ],\n  providers: [\n    PoMenuPanelItemsService\n  ]\n})\nexport class PoMenuPanelModule { }\n","import { Component, Input, ViewContainerRef } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { callFunction, isExternalLink, openExternalLink } from '../../../../utils/util';\n\n@Component({\n  selector: 'po-navbar-action',\n  templateUrl: './po-navbar-action.component.html'\n})\nexport class PoNavbarActionComponent {\n\n  private parentRef: any;\n\n  @Input('p-action') action?: Function;\n\n  @Input('p-icon') icon: string;\n\n  @Input('p-label') label: string;\n\n  @Input('p-link') link?: string;\n\n  @Input('p-tooltip-text') tooltip?: string;\n\n  constructor(viewContainerRef: ViewContainerRef, private router: Router) {\n    this.parentRef = viewContainerRef['_view']['component'];\n  }\n\n  click() {\n    if (this.action) {\n      callFunction(this.action, this.parentRef || this);\n      return;\n    }\n\n    if (this.link) {\n      return this.openUrl(this.link);\n    }\n  }\n\n  private openUrl(url: string) {\n\n    if (isExternalLink(url)) {\n      return openExternalLink(url);\n    }\n\n    if (url) {\n      return this.router.navigate([url]);\n    }\n  }\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { PoNavbarIconAction } from '../../interfaces/po-navbar-icon-action.interface';\n\n@Component({\n  selector: 'po-navbar-action-popup',\n  templateUrl: './po-navbar-action-popup.component.html'\n})\nexport class PoNavbarActionPopupComponent {\n\n  @Input('p-icon-actions') iconActions: Array<PoNavbarIconAction>;\n\n  getLastIconAction() {\n    if (this.iconActions && this.iconActions.length) {\n      return this.iconActions[this.iconActions.length - 1].icon;\n    }\n  }\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { PoNavbarIconAction } from '../interfaces/po-navbar-icon-action.interface';\n\n@Component({\n  selector: 'po-navbar-actions',\n  templateUrl: './po-navbar-actions.component.html'\n})\nexport class PoNavbarActionsComponent {\n\n  private _iconActions: Array<PoNavbarIconAction>;\n\n  @Input('p-icon-actions') set iconActions(actions: Array<PoNavbarIconAction>) {\n    this._iconActions = actions.map(action => ({ ...action, separator: true, url: action.link }));\n  }\n\n  get iconActions() {\n    return this._iconActions;\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoNavbarActionComponent } from './po-navbar-action/po-navbar-action.component';\nimport { PoNavbarActionPopupComponent } from './po-navbar-action-popup/po-navbar-action-popup.component';\nimport { PoNavbarActionsComponent } from './po-navbar-actions.component';\nimport { PoPopupModule } from '../../po-popup/po-popup.module';\nimport { PoTooltipModule } from '../../../directives/po-tooltip/po-tooltip.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    PoPopupModule,\n    PoTooltipModule\n  ],\n  declarations: [\n    PoNavbarActionComponent,\n    PoNavbarActionPopupComponent,\n    PoNavbarActionsComponent\n  ],\n  exports: [\n    PoNavbarActionsComponent\n  ]\n})\nexport class PoNavbarActionsModule { }\n","import { Input } from '@angular/core';\n\nimport { browserLanguage, convertToBoolean, poLocaleDefault } from '../../utils/util';\n\nimport { PoMenuComponent } from '../po-menu';\nimport { PoNavbarIconAction } from './interfaces/po-navbar-icon-action.interface';\nimport { PoNavbarItem } from './interfaces/po-navbar-item.interface';\nimport { PoNavbarLiterals } from './interfaces/po-navbar-literals.interface';\n\nexport const poNavbarLiteralsDefault = {\n  en: <PoNavbarLiterals> {\n    navbarLinks: 'Navbar links'\n  },\n  es: <PoNavbarLiterals> {\n    navbarLinks: 'Navbar links'\n  },\n  pt: <PoNavbarLiterals> {\n    navbarLinks: 'Navbar links'\n  },\n  ru: <PoNavbarLiterals> {\n    navbarLinks: 'Navbar ÑÐ²ÑÐ·Ð¸'\n  }\n};\n\n/**\n * @description\n *\n * O componente `po-navbar` Ã© um cabeÃ§alho fixo que permite apresentar uma lista de links para facilitar a navegaÃ§Ã£o pelas\n * pÃ¡ginas da aplicaÃ§Ã£o. TambÃ©m possui Ã­cones com aÃ§Ãµes.\n */\nexport abstract class PoNavbarBaseComponent {\n\n  private _iconActions: Array<PoNavbarIconAction> = [];\n  private _items: Array<PoNavbarItem> = [];\n  private _literals: PoNavbarLiterals;\n  private _logo: string;\n  private _shadow: boolean = false;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define uma lista de aÃ§Ãµes apresentadas em Ã­cones no lado direito do `po-navbar`.\n   */\n  @Input('p-icon-actions') set iconActions(value: Array<PoNavbarIconAction>) {\n    this._iconActions = Array.isArray(value) ? value : [];\n  }\n\n  get iconActions(): Array<PoNavbarIconAction> {\n    return this._iconActions;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define uma lista de items do `po-navbar`.\n   */\n  @Input('p-items') set items(value: Array<PoNavbarItem>) {\n    this._items = Array.isArray(value) ? value : [];\n  }\n\n  get items(): Array<PoNavbarItem> {\n    return this._items;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com a literal usada na propriedade `p-literals`.\n   *\n   * Para customizar a literal, basta declarar um objeto do tipo `PoNavbarLiterals` conforme exemplo abaixo:\n   *\n   * ```\n   *  const customLiterals: PoNavbarLiterals = {\n   *    navbarLinks: 'Itens de navegaÃ§Ã£o'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <po-navbar\n   *   [p-literals]=\"customLiterals\">\n   * </po-navbar>\n   * ```\n   *\n   *  > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do *browser* (pt, en, es).\n   */\n  @Input('p-literals') set literals(value: PoNavbarLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...poNavbarLiteralsDefault[poLocaleDefault],\n        ...poNavbarLiteralsDefault[browserLanguage()],\n        ...value\n      };\n    } else {\n      this._literals = poNavbarLiteralsDefault[browserLanguage()];\n    }\n  }\n  get literals() {\n    return this._literals || poNavbarLiteralsDefault[browserLanguage()];\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a logo apresentada `po-navbar`.\n   */\n  @Input('p-logo') set logo(value: string) {\n    this._logo = value;\n\n    if (this.menu) {\n      this.validateMenuLogo();\n    }\n  }\n  get logo() {\n    return this._logo;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caso jÃ¡ possua um menu na aplicaÃ§Ã£o o mesmo deve ser repassado para essa propriedade para que quando entre em modo\n   * responsivo os items do `po-navbar` possam ser adicionados no primeiro item do menu definido.\n   *\n   * > Ao utilizar menu e navbar com logo mantÃ©m apenas a logo do navbar.\n   *\n   * Exemplo:\n   *\n   * ```\n   * <po-navbar\n   *  [p-items]=\"items\"\n   *  [p-icon-actions]=\"iconActions\"\n   *  [p-menu]=\"userMenu\">\n   * </po-navbar>\n   * <div class=\"po-wrapper\">\n   *  <po-menu #userMenu\n   *   [p-menus]=\"[{ label: 'Item 1', link: '/' }]\">\n   *  </po-menu>\n   * </div>\n   * ```\n   */\n  @Input('p-menu') menu?: PoMenuComponent;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Aplica uma sombra na parte inferior do `po-navbar`.\n   *\n   * @default `false`\n   */\n  @Input('p-shadow') set shadow(value: boolean) {\n    this._shadow = convertToBoolean(value);\n  }\n\n  get shadow(): boolean {\n    return this._shadow;\n  }\n\n  protected abstract validateMenuLogo(): void;\n\n}\n","import { Component, Input, EventEmitter, Output } from '@angular/core';\n\nimport { PoNavbarItem } from '../../interfaces/po-navbar-item.interface';\n\nimport { isExternalLink } from '../../../../utils/util';\n\n@Component({\n  selector: 'po-navbar-item',\n  templateUrl: './po-navbar-item.component.html'\n})\nexport class PoNavbarItemComponent {\n\n  @Input('p-action') action: Function;\n\n  @Input('p-clickable') clickable?: boolean;\n\n  @Input('p-label') label: string;\n\n  @Input('p-link') link?: string;\n\n  @Output('p-click') click: EventEmitter<PoNavbarItem> = new EventEmitter<PoNavbarItem>();\n\n  get type() {\n    return isExternalLink(this.link) ? 'externalLink' : 'internalLink';\n  }\n\n  itemClick(label?: string, link?: string) {\n\n    if (this.action) {\n      this.action({ label, link });\n    }\n\n    this.click.emit();\n  }\n}\n","import { Component, ElementRef, Input, OnDestroy, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { NavigationCancel, NavigationEnd, Router } from '@angular/router';\n\nimport { Subscription } from 'rxjs';\n\nimport { PoNavbarItem } from '../interfaces/po-navbar-item.interface';\nimport { PoNavbarItemComponent } from './po-navbar-item/po-navbar-item.component';\n\n@Component({\n  selector: 'po-navbar-items',\n  templateUrl: './po-navbar-items.component.html'\n})\nexport class PoNavbarItemsComponent implements OnInit, OnDestroy {\n\n  selectedItem: PoNavbarItem;\n\n  private routeSubscription: Subscription;\n\n  @ViewChild('navbarItemsContainer', { read: ElementRef, static: true }) navbarItemsContainer: ElementRef;\n\n  @ViewChildren(PoNavbarItemComponent, { read: ElementRef }) allNavbarItems:  QueryList<any>;\n\n  @Input('p-items') items: Array<PoNavbarItem>;\n\n  constructor(private router: Router) { }\n\n  ngOnDestroy() {\n    this.routeSubscription.unsubscribe();\n  }\n\n  ngOnInit() {\n    this.subscribeToRoute();\n  }\n\n  selectItem(item: PoNavbarItem) {\n    this.selectedItem = item;\n  }\n\n  private checkActiveItemByUrl(urlRouter: string) {\n    this.selectedItem = this.items.find(item => item.link === urlRouter);\n  }\n\n  private checkRouterChildrenFragments() {\n    const childrenPrimary = this.router.parseUrl(this.router.url).root.children['primary'];\n\n    return childrenPrimary ? `/${childrenPrimary.segments.map(it => it.path).join('/')}` : '';\n  }\n\n  private subscribeToRoute() {\n    this.routeSubscription = this.router.events.subscribe(val => {\n      if (val instanceof NavigationEnd || val instanceof NavigationCancel) {\n        const urlRouter = this.checkRouterChildrenFragments();\n        this.checkActiveItemByUrl(urlRouter);\n      }\n    });\n  }\n\n}\n","import { AfterViewInit, ChangeDetectorRef, Component, ElementRef, OnDestroy, Renderer2, ViewChild } from '@angular/core';\nimport { animate, AnimationBuilder, AnimationFactory, AnimationPlayer, keyframes, style } from '@angular/animations';\n\nimport { PoMenuItem } from '../po-menu';\nimport { PoNavbarBaseComponent } from './po-navbar-base.component';\nimport { PoNavbarItem } from './interfaces/po-navbar-item.interface';\nimport { PoNavbarItemsComponent } from './po-navbar-items/po-navbar-items.component';\n\nconst poNavbarNavigationWidth = 88;\nconst poNavbarMenuMedia = 768;\nconst poNavbarMatchMedia = `(max-width: ${poNavbarMenuMedia}px)`;\nconst poNavbarTiming = '250ms ease';\n\n/**\n * @docsExtends PoNavbarBaseComponent\n */\n@Component({\n  selector: 'po-navbar',\n  templateUrl: './po-navbar.component.html'\n})\nexport class PoNavbarComponent extends PoNavbarBaseComponent implements AfterViewInit, OnDestroy {\n\n  disableRight: boolean;\n  showItemsNavigation: boolean = false;\n\n  private mediaQuery: any;\n  private offset: number = 0;\n  private player: AnimationPlayer;\n  private menuItems: Array<PoMenuItem>;\n\n  protected windowResizeListener: () => void;\n\n  get navbarItemNavigationDisableLeft() {\n    return this.offset === 0;\n  }\n\n  get navbarItemNavigationDisableRight() {\n    return this.disableRight && this.offset !== 0;\n  }\n\n  @ViewChild(PoNavbarItemsComponent, { read: ElementRef, static: true }) navbarItemsElement: ElementRef;\n\n  @ViewChild(PoNavbarItemsComponent, { static: true }) navbarItems: PoNavbarItemsComponent;\n\n  constructor(private renderer: Renderer2, private builder: AnimationBuilder, private changeDetector: ChangeDetectorRef) {\n    super();\n    this.windowResizeListener = this.renderer.listen(window, 'resize', this.displayItemsNavigation.bind(this));\n  }\n\n  ngAfterViewInit() {\n    this.displayItemsNavigation();\n\n    if (this.menu) {\n      this.initNavbarMenu();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.mediaQuery) {\n      this.mediaQuery.removeListener(this.onMediaQueryChange);\n    }\n  }\n\n  navigateItems(orientation: string) {\n    orientation === 'left' ? this.navigateLeft() : this.navigateRight();\n\n    this.animate(this.offset);\n  }\n\n  private allNavbarItemsWidth() {\n    return this.navbarItems.allNavbarItems.reduce((previous: any, current: any) => previous + current.nativeElement.offsetWidth, 0);\n  }\n\n  private animate(offset: number) {\n    const animation: AnimationFactory = this.buildTransitionAnimation(offset);\n\n    this.player = animation.create(this.navbarItems.navbarItemsContainer.nativeElement);\n    this.player.play();\n  }\n\n  private buildTransitionAnimation(offset: number) {\n    return this.builder.build([\n      animate(\n        poNavbarTiming,\n        keyframes([style({ transform: `translateX(${-offset}px)` })])\n      )\n    ]);\n  }\n\n  private changeNavbarMenuItems(isCollapsedMedia: any, menuItems: Array<PoMenuItem>, navbarItems: Array<PoNavbarItem>, label: string) {\n\n    if (isCollapsedMedia) {\n      const subItems = [{ label, subItems: navbarItems }];\n      this.menu.menus = [...subItems, ...menuItems];\n    } else {\n      this.menu.menus = menuItems;\n    }\n  }\n\n  private calculateLeftNavigation() {\n\n    let calculatedOffset: number;\n\n    this.navbarItems.allNavbarItems.some(navbarItem => {\n      const navbarItemOffset = navbarItem.nativeElement.offsetLeft;\n      const navbarItemWidth = navbarItem.nativeElement.offsetWidth;\n\n      if (navbarItemOffset >= this.offset) {\n        calculatedOffset = navbarItemOffset - (this.navbarItemsWidth() - navbarItemWidth);\n        return true;\n      }\n    });\n    return calculatedOffset;\n  }\n\n  private calculateRightNavigation(itemBreakPoint: number) {\n\n    let calculatedOffset: number;\n\n    this.navbarItems.allNavbarItems.some(navbarItem => {\n      const offsetLeft = navbarItem.nativeElement.offsetLeft;\n      const finalPosition = navbarItem.nativeElement.offsetWidth + offsetLeft;\n\n      if (itemBreakPoint < finalPosition) {\n        calculatedOffset = offsetLeft;\n        return true;\n      }\n\n    });\n    return calculatedOffset;\n  }\n\n  private displayItemsNavigation() {\n    this.showItemsNavigation = this.navbarItemsWidth() < this.allNavbarItemsWidth() + poNavbarNavigationWidth;\n\n    this.changeDetector.detectChanges();\n\n    if (this.offset !== 0) {\n      this.setOffsetToZero();\n      this.animate(this.offset);\n    }\n  }\n\n  private initNavbarMenu() {\n    this.mediaQuery = window.matchMedia(poNavbarMatchMedia);\n    this.menuItems = this.menu.menus;\n\n    if (window.innerWidth < poNavbarMenuMedia) {\n      this.changeNavbarMenuItems(true, this.menuItems, this.items, this.literals.navbarLinks);\n    }\n\n    this.validateMenuLogo();\n\n    this.mediaQuery.addListener(this.onMediaQueryChange);\n  }\n\n  private navbarItemsWidth() {\n    return this.navbarItemsElement.nativeElement.offsetWidth;\n  }\n\n  private navigateLeft() {\n    this.disableRight = false;\n\n    this.offset = this.calculateLeftNavigation();\n\n    if (this.offset < 0) {\n      this.setOffsetToZero();\n    }\n  }\n\n  private navigateRight() {\n\n    const maxAllowedOffset = this.allNavbarItemsWidth() - this.navbarItemsWidth();\n    const itemBreakPoint = this.offset + this.navbarItemsWidth();\n\n    this.offset = this.calculateRightNavigation(itemBreakPoint);\n\n    this.validateMaxOffset(maxAllowedOffset);\n  }\n\n  private onMediaQueryChange = changed => {\n    this.changeNavbarMenuItems(changed.matches, this.menuItems, this.items, this.literals.navbarLinks);\n  }\n\n  private setOffsetToZero() {\n    this.offset = 0;\n  }\n\n  private validateMaxOffset(maxAllowedOffset: number) {\n    if (this.offset >= maxAllowedOffset) {\n      this.offset = maxAllowedOffset;\n      this.disableRight = true;\n    }\n  }\n\n  protected validateMenuLogo() {\n    if (this.menu.logo && this.logo) {\n      this.menu.logo = undefined;\n      this.menu.changeDetector.detectChanges();\n    }\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoNavbarItemComponent } from './po-navbar-item/po-navbar-item.component';\nimport { PoNavbarItemsComponent } from './po-navbar-items.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule\n  ],\n  declarations: [\n    PoNavbarItemComponent,\n    PoNavbarItemsComponent\n  ],\n  exports: [\n    PoNavbarItemsComponent\n  ]\n})\nexport class PoNavbarItemsModule { }\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'po-navbar-logo',\n  templateUrl: './po-navbar-logo.component.html'\n})\nexport class PoNavbarLogoComponent {\n  @Input('p-logo') logo?: string;\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'po-navbar-item-navigation',\n  templateUrl: './po-navbar-item-navigation.component.html'\n})\nexport class PoNavbarItemNavigationComponent {\n\n  @Input('p-disable-left') disableLeft: boolean;\n\n  @Input('p-disable-right') disableRight: boolean;\n\n  @Output('p-click') click: EventEmitter<any> = new EventEmitter<any>();\n\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'po-navbar-item-navigation-icon',\n  templateUrl: './po-navbar-item-navigation-icon.component.html'\n})\nexport class PoNavbarItemNavigationIconComponent {\n\n  @Input('p-disabled') disabled: boolean;\n\n  @Input('p-icon') icon: boolean;\n\n  @Output('p-click') click: EventEmitter<any> = new EventEmitter<any>();\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoNavbarItemNavigationComponent } from './po-navbar-item-navigation.component';\nimport { PoNavbarItemNavigationIconComponent } from './po-navbar-item-navigation-icon/po-navbar-item-navigation-icon.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule\n  ],\n  declarations: [\n    PoNavbarItemNavigationComponent,\n    PoNavbarItemNavigationIconComponent\n  ],\n  exports: [\n    PoNavbarItemNavigationComponent,\n  ]\n})\nexport class PoNavbarItemNavigationModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PoMenuModule } from '../po-menu/po-menu.module';\nimport { PoNavbarActionsModule } from './po-navbar-actions/po-navbar-actions.module';\nimport { PoNavbarComponent } from './po-navbar.component';\nimport { PoNavbarItemsModule } from './po-navbar-items/po-navbar-items.module';\nimport { PoNavbarLogoComponent } from './po-navbar-logo/po-navbar-logo.component';\nimport { PoNavbarItemNavigationModule } from './po-navbar-item-navigation/po-navbar-item-navigation.module';\n\n/**\n * @description\n *\n * MÃ³dulo do componente `po-navbar`.\n *\n * > Para o correto funcionamento do componente `po-navbar`, deve ser importado o mÃ³dulo `BrowserAnimationsModule` no\n * > mÃ³dulo principal da sua aplicaÃ§Ã£o.\n *\n * MÃ³dulo da aplicaÃ§Ã£o:\n * ```\n * import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n * import { PoModule } from '@portinari/portinari-ui';\n * ...\n *\n * @NgModule({\n *   imports: [\n *     BrowserModule,\n *     BrowserAnimationsModule,\n *     ...\n *     PoModule\n *   ],\n *   declarations: [\n *     AppComponent,\n *     ...\n *   ],\n *   providers: [],\n *   bootstrap: [AppComponent]\n * })\n * export class AppModule { }\n * ```\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    PoNavbarActionsModule,\n    PoNavbarItemsModule,\n    PoNavbarItemNavigationModule,\n    PoMenuModule\n  ],\n  declarations: [\n    PoNavbarComponent,\n    PoNavbarLogoComponent\n  ],\n  exports: [\n    PoNavbarComponent\n  ]\n})\nexport class PoNavbarModule { }\n","/**\n * @docsPrivate\n *\n * @description\n *\n * O componente **po-page** Ã© utilizado como container principal para os componentes po-page-header, po-page-content\n * e para as aÃ§Ãµes dos componentes po-page-edit e po-page-detail.\n *\n * Quando estiver sendo utilizado o componente po-menu junto ao po-page, ambos devem estar no mesmo nÃ­vel\n * e inseridos em uma div com a classe **po-wrapper**. Esta classe serÃ¡ responsÃ¡vel por fazer os cÃ¡lculos\n * necessÃ¡rios de alinhamento dos componentes.\n *\n * O componente **po-page** tambÃ©m pode ser utilizado sem o po-menu e neste caso o corpo da pÃ¡gina deve ser\n * definido com a altura de 100% para que o po-page maximize seu tamanho.\n * ```\n * html, body {\n *   height:100%;\n * }\n * ```\n */\nexport class PoPageBaseComponent { }\n","import { Component } from '@angular/core';\n\nimport { PoPageBaseComponent } from './po-page-base.component';\n\n/**\n * @docsPrivate\n *\n * @docsExtends PoPageBaseComponent\n */\n@Component({\n  selector: 'po-page',\n  templateUrl: './po-page.component.html'\n})\nexport class PoPageComponent extends PoPageBaseComponent { }\n","/**\n * @docsPrivate\n *\n * @description\n *\n * O componente **po-page-content** Ã© utilizado como o container para o conteÃºdo da pÃ¡gina.\n */\nexport class PoPageContentBaseComponent {\n\n  protected resizeListener: () => void;\n\n}\n","import { AfterViewInit, Component, OnDestroy, Renderer2 } from '@angular/core';\n\nimport { PoPageContentBaseComponent } from './po-page-content-base.component';\n\n/**\n * @docsPrivate\n *\n * @docsExtends PoPageContentBaseComponent\n */\n@Component({\n  selector: 'po-page-content',\n  templateUrl: './po-page-content.component.html'\n})\nexport class PoPageContentComponent extends PoPageContentBaseComponent implements AfterViewInit, OnDestroy {\n\n  contentOpacity: number = 0;\n  height: string = '90%';\n  overflowY: string = 'none';\n\n  constructor(public renderer: Renderer2) {\n    super();\n    this.initializeListeners();\n  }\n\n  ngAfterViewInit() {\n    this.recalculateHeaderSize();\n  }\n\n  ngOnDestroy() {\n    this.removeListeners();\n  }\n\n  recalculateHeaderSize() {\n    setTimeout(() => {\n      const pageHeaderElement: HTMLElement = document.querySelector('div.po-page-header');\n\n      this.setHeightContent(pageHeaderElement);\n      this.contentOpacity = 1;\n    });\n  }\n\n  setHeightContent(poPageHeader: HTMLElement) {\n    const bodyHeight = document.body.clientHeight;\n    const pageHeaderHeight = poPageHeader ? poPageHeader.offsetTop + poPageHeader.offsetHeight : 0;\n    const newHeight = bodyHeight - pageHeaderHeight;\n\n    this.height = `${newHeight}px`;\n  }\n\n  private initializeListeners() {\n    this.resizeListener = this.renderer.listen('window', 'resize', () => {\n      this.recalculateHeaderSize();\n    });\n  }\n\n  private removeListeners() {\n    this.resizeListener();\n  }\n\n}\n","import { Input, ViewChild } from '@angular/core';\n\nimport { PoBreadcrumb } from '../../po-breadcrumb/po-breadcrumb.interface';\nimport { PoPageAction } from '../po-page-action.interface';\nimport { PoPageContentComponent } from '../po-page-content/po-page-content.component';\n\n/**\n * @description\n *\n * O componente `po-page-default` Ã© utilizado como o container principal para as telas sem um template definido.\n */\nexport abstract class PoPageDefaultBaseComponent {\n\n  private _actions?: Array<PoPageAction> = [];\n  private _title: string;\n\n  @ViewChild(PoPageContentComponent, { static: true }) poPageContent: PoPageContentComponent;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Nesta propriedade deve ser definido um array de objetos que implementam a interface `PoPageAction`.\n   */\n  @Input('p-actions') set actions(actions: Array<PoPageAction>) {\n    this._actions = Array.isArray(actions) ? actions : [];\n    this.setDropdownActions();\n  }\n\n  get actions(): Array<PoPageAction> {\n    return this._actions;\n  }\n\n  /** Objeto com propriedades do breadcrumb. */\n  @Input('p-breadcrumb') breadcrumb?: PoBreadcrumb;\n\n  /** TÃ­tulo da pÃ¡gina. */\n  @Input('p-title') set title(title: string) {\n    this._title = title;\n    this.poPageContent.recalculateHeaderSize();\n  }\n\n  get title() {\n    return this._title;\n  }\n\n  // Seta a lista de aÃ§Ãµes no dropdown.\n  abstract setDropdownActions();\n\n}\n","import { AfterContentInit, Component, OnChanges, Renderer2, SimpleChange, ViewContainerRef } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { callFunction, isTypeof } from '../../../utils/util';\nimport { PoPageAction } from '../po-page-action.interface';\n\nimport { PoPageDefaultBaseComponent } from './po-page-default-base.component';\n\n/**\n * @docsExtends PoPageDefaultBaseComponent\n *\n * @example\n *\n * <example name=\"po-page-default-basic\" title=\"Portinari Page Default Basic\">\n *  <file name=\"sample-po-page-default-basic/sample-po-page-default-basic.component.html\"> </file>\n *  <file name=\"sample-po-page-default-basic/sample-po-page-default-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-default-labs\" title=\"Portinari Page Default Labs\">\n *  <file name=\"sample-po-page-default-labs/sample-po-page-default-labs.component.html\"> </file>\n *  <file name=\"sample-po-page-default-labs/sample-po-page-default-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-default-dashboard\" title=\"Portinari Page Default - Dashboard\">\n *  <file name=\"sample-po-page-default-dashboard/sample-po-page-default-dashboard.component.html\"> </file>\n *  <file name=\"sample-po-page-default-dashboard/sample-po-page-default-dashboard.component.ts\"> </file>\n *  <file name=\"sample-po-page-default-dashboard/sample-po-page-default-dashboard.service.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-page-default',\n  templateUrl: './po-page-default.component.html'\n})\nexport class PoPageDefaultComponent extends PoPageDefaultBaseComponent implements AfterContentInit, OnChanges {\n\n  limitPrimaryActions: number = 3;\n  dropdownActions: Array<PoPageAction>;\n  isMobile: boolean;\n\n  private maxWidthMobile: number = 480;\n  private parentRef: ViewContainerRef;\n\n  constructor(\n    viewRef: ViewContainerRef,\n    private renderer: Renderer2,\n    private router: Router) {\n\n    super();\n    this.parentRef = viewRef['_view']['component'];\n  }\n\n  public ngAfterContentInit(): void {\n    this.setIsMobile();\n    this.setDropdownActions();\n\n    this.renderer.listen('window', 'resize', (event: Event) => {\n      this.onResize(event);\n    });\n  }\n\n  ngOnChanges(changes: { [propName: string]: SimpleChange }) {\n    this.setDropdownActions();\n  }\n\n  actionIsDisabled(action: any) {\n    return isTypeof(action.disabled, 'function') ? action.disabled(action) : action.disabled;\n  }\n\n  callAction(item: PoPageAction): void {\n    if (item.url) {\n\n      this.router.navigate([item.url]);\n    } else if (item.action) {\n      callFunction(item.action, this.parentRef);\n    }\n  }\n\n  hasPageHeader() {\n    return !!(this.title || (this.actions && this.actions.length) || (this.breadcrumb && this.breadcrumb.items.length));\n  }\n\n  private onResize(event: Event): void {\n    const width = (event.target as Window).innerWidth;\n\n    if (width < this.maxWidthMobile) {\n      this.isMobile = true;\n      this.limitPrimaryActions = 2;\n      this.setDropdownActions();\n    } else {\n      this.isMobile = false;\n      this.limitPrimaryActions = 3;\n      this.setDropdownActions();\n    }\n  }\n\n  private setIsMobile(): void {\n    if (window.innerWidth < this.maxWidthMobile) {\n      this.isMobile = true;\n      this.limitPrimaryActions = 2;\n    }\n  }\n\n  setDropdownActions(): void {\n    if (this.actions.length > this.limitPrimaryActions) {\n      this.dropdownActions = this.actions.slice(this.limitPrimaryActions - 1);\n    }\n  }\n\n}\n","import { Input, ViewChild } from '@angular/core';\n\nimport { browserLanguage, poLocaleDefault } from './../../../utils/util';\n\nimport { PoBreadcrumb } from '../../po-breadcrumb/po-breadcrumb.interface';\nimport { PoPageContentComponent } from '../po-page-content/po-page-content.component';\nimport { PoPageDetailLiterals } from './po-page-detail-literals.interface';\n\nexport const poPageDetailLiteralsDefault = {\n  en: <PoPageDetailLiterals> {\n    back: 'Back',\n    edit: 'Edit',\n    remove: 'Remove'\n  },\n  es: <PoPageDetailLiterals> {\n    back: 'Volver',\n    edit: 'Editar',\n    remove: 'Eliminar'\n  },\n  pt: <PoPageDetailLiterals> {\n    back: 'Voltar',\n    edit: 'Editar',\n    remove: 'Remover'\n  },\n  ru: <PoPageDetailLiterals> {\n    back: 'Ð²Ð¾Ð·Ð²ÑÐ°ÑÐµÐ½Ð¸Ðµ',\n    edit: 'ÑÐµÐ´Ð°ÐºÑÐ¸ÑÐ¾Ð²Ð°ÑÑ',\n    remove: 'ÑÐ´Ð°Ð»ÐµÐ½Ð¸Ðµ'\n  }\n};\n\n/**\n * @description\n *\n * O componente **po-page-detail** Ã© utilizado como container principal para a tela de detalhamento de um registro.\n * Por padrÃ£o possui 3 aÃ§Ãµes, cada aÃ§Ã£o na tela executa uma funÃ§Ã£o no componente que estÃ¡ utilizando o po-page-detail,\n * sÃ£o elas:\n *  - Voltar (funÃ§Ã£o: back);\n *  - Editar (funÃ§Ã£o: edit);\n *  - Remover (funÃ§Ã£o: remove);\n *\n * Caso nÃ£o estiver implementado alguma funÃ§Ã£o, listado anteriormente, o mesmo nÃ£o serÃ¡ apresentado.\n */\nexport class PoPageDetailBaseComponent {\n\n  private _literals: PoPageDetailLiterals;\n  private _title: string;\n\n  @ViewChild(PoPageContentComponent, { static: true }) poPageContent: PoPageContentComponent;\n\n  /** Objeto com propriedades do breadcrumb. */\n  @Input('p-breadcrumb') breadcrumb: PoBreadcrumb;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com as literais usadas no `po-page-detail`.\n   *\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\n   *\n   * ```\n   *  const customLiterals: PoPageDetailLiterals = {\n   *    edit: 'EdiÃ§Ã£o',\n   *    remove: 'ExclusÃ£o',\n   *    back: 'Menu'\n   *  };\n   * ```\n   *\n   * Ou passando apenas as literais que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: PoPageDetailLiterals = {\n   *    remove: 'Excluir registro permanentemente'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <po-page-detail\n   *   [p-literals]=\"customLiterals\">\n   * </po-page-detail>\n   * ```\n   *\n   *  > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do browser (pt, en, es).\n   */\n  @Input('p-literals') set literals(value: PoPageDetailLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...poPageDetailLiteralsDefault[poLocaleDefault],\n        ...poPageDetailLiteralsDefault[browserLanguage()],\n        ...value\n      };\n    } else {\n      this._literals = poPageDetailLiteralsDefault[browserLanguage()];\n    }\n  }\n  get literals() {\n    return this._literals || poPageDetailLiteralsDefault[browserLanguage()];\n  }\n\n  /** TÃ­tulo da pÃ¡gina. */\n  @Input('p-title') set title(title: string) {\n    this._title = title;\n    this.poPageContent.recalculateHeaderSize();\n  }\n\n  get title() {\n    return this._title;\n  }\n\n}\n","/**\n * @description Verifica se existe a funÃ§Ã£o dentro do contexto.\n *\n * @param action Nome da funÃ§Ã£o que serÃ¡ verificada a existÃªncia no parentContext.\n *\n * @param parentContext Contexto da qual a funÃ§Ã£o serÃ¡ verificada.\n */\nexport function hasAction(action: string, parentContext: any): boolean {\n  return parentContext && parentContext[action];\n}\n\n/**\n * @description Executa a funÃ§Ã£o cujo o nome foi passado por parÃ¢metro.\n *\n * @param action Nome da funÃ§Ã£o que serÃ¡ executada no parentContext.\n *\n * @param parentContext Contexto da qual a funÃ§Ã£o serÃ¡ executada.\n */\nexport function callAction(action: string, parentContext: any): void {\n  if (hasAction(action, parentContext)) {\n    parentContext[action]();\n  }\n}\n","import { Component, ViewContainerRef } from '@angular/core';\n\nimport { PoPageDetailBaseComponent } from './po-page-detail-base.component';\nimport { callAction, hasAction } from '../po-page-util/po-page-util';\n\n/**\n * @docsExtends PoPageDetailBaseComponent\n *\n * @example\n *\n * <example name=\"po-page-detail-basic\" title=\"Portinari Page Detail Basic\">\n *  <file name=\"sample-po-page-detail-basic/sample-po-page-detail-basic.component.html\"> </file>\n *  <file name=\"sample-po-page-detail-basic/sample-po-page-detail-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-detail-labs\" title=\"Portinari Page Detail Labs\">\n *  <file name=\"sample-po-page-detail-labs/sample-po-page-detail-labs.component.html\"> </file>\n *  <file name=\"sample-po-page-detail-labs/sample-po-page-detail-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-detail-user\" title=\"Portinari Page Detail - User\">\n *  <file name=\"sample-po-page-detail-user/sample-po-page-detail-user.component.html\"> </file>\n *  <file name=\"sample-po-page-detail-user/sample-po-page-detail-user.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-page-detail',\n  templateUrl: './po-page-detail.component.html'\n})\nexport class PoPageDetailComponent extends PoPageDetailBaseComponent {\n\n  callActionFn = callAction;\n  hasActionFn = hasAction;\n  parentContext: ViewContainerRef;\n\n  constructor(viewRef: ViewContainerRef) {\n    super();\n    this.parentContext = viewRef['_view']['component'];\n  }\n\n  hasAnyAction(): boolean {\n    return this.hasActionFn('back', this.parentContext) ||\n      this.hasActionFn('edit', this.parentContext) ||\n      this.hasActionFn('remove', this.parentContext);\n  }\n\n  hasEditFn(property: string): string {\n    if (property === 'icon') {\n      return this.hasActionFn('edit', this.parentContext) ? '' : 'po-icon-delete';\n    } else if (property === 'type') {\n      return this.hasActionFn('edit', this.parentContext) ? 'default' : 'primary';\n    } else {\n      return '';\n    }\n  }\n\n  hasEditOrRemoveFn(property: string): string {\n    if (property === 'icon') {\n      return this.hasActionFn('edit', this.parentContext) || this.hasActionFn('remove', this.parentContext) ? '' : 'po-icon-arrow-left';\n    } else if (property === 'type') {\n      return this.hasActionFn('edit', this.parentContext) || this.hasActionFn('remove', this.parentContext) ? 'default' : 'primary';\n    } else {\n      return '';\n    }\n  }\n\n  hasPageHeader(): boolean {\n    return !!(this.title || this.hasAnyAction() || (this.breadcrumb && this.breadcrumb.items.length));\n  }\n\n}\n","/**\n * @usedBy PoStepperComponent\n *\n * @description\n *\n * <a id=\"stepperStatus\"></a>\n *\n * *Enums* para os status do `po-stepper` quando utilizada a propriedade `p-steps`.\n */\nexport enum PoStepperStatus {\n\n  /** Define o estado do *step* como ativo. */\n  Active = 'active',\n\n  /** Define o estado do *step* como padrÃ£o. */\n  Default = 'default',\n\n  /** Define o estado do *step* como desabilitado. */\n  Disabled = 'disabled',\n\n  /** Define o estado do *step* como concluÃ­do. */\n  Done = 'done',\n\n  /** Define o estado do *step* com erro. */\n  Error = 'error'\n\n}\n","import { Input, ViewChild } from '@angular/core';\n\nimport { browserLanguage, poLocaleDefault } from './../../../utils/util';\n\nimport { PoBreadcrumb } from '../../po-breadcrumb/po-breadcrumb.interface';\nimport { PoPageContentComponent } from '../po-page-content/po-page-content.component';\nimport { PoPageEditLiterals } from './po-page-edit-literals.interface';\n\nexport const poPageEditLiteralsDefault = {\n  en: <PoPageEditLiterals> {\n    cancel: 'Cancel',\n    save: 'Save',\n    saveNew: 'Save and New'\n  },\n  es: <PoPageEditLiterals> {\n    cancel: 'Cancelar',\n    save: 'Guardar',\n    saveNew: 'Guardar y Nuevo'\n  },\n  pt: <PoPageEditLiterals> {\n    cancel: 'Cancelar',\n    save: 'Salvar',\n    saveNew: 'Salvar e Novo'\n  },\n  ru: <PoPageEditLiterals> {\n    cancel: 'Ð¾ÑÐ¼ÐµÐ½Ð¸ÑÑ',\n    save: 'ÑÐºÐ¾Ð½Ð¾Ð¼Ð¸ÑÑ',\n    saveNew: 'Ð¡Ð¾ÑÑÐ°Ð½Ð¸ÑÑ Ð¸ Ð½Ð¾Ð²ÑÐ¹'\n  }\n};\n\n/**\n * @description\n *\n * O componente **po-page-edit** Ã© utilizado como container principal para tela de ediÃ§Ã£o ou adiÃ§Ã£o de um\n * registro.\n * Por padrÃ£o possui 3 aÃ§Ãµes, cada aÃ§Ã£o na tela executa uma funÃ§Ã£o no componente que estÃ¡ utilizando o po-page-edit,\n * sÃ£o elas:\n *  - Cancelar (funÃ§Ã£o: cancel);\n *  - Salvar e Novo (funÃ§Ã£o: saveNew);\n *  - Salvar (funÃ§Ã£o: save);\n *\n * Caso nÃ£o estiver implementado alguma funÃ§Ã£o, listado anteriormente, o mesmo nÃ£o serÃ¡ apresentado.\n *\n * Os botÃµes \"Salvar\" e \"Salvar e Novo\" podem ser habilitados/desabilitados utilizando a propriedade p-disable-submit.\n * Esta propriedade pode ser utilizada para desabilitar os botÃµes caso exista um formulÃ¡rio invÃ¡lido na pÃ¡gina ou alguma\n * regra de negÃ³cio nÃ£o tenha sido atendida.\n */\nexport class PoPageEditBaseComponent {\n\n  private _literals: PoPageEditLiterals;\n  private _title: string;\n\n  @ViewChild(PoPageContentComponent, { static: true }) poPageContent: PoPageContentComponent;\n\n  /** Objeto com propriedades do breadcrumb. */\n  @Input('p-breadcrumb') breadcrumb?: PoBreadcrumb;\n\n  /** Desabilita botÃµes de submissÃ£o (save e saveNew) */\n  @Input('p-disable-submit') disableSubmit?: boolean;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com as literais usadas no `po-page-edit`.\n   *\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\n   *\n   * ```\n   *  const customLiterals: PoPageEditLiterals = {\n   *    cancel: 'Voltar',\n   *    save: 'Confirmar',\n   *    saveNew: 'Confirmar e criar um novo'\n   *  };\n   * ```\n   *\n   * Ou passando apenas as literais que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: PoPageEditLiterals = {\n   *    cancel: 'Cancelar processo'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <po-page-edit\n   *   [p-literals]=\"customLiterals\">\n   * </po-page-edit>\n   * ```\n   *\n   *  > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do browser (pt, en, es).\n   */\n  @Input('p-literals') set literals(value: PoPageEditLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...poPageEditLiteralsDefault[poLocaleDefault],\n        ...poPageEditLiteralsDefault[browserLanguage()],\n        ...value\n      };\n    } else {\n      this._literals = poPageEditLiteralsDefault[browserLanguage()];\n    }\n  }\n  get literals() {\n    return this._literals || poPageEditLiteralsDefault[browserLanguage()];\n  }\n\n  /** TÃ­tulo da pÃ¡gina. */\n  @Input('p-title') set title(title: string) {\n    this._title = title;\n    this.poPageContent.recalculateHeaderSize();\n  }\n\n  get title() {\n    return this._title;\n  }\n\n}\n","import { Component, ViewContainerRef } from '@angular/core';\n\nimport { PoPageEditBaseComponent } from './po-page-edit-base.component';\nimport { callAction, hasAction } from '../po-page-util/po-page-util';\n\n/**\n * @docsExtends PoPageEditBaseComponent\n *\n * @example\n *\n * <example name=\"po-page-edit-basic\" title=\"Portinari Page Edit Basic\">\n *  <file name=\"sample-po-page-edit-basic/sample-po-page-edit-basic.component.html\"> </file>\n *  <file name=\"sample-po-page-edit-basic/sample-po-page-edit-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-edit-labs\" title=\"Portinari Page Edit Labs\">\n *  <file name=\"sample-po-page-edit-labs/sample-po-page-edit-labs.component.html\"> </file>\n *  <file name=\"sample-po-page-edit-labs/sample-po-page-edit-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-edit-user\" title=\"Portinari Page Edit - User\">\n *  <file name=\"sample-po-page-edit-user/sample-po-page-edit-user.component.html\"> </file>\n *  <file name=\"sample-po-page-edit-user/sample-po-page-edit-user.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-page-edit',\n  templateUrl: './po-page-edit.component.html'\n})\nexport class PoPageEditComponent extends PoPageEditBaseComponent {\n  hasAction: Function = hasAction;\n  callAction: Function = callAction;\n  parentContext: ViewContainerRef;\n\n  constructor(viewRef: ViewContainerRef) {\n    super();\n    this.parentContext = viewRef['_view']['component'];\n  }\n\n  getIcon(icon: string): string {\n    if (icon === 'cancel') {\n      return this.isPrimaryAction('cancel') ? 'po-icon-close' : '';\n    }\n\n    if (icon === 'saveNew') {\n      return this.isPrimaryAction('saveNew') ? 'po-icon-ok' : '';\n    }\n\n    return '';\n  }\n\n  getType(type: string): string {\n    const isCancelPrimaryAction = type === 'cancel' && this.isPrimaryAction('cancel');\n    const isSaveNewPrimaryAction = type === 'saveNew' && this.isPrimaryAction('saveNew');\n\n    return isCancelPrimaryAction || isSaveNewPrimaryAction ? 'primary' : 'default';\n  }\n\n  hasAnyAction(): boolean {\n    return hasAction('cancel', this.parentContext) || hasAction('saveNew', this.parentContext) || hasAction('save', this.parentContext);\n  }\n\n  hasPageHeader(): boolean {\n    return !!(this.title || this.hasAnyAction() || (this.breadcrumb && this.breadcrumb.items.length));\n  }\n\n  private isPrimaryAction(action: string): boolean {\n    const hasSaveAction = !hasAction('save', this.parentContext);\n\n    if (action === 'saveNew') {\n      return hasSaveAction;\n    }\n\n    if (action === 'cancel') {\n      return !hasAction('saveNew', this.parentContext) && hasSaveAction;\n    }\n\n    return false;\n  }\n\n}\n","import { Input } from '@angular/core';\n\nimport { PoBreadcrumb } from '../../po-breadcrumb/po-breadcrumb.interface';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * O componente **po-page-header** Ã© responsÃ¡vel pelo tÃ­tulo da pÃ¡gina e container dos botÃµes de aÃ§Ãµes dos componentes\n * po-page-list e po-page-base.\n */\nexport class PoPageHeaderBaseComponent {\n\n  private _breadcrumb: PoBreadcrumb;\n\n  /** Objeto com propriedades do breadcrumb. */\n\n  @Input('p-breadcrumb') set breadcrumb(value: PoBreadcrumb) {\n    this._breadcrumb = value;\n  }\n  get breadcrumb(): PoBreadcrumb {\n    return this._breadcrumb;\n  }\n\n  /** TÃ­tulo da pÃ¡gina. */\n  @Input('p-title') title: string;\n\n}\n","import { Component } from '@angular/core';\n\nimport { PoPageHeaderBaseComponent } from './po-page-header-base.component';\n\n/**\n * @docsPrivate\n * @docsExtends PoPageHeaderBaseComponent\n */\n@Component({\n  selector: 'po-page-header',\n  templateUrl: './po-page-header.component.html'\n})\nexport class PoPageHeaderComponent extends PoPageHeaderBaseComponent { }\n","import { Input } from '@angular/core';\n\nimport { poLocaleDefault } from './../../../utils/util';\nimport { PoLanguageService } from './../../../services/po-language/po-language.service';\n\nimport { PoBreadcrumb } from '../../po-breadcrumb/po-breadcrumb.interface';\nimport { PoDisclaimerGroup } from '../../po-disclaimer-group/po-disclaimer-group.interface';\nimport { PoPageDefaultBaseComponent } from '../po-page-default/po-page-default-base.component';\nimport { PoPageFilter } from './../po-page-filter.interface';\nimport { PoPageListLiterals } from './po-page-list-literals.interface';\n\nexport const poPageListLiteralsDefault = {\n  en: <PoPageListLiterals> {\n    otherActions: 'Other actions'\n  },\n  es: <PoPageListLiterals> {\n    otherActions: 'Otras acciones'\n  },\n  pt: <PoPageListLiterals> {\n    otherActions: 'Outras aÃ§Ãµes'\n  },\n  ru: <PoPageListLiterals> {\n    otherActions: 'ÐÑÑÐ³Ð¸Ðµ Ð´ÐµÐ¹ÑÑÐ²Ð¸Ñ'\n  }\n};\n\n/**\n * @description\n *\n * O componente `po-page-list` Ã© utilizado como o container principal para as telas de listagem de dados,\n * podendo ser apresentado como lista ou tabela.\n *\n * Este componente possibilita realizar filtro dos dados, no qual permite que seja atribuido uma funÃ§Ã£o que serÃ¡ executada no momento\n * da filtragem. Este comportamento pode ser acionado tanto ao *click* do Ã­cone [po-icon-search](/guides/icons)\n * quanto ao pressionar da tecla *ENTER* quando o foco estiver no campo de pesquisa.\n *\n * Para facilitar a manipulaÃ§Ã£o e visualizaÃ§Ã£o dos filtros aplicados, Ã© possÃ­vel tambÃ©m utilizar o componente\n * [`po-disclaimer-group`](/documentation/po-disclaimer-group).\n */\nexport abstract class PoPageListBaseComponent extends PoPageDefaultBaseComponent {\n\n  private _disclaimerGroup?: PoDisclaimerGroup;\n  private _literals: PoPageListLiterals;\n\n  protected language: string;\n  protected resizeListener: () => void;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto que implementa as propriedades da interface `PoBreadcrumb`.\n   */\n  @Input('p-breadcrumb') breadcrumb?: PoBreadcrumb;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto que implementa as propriedades da interface `PoDisclaimerGroup`.\n   */\n  @Input('p-disclaimer-group') set disclaimerGroup(value: PoDisclaimerGroup) {\n    if (!value) {\n      value = <any> {};\n    }\n\n    this._disclaimerGroup = value;\n  }\n\n  get disclaimerGroup(): PoDisclaimerGroup {\n    return this._disclaimerGroup;\n  }\n\n  /**\n   * @description\n   *\n   * Objeto que implementa as propriedades da interface `PoPageFilter`.\n   */\n  @Input('p-filter') filter: PoPageFilter;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com as literais usadas no `po-page-list`.\n   *\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\n   *\n   * ```\n   *  const customLiterals: PoPageListLiterals = {\n   *    otherActions: 'Mais aÃ§Ãµes'\n   *  };\n   * ```\n   *\n   * Ou passando apenas as literais que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: PoPageListLiterals = {\n   *    otherActions: 'AÃ§Ãµes da pÃ¡gina'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <po-page-list\n   *   [p-literals]=\"customLiterals\">\n   * </po-page-list>\n   * ```\n   *\n   * > O valor padrÃ£o serÃ¡ traduzido de acordo com o idioma configurado no [`PoI18nService`](/documentation/po-i18n) ou *browser*.\n   */\n  @Input('p-literals') set literals(value: PoPageListLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...poPageListLiteralsDefault[poLocaleDefault],\n        ...poPageListLiteralsDefault[this.language],\n        ...value\n      };\n    } else {\n      this._literals = poPageListLiteralsDefault[this.language];\n    }\n  }\n\n  get literals() {\n    return this._literals || poPageListLiteralsDefault[this.language];\n  }\n\n  constructor(languageService: PoLanguageService) {\n    super();\n\n    this.language = languageService.getShortLanguage();\n  }\n\n}\n","import {\n  AfterContentInit, Component, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChange, ViewChild, ViewContainerRef\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { callFunction, isTypeof } from '../../../utils/util';\nimport { PoLanguageService } from './../../../services/po-language/po-language.service';\n\nimport { PoPageAction } from '../po-page-action.interface';\n\nimport { PoPageContentComponent } from '../po-page-content/po-page-content.component';\nimport { PoPageListBaseComponent } from './po-page-list-base.component';\n\n/**\n * @docsExtends PoPageListBaseComponent\n *\n * @example\n *\n * <example name=\"po-page-list-basic\" title=\"Portinari Page List Basic\">\n *  <file name=\"sample-po-page-list-basic/sample-po-page-list-basic.component.html\"> </file>\n *  <file name=\"sample-po-page-list-basic/sample-po-page-list-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-list-labs\" title=\"Portinari Page List Labs\">\n *  <file name=\"sample-po-page-list-labs/sample-po-page-list-labs.component.html\"> </file>\n *  <file name=\"sample-po-page-list-labs/sample-po-page-list-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-list-hiring-processes\" title=\"Portinari Page List - Hiring Processes\">\n *  <file name=\"sample-po-page-list-hiring-processes/sample-po-page-list-hiring-processes.component.html\"> </file>\n *  <file name=\"sample-po-page-list-hiring-processes/sample-po-page-list-hiring-processes.component.ts\"> </file>\n *  <file name=\"sample-po-page-list-hiring-processes/sample-po-page-list-hiring-processes.service.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-page-list',\n  templateUrl: './po-page-list.component.html'\n})\nexport class PoPageListComponent extends PoPageListBaseComponent implements AfterContentInit, OnChanges, OnDestroy, OnInit {\n\n  advancedSearch: string;\n  dropdownActions: Array<PoPageAction>;\n  isMobile: boolean;\n  limitPrimaryActions: number = 3;\n  parentRef: ViewContainerRef;\n\n  private isRecalculate = true;\n  private maxWidthMobile: number = 480;\n\n  callFunction = callFunction;\n\n  @ViewChild(PoPageContentComponent, { static: true }) poPageContent: PoPageContentComponent;\n\n  constructor(\n    viewRef: ViewContainerRef,\n    languageService: PoLanguageService,\n    public renderer: Renderer2,\n    private router: Router) {\n\n    super(languageService);\n    this.parentRef = viewRef['_view']['component'];\n    this.initializeListeners();\n  }\n\n  ngOnInit(): void {\n    this.advancedSearch = this.initializeFixedLiterals();\n  }\n\n  ngAfterContentInit(): void {\n    this.setIsMobile();\n    this.setDropdownActions();\n  }\n\n  ngOnChanges(changes: {[propName: string]: SimpleChange}) {\n    this.setDropdownActions();\n  }\n\n  ngOnDestroy() {\n    this.removeListeners();\n  }\n\n  actionIsDisabled(action: any) {\n    return isTypeof(action.disabled, 'function') ? action.disabled(action) : action.disabled;\n  }\n\n  callAction(item: PoPageAction): void {\n    if (item.url) {\n      this.router.navigate([item.url]);\n    } else if (item.action) {\n      callFunction(item.action, this.parentRef);\n    }\n  }\n\n  hasPageHeader(): boolean {\n    return  !!(this.title || (this.actions && this.actions.length) || (this.breadcrumb && this.breadcrumb.items.length));\n  }\n\n  private onResize(event: Event): void {\n    const width = (event.target as Window).innerWidth;\n\n    if (width < this.maxWidthMobile) {\n      this.isMobile = true;\n      this.limitPrimaryActions = 2;\n      this.setDropdownActions();\n    } else {\n      this.isMobile = false;\n      this.limitPrimaryActions = 3;\n      this.setDropdownActions();\n    }\n  }\n\n  private setIsMobile(): void {\n    if (window.innerWidth < this.maxWidthMobile) {\n      this.isMobile = true;\n      this.limitPrimaryActions = 2;\n    }\n  }\n\n  setDropdownActions(): void {\n    if (this.actions.length > this.limitPrimaryActions) {\n      this.dropdownActions = this.actions.slice(this.limitPrimaryActions - 1);\n    }\n  }\n\n  callActionFilter(field: string): void {\n    this.callFunction(this.filter[field], this.parentRef);\n  }\n\n  onkeypress(key) {\n    if (key === 13) {\n      this.callActionFilter('action');\n    }\n  }\n\n  changeModel(newModel): void {\n    this.parentRef[this.filter.ngModel] = newModel;\n  }\n\n  // Recebe evento change do disclaimer e recalcula tela\n  onChangeDisclaimerGroup(disclaimers) {\n    if ((disclaimers && disclaimers.length && this.isRecalculate) || (disclaimers.length === 0 && !this.isRecalculate)) {\n      this.poPageContent.recalculateHeaderSize();\n      this.isRecalculate = !this.isRecalculate;\n    }\n\n    if (this.disclaimerGroup && this.disclaimerGroup.change) {\n      this.disclaimerGroup.change(disclaimers);\n    }\n  }\n\n  private initializeFixedLiterals() {\n    const literal = {\n      pt: {\n        advancedSearch: 'Busca avanÃ§ada'\n      },\n      en: {\n        advancedSearch: 'Advanced search'\n      },\n      es: {\n        advancedSearch: 'BÃºsqueda avanzada'\n      }\n    };\n\n    return literal[this.language].advancedSearch;\n  }\n\n  private initializeListeners() {\n    this.resizeListener = this.renderer.listen('window', 'resize', (event: MouseEvent) => {\n      this.onResize(event);\n    });\n  }\n\n  private removeListeners() {\n    this.resizeListener();\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { PoBreadcrumbModule } from '../po-breadcrumb/po-breadcrumb.module';\nimport { PoButtonModule } from '../po-button/po-button.module';\nimport { PoDisclaimerGroupModule } from '../po-disclaimer-group/po-disclaimer-group.module';\nimport { PoDropdownModule } from '../po-dropdown/po-dropdown.module';\nimport { PoFieldModule } from '../po-field/po-field.module';\nimport { PoLanguageModule } from './../../services/po-language/po-language.module';\nimport { PoModalModule } from './../po-modal/po-modal.module';\nimport { PoPageComponent } from './po-page.component';\nimport { PoPageContentComponent } from './po-page-content/po-page-content.component';\nimport { PoPageDefaultComponent } from './po-page-default/po-page-default.component';\nimport { PoPageDetailComponent } from './po-page-detail/po-page-detail.component';\nimport { PoPageEditComponent } from './po-page-edit/po-page-edit.component';\nimport { PoPageHeaderComponent } from './po-page-header/po-page-header.component';\nimport { PoPageListComponent } from './po-page-list/po-page-list.component';\n\n/**\n * @description\n * MÃ³dulo dos componentes po-page-default, po-page-edit, po-page-list, po-page-login e po-page-detail.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    PoBreadcrumbModule,\n    PoButtonModule,\n    PoDisclaimerGroupModule,\n    PoDropdownModule,\n    PoFieldModule,\n    PoLanguageModule,\n    PoModalModule\n  ],\n  declarations: [\n    PoPageComponent,\n    PoPageContentComponent,\n    PoPageDefaultComponent,\n    PoPageDetailComponent,\n    PoPageEditComponent,\n    PoPageHeaderComponent,\n    PoPageListComponent\n  ],\n  exports: [\n    PoPageDetailComponent,\n    PoPageDefaultComponent,\n    PoPageEditComponent,\n    PoPageListComponent\n  ]\n})\nexport class PoPageModule { }\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente para o conjunto de cÃ­rculos que faz a passagem de itens do `po-slide`.\n */\n@Component({\n  selector: 'po-slide-circles',\n  templateUrl: './po-slide-circles.component.html'\n})\nexport class PoSlideCirclesComponent {\n\n  /** Index do slide atual. */\n  @Input('p-current-slide-index') currentSlideIndex: number;\n\n  /** Itens do slide. */\n  @Input('p-items') items: Array<any>;\n\n  /** Evento emitido ao clicar em um controle. */\n  @Output('p-click') click = new EventEmitter<any>();\n}\n","import { Input } from '@angular/core';\n\nimport { convertToInt } from './../../utils/util';\n\nimport { PoSlideItem } from './interfaces/po-slide-item.interface';\n\nconst poSlideIntervalDefault = 4000;\n\n/**\n * @description\n *\n * Componente de slide para visualizaÃ§Ã£o e controle de elementos de forma cÃ­clica. Exibe um conjunto de imagens ou dados que permitem\n * customizar sua visualizaÃ§Ã£o utilizando a diretiva **[p-slide-content-template](/documentation/po-slide-content-template)**.\n *\n * #### Boas prÃ¡ticas:\n * - Utilizar imagens no slide, mesmo quando possui conteÃºdo personalizado.\n * - Evitar utilizar apenas um slide isolado, utilize pelo menos dois.\n * - Evitar utilizar mais de 5 slides, pois a ideia do componente Ã© destacar apenas informaÃ§Ãµes importantes.\n */\nexport abstract class PoSlideBaseComponent {\n\n  private _interval: number = poSlideIntervalDefault;\n  private _height?: number;\n  private _slides: Array<PoSlideItem | string | any>;\n\n  /**\n   * @optional\n   *\n   * @description\n   * Altura do po-slide, caso seja slide com template customizado, nÃ£o assume o valor `default`.\n   *\n   * @default `336`\n   */\n  @Input('p-height') set height(value: number) {\n    this._height = convertToInt(value);\n    this.setSlideHeight(this.height);\n  }\n\n  get height(): number {\n    return this._height;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Valor em milissegundos que define o tempo de troca dos slides, caso o valor seja menor que `1000` os slides nÃ£o trocam automaticamente.\n   *\n   * @default `4000`\n   */\n  @Input('p-interval') set interval(value: number) {\n    this._interval = convertToInt(value, poSlideIntervalDefault);\n    this._interval >= 1000 ? this.startInterval() : this.cancelInterval();\n  }\n\n  get interval(): number {\n    return this._interval;\n  }\n\n  /**\n   * @description\n   *\n   * Array de imagens ou dados para o slide, pode ser de trÃªs formas:\n   *\n   * - Array implementando objetos da interface `PoSlideItem`:\n   * ```\n   * [{ image: '/assets/image-1', action: 'imageClick.bind(this)'}, { image: '/assets/image-2' }]\n   * ```\n   * - Array de `strings` com os caminhos das imagens:\n   * ```\n   * ['/assets/image-1', '/assets/image-2' ]\n   * ```\n   * - Array com lista de itens (para utilizar template):\n   * ```\n   * [{ label: '1', img: '/assets/image-1' }, { label: '2', img: '/assets/image-1' }]\n   * ```\n   *\n   * > As setas de navegaÃ§Ã£o e o controle com cÃ­rculos apenas serÃ£o renderizados caso possua mais de um slide.\n   */\n  @Input('p-slides') set slides(value: Array<PoSlideItem | string | any>) {\n    this._slides = value;\n    this.setSlideItems(value);\n\n    if (value && value.length) {\n      this.startSlide();\n    }\n  }\n\n  get slides(): Array<PoSlideItem | string | any> {\n    return this._slides;\n  }\n\n  abstract setSlideHeight(height: number): void;\n\n  protected abstract cancelInterval(): void;\n  protected abstract setSlideItems(value: Array<PoSlideItem | string | any>): void;\n  protected abstract startSlide(): void;\n  protected abstract startInterval(): void;\n\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n/**\n * @usedBy PoSlideComponent\n *\n * @description\n *\n * Esta diretiva permite a customizaÃ§Ã£o de um slide.\n *\n * Deve-se utilizar como parÃ¢metro a referÃªncia do item e/ou Ã­ndice, sendo por padrÃ£o o item.\n *  - Item: `item` determina o item do slide corrente.\n *  - Ãndice: `index` determina o Ã­ndice do slide corrente.\n *\n * Esta diretiva pode ser usada de duas formas: explÃ­cita ou *syntax sugar*. Veja a seguir ambos, respectivamente:\n *\n * ```\n * ...\n * <po-slide\n *   [p-slides]=\"[{ id: 1, name: 'Register', email: 'register@portinari.com' }]\">\n *\n *   <ng-template p-slide-content-template let-item let-code=\"index\">\n *     <div class=\"po-row\">\n *       <po-info class=\"po-md-6\" p-label=\"Code\" [p-value]=\"item.id\"></po-info>\n *       <po-info class=\"po-md-6\" p-label=\"Email\" [p-value]=\"item.email\"></po-info>\n *     </div>\n *   </ng-template>\n *\n * </po-slide>\n *\n * ...\n * ```\n *\n * ```\n * ...\n * <po-slide\n *    [p-slides]=\"[{ id: 1, name: 'Register', email: 'register@portinari.com' }]\">\n *\n *    <div *p-slide-content-template=\"let item, let i=index\" class=\"po-row\">\n *      <po-info class=\"po-md-12\" p-label=\"Email\" [p-value]=\"item.email\"></po-info>\n *    </div>\n * </po-slide>\n * ...\n *\n * ```\n */\n@Directive({\n  selector: '[p-slide-content-template]'\n})\nexport class PoSlideContentTemplateDirective {\n\n  // NecessÃ¡rio manter templateRef para o funcionamento do row template.\n  constructor(public templateRef: TemplateRef<any>) { }\n}\n","import { Component, ElementRef, Input, ViewChild } from '@angular/core';\n\nimport { isIEOrEdge } from '../../../utils/util';\n\nimport { PoSlideContentTemplateDirective } from '../directives/po-slide-content-template.directive';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente para cada item do po-slide.\n */\n@Component({\n  selector: 'po-slide-item',\n  templateUrl: './po-slide-item.component.html'\n})\nexport class PoSlideItemComponent {\n\n  @ViewChild('slideItem', { static: true }) itemElement: ElementRef;\n\n  isIEOrEdge: any = isIEOrEdge();\n\n  /** AÃ§Ã£o executada ao clicar em uma imagem */\n  @Input('p-action') action: Function;\n\n  /** Texto alternativo quando a imagem nÃ£o Ã© encontrada */\n  @Input('p-alt') alt: string;\n\n  /** Dados para o template customizado */\n  @Input('p-data') data: Array<any>;\n\n  /** Caminho da imagem */\n  @Input('p-image') image: string;\n\n  /** Altura da imagem */\n  @Input('p-image-height') imageHeight: number;\n\n  /** Template customizado */\n  @Input('p-template') template: PoSlideContentTemplateDirective;\n\n  /** Link executado ao clicar em uma imagem */\n  @Input('p-link') link: string;\n\n  setLinkType() {\n    if (!this.template && this.link) {\n      return this.link.startsWith('http') ? 'externalLink' : 'internalLink';\n    }\n\n    return 'noLink';\n  }\n\n}\n","import { Component, ContentChild, DoCheck , ElementRef, HostListener, QueryList, ViewChild, ViewChildren } from '@angular/core';\n\nimport { animate, AnimationBuilder, AnimationFactory, AnimationPlayer, keyframes, style } from '@angular/animations';\n\nimport { PoSlideBaseComponent } from './po-slide-base.component';\nimport { PoSlideContentTemplateDirective } from './directives/po-slide-content-template.directive';\nimport { PoSlideItem } from './interfaces/po-slide-item.interface';\nimport { PoSlideItemComponent } from './po-slide-item/po-slide-item.component';\n\nconst poSlideDefaultHeight = 336;\nconst poSlideIntervalMin = 1000;\nconst poSlideMinHeight = 192;\nconst poSlideTiming = '250ms ease';\n\n/**\n * @docsExtends PoSlideBaseComponent\n *\n * @example\n * <example name=\"po-slide-basic\" title=\"Portinari Slide Basic\">\n *   <file name=\"sample-po-slide-basic/sample-po-slide-basic.component.html\"> </file>\n *   <file name=\"sample-po-slide-basic/sample-po-slide-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-slide-labs\" title=\"Portinari Slide Labs\">\n *   <file name=\"sample-po-slide-labs/sample-po-slide-labs.component.html\"> </file>\n *   <file name=\"sample-po-slide-labs/sample-po-slide-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-slide-useful-articles\" title=\"Portinari Slide - Useful articles\">\n *   <file name=\"sample-po-slide-useful-articles/sample-po-slide-useful-articles.component.html\"> </file>\n *   <file name=\"sample-po-slide-useful-articles/sample-po-slide-useful-articles.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-slide-landscapes\" title=\"Portinari Slide - Landscapes\">\n *   <file name=\"sample-po-slide-landscapes/sample-po-slide-landscapes.component.html\"> </file>\n *   <file name=\"sample-po-slide-landscapes/sample-po-slide-landscapes.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-slide',\n  templateUrl: './po-slide.component.html',\n})\nexport class PoSlideComponent extends PoSlideBaseComponent implements DoCheck {\n\n  private isLoaded: boolean = false;\n  private player: AnimationPlayer;\n  private setInterval: any;\n\n  private get hasElements() {\n    return !!this.slide.nativeElement.offsetWidth && !!this.itemsElements && !!this.itemsElements.length;\n  }\n\n  private get isImageSlide() {\n    return !this.slideContentTemplate;\n  }\n\n  private get offset() {\n    return this.currentSlideIndex * this.slideItemWidth;\n  }\n\n  get hasSlides() {\n    return !!this.slides && !!this.slides.length;\n  }\n\n  currentSlideIndex = 0;\n  imageHeight: number;\n  slideItems: Array<PoSlideItem | any> = [];\n  slideItemWidth: number;\n\n  @ContentChild(PoSlideContentTemplateDirective, { static: true }) slideContentTemplate: PoSlideContentTemplateDirective;\n\n  @ViewChild('slide', { static: true }) private slide: ElementRef;\n\n  @ViewChildren(PoSlideItemComponent) private itemsElements: QueryList<PoSlideItemComponent>;\n\n  @HostListener('window:resize') onResize() {\n    if (this.slide) {\n      this.setSlideItemWidth();\n      this.goToItem(this.currentSlideIndex);\n    }\n  }\n\n  constructor(private builder: AnimationBuilder) {\n    super();\n  }\n\n  ngDoCheck() {\n\n    if (!this.isLoaded && this.hasElements) {\n\n      this.setSlideItemWidth();\n      this.isLoaded = true;\n\n      if (this.hasSlides) {\n        this.startSlide();\n      }\n    }\n  }\n\n  goToItem(index: number) {\n\n    if (this.interval > poSlideIntervalMin) {\n      this.startInterval();\n    }\n\n    this.currentSlideIndex = index;\n    this.animate(this.offset);\n  }\n\n  nextControl() {\n\n    if (this.interval > poSlideIntervalMin) {\n      this.startInterval();\n    }\n\n    this.next();\n  }\n\n  next() {\n    if (this.currentSlideIndex + 1 === this.slideItems.length) {\n      this.currentSlideIndex = 0;\n      this.animate(0);\n      return;\n    }\n    this.currentSlideIndex = (this.currentSlideIndex + 1) % this.slideItems.length;\n    this.animate(this.offset);\n  }\n\n  previous() {\n    if (this.currentSlideIndex === 0) {\n      this.currentSlideIndex = this.slideItems.length - 1;\n      this.animate(this.offset);\n      return;\n    }\n    this.currentSlideIndex = ((this.currentSlideIndex - 1) + this.slideItems.length) % this.slideItems.length;\n    this.animate(this.offset);\n  }\n\n  previousControl() {\n\n    if (this.interval > poSlideIntervalMin) {\n      this.startInterval();\n    }\n\n    this.previous();\n  }\n\n  setSlideHeight(height: number) {\n    this.setHeight(height);\n  }\n\n  private animate(offset: number) {\n    if (this.hasElements) {\n      const animation: AnimationFactory = this.buildTransitionAnimation(offset);\n\n      this.player = animation.create(this.slide.nativeElement);\n      this.player.play();\n    }\n  }\n\n  private buildTransitionAnimation(offset: number) {\n    return this.builder.build([\n      animate(\n        poSlideTiming,\n        keyframes([style({ transform: `translateX(-${offset}px)` })])\n      )\n    ]);\n  }\n\n  private createArrayForTemplate(slides: Array<any>) {\n    this.slideItems = [...slides];\n  }\n\n  private createArrayFromSlides(slides: Array<PoSlideItem | string | any>) {\n    const isStringArray = slides.every(item => typeof item === 'string');\n\n    if (isStringArray) {\n      slides.forEach(element => this.slideItems.push({ image: `${element}` }));\n    } else {\n      this.slideItems = [...<Array<PoSlideItem>>slides];\n    }\n  }\n\n  private setDefaultHeight(height: number) {\n    if (height && height <= poSlideMinHeight || !height && this.isImageSlide) {\n      this.slide.nativeElement.style.height = `${poSlideDefaultHeight}px`;\n      this.imageHeight = poSlideDefaultHeight;\n    } else {\n      this.imageHeight = undefined;\n    }\n  }\n\n  private setHeight(height: number) {\n    if (height && height > poSlideMinHeight) {\n      this.slide.nativeElement.style.height = `${height}px`;\n      this.imageHeight = height;\n    } else {\n      this.setDefaultHeight(height);\n    }\n  }\n\n  private setSlideItemWidth() {\n    if (this.hasElements) {\n      this.slideItemWidth = this.itemsElements.first.itemElement.nativeElement.getBoundingClientRect().width;\n    }\n  }\n\n  protected cancelInterval() {\n    clearInterval(this.setInterval);\n  }\n\n  protected setSlideItems(slides: Array<PoSlideItem | string | any>) {\n\n    if (this.hasSlides) {\n      this.slideContentTemplate ? this.createArrayForTemplate(slides) : this.createArrayFromSlides(slides);\n    } else {\n      this.slideItems = [];\n      this.cancelInterval();\n    }\n  }\n\n  protected startSlide() {\n\n    this.setSlideHeight(this.height);\n\n    if (this.interval > poSlideIntervalMin) {\n      this.startInterval();\n    }\n\n    this.currentSlideIndex = 0;\n  }\n\n  protected startInterval() {\n\n    if (this.setInterval) {\n      this.cancelInterval();\n    }\n\n    this.setInterval = this.hasSlides && this.hasElements ? setInterval(() => { this.next(); }, this.interval) : undefined;\n  }\n\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente para a seta que controla a passagem de itens do `po-slide`.\n */\n@Component({\n  selector: 'po-slide-control',\n  templateUrl: './po-slide-control.component.html'\n})\nexport class PoSlideControlComponent {\n\n  /** Tipo de controle que aceita os valores: 'previous' e 'next'. */\n  @Input('p-control') control: string;\n\n  /** Evento emitido ao clicar em um controle. */\n  @Output('p-click') click = new EventEmitter<any>();\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoContainerModule } from '../po-container/po-container.module';\n\nimport { PoSlideCirclesComponent } from './po-slide-circles/po-slide-circles.component';\nimport { PoSlideComponent } from './po-slide.component';\nimport { PoSlideContentTemplateDirective } from './directives/po-slide-content-template.directive';\nimport { PoSlideControlComponent } from './po-slide-control/po-slide-control.component';\nimport { PoSlideItemComponent } from './po-slide-item/po-slide-item.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente `po-slide`.\n *\n * > Para o correto funcionamento do componente `po-slide`, deve ser importado o mÃ³dulo `BrowserAnimationsModule` no\n * > mÃ³dulo principal da sua aplicaÃ§Ã£o.\n *\n * MÃ³dulo da aplicaÃ§Ã£o:\n * ```\n * import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n * import { PoModule } from '@portinari/portinari-ui';\n * ...\n *\n * @NgModule({\n *   imports: [\n *     BrowserModule,\n *     BrowserAnimationsModule,\n *     ...\n *     PoModule\n *   ],\n *   declarations: [\n *     AppComponent,\n *     ...\n *   ],\n *   providers: [],\n *   bootstrap: [AppComponent]\n * })\n * export class AppModule { }\n * ```\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    PoContainerModule\n  ],\n  declarations: [\n    PoSlideCirclesComponent,\n    PoSlideComponent,\n    PoSlideControlComponent,\n    PoSlideContentTemplateDirective,\n    PoSlideItemComponent,\n  ],\n  exports: [\n    PoSlideComponent,\n    PoSlideContentTemplateDirective\n  ],\n  providers: [],\n  schemas: []\n})\nexport class PoSlideModule { }\n","import { AfterContentInit, Component, ElementRef, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { uuid } from '../../../utils/util';\n\nimport { PoStepperStatus } from '../enums/po-stepper-status.enum';\n\n/**\n * @description\n *\n * O componente `po-step` Ã© utilizado para envolver e renderizar o conteÃºdo de um passo (*step*) do `po-stepper`, por exemplo:\n *\n * ```\n * <po-stepper>\n *\n *    <po-step p-label=\"EndereÃ§o\">\n *\n *        <!-- ConteÃºdo referente ao endereÃ§o -->\n *\n *    </po-step>\n *\n *    <po-step p-label=\"Pagamento\">\n *\n *        <!-- ConteÃºdo referente ao pagamento -->\n *\n *    </po-step>\n *\n *  </po-stepper>\n * ```\n *\n * A renderizaÃ§Ã£o do conteÃºdo envolvido na tela e o controle dos status sÃ£o feitos automaticamente. No qual, o primeiro\n * `po-step` encontrado serÃ¡ colocado como ativo, o prÃ³ximo fica com o status *default* e os demais ficam\n * desabilitados (*disabled*).\n *\n * Ao clicar no `po-step` que estÃ¡ com o status *default*, o que estÃ¡ ativo ficarÃ¡ com o\n * status de concluÃ­do (*done*) e o prÃ³ximo que estava desabilitado ficarÃ¡ com o status *default* e o restante permanecerÃ¡\n * com o status desabilitado.\n *\n * > Ao utilizar o `po-step`, o componente `po-stepper` funcionarÃ¡ de forma sequencial, ou seja, nÃ£o serÃ¡ possÃ­vel\n * pular para outro `po-step` que esteja com o status igual a desabilitado (*disabled*).\n *\n * Acesse a [documentaÃ§Ã£o do `po-stepper`](/documentation/po-stepper) para ter mais informaÃ§Ãµes sobre o seu funcionamento\n * e exemplos de uso.\n */\n@Component({\n  selector: 'po-step',\n  templateUrl: 'po-step.component.html'\n})\nexport class PoStepComponent implements AfterContentInit {\n\n  private _status?: PoStepperStatus = PoStepperStatus.Disabled;\n\n  // ID do step\n  id?: string = uuid();\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * FunÃ§Ã£o chamada quando o prÃ³ximo *step* for clicado ou quando o mÃ©todo `PoStepperComponent.next()` for chamado.\n   * Ao retornar `true` define que esse *step* ficarÃ¡ ativo e o atual como concluÃ­do (*done*).\n   * TambÃ©m aceita funÃ§Ãµes que retornem `Observable<boolean>`. Ao retornar um `Observable<boolean>`,\n   * garanta que esse `Observable` serÃ¡ completado.\n   *\n   * Ao ser disparada, a mesma receberÃ¡ por parÃ¢metro o `PoStepComponent` atual.\n   *\n   * O contexto da funÃ§Ã£o que serÃ¡ chamada, serÃ¡ o mesmo que o do `PoStepComponent`, entÃ£o para poder alterar\n   * para o contexto do componente que o estÃ¡ utilizando, pode ser utilizado a propriedade `bind` do Javascript.\n   * Por exemplo, para a funÃ§Ã£o `validate`:\n   *\n   * ```\n   * <po-step p-label=\"Step 1\" [p-can-active-next-step]=\"validate.bind(this)\">\n   * ...\n   * </po-step>\n   * ```\n   */\n  @Input('p-can-active-next-step') canActiveNextStep: ((currentStep) => boolean) | ((currentStep) => Observable<boolean>);\n\n  /** TÃ­tulo que serÃ¡ exibido descrevendo o passo (*step*). */\n  @Input('p-label') label: string;\n\n  // Estado de exibiÃ§Ã£o do `po-step`.\n  @Input('p-status') set status(status: PoStepperStatus) {\n    this._status = status;\n\n    this.setDisplayOnActiveOrError();\n  }\n\n  get status() {\n    return this._status;\n  }\n\n  constructor(private elementRef: ElementRef) { }\n\n  ngAfterContentInit() {\n    this.setDisplayOnActiveOrError();\n  }\n\n  protected setDisplayOnActiveOrError() {\n    this.elementRef.nativeElement.style.display =\n      (this.status === PoStepperStatus.Active || this.status === PoStepperStatus.Error) ? '' : 'none';\n  }\n\n}\n","/**\n *\n * @usedBy PoStepperComponent\n *\n * @description\n *\n * <a id=\"stepperOrientation\"></a>\n *\n * *Enums* para definiÃ§Ã£o da orientaÃ§Ã£o do `po-stepper`.\n */\nexport enum PoStepperOrientation {\n\n  /** Define a exibiÃ§Ã£o do componente na horizontal. */\n  Horizontal = 'horizontal',\n\n  /** Define a exibiÃ§Ã£o do componente na vertical. */\n  Vertical = 'vertical'\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { PoStepperStatus } from '../enums/po-stepper-status.enum';\n\nconst poMediumStepSize = 32;\nconst poLargeStepSize = 48;\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente responsÃ¡vel por exibir os cÃ­rculos dos *steps*.\n */\n@Component({\n  selector: 'po-stepper-circle',\n  templateUrl: './po-stepper-circle.component.html'\n})\nexport class PoStepperCircleComponent {\n\n  // ConteÃºdo que irÃ¡ aparecer no cÃ­rculo do *step*.\n  @Input('p-content') content: any;\n\n  // Define se serÃ£o exibidos Ã­cones no lugar de nÃºmeros nos steps.\n  @Input('p-icons') icons: boolean;\n\n  // Tamanho do *step-circle*.\n  @Input('p-size') size: number;\n\n  // Status do *step*.\n  @Input('p-status') status: string;\n\n  get isActive(): boolean {\n    return this.status === PoStepperStatus.Active;\n  }\n\n  get isDefault(): boolean {\n    return this.status === PoStepperStatus.Default;\n  }\n\n  get isDisabled(): boolean {\n    return this.status === PoStepperStatus.Disabled;\n  }\n\n  get isDone(): boolean {\n    return this.status === PoStepperStatus.Done;\n  }\n\n  get isError(): boolean {\n    return this.status === PoStepperStatus.Error;\n  }\n\n  get isLargeStep(): boolean {\n    return this.size >= poLargeStepSize;\n  }\n\n  get isMediumStep(): boolean {\n    return this.size >= poMediumStepSize && !this.isLargeStep;\n  }\n\n}\n","import { EventEmitter, Input, Output } from '@angular/core';\n\nimport { convertToBoolean } from '../../utils/util';\n\nimport { PoStepComponent } from './po-step/po-step.component';\nimport { PoStepperItem } from './po-stepper-item.interface';\nimport { PoStepperOrientation } from './enums/po-stepper-orientation.enum';\nimport { PoStepperStatus } from './enums/po-stepper-status.enum';\n\nconst poStepperOrientationDefault = PoStepperOrientation.Horizontal;\n\n/**\n * @description\n *\n * O `po-stepper` permite que um processo seja dividido em passos para que o usuÃ¡rio o realize\n * mais facilmente.\n *\n * Existem duas formas de utilizaÃ§Ã£o:\n *\n * 1 - Usando o componente [**po-step**](/documentation/po-step) para renderizar e descrever os passos.\n *\n * 2 - AtravÃ©s da propriedade `p-steps` para descrever os passos do processo, sendo responsabilidade do desenvolvedor o controle\n * de renderizaÃ§Ã£o do que serÃ¡ exibido a cada *step* ativo.\n *\n * AtravÃ©s de suas propriedades, Ã© possÃ­vel definir se sua orientaÃ§Ã£o serÃ¡ horizontal ou vertical,\n * alÃ©m da possibilidade de aumentar o tamanho dos *steps*.\n *\n * TambÃ©m Ã© possÃ­vel navegar entre os *steps* atravÃ©s do teclado utilizando a tecla *tab* e, para ativar o *step* em foco basta\n * pressionar a tecla *enter*. AlÃ©m disso, Ã© possÃ­vel ativar a exibiÃ§Ã£o de Ã­cones no lugar de nÃºmeros nos *steps* atravÃ©s da\n * propriedade [`p-step-icons`](/documentation/po-stepper#stepIconsProperty).\n *\n * #### Utilizando os mÃ©todos do componente:\n *\n * Para acessar os mÃ©todos do componente Ã© necessÃ¡rio ter a referÃªncia do mesmo.\n *\n * Por exemplo, utilizando um [**ViewChild**](https://angular.io/api/core/ViewChild):\n *\n * ```\n * @ViewChild(PoStepperComponent) poStepperComponent: PoStepperComponent;\n * ```\n *\n * E para acessar o mÃ©todo:\n *\n * ```\n * poStepperComponent.next();\n * ```\n *\n * #### Boas prÃ¡ticas\n *\n * - Evite `labels` extensos que quebram o layout do `po-stepper`, use `labels` diretos, curtos e intuitivos.\n * - Utilize apenas um `po-stepper` por pÃ¡gina.\n */\nexport class PoStepperBaseComponent {\n\n  private _orientation?: PoStepperOrientation = poStepperOrientationDefault;\n  private _sequential?: boolean = true;\n  private _step: number = 1;\n  private _steps: Array<PoStepperItem> = [];\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a orientaÃ§Ã£o de exibiÃ§Ã£o do `po-stepper`.\n   *\n   * > Veja os valores vÃ¡lidos no *enum* [PoStepperOrientation](documentation/po-stepper#stepperOrientation).\n   *\n   * @default `PoStepperOrientation.Horizontal`\n   */\n  @Input('p-orientation') set orientation(value: PoStepperOrientation) {\n    this._orientation = (<any>Object).values(PoStepperOrientation).includes(value) ? value : poStepperOrientationDefault;\n  }\n\n  get orientation(): PoStepperOrientation {\n    return this._orientation;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Controla o passo atual do `po-stepper`.\n   *\n   * > Ao utilizar esta propriedade e tambÃ©m utilizar o componente [**po-step**](/documentation/po-step),\n   * o valor desta propriedade serÃ¡ ignorada permanecendo a definiÃ§Ã£o do [**po-step**](/documentation/po-step).\n   *\n   * @default `1`\n   */\n  @Input('p-step') set step(step: number) {\n    if (step >= 1 && step <= this.steps.length) {\n      this._step = step;\n      this._steps[this._step - 1].status = PoStepperStatus.Active;\n    }\n  }\n\n  get step(): number {\n    return this._step;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Lista dos itens do stepper. Se o valor estiver indefinido ou invÃ¡lido, serÃ¡ inicializado como um array vazio.\n   *\n   * > Ao utilizar esta propriedade e tambÃ©m utilizar o componente [**po-step**](/documentation/po-step),\n   * o valor desta propriedade serÃ¡ ignorada permanecendo a definiÃ§Ã£o do [**po-step**](/documentation/po-step).\n   */\n  @Input('p-steps') set steps(steps: Array<PoStepperItem>) {\n    this._steps = Array.isArray(steps) ? steps : [];\n    this._steps.forEach(step => step.status = PoStepperStatus.Default);\n    this.step = 1;\n  }\n\n  get steps(): Array<PoStepperItem> {\n    return this._steps;\n  }\n\n  /**\n   *\n   * @optional\n   *\n   * @description\n   *\n   * <a id=\"stepIconsProperty\"></a>\n   *\n   * Habilita a exibiÃ§Ã£o de Ã­cone ao invÃ©s de nÃºmero no centro do cÃ­rculo dos *steps*.\n   *\n   * @default `false`\n   */\n  @Input('p-step-icons') stepIcons: boolean;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o tamanho dos *steps* em *pixels*, possibilitando um maior destaque.\n   *\n   * O valor informado deve ser entre `24` e `64`.\n   *\n   * > Valores que nÃ£o se enquadrarem a esta regra serÃ£o ignorados, mantendo-se o valor *default*.\n   *\n   * @default `24`\n   */\n  @Input('p-step-size') stepSize: number;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define se o `po-stepper` serÃ¡ sequencial ou aleatÃ³rio.\n   *\n   * > Ao utilizar o componente [**po-step**](/documentation/po-step), o valor desta propriedade sempre serÃ¡ verdadeiro.\n   *\n   * @default `true`\n   */\n  @Input('p-sequential') set sequential(sequential: boolean) {\n    this._sequential = convertToBoolean(sequential);\n  }\n\n  get sequential(): boolean {\n    return this._sequential;\n  }\n\n  /** AÃ§Ã£o que serÃ¡ executada quando o usuÃ¡rio mudar o passo do `po-stepper`. */\n  @Output('p-change-step') onChangeStep = new EventEmitter<number | PoStepComponent>();\n\n}\n","import { AfterContentInit, ChangeDetectorRef, Component, ContentChildren, QueryList } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap, take } from 'rxjs/operators';\n\nimport { PoStepperStatus } from './enums/po-stepper-status.enum';\nimport { PoStepComponent } from './po-step/po-step.component';\nimport { PoStepperBaseComponent } from './po-stepper-base.component';\nimport { PoStepperItem } from './po-stepper-item.interface';\n\n/**\n * @docsExtends PoStepperBaseComponent\n *\n * @example\n *\n * <example name=\"po-stepper-basic\" title=\"Portinari Stepper Basic\">\n *  <file name=\"sample-po-stepper-basic/sample-po-stepper-basic.component.html\"> </file>\n *  <file name=\"sample-po-stepper-basic/sample-po-stepper-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-stepper-labs\" title=\"Portinari Stepper Labs\">\n *  <file name=\"sample-po-stepper-labs/sample-po-stepper-labs.component.html\"> </file>\n *  <file name=\"sample-po-stepper-labs/sample-po-stepper-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-stepper-sales\" title=\"Portinari Stepper - Sales\">\n *  <file name=\"sample-po-stepper-sales/sample-po-stepper-sales.component.html\"> </file>\n *  <file name=\"sample-po-stepper-sales/sample-po-stepper-sales.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-stepper',\n  templateUrl: './po-stepper.component.html'\n})\nexport class PoStepperComponent extends PoStepperBaseComponent implements AfterContentInit {\n\n  @ContentChildren(PoStepComponent) poSteps: QueryList<PoStepComponent>;\n\n  private currentActiveStep: PoStepComponent;\n  private previousActiveStep: PoStepComponent;\n\n  get currentStepIndex(): number {\n    return this.step - 1;\n  }\n\n  get stepList(): QueryList<PoStepComponent> | Array<PoStepperItem> {\n    return this.usePoSteps && this.poSteps || this.steps;\n  }\n\n  get usePoSteps(): boolean {\n    return !!this.poSteps.length;\n  }\n\n  constructor(private changeDetector: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterContentInit() {\n    this.activeFirstStep();\n\n    this.poSteps.changes.subscribe(() => {\n      this.controlStepsStatus(0, this.poSteps.first);\n    });\n  }\n\n  /**\n   * Altera o status do *step* para ativo.\n   *\n   * > Este mÃ©todo Ã© valido apenas para as implementaÃ§Ãµes que utilizam o componente [**po-step**](/documentation/po-step).\n   *\n   * @param {number} index Ãndice do `po-step` que se deseja ativar.\n   */\n  active(index: number): void {\n    if (!this.usePoSteps) {\n      return;\n    }\n\n    const stepsArray = this.getPoSteps();\n    const step = stepsArray[index];\n    const isDisabledStep = step.status === PoStepperStatus.Disabled;\n    const isErrorStep = step.status === PoStepperStatus.Error;\n\n    if (!isDisabledStep || isErrorStep) {\n      this.changeStep(index, step);\n    }\n\n  }\n\n  /**\n   * Ativa o primeiro *step*.\n   *\n   * > Este mÃ©todo Ã© valido apenas para as implementaÃ§Ãµes que utilizam o componente [**po-step**](/documentation/po-step).\n   */\n  first(): void {\n    if (!this.usePoSteps) {\n      return;\n    }\n\n    const firstStep = this.poSteps.first;\n    const firstStepIndex = 0;\n\n    this.changeStep(firstStepIndex, firstStep);\n  }\n\n  /**\n   * Ativa o prÃ³ximo *step*.\n   *\n   * > Este mÃ©todo Ã© valido apenas para as implementaÃ§Ãµes que utilizam o componente [**po-step**](/documentation/po-step).\n   */\n  next(): void {\n    if (!this.usePoSteps) {\n      return;\n    }\n\n    const { steps, stepIndex } = this.getStepsAndIndex(this.currentActiveStep);\n    const nextIndex = stepIndex + 1;\n    const nextStep = steps[nextIndex];\n\n    this.changeStep(nextIndex, nextStep);\n  }\n\n  /**\n   * Ativa o *step* anterior.\n   *\n   * > Este mÃ©todo Ã© valido apenas para as implementaÃ§Ãµes que utilizam o componente [**po-step**](/documentation/po-step).\n   */\n  previous(): void {\n    if (!this.usePoSteps) {\n      return;\n    }\n\n    const { steps, stepIndex } = this.getStepsAndIndex(this.currentActiveStep);\n    const previousIndex = stepIndex - 1;\n    const previousStep = steps[previousIndex];\n\n    this.changeStep(previousIndex, previousStep);\n  }\n\n  changeStep(stepIndex: number, step?: PoStepComponent): void {\n    const isDifferentStep = (!this.currentActiveStep || step.id !== this.currentActiveStep.id);\n    this.allowNextStep(stepIndex).pipe(take(1)).subscribe(nextStepAllowed => {\n      if (nextStepAllowed) {\n        if (this.usePoSteps && isDifferentStep) {\n          this.controlStepsStatus(stepIndex, step);\n          this.onChangeStep.emit(step);\n        } else if (!this.usePoSteps && stepIndex !== this.currentStepIndex ) {\n          // if para tratamento do modelo antigo do po-stepper\n          this.onChangeStep.emit(stepIndex + 1);\n        }\n      }\n    });\n  }\n\n  onStepActive(step: PoStepComponent) {\n    this.currentActiveStep = step;\n\n    this.previousActiveStep = this.poSteps.find(stepChild => stepChild.status === PoStepperStatus.Active && stepChild.id !== step.id);\n\n    this.setPreviousStepAsDone();\n  }\n\n  trackByFn(step: PoStepComponent) {\n    return step.id;\n  }\n\n  private activeFirstStep() {\n    const hasStepActive = this.poSteps.some(poStep => poStep.status === PoStepperStatus.Active);\n\n    if (this.usePoSteps && !hasStepActive) {\n      this.changeStep(0, this.poSteps.first);\n    }\n  }\n\n  private allowNextStep(nextStepIndex: number): Observable<boolean> {\n    if (!this.sequential) {\n      return of(true);\n    }\n\n    if (this.usePoSteps) {\n      return of(this.isBeforeStep(nextStepIndex))\n      .pipe(switchMap(result => {\n        if (result) {\n          return of(result);\n        } else {\n          return this.canActiveNextStep(this.currentActiveStep);\n        }\n      }));\n    }\n\n    return of(this.steps.slice(this.step, nextStepIndex).every(step => step.status === PoStepperStatus.Done));\n  }\n\n  private canActiveNextStep(currentActiveStep = <PoStepComponent>{}): Observable<boolean> {\n    if (!currentActiveStep.canActiveNextStep) {\n      return of(true);\n    }\n\n    const canActiveNextStep = currentActiveStep.canActiveNextStep(currentActiveStep);\n\n    if (typeof canActiveNextStep === 'boolean') {\n      currentActiveStep.status = this.getStepperStatusByCanActive(canActiveNextStep);\n      return of(canActiveNextStep);\n    } else if (canActiveNextStep instanceof Observable) {\n      return canActiveNextStep.pipe(map(result => {\n        currentActiveStep.status = this.getStepperStatusByCanActive(result);\n        return result;\n      }));\n    } else {\n      throw new Error(`Expected step ${currentActiveStep.label} canActiveNextStep function to return either a boolean or Observable`);\n    }\n\n  }\n\n  private controlStepsStatus(stepIndex: number, step: PoStepComponent): void {\n    if (this.usePoSteps) {\n\n      this.setStepAsActive(step);\n      this.setNextStepAsDefault(step);\n\n      if (this.isBeforeStep(stepIndex)) {\n        this.setFinalSteppersAsDisabled(stepIndex);\n      }\n\n      this.changeDetector.detectChanges();\n    }\n  }\n\n  private getStepperStatusByCanActive(canActiveNextStep: boolean): PoStepperStatus {\n    return canActiveNextStep ? PoStepperStatus.Done : PoStepperStatus.Error;\n  }\n\n  private getStepsAndIndex(step: PoStepComponent = <any>{}): { steps: Array<PoStepComponent>, stepIndex: number } {\n    const steps = this.getPoSteps();\n    const stepIndex = steps.findIndex(poStep => poStep.id === step.id);\n\n    return { steps, stepIndex };\n  }\n\n  private getPoSteps(): Array<PoStepComponent> {\n    return this.poSteps.toArray();\n  }\n\n  private isBeforeStep(stepIndex: number): boolean {\n    const currentActiveStepIndex = () => this.getPoSteps().findIndex(step => step.id === this.currentActiveStep.id);\n\n    return !!this.currentActiveStep && currentActiveStepIndex() >= stepIndex;\n  }\n\n  private setFinalSteppersAsDisabled(stepIndex: number): void {\n    this.getPoSteps()\n      .filter((step, index) => step && index >= stepIndex + 2)\n      .forEach(step => step.status = PoStepperStatus.Disabled);\n  }\n\n  private setStepAsActive(step: PoStepComponent): void {\n    step.status = PoStepperStatus.Active;\n  }\n\n  private setNextStepAsDefault(currentStep: PoStepComponent): void {\n    const { steps, stepIndex } = this.getStepsAndIndex(currentStep);\n    const nextIndex = stepIndex + 1;\n\n    if (nextIndex < this.poSteps.length) {\n      steps[nextIndex].status = PoStepperStatus.Default;\n    }\n  }\n\n  private setPreviousStepAsDone(): void {\n    if (this.previousActiveStep) {\n      this.previousActiveStep.status = PoStepperStatus.Done;\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente responsÃ¡vel por exibir as legendas dos *steps*.\n */\n@Component({\n  selector: 'po-stepper-label',\n  templateUrl: './po-stepper-label.component.html'\n})\n\nexport class PoStepperLabelComponent {\n\n  // ConteÃºdo da label.\n  @Input('p-content') content: string;\n\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { browserLanguage, convertToBoolean, isTypeof, poLocaleDefault } from './../../../utils/util';\n\nimport { PoStepperOrientation } from '../enums/po-stepper-orientation.enum';\nimport { PoStepperStatus } from '../enums/po-stepper-status.enum';\n\nconst poStepperStepSizeDefault = 24;\nconst poStepperStepSizeMax = 64;\nconst poStepLiteralsDefault = {\n  en: { label: 'Step' },\n  es: { label: 'Paso' },\n  pt: { label: 'Passo' }\n};\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que representa um *step* contendo as ligaÃ§Ãµes das laterais (`po-stepper-step-bar`) e a label.\n */\n@Component({\n  selector: 'po-stepper-step',\n  templateUrl: 'po-stepper-step.component.html'\n})\nexport class PoStepperStepComponent {\n\n  private _label: string;\n  private _status: PoStepperStatus;\n  private _stepIcons?: boolean = false;\n  private _stepSize: number = poStepperStepSizeDefault;\n\n  readonly literals = {\n    ...poStepLiteralsDefault[poLocaleDefault],\n    ...poStepLiteralsDefault[browserLanguage()]\n  };\n\n  // ConteÃºdo que serÃ¡ repassado para o componente `p-circle-content` atravÃ©s da propriedade `p-content`.\n  @Input('p-circle-content') circleContent: any;\n\n  // Label do *step*.\n  @Input('p-label') set label(value: string) {\n    this._label = isTypeof(value, 'string') ? value : `${this.literals.label} ${this.circleContent}`;\n  }\n\n  get label(): string {\n    return this._label;\n  }\n\n  // Define a orientaÃ§Ã£o de exibiÃ§Ã£o.\n  @Input('p-orientation') orientation: PoStepperOrientation;\n\n  // Define o estado de exibiÃ§Ã£o.\n  @Input('p-status') set status(value: PoStepperStatus) {\n    this._status = (value as string) ? value : undefined;\n\n    if (this.status === PoStepperStatus.Active) {\n      this.activated.emit();\n    }\n  }\n\n  get status(): PoStepperStatus {\n    return this._status;\n  }\n\n  @Input('p-step-icons') set stepIcons(stepIcons: boolean) {\n    this._stepIcons = convertToBoolean(stepIcons);\n  }\n\n  get stepIcons(): boolean {\n    return this._stepIcons;\n  }\n\n  // Tamanho do `step` em *pixels*, possibilitando um maior destaque.\n  // O valor informado deve ser entre `24` e `64`.\n  @Input('p-step-size') set stepSize(value: number) {\n    this._stepSize = (value >= poStepperStepSizeDefault && value <= poStepperStepSizeMax) ? value : poStepperStepSizeDefault;\n  }\n\n  get stepSize(): number {\n    return this._stepSize;\n  }\n\n  // Evento que serÃ¡ emitido quando o status do *step* estiver ativo (`PoStepperStatus.Active`).\n  @Output('p-activated') activated = new EventEmitter<any>();\n\n  // Evento que serÃ¡ emitido ao clicar no *step*.\n  @Output('p-click') click = new EventEmitter<any>();\n\n  // Evento que serÃ¡ emitido ao focar no *step* e pressionar a tecla *enter*.\n  @Output('p-enter') enter = new EventEmitter<any>();\n\n  get halfStepSize(): number {\n    return this.stepSize / 2;\n  }\n\n  get isVerticalOrientation(): boolean {\n    return this.orientation === PoStepperOrientation.Vertical;\n  }\n\n  get marginHorizontalBar(): number {\n    return this.isVerticalOrientation ? undefined : this.halfStepSize;\n  }\n\n  getStatusClass(status: string): string {\n    switch (status) {\n      case PoStepperStatus.Active:\n        return 'po-stepper-step-active';\n      case PoStepperStatus.Disabled:\n        return 'po-stepper-step-disabled';\n      case PoStepperStatus.Done:\n        return 'po-stepper-step-done';\n      case PoStepperStatus.Error:\n        return 'po-stepper-step-error';\n      default:\n        return 'po-stepper-step-default';\n    }\n  }\n\n  onClick(): void {\n    if (this.status !== PoStepperStatus.Disabled) {\n      this.click.emit();\n    }\n  }\n\n  onEnter(): void {\n    if (this.status !== PoStepperStatus.Disabled) {\n      this.enter.emit();\n    }\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoStepComponent } from './po-step/po-step.component';\nimport { PoStepperCircleComponent } from './po-stepper-circle/po-stepper-circle.component';\nimport { PoStepperComponent } from './po-stepper.component';\nimport { PoStepperLabelComponent } from './po-stepper-label/po-stepper-label.component';\nimport { PoStepperStepComponent } from './po-stepper-step/po-stepper-step.component';\n\n/**\n * @description\n * MÃ³dulo do componente po-stepper\n */\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    PoStepComponent,\n    PoStepperCircleComponent,\n    PoStepperComponent,\n    PoStepperLabelComponent,\n    PoStepperStepComponent\n  ],\n  exports: [\n    PoStepComponent,\n    PoStepperComponent\n  ]\n})\nexport class PoStepperModule { }\n","import { Component, ElementRef, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\n\nimport { convertToBoolean } from '../../../utils/util';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente responsÃ¡vel por manipular os botÃµes de aba.\n */\n@Component({\n  selector: 'po-tab-button',\n  templateUrl: './po-tab-button.component.html'\n})\nexport class PoTabButtonComponent implements OnChanges {\n\n  private _active: boolean;\n  private _hide: boolean;\n\n  // Ativa o botÃ£o\n  @Input('p-active') set active(value: boolean) {\n    this._active = value;\n\n    this.emitActivated();\n  }\n\n  get active() {\n    return this._active;\n  }\n\n  // Desabilita o botÃ£o\n  @Input('p-disabled') disabled: boolean;\n\n  // Oculta o botÃ£o\n  @Input('p-hide') set hide(value: boolean) {\n    this._hide = convertToBoolean(value);\n\n    this.setDisplayOnHide();\n  }\n\n  get hide(): boolean {\n    return this._hide;\n  }\n\n  // Identificador do componente\n  @Input('p-id') id: string;\n\n  // RÃ³tulo do botÃ£o\n  @Input('p-label') label: string;\n\n  // Diminui o tamanho do botÃ£o\n  @Input('p-small') small: boolean;\n\n  // FunÃ§Ã£o sera emitida quando a tab ficar ativada\n  @Output('p-activated') activated = new EventEmitter();\n\n  // FunÃ§Ã£o sera emitida quando a tab ficar desabilitada ou escondida\n  @Output('p-change-state') changeState = new EventEmitter();\n\n  // MÃ©todo recebido do usuÃ¡rio para ser disparado quando clicar na aba\n  @Output('p-click') click = new EventEmitter();\n\n  constructor(private elementRef: ElementRef) { }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ((changes.hide && changes.hide.currentValue) || (changes.disabled && changes.disabled.currentValue)) {\n      this.changeState.emit(this);\n    }\n  }\n\n  onClick() {\n    if (!this.disabled) {\n      this.click.emit(this.id);\n    }\n  }\n\n  private emitActivated() {\n    if (this.active) {\n      this.activated.emit(this);\n    }\n  }\n\n  private setDisplayOnHide() {\n    this.elementRef.nativeElement.style.display = this.hide ? 'none' : '';\n  }\n\n}\n","import { EventEmitter, Input, Output } from '@angular/core';\n\nimport { convertToBoolean, uuid } from '../../../utils/util';\n\n/**\n * @description\n *\n * O componente `po-tab` renderiza uma aba na qual envolve um conteÃºdo HTML.\n *\n * Com este componente Ã© possÃ­vel atribuir um rÃ³tulo para auxiliar na identificaÃ§Ã£o do conteÃºdo, ativar para que o mesmo seja exibido,\n * desabilitar para impossibilitar o acesso, bem como ocultar para indisponibilizar a aba.\n *\n * > Para controlar a navegaÃ§Ã£o entre diversas abas, utilizar o componente [`po-tabs`](/documentation/po-tabs).\n */\nexport abstract class PoTabBaseComponent {\n\n  private _active?: boolean = false;\n  private _disabled?: boolean = false;\n  private _hide?: boolean = false;\n\n  // ID da aba\n  id?: string = uuid();\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Ativa a aba exibindo seu conteÃºdo.\n   *\n   * > Sugere-se utilizar na aba de conteÃºdo inicial.\n   *\n   * @default `false`\n   */\n  @Input('p-active') set active(active: boolean) {\n    this._active = convertToBoolean(active);\n    this.setDisplayOnActive();\n  }\n\n  get active(): boolean {\n    return this._active;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita a aba.\n   *\n   * @default `false`\n   */\n  @Input('p-disabled') set disabled(disabled: boolean) {\n    this._disabled = convertToBoolean(disabled);\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Oculta a aba.\n   *\n   * @default `false`\n   */\n  @Input('p-hide') set hide(hide: boolean) {\n    this._hide = convertToBoolean(hide);\n  }\n\n  get hide(): boolean {\n    return this._hide;\n  }\n\n  /** RÃ³tulo da aba. */\n  @Input('p-label') label: string;\n\n  /** MÃ©todo disparado ao clicar na aba. */\n  @Output('p-click') click = new EventEmitter();\n\n  protected abstract setDisplayOnActive();\n\n}\n","import { AfterContentInit, Component, ElementRef } from '@angular/core';\n\nimport { PoTabBaseComponent } from './po-tab-base.component';\n\n/**\n * @docsExtends PoTabBaseComponent\n */\n@Component({\n  selector: 'po-tab',\n  templateUrl: './po-tab.component.html'\n})\nexport class PoTabComponent extends PoTabBaseComponent implements AfterContentInit {\n\n  constructor(private elementRef: ElementRef) {\n    super();\n  }\n\n  ngAfterContentInit() {\n    this.setDisplayOnActive();\n  }\n\n  protected setDisplayOnActive() {\n    this.elementRef.nativeElement.style.display = this.active ? '' : 'none';\n  }\n\n}\n","import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\n\nimport { PoPopoverComponent } from '../../po-popover/po-popover.component';\nimport { PoTabComponent } from '../po-tab/po-tab.component';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente para agrupamento de componentes `po-tab-button` que os rendereiza em uma um caixa de diÃ¡logo\n * no formato de lista.\n */\n@Component({\n  selector: 'po-tab-dropdown',\n  templateUrl: './po-tab-dropdown.component.html'\n})\nexport class PoTabDropdownComponent {\n\n  @ViewChild('popover', { static: true }) popover: PoPopoverComponent;\n  @ViewChild('tabDrop', { read: ElementRef, static: true }) tabDropdown: ElementRef;\n\n  // RÃ³tulo do `po-tab-button`\n  @Input('p-label') label: string;\n\n  // Diminui o tamanho do botÃ£o\n  @Input('p-small') small: boolean;\n\n  // Lista de abas\n  @Input('p-tabs') tabs: Array<PoTabComponent> = [];\n\n  // Evento que serÃ¡ emitido ao ativar uma aba\n  @Output('p-activated') activated = new EventEmitter<any>();\n\n  // Evento que serÃ¡ emitido a aba for desabilitada ou ocultada\n  @Output('p-change-state') changeState = new EventEmitter<any>();\n\n  // Evento de click\n  @Output('p-click') click = new EventEmitter<any>();\n\n  getContainerClass() {\n    return this.small ? 'po-tab-dropdown-container-sm' : 'po-tab-dropdown-container';\n  }\n\n  togglePopover(): void {\n    this.popover.isHidden ? this.popover.open() : this.popover.close();\n  }\n\n}\n","import { Input } from '@angular/core';\n\nimport { convertToBoolean } from '../../utils/util';\n\n/**\n * @description\n *\n * O componente `po-tabs` Ã© responsÃ¡vel por agrupar [abas](/documentation/po-tab) dispostas numa linha horizontal,\n * ideal para facilitar a organizaÃ§Ã£o de conteÃºdos.\n *\n * Em dispositivos mÃ³veis o componente exibirÃ¡ tadas as abas de maneira linear gerando um *scroll* na horizontal. JÃ¡ em telas telas com\n * resoluÃ§Ãµes maiores, o componente exibirÃ¡ atÃ© cinco abas normalmente, porÃ©m, Ã  partir de seis abas o componente automaticamente torna\n * visÃ­vel apenas as quatro primeiras, agrupando as subsequentes na quinta aba rotulada de **Mais**.\n *\n * > As abas que estiverem agrupadas serÃ£o dispostas numa cascata suspensa que serÃ¡ exibida ao clicar no botÃ£o **Mais**.\n *\n * Ã possÃ­vel realizar a navegaÃ§Ã£o entre as abas atravÃ©s da tecla TAB do teclado.\n * Caso uma aba estiver desabilitada, nÃ£o receberÃ¡ foco de navegaÃ§Ã£o.\n *\n * #### Boas prÃ¡ticas\n *\n * - Evite utilizar uma quantidade excessiva de abas, pois irÃ¡ gerar um *scroll* muito longo no `dropdown`;\n * - Evite `labels` extensos para as `tabs` pois podem quebrar seu *layout*, use `labels` diretos, curtos e intuitivos.\n */\nexport class PoTabsBaseComponent {\n\n  private _small?: boolean = false;\n\n  /**\n   * @optinal\n   *\n   * @description\n   *\n   * Diminui o tamanho das abas.\n   *\n   * @default `false`\n   */\n  @Input('p-small') set small(value: boolean) {\n    this._small = convertToBoolean(value);\n  }\n\n  get small(): boolean {\n    return this._small;\n  }\n\n}\n","import { ChangeDetectorRef, Component, ContentChildren, QueryList, ViewChild } from '@angular/core';\n\nimport { isMobile } from './../../utils/util';\n\nimport { PoTabComponent } from './po-tab/po-tab.component';\nimport { PoTabDropdownComponent } from './po-tab-dropdown/po-tab-dropdown.component';\nimport { PoTabsBaseComponent } from './po-tabs-base.component';\n\nconst poTabsMaxNumberOfTabs = 5;\n\n/**\n * @docsExtends PoTabsBaseComponent\n *\n * @example\n *\n * <example name=\"po-tabs-basic\" title=\"Portinari Tabs Basic\">\n *  <file name=\"sample-po-tabs-basic/sample-po-tabs-basic.component.html\"> </file>\n *  <file name=\"sample-po-tabs-basic/sample-po-tabs-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-tabs-labs\" title=\"Portinari Tabs Labs\">\n *  <file name=\"sample-po-tabs-labs/sample-po-tabs-labs.component.html\"> </file>\n *  <file name=\"sample-po-tabs-labs/sample-po-tabs-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-tabs-travel\" title=\"Portinari Tabs - Travel\">\n *  <file name=\"sample-po-tabs-travel/sample-po-tabs-travel.component.html\"> </file>\n *  <file name=\"sample-po-tabs-travel/sample-po-tabs-travel.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-tabs-business-conf\" title=\"Portinari Tabs - Business Conference\">\n *  <file name=\"sample-po-tabs-business-conf/sample-po-tabs-business-conf.component.html\"> </file>\n *  <file name=\"sample-po-tabs-business-conf/sample-po-tabs-business-conf.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-tabs',\n  templateUrl: './po-tabs.component.html'\n})\nexport class PoTabsComponent extends PoTabsBaseComponent {\n\n  maxNumberOfTabs = poTabsMaxNumberOfTabs;\n\n  private previousActiveTab: PoTabComponent;\n\n  // Tabs utilizados no ng-content\n  @ContentChildren(PoTabComponent) tabs: QueryList<PoTabComponent>;\n\n  @ViewChild('tabDropdown', { static: true }) tabDropdown: PoTabDropdownComponent;\n\n  constructor(private changeDetector: ChangeDetectorRef) {\n    super();\n  }\n\n  get isMobileDevice() {\n    return isMobile();\n  }\n\n  get isShowTabDropdown() {\n    return !this.isMobileDevice && this.visibleTabs.length > this.maxNumberOfTabs;\n  }\n\n  // tabs que serÃ£o apresentadas na aba \"Mais\"\n  get overflowedTabs() {\n    return this.visibleTabs.filter((_tab, index) => index > (this.maxNumberOfTabs - 2));\n  }\n\n  get visibleTabs() {\n    return this.tabs.filter(tab => !tab.hide);\n  }\n\n  closePopover(): void {\n    const containsPopoverVisible = this.tabDropdown && this.tabDropdown.popover && !this.tabDropdown.popover.isHidden;\n\n    if (containsPopoverVisible) {\n      this.tabDropdown.popover.close();\n    }\n  }\n\n  isVisibleTab(tab) {\n    if (this.isMobileDevice) {\n      return true;\n    }\n\n    const visibleTabIndex = this.visibleTabs.findIndex(visibleTab => visibleTab.id === tab.id);\n\n    return (this.visibleTabs.length <= this.maxNumberOfTabs) || (visibleTabIndex < (this.maxNumberOfTabs - 1));\n  }\n\n  // FunÃ§Ã£o disparada quando alguma tab ficar ativa\n  onTabActive(tab) {\n    this.previousActiveTab = this.tabs.find(tabChild => tabChild.active && tabChild.id !== tab.id);\n\n    this.deactivateTab();\n  }\n\n  // funcao serÃ¡ disparada quando mudar o estado do poTab para desabilitado ou escondido.\n  onTabChangeState(tab: PoTabComponent) {\n    if (tab.active) {\n      tab.active = false;\n\n      this.activeDistinctTab();\n\n      this.changeDetector.detectChanges();\n    }\n  }\n\n  // selectiona a aba informada por parametro, caso houver click faz a emiÃ§Ã£o do evento.\n  selectedTab(tab: PoTabComponent) {\n    tab.active = true;\n\n    if (tab.click) {\n      tab.click.emit(tab);\n    }\n\n    this.changeDetector.detectChanges();\n  }\n\n  trackByFn(_i, tab: PoTabComponent) {\n    return tab.id;\n  }\n\n  // ativa a previousActiveTab ou primeira tab encontrada.\n  private activeDistinctTab() {\n    if (this.previousActiveTab) {\n      this.previousActiveTab.active = true;\n    } else {\n      this.activeFirstTab();\n    }\n  }\n\n  // Ativa a primeira Tab que nÃ£o estiver desabilitada ou escondida.\n  private activeFirstTab() {\n    this.tabs.some(tabChild => {\n      if (!tabChild.disabled && !tabChild.hide) {\n        tabChild.active = true;\n        return true;\n      }\n    });\n  }\n\n  // desativa previousActiveTab e dispara a detecÃ§Ã£o de mudanÃ§a.\n  private deactivateTab() {\n    if (this.previousActiveTab) {\n      this.previousActiveTab.active = false;\n\n      this.changeDetector.detectChanges();\n    }\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoPopoverModule } from '../po-popover/po-popover.module';\n\nimport { PoTabButtonComponent } from './po-tab-button/po-tab-button.component';\nimport { PoTabComponent } from './po-tab/po-tab.component';\nimport { PoTabDropdownComponent } from './po-tab-dropdown/po-tab-dropdown.component';\nimport { PoTabsComponent } from './po-tabs.component';\n\n/**\n * @description\n * MÃ³dulo do componente po-tabs\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    PoPopoverModule\n  ],\n  declarations: [\n    PoTabButtonComponent,\n    PoTabComponent,\n    PoTabDropdownComponent,\n    PoTabsComponent\n  ],\n  entryComponents: [\n    PoTabButtonComponent,\n    PoTabDropdownComponent\n  ],\n  exports: [\n    PoTabComponent,\n    PoTabsComponent\n  ]\n})\nexport class PoTabsModule { }\n","import { Component, Input } from '@angular/core';\n\nimport { isTypeof } from '../../../utils/util';\nimport { PoControlPositionService } from '../../../services/po-control-position/po-control-position.service';\n\nimport { PoToolbarAction } from '../po-toolbar-action.interface';\n\nconst poToolbarActionsIconDefault = 'po-icon-more';\n\n/**\n * @docsPrivate\n *\n * @usedBy PoToolbarComponent\n *\n * @description\n *\n * O componente `po-toolbar-actions` tem como objetivo receber uma lista de aÃ§Ãµes e um Ã­cone que podem ser personalizados.\n */\n@Component({\n  selector: 'po-toolbar-actions',\n  templateUrl: './po-toolbar-actions.component.html',\n  providers: [ PoControlPositionService ]\n})\nexport class PoToolbarActionsComponent {\n\n  private _actionsIcon?: string = poToolbarActionsIconDefault;\n\n  /** Define uma lista de aÃ§Ãµes. */\n  @Input('p-actions') actions?: Array<PoToolbarAction>;\n\n  /** Define o Ã­cone das aÃ§Ãµes. */\n  @Input('p-actions-icon') set actionsIcon(icon: string) {\n    this._actionsIcon = isTypeof(icon, 'string') ? icon : poToolbarActionsIconDefault;\n  }\n\n  get actionsIcon() {\n    return this._actionsIcon;\n  }\n\n}\n","import { Input } from '@angular/core';\n\nimport { convertToInt } from '../../utils/util';\n\nimport { PoToolbarAction } from './po-toolbar-action.interface';\nimport { PoToolbarProfile } from './po-toolbar-profile/po-toolbar-profile.interface';\n\n/**\n * @description\n *\n * O componente `po-toolbar` Ã© um cabeÃ§alho para o tÃ­tulo da aplicaÃ§Ã£o e informaÃ§Ãµes de usuÃ¡rio e notificaÃ§Ãµes quando houver necessidade.\n */\nexport class PoToolbarBaseComponent {\n\n  private _notificationNumber?: number;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define uma lista de aÃ§Ãµes que serÃ£o exibidas ao clicar no Ã­cone declarado em `p-actions-icon`.\n   */\n  @Input('p-actions') actions?: Array<PoToolbarAction>;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define um [Ã­cone](/guides/icons) para a propriedade `p-actions`.\n   *\n   * > Caso nÃ£o haja aÃ§Ãµes definidas em `p-actions`, o Ã­cone nÃ£o serÃ¡ exibido.\n   *\n   * @default `po-icon-more`\n   */\n  @Input('p-actions-icon') actionsIcon?: string;\n\n /** Define o objeto que serÃ¡ o cabeÃ§alho da lista de aÃ§Ãµes com as informaÃ§Ãµes do perfil. */\n  @Input('p-profile') profile?: PoToolbarProfile;\n\n /** Define uma lista de aÃ§Ãµes que serÃ£o exibidas ao clicar no Ã­cone do perfil. */\n  @Input('p-profile-actions') profileActions?: Array<PoToolbarAction>;\n\n  /** Se falso, oculta o Ã­cone de notificaÃ§Ãµes. */\n  @Input('p-show-notification') showNotification?: boolean = true;\n\n  /** TÃ­tulo do *toolbar* e aplicaÃ§Ã£o. */\n  @Input('p-title') title: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Lista de aÃ§Ãµes da notificaÃ§Ã£o.\n   */\n  @Input('p-notification-actions') notificationActions?: Array<PoToolbarAction>;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * NÃºmero de notificaÃ§Ãµes.\n   */\n  @Input('p-notification-number') set notificationNumber(value: number) {\n    this._notificationNumber = convertToInt(value, 0);\n  }\n\n  get notificationNumber(): number {\n    return this._notificationNumber;\n  }\n\n  get isShowProfile(): boolean {\n    return !!(this.profile || this.profileActions);\n  }\n}\n","import { Component, OnInit, ViewContainerRef } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\nimport { PoToolbarBaseComponent } from './po-toolbar-base.component';\n\n/**\n * @docsExtends PoToolbarBaseComponent\n *\n * @example\n *\n * <example name=\"po-toolbar-basic\" title=\"Portinari Toolbar Basic\">\n *  <file name=\"sample-po-toolbar-basic/sample-po-toolbar-basic.component.html\"> </file>\n *  <file name=\"sample-po-toolbar-basic/sample-po-toolbar-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-toolbar-labs\" title=\"Portinari Toolbar Labs\">\n *  <file name=\"sample-po-toolbar-labs/sample-po-toolbar-labs.component.html\"> </file>\n *  <file name=\"sample-po-toolbar-labs/sample-po-toolbar-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-toolbar-logged\" title=\"Portinari Toolbar - Logged\">\n *  <file name=\"sample-po-toolbar-logged/sample-po-toolbar-logged.component.html\"> </file>\n *  <file name=\"sample-po-toolbar-logged/sample-po-toolbar-logged.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-toolbar',\n  templateUrl: './po-toolbar.component.html'\n})\nexport class PoToolbarComponent extends PoToolbarBaseComponent implements OnInit {\n\n  parentRef: any;\n\n  constructor(private titleService: Title, viewRef: ViewContainerRef) {\n    super();\n    this.parentRef = viewRef['_view']['component'];\n  }\n\n  ngOnInit(): void {\n    this.setTitle(this.title);\n  }\n\n  private setTitle(newTitle: string) {\n    this.titleService.setTitle(newTitle);\n  }\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { PoControlPositionService } from '../../../services/po-control-position/po-control-position.service';\n\nimport { PoToolbarAction } from '../po-toolbar-action.interface';\n\n/**\n * @docsPrivate\n *\n * @usedBy PoToolbarComponent\n *\n * @description\n *\n * O componente `po-toolbar-notification` tem como objetivo notificar o usuÃ¡rio de novas aÃ§Ãµes da aplicaÃ§Ã£o que necessitam de atenÃ§Ã£o,\n * como por exemplo um alerta de nova mensagem.\n *\n * O mesmo tambÃ©m permite que a cada nova notificaÃ§Ã£o seja incrementado e exibido, ou nÃ£o, este nÃºmero em uma *tag* ao lado do\n * Ã­cone de notificaÃ§Ãµes.\n */\n@Component({\n  selector: 'po-toolbar-notification',\n  templateUrl: './po-toolbar-notification.component.html',\n  providers: [ PoControlPositionService ]\n})\nexport class PoToolbarNotificationComponent {\n\n  private _notificationNumber?: number = 0;\n\n  /** Define uma lista de aÃ§Ãµes. */\n  @Input('p-notification-actions') notificationActions?: Array<PoToolbarAction>;\n\n  /** Define o nÃºmero de notificaÃ§Ãµes. */\n  @Input('p-notification-number') set notificationNumber(value: number) {\n    this._notificationNumber = Number.isInteger(value) ? value : 0;\n  }\n\n  get notificationNumber() {\n    return this._notificationNumber;\n  }\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { PoControlPositionService } from '../../../services/po-control-position/po-control-position.service';\n\nimport { PoToolbarProfile } from './po-toolbar-profile.interface';\nimport { PoToolbarAction } from '../po-toolbar-action.interface';\n\n/**\n * @docsPrivate\n *\n * @docsExtends PoToolbarProfileComponent\n *\n * @description\n *\n * Componente `po-toolbar-profile`.\n */\n@Component({\n  selector: 'po-toolbar-profile',\n  templateUrl: './po-toolbar-profile.component.html',\n  providers: [ PoControlPositionService ]\n})\nexport class PoToolbarProfileComponent {\n\n  /** Objeto que implementa a interface `PoToolbarProfile`. */\n  @Input('p-profile') profile: PoToolbarProfile;\n\n  /** Define uma lista de aÃ§Ãµes. */\n  @Input('p-profile-actions') profileActions?: Array<PoToolbarAction>;\n\n  get profileAvatar() {\n    return this.profile ? this.profile.avatar : undefined;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PoAvatarModule } from './../po-avatar/po-avatar.module';\nimport { PoPopupModule } from '../po-popup/po-popup.module';\nimport { PoToolbarActionsComponent } from './po-toolbar-actions/po-toolbar-actions.component';\nimport { PoToolbarComponent } from './po-toolbar.component';\nimport { PoToolbarNotificationComponent } from './po-toolbar-notification/po-toolbar-notification.component';\nimport { PoToolbarProfileComponent } from './po-toolbar-profile/po-toolbar-profile.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente po-toolbar\n *\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    PoAvatarModule,\n    PoPopupModule\n  ],\n  declarations: [\n    PoToolbarActionsComponent,\n    PoToolbarComponent,\n    PoToolbarNotificationComponent,\n    PoToolbarProfileComponent\n  ],\n  exports: [\n    PoToolbarComponent\n  ],\n  providers: [],\n  schemas: []\n})\nexport class PoToolbarModule { }\n","import { EventEmitter, Input, Output } from '@angular/core';\n\nimport { convertToBoolean } from '../../utils/util';\n\nimport { PoTreeViewItem } from './po-tree-view-item/po-tree-view-item.interface';\n\nconst poTreeViewMaxLevel = 4;\n\n/**\n * @description\n *\n * O componente fornece um modelo de visualizaÃ§Ã£o em Ã¡rvore, possibilitando a visualizaÃ§Ã£o das informaÃ§Ãµes de maneira\n * hierÃ¡rquica, desta forma sendo possÃ­vel utilizar atÃ© 4 nÃ­veis.\n *\n * Nele Ã© possÃ­vel navegar entre os itens atravÃ©s da tecla *tab*, permitindo expandir ou colapsar o item em foco\n * por meio das teclas *enter* e *space*.\n *\n * AlÃ©m da navegaÃ§Ã£o, o componente possibilita tambÃ©m a seleÃ§Ã£o dos itens do primeiro ao Ãºltimo nÃ­vel, tanto de forma parcial como completa.\n *\n * O componente tambÃ©m possui eventos disparados ao marcar/desmarcar e expandir/colapsar os itens.\n */\nexport class PoTreeViewBaseComponent {\n\n  private _items: Array<PoTreeViewItem> = [];\n  private _selectable: boolean = false;\n\n  /**\n   * Lista de itens do tipo `PoTreeViewItem` que serÃ¡ renderizada pelo componente.\n   */\n  @Input('p-items') set items(value: Array<PoTreeViewItem>) {\n    this._items = Array.isArray(value) ? this.getItemsByMaxLevel(value) : [];\n  }\n\n  get items() {\n    return this._items;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Habilita uma caixa de seleÃ§Ã£o para selecionar e/ou desmarcar um item da lista.\n   *\n   * @default false\n   */\n  @Input('p-selectable') set selectable(value: boolean) {\n    this._selectable = convertToBoolean(value);\n  }\n\n  get selectable() {\n    return this._selectable;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * AÃ§Ã£o que serÃ¡ disparada ao colapsar um item.\n   *\n   * > Como parÃ¢metro o componente envia o item colapsado.\n   */\n  @Output('p-collapsed') collapsed = new EventEmitter<PoTreeViewItem>();\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * AÃ§Ã£o que serÃ¡ disparada ao expandir um item.\n   *\n   * > Como parÃ¢metro o componente envia o item expandido.\n   */\n  @Output('p-expanded') expanded = new EventEmitter<PoTreeViewItem>();\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * AÃ§Ã£o que serÃ¡ disparada ao selecionar um item.\n   *\n   * > Como parÃ¢metro o componente envia o item selecionado.\n   */\n  @Output('p-selected') selected = new EventEmitter<PoTreeViewItem>();\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * AÃ§Ã£o que serÃ¡ disparada ao desfazer a seleÃ§Ã£o de um item.\n   *\n   * > Como parÃ¢metro o componente envia o item que foi desmarcado.\n   */\n  @Output('p-unselected') unselected = new EventEmitter<PoTreeViewItem>();\n\n  protected emitExpanded(treeViewItem: PoTreeViewItem) {\n    const event = treeViewItem.expanded ? 'expanded' : 'collapsed';\n\n    this[event].emit({ ...treeViewItem });\n  }\n\n  protected emitSelected(treeViewItem: PoTreeViewItem) {\n    const event = treeViewItem.selected ? 'selected' : 'unselected';\n\n    this.updateItemsOnSelect(treeViewItem);\n\n    this[event].emit({ ...treeViewItem });\n  }\n\n  private addChildItemInParent(childItem: PoTreeViewItem, parentItem: PoTreeViewItem) {\n    if (!parentItem.subItems) {\n      parentItem.subItems = [];\n    }\n\n    parentItem.subItems.push(childItem);\n  }\n\n  // caso houver parentItem:\n  //  - expande o parentItem caso o filho estiver expandido;\n  //  - adiciona o childItem no parentItem;\n  //  - marca o parentItem caso conter subItems marcodos ou nulos;\n  // Se nÃ£o conter parentItem, adiciona o childItem no items.\n  private addItem(items: Array<PoTreeViewItem>, childItem: PoTreeViewItem, parentItem?: PoTreeViewItem) {\n    if (parentItem) {\n      this.expandParentItem(childItem, parentItem);\n      this.addChildItemInParent(childItem, parentItem);\n      this.selectItemBySubItems(parentItem);\n\n      items.push(parentItem);\n    } else {\n      items.push(childItem);\n    }\n  }\n\n  private selectAllItems(items: Array<PoTreeViewItem>, isSelected: boolean) {\n    items.forEach(item => {\n\n      if (item.subItems) {\n        this.selectAllItems(item.subItems, isSelected);\n      }\n\n      item.selected = isSelected;\n    });\n  }\n\n  private selectItemBySubItems(item: PoTreeViewItem) {\n    item.selected = this.everyItemSelected(item.subItems);\n  }\n\n  // retornarÃ¡:\n  //  - true: se todos os items estiverem marcados;\n  //  - null: se no minimo um item esteja marcado ou nullo (indeterminate)\n  //  - false: caso nÃ£o corresponda em nenhuma das opÃ§Ãµes acima, no caso, nenhum marcado ou nulo;\n  private everyItemSelected(items: Array<PoTreeViewItem> = []): boolean | null {\n    const itemsLength = items.length;\n\n    const lengthCheckedItems = items.filter(item => item.selected).length;\n\n    if (itemsLength && itemsLength === lengthCheckedItems) {\n      return true;\n    }\n\n    const hasIndeterminateItems = items.filter(item => item.selected || item.selected === null).length;\n\n    if (hasIndeterminateItems) {\n      return null;\n    }\n\n    return false;\n  }\n\n  // expande o item pai caso o filho estiver expandido.\n  private expandParentItem(childItem: PoTreeViewItem, parentItem: PoTreeViewItem) {\n    if (childItem.expanded) {\n      parentItem.expanded = true;\n    }\n  }\n\n  private getItemsByMaxLevel(items: Array<PoTreeViewItem> = [], level: number = 0, parentItem?: PoTreeViewItem, newItems = []) {\n    items.forEach(item => {\n      const { subItems, ...currentItem } = item;\n\n      if (level === poTreeViewMaxLevel) {\n        return;\n      }\n\n      if (Array.isArray(subItems)) {\n\n        // caso um item pai iniciar selecionado, deve selecionar os filhos.\n        if (currentItem.selected) {\n          this.selectAllItems(subItems, currentItem.selected);\n        }\n\n        this.getItemsByMaxLevel(subItems, ++level, currentItem);\n        --level;\n      }\n\n      this.addItem(newItems, currentItem, parentItem);\n    });\n\n    return newItems;\n  }\n\n  private getItemsWithParentSelected(items: Array<PoTreeViewItem> = [], parentItem?: PoTreeViewItem, newItems = []) {\n    items.forEach(item => {\n      const { subItems, ...currentItem } = item;\n\n      if (Array.isArray(subItems)) {\n        this.getItemsWithParentSelected(subItems, currentItem);\n      }\n\n      this.addItem(newItems, currentItem, parentItem);\n    });\n\n    return newItems;\n  }\n\n  private updateItemsOnSelect(selectedItem: PoTreeViewItem) {\n    if (selectedItem.subItems) {\n      this.selectAllItems(selectedItem.subItems, selectedItem.selected);\n    }\n\n    this._items = this.getItemsWithParentSelected(this.items);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Subject } from 'rxjs';\n\nimport { PoTreeViewItem } from '../po-tree-view-item/po-tree-view-item.interface';\n\n@Injectable()\nexport class PoTreeViewService {\n\n  private expandedEvent = new Subject<PoTreeViewItem>();\n  private selectedEvent = new Subject<PoTreeViewItem>();\n\n  emitExpandedEvent(treeViewItem: PoTreeViewItem) {\n    return this.expandedEvent.next(treeViewItem);\n  }\n\n  emitSelectedEvent(treeViewItem: PoTreeViewItem) {\n    return this.selectedEvent.next(treeViewItem);\n  }\n\n  onExpand() {\n    return this.expandedEvent.asObservable();\n  }\n\n  onSelect() {\n    return this.selectedEvent.asObservable();\n  }\n\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\n\nimport { PoTreeViewBaseComponent } from './po-tree-view-base.component';\nimport { PoTreeViewItem } from './po-tree-view-item/po-tree-view-item.interface';\nimport { PoTreeViewService } from './services/po-tree-view.service';\n\n/**\n * @docsExtends PoTreeViewBaseComponent\n *\n * @example\n *\n * <example name=\"po-tree-view-basic\" title=\"Portinari Tree View Basic\">\n *  <file name=\"sample-po-tree-view-basic/sample-po-tree-view-basic.component.html\"> </file>\n *  <file name=\"sample-po-tree-view-basic/sample-po-tree-view-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-tree-view-labs\" title=\"Portinari Tree View Labs\">\n *  <file name=\"sample-po-tree-view-labs/sample-po-tree-view-labs.component.html\"> </file>\n *  <file name=\"sample-po-tree-view-labs/sample-po-tree-view-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-tree-view-folder-structure\" title=\"Portinari Tree View - Folder Structure\">\n *  <file name=\"sample-po-tree-view-folder-structure/sample-po-tree-view-folder-structure.component.html\"> </file>\n *  <file name=\"sample-po-tree-view-folder-structure/sample-po-tree-view-folder-structure.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-tree-view-supermarket\" title=\"Portinari Tree View - Supermarket\">\n *  <file name=\"sample-po-tree-view-supermarket/sample-po-tree-view-supermarket.component.html\"> </file>\n *  <file name=\"sample-po-tree-view-supermarket/sample-po-tree-view-supermarket.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-tree-view',\n  templateUrl: './po-tree-view.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [ PoTreeViewService ]\n})\nexport class PoTreeViewComponent extends PoTreeViewBaseComponent implements OnInit {\n\n  get hasItems() {\n    return !!(this.items && this.items.length);\n  }\n\n  constructor(private treeViewService: PoTreeViewService) {\n    super();\n  }\n\n  ngOnInit() {\n    this.treeViewService.onExpand().subscribe((treeViewItem: PoTreeViewItem) => {\n      this.emitExpanded(treeViewItem);\n    });\n\n    this.treeViewService.onSelect().subscribe((treeViewItem: PoTreeViewItem) => {\n      this.emitSelected(treeViewItem);\n    });\n  }\n\n  trackByFunction(index: number) {\n    return index;\n  }\n}\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\nimport { PoTreeViewItem } from './po-tree-view-item.interface';\nimport { PoTreeViewService } from '../services/po-tree-view.service';\n\n@Component({\n  selector: 'po-tree-view-item',\n  templateUrl: './po-tree-view-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('toggleBody', [\n      state('collapsed', style({\n        'overflow-y': 'hidden',\n        visibility: 'hidden',\n        opacity: 0,\n        height: '0'\n      })),\n      transition('expanded => collapsed', [\n        style({ height: '*' }),\n        animate(100, style({ opacity: 0 })),\n        animate(200, style({ height: 0 }))\n      ]),\n      transition('collapsed => expanded', [\n        style({ height: '0' }),\n        animate(100, style({ opacity: 1 })),\n        animate(200, style({ height: '*' }))\n      ])\n    ])\n  ]\n})\nexport class PoTreeViewItemComponent {\n\n  @Input('p-item') item: PoTreeViewItem;\n\n  @Input('p-selectable') selectable: boolean;\n\n  get hasSubItems() {\n    return !!(this.item.subItems && this.item.subItems.length);\n  }\n\n  constructor(private treeViewService: PoTreeViewService) { }\n\n  onClick(event: MouseEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.item.expanded = !this.item.expanded;\n\n    this.treeViewService.emitExpandedEvent({ ...this.item });\n  }\n\n  onSelect(selectedItem: PoTreeViewItem) {\n    this.treeViewService.emitSelectedEvent({ ...selectedItem });\n  }\n\n  trackByFunction(index: number) {\n    return index;\n  }\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\n\nimport { PoTreeViewItem } from '../po-tree-view-item/po-tree-view-item.interface';\n\n@Component({\n  selector: 'po-tree-view-item-header',\n  templateUrl: './po-tree-view-item-header.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoTreeViewItemHeaderComponent {\n\n  @ViewChild('inputCheckbox', { static: false }) inputCheckbox;\n\n  @Input('p-item') item: PoTreeViewItem;\n\n  @Input('p-selectable') selectable: boolean = false;\n\n  @Output('p-expanded') expanded = new EventEmitter<MouseEvent>();\n\n  @Output('p-selected') selected = new EventEmitter<any>();\n\n  get hasSubItems() {\n    return !!(this.item.subItems && this.item.subItems.length);\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { PoContainerModule } from '../po-container/po-container.module';\nimport { PoFieldModule } from '../po-field/po-field.module';\n\nimport { PoTreeViewComponent } from './po-tree-view.component';\nimport { PoTreeViewItemComponent } from './po-tree-view-item/po-tree-view-item.component';\nimport { PoTreeViewItemHeaderComponent } from './po-tree-view-item-header/po-tree-view-item-header.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente `po-tree-view`.\n *\n * > Para o correto funcionamento do componente `po-tree-view`, deve ser importado o mÃ³dulo `BrowserAnimationsModule` no\n * > mÃ³dulo principal da sua aplicaÃ§Ã£o.\n *\n * MÃ³dulo da aplicaÃ§Ã£o:\n * ```\n * import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n * import { PoModule } from '@portinari/portinari-ui';\n * ...\n *\n * @NgModule({\n *   imports: [\n *     BrowserModule,\n *     BrowserAnimationsModule,\n *     ...\n *     PoModule\n *   ],\n *   declarations: [\n *     AppComponent,\n *     ...\n *   ],\n *   providers: [],\n *   bootstrap: [AppComponent]\n * })\n * export class AppModule { }\n * ```\n */\n@NgModule({\n  declarations: [\n    PoTreeViewComponent,\n    PoTreeViewItemComponent,\n    PoTreeViewItemHeaderComponent\n  ],\n  exports: [\n    PoTreeViewComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    PoContainerModule,\n    PoFieldModule\n  ]\n})\nexport class PoTreeViewModule { }\n","import { Input, Output, EventEmitter } from '@angular/core';\n\nimport { convertToBoolean, isTypeof } from '../../utils/util';\n\n/**\n *\n * @description\n *\n * O componente `po-widget` Ã© recomendado para exibiÃ§Ã£o de *dashboards*, podendo ser utilizado\n * para incluir vÃ¡rios tipos de conteÃºdo como: grÃ¡ficos, tabelas, grids e imagens.\n *\n * AlÃ©m da exibiÃ§Ã£o de conteÃºdos, este componente possibilita adicionar aÃ§Ãµes e um link\n * para ajuda, como tambÃ©m possibilita ser utilizado com ou sem sombra.\n *\n * Para controlar sua largura, Ã© possÃ­vel utilizar o [Grid System](/guides/grid-system) para um maior\n * controle de seu redimensionamento, assim possibilitando o tratamento para diferentes resoluÃ§Ãµes.\n */\nexport abstract class PoWidgetBaseComponent {\n\n  private _background?: string;\n  private _disabled?: boolean = false;\n  private _height?: number;\n  private _help?: string;\n  private _noShadow?: boolean = false;\n  private _primary?: boolean = false;\n  private _primaryLabel?: string;\n  private _title?: string;\n\n  containerHeight?: string = 'auto';\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * AplicaÃ§Ã£o de imagem de fundo.\n   * > Se a imagem escolhida intervir na legibilidade do texto contido no `p-widget`,\n   * pode-se utilizar a propriedade `p-primary` em conjunto para que os textos fiquem na cor branca.\n   *\n   */\n  @Input('p-background') set background(value: string) {\n    this._background = (value && typeof value === 'string') ? value : undefined;\n  }\n\n  get background() {\n    return this._background;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita todas as aÃ§Ãµes do componente.\n   *\n   * @default `false`\n   */\n  @Input('p-disabled') set disabled(value: boolean) {\n    this._disabled = convertToBoolean(value);\n\n    this.onDisabled.emit(this.disabled);\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define a altura do `po-widget`.\n   * A altura mÃ­nima para o `po-widget` depende do que serÃ¡ exibido atravÃ©s das propriedades `p-primary-label`,\n   * `p-setting`, `p-help` e `p-title`.\n   * > Caso nÃ£o seja informado valor, a propriedade irÃ¡ assumir o tamanho do conteÃºdo.\n   */\n  @Input('p-height') set height(value: number) {\n    this._height = parseInt(<any> value, 10);\n    this.setHeight(this.height);\n  }\n\n  get height(): number {\n    return this._height;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Link de ajuda\n   */\n  @Input('p-help') set help(value: string) {\n    this._help = isTypeof(value, 'string') ? value : '';\n    this.setHeight(this.height);\n  }\n\n  get help(): string {\n    return this._help;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Desabilita a sombra do `po-widget`.\n   *\n   * @default `true`\n   */\n  @Input('p-no-shadow') set noShadow(value: boolean) {\n    this._noShadow = <any>value === '' ? true : convertToBoolean(value);\n    this.setHeight(this.height);\n  }\n\n  get noShadow(): boolean {\n    return this._noShadow;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * OpÃ§Ã£o para que o `po-widget` fique em destaque.\n   *\n   * @default `false`\n   */\n  @Input('p-primary') set primary(value: boolean) {\n    this._primary = <any>value === '' ? true : convertToBoolean(value);\n  }\n\n  get primary(): boolean {\n    return this._primary;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * DescriÃ§Ã£o da primeira aÃ§Ã£o.\n   *\n   * @default `false`\n   */\n  @Input('p-primary-label') set primaryLabel(value: string) {\n    this._primaryLabel = isTypeof(value, 'string') ? value : '';\n    this.setHeight(this.height);\n  }\n\n  get primaryLabel(): string {\n    return this._primaryLabel;\n  }\n\n  /** DescriÃ§Ã£o da segunda aÃ§Ã£o. */\n  @Input('p-secondary-label') secondaryLabel?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * TÃ­tulo do `po-widget`.\n   *\n   * @default `false`\n   */\n  @Input('p-title') set title(value: string) {\n    this._title = isTypeof(value, 'string') ? value : '';\n    this.setHeight(this.height);\n  }\n\n  get title(): string {\n    return this._title;\n  }\n\n  /** AÃ§Ã£o que serÃ¡ executada quando o usuÃ¡rio clicar sobre a Ã¡rea total do `po-widget`. */\n  @Output('p-click') click?: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /** FunÃ§Ã£o que serÃ¡ disparada com o valor do `p-disabled` quando esta propriedade for alterada. */\n  @Output('p-on-disabled') onDisabled?: EventEmitter<any> = new EventEmitter<any>();\n\n  /** FunÃ§Ã£o que serÃ¡ chamada na primeira aÃ§Ã£o. */\n  @Output('p-primary-action') primaryAction?: EventEmitter<any> = new EventEmitter<any>();\n\n  /** FunÃ§Ã£o que serÃ¡ chamada na segunda aÃ§Ã£o. */\n  @Output('p-secondary-action') secondaryAction?: EventEmitter<any> = new EventEmitter<any>();\n\n  /** FunÃ§Ã£o chamada ao clicar no Ã­cone de configuraÃ§Ã£o */\n  @Output('p-setting') setting?: EventEmitter<any> = new EventEmitter<any>();\n\n  /** FunÃ§Ã£o que serÃ¡ chamada ao clicar no tÃ­tulo. */\n  @Output('p-title-action') titleAction?: EventEmitter<any> = new EventEmitter<any>();\n\n  abstract setHeight(height: number);\n\n}\n","import { Component, OnInit, ViewContainerRef } from '@angular/core';\n\nimport { PoWidgetBaseComponent } from './po-widget-base.component';\n\n/**\n * @docsExtends PoWidgetBaseComponent\n *\n * @example\n *\n * <example name=\"po-widget-basic\" title=\"Portinari Widget Basic\">\n *  <file name=\"sample-po-widget-basic/sample-po-widget-basic.component.html\"> </file>\n *  <file name=\"sample-po-widget-basic/sample-po-widget-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-widget-labs\" title=\"Portinari Widget Labs\">\n *  <file name=\"sample-po-widget-labs/sample-po-widget-labs.component.html\"> </file>\n *  <file name=\"sample-po-widget-labs/sample-po-widget-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-widget-finance-dashboard\" title=\"Portinari Widget - Finance dashboard\">\n *  <file name=\"sample-po-widget-finance-dashboard/sample-po-widget-finance-dashboard.component.html\"> </file>\n *  <file name=\"sample-po-widget-finance-dashboard/sample-po-widget-finance-dashboard.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-widget-card\" title=\"Portinari Widget - Card\">\n *  <file name=\"sample-po-widget-card/sample-po-widget-card.component.html\"> </file>\n *  <file name=\"sample-po-widget-card/sample-po-widget-card.component.ts\"> </file>\n * </example>\n *\n */\n@Component({\n  selector: 'po-widget',\n  templateUrl: './po-widget.component.html'\n})\nexport class PoWidgetComponent extends PoWidgetBaseComponent implements OnInit {\n\n  get showTitleAction(): boolean {\n    return !!this.titleAction.observers[0];\n  }\n\n  constructor(viewRef: ViewContainerRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.setHeight(this.height);\n  }\n\n  hasTitleHelpOrSetting(): boolean {\n    return !!this.title || !!this.help || !!this.setting.observers[0];\n  }\n\n  onClick(event: MouseEvent) {\n    if (!this.disabled) {\n      this.click.emit(event);\n    }\n  }\n\n  openHelp(event: MouseEvent) {\n    if (!this.disabled) {\n      event.stopPropagation();\n      window.open(this.help, '_blank');\n    }\n  }\n\n  runPrimaryAction(event: MouseEvent) {\n    if (!this.disabled) {\n      event.stopPropagation();\n      this.primaryAction.emit();\n    }\n  }\n\n  runSecondaryAction(event: MouseEvent) {\n    if (!this.disabled) {\n      event.stopPropagation();\n      this.secondaryAction.emit();\n    }\n  }\n\n  runTitleAction(event: MouseEvent) {\n    if (!this.disabled) {\n      event.stopPropagation();\n      this.titleAction.emit();\n    }\n  }\n\n  setHeight(height: number) {\n    if (height) {\n      let bodyHeight = height;\n      const hasSettingOrHelp = this.setting.observers.length > 0 || this.help;\n      const footerBorder = 1;\n      const footerHeight = 40;\n      const settingHeight = 37;\n      const shadowHeight = 2;\n      const titleHeight = 50;\n\n      if (this.noShadow) {\n        bodyHeight -= shadowHeight;\n      }\n\n      if (hasSettingOrHelp && !this.title) {\n        bodyHeight -= settingHeight;\n      }\n\n      if (this.title) {\n        bodyHeight -= titleHeight;\n      }\n\n      if (this.primaryLabel) {\n        bodyHeight -= footerHeight + footerBorder;\n      }\n\n      this.containerHeight = `${bodyHeight}px`;\n    } else {\n      this.containerHeight = `auto`;\n    }\n  }\n\n  settingOutput(event: MouseEvent) {\n    if (!this.disabled) {\n      event.stopPropagation();\n      this.setting.emit();\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PoContainerModule } from '../po-container/index';\nimport { PoWidgetComponent } from './po-widget.component';\n\n/**\n * @description\n *\n * MÃ³dulo do componente po-widget\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    PoContainerModule\n  ],\n  exports: [\n    PoWidgetComponent\n  ],\n  declarations: [PoWidgetComponent]\n})\nexport class PoWidgetModule { }\n","import { NgModule } from '@angular/core';\n\nimport { PoAccordionModule } from './po-accordion/po-accordion.module';\nimport { PoAvatarModule } from './po-avatar/po-avatar.module';\nimport { PoBreadcrumbModule } from './po-breadcrumb/po-breadcrumb.module';\nimport { PoButtonModule } from './po-button/po-button.module';\nimport { PoButtonGroupModule } from './po-button-group/po-button-group.module';\nimport { PoCalendarModule } from './po-calendar/po-calendar.module';\nimport { PoChartModule } from './po-chart/po-chart.module';\nimport { PoContainerModule } from './po-container/po-container.module';\nimport { PoDisclaimerGroupModule } from './po-disclaimer-group/po-disclaimer-group.module';\nimport { PoDisclaimerModule } from './po-disclaimer/po-disclaimer.module';\nimport { PoDividerModule } from './po-divider/po-divider.module';\nimport { PoDropdownModule } from './po-dropdown/po-dropdown.module';\nimport { PoDynamicModule } from './po-dynamic/po-dynamic.module';\nimport { PoFieldModule } from './po-field/po-field.module';\nimport { PoGridModule } from './po-grid/po-grid.module';\nimport { PoInfoModule } from './po-info/po-info.module';\nimport { PoListViewModule } from './po-list-view/po-list-view.module';\nimport { PoLoadingModule } from './po-loading/po-loading.module';\nimport { PoMenuModule } from './po-menu/po-menu.module';\nimport { PoMenuPanelModule } from './po-menu-panel/po-menu-panel.module';\nimport { PoModalModule } from './po-modal/po-modal.module';\nimport { PoNavbarModule } from './po-navbar/po-navbar.module';\nimport { PoPageModule } from './po-page/po-page.module';\nimport { PoPopoverModule } from './po-popover/po-popover.module';\nimport { PoPopupModule } from './po-popup/po-popup.module';\nimport { PoProgressModule } from './po-progress/po-progress.module';\nimport { PoSlideModule } from './po-slide/po-slide.module';\nimport { PoStepperModule } from './po-stepper/po-stepper.module';\nimport { PoTableModule } from './po-table/po-table.module';\nimport { PoTabsModule } from './po-tabs/po-tabs.module';\nimport { PoTagModule } from './po-tag/po-tag.module';\nimport { PoToolbarModule } from './po-toolbar/po-toolbar.module';\nimport { PoTreeViewModule } from './po-tree-view/po-tree-view.module';\nimport { PoWidgetModule } from './po-widget/po-widget.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    PoAccordionModule,\n    PoAvatarModule,\n    PoBreadcrumbModule,\n    PoButtonModule,\n    PoButtonGroupModule,\n    PoCalendarModule,\n    PoChartModule,\n    PoContainerModule,\n    PoDisclaimerGroupModule,\n    PoDisclaimerModule,\n    PoDividerModule,\n    PoDropdownModule,\n    PoDynamicModule,\n    PoFieldModule,\n    PoGridModule,\n    PoInfoModule,\n    PoListViewModule,\n    PoLoadingModule,\n    PoMenuModule,\n    PoMenuPanelModule,\n    PoModalModule,\n    PoNavbarModule,\n    PoPageModule,\n    PoPopoverModule,\n    PoPopupModule,\n    PoProgressModule,\n    PoSlideModule,\n    PoStepperModule,\n    PoTableModule,\n    PoTabsModule,\n    PoTagModule,\n    PoToolbarModule,\n    PoTreeViewModule,\n    PoWidgetModule\n  ],\n  exports: [\n    PoAccordionModule,\n    PoAvatarModule,\n    PoBreadcrumbModule,\n    PoButtonModule,\n    PoButtonGroupModule,\n    PoCalendarModule,\n    PoChartModule,\n    PoContainerModule,\n    PoDisclaimerGroupModule,\n    PoDisclaimerModule,\n    PoDividerModule,\n    PoDropdownModule,\n    PoDynamicModule,\n    PoFieldModule,\n    PoGridModule,\n    PoInfoModule,\n    PoListViewModule,\n    PoLoadingModule,\n    PoMenuModule,\n    PoMenuPanelModule,\n    PoModalModule,\n    PoNavbarModule,\n    PoPageModule,\n    PoPopoverModule,\n    PoPopupModule,\n    PoProgressModule,\n    PoSlideModule,\n    PoStepperModule,\n    PoTableModule,\n    PoTabsModule,\n    PoTagModule,\n    PoToolbarModule,\n    PoTreeViewModule,\n    PoWidgetModule\n  ],\n  providers: [],\n  bootstrap: []\n})\nexport class PoComponentsModule { }\n","import { NgModule } from '@angular/core';\n\nimport { PoTooltipModule } from './po-tooltip/po-tooltip.module';\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n    PoTooltipModule\n  ],\n  exports: [\n    PoTooltipModule\n  ],\n  providers: [],\n  bootstrap: []\n})\n\nexport class PoDirectivesModule { }\n","import { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  exports: [],\n  providers: [],\n  bootstrap: []\n})\nexport class PoGuardsModule { }\n","export const poHttpInterceptorDetailLiteralsDefault = {\n  en: <any> {\n    closeButton: 'Close',\n    details: 'Details',\n    detail: 'Detail',\n    error: 'Error',\n    warning: 'Warning',\n    info: 'Information',\n    success: 'Success'\n  },\n  es: <any> {\n    closeButton: 'Cerrar',\n    details: 'Detalles',\n    detail: 'Detalle',\n    error: 'Error',\n    warning: 'Advertencia',\n    info: 'Informacion',\n    success: 'Ãxito'\n  },\n  pt: <any> {\n    closeButton: 'Fechar',\n    details: 'Detalhes',\n    detail: 'Detalhe',\n    error: 'Erro',\n    warning: 'Aviso',\n    info: 'InformaÃ§Ã£o',\n    success: 'Sucesso'\n  },\n  ru: <any>{\n    closeButton: 'Ð±Ð»Ð¸Ð·ÐºÐ¾',\n    details: 'ÐÐµÑÐ°Ð»Ð¸',\n    detail: 'Ð´ÐµÑÐ°Ð»Ñ',\n    error: 'Ð¾ÑÐ¸Ð±ÐºÐ°',\n    warning: 'Ð¿ÑÐµÐ´ÑÐ¿ÑÐµÐ¶Ð´ÐµÐ½Ð¸Ðµ',\n    info: 'Ð¸Ð½ÑÐ¾ÑÐ¼Ð°ÑÐ¸Ñ',\n    success: 'YÑÐ¿ÐµÑ'\n  }\n};\n","import { Component, EventEmitter, ViewChild } from '@angular/core';\n\nimport { getShortBrowserLanguage } from '../../../utils/util';\nimport { PoModalAction } from '../../../components/po-modal/po-modal-action.interface';\nimport { PoModalComponent } from '../../../components/po-modal/po-modal.component';\n\nimport { PoHttpInterceptorDetail } from './po-http-interceptor-detail.interface';\nimport { poHttpInterceptorDetailLiteralsDefault } from './po-http-interceptor-detail-literals.interface';\n\nexport const colors = { success: 'color-11', error: 'color-07', warning: 'color-08', info: '' };\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente para a modal de detalhes exibida pelo interceptor\n */\n@Component({\n  selector: 'po-http-interceptor-detail',\n  templateUrl: './po-http-interceptor-detail.component.html',\n})\nexport class PoHttpInterceptorDetailComponent {\n\n  @ViewChild(PoModalComponent, { static: true }) modal: PoModalComponent;\n\n  closed = new EventEmitter<any>();\n  details: Array<PoHttpInterceptorDetail> = [];\n  language = getShortBrowserLanguage();\n  literals = poHttpInterceptorDetailLiteralsDefault[this.language];\n\n  primaryAction: PoModalAction = {\n    action: () => this.close(),\n    label: this.literals.closeButton\n  };\n\n  title: string;\n\n  set detail(details: Array<PoHttpInterceptorDetail>) {\n\n    if (details && details.length) {\n      this.details = this.filterByValidDetails(details);\n    }\n\n    this.title = this.formatTitle(this.details);\n  }\n\n  close() {\n    this.modal.close();\n    this.closed.emit();\n  }\n\n  formatDetailItemTitle(detail) {\n    return detail.code ? `${ detail.code } - ${ detail.message }` : detail.message;\n  }\n\n  open() {\n    this.modal.open();\n  }\n\n  typeColor(type: string): string {\n    return colors[type];\n  }\n\n  typeValue(type: string): string {\n    return poHttpInterceptorDetailLiteralsDefault[this.language][type] || type;\n  }\n\n  private addValidDetail(newDetails: Array<PoHttpInterceptorDetail>, detail: PoHttpInterceptorDetail) {\n    return detail.message ? newDetails.concat(this.getValidDetailProperties(detail)) : newDetails;\n  }\n\n  private getValidDetailProperties({ code, message, detailedMessage, type }: PoHttpInterceptorDetail) {\n    return { code, message, detailedMessage, type };\n  }\n\n  private filterByValidDetails(details: Array<PoHttpInterceptorDetail>) {\n    return details.reduce((newDetails, detail) => this.addValidDetail(newDetails, detail), []);\n  }\n\n  private formatTitle(details: Array<PoHttpInterceptorDetail>) {\n    return details.length > 1 ? `${this.literals.details} (${details.length})` : this.literals.detail;\n  }\n\n}\n","import { ComponentRef } from '@angular/core';\nimport { HttpInterceptor, HttpHandler, HttpRequest, HttpResponse, HttpEvent, HttpErrorResponse } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { PoComponentInjectorService } from '../../services/po-component-injector/po-component-injector.service';\nimport { PoHttpInterceptorDetail } from './po-http-interceptor-detail/po-http-interceptor-detail.interface';\nimport { PoHttpInterceptorDetailComponent } from './po-http-interceptor-detail/po-http-interceptor-detail.component';\n\n// DEPRECATED 4.x.x\nconst NO_ERROR_HEADER_PARAM = 'X-Portinari-No-Error';\nconst NO_MESSAGE_HEADER_PARAM = 'X-Portinari-No-Message';\n\n/**\n * @description\n *\n * O serviÃ§o Portinari Http Interceptor realiza o tratamento de requisiÃ§Ãµes HTTP conforme o padrÃ£o do\n * [**Guia de implementaÃ§Ã£o das APIs TOTVS**](http://tdn.totvs.com/pages/viewpage.action?pageId=484701395) para adaptÃ¡-lo\n * ao modelo do PO.\n *\n * > Para o correto funcionamento do interceptor `po-http-interceptor`, deve ser importado o mÃ³dulo `BrowserAnimationsModule` no\n * > mÃ³dulo principal da sua aplicaÃ§Ã£o.\n *\n * MÃ³dulo da aplicaÃ§Ã£o:\n * ```\n * import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n * import { PoModule } from '@portinari/portinari-ui';\n * ...\n *\n * @NgModule({\n *   imports: [\n *     BrowserModule,\n *     BrowserAnimationsModule,\n *     ...\n *     PoModule\n *   ],\n *   declarations: [\n *     AppComponent,\n *     ...\n *   ],\n *   providers: [],\n *   bootstrap: [AppComponent]\n * })\n * export class AppModule { }\n * ```\n *\n * ### Funcionamento do interceptor\n *\n * Ao analisar o objeto `_messages` retornado pela requisiÃ§Ã£o, o serviÃ§o exibirÃ¡ notificaÃ§Ãµes com mensagens na tela.\n * Os retornos de erros com cÃ³digos 4xx e 5xx sÃ£o tratados automaticamente, sem a necessidade de incluir o `_messages`.\n *\n * Ã possÃ­vel dispensar a notificaÃ§Ã£o para o usuÃ¡rio utilizando-se no cabeÃ§alho da requisiÃ§Ã£o os parÃ¢metros listados abaixo com o valor\n * igual a `true`:\n *\n * - `X-Portinari-No-Message`: NÃ£o exibe notificaÃ§Ãµes de erro e/ou sucesso.\n *\n * - **Depreciado** `X-Portinari-No-Error`: nÃ£o mostra notificaÃ§Ãµes de erro com cÃ³digos `4xx` e `5xx`.\n *\n * ```\n * ...\n *  const headers = { 'X-Portinari-No-Message': 'true' };\n *\n *  this.http.get(`/customers/1`, { headers: headers });\n * ...\n *\n * ```\n *\n * Mais detalhes no tÃ³pico sobre cabeÃ§alhos customizados no\n * [**Guia de implementaÃ§Ã£o das APIs TOTVS**](http://tdn.totvs.com/pages/viewpage.action?pageId=484701395)\n *\n * > ApÃ³s a validaÃ§Ã£o no interceptor, os parÃ¢metros serÃ£o removidos do cabeÃ§alho da requisiÃ§Ã£o.\n *\n * O `Content-Type` deve ser `application/json` e a estrutura de mensagem recebida pelo serviÃ§o deve seguir o\n * [**Guia de implementaÃ§Ã£o das APIs TOTVS**](http://tdn.totvs.com/pages/viewpage.action?pageId=484701395)\n * (em Mensagens de sucesso para coleÃ§Ãµes), exemplo:\n *  - _messages: lista de mensagens ou objeto de mensagem, resultante do serviÃ§o.\n *    - type: success, warning, error, e information (serÃ¡ exibido a `tag` apenas se esta propriedade possuir valor);\n *    - code: tÃ­tulo ou cÃ³digo da mensagem;\n *    - message: texto da mensagem;\n *    - detailedMessage: detalhamento do erro ou informativo;\n *\n * Ao clicar na aÃ§Ã£o 'Detalhes' no\n * [`po-notification`](/documentation/po-notification) os detalhes das mensagens de sucesso e de erro sÃ£o apresentados em\n * um [`po-modal`](/documentation/po-modal) com um [`po-accordion`](/documentation/po-accordion) que possui um item por mensagem.\n *\n * Ao importar o mÃ³dulo `PoModule` na aplicaÃ§Ã£o, o `po-http-interceptor` Ã© automaticamente configurado sem a necessidade\n * de qualquer configuraÃ§Ã£o extra.\n *\n * Ao realizar requisiÃ§Ãµes utilize o `HttpClient`, conforme exemplo abaixo:\n *\n * ```\n * import { HttpClient } from '@angular/common/http';\n *\n * ...\n *\n * @Injectable()\n * export class UserService {\n *\n *   constructor(private http: HttpClient) { }\n *\n *   getUsers() {\n *     return this.http.get('/api/users');\n *   }\n *\n *   ...\n *\n * }\n * ```\n *\n */\nexport abstract class PoHttpInterceptorBaseService implements HttpInterceptor {\n\n  notificationTypes = ['success', 'warning', 'error', 'information'];\n\n  private httpInterceptorDetailComponent: ComponentRef<PoHttpInterceptorDetailComponent> = undefined;\n\n  constructor(private componentInjector: PoComponentInjectorService, private notification: any) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const cloneRequest = request.clone();\n\n    request = request && this.hasParameters(request) ? this.cloneRequestWithoutParameters(request) : request;\n\n    return next.handle(request).pipe(tap((response: HttpEvent<any>) => {\n\n      if (response instanceof HttpResponse) {\n\n        this.processResponse(response, cloneRequest);\n\n      }\n    }, (error: HttpErrorResponse) => {\n\n      this.processErrorResponse(error, cloneRequest);\n\n    }));\n  }\n\n  processResponse(response: HttpResponse<any>, request: HttpRequest<any>) {\n    const hasNoMessageParam = this.hasNoMessageParam(request);\n\n    if (!hasNoMessageParam && response.body && response.body._messages) {\n\n      const messages = response.body._messages;\n\n      if (messages instanceof Array) {\n        messages.forEach((message: PoHttpInterceptorDetail) => {\n          this.showNotification(message);\n        });\n      } else {\n        this.showNotification(messages);\n      }\n    }\n  }\n\n  processErrorResponse(response: HttpErrorResponse, request: HttpRequest<any>) {\n    const errorResponse = response.status !== 0\n      ? response.error\n      : { code: 0, message: 'Servidor nÃ£o estÃ¡ respondendo.', detailedMessage: response.message };\n\n    const hasNoErrorParam = this.hasNoErrorParam(request);\n    const hasNoMessageParam = this.hasNoMessageParam(request);\n\n    if (errorResponse && errorResponse.message && !hasNoErrorParam && !hasNoMessageParam) {\n      this.showNotification({ ...errorResponse, type: 'error' });\n    }\n  }\n\n  private cloneRequestWithoutParameters(request: HttpRequest<any>): HttpRequest<any> {\n    const headers = request.headers\n      .delete(NO_ERROR_HEADER_PARAM)\n      .delete(NO_MESSAGE_HEADER_PARAM);\n\n    return request.clone({ headers });\n  }\n\n  private createModal(responseMessage: PoHttpInterceptorDetail) {\n    const details = responseMessage.details ? [ responseMessage, ...responseMessage.details ] : [ responseMessage ];\n\n    this.httpInterceptorDetailComponent = this.componentInjector.createComponentInApplication(PoHttpInterceptorDetailComponent);\n    this.httpInterceptorDetailComponent.instance.detail = details;\n    this.httpInterceptorDetailComponent.instance.closed.subscribe(() => this.destroyModal());\n    this.httpInterceptorDetailComponent.instance.open();\n  }\n\n  private destroyModal() {\n    if (this.httpInterceptorDetailComponent) {\n      this.componentInjector.destroyComponentInApplication(this.httpInterceptorDetailComponent);\n      this.httpInterceptorDetailComponent = undefined;\n    }\n  }\n\n  private hasMessage(responseMessage: PoHttpInterceptorDetail) {\n    const hasMessageProperties = responseMessage.message;\n\n    return responseMessage && hasMessageProperties;\n  }\n\n  private hasNoErrorParam(request: HttpRequest<any>): boolean {\n    const noErrorParam = request && request.headers.get(NO_ERROR_HEADER_PARAM);\n\n    return noErrorParam && noErrorParam.toString().toLocaleLowerCase() === 'true';\n  }\n\n  private hasNoMessageParam(request: HttpRequest<any>): boolean {\n    const noMessageParam = request && request.headers.get(NO_MESSAGE_HEADER_PARAM);\n\n    return noMessageParam && noMessageParam.toString().toLocaleLowerCase() === 'true';\n  }\n\n  private hasParameters(request: HttpRequest<any>) {\n    return request.headers.has(NO_ERROR_HEADER_PARAM) || request.headers.has(NO_MESSAGE_HEADER_PARAM);\n  }\n\n  private showNotification(response: any) {\n\n    if (!this.hasMessage(response)) {\n      return;\n    }\n\n    const typeNotification = this.notificationTypes.includes(response.type) ? response.type : 'information';\n\n    const notificationAction = this.generateNotificationAction(response);\n\n    this.notification[typeNotification]({\n      message: response.message,\n      actionLabel: notificationAction.label,\n      action: notificationAction.action\n    });\n  }\n\n  private generateDetailModal(responseMessage: any) {\n    return () => {\n      if (!this.httpInterceptorDetailComponent) {\n        this.createModal(responseMessage);\n      }\n    };\n  }\n\n  private generateNotificationAction(responseMessage: any) {\n\n    let notificationAction;\n    let notificationLabel;\n\n    if (responseMessage.helpUrl && !(responseMessage.detailedMessage || responseMessage.details)) {\n      notificationLabel = 'Ajuda';\n      notificationAction = this.generateUrlHelpFunction(responseMessage.helpUrl);\n\n    } else if (responseMessage.detailedMessage || responseMessage.details) {\n      notificationLabel = 'Detalhes';\n      notificationAction = this.generateDetailModal(responseMessage);\n    }\n    return { label: notificationLabel, action: notificationAction };\n  }\n\n  private generateUrlHelpFunction(helpUrl: string) {\n    return () => { window.open(helpUrl, '_blank'); };\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PoComponentInjectorService } from '../../services/po-component-injector/po-component-injector.service';\nimport { PoNotificationService } from './../../services/po-notification/po-notification.service';\n\nimport { PoHttpInterceptorBaseService } from './po-http-interceptor-base.service';\n\n/**\n * @docsExtends PoHttpInterceptorBaseService\n *\n * @example\n * <example name='po-http-interceptor-labs' title='Portinari Http Interceptor Labs'>\n *  <file name='sample-po-http-interceptor-labs.component.ts'> </file>\n *  <file name='sample-po-http-interceptor-labs.component.html'> </file>\n * </example>\n */\n@Injectable()\nexport class PoHttpInterceptorService extends PoHttpInterceptorBaseService {\n  constructor(notification: PoNotificationService, componentInjector: PoComponentInjectorService) {\n    super(componentInjector, notification);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\n\nimport { PoAccordionModule } from '../../components/po-accordion/po-accordion.module';\nimport { PoModalModule } from '../../components/po-modal/po-modal.module';\nimport { PoNotificationModule } from '../../services/po-notification/po-notification.module';\nimport { PoNotificationService } from './../../services/po-notification/po-notification.service';\nimport { PoTagModule } from '../../components/po-tag/po-tag.module';\n\nimport { PoHttpInterceptorDetailComponent } from './po-http-interceptor-detail/po-http-interceptor-detail.component';\nimport { PoHttpInterceptorService } from './po-http-interceptor.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    PoAccordionModule,\n    PoModalModule,\n    PoNotificationModule,\n    PoTagModule\n  ],\n  declarations: [\n    PoHttpInterceptorDetailComponent,\n  ],\n  providers: [\n    PoHttpInterceptorService,\n    PoNotificationService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: PoHttpInterceptorService,\n      multi: true\n    }\n  ],\n  entryComponents: [PoHttpInterceptorDetailComponent]\n})\nexport class PoHttpInterceptorModule { }\n","import { Injectable } from '@angular/core';\n\nimport { Observable, Subject } from 'rxjs';\n\n/**\n * @docsPrivate\n *\n * ServiÃ§o responsÃ¡vel por efetuar o controle de interaÃ§Ã£o com o serviÃ§o de interceptor `PoHttpRequestInterceptorService`\n * gerenciando o seu estado.\n */\n@Injectable()\nexport class PoHttpRequesControltService {\n\n  controlHttpRequest: Subject<number> = new Subject<number>();\n\n  getControlHttpRequest(): Observable<any> {\n    return this.controlHttpRequest.asObservable();\n  }\n\n  send(value: number = 0) {\n    this.controlHttpRequest.next(value);\n  }\n\n}\n","import { ComponentRef, Injectable } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\n\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\nimport { PoComponentInjectorService } from '../../services/po-component-injector/po-component-injector.service';\nimport { PoLoadingOverlayComponent } from '../../components/po-loading/po-loading-overlay/po-loading-overlay.component';\n\nimport { PoHttpRequesControltService } from './po-http-request-control-service';\n\nconst noCountPendingRequests = 'X-Portinari-No-Count-Pending-Requests';\nconst screenLock = 'X-Portinari-Screen-Lock';\n\n/**\n * @description\n *\n * O serviÃ§o Portinari Http Request Interceptor realiza a contabilizaÃ§Ã£o de requisiÃ§Ãµes pendentes na aplicaÃ§Ã£o.\n *\n * Existe a possibilidade de nÃ£o efetuar a contabilizaÃ§Ã£o das requisiÃ§Ãµes pendentes, utilizando o parÃ¢metro\n * `X-Portinari-No-Count-Pending-Requests`. Para isso deve ser informado no cabeÃ§alho da requisiÃ§Ã£o com o valor `'true'`,\n * por exemplo:\n *\n * ```\n * ...\n *  const headers = { 'X-Portinari-No-Count-Pending-Requests': 'true' };\n *\n *  this.http.get(`/customers/1`, { headers: headers });\n * ...\n *\n * ```\n * Para obter a quantidade de requisiÃ§Ãµes pendentes, deve inscrever-se no mÃ©todo `getCountPendingRequests` do\n * serviÃ§o `PoHttpRequestInterceptorService`, com isso, ao realizar requisiÃ§Ãµes utilizando `HttpClient`,\n * serÃ¡ retornado a quantidade de requisiÃ§Ãµes pendentes.\n *\n * TambÃ©m existe a possibildade de travar a tela e mostrar uma imagem de _loading_ durante o processamento de uma requisiÃ§Ã£o\n * deve-se passar o parÃ¢metro `X-Portinari-Screen-Lock` no cabeÃ§alho da requisiÃ§Ã£o com valor `'true'`.\n *\n * por exemplo:\n *\n * ```\n * ...\n *  const headers = { 'X-Portinari-Screen-Lock': 'true' };\n *\n *  this.http.get(`/customers/1`, { headers: headers });\n * ...\n *\n * ```\n * > ApÃ³s a validaÃ§Ã£o no interceptor, o parÃ¢metro serÃ¡ removido do cabeÃ§alho da requisiÃ§Ã£o.\n *\n * Ao importar o mÃ³dulo `PoModule` na aplicaÃ§Ã£o, o `po-http-request-interceptor` Ã© automaticamente configurado sem a necessidade\n * de qualquer configuraÃ§Ã£o extra.\n *\n *\n * Segue abaixo um exemplo de uso:\n *\n * ```\n * import { HttpClient } from '@angular/common/http';\n *\n * ...\n *\n * @Injectable()\n * export class CustomersService {\n *\n *  headers = { 'X-Portinari-No-Count-Pending-Requests': true, 'X-Portinari-Screen-Lock': 'true' }\n *  pendingRequests: number = 0;\n *  subscription: Subscription;\n *\n *  constructor(\n *    private http: HttpClient,\n *    private httpRequestInterceptor: PoHttpRequestInterceptorService) { }\n *\n *  ngOnDestroy(): void {\n *    this.subscription.unsubscribe();\n *  }\n *\n *  ngOnInit(): void {\n *    this.subscription = this.httpRequestInterceptor.getCountPendingRequests().subscribe(data => {\n *      this.pendingRequests = data;\n *    });\n *  }\n *\n *  getCustomers() {\n *    return this.http.get(`/customers/1`, { headers: headers });\n *  }\n *\n *  ...\n *\n * }\n * ```\n *\n * @example\n * <example name='po-http-request-interceptor-labs' title='Portinari Http Request Interceptor Labs'>\n *  <file name='sample-po-http-request-interceptor-labs.component.ts'> </file>\n *  <file name='sample-po-http-request-interceptor-labs.component.html'> </file>\n * </example>\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PoHttpRequestInterceptorService implements HttpInterceptor {\n\n  private loadingOverlayComponent: ComponentRef<PoLoadingOverlayComponent> = undefined;\n\n  private pendingRequests: number = 0;\n  private overlayRequests: number = 0;\n\n  constructor(\n    private controlHttpRequest: PoHttpRequesControltService,\n    private poComponentInjector: PoComponentInjectorService) {  }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler) {\n\n    const requestClone = request.clone();\n\n    request = this.requestCloneWithoutHeaderParam([noCountPendingRequests, screenLock], request);\n\n    this.setCountPendingRequests(true, requestClone);\n    this.setCountOverlayRequests(true, requestClone);\n\n    return next.handle(request).pipe(\n      tap((response: HttpEvent<any>) => {\n        if (response instanceof HttpResponse) {\n          this.setCountPendingRequests(false, requestClone);\n          this.setCountOverlayRequests(false, requestClone);\n        }\n      }),\n      catchError(error => {\n        this.setCountPendingRequests(false, requestClone);\n        this.setCountOverlayRequests(false, requestClone);\n\n        return throwError(error);\n      })\n    );\n  }\n\n  getCountPendingRequests(): Observable<any> {\n    return this.controlHttpRequest.getControlHttpRequest();\n  }\n\n  private buildLoading() {\n    if (!this.loadingOverlayComponent) {\n      this.loadingOverlayComponent = this.poComponentInjector.createComponentInApplication(PoLoadingOverlayComponent);\n      this.loadingOverlayComponent.instance.screenLock = true;\n      this.loadingOverlayComponent.instance.changeDetector.detectChanges();\n    }\n  }\n\n  private destroyLoading() {\n    if (this.loadingOverlayComponent) {\n      this.poComponentInjector.destroyComponentInApplication(this.loadingOverlayComponent);\n      this.loadingOverlayComponent = undefined;\n    }\n  }\n\n  private requestCloneWithoutHeaderParam(headersParams: Array<string>, request: HttpRequest<any>): HttpRequest<any> {\n    let isRequestClone = false;\n\n    headersParams.forEach(headerParam => {\n      if (request.headers.has(headerParam)) {\n        request.headers.delete(headerParam);\n        isRequestClone = true;\n      }\n\n    });\n\n    return isRequestClone ? request.clone({headers: request.headers}) : request;\n  }\n\n  private setCountPendingRequests(isIncrement: boolean, request: HttpRequest<any>) {\n\n    const hasCountPendingRequestHeaderParam = request.headers.has(noCountPendingRequests);\n    const headerParam = request.headers.get(noCountPendingRequests);\n\n    if (hasCountPendingRequestHeaderParam && (headerParam.toString().toLowerCase() === 'true' ) ) {\n      return;\n    }\n\n    this.pendingRequests += isIncrement ? 1 : -1;\n    this.controlHttpRequest.send(this.pendingRequests);\n\n  }\n\n  private setCountOverlayRequests(isIncrement: boolean, request: HttpRequest<any>) {\n    const hasOverlayRequestHeaderParam = request.headers.has(screenLock);\n\n    if (hasOverlayRequestHeaderParam) {\n      const headerParam = request.headers.get(screenLock);\n\n      if (headerParam.toString().toLowerCase() === 'false') {\n        return;\n      }\n\n      this.overlayRequests += isIncrement ? 1 : -1;\n      this.overlayRequests > 0 ? this.buildLoading() : this.destroyLoading();\n    }\n  }\n\n}\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\n\nimport { PoComponentInjectorService } from '../../services/po-component-injector/po-component-injector.service';\nimport { PoHttpRequesControltService } from './po-http-request-control-service';\nimport { PoHttpRequestInterceptorService } from './po-http-request-interceptor.service';\n\nimport { PoLoadingComponent } from '../../components/po-loading/po-loading.component';\nimport { PoLoadingOverlayComponent } from '../../components/po-loading/po-loading-overlay/po-loading-overlay.component';\n\n@NgModule({\n  providers: [\n    PoHttpRequesControltService,\n    PoHttpRequestInterceptorService,\n    PoComponentInjectorService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: PoHttpRequestInterceptorService,\n      multi: true\n    }\n  ],\n  entryComponents: [PoLoadingOverlayComponent, PoLoadingComponent]\n})\nexport class PoHttpRequestModule { }\n","import { NgModule } from '@angular/core';\n\nimport { PoHttpInterceptorModule } from './po-http-interceptor/po-http-interceptor.module';\nimport { PoHttpRequestModule } from './po-http-request/po-http-request.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    PoHttpInterceptorModule,\n    PoHttpRequestModule\n  ],\n  exports: [\n    PoHttpInterceptorModule,\n    PoHttpRequestModule\n  ],\n  providers: [],\n  bootstrap: []\n})\nexport class PoInterceptorsModule { }\n","import { NgModule } from '@angular/core';\n\nimport { PoTimeModule } from '../pipes/po-time/po-time.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    PoTimeModule\n  ],\n  exports: [\n    PoTimeModule\n  ],\n  providers: [],\n  bootstrap: []\n})\nexport class PoPipesModule { }\n","import { NgModule } from '@angular/core';\n\nimport { PoComponentsModule } from './components/components.module';\nimport { PoDirectivesModule } from './directives/directives.module';\nimport { PoGuardsModule } from './guards/guards.module';\nimport { PoInterceptorsModule } from './interceptors/interceptors.module';\nimport { PoPipesModule } from './pipes/pipes.module';\nimport { PoServicesModule } from './services/services.module';\nimport { PoNotificationService } from './services/po-notification/po-notification.service';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    PoComponentsModule,\n    PoDirectivesModule,\n    PoGuardsModule,\n    PoInterceptorsModule,\n    PoPipesModule,\n    PoServicesModule\n  ],\n  exports: [\n    PoComponentsModule,\n    PoDirectivesModule,\n    PoInterceptorsModule,\n    PoGuardsModule,\n    PoPipesModule,\n    PoServicesModule\n  ],\n  providers: [ PoNotificationService ],\n  bootstrap: []\n})\nexport class PoModule { }\n","import { InjectionToken } from '@angular/core';\n\nimport { PoI18nConfig } from './interfaces/po-i18n-config.interface';\n\nexport const I18N_CONFIG = new InjectionToken<PoI18nConfig>('I18N_CONFIG');\n","import { HttpClient } from '@angular/common/http';\nimport { Inject } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { isLanguage, reloadCurrentPage } from '../../utils/util';\nimport { PoLanguageService } from '../po-language/po-language.service';\n\nimport { I18N_CONFIG } from './po-i18n-config-injection-token';\nimport { PoI18nConfig } from './interfaces/po-i18n-config.interface';\nimport { PoI18nLiterals } from './interfaces/po-i18n-literals.interface';\n\n/**\n * @description\n *\n * O serviÃ§o `PoI18nService` possibilita utilizar mÃºltiplos idiomas e contextos na aplicaÃ§Ã£o.\n *\n * > Antes da utilizaÃ§Ã£o do serviÃ§o, Ã© necessÃ¡rio realizar a\n * [importaÃ§Ã£o e configuraÃ§Ã£o do mÃ³dulo `PoI18nModule`](/documentation/po-i18n#i18n-config).\n *\n * **UtilizaÃ§Ã£o do serviÃ§o `PoI18nService`:**\n *\n * Para utilizar o serviÃ§o basta importÃ¡-lo nos componentes que necessitarem de literais e fazer a injeÃ§Ã£o de\n * dependÃªncia no construtor:\n * ```\n *  import { PoI18nService } from '@portinari/portinari-ui';\n *  ...\n *  constructor(private poI18nService: PoI18nService) { }\n *  ...\n * ```\n *\n * Por fim realizar a busca pelas literais, inscrevendo-se no [Observable](https://angular.io/guide/observables) pelo\n * mÃ©todo `getLiterals()`.\n *\n * > O mÃ©todo `getLiterals()` pode receber um objeto do tipo da interface `PoI18nLiterals` como parÃ¢metro,\n * porÃ©m, nenhuma das propriedades sÃ£o obrigatÃ³rias. Caso nenhum parÃ¢metro seja passado, serÃ£o buscadas\n * todas as literais do contexto definido com padrÃ£o, no idioma definido como padrÃ£o.\n *\n * Exemplos de requisiÃ§Ã£o:\n * ```\n * literals = {};\n * literalsEn = {};\n * literalsCrm = {};\n *\n * constructor(private poI18nService: PoI18nService) {\n *   poI18nService.getLiterals()\n *     .subscribe((literals) => {\n *       this.literals = literals;\n *     });\n *\n *   poI18nService.getLiterals({context: 'crm', literals: ['add', 'remove']})\n *     .subscribe((literals) => {\n *       this.literalsCrm = literals;\n *     });\n *\n *   poI18nService.getLiterals({language: 'en-us'})\n *     .subscribe((literals) => {\n *       this.literalsEn = literals;\n *     });\n * }\n * ```\n *\n * Para apresentar as literais capturadas acima no HTML do componente, deve-se utilizar o\n * seguinte cÃ³digo:\n *\n * <pre ngNonBindable>\n * {{ literals?.add }}\n * {{ literals?.remove }}\n * </pre>\n *\n * Caso as literais contenham variÃ¡veis que precisem ser substituÃ­das, pode-se utilizar o *pipe* `poI18n`.\n * Ã possÃ­vel informar propriedades do componente como `name` e `nickname` ou\n * informar o valor diretamente com \"\" ou nÃºmero, conforme o exemplo abaixo:\n *\n * <pre ngNonBindable>\n * {{ literals?.people | poI18n:[120] }}\n * {{ literals?.greeting | poI18n:[name, nickname] }}\n * {{ literals?.greeting | poI18n:[\"Brad\", \"Green\"] }}\n * </pre>\n *\n * > Ã importante o uso do operador `?` (Elvis) para evitar erros enquanto as literais nÃ£o forem carregadas.\n *\n * ### Teste unitÃ¡rio\n *\n * Abaixo segue um exemplo de *setup* inicial de teste unitÃ¡rio do *AppComponent* que utiliza o `PoI18nService`:\n *\n * ```\n * import { async, TestBed } from '@angular/core/testing';\n * import { HttpClientTestingModule } from '@angular/common/http/testing';\n *\n * import { PoI18nModule } from '@portinari/portinari-ui';\n *\n * import { AppComponent } from './app.component';\n *\n * describe('AppComponent', () => {\n *   const anotherPT = {\n *     text: 'texto',\n *     add: 'adicionar',\n *     remove: 'remover'\n *   };\n *\n *   const generalPT = {\n *     text: 'texto',\n *     add: 'adicionar',\n *     remove: 'remover'\n *   };\n *\n *   const config = {\n *     default: {\n *       language: 'pt-BR',\n *       context: 'general',\n *       cache: false\n *     },\n *     contexts: {\n *       general: {\n *         'pt-br': generalPT\n *       },\n *       another: {\n *         'pt-br': anotherPT\n *       }\n *     }\n *   };\n *\n *   beforeEach(async(() => {\n *     TestBed.configureTestingModule({\n *       declarations: [\n *         AppComponent\n *       ],\n *       imports: [\n *         HttpClientTestingModule,\n *         PoI18nModule.config(config)\n *       ]\n *     }).compileComponents();\n *   }));\n *\n *   it('should create the app', async(() => {\n *     const fixture = TestBed.createComponent(AppComponent);\n *     const app = fixture.debugElement.componentInstance;\n *\n *     expect(app).toBeTruthy();\n *   }));\n *\n * });\n * ```\n */\n\nexport class PoI18nBaseService {\n\n  private varI18n: any = {};\n\n  private contextDefault: string;\n\n  private useCache: boolean = false;\n\n  private servicesContext: any = {};\n\n  constructor(\n    @Inject(I18N_CONFIG) private config?: PoI18nConfig,\n    @Inject(HttpClient) private http?: HttpClient,\n    private languageService?: PoLanguageService) {\n\n    this.setConfig(config);\n  }\n\n  /**\n   * <a id=\"get-language\"></a>\n   * MÃ©todo que retorna o idioma padrÃ£o ativo.\n   *\n   * A busca deste idioma pelo mÃ©todo serÃ¡ feita na seguinte ordem:\n   *\n   *   1 - o idioma que foi armazenado no *localStorage*, atravÃ©s do mÃ©todo [`setLanguage()`](documentation/po-i18n#setLanguage).\n   *\n   *   2 - o valor inserido no mÃ³dulo do i18n atravÃ©s do parÃ¢metro `config`, sendo o idioma inserido na propriedade\n   * `language` da interface [`PoI18nConfigDefault`](documentation/po-i18n#poI18nConfigDefault).\n   *\n   *   3 - o idioma do navegador utilizado.\n   *\n   * > Caso o idioma do navegador nÃ£o seja suportado pelo PO (`pt`, `en` ou `es`), serÃ¡ retornado valor `pt`.\n   *\n   * @returns {string} sigla do idioma padrÃ£o.\n   */\n  getLanguage(): string {\n    return this.languageService.getLanguage();\n  }\n\n  /**\n   * MÃ©todo que retorna o idioma padrÃ£o ativo, com somente a abreviaÃ§Ã£o do idioma (duas primeiras letras).\n   * Por exemplo: \"pt\" ou \"es\".\n   *\n   * A busca deste idioma Ã© baseada no mÃ©todo [**getLanguage()**](/documentation/po-i18n#get-language).\n   *\n   * @returns {string} sigla do idioma padrÃ£o.\n   */\n  getShortLanguage(): string {\n    return this.languageService.getShortLanguage();\n  }\n\n  /**\n   * <a id=\"setLanguage\"></a>\n   * MÃ©todo para alterar o idioma padrÃ£o do mÃ³dulo do i18n.\n   *\n   * Ao utilizar este mÃ©todo, o idioma ficarÃ¡ gravado no armazenamento local do navegador, que serÃ¡ utilizado pelo\n   * serviÃ§o do `i18n` para buscar as literais no idioma padrÃ£o.\n   *\n   * @param {string} language Sigla do idioma.\n   *\n   * Esta sigla deve ser composta por duas letras representando o idioma,\n   * podendo ser adicionado outras duas letras representando o paÃ­s, por exemplo: `pt`, `pt-BR`, `pt-br`, `en` ou `en-US`.\n   *\n   * > Caso seja informado um valor diferente deste padrÃ£o, o mesmo serÃ¡ ignorado.\n   *\n   * @param {boolean} reload Indica se a pÃ¡gina atual poderÃ¡ ser recarregada apÃ³s a alteraÃ§Ã£o do idioma.\n   *\n   * Este recurso pode ser Ãºtil para os usuÃ¡rios que utilizam o mÃ©todo `getLiterals()` do serviÃ§o do i18n para poder\n   * buscar novamente as literais no novo idioma configurado.\n   */\n  setLanguage(language: string, reload?: boolean): void {\n\n    if (!isLanguage(language)) {\n      return;\n    }\n\n    this.languageService.setLanguage(language);\n\n    if (reload) {\n      reloadCurrentPage();\n    }\n\n  }\n\n  private setConfig(config: PoI18nConfig) {\n    // Seta as configuraÃ§Ãµes padrÃµes definidas no importaÃ§Ã£o do mÃ³dulo\n    if (config['default']) {\n\n      this.languageService.setLanguageDefault(config['default']['language']);\n\n      this.contextDefault = (config['default']['context']) ? config['default']['context'] : '';\n      this.useCache = (config['default']['cache']) ? config['default']['cache'] : false;\n    }\n\n    // Carrega a lista dos contextos e as contantes informadas\n    if (config['contexts']) {\n      this.setVarI18n(config['contexts']);\n\n      // Se nenhum contexto foi definido como padrÃ£o,\n      // entÃ£o define o primeiro contexto\n      if (!this.contextDefault) {\n        for (const context in config['contexts']) {\n          if (this.config['contexts'].hasOwnProperty(context)) {\n            this.contextDefault = context;\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  getLiterals(options: PoI18nLiterals = {}): Observable<object> {\n    const language = options['language'] ? options['language'].toLowerCase() : this.getLanguage();\n    const context = (options['context']) ? options['context'] : this.contextDefault;\n    const literals: Array<string> = (options['literals']) ? options['literals'] : [];\n\n    return new Observable(observer => {\n      if (this.servicesContext[context]) {\n        // Faz o processo de busca de um contexto que contÃ©m serviÃ§o\n        this.getLiteralsFromContextService(language, context, literals, observer);\n      } else {\n        // Faz o processo de busca de um contexto que utiliza constante\n        this.getLiteralsFromContextConstant(language, context, literals, observer);\n      }\n    });\n  }\n\n  // Processo de busca de um contexto que contÃ©m serviÃ§o.\n  //    1 - Procura na variÃ¡vel I18n deste serviÃ§o\n  //    2 - Procura no local storage (Se o cache estiver definido como true na configuraÃ§Ã£o do mÃ³dulo)\n  //    3 - Dispara o serviÃ§o, mesmo que jÃ¡ tenha encontrado no local storage, para garantir a atualizaÃ§Ã£o\n  //    4 - Se nenhuma literal for encontrada, entÃ£o busca em pt-br\n  private getLiteralsFromContextService(language: string,\n                                        context: string,\n                                        literals: Array<string>,\n                                        observer: any,\n                                        translations: any = {},\n                                        languageAlternative: string = null) {\n\n    // Idioma usado para tentar buscar as literais faltantes\n    const languageSearch = (languageAlternative) ? languageAlternative : language;\n\n    translations = this.mergeObject(translations, this.searchInVarI18n(languageSearch, context, literals));\n\n    if (this.countObject(translations) > 0) {\n      observer.next(translations);\n    }\n\n    // realiza a busca no localStorage e em seguida no serviÃ§o\n    this.getLiteralsLocalStorageAndCache(languageSearch, context, literals, observer, translations, languageAlternative);\n  }\n\n  // Procura no local storage e em seguida no serviÃ§o\n  // Caso nÃ£o encontre nem no serviÃ§o, recomeÃ§a a busca em pt-br\n  private getLiteralsLocalStorageAndCache(language: string,\n                                          context: string,\n                                          literals: Array<string>,\n                                          observer: any,\n                                          translations: any,\n                                          languageAlternative: string = null) {\n\n    const languageSearch = (languageAlternative) ? languageAlternative : language;\n    let translationTemp;\n    // Verifica se usa cache\n    if (this.useCache) {\n      translationTemp = this.searchInLocalStorage(languageSearch, context, literals);\n      if (this.countObject(translationTemp) > 0) {\n        this.updateVarI18n(language, context, translationTemp);\n        translations = this.mergeObject(translationTemp, translations);\n        observer.next(translations);\n      }\n    }\n\n    // Busca do ServiÃ§o\n    this.getHttpService(this.servicesContext[context], languageSearch, literals)\n      .subscribe(\n        response => {\n          if (response) {\n            this.updateLocalStorage(language, context, response);\n            this.updateVarI18n(language, context, response);\n            translationTemp = this.searchInVarI18n(language, context, literals);\n            translations = this.mergeObject(translationTemp, translations);\n            observer.next(translations);\n          }\n\n          // Se nÃ£o encontrou todas as literais pesquisadas no idioma\n          // EntÃ£o refaz o processo procurando em portuguÃªs\n          if (literals.length > this.countObject(translations)) {\n            if (languageAlternative === 'pt-br') {\n              // Se nÃ£o encontrou nem em portuguÃªs, entÃ£o retorna o nome das literais\n              translations = this.completeFaultLiterals(language, context, literals, translations);\n              this.updateLocalStorage(language, context, translations);\n              this.updateVarI18n(language, context, translations);\n              observer.next(translations);\n            } else {\n              this.getLiteralsFromContextService(language, context, literals, observer, translations, 'pt-br');\n            }\n          }\n        });\n  }\n\n  // Procura pela lista de literais\n  // Se nÃ£o encontrar todas, procura em pt-br\n  private getLiteralsFromContextConstant(language: string,\n                                         context: string,\n                                         literals: Array<string>,\n                                         observer: any,\n                                         translations: any = {}) {\n\n    translations = this.mergeObject(translations, this.searchInVarI18n(language, context, literals));\n    if (this.countObject(translations) > 0) {\n      observer.next(translations);\n    }\n\n    // Se foi pesquisado por literais\n    if (literals.length > 0) {\n      // Se nÃ£o encontrou todas as literais pesquisadas no idioma, procura em portuguÃªs\n      if (literals.length > this.countObject(translations)) {\n        if (language === 'pt-br') {\n          // Se nÃ£o encontrou nem em portuguÃªs, entÃ£o retorna o nome das literais\n          translations = this.completeFaultLiterals(language, context, literals, translations);\n          observer.next(translations);\n        } else {\n          this.getLiteralsFromContextConstant('pt-br', context, literals, observer, translations);\n        }\n      }\n    } else {\n      // Se nÃ£o encontrar nenhuma literal, procura em portuguÃªs\n      if (this.countObject(translations) === 0 && language !== 'pt-br') {\n        this.getLiteralsFromContextConstant('pt-br', context, literals, observer, translations);\n      }\n\n      // caso nÃ£o informar literais e nÃ£o houver traduÃ§Ã£o\n      observer.next(translations);\n      observer.complete();\n    }\n  }\n\n  // Busca pelas literais no local storage\n  private searchInLocalStorage(language: string, context: string, literals: Array<string>): any {\n    const translations: any = {};\n\n    if (literals.length > 0) {\n      for (let i = 0; i < literals.length; i++) {\n        const literal = literals[i];\n        const translation = localStorage.getItem(language + '-' + context + '-' + literal);\n        if (translation) {\n          translations[literal] = translation;\n        }\n      }\n    }\n    return translations;\n  }\n\n  // Busca pelas literais na variÃ¡vel do serviÃ§o\n  private searchInVarI18n(language: string, context: string, literals: Array<string>): any {\n    let translations: any = {};\n\n    if (this.varI18n[language] && this.varI18n[language][context]) {\n      const content = this.varI18n[language][context];\n\n      if (literals.length > 0) {\n        // Busca as literais desejadas\n        for (let i = 0; i < literals.length; i++) {\n          const literal = literals[i];\n          if (content.hasOwnProperty(literal)) {\n            translations[literal] = content[literal];\n          }\n        }\n      } else {\n        // Atribui todas as literais\n        translations = { ...content };\n      }\n    }\n    return translations;\n  }\n\n  // Atualiza o local storage\n  private updateLocalStorage(language: string, context: string, data: any) {\n    if (this.useCache) {\n      for (const literal in data) {\n        if (data.hasOwnProperty(literal)) {\n          localStorage.setItem(language + '-' + context + '-' + literal, data[literal]);\n        }\n      }\n    }\n  }\n\n  // Atualiza a variÃ¡vel local com as literais com os objetos passados na configuraÃ§Ã£o\n  private setVarI18n(contexts: any) {\n    // Percorre os contextos\n    for (const context in contexts) {\n      if (contexts.hasOwnProperty(context)) {\n        const contextContent = contexts[context];\n\n        // Percorre os idiomas dentro do contexto\n        for (const language in contextContent) {\n          if (contextContent.hasOwnProperty(language)) {\n            const languageContent = contextContent[language];\n\n            if (language === 'url') {\n              this.servicesContext[context] = languageContent;\n            } else {\n              this.updateVarI18n(language, context, languageContent);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // Atualiza a variÃ¡vel local com as literais idioma e contexto\n  private updateVarI18n(language: string, context: string, data: any) {\n    language = language.toLowerCase();\n\n    if (!this.varI18n[language]) {\n      this.varI18n[language] = {[context]: {}};\n    }\n    if (!this.varI18n[language][context]) {\n      this.varI18n[language][context] = {};\n    }\n\n    // Cria ou atualiza o contexto dentro do storage\n    this.varI18n[language][context] = this.mergeObject(data, this.varI18n[language][context]);\n  }\n\n  private getHttpService(url: string, language: string, literals: Array<string>): Observable<object> {\n    let param = '?language=' + language;\n    if (literals.length > 0) {\n      param += '&literals=' + literals.join();\n    }\n\n    // Remove a barra final do endereÃ§o\n    url = (url.lastIndexOf('/') === url.length - 1) ? url.substr(0, url.length - 1) : url;\n\n    return this.http.get(url + param);\n  }\n\n  // Completa com o nome da literais, as que nÃ£o foram encontradas\n  private completeFaultLiterals(language: string,\n                                context: string,\n                                literals: Array<string>,\n                                translations: any) {\n    for (let i = 0; i < literals.length; i++) {\n      const literal = literals[i];\n      if (!translations[literal]) {\n        translations[literal] = literal;\n      }\n    }\n    return translations;\n  }\n\n  // Conta os atributos do objeto\n  private countObject(obj: object) {\n    return Object.keys(obj).length;\n  }\n\n  // Faz o merge dos objetos, sempre dando preferÃªncia para o primeiro objeto de parÃ¢metro\n  private mergeObject(objPermanent: any, obj: any) {\n    return { ...obj, ...objPermanent };\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { PoLanguageService } from './../po-language/po-language.service';\n\nimport { PoI18nBaseService } from './po-i18n-base.service';\nimport { PoI18nConfig } from './interfaces/po-i18n-config.interface';\n\n/**\n * @docsExtends PoI18nBaseService\n */\n\n@Injectable()\nexport class PoI18nService extends PoI18nBaseService { }\n\n// FunÃ§Ã£o usada para retornar instÃ¢ncia para o mÃ³dulo po-i18n.module\nexport function returnPoI18nService(config: PoI18nConfig, http: HttpClient, languageService: PoLanguageService) {\n  return new PoI18nService(config, http, languageService);\n}\n","import { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { APP_INITIALIZER, ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { PoLanguageService } from './../po-language/po-language.service';\n\nimport { I18N_CONFIG } from './po-i18n-config-injection-token';\nimport { returnPoI18nService, PoI18nService } from './po-i18n.service';\nimport { PoI18nConfig } from './interfaces/po-i18n-config.interface';\nimport { PoLanguageModule } from '../po-language/po-language.module';\n\n/**\n * @description\n *\n * MÃ³dulo do serviÃ§o `PoI18nService` para controle de idiomas com PO.\n *\n * Para utilizaÃ§Ã£o do serviÃ§o de idiomas `PoI18nService`, deve-se importar este mÃ³dulo mesmo jÃ¡ havendo importado\n * o mÃ³dulo `PoModule`. Na importaÃ§Ã£o deve ser invocado o mÃ©todo `config`, informando um objeto que deve implementar\n * a interface [`PoI18nConfig`](documentation/po-i18n#poI18nConfig) para configuraÃ§Ã£o.\n *\n * <a id=\"i18n-config\"></a>\n * **Exemplo de configuraÃ§Ã£o do mÃ³dulo do i18n:**\n * ```\n * import { PoI18nConfig } from '@portinari/portinari-ui';\n *\n * import { generalEn } from './i18n/general-en';\n * import { generalPt } from './i18n/general-pt';\n *\n * const i18nConfig: PoI18nConfig = {\n *   default: {\n *     language: 'pt-BR',\n *     context: 'general',\n *     cache: true\n *   },\n *   contexts: {\n *     general: {\n *       'pt-BR': generalPt,\n *       'en-US': generalEn\n *     },\n *     hcm: {\n *       url: 'http://10.1.1.1/api/translations/hcm/'\n *     }\n *   }\n * };\n *\n * @NgModule({\n *   declarations: [],\n *   imports: [\n *     PoModule,\n *     PoI18nModule.config(i18nConfig)\n *   ],\n *   bootstrap: [AppComponent]\n * })\n * ```\n *\n * Para cada contexto Ã© possÃ­vel definir a origem das literais, que podem ser de um serviÃ§o REST ou\n * de um objeto. Exemplo:\n *\n * Arquivo general-pt.ts\n * ```\n * export const generalPt = {\n *  add: 'Adicionar',\n *  greeting: 'Prazer, {0} {1}',\n *  people: '{0} Pessoas,\n *  remove: 'Remover'\n * }\n * ```\n *\n * Arquivo general-en.ts\n * ```\n * export const generalEn = {\n *  add: 'Add',\n *  greeting: 'Nice to meet you, {0} {1}',\n *  people: '{0} People,\n *  remove: 'Remove'\n * }\n * ```\n *\n * **Exemplo de configuraÃ§Ã£o de contextos usando constantes externas:**\n * ```\n * import { PoI18nConfig } from '@portinari/portinari-ui';\n *\n * import { generalEn } from './i18n/general-en';\n * import { generalPt } from './i18n/general-pt';\n *\n * const i18nConfig: PoI18nConfig = {\n *   contexts: {\n *     general: {\n *       'pt-BR': generalPt, // constantes em arquivos separados\n *       'en-US': generalEn // constantes em arquivos separados\n *     },\n *     crm: {\n *       url: 'http://10.0.0.1:3000/api/translations/crm'\n *     }\n *   },\n *   default: {}\n * }\n * ```\n *\n * **Exemplo de configuraÃ§Ã£o de um contexto utilizando serviÃ§o:**\n *\n * Ao optar por utilizar um serviÃ§o para configuraÃ§Ã£o de contexto, deverÃ¡ ser definida a URL\n * especÃ­fica do contexto, como nos exemplos abaixo:\n *\n *  - http://10.0.0.1:3000/api/translations/crm\n *  - http://10.0.0.1:3000/api/translations/general\n *\n * Os idiomas e literais serÃ£o automaticamente buscados com parÃ¢metros na prÃ³pria URL:\n * - **language**: o idioma serÃ¡ sempre passado por parÃ¢metro e Ã© recomendado utilizar uma das linguagens\n * suportadas pelo PO (`pt-br`, `en-us` ou `es-es`).\n * - **literals**: as literais serÃ£o separadas por vÃ­rgula. Caso esse parÃ¢metro nÃ£o seja informado, o\n * serviÃ§o deve retornar todas as literais do idioma.\n *\n * Exemplos de requisiÃ§Ã£o:\n *\n *  - http://10.0.0.1:3000/api/translations/crm?language=pt-br\n *  - http://10.0.0.1:3000/api/translations/crm?language=pt-br&literals=add,remove,text\n *\n * > Sempre que o idioma solicitado nÃ£o for encontrado, serÃ¡ buscado por `pt-br`.\n *\n * AlÃ©m dos contextos, Ã© possÃ­vel definir as configuraÃ§Ãµes *default* do sistema na configuraÃ§Ã£o do\n * mÃ³dulo utilizando a interface [`PoI18nConfig`](documentation/po-i18n#poI18nConfig):\n *\n * **Exemplo de padrÃµes definidos:**\n * ```\n * const i18nConfig: PoI18nConfig = {\n *   contexts: {\n *     general: { }\n *   },\n *   default: {\n *    language: 'pt-BR',\n *    context: 'general',\n *    cache: true\n *   }\n * }\n * ```\n *\n * **Importante:**\n *\n * Recomenda-se que as definiÃ§Ãµes *default* sejam realizadas apenas uma vez na aplicaÃ§Ã£o,\n * preferencialmente no mÃ³dulo `AppModule`.\n *\n * **i18n com *Lazy loading***\n *\n * Para aplicaÃ§Ãµes que utilizem a abordagem de mÃ³dulos com carregamento *lazy loading*, caso seja\n * definida outra configuraÃ§Ã£o do `PoI18nModule`, deve-se atentar os seguintes detalhes:\n *\n * - Caso existam literais comuns na aplicaÃ§Ã£o, estas devem ser reimportadas;\n * - NÃ£o defina outra *default language* para este mÃ³dulo. Caso for definida, serÃ¡ sobreposta para\n * toda a aplicaÃ§Ã£o;\n * - Caso precise de mÃ³dulos carregados via *lazy loading* com linguagens diferentes, utilize o\n * mÃ©todo [`setLanguage()`](documentation/po-i18n#setLanguage) disponibilizado pelo `PoI18nService`\n * para definir a linguagem da aplicaÃ§Ã£o e dos mÃ³dulos com as linguagens diferentes.\n */\n\n@NgModule({\n  imports: [\n    HttpClientModule,\n    PoLanguageModule\n  ]\n})\nexport class PoI18nModule {\n\n  static config(config: PoI18nConfig): ModuleWithProviders {\n    return {\n      ngModule: PoI18nModule,\n      providers: [\n        {\n          provide: I18N_CONFIG,\n          useValue: config\n        },\n        {\n          provide: APP_INITIALIZER,\n          useFactory: initializeLanguageDefault,\n          multi: true,\n          deps: [I18N_CONFIG, PoLanguageService]\n        },\n        {\n          provide: PoI18nService,\n          useFactory: returnPoI18nService,\n          deps: [I18N_CONFIG, HttpClient, PoLanguageService]\n        }\n      ]\n    };\n  }\n\n}\n\nexport function initializeLanguageDefault(config: PoI18nConfig, languageService: PoLanguageService) {\n  // tslint:disable-next-line:prefer-immediate-return\n  const setDefaultLanguage = () => {\n    if (config.default.language) {\n      languageService.setLanguageDefault(config.default.language);\n    }\n  };\n  return setDefaultLanguage;\n}\n"]}