import * as tslib_1 from "tslib";
import { Input, ViewChild } from '@angular/core';
import { PoPageContentComponent } from '../po-page-content/po-page-content.component';
/**
 * @description
 *
 * O componente `po-page-default` é utilizado como o container principal para as telas sem um template definido.
 */
export class PoPageDefaultBaseComponent {
    constructor() {
        this._actions = [];
    }
    /**
     * @optional
     *
     * @description
     *
     * Nesta propriedade deve ser definido um array de objetos que implementam a interface `PoPageAction`.
     */
    set actions(actions) {
        this._actions = Array.isArray(actions) ? actions : [];
        this.setDropdownActions();
    }
    get actions() {
        return this._actions;
    }
    /** Título da página. */
    set title(title) {
        this._title = title;
        this.poPageContent.recalculateHeaderSize();
    }
    get title() {
        return this._title;
    }
}
tslib_1.__decorate([
    ViewChild(PoPageContentComponent, { static: true }),
    tslib_1.__metadata("design:type", PoPageContentComponent)
], PoPageDefaultBaseComponent.prototype, "poPageContent", void 0);
tslib_1.__decorate([
    Input('p-actions'),
    tslib_1.__metadata("design:type", Array),
    tslib_1.__metadata("design:paramtypes", [Array])
], PoPageDefaultBaseComponent.prototype, "actions", null);
tslib_1.__decorate([
    Input('p-breadcrumb'),
    tslib_1.__metadata("design:type", Object)
], PoPageDefaultBaseComponent.prototype, "breadcrumb", void 0);
tslib_1.__decorate([
    Input('p-title'),
    tslib_1.__metadata("design:type", String),
    tslib_1.__metadata("design:paramtypes", [String])
], PoPageDefaultBaseComponent.prototype, "title", null);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tcGFnZS1kZWZhdWx0LWJhc2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvcnRpbmFyaS9wb3J0aW5hcmktdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby1wYWdlL3BvLXBhZ2UtZGVmYXVsdC9wby1wYWdlLWRlZmF1bHQtYmFzZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBSWpELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDhDQUE4QyxDQUFDO0FBRXRGOzs7O0dBSUc7QUFDSCxNQUFNLE9BQWdCLDBCQUEwQjtJQUFoRDtRQUVVLGFBQVEsR0FBeUIsRUFBRSxDQUFDO0lBcUM5QyxDQUFDO0lBaENDOzs7Ozs7T0FNRztJQUNpQixJQUFJLE9BQU8sQ0FBQyxPQUE0QjtRQUMxRCxJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO1FBQ3RELElBQUksQ0FBQyxrQkFBa0IsRUFBRSxDQUFDO0lBQzVCLENBQUM7SUFFRCxJQUFJLE9BQU87UUFDVCxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDdkIsQ0FBQztJQUtELHdCQUF3QjtJQUNOLElBQUksS0FBSyxDQUFDLEtBQWE7UUFDdkMsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDcEIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxxQkFBcUIsRUFBRSxDQUFDO0lBQzdDLENBQUM7SUFFRCxJQUFJLEtBQUs7UUFDUCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDckIsQ0FBQztDQUtGO0FBbENzRDtJQUFwRCxTQUFTLENBQUMsc0JBQXNCLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLENBQUM7c0NBQWdCLHNCQUFzQjtpRUFBQztBQVN2RTtJQUFuQixLQUFLLENBQUMsV0FBVyxDQUFDO3NDQUFzQixLQUFLOzZDQUFMLEtBQUs7eURBRzdDO0FBT3NCO0lBQXRCLEtBQUssQ0FBQyxjQUFjLENBQUM7OzhEQUEyQjtBQUcvQjtJQUFqQixLQUFLLENBQUMsU0FBUyxDQUFDOzs7dURBR2hCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5wdXQsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBQb0JyZWFkY3J1bWIgfSBmcm9tICcuLi8uLi9wby1icmVhZGNydW1iL3BvLWJyZWFkY3J1bWIuaW50ZXJmYWNlJztcbmltcG9ydCB7IFBvUGFnZUFjdGlvbiB9IGZyb20gJy4uL3BvLXBhZ2UtYWN0aW9uLmludGVyZmFjZSc7XG5pbXBvcnQgeyBQb1BhZ2VDb250ZW50Q29tcG9uZW50IH0gZnJvbSAnLi4vcG8tcGFnZS1jb250ZW50L3BvLXBhZ2UtY29udGVudC5jb21wb25lbnQnO1xuXG4vKipcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIE8gY29tcG9uZW50ZSBgcG8tcGFnZS1kZWZhdWx0YCDDqSB1dGlsaXphZG8gY29tbyBvIGNvbnRhaW5lciBwcmluY2lwYWwgcGFyYSBhcyB0ZWxhcyBzZW0gdW0gdGVtcGxhdGUgZGVmaW5pZG8uXG4gKi9cbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBQb1BhZ2VEZWZhdWx0QmFzZUNvbXBvbmVudCB7XG5cbiAgcHJpdmF0ZSBfYWN0aW9ucz86IEFycmF5PFBvUGFnZUFjdGlvbj4gPSBbXTtcbiAgcHJpdmF0ZSBfdGl0bGU6IHN0cmluZztcblxuICBAVmlld0NoaWxkKFBvUGFnZUNvbnRlbnRDb21wb25lbnQsIHsgc3RhdGljOiB0cnVlIH0pIHBvUGFnZUNvbnRlbnQ6IFBvUGFnZUNvbnRlbnRDb21wb25lbnQ7XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogTmVzdGEgcHJvcHJpZWRhZGUgZGV2ZSBzZXIgZGVmaW5pZG8gdW0gYXJyYXkgZGUgb2JqZXRvcyBxdWUgaW1wbGVtZW50YW0gYSBpbnRlcmZhY2UgYFBvUGFnZUFjdGlvbmAuXG4gICAqL1xuICBASW5wdXQoJ3AtYWN0aW9ucycpIHNldCBhY3Rpb25zKGFjdGlvbnM6IEFycmF5PFBvUGFnZUFjdGlvbj4pIHtcbiAgICB0aGlzLl9hY3Rpb25zID0gQXJyYXkuaXNBcnJheShhY3Rpb25zKSA/IGFjdGlvbnMgOiBbXTtcbiAgICB0aGlzLnNldERyb3Bkb3duQWN0aW9ucygpO1xuICB9XG5cbiAgZ2V0IGFjdGlvbnMoKTogQXJyYXk8UG9QYWdlQWN0aW9uPiB7XG4gICAgcmV0dXJuIHRoaXMuX2FjdGlvbnM7XG4gIH1cblxuICAvKiogT2JqZXRvIGNvbSBwcm9wcmllZGFkZXMgZG8gYnJlYWRjcnVtYi4gKi9cbiAgQElucHV0KCdwLWJyZWFkY3J1bWInKSBicmVhZGNydW1iPzogUG9CcmVhZGNydW1iO1xuXG4gIC8qKiBUw610dWxvIGRhIHDDoWdpbmEuICovXG4gIEBJbnB1dCgncC10aXRsZScpIHNldCB0aXRsZSh0aXRsZTogc3RyaW5nKSB7XG4gICAgdGhpcy5fdGl0bGUgPSB0aXRsZTtcbiAgICB0aGlzLnBvUGFnZUNvbnRlbnQucmVjYWxjdWxhdGVIZWFkZXJTaXplKCk7XG4gIH1cblxuICBnZXQgdGl0bGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3RpdGxlO1xuICB9XG5cbiAgLy8gU2V0YSBhIGxpc3RhIGRlIGHDp8O1ZXMgbm8gZHJvcGRvd24uXG4gIGFic3RyYWN0IHNldERyb3Bkb3duQWN0aW9ucygpO1xuXG59XG4iXX0=