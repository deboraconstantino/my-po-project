import * as tslib_1 from "tslib";
import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente responsável por exibir um ícone na tabela.
 */
let PoTableIconComponent = class PoTableIconComponent {
    /**
     * @docsPrivate
     *
     * @description
     *
     * Componente responsável por exibir um ícone na tabela.
     */
    constructor() {
        /** Output click. */
        this.click = new EventEmitter();
    }
    get allowTooltip() {
        return !this.disabled && this.iconTooltip;
    }
    onClick() {
        if (this.clickable) {
            this.click.emit();
        }
    }
    tooltipMouseEnter() {
        if (this.allowTooltip) {
            this.tooltip = this.iconTooltip;
        }
    }
    tooltipMouseLeave() {
        this.tooltip = undefined;
    }
};
tslib_1.__decorate([
    Input('p-clickable'),
    tslib_1.__metadata("design:type", Boolean)
], PoTableIconComponent.prototype, "clickable", void 0);
tslib_1.__decorate([
    Input('p-color'),
    tslib_1.__metadata("design:type", String)
], PoTableIconComponent.prototype, "color", void 0);
tslib_1.__decorate([
    Input('p-disabled'),
    tslib_1.__metadata("design:type", Boolean)
], PoTableIconComponent.prototype, "disabled", void 0);
tslib_1.__decorate([
    Input('p-icon'),
    tslib_1.__metadata("design:type", String)
], PoTableIconComponent.prototype, "icon", void 0);
tslib_1.__decorate([
    Input('p-icon-tooltip'),
    tslib_1.__metadata("design:type", String)
], PoTableIconComponent.prototype, "iconTooltip", void 0);
tslib_1.__decorate([
    Output('p-click'),
    tslib_1.__metadata("design:type", EventEmitter)
], PoTableIconComponent.prototype, "click", void 0);
PoTableIconComponent = tslib_1.__decorate([
    Component({
        selector: 'po-table-icon',
        template: "<span\n  class=\"po-icon {{ icon }} {{ disabled ? '' : color }}\"\n  [ngClass]=\"{'po-clickable': clickable, 'po-table-icon-disabled': disabled}\"\n  [p-tooltip]=\"tooltip\"\n  (click)=\"onClick()\"\n  (mouseenter)=\"tooltipMouseEnter()\"\n  (mouseleave)=\"tooltipMouseLeave()\">\n</span>\n",
        changeDetection: ChangeDetectionStrategy.OnPush
    })
], PoTableIconComponent);
export { PoTableIconComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdGFibGUtaWNvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcG9ydGluYXJpL3BvcnRpbmFyaS11aS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3BvLXRhYmxlL3BvLXRhYmxlLWljb24vcG8tdGFibGUtaWNvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFaEc7Ozs7OztHQU1HO0FBT0gsSUFBYSxvQkFBb0IsR0FBakMsTUFBYSxvQkFBb0I7SUFiakM7Ozs7OztPQU1HO0lBQ0g7UUF5QkUsb0JBQW9CO1FBQ0QsVUFBSyxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO0lBc0JuRSxDQUFDO0lBcEJDLElBQVksWUFBWTtRQUN0QixPQUFPLENBQUMsSUFBSSxDQUFDLFFBQVEsSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDO0lBQzVDLENBQUM7SUFFRCxPQUFPO1FBQ0wsSUFBSSxJQUFJLENBQUMsU0FBUyxFQUFFO1lBQ2xCLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUM7U0FDbkI7SUFDSCxDQUFDO0lBRUQsaUJBQWlCO1FBQ2YsSUFBSSxJQUFJLENBQUMsWUFBWSxFQUFFO1lBQ3JCLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQztTQUNqQztJQUNILENBQUM7SUFFRCxpQkFBaUI7UUFDZixJQUFJLENBQUMsT0FBTyxHQUFHLFNBQVMsQ0FBQztJQUMzQixDQUFDO0NBRUYsQ0FBQTtBQXJDdUI7SUFBckIsS0FBSyxDQUFDLGFBQWEsQ0FBQzs7dURBQW9CO0FBR3ZCO0lBQWpCLEtBQUssQ0FBQyxTQUFTLENBQUM7O21EQUFlO0FBR1g7SUFBcEIsS0FBSyxDQUFDLFlBQVksQ0FBQzs7c0RBQW1CO0FBR3RCO0lBQWhCLEtBQUssQ0FBQyxRQUFRLENBQUM7O2tEQUFjO0FBR0w7SUFBeEIsS0FBSyxDQUFDLGdCQUFnQixDQUFDOzt5REFBcUI7QUFHMUI7SUFBbEIsTUFBTSxDQUFDLFNBQVMsQ0FBQztzQ0FBUSxZQUFZO21EQUEyQjtBQXBCdEQsb0JBQW9CO0lBTmhDLFNBQVMsQ0FBQztRQUNULFFBQVEsRUFBRSxlQUFlO1FBQ3pCLDhTQUE2QztRQUM3QyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtLQUNoRCxDQUFDO0dBRVcsb0JBQW9CLENBMENoQztTQTFDWSxvQkFBb0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuLyoqXG4gKiBAZG9jc1ByaXZhdGVcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBDb21wb25lbnRlIHJlc3BvbnPDoXZlbCBwb3IgZXhpYmlyIHVtIMOtY29uZSBuYSB0YWJlbGEuXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BvLXRhYmxlLWljb24nLFxuICB0ZW1wbGF0ZVVybDogJy4vcG8tdGFibGUtaWNvbi5jb21wb25lbnQuaHRtbCcsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuXG5leHBvcnQgY2xhc3MgUG9UYWJsZUljb25Db21wb25lbnQge1xuXG4gIHRvb2x0aXA6IHN0cmluZztcblxuICAvKiogRGVmaW5lIHNlIG8gw61jb25lIMOpIGNsaWPDoXZlbC4gKi9cbiAgQElucHV0KCdwLWNsaWNrYWJsZScpIGNsaWNrYWJsZTogYm9vbGVhbjtcblxuICAvKiogQ29yIGRvIMOtY29uZS4gKi9cbiAgQElucHV0KCdwLWNvbG9yJykgY29sb3I6IHN0cmluZztcblxuICAvKiogRGVzYWJpbGl0YWRvLiAqL1xuICBASW5wdXQoJ3AtZGlzYWJsZWQnKSBkaXNhYmxlZDogYm9vbGVhbjtcblxuICAvKiogQ2xhc3NlIGNzcyBkbyDDrWNvbmUuICovXG4gIEBJbnB1dCgncC1pY29uJykgaWNvbjogc3RyaW5nO1xuXG4gIC8qKiBUZXh0byBkbyB0b29sdGlwLiAqL1xuICBASW5wdXQoJ3AtaWNvbi10b29sdGlwJykgaWNvblRvb2x0aXA6IHN0cmluZztcblxuICAvKiogT3V0cHV0IGNsaWNrLiAqL1xuICBAT3V0cHV0KCdwLWNsaWNrJykgY2xpY2s6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIHByaXZhdGUgZ2V0IGFsbG93VG9vbHRpcCgpIHtcbiAgICByZXR1cm4gIXRoaXMuZGlzYWJsZWQgJiYgdGhpcy5pY29uVG9vbHRpcDtcbiAgfVxuXG4gIG9uQ2xpY2soKSB7XG4gICAgaWYgKHRoaXMuY2xpY2thYmxlKSB7XG4gICAgICB0aGlzLmNsaWNrLmVtaXQoKTtcbiAgICB9XG4gIH1cblxuICB0b29sdGlwTW91c2VFbnRlcigpIHtcbiAgICBpZiAodGhpcy5hbGxvd1Rvb2x0aXApIHtcbiAgICAgIHRoaXMudG9vbHRpcCA9IHRoaXMuaWNvblRvb2x0aXA7XG4gICAgfVxuICB9XG5cbiAgdG9vbHRpcE1vdXNlTGVhdmUoKSB7XG4gICAgdGhpcy50b29sdGlwID0gdW5kZWZpbmVkO1xuICB9XG5cbn1cbiJdfQ==