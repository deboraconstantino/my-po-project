import * as tslib_1 from "tslib";
import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { PoColorPaletteService } from './../../../services/po-color-palette/po-color-palette.service';
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente para a criação da representação da legenda, em formato de círculo.
 */
let PoTableSubtitleCircleComponent = class PoTableSubtitleCircleComponent {
    constructor(poColorPaletteService) {
        this.poColorPaletteService = poColorPaletteService;
        /** Esconde a tooltip. */
        this.hideTitle = false;
    }
    /** Objeto com os dados da legenda. */
    set subtitle(subtitle) {
        if (subtitle) {
            subtitle.color = this.poColorPaletteService.getColor(subtitle);
        }
        this._subtitle = subtitle;
    }
    get subtitle() {
        return this._subtitle;
    }
};
PoTableSubtitleCircleComponent.ctorParameters = () => [
    { type: PoColorPaletteService }
];
tslib_1.__decorate([
    Input('p-subtitle'),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], PoTableSubtitleCircleComponent.prototype, "subtitle", null);
tslib_1.__decorate([
    Input('p-hide-title'),
    tslib_1.__metadata("design:type", Boolean)
], PoTableSubtitleCircleComponent.prototype, "hideTitle", void 0);
PoTableSubtitleCircleComponent = tslib_1.__decorate([
    Component({
        selector: 'po-table-subtitle-circle',
        template: "<span\n  [title]=\"hideTitle ? '' : subtitle?.label\"\n  class=\"po-table-subtitle-circle po-{{ subtitle?.color }}\">\n  {{ subtitle?.content }}\n</span>\n",
        changeDetection: ChangeDetectionStrategy.OnPush
    }),
    tslib_1.__metadata("design:paramtypes", [PoColorPaletteService])
], PoTableSubtitleCircleComponent);
export { PoTableSubtitleCircleComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdGFibGUtc3VidGl0bGUtY2lyY2xlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwb3J0aW5hcmkvcG9ydGluYXJpLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tdGFibGUvcG8tdGFibGUtc3VidGl0bGUtY2lyY2xlL3BvLXRhYmxlLXN1YnRpdGxlLWNpcmNsZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTFFLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLCtEQUErRCxDQUFDO0FBR3RHOzs7Ozs7R0FNRztBQU1ILElBQWEsOEJBQThCLEdBQTNDLE1BQWEsOEJBQThCO0lBbUJ6QyxZQUFvQixxQkFBNEM7UUFBNUMsMEJBQXFCLEdBQXJCLHFCQUFxQixDQUF1QjtRQUpoRSx5QkFBeUI7UUFFekIsY0FBUyxHQUFZLEtBQUssQ0FBQztJQUV5QyxDQUFDO0lBZnJFLHNDQUFzQztJQUNqQixJQUFJLFFBQVEsQ0FBQyxRQUErQjtRQUMvRCxJQUFJLFFBQVEsRUFBRTtZQUNaLFFBQVEsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLHFCQUFxQixDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQztTQUNoRTtRQUNELElBQUksQ0FBQyxTQUFTLEdBQUcsUUFBUSxDQUFDO0lBQzVCLENBQUM7SUFDRCxJQUFJLFFBQVE7UUFDVixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7SUFDeEIsQ0FBQztDQVFGLENBQUE7O1lBRjRDLHFCQUFxQjs7QUFkM0M7SUFBcEIsS0FBSyxDQUFDLFlBQVksQ0FBQzs7OzhEQUtuQjtBQU9EO0lBREMsS0FBSyxDQUFDLGNBQWMsQ0FBQzs7aUVBQ0s7QUFqQmhCLDhCQUE4QjtJQUwxQyxTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsMEJBQTBCO1FBQ3BDLHVLQUF3RDtRQUN4RCxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtLQUNoRCxDQUFDOzZDQW9CMkMscUJBQXFCO0dBbkJyRCw4QkFBOEIsQ0FxQjFDO1NBckJZLDhCQUE4QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFBvQ29sb3JQYWxldHRlU2VydmljZSB9IGZyb20gJy4vLi4vLi4vLi4vc2VydmljZXMvcG8tY29sb3ItcGFsZXR0ZS9wby1jb2xvci1wYWxldHRlLnNlcnZpY2UnO1xuaW1wb3J0IHsgUG9UYWJsZVN1YnRpdGxlQ29sdW1uIH0gZnJvbSAnLi8uLi9wby10YWJsZS1zdWJ0aXRsZS1mb290ZXIvcG8tdGFibGUtc3VidGl0bGUtY29sdW1uLmludGVyZmFjZSc7XG5cbi8qKlxuICogQGRvY3NQcml2YXRlXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogQ29tcG9uZW50ZSBwYXJhIGEgY3JpYcOnw6NvIGRhIHJlcHJlc2VudGHDp8OjbyBkYSBsZWdlbmRhLCBlbSBmb3JtYXRvIGRlIGPDrXJjdWxvLlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwby10YWJsZS1zdWJ0aXRsZS1jaXJjbGUnLFxuICB0ZW1wbGF0ZVVybDogJy4vcG8tdGFibGUtc3VidGl0bGUtY2lyY2xlLmNvbXBvbmVudC5odG1sJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcbn0pXG5leHBvcnQgY2xhc3MgUG9UYWJsZVN1YnRpdGxlQ2lyY2xlQ29tcG9uZW50IHtcblxuICBwcml2YXRlIF9zdWJ0aXRsZTogUG9UYWJsZVN1YnRpdGxlQ29sdW1uO1xuXG4gIC8qKiBPYmpldG8gY29tIG9zIGRhZG9zIGRhIGxlZ2VuZGEuICovXG4gIEBJbnB1dCgncC1zdWJ0aXRsZScpIHNldCBzdWJ0aXRsZShzdWJ0aXRsZTogUG9UYWJsZVN1YnRpdGxlQ29sdW1uKSB7XG4gICAgaWYgKHN1YnRpdGxlKSB7XG4gICAgICBzdWJ0aXRsZS5jb2xvciA9IHRoaXMucG9Db2xvclBhbGV0dGVTZXJ2aWNlLmdldENvbG9yKHN1YnRpdGxlKTtcbiAgICB9XG4gICAgdGhpcy5fc3VidGl0bGUgPSBzdWJ0aXRsZTtcbiAgfVxuICBnZXQgc3VidGl0bGUoKTogUG9UYWJsZVN1YnRpdGxlQ29sdW1uIHtcbiAgICByZXR1cm4gdGhpcy5fc3VidGl0bGU7XG4gIH1cblxuICAvKiogRXNjb25kZSBhIHRvb2x0aXAuICovXG4gIEBJbnB1dCgncC1oaWRlLXRpdGxlJylcbiAgaGlkZVRpdGxlOiBib29sZWFuID0gZmFsc2U7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBwb0NvbG9yUGFsZXR0ZVNlcnZpY2U6IFBvQ29sb3JQYWxldHRlU2VydmljZSkgeyB9XG5cbn1cbiJdfQ==