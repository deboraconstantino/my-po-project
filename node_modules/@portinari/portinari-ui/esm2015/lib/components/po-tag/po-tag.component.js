import * as tslib_1 from "tslib";
import { ChangeDetectionStrategy, Component } from '@angular/core';
import { PoKeyCodeEnum } from '../../enums/po-key-code.enum';
import { PoTagBaseComponent } from './po-tag-base.component';
import { PoTagIcon } from './enums/po-tag-icon.enum';
import { PoTagType } from './enums/po-tag-type.enum';
const poTagTypeDefault = 'po-tag-' + PoTagType.Info;
/**
 * @docsExtends PoTagBaseComponent
 *
 * @example
 *
 * <example name="po-tag-basic" title="Portinari Tag Basic">
 *  <file name="sample-po-tag-basic/sample-po-tag-basic.component.html"> </file>
 *  <file name="sample-po-tag-basic/sample-po-tag-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-tag-labs" title="Portinari Tag Labs">
 *  <file name="sample-po-tag-labs/sample-po-tag-labs.component.html"> </file>
 *  <file name="sample-po-tag-labs/sample-po-tag-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-tag-bank-account" title="Portinari Tag - Bank Account">
 *  <file name="sample-po-tag-bank-account/sample-po-tag-bank-account.component.html"> </file>
 *  <file name="sample-po-tag-bank-account/sample-po-tag-bank-account.component.ts"> </file>
 * </example>
 */
let PoTagComponent = class PoTagComponent extends PoTagBaseComponent {
    ngOnInit() {
        this.isClickable = this.click.observers.length > 0;
    }
    get iconFromType() {
        switch (this.type) {
            case PoTagType.Danger: return PoTagIcon.Danger;
            case PoTagType.Info: return PoTagIcon.Info;
            case PoTagType.Success: return PoTagIcon.Success;
            case PoTagType.Warning: return PoTagIcon.Warning;
        }
    }
    get iconTypeString() {
        return typeof this.icon === 'string';
    }
    get tagColor() {
        if (this.type) {
            return this.inverse ? `po-tag-${this.type}-inverse` : `po-tag-${this.type}`;
        }
        if (this.color && !this.type) {
            return this.inverse ? `po-text-${this.color}` : `po-${this.color}`;
        }
        if (!this.type && !this.color) {
            return this.inverse ? `${poTagTypeDefault}-inverse` : poTagTypeDefault;
        }
    }
    get tagOrientation() {
        return this.orientation === this.poTagOrientation.Horizontal;
    }
    onClick() {
        const submittedTagItem = { value: this.value, type: this.type };
        this.click.emit(submittedTagItem);
    }
    onKeyPressed(event, keyCode) {
        const isValidKey = event.keyCode === PoKeyCodeEnum[keyCode];
        if (isValidKey) {
            event.preventDefault();
            event.stopPropagation();
            this.onClick();
        }
    }
};
PoTagComponent = tslib_1.__decorate([
    Component({
        selector: 'po-tag',
        template: "<div class=\"po-tag-container\" [class.po-tag-container-horizontal]=\"tagOrientation\">\n  <div *ngIf=\"label\" class=\"po-tag-title po-text-nowrap\">\n    <span class=\"po-tag-label\">{{ tagOrientation ? label + ':' : label }}</span>\n  </div>\n\n  <div class=\"po-tag-sub-container\">\n    <div class=\"po-tag\"\n      [class.po-clickable]=\"isClickable\"\n      [class.po-tag-inverse]=\"inverse\"\n      [ngClass]=\"tagColor\"\n      tabindex=\"0\"\n      (click)=\"onClick()\"\n      (keydown)=\"onKeyPressed($event, 'enter')\"\n      (keyup)=\"onKeyPressed($event, 'space')\">\n\n      <span *ngIf=\"icon\" class=\"po-icon\" [ngClass]=\"!type && iconTypeString ? icon : iconFromType\"></span>\n      <span class=\"po-tag-value\">{{value}}</span>\n    </div>\n  </div>\n</div>\n",
        changeDetection: ChangeDetectionStrategy.OnPush
    })
], PoTagComponent);
export { PoTagComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdGFnLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwb3J0aW5hcmkvcG9ydGluYXJpLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tdGFnL3BvLXRhZy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFFM0UsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBRTdELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQzdELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUVyRCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFFckQsTUFBTSxnQkFBZ0IsR0FBRyxTQUFTLEdBQUcsU0FBUyxDQUFDLElBQUksQ0FBQztBQUVwRDs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQW1CRztBQU1ILElBQWEsY0FBYyxHQUEzQixNQUFhLGNBQWUsU0FBUSxrQkFBa0I7SUFJcEQsUUFBUTtRQUNOLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztJQUNyRCxDQUFDO0lBRUQsSUFBSSxZQUFZO1FBQ2QsUUFBUSxJQUFJLENBQUMsSUFBSSxFQUFFO1lBQ2pCLEtBQUssU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDLE9BQU8sU0FBUyxDQUFDLE1BQU0sQ0FBQztZQUUvQyxLQUFLLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxPQUFPLFNBQVMsQ0FBQyxJQUFJLENBQUM7WUFFM0MsS0FBSyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUMsT0FBTyxTQUFTLENBQUMsT0FBTyxDQUFDO1lBRWpELEtBQUssU0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUFDLE9BQU8sU0FBUyxDQUFDLE9BQU8sQ0FBQztTQUNsRDtJQUNILENBQUM7SUFFRCxJQUFJLGNBQWM7UUFDaEIsT0FBTyxPQUFPLElBQUksQ0FBQyxJQUFJLEtBQUssUUFBUSxDQUFDO0lBQ3ZDLENBQUM7SUFFRCxJQUFJLFFBQVE7UUFDVixJQUFJLElBQUksQ0FBQyxJQUFJLEVBQUU7WUFDYixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLFVBQVUsSUFBSSxDQUFDLElBQUksVUFBVSxDQUFDLENBQUMsQ0FBQyxVQUFVLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztTQUM3RTtRQUVELElBQUksSUFBSSxDQUFDLEtBQUssSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUU7WUFDNUIsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxXQUFXLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUMsTUFBTSxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7U0FDcEU7UUFFRCxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDN0IsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxHQUFHLGdCQUFnQixVQUFVLENBQUMsQ0FBQyxDQUFDLGdCQUFnQixDQUFDO1NBQ3hFO0lBQ0gsQ0FBQztJQUVELElBQUksY0FBYztRQUNoQixPQUFPLElBQUksQ0FBQyxXQUFXLEtBQUssSUFBSSxDQUFDLGdCQUFnQixDQUFDLFVBQVUsQ0FBQztJQUMvRCxDQUFDO0lBRUQsT0FBTztRQUNMLE1BQU0sZ0JBQWdCLEdBQWMsRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUssRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQzNFLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUM7SUFDcEMsQ0FBQztJQUVELFlBQVksQ0FBQyxLQUFVLEVBQUUsT0FBZTtRQUN0QyxNQUFNLFVBQVUsR0FBRyxLQUFLLENBQUMsT0FBTyxLQUFLLGFBQWEsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUU1RCxJQUFJLFVBQVUsRUFBRTtZQUNkLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztZQUN2QixLQUFLLENBQUMsZUFBZSxFQUFFLENBQUM7WUFDeEIsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1NBQ2hCO0lBQ0gsQ0FBQztDQUVGLENBQUE7QUF6RFksY0FBYztJQUwxQixTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsUUFBUTtRQUNsQiwweEJBQXNDO1FBQ3RDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO0tBQ2hELENBQUM7R0FDVyxjQUFjLENBeUQxQjtTQXpEWSxjQUFjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFBvS2V5Q29kZUVudW0gfSBmcm9tICcuLi8uLi9lbnVtcy9wby1rZXktY29kZS5lbnVtJztcblxuaW1wb3J0IHsgUG9UYWdCYXNlQ29tcG9uZW50IH0gZnJvbSAnLi9wby10YWctYmFzZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgUG9UYWdJY29uIH0gZnJvbSAnLi9lbnVtcy9wby10YWctaWNvbi5lbnVtJztcbmltcG9ydCB7IFBvVGFnSXRlbSB9IGZyb20gJy4vaW50ZXJmYWNlcy9wby10YWctaXRlbS5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgUG9UYWdUeXBlIH0gZnJvbSAnLi9lbnVtcy9wby10YWctdHlwZS5lbnVtJztcblxuY29uc3QgcG9UYWdUeXBlRGVmYXVsdCA9ICdwby10YWctJyArIFBvVGFnVHlwZS5JbmZvO1xuXG4vKipcbiAqIEBkb2NzRXh0ZW5kcyBQb1RhZ0Jhc2VDb21wb25lbnRcbiAqXG4gKiBAZXhhbXBsZVxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJwby10YWctYmFzaWNcIiB0aXRsZT1cIlBvcnRpbmFyaSBUYWcgQmFzaWNcIj5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXRhZy1iYXNpYy9zYW1wbGUtcG8tdGFnLWJhc2ljLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXRhZy1iYXNpYy9zYW1wbGUtcG8tdGFnLWJhc2ljLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInBvLXRhZy1sYWJzXCIgdGl0bGU9XCJQb3J0aW5hcmkgVGFnIExhYnNcIj5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXRhZy1sYWJzL3NhbXBsZS1wby10YWctbGFicy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby10YWctbGFicy9zYW1wbGUtcG8tdGFnLWxhYnMuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tdGFnLWJhbmstYWNjb3VudFwiIHRpdGxlPVwiUG9ydGluYXJpIFRhZyAtIEJhbmsgQWNjb3VudFwiPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tdGFnLWJhbmstYWNjb3VudC9zYW1wbGUtcG8tdGFnLWJhbmstYWNjb3VudC5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby10YWctYmFuay1hY2NvdW50L3NhbXBsZS1wby10YWctYmFuay1hY2NvdW50LmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BvLXRhZycsXG4gIHRlbXBsYXRlVXJsOiAnLi9wby10YWcuY29tcG9uZW50Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxufSlcbmV4cG9ydCBjbGFzcyBQb1RhZ0NvbXBvbmVudCBleHRlbmRzIFBvVGFnQmFzZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgaXNDbGlja2FibGU6IGJvb2xlYW47XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5pc0NsaWNrYWJsZSA9IHRoaXMuY2xpY2sub2JzZXJ2ZXJzLmxlbmd0aCA+IDA7XG4gIH1cblxuICBnZXQgaWNvbkZyb21UeXBlKCkge1xuICAgIHN3aXRjaCAodGhpcy50eXBlKSB7XG4gICAgICBjYXNlIFBvVGFnVHlwZS5EYW5nZXI6IHJldHVybiBQb1RhZ0ljb24uRGFuZ2VyO1xuXG4gICAgICBjYXNlIFBvVGFnVHlwZS5JbmZvOiByZXR1cm4gUG9UYWdJY29uLkluZm87XG5cbiAgICAgIGNhc2UgUG9UYWdUeXBlLlN1Y2Nlc3M6IHJldHVybiBQb1RhZ0ljb24uU3VjY2VzcztcblxuICAgICAgY2FzZSBQb1RhZ1R5cGUuV2FybmluZzogcmV0dXJuIFBvVGFnSWNvbi5XYXJuaW5nO1xuICAgIH1cbiAgfVxuXG4gIGdldCBpY29uVHlwZVN0cmluZygpIHtcbiAgICByZXR1cm4gdHlwZW9mIHRoaXMuaWNvbiA9PT0gJ3N0cmluZyc7XG4gIH1cblxuICBnZXQgdGFnQ29sb3IoKSB7XG4gICAgaWYgKHRoaXMudHlwZSkge1xuICAgICAgcmV0dXJuIHRoaXMuaW52ZXJzZSA/IGBwby10YWctJHt0aGlzLnR5cGV9LWludmVyc2VgIDogYHBvLXRhZy0ke3RoaXMudHlwZX1gO1xuICAgIH1cblxuICAgIGlmICh0aGlzLmNvbG9yICYmICF0aGlzLnR5cGUpIHtcbiAgICAgIHJldHVybiB0aGlzLmludmVyc2UgPyBgcG8tdGV4dC0ke3RoaXMuY29sb3J9YCA6IGBwby0ke3RoaXMuY29sb3J9YDtcbiAgICB9XG5cbiAgICBpZiAoIXRoaXMudHlwZSAmJiAhdGhpcy5jb2xvcikge1xuICAgICAgcmV0dXJuIHRoaXMuaW52ZXJzZSA/IGAke3BvVGFnVHlwZURlZmF1bHR9LWludmVyc2VgIDogcG9UYWdUeXBlRGVmYXVsdDtcbiAgICB9XG4gIH1cblxuICBnZXQgdGFnT3JpZW50YXRpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMub3JpZW50YXRpb24gPT09IHRoaXMucG9UYWdPcmllbnRhdGlvbi5Ib3Jpem9udGFsO1xuICB9XG5cbiAgb25DbGljaygpIHtcbiAgICBjb25zdCBzdWJtaXR0ZWRUYWdJdGVtOiBQb1RhZ0l0ZW0gPSB7IHZhbHVlOiB0aGlzLnZhbHVlLCB0eXBlOiB0aGlzLnR5cGUgfTtcbiAgICB0aGlzLmNsaWNrLmVtaXQoc3VibWl0dGVkVGFnSXRlbSk7XG4gIH1cblxuICBvbktleVByZXNzZWQoZXZlbnQ6IGFueSwga2V5Q29kZTogc3RyaW5nKSB7XG4gICAgY29uc3QgaXNWYWxpZEtleSA9IGV2ZW50LmtleUNvZGUgPT09IFBvS2V5Q29kZUVudW1ba2V5Q29kZV07XG5cbiAgICBpZiAoaXNWYWxpZEtleSkge1xuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgdGhpcy5vbkNsaWNrKCk7XG4gICAgfVxuICB9XG5cbn1cbiJdfQ==