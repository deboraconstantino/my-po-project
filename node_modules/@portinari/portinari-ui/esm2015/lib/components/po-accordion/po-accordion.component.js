import * as tslib_1 from "tslib";
import { Component, ContentChildren, QueryList } from '@angular/core';
import { PoAccordionBaseComponent } from './po-accordion-base.component';
import { PoAccordionItemComponent } from './po-accordion-item/po-accordion-item.component';
import { PoAccordionService } from './services/po-accordion.service';
/**
 * @docsExtends PoAccordionBaseComponent
 *
 * @example
 *
 * <example name="po-accordion-basic" title="Portinari Accordion Basic" >
 *  <file name="sample-po-accordion-basic/sample-po-accordion-basic.component.html"> </file>
 *  <file name="sample-po-accordion-basic/sample-po-accordion-basic.component.ts"> </file>
 *  <file name="sample-po-accordion-basic/sample-po-accordion-basic.component.e2e-spec.ts"> </file>
 *  <file name="sample-po-accordion-basic/sample-po-accordion-basic.component.po.ts"> </file>
 * </example>
 *
 * <example name="po-accordion-labs" title="Portinari Accordion Labs" >
 *  <file name="sample-po-accordion-labs/sample-po-accordion-labs.component.html"> </file>
 *  <file name="sample-po-accordion-labs/sample-po-accordion-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-accordion-faq" title="Portinari Accordion - FAQs" >
 *  <file name="sample-po-accordion-faq/sample-po-accordion-faq.component.html"> </file>
 *  <file name="sample-po-accordion-faq/sample-po-accordion-faq.component.ts"> </file>
 * </example>
 */
let PoAccordionComponent = class PoAccordionComponent extends PoAccordionBaseComponent {
    constructor(accordionService) {
        super();
        this.accordionService = accordionService;
        this.receiveFromChildAccordionSubscription();
    }
    ngOnDestroy() {
        this.accordionServiceSubscription.unsubscribe();
    }
    headerToggle(event, poAccordionItem) {
        poAccordionItem.expanded = event;
        this.toggle(poAccordionItem);
    }
    receiveFromChildAccordionSubscription() {
        this.accordionServiceSubscription = this.accordionService.receiveFromChildAccordionClicked()
            .subscribe(poAccordionItem => this.toggle(poAccordionItem));
    }
    toggle(poAccordionItem) {
        const isCurrentAccordionCollapsed = !poAccordionItem.expanded;
        if (isCurrentAccordionCollapsed) {
            this.expandedActiveAccordionItem = null;
            return;
        }
        if (this.expandedActiveAccordionItem) {
            this.expandedActiveAccordionItem.collapse();
        }
        this.expandedActiveAccordionItem = poAccordionItem;
    }
};
PoAccordionComponent.ctorParameters = () => [
    { type: PoAccordionService }
];
tslib_1.__decorate([
    ContentChildren(PoAccordionItemComponent),
    tslib_1.__metadata("design:type", QueryList)
], PoAccordionComponent.prototype, "poAccordionItems", void 0);
PoAccordionComponent = tslib_1.__decorate([
    Component({
        selector: 'po-accordion',
        template: "<div class=\"po-accordion po-container po-container-no-padding\">\n\n  <section *ngFor=\"let poAccordionItem of poAccordionItems\"\n    class=\"po-accordion-item\"\n    [class.po-accordion-item-active]=\"poAccordionItem.expanded\">\n\n    <po-accordion-item-header\n      [p-expanded]=\"poAccordionItem.expanded\"\n      [p-label]=\"poAccordionItem.label\"\n      (p-toggle)=\"headerToggle($event, poAccordionItem)\">\n    </po-accordion-item-header>\n\n    <po-accordion-item-body [p-expanded]=\"poAccordionItem.expanded\">\n      <ng-container *ngTemplateOutlet=\"poAccordionItem.templateRef\"></ng-container>\n    </po-accordion-item-body>\n  </section>\n\n</div>\n",
        providers: [PoAccordionService]
    }),
    tslib_1.__metadata("design:paramtypes", [PoAccordionService])
], PoAccordionComponent);
export { PoAccordionComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tYWNjb3JkaW9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwb3J0aW5hcmkvcG9ydGluYXJpLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tYWNjb3JkaW9uL3BvLWFjY29yZGlvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsZUFBZSxFQUFFLFNBQVMsRUFBYSxNQUFNLGVBQWUsQ0FBQztBQUlqRixPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUN6RSxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxpREFBaUQsQ0FBQztBQUMzRixPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUVyRTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBcUJHO0FBTUgsSUFBYSxvQkFBb0IsR0FBakMsTUFBYSxvQkFBcUIsU0FBUSx3QkFBd0I7SUFPaEUsWUFBb0IsZ0JBQW9DO1FBQ3RELEtBQUssRUFBRSxDQUFDO1FBRFUscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFvQjtRQUV0RCxJQUFJLENBQUMscUNBQXFDLEVBQUUsQ0FBQztJQUMvQyxDQUFDO0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyw0QkFBNEIsQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUNsRCxDQUFDO0lBRUQsWUFBWSxDQUFDLEtBQWMsRUFBRSxlQUF5QztRQUNwRSxlQUFlLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztRQUVqQyxJQUFJLENBQUMsTUFBTSxDQUFDLGVBQWUsQ0FBQyxDQUFDO0lBQy9CLENBQUM7SUFFTyxxQ0FBcUM7UUFDM0MsSUFBSSxDQUFDLDRCQUE0QixHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxnQ0FBZ0MsRUFBRTthQUN6RixTQUFTLENBQUMsZUFBZSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUM7SUFDaEUsQ0FBQztJQUVPLE1BQU0sQ0FBQyxlQUF5QztRQUN0RCxNQUFNLDJCQUEyQixHQUFHLENBQUMsZUFBZSxDQUFDLFFBQVEsQ0FBQztRQUU5RCxJQUFJLDJCQUEyQixFQUFFO1lBQy9CLElBQUksQ0FBQywyQkFBMkIsR0FBRyxJQUFJLENBQUM7WUFDeEMsT0FBTztTQUNSO1FBRUQsSUFBSSxJQUFJLENBQUMsMkJBQTJCLEVBQUU7WUFDcEMsSUFBSSxDQUFDLDJCQUEyQixDQUFDLFFBQVEsRUFBRSxDQUFDO1NBQzdDO1FBRUQsSUFBSSxDQUFDLDJCQUEyQixHQUFHLGVBQWUsQ0FBQztJQUNyRCxDQUFDO0NBRUYsQ0FBQTs7WUFuQ3VDLGtCQUFrQjs7QUFGYjtJQUExQyxlQUFlLENBQUMsd0JBQXdCLENBQUM7c0NBQW1CLFNBQVM7OERBQTJCO0FBTHRGLG9CQUFvQjtJQUxoQyxTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsY0FBYztRQUN4Qix3cUJBQTBDO1FBQzFDLFNBQVMsRUFBRSxDQUFFLGtCQUFrQixDQUFFO0tBQ2xDLENBQUM7NkNBUXNDLGtCQUFrQjtHQVA3QyxvQkFBb0IsQ0EwQ2hDO1NBMUNZLG9CQUFvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgQ29udGVudENoaWxkcmVuLCBRdWVyeUxpc3QsIE9uRGVzdHJveSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcblxuaW1wb3J0IHsgUG9BY2NvcmRpb25CYXNlQ29tcG9uZW50IH0gZnJvbSAnLi9wby1hY2NvcmRpb24tYmFzZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgUG9BY2NvcmRpb25JdGVtQ29tcG9uZW50IH0gZnJvbSAnLi9wby1hY2NvcmRpb24taXRlbS9wby1hY2NvcmRpb24taXRlbS5jb21wb25lbnQnO1xuaW1wb3J0IHsgUG9BY2NvcmRpb25TZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlcy9wby1hY2NvcmRpb24uc2VydmljZSc7XG5cbi8qKlxuICogQGRvY3NFeHRlbmRzIFBvQWNjb3JkaW9uQmFzZUNvbXBvbmVudFxuICpcbiAqIEBleGFtcGxlXG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInBvLWFjY29yZGlvbi1iYXNpY1wiIHRpdGxlPVwiUG9ydGluYXJpIEFjY29yZGlvbiBCYXNpY1wiID5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWFjY29yZGlvbi1iYXNpYy9zYW1wbGUtcG8tYWNjb3JkaW9uLWJhc2ljLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWFjY29yZGlvbi1iYXNpYy9zYW1wbGUtcG8tYWNjb3JkaW9uLWJhc2ljLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1hY2NvcmRpb24tYmFzaWMvc2FtcGxlLXBvLWFjY29yZGlvbi1iYXNpYy5jb21wb25lbnQuZTJlLXNwZWMudHNcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tYWNjb3JkaW9uLWJhc2ljL3NhbXBsZS1wby1hY2NvcmRpb24tYmFzaWMuY29tcG9uZW50LnBvLnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tYWNjb3JkaW9uLWxhYnNcIiB0aXRsZT1cIlBvcnRpbmFyaSBBY2NvcmRpb24gTGFic1wiID5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWFjY29yZGlvbi1sYWJzL3NhbXBsZS1wby1hY2NvcmRpb24tbGFicy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1hY2NvcmRpb24tbGFicy9zYW1wbGUtcG8tYWNjb3JkaW9uLWxhYnMuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tYWNjb3JkaW9uLWZhcVwiIHRpdGxlPVwiUG9ydGluYXJpIEFjY29yZGlvbiAtIEZBUXNcIiA+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1hY2NvcmRpb24tZmFxL3NhbXBsZS1wby1hY2NvcmRpb24tZmFxLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWFjY29yZGlvbi1mYXEvc2FtcGxlLXBvLWFjY29yZGlvbi1mYXEuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG8tYWNjb3JkaW9uJyxcbiAgdGVtcGxhdGVVcmw6ICdwby1hY2NvcmRpb24uY29tcG9uZW50Lmh0bWwnLFxuICBwcm92aWRlcnM6IFsgUG9BY2NvcmRpb25TZXJ2aWNlIF1cbn0pXG5leHBvcnQgY2xhc3MgUG9BY2NvcmRpb25Db21wb25lbnQgZXh0ZW5kcyBQb0FjY29yZGlvbkJhc2VDb21wb25lbnQgaW1wbGVtZW50cyBPbkRlc3Ryb3kge1xuXG4gIHByaXZhdGUgYWNjb3JkaW9uU2VydmljZVN1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uO1xuICBwcml2YXRlIGV4cGFuZGVkQWN0aXZlQWNjb3JkaW9uSXRlbTogUG9BY2NvcmRpb25JdGVtQ29tcG9uZW50O1xuXG4gIEBDb250ZW50Q2hpbGRyZW4oUG9BY2NvcmRpb25JdGVtQ29tcG9uZW50KSBwb0FjY29yZGlvbkl0ZW1zOiBRdWVyeUxpc3Q8UG9BY2NvcmRpb25JdGVtQ29tcG9uZW50PjtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGFjY29yZGlvblNlcnZpY2U6IFBvQWNjb3JkaW9uU2VydmljZSkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5yZWNlaXZlRnJvbUNoaWxkQWNjb3JkaW9uU3Vic2NyaXB0aW9uKCk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLmFjY29yZGlvblNlcnZpY2VTdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgfVxuXG4gIGhlYWRlclRvZ2dsZShldmVudDogYm9vbGVhbiwgcG9BY2NvcmRpb25JdGVtOiBQb0FjY29yZGlvbkl0ZW1Db21wb25lbnQpIHtcbiAgICBwb0FjY29yZGlvbkl0ZW0uZXhwYW5kZWQgPSBldmVudDtcblxuICAgIHRoaXMudG9nZ2xlKHBvQWNjb3JkaW9uSXRlbSk7XG4gIH1cblxuICBwcml2YXRlIHJlY2VpdmVGcm9tQ2hpbGRBY2NvcmRpb25TdWJzY3JpcHRpb24oKSB7XG4gICAgdGhpcy5hY2NvcmRpb25TZXJ2aWNlU3Vic2NyaXB0aW9uID0gdGhpcy5hY2NvcmRpb25TZXJ2aWNlLnJlY2VpdmVGcm9tQ2hpbGRBY2NvcmRpb25DbGlja2VkKClcbiAgICAgIC5zdWJzY3JpYmUocG9BY2NvcmRpb25JdGVtID0+IHRoaXMudG9nZ2xlKHBvQWNjb3JkaW9uSXRlbSkpO1xuICB9XG5cbiAgcHJpdmF0ZSB0b2dnbGUocG9BY2NvcmRpb25JdGVtOiBQb0FjY29yZGlvbkl0ZW1Db21wb25lbnQpIHtcbiAgICBjb25zdCBpc0N1cnJlbnRBY2NvcmRpb25Db2xsYXBzZWQgPSAhcG9BY2NvcmRpb25JdGVtLmV4cGFuZGVkO1xuXG4gICAgaWYgKGlzQ3VycmVudEFjY29yZGlvbkNvbGxhcHNlZCkge1xuICAgICAgdGhpcy5leHBhbmRlZEFjdGl2ZUFjY29yZGlvbkl0ZW0gPSBudWxsO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmICh0aGlzLmV4cGFuZGVkQWN0aXZlQWNjb3JkaW9uSXRlbSkge1xuICAgICAgdGhpcy5leHBhbmRlZEFjdGl2ZUFjY29yZGlvbkl0ZW0uY29sbGFwc2UoKTtcbiAgICB9XG5cbiAgICB0aGlzLmV4cGFuZGVkQWN0aXZlQWNjb3JkaW9uSXRlbSA9IHBvQWNjb3JkaW9uSXRlbTtcbiAgfVxuXG59XG4iXX0=