import * as tslib_1 from "tslib";
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { convertToInt } from '../../../../utils/util';
import { PoUploadDragDropAreaComponent } from './po-upload-drag-drop-area/po-upload-drag-drop-area.component';
const PoUploadDragDropHeightDefault = 320;
const PoUploadDragDropHeightMin = 160;
let PoUploadDragDropComponent = class PoUploadDragDropComponent {
    constructor(changeDetector) {
        this.changeDetector = changeDetector;
        this._dragDropHeight = PoUploadDragDropHeightDefault;
        this.isDragOver = false;
        this.fileChange = new EventEmitter();
        this.selectFiles = new EventEmitter();
    }
    set dragDropHeight(value) {
        const dragDropHeight = convertToInt(value, PoUploadDragDropHeightDefault);
        this._dragDropHeight = (dragDropHeight < PoUploadDragDropHeightMin) ? PoUploadDragDropHeightMin : dragDropHeight;
    }
    get dragDropHeight() {
        return this._dragDropHeight;
    }
    focus() {
        this.dragDropAreaComponent.focus();
    }
    onAreaElement(element) {
        this.areaElement = element;
        // necessário para não ocorrer o erro HasBeenChecked
        this.changeDetector.detectChanges();
    }
    onDragLeave() {
        this.isDragOver = false;
    }
    onDragOver() {
        this.isDragOver = true;
    }
    onFileChange(files) {
        this.isDragOver = false;
        this.fileChange.emit(files);
    }
};
PoUploadDragDropComponent.ctorParameters = () => [
    { type: ChangeDetectorRef }
];
tslib_1.__decorate([
    ViewChild('dragDropOverlay', { read: ElementRef, static: false }),
    tslib_1.__metadata("design:type", ElementRef)
], PoUploadDragDropComponent.prototype, "dragDropOverlayElement", void 0);
tslib_1.__decorate([
    ViewChild(PoUploadDragDropAreaComponent, { static: true }),
    tslib_1.__metadata("design:type", PoUploadDragDropAreaComponent)
], PoUploadDragDropComponent.prototype, "dragDropAreaComponent", void 0);
tslib_1.__decorate([
    Input('p-directory-compatible'),
    tslib_1.__metadata("design:type", Boolean)
], PoUploadDragDropComponent.prototype, "directoryCompatible", void 0);
tslib_1.__decorate([
    Input('p-disabled'),
    tslib_1.__metadata("design:type", Boolean)
], PoUploadDragDropComponent.prototype, "disabled", void 0);
tslib_1.__decorate([
    Input('p-drag-drop-height'),
    tslib_1.__metadata("design:type", Number),
    tslib_1.__metadata("design:paramtypes", [Number])
], PoUploadDragDropComponent.prototype, "dragDropHeight", null);
tslib_1.__decorate([
    Input('p-literals'),
    tslib_1.__metadata("design:type", Object)
], PoUploadDragDropComponent.prototype, "literals", void 0);
tslib_1.__decorate([
    Output('p-file-change'),
    tslib_1.__metadata("design:type", EventEmitter)
], PoUploadDragDropComponent.prototype, "fileChange", void 0);
tslib_1.__decorate([
    Output('p-select-files'),
    tslib_1.__metadata("design:type", EventEmitter)
], PoUploadDragDropComponent.prototype, "selectFiles", void 0);
PoUploadDragDropComponent = tslib_1.__decorate([
    Component({
        selector: 'po-upload-drag-drop',
        template: "<po-upload-drag-drop-area-overlay #dragDropOverlay *ngIf=\"isDragOver\"\r\n  [p-directory-compatible]=\"directoryCompatible\"\r\n  [p-disabled]=\"disabled\"\r\n  [p-literals]=\"literals\"\r\n  [p-target]=\"dragDropAreaComponent.elementRef\"\r\n  (p-area-element)=\"onAreaElement($event)\">\r\n</po-upload-drag-drop-area-overlay>\r\n\r\n<po-upload-drag-drop-area\r\n  p-upload-drag-drop\r\n  [p-area-element]=\"areaElement\"\r\n  [p-directory-compatible]=\"directoryCompatible\"\r\n  [p-disabled]=\"disabled\"\r\n  [p-height]=\"dragDropHeight\"\r\n  [p-literals]=\"literals\"\r\n  [p-overlay]=\"false\"\r\n  (p-drag-leave)=\"onDragLeave()\"\r\n  (p-drag-over)=\"onDragOver()\"\r\n  (p-file-change)=\"onFileChange($event)\"\r\n  (p-select-files)=\"selectFiles.emit()\">\r\n</po-upload-drag-drop-area>\r\n",
        changeDetection: ChangeDetectionStrategy.OnPush
    }),
    tslib_1.__metadata("design:paramtypes", [ChangeDetectorRef])
], PoUploadDragDropComponent);
export { PoUploadDragDropComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdXBsb2FkLWRyYWctZHJvcC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcG9ydGluYXJpL3BvcnRpbmFyaS11aS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3BvLWZpZWxkL3BvLXVwbG9hZC9wby11cGxvYWQtZHJhZy1kcm9wL3BvLXVwbG9hZC1kcmFnLWRyb3AuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsaUJBQWlCLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFMUksT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBRXRELE9BQU8sRUFBRSw2QkFBNkIsRUFBRSxNQUFNLCtEQUErRCxDQUFDO0FBRzlHLE1BQU0sNkJBQTZCLEdBQUcsR0FBRyxDQUFDO0FBQzFDLE1BQU0seUJBQXlCLEdBQUcsR0FBRyxDQUFDO0FBT3RDLElBQWEseUJBQXlCLEdBQXRDLE1BQWEseUJBQXlCO0lBOEJwQyxZQUFvQixjQUFpQztRQUFqQyxtQkFBYyxHQUFkLGNBQWMsQ0FBbUI7UUE1QjdDLG9CQUFlLEdBQVksNkJBQTZCLENBQUM7UUFHakUsZUFBVSxHQUFZLEtBQUssQ0FBQztRQXFCSCxlQUFVLEdBQXNCLElBQUksWUFBWSxFQUFPLENBQUM7UUFFdkQsZ0JBQVcsR0FBc0IsSUFBSSxZQUFZLEVBQU8sQ0FBQztJQUUxQixDQUFDO0lBaEI3QixJQUFJLGNBQWMsQ0FBQyxLQUFhO1FBQzNELE1BQU0sY0FBYyxHQUFHLFlBQVksQ0FBQyxLQUFLLEVBQUUsNkJBQTZCLENBQUMsQ0FBQztRQUUxRSxJQUFJLENBQUMsZUFBZSxHQUFHLENBQUMsY0FBYyxHQUFHLHlCQUF5QixDQUFDLENBQUMsQ0FBQyxDQUFDLHlCQUF5QixDQUFDLENBQUMsQ0FBQyxjQUFjLENBQUM7SUFDbkgsQ0FBQztJQUVELElBQUksY0FBYztRQUNoQixPQUFPLElBQUksQ0FBQyxlQUFlLENBQUM7SUFDOUIsQ0FBQztJQVVELEtBQUs7UUFDSCxJQUFJLENBQUMscUJBQXFCLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDckMsQ0FBQztJQUVELGFBQWEsQ0FBQyxPQUFvQjtRQUNoQyxJQUFJLENBQUMsV0FBVyxHQUFHLE9BQU8sQ0FBQztRQUUzQixvREFBb0Q7UUFDcEQsSUFBSSxDQUFDLGNBQWMsQ0FBQyxhQUFhLEVBQUUsQ0FBQztJQUN0QyxDQUFDO0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDO0lBQzFCLENBQUM7SUFFRCxVQUFVO1FBQ1IsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUM7SUFDekIsQ0FBQztJQUVELFlBQVksQ0FBQyxLQUFLO1FBQ2hCLElBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDO1FBRXhCLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzlCLENBQUM7Q0FFRixDQUFBOztZQTNCcUMsaUJBQWlCOztBQXZCYztJQUFsRSxTQUFTLENBQUMsaUJBQWlCLEVBQUUsRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsQ0FBQztzQ0FBeUIsVUFBVTt5RUFBQztBQUMxQztJQUEzRCxTQUFTLENBQUMsNkJBQTZCLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLENBQUM7c0NBQXdCLDZCQUE2Qjt3RUFBQztBQUVoRjtJQUFoQyxLQUFLLENBQUMsd0JBQXdCLENBQUM7O3NFQUE4QjtBQUV6QztJQUFwQixLQUFLLENBQUMsWUFBWSxDQUFDOzsyREFBbUI7QUFFVjtJQUE1QixLQUFLLENBQUMsb0JBQW9CLENBQUM7OzsrREFJM0I7QUFNb0I7SUFBcEIsS0FBSyxDQUFDLFlBQVksQ0FBQzs7MkRBQTRCO0FBRXZCO0lBQXhCLE1BQU0sQ0FBQyxlQUFlLENBQUM7c0NBQWEsWUFBWTs2REFBZ0M7QUFFdkQ7SUFBekIsTUFBTSxDQUFDLGdCQUFnQixDQUFDO3NDQUFjLFlBQVk7OERBQWdDO0FBNUJ4RSx5QkFBeUI7SUFMckMsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLHFCQUFxQjtRQUMvQiw4eUJBQW1EO1FBQ25ELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO0tBQ2hELENBQUM7NkNBK0JvQyxpQkFBaUI7R0E5QjFDLHlCQUF5QixDQXlEckM7U0F6RFkseUJBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENoYW5nZURldGVjdG9yUmVmLCBDb21wb25lbnQsIEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5pbXBvcnQgeyBjb252ZXJ0VG9JbnQgfSBmcm9tICcuLi8uLi8uLi8uLi91dGlscy91dGlsJztcclxuXHJcbmltcG9ydCB7IFBvVXBsb2FkRHJhZ0Ryb3BBcmVhQ29tcG9uZW50IH0gZnJvbSAnLi9wby11cGxvYWQtZHJhZy1kcm9wLWFyZWEvcG8tdXBsb2FkLWRyYWctZHJvcC1hcmVhLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFBvVXBsb2FkTGl0ZXJhbHMgfSBmcm9tICcuLi9pbnRlcmZhY2VzL3BvLXVwbG9hZC1saXRlcmFscy5pbnRlcmZhY2UnO1xyXG5cclxuY29uc3QgUG9VcGxvYWREcmFnRHJvcEhlaWdodERlZmF1bHQgPSAzMjA7XHJcbmNvbnN0IFBvVXBsb2FkRHJhZ0Ryb3BIZWlnaHRNaW4gPSAxNjA7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ3BvLXVwbG9hZC1kcmFnLWRyb3AnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9wby11cGxvYWQtZHJhZy1kcm9wLmNvbXBvbmVudC5odG1sJyxcclxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxyXG59KVxyXG5leHBvcnQgY2xhc3MgUG9VcGxvYWREcmFnRHJvcENvbXBvbmVudCB7XHJcblxyXG4gIHByaXZhdGUgX2RyYWdEcm9wSGVpZ2h0PzogbnVtYmVyID0gUG9VcGxvYWREcmFnRHJvcEhlaWdodERlZmF1bHQ7XHJcblxyXG4gIGFyZWFFbGVtZW50OiBIVE1MRWxlbWVudDtcclxuICBpc0RyYWdPdmVyOiBib29sZWFuID0gZmFsc2U7XHJcblxyXG4gIEBWaWV3Q2hpbGQoJ2RyYWdEcm9wT3ZlcmxheScsIHsgcmVhZDogRWxlbWVudFJlZiwgc3RhdGljOiBmYWxzZSB9KSBkcmFnRHJvcE92ZXJsYXlFbGVtZW50OiBFbGVtZW50UmVmO1xyXG4gIEBWaWV3Q2hpbGQoUG9VcGxvYWREcmFnRHJvcEFyZWFDb21wb25lbnQsIHsgc3RhdGljOiB0cnVlIH0pIGRyYWdEcm9wQXJlYUNvbXBvbmVudDogUG9VcGxvYWREcmFnRHJvcEFyZWFDb21wb25lbnQ7XHJcblxyXG4gIEBJbnB1dCgncC1kaXJlY3RvcnktY29tcGF0aWJsZScpIGRpcmVjdG9yeUNvbXBhdGlibGU6IGJvb2xlYW47XHJcblxyXG4gIEBJbnB1dCgncC1kaXNhYmxlZCcpIGRpc2FibGVkOiBib29sZWFuO1xyXG5cclxuICBASW5wdXQoJ3AtZHJhZy1kcm9wLWhlaWdodCcpIHNldCBkcmFnRHJvcEhlaWdodCh2YWx1ZTogbnVtYmVyKSB7XHJcbiAgICBjb25zdCBkcmFnRHJvcEhlaWdodCA9IGNvbnZlcnRUb0ludCh2YWx1ZSwgUG9VcGxvYWREcmFnRHJvcEhlaWdodERlZmF1bHQpO1xyXG5cclxuICAgIHRoaXMuX2RyYWdEcm9wSGVpZ2h0ID0gKGRyYWdEcm9wSGVpZ2h0IDwgUG9VcGxvYWREcmFnRHJvcEhlaWdodE1pbikgPyBQb1VwbG9hZERyYWdEcm9wSGVpZ2h0TWluIDogZHJhZ0Ryb3BIZWlnaHQ7XHJcbiAgfVxyXG5cclxuICBnZXQgZHJhZ0Ryb3BIZWlnaHQoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fZHJhZ0Ryb3BIZWlnaHQ7XHJcbiAgfVxyXG5cclxuICBASW5wdXQoJ3AtbGl0ZXJhbHMnKSBsaXRlcmFsczogUG9VcGxvYWRMaXRlcmFscztcclxuXHJcbiAgQE91dHB1dCgncC1maWxlLWNoYW5nZScpIGZpbGVDaGFuZ2U6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XHJcblxyXG4gIEBPdXRwdXQoJ3Atc2VsZWN0LWZpbGVzJykgc2VsZWN0RmlsZXM6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgY2hhbmdlRGV0ZWN0b3I6IENoYW5nZURldGVjdG9yUmVmKSB7IH1cclxuXHJcbiAgZm9jdXMoKSB7XHJcbiAgICB0aGlzLmRyYWdEcm9wQXJlYUNvbXBvbmVudC5mb2N1cygpO1xyXG4gIH1cclxuXHJcbiAgb25BcmVhRWxlbWVudChlbGVtZW50OiBIVE1MRWxlbWVudCkge1xyXG4gICAgdGhpcy5hcmVhRWxlbWVudCA9IGVsZW1lbnQ7XHJcblxyXG4gICAgLy8gbmVjZXNzw6FyaW8gcGFyYSBuw6NvIG9jb3JyZXIgbyBlcnJvIEhhc0JlZW5DaGVja2VkXHJcbiAgICB0aGlzLmNoYW5nZURldGVjdG9yLmRldGVjdENoYW5nZXMoKTtcclxuICB9XHJcblxyXG4gIG9uRHJhZ0xlYXZlKCkge1xyXG4gICAgdGhpcy5pc0RyYWdPdmVyID0gZmFsc2U7XHJcbiAgfVxyXG5cclxuICBvbkRyYWdPdmVyKCkge1xyXG4gICAgdGhpcy5pc0RyYWdPdmVyID0gdHJ1ZTtcclxuICB9XHJcblxyXG4gIG9uRmlsZUNoYW5nZShmaWxlcykge1xyXG4gICAgdGhpcy5pc0RyYWdPdmVyID0gZmFsc2U7XHJcblxyXG4gICAgdGhpcy5maWxlQ2hhbmdlLmVtaXQoZmlsZXMpO1xyXG4gIH1cclxuXHJcbn1cclxuIl19