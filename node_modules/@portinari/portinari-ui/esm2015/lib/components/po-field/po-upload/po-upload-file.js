import { PoUploadStatus } from './po-upload-status.enum';
// Classe respons√°vel pelo arquivo do PO Upload
export class PoUploadFile {
    constructor(file) {
        if (file) {
            this.name = file.name;
            this.displayName = `${file.name} - ${this.getFileSize(file.size)}`;
            this.extension = this.getExtension(file.name);
            this.size = file.size;
            this.rawFile = file;
            this.uid = this.generateUUID();
            this.status = PoUploadStatus.None;
        }
    }
    getExtension(value) {
        if (value) {
            const extension = value.substr(value.lastIndexOf('.'));
            return extension.toLowerCase();
        }
        return '';
    }
    generateUUID() {
        function s4() {
            return Math.floor((1 + Math.random()) * 0x10000)
                .toString(16)
                .substring(1);
        }
        return s4() + s4() + '-' + s4() + '-' + s4() + '-' +
            s4() + '-' + s4() + s4() + s4();
    }
    // Retorna o tamanho do arquivo em KBytes.
    getFileSize(size) {
        let kbSize = 0;
        if (size) {
            kbSize = Math.ceil(size / 1024);
        }
        return `${kbSize} KB`;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdXBsb2FkLWZpbGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcG9ydGluYXJpL3BvcnRpbmFyaS11aS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3BvLWZpZWxkL3BvLXVwbG9hZC9wby11cGxvYWQtZmlsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFFekQsK0NBQStDO0FBQy9DLE1BQU0sT0FBTyxZQUFZO0lBb0J2QixZQUFZLElBQVM7UUFDbkIsSUFBSSxJQUFJLEVBQUU7WUFDUixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7WUFDdEIsSUFBSSxDQUFDLFdBQVcsR0FBRyxHQUFHLElBQUksQ0FBQyxJQUFJLE1BQU0sSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQztZQUNuRSxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQzlDLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQztZQUN0QixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztZQUNwQixJQUFJLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztZQUMvQixJQUFJLENBQUMsTUFBTSxHQUFHLGNBQWMsQ0FBQyxJQUFJLENBQUM7U0FDbkM7SUFDSCxDQUFDO0lBRU8sWUFBWSxDQUFDLEtBQWE7UUFDaEMsSUFBSSxLQUFLLEVBQUU7WUFDVCxNQUFNLFNBQVMsR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztZQUN2RCxPQUFPLFNBQVMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztTQUNoQztRQUVELE9BQU8sRUFBRSxDQUFDO0lBQ1osQ0FBQztJQUVPLFlBQVk7UUFDbEIsU0FBUyxFQUFFO1lBQ1QsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLE9BQU8sQ0FBQztpQkFDN0MsUUFBUSxDQUFDLEVBQUUsQ0FBQztpQkFDWixTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDbEIsQ0FBQztRQUVELE9BQU8sRUFBRSxFQUFFLEdBQUcsRUFBRSxFQUFFLEdBQUcsR0FBRyxHQUFHLEVBQUUsRUFBRSxHQUFHLEdBQUcsR0FBRyxFQUFFLEVBQUUsR0FBRyxHQUFHO1lBQ2hELEVBQUUsRUFBRSxHQUFHLEdBQUcsR0FBRyxFQUFFLEVBQUUsR0FBRyxFQUFFLEVBQUUsR0FBRyxFQUFFLEVBQUUsQ0FBQztJQUNwQyxDQUFDO0lBRUQsMENBQTBDO0lBQ2xDLFdBQVcsQ0FBQyxJQUFZO1FBQzlCLElBQUksTUFBTSxHQUFHLENBQUMsQ0FBQztRQUVmLElBQUksSUFBSSxFQUFFO1lBQ04sTUFBTSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxDQUFDO1NBQ25DO1FBRUQsT0FBTyxHQUFHLE1BQU0sS0FBSyxDQUFDO0lBQ3hCLENBQUM7Q0FFRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBvVXBsb2FkU3RhdHVzIH0gZnJvbSAnLi9wby11cGxvYWQtc3RhdHVzLmVudW0nO1xuXG4vLyBDbGFzc2UgcmVzcG9uc8OhdmVsIHBlbG8gYXJxdWl2byBkbyBQTyBVcGxvYWRcbmV4cG9ydCBjbGFzcyBQb1VwbG9hZEZpbGUge1xuICAvLyBOb21lIGRvIGFycXVpdm8uXG4gIHB1YmxpYyBuYW1lOiBzdHJpbmc7XG4gIC8vIEFycXVpdm8gYnJ1dG8uXG4gIHB1YmxpYyByYXdGaWxlOiBGaWxlO1xuICAvLyBTdGF0dXMgZGUgZW52aW8gZG8gYXJxdWl2by5cbiAgcHVibGljIHN0YXR1cz86IFBvVXBsb2FkU3RhdHVzO1xuICAvLyBJZGVudGlmaWNhZG9yIGRvIGFycXVpdm8uXG4gIHB1YmxpYyB1aWQ6IHN0cmluZztcbiAgLy8gRXh0ZW5zw6NvIGRvIGFycXVpdm8uXG4gIHB1YmxpYyBleHRlbnNpb246IHN0cmluZztcbiAgLy8gVGFtYW5obyBkbyBhcnF1aXZvIGVtIGJ5dGVzO1xuICBwdWJsaWMgc2l6ZTogbnVtYmVyO1xuXG4gIC8vIHByb3ByaWVkYWRlIHBhcmEgYXV4aWxpYXIgYSBleGliacOnw6NvIGRvIHRleHRvIG5vIGNvbXBvbmVudGUgcHJvZ3Jlc3NcbiAgZGlzcGxheU5hbWU/OiBzdHJpbmc7XG5cbiAgLy8gcG9yY2VudGFnZW0gdXRpbGl6YWRhIHBhcmEgcmVwYXNzYXIgYW8gY29tcG9uZW50ZSBwcm9ncmVzc1xuICBwZXJjZW50PzogbnVtYmVyO1xuXG4gIGNvbnN0cnVjdG9yKGZpbGU6IGFueSkge1xuICAgIGlmIChmaWxlKSB7XG4gICAgICB0aGlzLm5hbWUgPSBmaWxlLm5hbWU7XG4gICAgICB0aGlzLmRpc3BsYXlOYW1lID0gYCR7ZmlsZS5uYW1lfSAtICR7dGhpcy5nZXRGaWxlU2l6ZShmaWxlLnNpemUpfWA7XG4gICAgICB0aGlzLmV4dGVuc2lvbiA9IHRoaXMuZ2V0RXh0ZW5zaW9uKGZpbGUubmFtZSk7XG4gICAgICB0aGlzLnNpemUgPSBmaWxlLnNpemU7XG4gICAgICB0aGlzLnJhd0ZpbGUgPSBmaWxlO1xuICAgICAgdGhpcy51aWQgPSB0aGlzLmdlbmVyYXRlVVVJRCgpO1xuICAgICAgdGhpcy5zdGF0dXMgPSBQb1VwbG9hZFN0YXR1cy5Ob25lO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgZ2V0RXh0ZW5zaW9uKHZhbHVlOiBzdHJpbmcpIHtcbiAgICBpZiAodmFsdWUpIHtcbiAgICAgIGNvbnN0IGV4dGVuc2lvbiA9IHZhbHVlLnN1YnN0cih2YWx1ZS5sYXN0SW5kZXhPZignLicpKTtcbiAgICAgIHJldHVybiBleHRlbnNpb24udG9Mb3dlckNhc2UoKTtcbiAgICB9XG5cbiAgICByZXR1cm4gJyc7XG4gIH1cblxuICBwcml2YXRlIGdlbmVyYXRlVVVJRCgpIHtcbiAgICBmdW5jdGlvbiBzNCgpIHtcbiAgICAgIHJldHVybiBNYXRoLmZsb29yKCgxICsgTWF0aC5yYW5kb20oKSkgKiAweDEwMDAwKVxuICAgICAgICAudG9TdHJpbmcoMTYpXG4gICAgICAgIC5zdWJzdHJpbmcoMSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHM0KCkgKyBzNCgpICsgJy0nICsgczQoKSArICctJyArIHM0KCkgKyAnLScgK1xuICAgICAgczQoKSArICctJyArIHM0KCkgKyBzNCgpICsgczQoKTtcbiAgfVxuXG4gIC8vIFJldG9ybmEgbyB0YW1hbmhvIGRvIGFycXVpdm8gZW0gS0J5dGVzLlxuICBwcml2YXRlIGdldEZpbGVTaXplKHNpemU6IG51bWJlcik6IHN0cmluZyB7XG4gICAgbGV0IGtiU2l6ZSA9IDA7XG5cbiAgICBpZiAoc2l6ZSkge1xuICAgICAgICBrYlNpemUgPSBNYXRoLmNlaWwoc2l6ZSAvIDEwMjQpO1xuICAgIH1cblxuICAgIHJldHVybiBgJHtrYlNpemV9IEtCYDtcbiAgfVxuXG59XG4iXX0=