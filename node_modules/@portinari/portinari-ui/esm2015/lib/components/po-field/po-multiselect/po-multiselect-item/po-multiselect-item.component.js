import * as tslib_1 from "tslib";
import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente que constrói cada item no dropdown, contendo o checkbox e o label.
 */
let PoMultiselectItemComponent = class PoMultiselectItemComponent {
    /**
     * @docsPrivate
     *
     * @description
     *
     * Componente que constrói cada item no dropdown, contendo o checkbox e o label.
     */
    constructor() {
        /** Esta propriedade indica se o campo está selecionado ou não. */
        this.selected = false;
        /** Evento que será disparado toda vez que o usuário marcar ou desmarcar um item. */
        this.change = new EventEmitter();
    }
    itemClicked() {
        this.selected = !this.selected;
        this.change.emit(this.selected);
    }
};
tslib_1.__decorate([
    Input('p-label'),
    tslib_1.__metadata("design:type", String)
], PoMultiselectItemComponent.prototype, "label", void 0);
tslib_1.__decorate([
    Input('p-selected'),
    tslib_1.__metadata("design:type", Boolean)
], PoMultiselectItemComponent.prototype, "selected", void 0);
tslib_1.__decorate([
    Output('p-change'),
    tslib_1.__metadata("design:type", Object)
], PoMultiselectItemComponent.prototype, "change", void 0);
PoMultiselectItemComponent = tslib_1.__decorate([
    Component({
        selector: 'po-multiselect-item',
        template: "<li [class.po-multiselect-item-selected]=\"selected\" (click)=\"itemClicked()\">\n\n  <a class=\"po-multiselect-item\">\n    <input\n      [checked]=\"selected\"\n      class=\"po-multiselect-checkbox-input\"\n      [class.po-multiselect-checkbox-input-checked]=\"selected\"\n      type=\"checkbox\">\n\n    <label class=\"po-multiselect-checkbox-label po-clickable\">\n      {{ label }}\n    </label>\n  </a>\n</li>\n",
        changeDetection: ChangeDetectionStrategy.OnPush
    })
], PoMultiselectItemComponent);
export { PoMultiselectItemComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbXVsdGlzZWxlY3QtaXRlbS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcG9ydGluYXJpL3BvcnRpbmFyaS11aS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3BvLWZpZWxkL3BvLW11bHRpc2VsZWN0L3BvLW11bHRpc2VsZWN0LWl0ZW0vcG8tbXVsdGlzZWxlY3QtaXRlbS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFaEc7Ozs7OztHQU1HO0FBTUgsSUFBYSwwQkFBMEIsR0FBdkMsTUFBYSwwQkFBMEI7SUFadkM7Ozs7OztPQU1HO0lBQ0g7UUFVRSxrRUFBa0U7UUFDN0MsYUFBUSxHQUFhLEtBQUssQ0FBQztRQUVoRCxvRkFBb0Y7UUFDaEUsV0FBTSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7SUFNbEQsQ0FBQztJQUpDLFdBQVc7UUFDVCxJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUMvQixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbEMsQ0FBQztDQUNGLENBQUE7QUFabUI7SUFBakIsS0FBSyxDQUFDLFNBQVMsQ0FBQzs7eURBQWU7QUFHWDtJQUFwQixLQUFLLENBQUMsWUFBWSxDQUFDOzs0REFBNEI7QUFHNUI7SUFBbkIsTUFBTSxDQUFDLFVBQVUsQ0FBQzs7MERBQTZCO0FBVHJDLDBCQUEwQjtJQUx0QyxTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUscUJBQXFCO1FBQy9CLDhhQUFtRDtRQUNuRCxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtLQUNoRCxDQUFDO0dBQ1csMEJBQTBCLENBZXRDO1NBZlksMEJBQTBCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbi8qKlxuICogQGRvY3NQcml2YXRlXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogQ29tcG9uZW50ZSBxdWUgY29uc3Ryw7NpIGNhZGEgaXRlbSBubyBkcm9wZG93biwgY29udGVuZG8gbyBjaGVja2JveCBlIG8gbGFiZWwuXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BvLW11bHRpc2VsZWN0LWl0ZW0nLFxuICB0ZW1wbGF0ZVVybDogJy4vcG8tbXVsdGlzZWxlY3QtaXRlbS5jb21wb25lbnQuaHRtbCcsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuZXhwb3J0IGNsYXNzIFBvTXVsdGlzZWxlY3RJdGVtQ29tcG9uZW50IHtcblxuICAvKiogUsOzdHVsbyBkbyBpdGVtLiAqL1xuICBASW5wdXQoJ3AtbGFiZWwnKSBsYWJlbDogc3RyaW5nO1xuXG4gIC8qKiBFc3RhIHByb3ByaWVkYWRlIGluZGljYSBzZSBvIGNhbXBvIGVzdMOhIHNlbGVjaW9uYWRvIG91IG7Do28uICovXG4gIEBJbnB1dCgncC1zZWxlY3RlZCcpIHNlbGVjdGVkPzogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIC8qKiBFdmVudG8gcXVlIHNlcsOhIGRpc3BhcmFkbyB0b2RhIHZleiBxdWUgbyB1c3XDoXJpbyBtYXJjYXIgb3UgZGVzbWFyY2FyIHVtIGl0ZW0uICovXG4gIEBPdXRwdXQoJ3AtY2hhbmdlJykgY2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIGl0ZW1DbGlja2VkKCkge1xuICAgIHRoaXMuc2VsZWN0ZWQgPSAhdGhpcy5zZWxlY3RlZDtcbiAgICB0aGlzLmNoYW5nZS5lbWl0KHRoaXMuc2VsZWN0ZWQpO1xuICB9XG59XG4iXX0=