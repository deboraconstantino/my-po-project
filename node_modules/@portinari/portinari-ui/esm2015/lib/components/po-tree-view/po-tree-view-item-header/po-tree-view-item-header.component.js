import * as tslib_1 from "tslib";
import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';
let PoTreeViewItemHeaderComponent = class PoTreeViewItemHeaderComponent {
    constructor() {
        this.selectable = false;
        this.expanded = new EventEmitter();
        this.selected = new EventEmitter();
    }
    get hasSubItems() {
        return !!(this.item.subItems && this.item.subItems.length);
    }
};
tslib_1.__decorate([
    ViewChild('inputCheckbox', { static: false }),
    tslib_1.__metadata("design:type", Object)
], PoTreeViewItemHeaderComponent.prototype, "inputCheckbox", void 0);
tslib_1.__decorate([
    Input('p-item'),
    tslib_1.__metadata("design:type", Object)
], PoTreeViewItemHeaderComponent.prototype, "item", void 0);
tslib_1.__decorate([
    Input('p-selectable'),
    tslib_1.__metadata("design:type", Boolean)
], PoTreeViewItemHeaderComponent.prototype, "selectable", void 0);
tslib_1.__decorate([
    Output('p-expanded'),
    tslib_1.__metadata("design:type", Object)
], PoTreeViewItemHeaderComponent.prototype, "expanded", void 0);
tslib_1.__decorate([
    Output('p-selected'),
    tslib_1.__metadata("design:type", Object)
], PoTreeViewItemHeaderComponent.prototype, "selected", void 0);
PoTreeViewItemHeaderComponent = tslib_1.__decorate([
    Component({
        selector: 'po-tree-view-item-header',
        template: "<div class=\"po-tree-view-item-header\">\n\n  <button *ngIf=\"hasSubItems\"\n    class=\"po-tree-view-item-header-button\"\n    (click)=\"expanded.emit($event)\">\n    <span class=\"po-icon po-icon-arrow-down po-tree-view-item-header-button-icon\"\n      [class.po-tree-view-item-header-button-icon-transform]=\"item.expanded\">\n    </span>\n  </button>\n\n  <ng-container *ngIf=\"selectable; then checkboxTemplate; else labelTemplate\"></ng-container>\n\n</div>\n\n<ng-template #labelTemplate>\n  <span class=\"po-tree-view-item-header-label\" [class.po-tree-view-item-header-padding]=\"!hasSubItems\">\n    {{ item.label }}\n  </span>\n</ng-template>\n\n<ng-template #checkboxTemplate>\n  <po-checkbox\n    class=\"po-tree-view-item-header-checkbox\"\n    [class.po-tree-view-item-header-padding]=\"!hasSubItems\"\n    [p-label]=\"item.label\"\n    [(ngModel)]=\"item.selected\"\n    (p-change)=\"selected.emit(item)\">\n  </po-checkbox>\n</ng-template>\n",
        changeDetection: ChangeDetectionStrategy.OnPush
    })
], PoTreeViewItemHeaderComponent);
export { PoTreeViewItemHeaderComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdHJlZS12aWV3LWl0ZW0taGVhZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwb3J0aW5hcmkvcG9ydGluYXJpLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tdHJlZS12aWV3L3BvLXRyZWUtdmlldy1pdGVtLWhlYWRlci9wby10cmVlLXZpZXctaXRlbS1oZWFkZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQVMzRyxJQUFhLDZCQUE2QixHQUExQyxNQUFhLDZCQUE2QjtJQUwxQztRQVd5QixlQUFVLEdBQVksS0FBSyxDQUFDO1FBRTdCLGFBQVEsR0FBRyxJQUFJLFlBQVksRUFBYyxDQUFDO1FBRTFDLGFBQVEsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO0lBTTNELENBQUM7SUFKQyxJQUFJLFdBQVc7UUFDYixPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzdELENBQUM7Q0FFRixDQUFBO0FBZGdEO0lBQTlDLFNBQVMsQ0FBQyxlQUFlLEVBQUUsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLENBQUM7O29FQUFlO0FBRTVDO0lBQWhCLEtBQUssQ0FBQyxRQUFRLENBQUM7OzJEQUFzQjtBQUVmO0lBQXRCLEtBQUssQ0FBQyxjQUFjLENBQUM7O2lFQUE2QjtBQUU3QjtJQUFyQixNQUFNLENBQUMsWUFBWSxDQUFDOzsrREFBMkM7QUFFMUM7SUFBckIsTUFBTSxDQUFDLFlBQVksQ0FBQzs7K0RBQW9DO0FBVjlDLDZCQUE2QjtJQUx6QyxTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsMEJBQTBCO1FBQ3BDLDA4QkFBd0Q7UUFDeEQsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07S0FDaEQsQ0FBQztHQUNXLDZCQUE2QixDQWdCekM7U0FoQlksNkJBQTZCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0LCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgUG9UcmVlVmlld0l0ZW0gfSBmcm9tICcuLi9wby10cmVlLXZpZXctaXRlbS9wby10cmVlLXZpZXctaXRlbS5pbnRlcmZhY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwby10cmVlLXZpZXctaXRlbS1oZWFkZXInLFxuICB0ZW1wbGF0ZVVybDogJy4vcG8tdHJlZS12aWV3LWl0ZW0taGVhZGVyLmNvbXBvbmVudC5odG1sJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcbn0pXG5leHBvcnQgY2xhc3MgUG9UcmVlVmlld0l0ZW1IZWFkZXJDb21wb25lbnQge1xuXG4gIEBWaWV3Q2hpbGQoJ2lucHV0Q2hlY2tib3gnLCB7IHN0YXRpYzogZmFsc2UgfSkgaW5wdXRDaGVja2JveDtcblxuICBASW5wdXQoJ3AtaXRlbScpIGl0ZW06IFBvVHJlZVZpZXdJdGVtO1xuXG4gIEBJbnB1dCgncC1zZWxlY3RhYmxlJykgc2VsZWN0YWJsZTogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIEBPdXRwdXQoJ3AtZXhwYW5kZWQnKSBleHBhbmRlZCA9IG5ldyBFdmVudEVtaXR0ZXI8TW91c2VFdmVudD4oKTtcblxuICBAT3V0cHV0KCdwLXNlbGVjdGVkJykgc2VsZWN0ZWQgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxuICBnZXQgaGFzU3ViSXRlbXMoKSB7XG4gICAgcmV0dXJuICEhKHRoaXMuaXRlbS5zdWJJdGVtcyAmJiB0aGlzLml0ZW0uc3ViSXRlbXMubGVuZ3RoKTtcbiAgfVxuXG59XG4iXX0=