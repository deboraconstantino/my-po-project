import * as tslib_1 from "tslib";
import { ChangeDetectorRef, Component, ElementRef, Renderer2, ViewChild } from '@angular/core';
import { v4 as uuid } from 'uuid';
import { PoModalBaseComponent } from './po-modal-base.component';
import { PoModalService } from './po-modal-service';
/**
 * @docsExtends PoModalBaseComponent
 *
 * @example
 *
 * <example name="po-modal-basic" title="Portinari Modal Basic">
 *  <file name="sample-po-modal-basic/sample-po-modal-basic.component.html"> </file>
 *  <file name="sample-po-modal-basic/sample-po-modal-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-modal-labs" title="Portinari Modal Labs">
 *  <file name="sample-po-modal-labs/sample-po-modal-labs.component.html"> </file>
 *  <file name="sample-po-modal-labs/sample-po-modal-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-modal-fruits-salad" title="Portinari Modal - Fruits Salad">
 *  <file name="sample-po-modal-fruits-salad/sample-po-modal-fruits-salad.component.html"> </file>
 *  <file name="sample-po-modal-fruits-salad/sample-po-modal-fruits-salad.component.ts"> </file>
 * </example>
 */
let PoModalComponent = class PoModalComponent extends PoModalBaseComponent {
    constructor(poModalService, renderer, changeDetector) {
        super();
        this.poModalService = poModalService;
        this.renderer = renderer;
        this.changeDetector = changeDetector;
        this.focusableElements = 'input, select, textarea, button:not([disabled]), a';
        this.id = uuid();
    }
    close(xClosed = false) {
        this.poModalService.modalActive = undefined;
        super.close(xClosed);
        this.removeEventListeners();
        if (this.sourceElement) {
            this.sourceElement.focus();
        }
    }
    closeModalOnEscapeKey(event) {
        if (!this.hideClose) {
            event.preventDefault();
            event.stopPropagation();
            this.close();
        }
    }
    getPrimaryActionButtonType() {
        return this.primaryAction.danger ? 'danger' : 'primary';
    }
    getSecondaryActionButtonType() {
        return this.secondaryAction && this.secondaryAction.danger && !this.primaryAction.danger ? 'danger' : 'default';
    }
    onClickOut(event) {
        if (this.clickOut && !this.modalContent.nativeElement.contains(event.target)) {
            this.close();
        }
    }
    open() {
        this.sourceElement = document.activeElement;
        super.open();
        this.handleFocus();
    }
    handleFocus() {
        this.poModalService.modalActive = this.id;
        setTimeout(() => {
            if (this.modalContent) {
                this.initFocus();
                document.addEventListener('focus', this.focusFunction, true);
            }
        });
    }
    initFocus() {
        this.focusFunction = (event) => {
            this.poModalService.modalActive = this.poModalService.modalActive || this.id;
            const modalElement = this.modalContent.nativeElement;
            if (!modalElement.contains(event.target) && this.poModalService.modalActive === this.id) {
                event.stopPropagation();
                this.firstElement.focus();
            }
        };
        this.setFirstElement();
        if (this.hideClose) {
            this.firstElement.focus();
        }
        else {
            const firstFieldElement = this.modalContent.nativeElement.querySelectorAll(this.focusableElements)[1] ||
                this.modalContent.nativeElement;
            firstFieldElement.focus();
        }
    }
    removeEventListeners() {
        document.removeEventListener('focus', this.focusFunction, true);
    }
    setFirstElement() {
        this.firstElement = this.modalContent.nativeElement.querySelector(this.focusableElements) || this.modalContent.nativeElement;
    }
};
PoModalComponent.ctorParameters = () => [
    { type: PoModalService },
    { type: Renderer2 },
    { type: ChangeDetectorRef }
];
tslib_1.__decorate([
    ViewChild('modalContent', { read: ElementRef, static: false }),
    tslib_1.__metadata("design:type", ElementRef)
], PoModalComponent.prototype, "modalContent", void 0);
PoModalComponent = tslib_1.__decorate([
    Component({
        selector: 'po-modal',
        template: "<div *ngIf=\"!isHidden\"\n  class=\"po-modal\"\n  tabindex=\"0\"\n  (keydown.esc)=\"closeModalOnEscapeKey($event)\">\n\n  <div class=\"po-modal-overlay\">\n    <div class=\"po-modal-container po-pb-2 po-pt-2\" (mousedown)=\"onClickOut($event)\">\n\n      <div class=\"po-modal-vertical-align\">\n        <div #modalContent\n          class=\"po-modal-content po-modal-{{ size }}\"\n          tabindex=\"-1\">\n\n          <div class=\"po-modal-header\">\n            <div class=\"po-modal-title po-text-ellipsis\">\n              {{ title }}\n            </div>\n\n            <a *ngIf=\"!hideClose\"\n              class=\"po-modal-header-close-button\"\n              tabindex=\"0\"\n              (click)=\"close(true)\">\n              <span class=\"po-icon po-icon-close\"></span>\n            </a>\n          </div>\n\n          <div class=\"po-modal-body\">\n            <ng-content></ng-content>\n          </div>\n\n          <div class=\"po-modal-footer\">\n            <po-button *ngIf=\"secondaryAction\"\n              [p-disabled]=\"secondaryAction.disabled\"\n              [p-label]=\"secondaryAction.label\"\n              [p-loading]=\"secondaryAction.loading\"\n              [p-type]=\"getSecondaryActionButtonType()\"\n              (p-click)=\"secondaryAction.action()\">\n            </po-button>\n\n            <po-button\n              class=\"po-button-modal-first-action\"\n              [p-disabled]=\"primaryAction.disabled\"\n              [p-label]=\"primaryAction.label\"\n              [p-loading]=\"primaryAction.loading\"\n              [p-type]=\"getPrimaryActionButtonType()\"\n              (p-click)=\"primaryAction.action()\">\n            </po-button>\n          </div>\n\n        </div>\n      </div>\n\n    </div>\n  </div>\n</div>\n\n"
    }),
    tslib_1.__metadata("design:paramtypes", [PoModalService, Renderer2, ChangeDetectorRef])
], PoModalComponent);
export { PoModalComponent };
//# sourceMappingURL=data:application/json;base64,