import * as tslib_1 from "tslib";
import { Component, Input } from '@angular/core';
import { PoBreadcrumbFavoriteService } from './po-breadcrumb-favorite.service';
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente que renderiza o serviÃ§o de favoritar do po-breadcrumb.
 */
let PoBreadcrumbFavoriteComponent = class PoBreadcrumbFavoriteComponent {
    constructor(service) {
        this.service = service;
        this.favorite = false;
    }
    ngOnInit() {
        this.service.configService(this.favoriteService, this.paramsService, this.itemActive);
        this.getStatusFavorite();
    }
    ngOnDestroy() {
        if (this.getSubscription) {
            this.getSubscription.unsubscribe();
        }
        if (this.setSubscription) {
            this.setSubscription.unsubscribe();
        }
    }
    toggleFavoriteAction() {
        this.favorite ? this.setStatusFavorite(false) : this.setStatusFavorite(true);
    }
    getStatusFavorite() {
        this.getSubscription = this.service.getFavorite().subscribe(result => this.favorite = result.isFavorite);
    }
    setStatusFavorite(status) {
        this.setSubscription = this.service.sendStatusFavorite(status).subscribe(result => this.favorite = result.isFavorite);
    }
};
PoBreadcrumbFavoriteComponent.ctorParameters = () => [
    { type: PoBreadcrumbFavoriteService }
];
tslib_1.__decorate([
    Input('p-favorite-service'),
    tslib_1.__metadata("design:type", String)
], PoBreadcrumbFavoriteComponent.prototype, "favoriteService", void 0);
tslib_1.__decorate([
    Input('p-item-active'),
    tslib_1.__metadata("design:type", Object)
], PoBreadcrumbFavoriteComponent.prototype, "itemActive", void 0);
tslib_1.__decorate([
    Input('p-params-service'),
    tslib_1.__metadata("design:type", Object)
], PoBreadcrumbFavoriteComponent.prototype, "paramsService", void 0);
PoBreadcrumbFavoriteComponent = tslib_1.__decorate([
    Component({
        selector: 'po-breadcrumb-favorite',
        template: "<div class=\"po-breadcrumb-favorite po-clickable\" (click)=\"toggleFavoriteAction()\">\n\n  <span\n    class=\"po-icon po-icon-star po-breadcrumb-favorite-star po-clickable\"\n    [class.po-breadcrumb-favorite-star-active]=\"favorite\">\n  </span>\n\n  <span class=\"po-hidden-sm po-breadcrumb-favorite-label\" *ngIf=\"favorite\">Desfavoritar</span>\n  <span class=\"po-hidden-sm po-breadcrumb-favorite-label\" *ngIf=\"!favorite\">Favoritar</span>\n</div>\n",
        providers: [PoBreadcrumbFavoriteService]
    }),
    tslib_1.__metadata("design:paramtypes", [PoBreadcrumbFavoriteService])
], PoBreadcrumbFavoriteComponent);
export { PoBreadcrumbFavoriteComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tYnJlYWRjcnVtYi1mYXZvcml0ZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcG9ydGluYXJpL3BvcnRpbmFyaS11aS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3BvLWJyZWFkY3J1bWIvcG8tYnJlYWRjcnVtYi1mYXZvcml0ZS9wby1icmVhZGNydW1iLWZhdm9yaXRlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBS3BFLE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBRS9FOzs7Ozs7R0FNRztBQU1ILElBQWEsNkJBQTZCLEdBQTFDLE1BQWEsNkJBQTZCO0lBZXhDLFlBQW9CLE9BQW9DO1FBQXBDLFlBQU8sR0FBUCxPQUFPLENBQTZCO1FBYnhELGFBQVEsR0FBWSxLQUFLLENBQUM7SUFha0MsQ0FBQztJQUU3RCxRQUFRO1FBQ04sSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLGVBQWUsRUFBRSxJQUFJLENBQUMsYUFBYSxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUN0RixJQUFJLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztJQUMzQixDQUFDO0lBRUQsV0FBVztRQUVULElBQUksSUFBSSxDQUFDLGVBQWUsRUFBRTtZQUN4QixJQUFJLENBQUMsZUFBZSxDQUFDLFdBQVcsRUFBRSxDQUFDO1NBQ3BDO1FBRUQsSUFBSSxJQUFJLENBQUMsZUFBZSxFQUFFO1lBQ3hCLElBQUksQ0FBQyxlQUFlLENBQUMsV0FBVyxFQUFFLENBQUM7U0FDcEM7SUFDSCxDQUFDO0lBRUQsb0JBQW9CO1FBQ2xCLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxDQUFDO0lBQy9FLENBQUM7SUFFTyxpQkFBaUI7UUFDdkIsSUFBSSxDQUFDLGVBQWUsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUcsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQzNHLENBQUM7SUFFTyxpQkFBaUIsQ0FBQyxNQUFNO1FBQzlCLElBQUksQ0FBQyxlQUFlLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxNQUFNLENBQUMsQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsUUFBUSxHQUFHLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUN4SCxDQUFDO0NBRUYsQ0FBQTs7WUE5QjhCLDJCQUEyQjs7QUFSM0I7SUFBNUIsS0FBSyxDQUFDLG9CQUFvQixDQUFDOztzRUFBeUI7QUFHN0I7SUFBdkIsS0FBSyxDQUFDLGVBQWUsQ0FBQzs7aUVBQThCO0FBRzFCO0lBQTFCLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQzs7b0VBQXVCO0FBYnRDLDZCQUE2QjtJQUx6QyxTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsd0JBQXdCO1FBQ2xDLHFkQUFzRDtRQUN0RCxTQUFTLEVBQUUsQ0FBQywyQkFBMkIsQ0FBQztLQUN6QyxDQUFDOzZDQWdCNkIsMkJBQTJCO0dBZjdDLDZCQUE2QixDQTZDekM7U0E3Q1ksNkJBQTZCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25EZXN0cm95LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XG5cbmltcG9ydCB7IFBvQnJlYWRjcnVtYkl0ZW0gfSBmcm9tICcuLy4uL3BvLWJyZWFkY3J1bWItaXRlbS5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgUG9CcmVhZGNydW1iRmF2b3JpdGVTZXJ2aWNlIH0gZnJvbSAnLi9wby1icmVhZGNydW1iLWZhdm9yaXRlLnNlcnZpY2UnO1xuXG4vKipcbiAqIEBkb2NzUHJpdmF0ZVxuICpcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIENvbXBvbmVudGUgcXVlIHJlbmRlcml6YSBvIHNlcnZpw6dvIGRlIGZhdm9yaXRhciBkbyBwby1icmVhZGNydW1iLlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwby1icmVhZGNydW1iLWZhdm9yaXRlJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3BvLWJyZWFkY3J1bWItZmF2b3JpdGUuY29tcG9uZW50Lmh0bWwnLFxuICBwcm92aWRlcnM6IFtQb0JyZWFkY3J1bWJGYXZvcml0ZVNlcnZpY2VdXG59KVxuZXhwb3J0IGNsYXNzIFBvQnJlYWRjcnVtYkZhdm9yaXRlQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuXG4gIGZhdm9yaXRlOiBib29sZWFuID0gZmFsc2U7XG4gIHByaXZhdGUgZ2V0U3Vic2NyaXB0aW9uOiBTdWJzY3JpcHRpb247XG4gIHByaXZhdGUgc2V0U3Vic2NyaXB0aW9uOiBTdWJzY3JpcHRpb247XG5cbiAgLy8gVVJMIGRvIHNlcnZpw6dvLlxuICBASW5wdXQoJ3AtZmF2b3JpdGUtc2VydmljZScpIGZhdm9yaXRlU2VydmljZTogc3RyaW5nO1xuXG4gIC8vIEl0ZW0gZG8gYnJlYWRjcnVtYiBhdGl2by5cbiAgQElucHV0KCdwLWl0ZW0tYWN0aXZlJykgaXRlbUFjdGl2ZTogUG9CcmVhZGNydW1iSXRlbTtcblxuICAvLyBQYXLDom1ldHJvIHF1ZSBzZXLDoSBlbnZpYWRvIGp1bnRvIGNvbSBvIHNlcnZpw6dvIGRlIGZhdm9yaXRhci5cbiAgQElucHV0KCdwLXBhcmFtcy1zZXJ2aWNlJykgcGFyYW1zU2VydmljZTogb2JqZWN0O1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgc2VydmljZTogUG9CcmVhZGNydW1iRmF2b3JpdGVTZXJ2aWNlKSB7IH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLnNlcnZpY2UuY29uZmlnU2VydmljZSh0aGlzLmZhdm9yaXRlU2VydmljZSwgdGhpcy5wYXJhbXNTZXJ2aWNlLCB0aGlzLml0ZW1BY3RpdmUpO1xuICAgIHRoaXMuZ2V0U3RhdHVzRmF2b3JpdGUoKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCk6IHZvaWQge1xuXG4gICAgaWYgKHRoaXMuZ2V0U3Vic2NyaXB0aW9uKSB7XG4gICAgICB0aGlzLmdldFN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLnNldFN1YnNjcmlwdGlvbikge1xuICAgICAgdGhpcy5zZXRTdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICB9XG4gIH1cblxuICB0b2dnbGVGYXZvcml0ZUFjdGlvbigpIHtcbiAgICB0aGlzLmZhdm9yaXRlID8gdGhpcy5zZXRTdGF0dXNGYXZvcml0ZShmYWxzZSkgOiB0aGlzLnNldFN0YXR1c0Zhdm9yaXRlKHRydWUpO1xuICB9XG5cbiAgcHJpdmF0ZSBnZXRTdGF0dXNGYXZvcml0ZSgpIHtcbiAgICB0aGlzLmdldFN1YnNjcmlwdGlvbiA9IHRoaXMuc2VydmljZS5nZXRGYXZvcml0ZSgpLnN1YnNjcmliZShyZXN1bHQgPT4gdGhpcy5mYXZvcml0ZSA9IHJlc3VsdC5pc0Zhdm9yaXRlKTtcbiAgfVxuXG4gIHByaXZhdGUgc2V0U3RhdHVzRmF2b3JpdGUoc3RhdHVzKSB7XG4gICAgdGhpcy5zZXRTdWJzY3JpcHRpb24gPSB0aGlzLnNlcnZpY2Uuc2VuZFN0YXR1c0Zhdm9yaXRlKHN0YXR1cykuc3Vic2NyaWJlKHJlc3VsdCA9PiB0aGlzLmZhdm9yaXRlID0gcmVzdWx0LmlzRmF2b3JpdGUpO1xuICB9XG5cbn1cbiJdfQ==