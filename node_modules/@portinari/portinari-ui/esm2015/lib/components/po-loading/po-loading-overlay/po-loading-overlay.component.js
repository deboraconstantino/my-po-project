import * as tslib_1 from "tslib";
import { Component, ChangeDetectorRef } from '@angular/core';
import { PoLanguageService } from './../../../services/po-language/po-language.service';
import { PoLoadingOverlayBaseComponent } from './po-loading-overlay-base.component';
/**
 *
 * @docsExtends PoLoadingOverlayBaseComponent
 *
 * @example
 *
 * <example name="po-loading-overlay-basic" title="Portinari Loading Overlay Basic">
 *  <file name="sample-po-loading-overlay-basic/sample-po-loading-overlay-basic.component.html"> </file>
 *  <file name="sample-po-loading-overlay-basic/sample-po-loading-overlay-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-loading-overlay-labs" title="Portinari Loading Overlay Labs">
 *  <file name="sample-po-loading-overlay-labs/sample-po-loading-overlay-labs.component.html"> </file>
 *  <file name="sample-po-loading-overlay-labs/sample-po-loading-overlay-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-loading-overlay-connection-test" title="Portinari Loading Overlay - Connection Test">
 *  <file name="sample-po-loading-overlay-connection-test/sample-po-loading-overlay-connection-test.component.html"> </file>
 *  <file name="sample-po-loading-overlay-connection-test/sample-po-loading-overlay-connection-test.component.ts"> </file>
 * </example>
 */
let PoLoadingOverlayComponent = class PoLoadingOverlayComponent extends PoLoadingOverlayBaseComponent {
    constructor(changeDetector, languageService) {
        super(languageService);
        this.changeDetector = changeDetector;
    }
};
PoLoadingOverlayComponent.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: PoLanguageService }
];
PoLoadingOverlayComponent = tslib_1.__decorate([
    Component({
        selector: 'po-loading-overlay',
        template: "<div\n  [class.po-overlay-absolute]=\"!screenLock\"\n  [class.po-overlay-fixed]=\"screenLock\">\n  <po-loading class=\"po-loading-overlay-content\" [p-text]=\"text\"></po-loading>\n</div>\n"
    }),
    tslib_1.__metadata("design:paramtypes", [ChangeDetectorRef, PoLanguageService])
], PoLoadingOverlayComponent);
export { PoLoadingOverlayComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbG9hZGluZy1vdmVybGF5LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwb3J0aW5hcmkvcG9ydGluYXJpLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tbG9hZGluZy9wby1sb2FkaW5nLW92ZXJsYXkvcG8tbG9hZGluZy1vdmVybGF5LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUU3RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxxREFBcUQsQ0FBQztBQUV4RixPQUFPLEVBQUUsNkJBQTZCLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUVwRjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FvQkc7QUFLSCxJQUFhLHlCQUF5QixHQUF0QyxNQUFhLHlCQUEwQixTQUFRLDZCQUE2QjtJQUUxRSxZQUFtQixjQUFpQyxFQUFFLGVBQWtDO1FBQ3RGLEtBQUssQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUROLG1CQUFjLEdBQWQsY0FBYyxDQUFtQjtJQUVwRCxDQUFDO0NBRUYsQ0FBQTs7WUFKb0MsaUJBQWlCO1lBQW1CLGlCQUFpQjs7QUFGN0UseUJBQXlCO0lBSnJDLFNBQVMsQ0FBQztRQUNULFFBQVEsRUFBRSxvQkFBb0I7UUFDOUIseU1BQWdEO0tBQ2pELENBQUM7NkNBR21DLGlCQUFpQixFQUFtQixpQkFBaUI7R0FGN0UseUJBQXlCLENBTXJDO1NBTlkseUJBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBDaGFuZ2VEZXRlY3RvclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBQb0xhbmd1YWdlU2VydmljZSB9IGZyb20gJy4vLi4vLi4vLi4vc2VydmljZXMvcG8tbGFuZ3VhZ2UvcG8tbGFuZ3VhZ2Uuc2VydmljZSc7XG5cbmltcG9ydCB7IFBvTG9hZGluZ092ZXJsYXlCYXNlQ29tcG9uZW50IH0gZnJvbSAnLi9wby1sb2FkaW5nLW92ZXJsYXktYmFzZS5jb21wb25lbnQnO1xuXG4vKipcbiAqXG4gKiBAZG9jc0V4dGVuZHMgUG9Mb2FkaW5nT3ZlcmxheUJhc2VDb21wb25lbnRcbiAqXG4gKiBAZXhhbXBsZVxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1sb2FkaW5nLW92ZXJsYXktYmFzaWNcIiB0aXRsZT1cIlBvcnRpbmFyaSBMb2FkaW5nIE92ZXJsYXkgQmFzaWNcIj5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWxvYWRpbmctb3ZlcmxheS1iYXNpYy9zYW1wbGUtcG8tbG9hZGluZy1vdmVybGF5LWJhc2ljLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWxvYWRpbmctb3ZlcmxheS1iYXNpYy9zYW1wbGUtcG8tbG9hZGluZy1vdmVybGF5LWJhc2ljLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInBvLWxvYWRpbmctb3ZlcmxheS1sYWJzXCIgdGl0bGU9XCJQb3J0aW5hcmkgTG9hZGluZyBPdmVybGF5IExhYnNcIj5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWxvYWRpbmctb3ZlcmxheS1sYWJzL3NhbXBsZS1wby1sb2FkaW5nLW92ZXJsYXktbGFicy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1sb2FkaW5nLW92ZXJsYXktbGFicy9zYW1wbGUtcG8tbG9hZGluZy1vdmVybGF5LWxhYnMuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tbG9hZGluZy1vdmVybGF5LWNvbm5lY3Rpb24tdGVzdFwiIHRpdGxlPVwiUG9ydGluYXJpIExvYWRpbmcgT3ZlcmxheSAtIENvbm5lY3Rpb24gVGVzdFwiPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tbG9hZGluZy1vdmVybGF5LWNvbm5lY3Rpb24tdGVzdC9zYW1wbGUtcG8tbG9hZGluZy1vdmVybGF5LWNvbm5lY3Rpb24tdGVzdC5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1sb2FkaW5nLW92ZXJsYXktY29ubmVjdGlvbi10ZXN0L3NhbXBsZS1wby1sb2FkaW5nLW92ZXJsYXktY29ubmVjdGlvbi10ZXN0LmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BvLWxvYWRpbmctb3ZlcmxheScsXG4gIHRlbXBsYXRlVXJsOiAncG8tbG9hZGluZy1vdmVybGF5LmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBQb0xvYWRpbmdPdmVybGF5Q29tcG9uZW50IGV4dGVuZHMgUG9Mb2FkaW5nT3ZlcmxheUJhc2VDb21wb25lbnQge1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBjaGFuZ2VEZXRlY3RvcjogQ2hhbmdlRGV0ZWN0b3JSZWYsIGxhbmd1YWdlU2VydmljZTogUG9MYW5ndWFnZVNlcnZpY2UpIHtcbiAgICBzdXBlcihsYW5ndWFnZVNlcnZpY2UpO1xuICB9XG5cbn1cbiJdfQ==