import * as tslib_1 from "tslib";
import { Component, EventEmitter, ViewChild } from '@angular/core';
import { getShortBrowserLanguage } from '../../../utils/util';
import { PoModalComponent } from '../../../components/po-modal/po-modal.component';
import { poHttpInterceptorDetailLiteralsDefault } from './po-http-interceptor-detail-literals.interface';
export const colors = { success: 'color-11', error: 'color-07', warning: 'color-08', info: '' };
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente para a modal de detalhes exibida pelo interceptor
 */
let PoHttpInterceptorDetailComponent = class PoHttpInterceptorDetailComponent {
    /**
     * @docsPrivate
     *
     * @description
     *
     * Componente para a modal de detalhes exibida pelo interceptor
     */
    constructor() {
        this.closed = new EventEmitter();
        this.details = [];
        this.language = getShortBrowserLanguage();
        this.literals = poHttpInterceptorDetailLiteralsDefault[this.language];
        this.primaryAction = {
            action: () => this.close(),
            label: this.literals.closeButton
        };
    }
    set detail(details) {
        if (details && details.length) {
            this.details = this.filterByValidDetails(details);
        }
        this.title = this.formatTitle(this.details);
    }
    close() {
        this.modal.close();
        this.closed.emit();
    }
    formatDetailItemTitle(detail) {
        return detail.code ? `${detail.code} - ${detail.message}` : detail.message;
    }
    open() {
        this.modal.open();
    }
    typeColor(type) {
        return colors[type];
    }
    typeValue(type) {
        return poHttpInterceptorDetailLiteralsDefault[this.language][type] || type;
    }
    addValidDetail(newDetails, detail) {
        return detail.message ? newDetails.concat(this.getValidDetailProperties(detail)) : newDetails;
    }
    getValidDetailProperties({ code, message, detailedMessage, type }) {
        return { code, message, detailedMessage, type };
    }
    filterByValidDetails(details) {
        return details.reduce((newDetails, detail) => this.addValidDetail(newDetails, detail), []);
    }
    formatTitle(details) {
        return details.length > 1 ? `${this.literals.details} (${details.length})` : this.literals.detail;
    }
};
tslib_1.__decorate([
    ViewChild(PoModalComponent, { static: true }),
    tslib_1.__metadata("design:type", PoModalComponent)
], PoHttpInterceptorDetailComponent.prototype, "modal", void 0);
PoHttpInterceptorDetailComponent = tslib_1.__decorate([
    Component({
        selector: 'po-http-interceptor-detail',
        template: "<po-modal\n  p-hide-close p-size=\"lg\"\n  [p-primary-action]=\"primaryAction\"\n  [p-title]=\"title\">\n\n  <div class=\"po-row\">\n    <po-accordion class=\"po-md-12 po-mt-1 po-mb-1\">\n      <po-accordion-item *ngFor=\"let detail of details\" [p-label]=\"formatDetailItemTitle(detail)\">\n\n        <div *ngIf=\"detail.type\" class=\"po-row po-mb-1\">\n          <po-tag [p-color]=\"typeColor(detail.type)\" [p-value]=\"typeValue(detail.type)\"></po-tag>\n        </div>\n\n        <div class=\"po-row\">\n          <p>{{detail.detailedMessage}}</p>\n        </div>\n\n      </po-accordion-item>\n    </po-accordion>\n  </div>\n\n</po-modal>\n"
    })
], PoHttpInterceptorDetailComponent);
export { PoHttpInterceptorDetailComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8taHR0cC1pbnRlcmNlcHRvci1kZXRhaWwuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvcnRpbmFyaS9wb3J0aW5hcmktdWkvIiwic291cmNlcyI6WyJsaWIvaW50ZXJjZXB0b3JzL3BvLWh0dHAtaW50ZXJjZXB0b3IvcG8taHR0cC1pbnRlcmNlcHRvci1kZXRhaWwvcG8taHR0cC1pbnRlcmNlcHRvci1kZXRhaWwuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFbkUsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFOUQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0saURBQWlELENBQUM7QUFHbkYsT0FBTyxFQUFFLHNDQUFzQyxFQUFFLE1BQU0saURBQWlELENBQUM7QUFFekcsTUFBTSxDQUFDLE1BQU0sTUFBTSxHQUFHLEVBQUUsT0FBTyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxDQUFDO0FBRWhHOzs7Ozs7R0FNRztBQUtILElBQWEsZ0NBQWdDLEdBQTdDLE1BQWEsZ0NBQWdDO0lBWDdDOzs7Ozs7T0FNRztJQUNIO1FBUUUsV0FBTSxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7UUFDakMsWUFBTyxHQUFtQyxFQUFFLENBQUM7UUFDN0MsYUFBUSxHQUFHLHVCQUF1QixFQUFFLENBQUM7UUFDckMsYUFBUSxHQUFHLHNDQUFzQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUVqRSxrQkFBYSxHQUFrQjtZQUM3QixNQUFNLEVBQUUsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRTtZQUMxQixLQUFLLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxXQUFXO1NBQ2pDLENBQUM7SUFrREosQ0FBQztJQTlDQyxJQUFJLE1BQU0sQ0FBQyxPQUF1QztRQUVoRCxJQUFJLE9BQU8sSUFBSSxPQUFPLENBQUMsTUFBTSxFQUFFO1lBQzdCLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLG9CQUFvQixDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQ25EO1FBRUQsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUM5QyxDQUFDO0lBRUQsS0FBSztRQUNILElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDbkIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNyQixDQUFDO0lBRUQscUJBQXFCLENBQUMsTUFBTTtRQUMxQixPQUFPLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEdBQUksTUFBTSxDQUFDLElBQUssTUFBTyxNQUFNLENBQUMsT0FBUSxFQUFFLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUM7SUFDakYsQ0FBQztJQUVELElBQUk7UUFDRixJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ3BCLENBQUM7SUFFRCxTQUFTLENBQUMsSUFBWTtRQUNwQixPQUFPLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN0QixDQUFDO0lBRUQsU0FBUyxDQUFDLElBQVk7UUFDcEIsT0FBTyxzQ0FBc0MsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksSUFBSSxDQUFDO0lBQzdFLENBQUM7SUFFTyxjQUFjLENBQUMsVUFBMEMsRUFBRSxNQUErQjtRQUNoRyxPQUFPLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLHdCQUF3QixDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQztJQUNoRyxDQUFDO0lBRU8sd0JBQXdCLENBQUMsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxJQUFJLEVBQTJCO1FBQ2hHLE9BQU8sRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxJQUFJLEVBQUUsQ0FBQztJQUNsRCxDQUFDO0lBRU8sb0JBQW9CLENBQUMsT0FBdUM7UUFDbEUsT0FBTyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsVUFBVSxFQUFFLE1BQU0sRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxVQUFVLEVBQUUsTUFBTSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDN0YsQ0FBQztJQUVPLFdBQVcsQ0FBQyxPQUF1QztRQUN6RCxPQUFPLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxLQUFLLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUM7SUFDcEcsQ0FBQztDQUVGLENBQUE7QUE1RGdEO0lBQTlDLFNBQVMsQ0FBQyxnQkFBZ0IsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsQ0FBQztzQ0FBUSxnQkFBZ0I7K0RBQUM7QUFGNUQsZ0NBQWdDO0lBSjVDLFNBQVMsQ0FBQztRQUNULFFBQVEsRUFBRSw0QkFBNEI7UUFDdEMsa3BCQUEwRDtLQUMzRCxDQUFDO0dBQ1csZ0NBQWdDLENBOEQ1QztTQTlEWSxnQ0FBZ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IGdldFNob3J0QnJvd3Nlckxhbmd1YWdlIH0gZnJvbSAnLi4vLi4vLi4vdXRpbHMvdXRpbCc7XG5pbXBvcnQgeyBQb01vZGFsQWN0aW9uIH0gZnJvbSAnLi4vLi4vLi4vY29tcG9uZW50cy9wby1tb2RhbC9wby1tb2RhbC1hY3Rpb24uaW50ZXJmYWNlJztcbmltcG9ydCB7IFBvTW9kYWxDb21wb25lbnQgfSBmcm9tICcuLi8uLi8uLi9jb21wb25lbnRzL3BvLW1vZGFsL3BvLW1vZGFsLmNvbXBvbmVudCc7XG5cbmltcG9ydCB7IFBvSHR0cEludGVyY2VwdG9yRGV0YWlsIH0gZnJvbSAnLi9wby1odHRwLWludGVyY2VwdG9yLWRldGFpbC5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgcG9IdHRwSW50ZXJjZXB0b3JEZXRhaWxMaXRlcmFsc0RlZmF1bHQgfSBmcm9tICcuL3BvLWh0dHAtaW50ZXJjZXB0b3ItZGV0YWlsLWxpdGVyYWxzLmludGVyZmFjZSc7XG5cbmV4cG9ydCBjb25zdCBjb2xvcnMgPSB7IHN1Y2Nlc3M6ICdjb2xvci0xMScsIGVycm9yOiAnY29sb3ItMDcnLCB3YXJuaW5nOiAnY29sb3ItMDgnLCBpbmZvOiAnJyB9O1xuXG4vKipcbiAqIEBkb2NzUHJpdmF0ZVxuICpcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIENvbXBvbmVudGUgcGFyYSBhIG1vZGFsIGRlIGRldGFsaGVzIGV4aWJpZGEgcGVsbyBpbnRlcmNlcHRvclxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwby1odHRwLWludGVyY2VwdG9yLWRldGFpbCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9wby1odHRwLWludGVyY2VwdG9yLWRldGFpbC5jb21wb25lbnQuaHRtbCcsXG59KVxuZXhwb3J0IGNsYXNzIFBvSHR0cEludGVyY2VwdG9yRGV0YWlsQ29tcG9uZW50IHtcblxuICBAVmlld0NoaWxkKFBvTW9kYWxDb21wb25lbnQsIHsgc3RhdGljOiB0cnVlIH0pIG1vZGFsOiBQb01vZGFsQ29tcG9uZW50O1xuXG4gIGNsb3NlZCA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuICBkZXRhaWxzOiBBcnJheTxQb0h0dHBJbnRlcmNlcHRvckRldGFpbD4gPSBbXTtcbiAgbGFuZ3VhZ2UgPSBnZXRTaG9ydEJyb3dzZXJMYW5ndWFnZSgpO1xuICBsaXRlcmFscyA9IHBvSHR0cEludGVyY2VwdG9yRGV0YWlsTGl0ZXJhbHNEZWZhdWx0W3RoaXMubGFuZ3VhZ2VdO1xuXG4gIHByaW1hcnlBY3Rpb246IFBvTW9kYWxBY3Rpb24gPSB7XG4gICAgYWN0aW9uOiAoKSA9PiB0aGlzLmNsb3NlKCksXG4gICAgbGFiZWw6IHRoaXMubGl0ZXJhbHMuY2xvc2VCdXR0b25cbiAgfTtcblxuICB0aXRsZTogc3RyaW5nO1xuXG4gIHNldCBkZXRhaWwoZGV0YWlsczogQXJyYXk8UG9IdHRwSW50ZXJjZXB0b3JEZXRhaWw+KSB7XG5cbiAgICBpZiAoZGV0YWlscyAmJiBkZXRhaWxzLmxlbmd0aCkge1xuICAgICAgdGhpcy5kZXRhaWxzID0gdGhpcy5maWx0ZXJCeVZhbGlkRGV0YWlscyhkZXRhaWxzKTtcbiAgICB9XG5cbiAgICB0aGlzLnRpdGxlID0gdGhpcy5mb3JtYXRUaXRsZSh0aGlzLmRldGFpbHMpO1xuICB9XG5cbiAgY2xvc2UoKSB7XG4gICAgdGhpcy5tb2RhbC5jbG9zZSgpO1xuICAgIHRoaXMuY2xvc2VkLmVtaXQoKTtcbiAgfVxuXG4gIGZvcm1hdERldGFpbEl0ZW1UaXRsZShkZXRhaWwpIHtcbiAgICByZXR1cm4gZGV0YWlsLmNvZGUgPyBgJHsgZGV0YWlsLmNvZGUgfSAtICR7IGRldGFpbC5tZXNzYWdlIH1gIDogZGV0YWlsLm1lc3NhZ2U7XG4gIH1cblxuICBvcGVuKCkge1xuICAgIHRoaXMubW9kYWwub3BlbigpO1xuICB9XG5cbiAgdHlwZUNvbG9yKHR5cGU6IHN0cmluZyk6IHN0cmluZyB7XG4gICAgcmV0dXJuIGNvbG9yc1t0eXBlXTtcbiAgfVxuXG4gIHR5cGVWYWx1ZSh0eXBlOiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIHJldHVybiBwb0h0dHBJbnRlcmNlcHRvckRldGFpbExpdGVyYWxzRGVmYXVsdFt0aGlzLmxhbmd1YWdlXVt0eXBlXSB8fCB0eXBlO1xuICB9XG5cbiAgcHJpdmF0ZSBhZGRWYWxpZERldGFpbChuZXdEZXRhaWxzOiBBcnJheTxQb0h0dHBJbnRlcmNlcHRvckRldGFpbD4sIGRldGFpbDogUG9IdHRwSW50ZXJjZXB0b3JEZXRhaWwpIHtcbiAgICByZXR1cm4gZGV0YWlsLm1lc3NhZ2UgPyBuZXdEZXRhaWxzLmNvbmNhdCh0aGlzLmdldFZhbGlkRGV0YWlsUHJvcGVydGllcyhkZXRhaWwpKSA6IG5ld0RldGFpbHM7XG4gIH1cblxuICBwcml2YXRlIGdldFZhbGlkRGV0YWlsUHJvcGVydGllcyh7IGNvZGUsIG1lc3NhZ2UsIGRldGFpbGVkTWVzc2FnZSwgdHlwZSB9OiBQb0h0dHBJbnRlcmNlcHRvckRldGFpbCkge1xuICAgIHJldHVybiB7IGNvZGUsIG1lc3NhZ2UsIGRldGFpbGVkTWVzc2FnZSwgdHlwZSB9O1xuICB9XG5cbiAgcHJpdmF0ZSBmaWx0ZXJCeVZhbGlkRGV0YWlscyhkZXRhaWxzOiBBcnJheTxQb0h0dHBJbnRlcmNlcHRvckRldGFpbD4pIHtcbiAgICByZXR1cm4gZGV0YWlscy5yZWR1Y2UoKG5ld0RldGFpbHMsIGRldGFpbCkgPT4gdGhpcy5hZGRWYWxpZERldGFpbChuZXdEZXRhaWxzLCBkZXRhaWwpLCBbXSk7XG4gIH1cblxuICBwcml2YXRlIGZvcm1hdFRpdGxlKGRldGFpbHM6IEFycmF5PFBvSHR0cEludGVyY2VwdG9yRGV0YWlsPikge1xuICAgIHJldHVybiBkZXRhaWxzLmxlbmd0aCA+IDEgPyBgJHt0aGlzLmxpdGVyYWxzLmRldGFpbHN9ICgke2RldGFpbHMubGVuZ3RofSlgIDogdGhpcy5saXRlcmFscy5kZXRhaWw7XG4gIH1cblxufVxuIl19