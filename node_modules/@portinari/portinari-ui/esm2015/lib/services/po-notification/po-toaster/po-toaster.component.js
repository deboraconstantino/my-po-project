import * as tslib_1 from "tslib";
import { ChangeDetectorRef, Component, ElementRef, ViewChild } from '@angular/core';
import { Subject } from 'rxjs';
import { PoToasterBaseComponent } from './po-toaster-base.component';
import { PoToasterType } from './po-toaster-type.enum';
import { PoToasterOrientation } from './po-toaster-orientation.enum';
/**
 * @docsPrivate
 *
 * @docsExtends PoToasterBaseComponent
 */
let PoToasterComponent = class PoToasterComponent extends PoToasterBaseComponent {
    constructor(changeDetector, elementeRef) {
        super();
        this.changeDetector = changeDetector;
        this.elementeRef = elementeRef;
        /* Margem do Toaster referênte à sua orientação e posição*/
        this.margin = 20;
        /* Observable para monitorar o Close to Toaster */
        this.observableOnClose = new Subject();
        /* Mostra ou oculta o Toaster */
        this.showToaster = true;
        /* Posição do Toaster*/
        this.toasterPosition = 'po-toaster-bottom';
    }
    /* Muda a posição do Toaster na tela*/
    changePosition(position) {
        this.elementeRef.nativeElement.style.display = 'table';
        this.margin = 6 + (44 * (position)) + position * 6;
        if (this.orientation === PoToasterOrientation.Top) {
            this.toaster.nativeElement.style.top = this.margin + 'px';
        }
        else {
            this.toaster.nativeElement.style.bottom = this.margin + 'px';
        }
    }
    /* Fecha o componente Toaster */
    close() {
        this.showToaster = false;
        this.observableOnClose.next(true);
    }
    /* Configura o Toaster com os atributos passados para ele */
    configToaster(poToaster) {
        this.type = poToaster.type;
        this.message = poToaster.message;
        this.orientation = poToaster.orientation;
        this.position = poToaster.position;
        this.action = poToaster.action;
        this.actionLabel = (poToaster.actionLabel) ? poToaster.actionLabel : 'Fechar';
        this.componentRef = poToaster.componentRef;
        /* Muda a orientação do Toaster */
        if (this.orientation === PoToasterOrientation.Top) {
            this.toasterPosition = 'po-toaster-top';
        }
        /* Muda a posição do Toaster */
        this.changePosition(this.position);
        /* Switch para o tipo de Toaster */
        switch (this.type) {
            case PoToasterType.Error: {
                this.toasterType = 'po-toaster-error';
                this.icon = 'po-icon-close';
                break;
            }
            case PoToasterType.Information: {
                this.toasterType = 'po-toaster-info';
                this.icon = 'po-icon-info';
                break;
            }
            case PoToasterType.Success: {
                this.toasterType = 'po-toaster-success';
                this.icon = 'po-icon-ok';
                break;
            }
            case PoToasterType.Warning: {
                this.toasterType = 'po-toaster-warning';
                this.icon = 'po-icon-warning';
                break;
            }
        }
        this.changeDetector.detectChanges();
    }
    getShowToaster() {
        return this.showToaster;
    }
    getIcon() {
        return this.icon;
    }
    getToasterPosition() {
        return this.toasterPosition;
    }
    getToasterType() {
        return this.toasterType;
    }
    /* Chama a função passada pelo atributo `action` */
    poToasterAction() {
        this.action(this);
    }
};
PoToasterComponent.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: ElementRef }
];
tslib_1.__decorate([
    ViewChild('toaster', { static: false }),
    tslib_1.__metadata("design:type", ElementRef)
], PoToasterComponent.prototype, "toaster", void 0);
PoToasterComponent = tslib_1.__decorate([
    Component({
        selector: 'po-toaster',
        template: "<div #toaster *ngIf=\"getShowToaster()\"\n  class=\"po-toaster {{ getToasterType() }} {{ getToasterPosition() }} po-clickable\"\n  (click)=\"close()\">\n\n  <div class=\"po-toaster-message\">\n    <span class=\"po-icon {{ getIcon() }}\"></span> {{ message }}\n  </div>\n\n  <div *ngIf=\"action !== undefined\" (click)=\"poToasterAction()\" class=\"po-toaster-action\">\n    {{ actionLabel }}\n  </div>\n\n</div>\n"
    }),
    tslib_1.__metadata("design:paramtypes", [ChangeDetectorRef, ElementRef])
], PoToasterComponent);
export { PoToasterComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdG9hc3Rlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcG9ydGluYXJpL3BvcnRpbmFyaS11aS8iLCJzb3VyY2VzIjpbImxpYi9zZXJ2aWNlcy9wby1ub3RpZmljYXRpb24vcG8tdG9hc3Rlci9wby10b2FzdGVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLGlCQUFpQixFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXBGLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFFL0IsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFFckUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBRXJFOzs7O0dBSUc7QUFLSCxJQUFhLGtCQUFrQixHQUEvQixNQUFhLGtCQUFtQixTQUFRLHNCQUFzQjtJQWtCNUQsWUFBbUIsY0FBaUMsRUFBVSxXQUF3QjtRQUNwRixLQUFLLEVBQUUsQ0FBQztRQURTLG1CQUFjLEdBQWQsY0FBYyxDQUFtQjtRQUFVLGdCQUFXLEdBQVgsV0FBVyxDQUFhO1FBZHRGLDJEQUEyRDtRQUNuRCxXQUFNLEdBQVcsRUFBRSxDQUFDO1FBQzVCLGtEQUFrRDtRQUMxQyxzQkFBaUIsR0FBRyxJQUFJLE9BQU8sRUFBTyxDQUFDO1FBQy9DLGdDQUFnQztRQUN4QixnQkFBVyxHQUFZLElBQUksQ0FBQztRQUNwQyx1QkFBdUI7UUFDZixvQkFBZSxHQUFXLG1CQUFtQixDQUFDO0lBU3RELENBQUM7SUFFRCxzQ0FBc0M7SUFDdEMsY0FBYyxDQUFDLFFBQWdCO1FBQzdCLElBQUksQ0FBQyxXQUFXLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO1FBRXZELElBQUksQ0FB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QUFDO0lBQzlCLENBQUM7SUFFRCxjQUFjO1FBQ1osT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDO0lBQzFCLENBQUM7SUFFRCxtREFBbUQ7SUFDbkQsZUFBZTtRQUNiLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDcEIsQ0FBQztDQUVGLENBQUE7O1lBMUZvQyxpQkFBaUI7WUFBd0IsVUFBVTs7QUFGN0M7SUFBeEMsU0FBUyxDQUFDLFNBQVMsRUFBRSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsQ0FBQztzQ0FBVSxVQUFVO21EQUFDO0FBaEJsRCxrQkFBa0I7SUFKOUIsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLFlBQVk7UUFDdEIseWFBQTBDO0tBQzNDLENBQUM7NkNBbUJtQyxpQkFBaUIsRUFBd0IsVUFBVTtHQWxCM0Usa0JBQWtCLENBNEc5QjtTQTVHWSxrQkFBa0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3RvclJlZiwgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuXG5pbXBvcnQgeyBQb1RvYXN0ZXJCYXNlQ29tcG9uZW50IH0gZnJvbSAnLi9wby10b2FzdGVyLWJhc2UuY29tcG9uZW50JztcbmltcG9ydCB7IFBvVG9hc3RlciB9IGZyb20gJy4vcG8tdG9hc3Rlci5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgUG9Ub2FzdGVyVHlwZSB9IGZyb20gJy4vcG8tdG9hc3Rlci10eXBlLmVudW0nO1xuaW1wb3J0IHsgUG9Ub2FzdGVyT3JpZW50YXRpb24gfSBmcm9tICcuL3BvLXRvYXN0ZXItb3JpZW50YXRpb24uZW51bSc7XG5cbi8qKlxuICogQGRvY3NQcml2YXRlXG4gKlxuICogQGRvY3NFeHRlbmRzIFBvVG9hc3RlckJhc2VDb21wb25lbnRcbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG8tdG9hc3RlcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9wby10b2FzdGVyLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBQb1RvYXN0ZXJDb21wb25lbnQgZXh0ZW5kcyBQb1RvYXN0ZXJCYXNlQ29tcG9uZW50IHtcblxuICAvKiDDjWNvbmUgZG8gVG9hc3RlciAqL1xuICBwcml2YXRlIGljb246IHN0cmluZztcbiAgLyogTWFyZ2VtIGRvIFRvYXN0ZXIgcmVmZXLDqm50ZSDDoCBzdWEgb3JpZW50YcOnw6NvIGUgcG9zacOnw6NvKi9cbiAgcHJpdmF0ZSBtYXJnaW46IG51bWJlciA9IDIwO1xuICAvKiBPYnNlcnZhYmxlIHBhcmEgbW9uaXRvcmFyIG8gQ2xvc2UgdG8gVG9hc3RlciAqL1xuICBwcml2YXRlIG9ic2VydmFibGVPbkNsb3NlID0gbmV3IFN1YmplY3Q8YW55PigpO1xuICAvKiBNb3N0cmEgb3Ugb2N1bHRhIG8gVG9hc3RlciAqL1xuICBwcml2YXRlIHNob3dUb2FzdGVyOiBib29sZWFuID0gdHJ1ZTtcbiAgLyogUG9zacOnw6NvIGRvIFRvYXN0ZXIqL1xuICBwcml2YXRlIHRvYXN0ZXJQb3NpdGlvbjogc3RyaW5nID0gJ3BvLXRvYXN0ZXItYm90dG9tJztcbiAgLyogVGlwbyBkbyBUb2FzdGVyICovXG4gIHByaXZhdGUgdG9hc3RlclR5cGU6IHN0cmluZztcblxuICAvKiBDb21wb25lbnRlIHRvYXN0ZXIgKi9cbiAgQFZpZXdDaGlsZCgndG9hc3RlcicsIHsgc3RhdGljOiBmYWxzZSB9KSB0b2FzdGVyOiBFbGVtZW50UmVmO1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBjaGFuZ2VEZXRlY3RvcjogQ2hhbmdlRGV0ZWN0b3JSZWYsIHByaXZhdGUgZWxlbWVudGVSZWY/OiBFbGVtZW50UmVmKSB7XG4gICAgc3VwZXIoKTtcbiAgfVxuXG4gIC8qIE11ZGEgYSBwb3Npw6fDo28gZG8gVG9hc3RlciBuYSB0ZWxhKi9cbiAgY2hhbmdlUG9zaXRpb24ocG9zaXRpb246IG51bWJlcik6IHZvaWQge1xuICAgIHRoaXMuZWxlbWVudGVSZWYubmF0aXZlRWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ3RhYmxlJztcblxuICAgIHRoaXMubWFyZ2luID0gNiArICg0NCAqIChwb3NpdGlvbikpICsgcG9zaXRpb24gKiA2O1xuXG4gICAgaWYgKHRoaXMub3JpZW50YXRpb24gPT09IFBvVG9hc3Rlck9yaWVudGF0aW9uLlRvcCkge1xuICAgICAgdGhpcy50b2FzdGVyLm5hdGl2ZUVsZW1lbnQuc3R5bGUudG9wID0gdGhpcy5tYXJnaW4gKyAncHgnO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnRvYXN0ZXIubmF0aXZlRWxlbWVudC5zdHlsZS5ib3R0b20gPSB0aGlzLm1hcmdpbiArICdweCc7XG4gICAgfVxuXG4gIH1cblxuICAvKiBGZWNoYSBvIGNvbXBvbmVudGUgVG9hc3RlciAqL1xuICBjbG9zZSgpOiB2b2lkIHtcbiAgICB0aGlzLnNob3dUb2FzdGVyID0gZmFsc2U7XG4gICAgdGhpcy5vYnNlcnZhYmxlT25DbG9zZS5uZXh0KHRydWUpO1xuICB9XG5cbiAgLyogQ29uZmlndXJhIG8gVG9hc3RlciBjb20gb3MgYXRyaWJ1dG9zIHBhc3NhZG9zIHBhcmEgZWxlICovXG4gIGNvbmZpZ1RvYXN0ZXIocG9Ub2FzdGVyOiBQb1RvYXN0ZXIpIHtcbiAgICB0aGlzLnR5cGUgPSBwb1RvYXN0ZXIudHlwZTtcbiAgICB0aGlzLm1lc3NhZ2UgPSBwb1RvYXN0ZXIubWVzc2FnZTtcbiAgICB0aGlzLm9yaWVudGF0aW9uID0gcG9Ub2FzdGVyLm9yaWVudGF0aW9uO1xuICAgIHRoaXMucG9zaXRpb24gPSBwb1RvYXN0ZXIucG9zaXRpb247XG4gICAgdGhpcy5hY3Rpb24gPSBwb1RvYXN0ZXIuYWN0aW9uO1xuICAgIHRoaXMuYWN0aW9uTGFiZWwgPSAocG9Ub2FzdGVyLmFjdGlvbkxhYmVsKSA/IHBvVG9hc3Rlci5hY3Rpb25MYWJlbCA6ICdGZWNoYXInO1xuICAgIHRoaXMuY29tcG9uZW50UmVmID0gcG9Ub2FzdGVyLmNvbXBvbmVudFJlZjtcblxuICAgIC8qIE11ZGEgYSBvcmllbnRhw6fDo28gZG8gVG9hc3RlciAqL1xuICAgIGlmICh0aGlzLm9yaWVudGF0aW9uID09PSBQb1RvYXN0ZXJPcmllbnRhdGlvbi5Ub3ApIHtcbiAgICAgIHRoaXMudG9hc3RlclBvc2l0aW9uID0gJ3BvLXRvYXN0ZXItdG9wJztcbiAgICB9XG5cbiAgICAvKiBNdWRhIGEgcG9zacOnw6NvIGRvIFRvYXN0ZXIgKi9cbiAgICB0aGlzLmNoYW5nZVBvc2l0aW9uKHRoaXMucG9zaXRpb24pO1xuXG4gICAgLyogU3dpdGNoIHBhcmEgbyB0aXBvIGRlIFRvYXN0ZXIgKi9cbiAgICBzd2l0Y2ggKHRoaXMudHlwZSkge1xuICAgICAgY2FzZSBQb1RvYXN0ZXJUeXBlLkVycm9yOiB7XG4gICAgICAgIHRoaXMudG9hc3RlclR5cGUgPSAncG8tdG9hc3Rlci1lcnJvcic7XG4gICAgICAgIHRoaXMuaWNvbiA9ICdwby1pY29uLWNsb3NlJztcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlIFBvVG9hc3RlclR5cGUuSW5mb3JtYXRpb246IHtcbiAgICAgICAgdGhpcy50b2FzdGVyVHlwZSA9ICdwby10b2FzdGVyLWluZm8nO1xuICAgICAgICB0aGlzLmljb24gPSAncG8taWNvbi1pbmZvJztcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlIFBvVG9hc3RlclR5cGUuU3VjY2Vzczoge1xuICAgICAgICB0aGlzLnRvYXN0ZXJUeXBlID0gJ3BvLXRvYXN0ZXItc3VjY2Vzcyc7XG4gICAgICAgIHRoaXMuaWNvbiA9ICdwby1pY29uLW9rJztcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlIFBvVG9hc3RlclR5cGUuV2FybmluZzoge1xuICAgICAgICB0aGlzLnRvYXN0ZXJUeXBlID0gJ3BvLXRvYXN0ZXItd2FybmluZyc7XG4gICAgICAgIHRoaXMuaWNvbiA9ICdwby1pY29uLXdhcm5pbmcnO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG5cbiAgICB0aGlzLmNoYW5nZURldGVjdG9yLmRldGVjdENoYW5nZXMoKTtcbiAgfVxuXG4gIGdldFNob3dUb2FzdGVyKCkge1xuICAgIHJldHVybiB0aGlzLnNob3dUb2FzdGVyO1xuICB9XG5cbiAgZ2V0SWNvbigpIHtcbiAgICByZXR1cm4gdGhpcy5pY29uO1xuICB9XG5cbiAgZ2V0VG9hc3RlclBvc2l0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLnRvYXN0ZXJQb3NpdGlvbjtcbiAgfVxuXG4gIGdldFRvYXN0ZXJUeXBlKCkge1xuICAgIHJldHVybiB0aGlzLnRvYXN0ZXJUeXBlO1xuICB9XG5cbiAgLyogQ2hhbWEgYSBmdW7Dp8OjbyBwYXNzYWRhIHBlbG8gYXRyaWJ1dG8gYGFjdGlvbmAgKi9cbiAgcG9Ub2FzdGVyQWN0aW9uKCk6IHZvaWQge1xuICAgIHRoaXMuYWN0aW9uKHRoaXMpO1xuICB9XG5cbn1cbiJdfQ==