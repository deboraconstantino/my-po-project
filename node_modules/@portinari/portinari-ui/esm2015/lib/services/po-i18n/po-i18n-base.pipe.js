/**
 * @description
 *
 * O pipe po-i18n é responsável por tratar literais parâmetrizadas, dando mais flexibilidade as literais de tradução.
 * O número de parâmetros inseridos nas literais deve coincidir com a quantia de parâmetros passados por parâmetro,
 * os parâmetros serão substituidos de acordo com a ordem informada.
 *
 * Para inserir um parâmetro em uma literal, o mesmo deverá ser inserido entre chaves dentro da literal e posicionado
 * de acordo como deve ser exibido após a sua transformação.
 *
 * ```
 * const i18nPT = {
 *   pagination: 'Página {1} de {2} páginas.',
 *   totalPages: 'Total de {totalPages} encontradas.'
 * };
 * ```
 *
 * É possível passar um valor ou um array de valores para o pipe, caso seja passado um array, os valores devem obedecer a ordem
 * informada na literal.
 *
 * ```
 * {{ i18nPT.pagination | poI18n:[1,10] }}
 * {{ i18nPT.totalPages | poI18n:10 }}
 * ```
 */
export class PoI18nBasePipe {
    transform(value, args) {
        if (!value) {
            return '';
        }
        if (!(args instanceof Array)) {
            args = [args];
        }
        for (const arg of args) {
            value = value.replace(/(\{\w*\})+/, arg);
        }
        return value;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8taTE4bi1iYXNlLnBpcGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcG9ydGluYXJpL3BvcnRpbmFyaS11aS8iLCJzb3VyY2VzIjpbImxpYi9zZXJ2aWNlcy9wby1pMThuL3BvLWkxOG4tYmFzZS5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0F3Qkc7QUFDSCxNQUFNLE9BQU8sY0FBYztJQUV6QixTQUFTLENBQUMsS0FBYSxFQUFFLElBQVM7UUFDaEMsSUFBSSxDQUFDLEtBQUssRUFBRTtZQUNWLE9BQU8sRUFBRSxDQUFDO1NBQ1g7UUFFRCxJQUFJLENBQUMsQ0FBQyxJQUFJLFlBQVksS0FBSyxDQUFDLEVBQUU7WUFDNUIsSUFBSSxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDZjtRQUVELEtBQUssTUFBTSxHQUFHLElBQUksSUFBSSxFQUFFO1lBQ3RCLEtBQUssR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLFlBQVksRUFBRyxHQUFHLENBQUMsQ0FBQztTQUMzQztRQUVELE9BQU8sS0FBSyxDQUFDO0lBQ2YsQ0FBQztDQUVGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZVRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG4vKipcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIE8gcGlwZSBwby1pMThuIMOpIHJlc3BvbnPDoXZlbCBwb3IgdHJhdGFyIGxpdGVyYWlzIHBhcsOibWV0cml6YWRhcywgZGFuZG8gbWFpcyBmbGV4aWJpbGlkYWRlIGFzIGxpdGVyYWlzIGRlIHRyYWR1w6fDo28uXG4gKiBPIG7Dum1lcm8gZGUgcGFyw6JtZXRyb3MgaW5zZXJpZG9zIG5hcyBsaXRlcmFpcyBkZXZlIGNvaW5jaWRpciBjb20gYSBxdWFudGlhIGRlIHBhcsOibWV0cm9zIHBhc3NhZG9zIHBvciBwYXLDom1ldHJvLFxuICogb3MgcGFyw6JtZXRyb3Mgc2Vyw6NvIHN1YnN0aXR1aWRvcyBkZSBhY29yZG8gY29tIGEgb3JkZW0gaW5mb3JtYWRhLlxuICpcbiAqIFBhcmEgaW5zZXJpciB1bSBwYXLDom1ldHJvIGVtIHVtYSBsaXRlcmFsLCBvIG1lc21vIGRldmVyw6Egc2VyIGluc2VyaWRvIGVudHJlIGNoYXZlcyBkZW50cm8gZGEgbGl0ZXJhbCBlIHBvc2ljaW9uYWRvXG4gKiBkZSBhY29yZG8gY29tbyBkZXZlIHNlciBleGliaWRvIGFww7NzIGEgc3VhIHRyYW5zZm9ybWHDp8Ojby5cbiAqXG4gKiBgYGBcbiAqIGNvbnN0IGkxOG5QVCA9IHtcbiAqICAgcGFnaW5hdGlvbjogJ1DDoWdpbmEgezF9IGRlIHsyfSBww6FnaW5hcy4nLFxuICogICB0b3RhbFBhZ2VzOiAnVG90YWwgZGUge3RvdGFsUGFnZXN9IGVuY29udHJhZGFzLidcbiAqIH07XG4gKiBgYGBcbiAqXG4gKiDDiSBwb3Nzw612ZWwgcGFzc2FyIHVtIHZhbG9yIG91IHVtIGFycmF5IGRlIHZhbG9yZXMgcGFyYSBvIHBpcGUsIGNhc28gc2VqYSBwYXNzYWRvIHVtIGFycmF5LCBvcyB2YWxvcmVzIGRldmVtIG9iZWRlY2VyIGEgb3JkZW1cbiAqIGluZm9ybWFkYSBuYSBsaXRlcmFsLlxuICpcbiAqIGBgYFxuICoge3sgaTE4blBULnBhZ2luYXRpb24gfCBwb0kxOG46WzEsMTBdIH19XG4gKiB7eyBpMThuUFQudG90YWxQYWdlcyB8IHBvSTE4bjoxMCB9fVxuICogYGBgXG4gKi9cbmV4cG9ydCBjbGFzcyBQb0kxOG5CYXNlUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xuXG4gIHRyYW5zZm9ybSh2YWx1ZTogc3RyaW5nLCBhcmdzOiBhbnkpOiBzdHJpbmcge1xuICAgIGlmICghdmFsdWUpIHtcbiAgICAgIHJldHVybiAnJztcbiAgICB9XG5cbiAgICBpZiAoIShhcmdzIGluc3RhbmNlb2YgQXJyYXkpKSB7XG4gICAgICBhcmdzID0gW2FyZ3NdO1xuICAgIH1cblxuICAgIGZvciAoY29uc3QgYXJnIG9mIGFyZ3MpIHtcbiAgICAgIHZhbHVlID0gdmFsdWUucmVwbGFjZSgvKFxce1xcdypcXH0pKy8sICBhcmcpO1xuICAgIH1cblxuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuXG59XG4iXX0=