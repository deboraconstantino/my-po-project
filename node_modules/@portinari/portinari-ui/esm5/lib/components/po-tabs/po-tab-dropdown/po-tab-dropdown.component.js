import * as tslib_1 from "tslib";
import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { PoPopoverComponent } from '../../po-popover/po-popover.component';
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente para agrupamento de componentes `po-tab-button` que os rendereiza em uma um caixa de diálogo
 * no formato de lista.
 */
var PoTabDropdownComponent = /** @class */ (function () {
    function PoTabDropdownComponent() {
        // Lista de abas
        this.tabs = [];
        // Evento que será emitido ao ativar uma aba
        this.activated = new EventEmitter();
        // Evento que será emitido a aba for desabilitada ou ocultada
        this.changeState = new EventEmitter();
        // Evento de click
        this.click = new EventEmitter();
    }
    PoTabDropdownComponent.prototype.getContainerClass = function () {
        return this.small ? 'po-tab-dropdown-container-sm' : 'po-tab-dropdown-container';
    };
    PoTabDropdownComponent.prototype.togglePopover = function () {
        this.popover.isHidden ? this.popover.open() : this.popover.close();
    };
    tslib_1.__decorate([
        ViewChild('popover', { static: true }),
        tslib_1.__metadata("design:type", PoPopoverComponent)
    ], PoTabDropdownComponent.prototype, "popover", void 0);
    tslib_1.__decorate([
        ViewChild('tabDrop', { read: ElementRef, static: true }),
        tslib_1.__metadata("design:type", ElementRef)
    ], PoTabDropdownComponent.prototype, "tabDropdown", void 0);
    tslib_1.__decorate([
        Input('p-label'),
        tslib_1.__metadata("design:type", String)
    ], PoTabDropdownComponent.prototype, "label", void 0);
    tslib_1.__decorate([
        Input('p-small'),
        tslib_1.__metadata("design:type", Boolean)
    ], PoTabDropdownComponent.prototype, "small", void 0);
    tslib_1.__decorate([
        Input('p-tabs'),
        tslib_1.__metadata("design:type", Array)
    ], PoTabDropdownComponent.prototype, "tabs", void 0);
    tslib_1.__decorate([
        Output('p-activated'),
        tslib_1.__metadata("design:type", Object)
    ], PoTabDropdownComponent.prototype, "activated", void 0);
    tslib_1.__decorate([
        Output('p-change-state'),
        tslib_1.__metadata("design:type", Object)
    ], PoTabDropdownComponent.prototype, "changeState", void 0);
    tslib_1.__decorate([
        Output('p-click'),
        tslib_1.__metadata("design:type", Object)
    ], PoTabDropdownComponent.prototype, "click", void 0);
    PoTabDropdownComponent = tslib_1.__decorate([
        Component({
            selector: 'po-tab-dropdown',
            template: "<div #tabDrop\n  class=\"po-tab-dropdown-content po-tab-button-md\"\n  [attr.tabindex]=\"0\"\n  [class.po-tab-button-sm]=\"small\"\n  (keyup.enter)=\"togglePopover()\">\n  <div class=\"po-tab-button-label\">\n    {{ label }}\n    <span class=\"po-icon\" [ngClass]=\"(popover.isHidden ? 'po-icon-arrow-down' : 'po-icon-arrow-up')\">\n    </span>\n  </div>\n</div>\n\n<po-popover #popover\n  p-hide-arrow\n  p-position=\"bottom\"\n  [p-target]=\"tabDropdown\">\n\n  <div [ngClass]=\"getContainerClass()\">\n    <po-tab-button *ngFor=\"let tab of tabs\"\n      class=\"po-tab-dropdown-button\"\n      [class.po-tab-dropdown-button-active]=\"tab.active\"\n      [p-active]=\"tab.active\"\n      [p-disabled]=\"tab.disabled\"\n      [p-hide]=\"tab.hide\"\n      [p-id]=\"tab.id\"\n      [p-label]=\"tab.label\"\n      [p-small]=\"small\"\n      (p-activated)=\"activated.emit(tab)\"\n      (p-change-state)=\"changeState.emit(tab)\"\n      (p-click)=\"popover.close();click.emit(tab);\">\n    </po-tab-button>\n  </div>\n\n</po-popover>\n"
        })
    ], PoTabDropdownComponent);
    return PoTabDropdownComponent;
}());
export { PoTabDropdownComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdGFiLWRyb3Bkb3duLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwb3J0aW5hcmkvcG9ydGluYXJpLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tdGFicy9wby10YWItZHJvcGRvd24vcG8tdGFiLWRyb3Bkb3duLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTlGLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBRzNFOzs7Ozs7O0dBT0c7QUFLSDtJQUpBO1FBZUUsZ0JBQWdCO1FBQ0MsU0FBSSxHQUEwQixFQUFFLENBQUM7UUFFbEQsNENBQTRDO1FBQ3JCLGNBQVMsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO1FBRTNELDZEQUE2RDtRQUNuQyxnQkFBVyxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7UUFFaEUsa0JBQWtCO1FBQ0MsVUFBSyxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7SUFVckQsQ0FBQztJQVJDLGtEQUFpQixHQUFqQjtRQUNFLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsOEJBQThCLENBQUMsQ0FBQyxDQUFDLDJCQUEyQixDQUFDO0lBQ25GLENBQUM7SUFFRCw4Q0FBYSxHQUFiO1FBQ0UsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDckUsQ0FBQztJQTNCdUM7UUFBdkMsU0FBUyxDQUFDLFNBQVMsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsQ0FBQzswQ0FBVSxrQkFBa0I7MkRBQUM7SUFDVjtRQUF6RCxTQUFTLENBQUMsU0FBUyxFQUFFLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLENBQUM7MENBQWMsVUFBVTsrREFBQztJQUdoRTtRQUFqQixLQUFLLENBQUMsU0FBUyxDQUFDOzt5REFBZTtJQUdkO1FBQWpCLEtBQUssQ0FBQyxTQUFTLENBQUM7O3lEQUFnQjtJQUdoQjtRQUFoQixLQUFLLENBQUMsUUFBUSxDQUFDOzBDQUFPLEtBQUs7d0RBQXNCO0lBRzNCO1FBQXRCLE1BQU0sQ0FBQyxhQUFhLENBQUM7OzZEQUFxQztJQUdqQztRQUF6QixNQUFNLENBQUMsZ0JBQWdCLENBQUM7OytEQUF1QztJQUc3QztRQUFsQixNQUFNLENBQUMsU0FBUyxDQUFDOzt5REFBaUM7SUFyQnhDLHNCQUFzQjtRQUpsQyxTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsaUJBQWlCO1lBQzNCLHFoQ0FBK0M7U0FDaEQsQ0FBQztPQUNXLHNCQUFzQixDQStCbEM7SUFBRCw2QkFBQztDQUFBLEFBL0JELElBK0JDO1NBL0JZLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0LCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgUG9Qb3BvdmVyQ29tcG9uZW50IH0gZnJvbSAnLi4vLi4vcG8tcG9wb3Zlci9wby1wb3BvdmVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQb1RhYkNvbXBvbmVudCB9IGZyb20gJy4uL3BvLXRhYi9wby10YWIuY29tcG9uZW50JztcblxuLyoqXG4gKiBAZG9jc1ByaXZhdGVcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBDb21wb25lbnRlIHBhcmEgYWdydXBhbWVudG8gZGUgY29tcG9uZW50ZXMgYHBvLXRhYi1idXR0b25gIHF1ZSBvcyByZW5kZXJlaXphIGVtIHVtYSB1bSBjYWl4YSBkZSBkacOhbG9nb1xuICogbm8gZm9ybWF0byBkZSBsaXN0YS5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG8tdGFiLWRyb3Bkb3duJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3BvLXRhYi1kcm9wZG93bi5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgUG9UYWJEcm9wZG93bkNvbXBvbmVudCB7XG5cbiAgQFZpZXdDaGlsZCgncG9wb3ZlcicsIHsgc3RhdGljOiB0cnVlIH0pIHBvcG92ZXI6IFBvUG9wb3ZlckNvbXBvbmVudDtcbiAgQFZpZXdDaGlsZCgndGFiRHJvcCcsIHsgcmVhZDogRWxlbWVudFJlZiwgc3RhdGljOiB0cnVlIH0pIHRhYkRyb3Bkb3duOiBFbGVtZW50UmVmO1xuXG4gIC8vIFLDs3R1bG8gZG8gYHBvLXRhYi1idXR0b25gXG4gIEBJbnB1dCgncC1sYWJlbCcpIGxhYmVsOiBzdHJpbmc7XG5cbiAgLy8gRGltaW51aSBvIHRhbWFuaG8gZG8gYm90w6NvXG4gIEBJbnB1dCgncC1zbWFsbCcpIHNtYWxsOiBib29sZWFuO1xuXG4gIC8vIExpc3RhIGRlIGFiYXNcbiAgQElucHV0KCdwLXRhYnMnKSB0YWJzOiBBcnJheTxQb1RhYkNvbXBvbmVudD4gPSBbXTtcblxuICAvLyBFdmVudG8gcXVlIHNlcsOhIGVtaXRpZG8gYW8gYXRpdmFyIHVtYSBhYmFcbiAgQE91dHB1dCgncC1hY3RpdmF0ZWQnKSBhY3RpdmF0ZWQgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxuICAvLyBFdmVudG8gcXVlIHNlcsOhIGVtaXRpZG8gYSBhYmEgZm9yIGRlc2FiaWxpdGFkYSBvdSBvY3VsdGFkYVxuICBAT3V0cHV0KCdwLWNoYW5nZS1zdGF0ZScpIGNoYW5nZVN0YXRlID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG5cbiAgLy8gRXZlbnRvIGRlIGNsaWNrXG4gIEBPdXRwdXQoJ3AtY2xpY2snKSBjbGljayA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuXG4gIGdldENvbnRhaW5lckNsYXNzKCkge1xuICAgIHJldHVybiB0aGlzLnNtYWxsID8gJ3BvLXRhYi1kcm9wZG93bi1jb250YWluZXItc20nIDogJ3BvLXRhYi1kcm9wZG93bi1jb250YWluZXInO1xuICB9XG5cbiAgdG9nZ2xlUG9wb3ZlcigpOiB2b2lkIHtcbiAgICB0aGlzLnBvcG92ZXIuaXNIaWRkZW4gPyB0aGlzLnBvcG92ZXIub3BlbigpIDogdGhpcy5wb3BvdmVyLmNsb3NlKCk7XG4gIH1cblxufVxuIl19