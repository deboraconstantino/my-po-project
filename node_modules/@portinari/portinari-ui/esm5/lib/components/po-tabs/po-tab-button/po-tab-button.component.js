import * as tslib_1 from "tslib";
import { Component, ElementRef, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';
import { convertToBoolean } from '../../../utils/util';
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente responsável por manipular os botões de aba.
 */
var PoTabButtonComponent = /** @class */ (function () {
    function PoTabButtonComponent(elementRef) {
        this.elementRef = elementRef;
        // Função sera emitida quando a tab ficar ativada
        this.activated = new EventEmitter();
        // Função sera emitida quando a tab ficar desabilitada ou escondida
        this.changeState = new EventEmitter();
        // Método recebido do usuário para ser disparado quando clicar na aba
        this.click = new EventEmitter();
    }
    Object.defineProperty(PoTabButtonComponent.prototype, "active", {
        get: function () {
            return this._active;
        },
        // Ativa o botão
        set: function (value) {
            this._active = value;
            this.emitActivated();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoTabButtonComponent.prototype, "hide", {
        get: function () {
            return this._hide;
        },
        // Oculta o botão
        set: function (value) {
            this._hide = convertToBoolean(value);
            this.setDisplayOnHide();
        },
        enumerable: true,
        configurable: true
    });
    PoTabButtonComponent.prototype.ngOnChanges = function (changes) {
        if ((changes.hide && changes.hide.currentValue) || (changes.disabled && changes.disabled.currentValue)) {
            this.changeState.emit(this);
        }
    };
    PoTabButtonComponent.prototype.onClick = function () {
        if (!this.disabled) {
            this.click.emit(this.id);
        }
    };
    PoTabButtonComponent.prototype.emitActivated = function () {
        if (this.active) {
            this.activated.emit(this);
        }
    };
    PoTabButtonComponent.prototype.setDisplayOnHide = function () {
        this.elementRef.nativeElement.style.display = this.hide ? 'none' : '';
    };
    PoTabButtonComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    tslib_1.__decorate([
        Input('p-active'),
        tslib_1.__metadata("design:type", Boolean),
        tslib_1.__metadata("design:paramtypes", [Boolean])
    ], PoTabButtonComponent.prototype, "active", null);
    tslib_1.__decorate([
        Input('p-disabled'),
        tslib_1.__metadata("design:type", Boolean)
    ], PoTabButtonComponent.prototype, "disabled", void 0);
    tslib_1.__decorate([
        Input('p-hide'),
        tslib_1.__metadata("design:type", Boolean),
        tslib_1.__metadata("design:paramtypes", [Boolean])
    ], PoTabButtonComponent.prototype, "hide", null);
    tslib_1.__decorate([
        Input('p-id'),
        tslib_1.__metadata("design:type", String)
    ], PoTabButtonComponent.prototype, "id", void 0);
    tslib_1.__decorate([
        Input('p-label'),
        tslib_1.__metadata("design:type", String)
    ], PoTabButtonComponent.prototype, "label", void 0);
    tslib_1.__decorate([
        Input('p-small'),
        tslib_1.__metadata("design:type", Boolean)
    ], PoTabButtonComponent.prototype, "small", void 0);
    tslib_1.__decorate([
        Output('p-activated'),
        tslib_1.__metadata("design:type", Object)
    ], PoTabButtonComponent.prototype, "activated", void 0);
    tslib_1.__decorate([
        Output('p-change-state'),
        tslib_1.__metadata("design:type", Object)
    ], PoTabButtonComponent.prototype, "changeState", void 0);
    tslib_1.__decorate([
        Output('p-click'),
        tslib_1.__metadata("design:type", Object)
    ], PoTabButtonComponent.prototype, "click", void 0);
    PoTabButtonComponent = tslib_1.__decorate([
        Component({
            selector: 'po-tab-button',
            template: "<div\n  class=\"po-tab-button-md\"\n  [attr.tabindex]=\"disabled ? null : 0\"\n  [class.po-tab-button-active]=\"active\"\n  [class.po-tab-button-disabled]=\"disabled\"\n  [class.po-tab-button-sm]=\"small\"\n  (click)=\"onClick()\"\n  (keyup.enter)=\"onClick()\">\n\n  <span class=\"po-tab-button-label po-text-ellipsis\">\n    {{label}}\n  </span>\n</div>\n"
        }),
        tslib_1.__metadata("design:paramtypes", [ElementRef])
    ], PoTabButtonComponent);
    return PoTabButtonComponent;
}());
export { PoTabButtonComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdGFiLWJ1dHRvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcG9ydGluYXJpL3BvcnRpbmFyaS11aS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3BvLXRhYnMvcG8tdGFiLWJ1dHRvbi9wby10YWItYnV0dG9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLGFBQWEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUU3RyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUV2RDs7Ozs7O0dBTUc7QUFLSDtJQWdERSw4QkFBb0IsVUFBc0I7UUFBdEIsZUFBVSxHQUFWLFVBQVUsQ0FBWTtRQVQxQyxpREFBaUQ7UUFDMUIsY0FBUyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFFdEQsbUVBQW1FO1FBQ3pDLGdCQUFXLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUUzRCxxRUFBcUU7UUFDbEQsVUFBSyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7SUFFQSxDQUFDO0lBMUM1QixzQkFBSSx3Q0FBTTthQU03QjtZQUNFLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztRQUN0QixDQUFDO1FBVEQsZ0JBQWdCO2FBQ0csVUFBVyxLQUFjO1lBQzFDLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO1lBRXJCLElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztRQUN2QixDQUFDOzs7T0FBQTtJQVVnQixzQkFBSSxzQ0FBSTthQU16QjtZQUNFLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztRQUNwQixDQUFDO1FBVEQsaUJBQWlCO2FBQ0EsVUFBUyxLQUFjO1lBQ3RDLElBQUksQ0FBQyxLQUFLLEdBQUcsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLENBQUM7WUFFckMsSUFBSSxDQUFDLGdCQUFnQixFQUFFLENBQUM7UUFDMUIsQ0FBQzs7O09BQUE7SUEwQkQsMENBQVcsR0FBWCxVQUFZLE9BQXNCO1FBQ2hDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxJQUFJLE9BQU8sQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxJQUFJLE9BQU8sQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLEVBQUU7WUFDdEcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDN0I7SUFDSCxDQUFDO0lBRUQsc0NBQU8sR0FBUDtRQUNFLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ2xCLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztTQUMxQjtJQUNILENBQUM7SUFFTyw0Q0FBYSxHQUFyQjtRQUNFLElBQUksSUFBSSxDQUFDLE1BQU0sRUFBRTtZQUNmLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQzNCO0lBQ0gsQ0FBQztJQUVPLCtDQUFnQixHQUF4QjtRQUNFLElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7SUFDeEUsQ0FBQzs7Z0JBdEIrQixVQUFVOztJQTFDdkI7UUFBbEIsS0FBSyxDQUFDLFVBQVUsQ0FBQzs7O3NEQUlqQjtJQU9vQjtRQUFwQixLQUFLLENBQUMsWUFBWSxDQUFDOzswREFBbUI7SUFHdEI7UUFBaEIsS0FBSyxDQUFDLFFBQVEsQ0FBQzs7O29EQUlmO0lBT2M7UUFBZCxLQUFLLENBQUMsTUFBTSxDQUFDOztvREFBWTtJQUdSO1FBQWpCLEtBQUssQ0FBQyxTQUFTLENBQUM7O3VEQUFlO0lBR2Q7UUFBakIsS0FBSyxDQUFDLFNBQVMsQ0FBQzs7dURBQWdCO0lBR1Y7UUFBdEIsTUFBTSxDQUFDLGFBQWEsQ0FBQzs7MkRBQWdDO0lBRzVCO1FBQXpCLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQzs7NkRBQWtDO0lBR3hDO1FBQWxCLE1BQU0sQ0FBQyxTQUFTLENBQUM7O3VEQUE0QjtJQTlDbkMsb0JBQW9CO1FBSmhDLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxlQUFlO1lBQ3pCLGlYQUE2QztTQUM5QyxDQUFDO2lEQWlEZ0MsVUFBVTtPQWhEL0Isb0JBQW9CLENBd0VoQztJQUFELDJCQUFDO0NBQUEsQUF4RUQsSUF3RUM7U0F4RVksb0JBQW9CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBFdmVudEVtaXR0ZXIsIElucHV0LCBPbkNoYW5nZXMsIE91dHB1dCwgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBjb252ZXJ0VG9Cb29sZWFuIH0gZnJvbSAnLi4vLi4vLi4vdXRpbHMvdXRpbCc7XG5cbi8qKlxuICogQGRvY3NQcml2YXRlXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogQ29tcG9uZW50ZSByZXNwb25zw6F2ZWwgcG9yIG1hbmlwdWxhciBvcyBib3TDtWVzIGRlIGFiYS5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG8tdGFiLWJ1dHRvbicsXG4gIHRlbXBsYXRlVXJsOiAnLi9wby10YWItYnV0dG9uLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBQb1RhYkJ1dHRvbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uQ2hhbmdlcyB7XG5cbiAgcHJpdmF0ZSBfYWN0aXZlOiBib29sZWFuO1xuICBwcml2YXRlIF9oaWRlOiBib29sZWFuO1xuXG4gIC8vIEF0aXZhIG8gYm90w6NvXG4gIEBJbnB1dCgncC1hY3RpdmUnKSBzZXQgYWN0aXZlKHZhbHVlOiBib29sZWFuKSB7XG4gICAgdGhpcy5fYWN0aXZlID0gdmFsdWU7XG5cbiAgICB0aGlzLmVtaXRBY3RpdmF0ZWQoKTtcbiAgfVxuXG4gIGdldCBhY3RpdmUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2FjdGl2ZTtcbiAgfVxuXG4gIC8vIERlc2FiaWxpdGEgbyBib3TDo29cbiAgQElucHV0KCdwLWRpc2FibGVkJykgZGlzYWJsZWQ6IGJvb2xlYW47XG5cbiAgLy8gT2N1bHRhIG8gYm90w6NvXG4gIEBJbnB1dCgncC1oaWRlJykgc2V0IGhpZGUodmFsdWU6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9oaWRlID0gY29udmVydFRvQm9vbGVhbih2YWx1ZSk7XG5cbiAgICB0aGlzLnNldERpc3BsYXlPbkhpZGUoKTtcbiAgfVxuXG4gIGdldCBoaWRlKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLl9oaWRlO1xuICB9XG5cbiAgLy8gSWRlbnRpZmljYWRvciBkbyBjb21wb25lbnRlXG4gIEBJbnB1dCgncC1pZCcpIGlkOiBzdHJpbmc7XG5cbiAgLy8gUsOzdHVsbyBkbyBib3TDo29cbiAgQElucHV0KCdwLWxhYmVsJykgbGFiZWw6IHN0cmluZztcblxuICAvLyBEaW1pbnVpIG8gdGFtYW5obyBkbyBib3TDo29cbiAgQElucHV0KCdwLXNtYWxsJykgc21hbGw6IGJvb2xlYW47XG5cbiAgLy8gRnVuw6fDo28gc2VyYSBlbWl0aWRhIHF1YW5kbyBhIHRhYiBmaWNhciBhdGl2YWRhXG4gIEBPdXRwdXQoJ3AtYWN0aXZhdGVkJykgYWN0aXZhdGVkID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIC8vIEZ1bsOnw6NvIHNlcmEgZW1pdGlkYSBxdWFuZG8gYSB0YWIgZmljYXIgZGVzYWJpbGl0YWRhIG91IGVzY29uZGlkYVxuICBAT3V0cHV0KCdwLWNoYW5nZS1zdGF0ZScpIGNoYW5nZVN0YXRlID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIC8vIE3DqXRvZG8gcmVjZWJpZG8gZG8gdXN1w6FyaW8gcGFyYSBzZXIgZGlzcGFyYWRvIHF1YW5kbyBjbGljYXIgbmEgYWJhXG4gIEBPdXRwdXQoJ3AtY2xpY2snKSBjbGljayA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpIHsgfVxuXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcbiAgICBpZiAoKGNoYW5nZXMuaGlkZSAmJiBjaGFuZ2VzLmhpZGUuY3VycmVudFZhbHVlKSB8fCAoY2hhbmdlcy5kaXNhYmxlZCAmJiBjaGFuZ2VzLmRpc2FibGVkLmN1cnJlbnRWYWx1ZSkpIHtcbiAgICAgIHRoaXMuY2hhbmdlU3RhdGUuZW1pdCh0aGlzKTtcbiAgICB9XG4gIH1cblxuICBvbkNsaWNrKCkge1xuICAgIGlmICghdGhpcy5kaXNhYmxlZCkge1xuICAgICAgdGhpcy5jbGljay5lbWl0KHRoaXMuaWQpO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgZW1pdEFjdGl2YXRlZCgpIHtcbiAgICBpZiAodGhpcy5hY3RpdmUpIHtcbiAgICAgIHRoaXMuYWN0aXZhdGVkLmVtaXQodGhpcyk7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBzZXREaXNwbGF5T25IaWRlKCkge1xuICAgIHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LnN0eWxlLmRpc3BsYXkgPSB0aGlzLmhpZGUgPyAnbm9uZScgOiAnJztcbiAgfVxuXG59XG4iXX0=