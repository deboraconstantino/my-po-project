import * as tslib_1 from "tslib";
import { Component, Input } from '@angular/core';
import { PoBreadcrumbFavoriteService } from './po-breadcrumb-favorite.service';
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente que renderiza o servi√ßo de favoritar do po-breadcrumb.
 */
var PoBreadcrumbFavoriteComponent = /** @class */ (function () {
    function PoBreadcrumbFavoriteComponent(service) {
        this.service = service;
        this.favorite = false;
    }
    PoBreadcrumbFavoriteComponent.prototype.ngOnInit = function () {
        this.service.configService(this.favoriteService, this.paramsService, this.itemActive);
        this.getStatusFavorite();
    };
    PoBreadcrumbFavoriteComponent.prototype.ngOnDestroy = function () {
        if (this.getSubscription) {
            this.getSubscription.unsubscribe();
        }
        if (this.setSubscription) {
            this.setSubscription.unsubscribe();
        }
    };
    PoBreadcrumbFavoriteComponent.prototype.toggleFavoriteAction = function () {
        this.favorite ? this.setStatusFavorite(false) : this.setStatusFavorite(true);
    };
    PoBreadcrumbFavoriteComponent.prototype.getStatusFavorite = function () {
        var _this = this;
        this.getSubscription = this.service.getFavorite().subscribe(function (result) { return _this.favorite = result.isFavorite; });
    };
    PoBreadcrumbFavoriteComponent.prototype.setStatusFavorite = function (status) {
        var _this = this;
        this.setSubscription = this.service.sendStatusFavorite(status).subscribe(function (result) { return _this.favorite = result.isFavorite; });
    };
    PoBreadcrumbFavoriteComponent.ctorParameters = function () { return [
        { type: PoBreadcrumbFavoriteService }
    ]; };
    tslib_1.__decorate([
        Input('p-favorite-service'),
        tslib_1.__metadata("design:type", String)
    ], PoBreadcrumbFavoriteComponent.prototype, "favoriteService", void 0);
    tslib_1.__decorate([
        Input('p-item-active'),
        tslib_1.__metadata("design:type", Object)
    ], PoBreadcrumbFavoriteComponent.prototype, "itemActive", void 0);
    tslib_1.__decorate([
        Input('p-params-service'),
        tslib_1.__metadata("design:type", Object)
    ], PoBreadcrumbFavoriteComponent.prototype, "paramsService", void 0);
    PoBreadcrumbFavoriteComponent = tslib_1.__decorate([
        Component({
            selector: 'po-breadcrumb-favorite',
            template: "<div class=\"po-breadcrumb-favorite po-clickable\" (click)=\"toggleFavoriteAction()\">\n\n  <span\n    class=\"po-icon po-icon-star po-breadcrumb-favorite-star po-clickable\"\n    [class.po-breadcrumb-favorite-star-active]=\"favorite\">\n  </span>\n\n  <span class=\"po-hidden-sm po-breadcrumb-favorite-label\" *ngIf=\"favorite\">Desfavoritar</span>\n  <span class=\"po-hidden-sm po-breadcrumb-favorite-label\" *ngIf=\"!favorite\">Favoritar</span>\n</div>\n",
            providers: [PoBreadcrumbFavoriteService]
        }),
        tslib_1.__metadata("design:paramtypes", [PoBreadcrumbFavoriteService])
    ], PoBreadcrumbFavoriteComponent);
    return PoBreadcrumbFavoriteComponent;
}());
export { PoBreadcrumbFavoriteComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tYnJlYWRjcnVtYi1mYXZvcml0ZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcG9ydGluYXJpL3BvcnRpbmFyaS11aS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3BvLWJyZWFkY3J1bWIvcG8tYnJlYWRjcnVtYi1mYXZvcml0ZS9wby1icmVhZGNydW1iLWZhdm9yaXRlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBS3BFLE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBRS9FOzs7Ozs7R0FNRztBQU1IO0lBZUUsdUNBQW9CLE9BQW9DO1FBQXBDLFlBQU8sR0FBUCxPQUFPLENBQTZCO1FBYnhELGFBQVEsR0FBWSxLQUFLLENBQUM7SUFha0MsQ0FBQztJQUU3RCxnREFBUSxHQUFSO1FBQ0UsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLGVBQWUsRUFBRSxJQUFJLENBQUMsYUFBYSxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUN0RixJQUFJLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztJQUMzQixDQUFDO0lBRUQsbURBQVcsR0FBWDtRQUVFLElBQUksSUFBSSxDQUFDLGVBQWUsRUFBRTtZQUN4QixJQUFJLENBQUMsZUFBZSxDQUFDLFdBQVcsRUFBRSxDQUFDO1NBQ3BDO1FBRUQsSUFBSSxJQUFJLENBQUMsZUFBZSxFQUFFO1lBQ3hCLElBQUksQ0FBQyxlQUFlLENBQUMsV0FBVyxFQUFFLENBQUM7U0FDcEM7SUFDSCxDQUFDO0lBRUQsNERBQW9CLEdBQXBCO1FBQ0UsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDL0UsQ0FBQztJQUVPLHlEQUFpQixHQUF6QjtRQUFBLGlCQUVDO1FBREMsSUFBSSxDQUFDLGVBQWUsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRSxDQUFDLFNBQVMsQ0FBQyxVQUFBLE1BQU0sSUFBSSxPQUFBLEtBQUksQ0FBQyxRQUFRLEdBQUcsTUFBTSxDQUFDLFVBQVUsRUFBakMsQ0FBaUMsQ0FBQyxDQUFDO0lBQzNHLENBQUM7SUFFTyx5REFBaUIsR0FBekIsVUFBMEIsTUFBTTtRQUFoQyxpQkFFQztRQURDLElBQUksQ0FBQyxlQUFlLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxNQUFNLENBQUMsQ0FBQyxTQUFTLENBQUMsVUFBQSxNQUFNLElBQUksT0FBQSxLQUFJLENBQUMsUUFBUSxHQUFHLE1BQU0sQ0FBQyxVQUFVLEVBQWpDLENBQWlDLENBQUMsQ0FBQztJQUN4SCxDQUFDOztnQkE1QjRCLDJCQUEyQjs7SUFSM0I7UUFBNUIsS0FBSyxDQUFDLG9CQUFvQixDQUFDOzswRUFBeUI7SUFHN0I7UUFBdkIsS0FBSyxDQUFDLGVBQWUsQ0FBQzs7cUVBQThCO0lBRzFCO1FBQTFCLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQzs7d0VBQXVCO0lBYnRDLDZCQUE2QjtRQUx6QyxTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsd0JBQXdCO1lBQ2xDLHFkQUFzRDtZQUN0RCxTQUFTLEVBQUUsQ0FBQywyQkFBMkIsQ0FBQztTQUN6QyxDQUFDO2lEQWdCNkIsMkJBQTJCO09BZjdDLDZCQUE2QixDQTZDekM7SUFBRCxvQ0FBQztDQUFBLEFBN0NELElBNkNDO1NBN0NZLDZCQUE2QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uRGVzdHJveSwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMnO1xuXG5pbXBvcnQgeyBQb0JyZWFkY3J1bWJJdGVtIH0gZnJvbSAnLi8uLi9wby1icmVhZGNydW1iLWl0ZW0uaW50ZXJmYWNlJztcbmltcG9ydCB7IFBvQnJlYWRjcnVtYkZhdm9yaXRlU2VydmljZSB9IGZyb20gJy4vcG8tYnJlYWRjcnVtYi1mYXZvcml0ZS5zZXJ2aWNlJztcblxuLyoqXG4gKiBAZG9jc1ByaXZhdGVcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBDb21wb25lbnRlIHF1ZSByZW5kZXJpemEgbyBzZXJ2acOnbyBkZSBmYXZvcml0YXIgZG8gcG8tYnJlYWRjcnVtYi5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG8tYnJlYWRjcnVtYi1mYXZvcml0ZScsXG4gIHRlbXBsYXRlVXJsOiAnLi9wby1icmVhZGNydW1iLWZhdm9yaXRlLmNvbXBvbmVudC5odG1sJyxcbiAgcHJvdmlkZXJzOiBbUG9CcmVhZGNydW1iRmF2b3JpdGVTZXJ2aWNlXVxufSlcbmV4cG9ydCBjbGFzcyBQb0JyZWFkY3J1bWJGYXZvcml0ZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcblxuICBmYXZvcml0ZTogYm9vbGVhbiA9IGZhbHNlO1xuICBwcml2YXRlIGdldFN1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uO1xuICBwcml2YXRlIHNldFN1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uO1xuXG4gIC8vIFVSTCBkbyBzZXJ2acOnby5cbiAgQElucHV0KCdwLWZhdm9yaXRlLXNlcnZpY2UnKSBmYXZvcml0ZVNlcnZpY2U6IHN0cmluZztcblxuICAvLyBJdGVtIGRvIGJyZWFkY3J1bWIgYXRpdm8uXG4gIEBJbnB1dCgncC1pdGVtLWFjdGl2ZScpIGl0ZW1BY3RpdmU6IFBvQnJlYWRjcnVtYkl0ZW07XG5cbiAgLy8gUGFyw6JtZXRybyBxdWUgc2Vyw6EgZW52aWFkbyBqdW50byBjb20gbyBzZXJ2acOnbyBkZSBmYXZvcml0YXIuXG4gIEBJbnB1dCgncC1wYXJhbXMtc2VydmljZScpIHBhcmFtc1NlcnZpY2U6IG9iamVjdDtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHNlcnZpY2U6IFBvQnJlYWRjcnVtYkZhdm9yaXRlU2VydmljZSkgeyB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5zZXJ2aWNlLmNvbmZpZ1NlcnZpY2UodGhpcy5mYXZvcml0ZVNlcnZpY2UsIHRoaXMucGFyYW1zU2VydmljZSwgdGhpcy5pdGVtQWN0aXZlKTtcbiAgICB0aGlzLmdldFN0YXR1c0Zhdm9yaXRlKCk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpOiB2b2lkIHtcblxuICAgIGlmICh0aGlzLmdldFN1YnNjcmlwdGlvbikge1xuICAgICAgdGhpcy5nZXRTdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5zZXRTdWJzY3JpcHRpb24pIHtcbiAgICAgIHRoaXMuc2V0U3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgfVxuICB9XG5cbiAgdG9nZ2xlRmF2b3JpdGVBY3Rpb24oKSB7XG4gICAgdGhpcy5mYXZvcml0ZSA/IHRoaXMuc2V0U3RhdHVzRmF2b3JpdGUoZmFsc2UpIDogdGhpcy5zZXRTdGF0dXNGYXZvcml0ZSh0cnVlKTtcbiAgfVxuXG4gIHByaXZhdGUgZ2V0U3RhdHVzRmF2b3JpdGUoKSB7XG4gICAgdGhpcy5nZXRTdWJzY3JpcHRpb24gPSB0aGlzLnNlcnZpY2UuZ2V0RmF2b3JpdGUoKS5zdWJzY3JpYmUocmVzdWx0ID0+IHRoaXMuZmF2b3JpdGUgPSByZXN1bHQuaXNGYXZvcml0ZSk7XG4gIH1cblxuICBwcml2YXRlIHNldFN0YXR1c0Zhdm9yaXRlKHN0YXR1cykge1xuICAgIHRoaXMuc2V0U3Vic2NyaXB0aW9uID0gdGhpcy5zZXJ2aWNlLnNlbmRTdGF0dXNGYXZvcml0ZShzdGF0dXMpLnN1YnNjcmliZShyZXN1bHQgPT4gdGhpcy5mYXZvcml0ZSA9IHJlc3VsdC5pc0Zhdm9yaXRlKTtcbiAgfVxuXG59XG4iXX0=