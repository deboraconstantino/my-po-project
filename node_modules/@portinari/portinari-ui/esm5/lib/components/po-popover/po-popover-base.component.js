import * as tslib_1 from "tslib";
import { ElementRef, Input } from '@angular/core';
import { convertToBoolean } from '../../utils/util';
import { PO_CONTROL_POSITIONS } from './../../services/po-control-position/po-control-position.constants';
var PO_POPOVER_DEFAULT_POSITION = 'right';
var PO_POPOVER_DEFAULT_TRIGGER = 'click';
var PO_POPOVER_TRIGGERS = ['click', 'hover'];
/**
 * @description
 *
 * O componente `po-popover` é um container pequeno recomendado para incluir vários tipos de conteúdo como:
 * gráficos, textos, imagens e inputs. Ele abre sobreposto aos outros componentes.
 *
 * Para mostrar apenas pequenos textos recomenda-se o uso da diretiva
 * [**po-tooltip**](https://portinari.io/documentation/po-tooltip?view=doc).
 *
 * Para conteúdos maiores recomenda-se o uso do [**po-modal**](https://portinari.io/documentation/po-modal?view=doc).
 *
 * Ele contém um título e também é possível escolher as posições do popover em relação ao componente pai,
 * as posições permitidas são: `right`, `right-top`, `right-bottom`, `top`, `top-left`, `top-right`,
 * `left`, `left-top`, `left-bottom`, `bottom`, `bottom-left` e `bottom-right`.
 *
 * Também é possível escolher entre os dois eventos que podem abrir o *popover*.
 * Os eventos permitidos são: `click` e `hover`.
 *
 */
var PoPopoverBaseComponent = /** @class */ (function () {
    function PoPopoverBaseComponent() {
        // Controla se o popover fica oculto ou visível, por padrão é oculto.
        this.isHidden = true;
        this._hideArrow = false;
        this._position = PO_POPOVER_DEFAULT_POSITION;
        this._trigger = PO_POPOVER_DEFAULT_TRIGGER;
    }
    Object.defineProperty(PoPopoverBaseComponent.prototype, "hideArrow", {
        get: function () {
            return this._hideArrow;
        },
        /**
         * @optional
         *
         * @description
         *
         * Desabilita a seta do componente *popover*.
         *
         * @default `false`
         */
        set: function (value) {
            this._hideArrow = convertToBoolean(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPopoverBaseComponent.prototype, "position", {
        get: function () {
            return this._position;
        },
        /**
         * @optional
         *
         * @description
         *
         * Define a posição que o po-popover abrirá em relação ao componente alvo. Sugere-se que seja
         * usada a orientação "right" (direita), porém o mesmo é flexível e será rotacionado
         * automaticamente para se adequar a tela, caso necessário.
         *
         * Posições válidas:
         * - `right`: Posiciona o po-popover no lado direito do componente alvo.
         * - `right-bottom`: Posiciona o po-popover no lado direito inferior do componente alvo.
         * - `right-top`: Posiciona o po-popover no lado direito superior do componente alvo.
         * - `bottom`: Posiciona o po-popover abaixo do componente alvo.
         * - `bottom-left`: Posiciona o po-popover abaixo e à esquerda do componente alvo.
         * - `bottom-right`: Posiciona o po-popover abaixo e à direita do componente alvo.
         * - `left`: Posiciona o po-popover no lado esquerdo do componente alvo.
         * - `left-top`: Posiciona o po-popover no lado esquerdo superior do componente alvo.
         * - `left-bottom`: Posiciona o po-popover no lado esquerdo inferior do componente alvo.
         * - `top`: Posiciona o po-popover acima do componente alvo.
         * - `top-right`: Posiciona o po-popover acima e à direita do componente alvo.
         * - `top-left`: Posiciona o po-popover acima e à esquerda do componente alvo.
         *
         *
         * @default right
         */
        set: function (value) {
            this._position = PO_CONTROL_POSITIONS.includes(value) ? value : PO_POPOVER_DEFAULT_POSITION;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPopoverBaseComponent.prototype, "trigger", {
        get: function () {
            return this._trigger;
        },
        /**
         * @description
         *
         * Define o evento que abrirá o po-popover.
         *
         * Valores válidos:
         *  - `click`: Abre ao clicar no componente alvo.
         *  - `hover`: Abre ao passar o mouse sobre o componente alvo.
         *
         * @default click
         * @optional
         */
        set: function (value) {
            this._trigger = PO_POPOVER_TRIGGERS.includes(value) ? value : PO_POPOVER_DEFAULT_TRIGGER;
        },
        enumerable: true,
        configurable: true
    });
    tslib_1.__decorate([
        Input('p-hide-arrow'),
        tslib_1.__metadata("design:type", Boolean),
        tslib_1.__metadata("design:paramtypes", [Boolean])
    ], PoPopoverBaseComponent.prototype, "hideArrow", null);
    tslib_1.__decorate([
        Input('p-position'),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], PoPopoverBaseComponent.prototype, "position", null);
    tslib_1.__decorate([
        Input('p-target'),
        tslib_1.__metadata("design:type", ElementRef)
    ], PoPopoverBaseComponent.prototype, "target", void 0);
    tslib_1.__decorate([
        Input('p-title'),
        tslib_1.__metadata("design:type", String)
    ], PoPopoverBaseComponent.prototype, "title", void 0);
    tslib_1.__decorate([
        Input('p-trigger'),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], PoPopoverBaseComponent.prototype, "trigger", null);
    return PoPopoverBaseComponent;
}());
export { PoPopoverBaseComponent };
//# sourceMappingURL=data:application/json;base64,