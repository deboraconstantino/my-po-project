import * as tslib_1 from "tslib";
import { Component, ElementRef, Input, QueryList, ViewChild, ViewChildren } from '@angular/core';
import { NavigationCancel, NavigationEnd, Router } from '@angular/router';
import { PoNavbarItemComponent } from './po-navbar-item/po-navbar-item.component';
var PoNavbarItemsComponent = /** @class */ (function () {
    function PoNavbarItemsComponent(router) {
        this.router = router;
    }
    PoNavbarItemsComponent.prototype.ngOnDestroy = function () {
        this.routeSubscription.unsubscribe();
    };
    PoNavbarItemsComponent.prototype.ngOnInit = function () {
        this.subscribeToRoute();
    };
    PoNavbarItemsComponent.prototype.selectItem = function (item) {
        this.selectedItem = item;
    };
    PoNavbarItemsComponent.prototype.checkActiveItemByUrl = function (urlRouter) {
        this.selectedItem = this.items.find(function (item) { return item.link === urlRouter; });
    };
    PoNavbarItemsComponent.prototype.checkRouterChildrenFragments = function () {
        var childrenPrimary = this.router.parseUrl(this.router.url).root.children['primary'];
        return childrenPrimary ? "/" + childrenPrimary.segments.map(function (it) { return it.path; }).join('/') : '';
    };
    PoNavbarItemsComponent.prototype.subscribeToRoute = function () {
        var _this = this;
        this.routeSubscription = this.router.events.subscribe(function (val) {
            if (val instanceof NavigationEnd || val instanceof NavigationCancel) {
                var urlRouter = _this.checkRouterChildrenFragments();
                _this.checkActiveItemByUrl(urlRouter);
            }
        });
    };
    PoNavbarItemsComponent.ctorParameters = function () { return [
        { type: Router }
    ]; };
    tslib_1.__decorate([
        ViewChild('navbarItemsContainer', { read: ElementRef, static: true }),
        tslib_1.__metadata("design:type", ElementRef)
    ], PoNavbarItemsComponent.prototype, "navbarItemsContainer", void 0);
    tslib_1.__decorate([
        ViewChildren(PoNavbarItemComponent, { read: ElementRef }),
        tslib_1.__metadata("design:type", QueryList)
    ], PoNavbarItemsComponent.prototype, "allNavbarItems", void 0);
    tslib_1.__decorate([
        Input('p-items'),
        tslib_1.__metadata("design:type", Array)
    ], PoNavbarItemsComponent.prototype, "items", void 0);
    PoNavbarItemsComponent = tslib_1.__decorate([
        Component({
            selector: 'po-navbar-items',
            template: "<nav>\n  <ul class=\"po-navbar-items-container\" #navbarItemsContainer>\n    <li *ngFor=\"let item of items\"\n      class=\"po-navbar-item\"\n      [class.po-navbar-item-selected]=\"selectedItem === item\">\n      <po-navbar-item\n        [p-action]=\"item.action\"\n        [p-clickable]=\"selectedItem !== item\"\n        [p-label]=\"item.label\"\n        [p-link]=\"item.link\"\n        (p-click)=\"selectItem(item)\">\n      </po-navbar-item>\n    </li>\n  </ul>\n</nav>\n"
        }),
        tslib_1.__metadata("design:paramtypes", [Router])
    ], PoNavbarItemsComponent);
    return PoNavbarItemsComponent;
}());
export { PoNavbarItemsComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbmF2YmFyLWl0ZW1zLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwb3J0aW5hcmkvcG9ydGluYXJpLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tbmF2YmFyL3BvLW5hdmJhci1pdGVtcy9wby1uYXZiYXItaXRlbXMuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQXFCLFNBQVMsRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3BILE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxhQUFhLEVBQUUsTUFBTSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFLMUUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sMkNBQTJDLENBQUM7QUFNbEY7SUFZRSxnQ0FBb0IsTUFBYztRQUFkLFdBQU0sR0FBTixNQUFNLENBQVE7SUFBSSxDQUFDO0lBRXZDLDRDQUFXLEdBQVg7UUFDRSxJQUFJLENBQUMsaUJBQWlCLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDdkMsQ0FBQztJQUVELHlDQUFRLEdBQVI7UUFDRSxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztJQUMxQixDQUFDO0lBRUQsMkNBQVUsR0FBVixVQUFXLElBQWtCO1FBQzNCLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDO0lBQzNCLENBQUM7SUFFTyxxREFBb0IsR0FBNUIsVUFBNkIsU0FBaUI7UUFDNUMsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxVQUFBLElBQUksSUFBSSxPQUFBLElBQUksQ0FBQyxJQUFJLEtBQUssU0FBUyxFQUF2QixDQUF1QixDQUFDLENBQUM7SUFDdkUsQ0FBQztJQUVPLDZEQUE0QixHQUFwQztRQUNFLElBQU0sZUFBZSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUV2RixPQUFPLGVBQWUsQ0FBQyxDQUFDLENBQUMsTUFBSSxlQUFlLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxVQUFBLEVBQUUsSUFBSSxPQUFBLEVBQUUsQ0FBQyxJQUFJLEVBQVAsQ0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7SUFDNUYsQ0FBQztJQUVPLGlEQUFnQixHQUF4QjtRQUFBLGlCQU9DO1FBTkMsSUFBSSxDQUFDLGlCQUFpQixHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxVQUFBLEdBQUc7WUFDdkQsSUFBSSxHQUFHLFlBQVksYUFBYSxJQUFJLEdBQUcsWUFBWSxnQkFBZ0IsRUFBRTtnQkFDbkUsSUFBTSxTQUFTLEdBQUcsS0FBSSxDQUFDLDRCQUE0QixFQUFFLENBQUM7Z0JBQ3RELEtBQUksQ0FBQyxvQkFBb0IsQ0FBQyxTQUFTLENBQUMsQ0FBQzthQUN0QztRQUNILENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQzs7Z0JBL0IyQixNQUFNOztJQU5xQztRQUF0RSxTQUFTLENBQUMsc0JBQXNCLEVBQUUsRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsQ0FBQzswQ0FBdUIsVUFBVTt3RUFBQztJQUU3QztRQUExRCxZQUFZLENBQUMscUJBQXFCLEVBQUUsRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLENBQUM7MENBQWtCLFNBQVM7a0VBQU07SUFFekU7UUFBakIsS0FBSyxDQUFDLFNBQVMsQ0FBQzswQ0FBUSxLQUFLO3lEQUFlO0lBVmxDLHNCQUFzQjtRQUpsQyxTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsaUJBQWlCO1lBQzNCLHllQUErQztTQUNoRCxDQUFDO2lEQWE0QixNQUFNO09BWnZCLHNCQUFzQixDQTZDbEM7SUFBRCw2QkFBQztDQUFBLEFBN0NELElBNkNDO1NBN0NZLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRWxlbWVudFJlZiwgSW5wdXQsIE9uRGVzdHJveSwgT25Jbml0LCBRdWVyeUxpc3QsIFZpZXdDaGlsZCwgVmlld0NoaWxkcmVuIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOYXZpZ2F0aW9uQ2FuY2VsLCBOYXZpZ2F0aW9uRW5kLCBSb3V0ZXIgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuXG5pbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcblxuaW1wb3J0IHsgUG9OYXZiYXJJdGVtIH0gZnJvbSAnLi4vaW50ZXJmYWNlcy9wby1uYXZiYXItaXRlbS5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgUG9OYXZiYXJJdGVtQ29tcG9uZW50IH0gZnJvbSAnLi9wby1uYXZiYXItaXRlbS9wby1uYXZiYXItaXRlbS5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwby1uYXZiYXItaXRlbXMnLFxuICB0ZW1wbGF0ZVVybDogJy4vcG8tbmF2YmFyLWl0ZW1zLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBQb05hdmJhckl0ZW1zQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuXG4gIHNlbGVjdGVkSXRlbTogUG9OYXZiYXJJdGVtO1xuXG4gIHByaXZhdGUgcm91dGVTdWJzY3JpcHRpb246IFN1YnNjcmlwdGlvbjtcblxuICBAVmlld0NoaWxkKCduYXZiYXJJdGVtc0NvbnRhaW5lcicsIHsgcmVhZDogRWxlbWVudFJlZiwgc3RhdGljOiB0cnVlIH0pIG5hdmJhckl0ZW1zQ29udGFpbmVyOiBFbGVtZW50UmVmO1xuXG4gIEBWaWV3Q2hpbGRyZW4oUG9OYXZiYXJJdGVtQ29tcG9uZW50LCB7IHJlYWQ6IEVsZW1lbnRSZWYgfSkgYWxsTmF2YmFySXRlbXM6ICBRdWVyeUxpc3Q8YW55PjtcblxuICBASW5wdXQoJ3AtaXRlbXMnKSBpdGVtczogQXJyYXk8UG9OYXZiYXJJdGVtPjtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHJvdXRlcjogUm91dGVyKSB7IH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLnJvdXRlU3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLnN1YnNjcmliZVRvUm91dGUoKTtcbiAgfVxuXG4gIHNlbGVjdEl0ZW0oaXRlbTogUG9OYXZiYXJJdGVtKSB7XG4gICAgdGhpcy5zZWxlY3RlZEl0ZW0gPSBpdGVtO1xuICB9XG5cbiAgcHJpdmF0ZSBjaGVja0FjdGl2ZUl0ZW1CeVVybCh1cmxSb3V0ZXI6IHN0cmluZykge1xuICAgIHRoaXMuc2VsZWN0ZWRJdGVtID0gdGhpcy5pdGVtcy5maW5kKGl0ZW0gPT4gaXRlbS5saW5rID09PSB1cmxSb3V0ZXIpO1xuICB9XG5cbiAgcHJpdmF0ZSBjaGVja1JvdXRlckNoaWxkcmVuRnJhZ21lbnRzKCkge1xuICAgIGNvbnN0IGNoaWxkcmVuUHJpbWFyeSA9IHRoaXMucm91dGVyLnBhcnNlVXJsKHRoaXMucm91dGVyLnVybCkucm9vdC5jaGlsZHJlblsncHJpbWFyeSddO1xuXG4gICAgcmV0dXJuIGNoaWxkcmVuUHJpbWFyeSA/IGAvJHtjaGlsZHJlblByaW1hcnkuc2VnbWVudHMubWFwKGl0ID0+IGl0LnBhdGgpLmpvaW4oJy8nKX1gIDogJyc7XG4gIH1cblxuICBwcml2YXRlIHN1YnNjcmliZVRvUm91dGUoKSB7XG4gICAgdGhpcy5yb3V0ZVN1YnNjcmlwdGlvbiA9IHRoaXMucm91dGVyLmV2ZW50cy5zdWJzY3JpYmUodmFsID0+IHtcbiAgICAgIGlmICh2YWwgaW5zdGFuY2VvZiBOYXZpZ2F0aW9uRW5kIHx8IHZhbCBpbnN0YW5jZW9mIE5hdmlnYXRpb25DYW5jZWwpIHtcbiAgICAgICAgY29uc3QgdXJsUm91dGVyID0gdGhpcy5jaGVja1JvdXRlckNoaWxkcmVuRnJhZ21lbnRzKCk7XG4gICAgICAgIHRoaXMuY2hlY2tBY3RpdmVJdGVtQnlVcmwodXJsUm91dGVyKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG59XG4iXX0=