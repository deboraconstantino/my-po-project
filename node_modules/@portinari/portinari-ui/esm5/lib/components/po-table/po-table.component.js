import * as tslib_1 from "tslib";
import { AfterViewInit, ChangeDetectorRef, Component, ContentChild, DoCheck, ElementRef, IterableDiffers, OnDestroy, QueryList, Renderer2, ViewChild, ViewChildren, ViewContainerRef } from '@angular/core';
import { DecimalPipe } from '@angular/common';
import { Router } from '@angular/router';
import { convertToBoolean } from '../../utils/util';
import { PoDateService } from '../../services/po-date/po-date.service';
import { PoPopupComponent } from '../po-popup/po-popup.component';
import { PoTableBaseComponent } from './po-table-base.component';
import { PoTableRowTemplateDirective } from './po-table-row-template/po-table-row-template.directive';
/**
 * @docsExtends PoTableBaseComponent
 *
 * @example
 *
 * <example name="po-table-basic" title="Portinari Table Basic">
 *  <file name="sample-po-table-basic/sample-po-table-basic.component.ts"> </file>
 *  <file name="sample-po-table-basic/sample-po-table-basic.component.html"> </file>
 * </example>
 *
 * <example name="po-table-labs" title="Portinari Table Labs">
 *  <file name="sample-po-table-labs/sample-po-table-labs.component.ts"> </file>
 *  <file name="sample-po-table-labs/sample-po-table-labs.component.html"> </file>
 *  <file name="sample-po-table-labs/sample-po-table-labs.component.e2e-spec.ts"> </file>
 *  <file name="sample-po-table-labs/sample-po-table-labs.component.po.ts"> </file>
 *  <file name="sample-po-table-labs/sample-po-table-labs.service.ts"> </file>
 * </example>
 *
 * <example name="po-table-transport" title="Portinari Table - Transport">
 *  <file name="sample-po-table-transport/sample-po-table-transport.component.ts"> </file>
 *  <file name="sample-po-table-transport/sample-po-table-transport.component.html"> </file>
 *  <file name="sample-po-table-transport/sample-po-table-transport.service.ts"> </file>
 * </example>
 *
 * <example name="po-table-airfare" title="Portinari Table - Airfare">
 *  <file name="sample-po-table-airfare/sample-po-table-airfare.component.ts"> </file>
 *  <file name="sample-po-table-airfare/sample-po-table-airfare.component.html"> </file>
 *  <file name="sample-po-table-airfare/sample-po-table-airfare.service.ts"> </file>
 * </example>
 *
 * <example name="po-table-components" title="Portinari Table - Po Field Components">
 *  <file name="sample-po-table-components/sample-po-table-components.component.ts"> </file>
 *  <file name="sample-po-table-components/sample-po-table-components.component.html"> </file>
 *  <file name="sample-po-table-components/sample-po-table-components.service.ts"> </file>
 * </example>
 */
var PoTableComponent = /** @class */ (function (_super) {
    tslib_1.__extends(PoTableComponent, _super);
    function PoTableComponent(poDate, differs, viewRef, renderer, changeDetector, decimalPipe, router) {
        var _this = _super.call(this, poDate) || this;
        _this.changeDetector = changeDetector;
        _this.decimalPipe = decimalPipe;
        _this.router = router;
        _this.tableOpacity = 0;
        _this.initialized = false;
        _this.visibleElement = false;
        _this.parentRef = viewRef['_view']['component'];
        _this.differ = differs.find([]).create(null);
        // TODO: #5550 ao remover este listener, no portal, quando as colunas forem fixas não sofrem
        // alteração de largura, pois o ngDoCheck não é executado.
        _this.clickListener = renderer.listen('document', 'click', function () { });
        _this.resizeListener = renderer.listen('window', 'resize', function (event) {
            _this.debounceResize();
        });
        return _this;
    }
    Object.defineProperty(PoTableComponent.prototype, "columnManagerTarget", {
        get: function () {
            return this._columnManagerTarget;
        },
        set: function (value) {
            this._columnManagerTarget = value;
            this.changeDetector.detectChanges();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoTableComponent.prototype, "columnCount", {
        get: function () {
            return (this.mainColumns.length +
                (this.actions.length > 0 ? 1 : 0) +
                (this.selectable ? 1 : 0) +
                (!this.hideDetail && this.columnMasterDetail !== undefined ? 1 : 0));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoTableComponent.prototype, "columnCountForMasterDetail", {
        get: function () {
            // caso tiver ações será utilizado a sua coluna para exibir o columnManager
            var columnManager = this.actions.length ? 0 : 1;
            return (this.mainColumns.length + 1) + (this.actions.length > 0 ? 1 : 0) + (this.selectable ? 1 : 0) + columnManager;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoTableComponent.prototype, "detailHideSelect", {
        get: function () {
            var masterDetail = this.columnMasterDetail;
            return masterDetail && masterDetail.detail ? masterDetail.detail.hideSelect : false;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoTableComponent.prototype, "displayColumnManagerCell", {
        get: function () {
            return !this.visibleActions.length;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoTableComponent.prototype, "firstAction", {
        get: function () {
            return this.visibleActions && this.visibleActions[0];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoTableComponent.prototype, "hasFooter", {
        get: function () {
            return this.hasItems && this.hasVisibleSubtitleColumns;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoTableComponent.prototype, "hasMasterDetailColumn", {
        get: function () {
            return this.hasMainColumns &&
                this.hasItems && !this.hideDetail &&
                !!(this.columnMasterDetail || this.hasRowTemplate);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoTableComponent.prototype, "hasRowTemplate", {
        get: function () {
            return !!this.tableRowTemplate;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoTableComponent.prototype, "hasSelectableColumn", {
        get: function () {
            return this.selectable && this.hasItems && this.hasMainColumns;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoTableComponent.prototype, "hasValidColumns", {
        get: function () {
            return !!this.validColumns.length;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoTableComponent.prototype, "hasVisibleSubtitleColumns", {
        get: function () {
            return this.subtitleColumns.some(function (column) { return column.visible !== false; });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoTableComponent.prototype, "isSingleAction", {
        get: function () {
            return this.visibleActions.length === 1;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoTableComponent.prototype, "visibleActions", {
        get: function () {
            return this.actions && this.actions.filter(function (action) { return action.visible !== false; });
        },
        enumerable: true,
        configurable: true
    });
    PoTableComponent.prototype.ngAfterViewInit = function () {
        this.initialized = true;
        if (!this.container) {
            this.hideContainer();
        }
    };
    PoTableComponent.prototype.ngDoCheck = function () {
        this.checkChangesItems();
        this.verifyCalculateHeightTableContainer();
        // Permite que os cabeçalhos sejam calculados na primeira vez que o componente torna-se visível,
        // evitando com isso, problemas com Tabs ou Divs que iniciem escondidas.
        if (this.tableWrapperElement.nativeElement.offsetWidth && !this.visibleElement && this.initialized) {
            this.debounceResize();
            this.visibleElement = true;
        }
    };
    PoTableComponent.prototype.ngOnDestroy = function () {
        this.removeListeners();
    };
    PoTableComponent.prototype.checkDisabled = function (row, column) {
        return column.disabled ? column.disabled(row) : false;
    };
    PoTableComponent.prototype.containsMasterDetail = function (row) {
        return row[this.nameColumnDetail] && row[this.nameColumnDetail].length;
    };
    PoTableComponent.prototype.executeTableAction = function (row, tableAction) {
        if (!row.disabled && !this.validateTableAction(row, tableAction)) {
            tableAction.action.call(this.parentRef, row);
            this.toggleRowAction(row);
        }
    };
    PoTableComponent.prototype.formatNumber = function (value, format) {
        if (!format) {
            return value;
        }
        return this.decimalPipe.transform(value, format);
    };
    PoTableComponent.prototype.getBooleanLabel = function (rowValue, columnBoolean) {
        if (rowValue || rowValue === false || rowValue === 0) {
            rowValue = convertToBoolean(rowValue);
            if (columnBoolean.boolean) {
                return rowValue ? columnBoolean.boolean.trueLabel || 'Sim' : columnBoolean.boolean.falseLabel || 'Não';
            }
            else {
                return rowValue ? 'Sim' : 'Não';
            }
        }
        return rowValue;
    };
    PoTableComponent.prototype.getColumnIcons = function (row, column) {
        var rowIcons = row[column.property];
        if (column.icons) {
            if (Array.isArray(rowIcons)) {
                return this.mergeCustomIcons(rowIcons, column.icons);
            }
            else {
                return this.findCustomIcon(rowIcons, column);
            }
        }
        return rowIcons;
    };
    PoTableComponent.prototype.getColumnLabel = function (row, columnLabel) {
        return columnLabel.labels.find(function (labelItem) { return row[columnLabel.property] === labelItem.value; });
    };
    PoTableComponent.prototype.getSubtitleColumn = function (row, subtitleColumn) {
        return subtitleColumn.subtitles.find(function (subtitleItem) { return row[subtitleColumn.property] === subtitleItem.value; });
    };
    PoTableComponent.prototype.isShowMasterDetail = function (row) {
        return !this.hideDetail &&
            this.nameColumnDetail &&
            row.$showDetail &&
            this.containsMasterDetail(row) &&
            !this.hasRowTemplate;
    };
    PoTableComponent.prototype.isShowRowTemplate = function (row, index) {
        if (this.tableRowTemplate && this.tableRowTemplate.poTableRowTemplateShow) {
            return this.tableRowTemplate.poTableRowTemplateShow(row, index);
        }
        return true;
    };
    PoTableComponent.prototype.onVisibleColumnsChange = function (columns) {
        this.columns = columns;
        this.changeDetector.detectChanges();
    };
    PoTableComponent.prototype.tooltipMouseEnter = function (event, column, row) {
        this.tooltipText = undefined;
        if (this.hideTextOverflow &&
            event.target.offsetWidth < event.target.scrollWidth &&
            event.target.innerText.trim()) {
            return this.tooltipText = event.target.innerText;
        }
        if (column) {
            this.checkingIfColumnHasTooltip(column, row);
        }
    };
    PoTableComponent.prototype.tooltipMouseLeave = function () {
        this.tooltipText = undefined;
    };
    PoTableComponent.prototype.togglePopup = function (row, targetRef) {
        this.popupTarget = targetRef;
        this.changeDetector.detectChanges();
        this.poPopupComponent.toggle(row);
    };
    PoTableComponent.prototype.trackBy = function (index) {
        return index;
    };
    PoTableComponent.prototype.validateTableAction = function (row, tableAction) {
        if (typeof tableAction.disabled === 'function') {
            return tableAction.disabled.call(this.parentRef, row);
        }
        else {
            return tableAction.disabled;
        }
    };
    PoTableComponent.prototype.calculateHeightTableContainer = function (height) {
        var value = parseFloat(height);
        this.heightTableContainer = value ? (value - this.getHeightTableFooter()) : undefined;
        this.setTableOpacity(1);
        this.changeDetector.detectChanges();
    };
    PoTableComponent.prototype.calculateWidthHeaders = function () {
        var _this = this;
        setTimeout(function () {
            if (_this.height) {
                _this.headersTable.forEach(function (header) {
                    var divHeader = header.nativeElement.querySelector('.po-table-header-fixed-inner');
                    if (divHeader) {
                        divHeader.style.width = header.nativeElement.offsetWidth + "px";
                    }
                });
            }
        });
    };
    PoTableComponent.prototype.showContainer = function (container) {
        var containerClassList = this.tableContainerElement.nativeElement.firstChild.classList;
        containerClassList.add('po-container');
        container === 'border' ? containerClassList.add('po-container-no-shadow') : containerClassList.remove('po-container-no-shadow');
    };
    PoTableComponent.prototype.checkChangesItems = function () {
        var changesItems = this.differ.diff(this.items);
        if (changesItems && this.selectAll) {
            this.selectAll = null;
        }
        if (changesItems && !this.hasColumns && this.hasItems) {
            this.columns = this.getDefaultColumns(this.items[0]);
        }
    };
    PoTableComponent.prototype.checkingIfColumnHasTooltip = function (column, row) {
        if (column.type === 'link' && column.tooltip && !this.checkDisabled(row, column)) {
            return this.tooltipText = column.tooltip;
        }
        if (column.type === 'label') {
            var columnLabel = this.getColumnLabel(row, column);
            return this.tooltipText = columnLabel.tooltip;
        }
    };
    PoTableComponent.prototype.debounceResize = function () {
        var _this = this;
        clearTimeout(this.timeoutResize);
        this.timeoutResize = setTimeout(function () {
            _this.calculateWidthHeaders();
            // show the table
            _this.setTableOpacity(1);
        });
    };
    PoTableComponent.prototype.findCustomIcon = function (rowIcons, column) {
        var customIcon = column.icons.find(function (icon) { return rowIcons === icon.value; });
        return customIcon ? [customIcon] : undefined;
    };
    PoTableComponent.prototype.getHeightTableFooter = function () {
        return this.tableFooterElement ? this.tableFooterElement.nativeElement.offsetHeight : 0;
    };
    PoTableComponent.prototype.hideContainer = function () {
        var containerClassList = this.tableContainerElement.nativeElement.firstChild.classList;
        containerClassList.remove('po-container');
    };
    PoTableComponent.prototype.mergeCustomIcons = function (rowIcons, customIcons) {
        var mergedIcons = [];
        rowIcons.forEach(function (columnValue) {
            var foundCustomIcon = customIcons.find(function (customIcon) { return columnValue === customIcon.icon || columnValue === customIcon.value; });
            foundCustomIcon ? mergedIcons.push(foundCustomIcon) : mergedIcons.push(columnValue);
        });
        return mergedIcons;
    };
    PoTableComponent.prototype.removeListeners = function () {
        if (this.resizeListener) {
            this.resizeListener();
        }
        if (this.clickListener) {
            this.clickListener();
        }
    };
    PoTableComponent.prototype.setTableOpacity = function (value) {
        this.tableOpacity = value;
    };
    PoTableComponent.prototype.verifyChangeHeightInFooter = function () {
        return this.footerHeight !== this.getHeightTableFooter();
    };
    PoTableComponent.prototype.verifyCalculateHeightTableContainer = function () {
        if (this.height && this.verifyChangeHeightInFooter()) {
            this.footerHeight = this.getHeightTableFooter();
            this.calculateHeightTableContainer(this.height);
        }
    };
    PoTableComponent.ctorParameters = function () { return [
        { type: PoDateService },
        { type: IterableDiffers },
        { type: ViewContainerRef },
        { type: Renderer2 },
        { type: ChangeDetectorRef },
        { type: DecimalPipe },
        { type: Router }
    ]; };
    tslib_1.__decorate([
        ContentChild(PoTableRowTemplateDirective, { static: true }),
        tslib_1.__metadata("design:type", PoTableRowTemplateDirective)
    ], PoTableComponent.prototype, "tableRowTemplate", void 0);
    tslib_1.__decorate([
        ViewChild('columnManagerTarget', { static: false }),
        tslib_1.__metadata("design:type", ElementRef),
        tslib_1.__metadata("design:paramtypes", [ElementRef])
    ], PoTableComponent.prototype, "columnManagerTarget", null);
    tslib_1.__decorate([
        ViewChild('noColumnsHeader', { read: ElementRef, static: false }),
        tslib_1.__metadata("design:type", Object)
    ], PoTableComponent.prototype, "noColumnsHeader", void 0);
    tslib_1.__decorate([
        ViewChild('popup', { static: false }),
        tslib_1.__metadata("design:type", PoPopupComponent)
    ], PoTableComponent.prototype, "poPopupComponent", void 0);
    tslib_1.__decorate([
        ViewChild('tableContainer', { read: ElementRef, static: true }),
        tslib_1.__metadata("design:type", Object)
    ], PoTableComponent.prototype, "tableContainerElement", void 0);
    tslib_1.__decorate([
        ViewChild('tableFooter', { read: ElementRef, static: true }),
        tslib_1.__metadata("design:type", Object)
    ], PoTableComponent.prototype, "tableFooterElement", void 0);
    tslib_1.__decorate([
        ViewChild('tableWrapper', { read: ElementRef, static: true }),
        tslib_1.__metadata("design:type", Object)
    ], PoTableComponent.prototype, "tableWrapperElement", void 0);
    tslib_1.__decorate([
        ViewChildren('actionsIconElement', { read: ElementRef }),
        tslib_1.__metadata("design:type", QueryList)
    ], PoTableComponent.prototype, "actionsIconElement", void 0);
    tslib_1.__decorate([
        ViewChildren('actionsElement', { read: ElementRef }),
        tslib_1.__metadata("design:type", QueryList)
    ], PoTableComponent.prototype, "actionsElement", void 0);
    tslib_1.__decorate([
        ViewChildren('headersTable'),
        tslib_1.__metadata("design:type", QueryList)
    ], PoTableComponent.prototype, "headersTable", void 0);
    PoTableComponent = tslib_1.__decorate([
        Component({
            selector: 'po-table',
            template: "<po-container #tableContainer p-no-padding>\n  <div [class.po-table-container-relative]=\"loading\">\n    <div *ngIf=\"loading\" class=\"po-table-overlay\">\n      <po-loading class=\"po-table-overlay-content\" [p-text]=\"literals.loadingData\"></po-loading>\n    </div>\n\n    <div class=\"po-table-main-container\">\n      <div #tableWrapper\n        class=\"po-table-wrapper\"\n        [class.po-table-header-fixed-columns-pixels]=\"allColumnsWidthPixels\"\n        [style.opacity]=\"tableOpacity\">\n\n        <div *ngIf=\"height\" class=\"po-table-container\" [style.height.px]=\"heightTableContainer\">\n          <div class=\"po-table-header-fixed po-table-header\"></div>\n          <div class=\"po-table-container-fixed-inner\">\n            <ng-container *ngTemplateOutlet=\"tableTemplate\"></ng-container>\n          </div>\n        </div>\n\n        <div *ngIf=\"!height\">\n          <ng-container *ngTemplateOutlet=\"tableTemplate\"></ng-container>\n        </div>\n\n      </div>\n    </div>\n  </div>\n\n  <div class=\"po-table-footer\" *ngIf=\"hasFooter\">\n    <ng-container *ngFor=\"let column of subtitleColumns; trackBy: trackBy\">\n      <po-table-subtitle-footer [p-literals]=\"literals\" [p-subtitles]=\"column.subtitles\">\n      </po-table-subtitle-footer>\n    </ng-container>\n  </div>\n</po-container>\n\n<div class=\"po-row po-table-footer-show-more\" [class.po-invisible]=\"showMore.observers.length === 0\" #tableFooter>\n  <po-button\n    class=\"po-offset-xl-4 po-offset-lg-4 po-offset-md-3 po-lg-4 po-md-6\"\n    [p-disabled]=\"showMoreDisabled\"\n    [p-label]=\"literals.loadMoreData\"\n    (p-click)=\"onShowMore()\">\n  </po-button>\n</div>\n\n<ng-template #tableTemplate>\n  <table class=\"po-table\"\n    [class.po-table-striped]=\"striped\"\n    [class.po-table-layout-fixed]=\"hideTextOverflow\">\n    <thead>\n      <tr [class.po-table-header]=\"!height\">\n\n        <th *ngIf=\"hasSelectableColumn\" class=\"po-table-column-selectable\">\n          <div [class.po-table-header-fixed-inner]=\"height\">\n            <input *ngIf=\"!hideSelectAll\" type=\"checkbox\" class=\"po-table-checkbox\"\n            [class.po-table-checkbox-checked]=\"selectAll\"\n            [class.po-table-checkbox-indeterminate]=\"selectAll === null\">\n            <label *ngIf=\"!hideSelectAll\" class=\"po-table-checkbox-label po-clickable\" (click)=\"selectAllRows()\"></label>\n          </div>\n        </th>\n\n        <th *ngIf=\"hasMasterDetailColumn\"\n          class=\"po-table-header-column po-table-header-master-detail\">\n        </th>\n\n        <th *ngIf=\"!hasMainColumns\" #noColumnsHeader class=\"po-table-header-column po-text-center\">\n          <ng-container *ngIf=\"height; then noColumnsWithHeight; else noColumnsWithoutHeight\"> </ng-container>\n        </th>\n\n        <th *ngFor=\"let column of mainColumns; let i = index; trackBy: trackBy\" #headersTable\n          class=\"po-table-header-ellipsis\"\n          [style.width]=\"column.width\" [style.max-width]=\"column.width\" [style.min-width]=\"column.width\"\n          [class.po-clickable]=\"sort\"\n          [class.po-table-column-right]= \"column.type === 'currency' || column.type === 'number'\"\n          [class.po-table-header-subtitle]=\"column.type === 'subtitle'\"\n          (click)=\"sortColumn(column)\">\n\n          <div [class.po-table-header-fixed-inner]=\"height\">\n            <ng-container *ngTemplateOutlet=\"contentHeaderTemplate; context: { $implicit: column }\">\n            </ng-container>\n          </div>\n        </th>\n\n        <th #columnManager *ngIf=\"hasValidColumns\"\n          [class.po-table-header-column-manager]=\"!isSingleAction\"\n          [class.po-table-header-column-manager-border]=\"!height && container\"\n          [class.po-table-header-single-action]=\"isSingleAction\">\n          <div\n            [class.po-table-header-column-manager-border]=\"height && container\"\n            [class.po-table-header-column-manager-fixed-inner]=\"height\"\n            [style.width.px]=\"height && visibleActions.length ? columnManager.offsetWidth : undefined\">\n            <button #columnManagerTarget\n              class=\"po-table-header-column-manager-button po-icon po-icon-settings po-clickable\"\n              p-tooltip-position=\"left\"\n              [p-tooltip]=\"literals.columnsManager\">\n            </button>\n          </div>\n        </th>\n\n      </tr>\n    </thead>\n\n    <tbody class=\"po-table-group-row\" *ngIf=\"!hasItems || !hasMainColumns\">\n      <tr class=\"po-table-row\">\n        <td [colSpan]=\"columnCount\" class=\"po-table-no-data po-text-center\">\n          <span> {{ literals.noData }} </span>\n        </td>\n      </tr>\n    </tbody>\n\n    <ng-container *ngIf=\"hasMainColumns\">\n\n      <tbody class=\"po-table-group-row\" *ngFor=\"let row of items, let rowIndex = index; trackBy: trackBy\">\n        <tr class=\"po-table-row\" [class.po-table-row-active]=\"row.$selected || row.$selected === null && selectable\">\n          <td *ngIf=\"selectable\" class=\"po-table-column po-table-column-selectable\">\n            <ng-container\n              *ngTemplateOutlet=\"singleSelect ? inputRadio : inputCheckbox; context: { $implicit: row }\">\n            </ng-container>\n          </td>\n          <td *ngIf=\"columnMasterDetail && !hideDetail || hasRowTemplate\"\n            class=\"po-table-column-detail-toggle\"\n            (click)=\"toggleDetail(row)\">\n            <span *ngIf=\"(containsMasterDetail(row) && !hasRowTemplate) || isShowRowTemplate(row, rowIndex) && hasRowTemplate\"\n              class=\"po-icon po-clickable\"\n              [class.po-icon-arrow-up]=\"row.$showDetail\"\n              [class.po-icon-arrow-down]=\"!row.$showDetail\">\n            </span>\n          </td>\n\n          <td *ngFor=\"let column of mainColumns, let columnIndex = index; trackBy: trackBy\"\n            [style.width]=\"column.width\" [style.max-width]=\"column.width\" [style.min-width]=\"column.width\"\n            [class.po-table-column]=\"column.type !== 'icon'\"\n            [class.po-table-column-right]=\"column.type == 'currency' || column.type == 'number'\"\n            [class.po-table-column-center]=\"column.type === 'subtitle'\"\n            [class.po-table-column-icons]=\"column.type === 'icon'\"\n            [ngClass]=\"getClassColor(row, column)\"\n            (click)=\"selectable ? selectRow(row) : 'javascript:;'\">\n\n            <div class=\"po-table-column-cell\"\n              [class.po-table-body-ellipsis]=\"hideTextOverflow\"\n              [ngSwitch]=\"column.type\"\n              [p-tooltip]=\"tooltipText\"\n              (mouseenter)=\"tooltipMouseEnter($event, column, row)\"\n              (mouseleave)=\"tooltipMouseLeave()\">\n              <span *ngSwitchCase=\"'boolean'\">{{ getBooleanLabel(row[column.property], column) }}</span>\n              <span *ngSwitchCase=\"'currency'\">{{ row[column.property] | currency:column.format:'symbol':'1.2-2' }}</span>\n              <span *ngSwitchCase=\"'date'\" >{{ row[column.property] | date: column.format || 'dd/MM/yyyy' }}</span>\n              <span *ngSwitchCase=\"'time'\" >{{ row[column.property] | po_time: column.format || 'HH:mm:ss.ffffff' }}</span>\n              <span *ngSwitchCase=\"'dateTime'\" >{{ row[column.property] | date: column.format || 'dd/MM/yyyy HH:mm:ss' }}</span>\n              <span *ngSwitchCase=\"'number'\">{{ formatNumber(row[column.property], column.format) }}</span>\n              <po-table-column-link *ngSwitchCase=\"'link'\"\n                [p-action]=\"column.action\"\n                [p-disabled]=\"checkDisabled(row, column)\"\n                [p-link]=\"row[column.link]\"\n                [p-row]=\"row\"\n                [p-value]=\"row[column.property]\">\n              </po-table-column-link>\n\n              <po-table-column-icon *ngSwitchCase=\"'icon'\"\n                [p-column]=\"column\"\n                [p-icons]=\"getColumnIcons(row, column)\"\n                [p-row]=\"row\">\n              </po-table-column-icon>\n\n              <span *ngSwitchCase=\"'subtitle'\">\n                <po-table-subtitle-circle [p-subtitle]=\"getSubtitleColumn(row, column)\"></po-table-subtitle-circle>\n              </span>\n              <span *ngSwitchCase=\"'label'\">\n                <po-table-column-label [p-value]=\"getColumnLabel(row, column)\"></po-table-column-label>\n              </span>\n              <span *ngSwitchDefault>{{ row[column.property] }}</span>\n            </div>\n          </td>\n          <td *ngIf=\"isSingleAction\" class=\"po-table-column po-table-column-single-action\">\n            <div *ngIf=\"firstAction.visible !== false\"\n              class=\"po-table-single-action po-clickable\"\n              [class.po-table-action-disabled]= \"firstAction.disabled ? validateTableAction(row, firstAction) : false\"\n              (click)=\"executeTableAction(row, firstAction)\">\n\n              <span *ngIf=\"firstAction.icon\" class=\"po-icon {{ firstAction.icon }}\"></span>\n              {{ firstAction.label }}\n            </div>\n          </td>\n          <td *ngIf=\"visibleActions.length > 1\" class=\"po-table-column-actions\">\n            <span #popupTarget class=\"po-icon po-icon-more po-clickable\" (click)=\"togglePopup(row, popupTarget)\">\n            </span>\n          </td>\n          <!-- Column Manager -->\n          <td *ngIf=\"displayColumnManagerCell\" class=\"po-table-column\"></td>\n        </tr>\n\n        <tr *ngIf=\"hasMainColumns && hasRowTemplate && row.$showDetail && isShowRowTemplate(row, rowIndex)\">\n          <td class=\"po-table-row-template-container\" [colSpan]=\"columnCountForMasterDetail\">\n            <ng-template\n              [ngTemplateOutlet]=\"tableRowTemplate.templateRef\"\n              [ngTemplateOutletContext]=\"{ $implicit: row, rowIndex: rowIndex }\">\n            </ng-template>\n          </td>\n        </tr>\n\n        <tr *ngIf=\"hasMainColumns && isShowMasterDetail(row)\">\n          <td class=\"po-table-column-detail\" [colSpan]=\"columnCountForMasterDetail\">\n\n            <po-table-detail\n              [p-selectable]=\"selectable && !detailHideSelect\"\n              [p-detail]=\"columnMasterDetail.detail\"\n              [p-items]=\"row[nameColumnDetail]\"\n              (p-select-row)=\"selectDetailRow($event)\">\n            </po-table-detail>\n\n          </td>\n        </tr>\n      </tbody>\n    </ng-container>\n  </table>\n</ng-template>\n\n<po-popup #popup\n  [p-actions]=\"actions\"\n  [p-target]=\"popupTarget\">\n</po-popup>\n\n<ng-template #inputRadio let-row>\n  <input type=\"radio\" class=\"po-radio-group-input\" [class.po-radio-group-input-checked]=\"row.$selected\">\n  <label class=\"po-radio-group-label po-clickable\" (click)=\"selectable ? selectRow(row) : 'javascript:;'\"></label>\n</ng-template>\n\n<ng-template #inputCheckbox let-row>\n  <input type=\"checkbox\" class=\"po-table-checkbox\" [class.po-table-checkbox-checked]=\"row.$selected\">\n  <label class=\"po-table-checkbox-label po-clickable\" (click)=\"selectable ? selectRow(row) : 'javascript:;'\"></label>\n</ng-template>\n\n<ng-template #contentHeaderTemplate let-column>\n  <span *ngIf=\"sort\"\n    [class.po-table-header-icon-unselected]= \"sortedColumn?.property !== column\"\n    [class.po-table-header-icon-descending]= \"sortedColumn?.property === column && sortedColumn.ascending\"\n    [class.po-table-header-icon-ascending]= \"sortedColumn?.property === column && !sortedColumn.ascending\">\n  </span>\n  <span\n    class=\"po-table-header-ellipsis po-table-header-block\"\n    [p-tooltip]=\"tooltipText\"\n    (mouseenter)=\"tooltipMouseEnter($event)\"\n    (mouseleave)=\"tooltipMouseLeave()\">\n    {{ column.label || (column.property | titlecase) }}\n  </span>\n</ng-template>\n\n<ng-template #noColumnsWithHeight>\n  <div class=\"po-table-header-fixed-inner\" [style.width.px]=\"noColumnsHeader?.nativeElement.offsetWidth\">\n    {{ hasValidColumns ? literals.noVisibleColumn : literals.noColumns }}\n  </div>\n</ng-template>\n\n<ng-template #noColumnsWithoutHeight>\n  {{ hasValidColumns ? literals.noVisibleColumn : literals.noColumns }}\n</ng-template>\n\n<po-table-column-manager\n  [p-columns]=\"columns\"\n  [p-max-columns]=\"maxColumns\"\n  [p-target]=\"columnManagerTarget\"\n  (p-visible-columns-change)=\"onVisibleColumnsChange($event)\">\n</po-table-column-manager>\n",
            providers: [PoDateService]
        }),
        tslib_1.__metadata("design:paramtypes", [PoDateService,
            IterableDiffers,
            ViewContainerRef,
            Renderer2,
            ChangeDetectorRef,
            DecimalPipe,
            Router])
    ], PoTableComponent);
    return PoTableComponent;
}(PoTableBaseComponent));
export { PoTableComponent };
//# sourceMappingURL=data:application/json;base64,