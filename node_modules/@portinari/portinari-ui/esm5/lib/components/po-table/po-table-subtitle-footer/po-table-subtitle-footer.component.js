import * as tslib_1 from "tslib";
import { AfterViewInit, Component, DoCheck, ElementRef, Input, OnDestroy, Renderer2 } from '@angular/core';
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente para a criação de um conjunto de legendas.
 */
var PoTableSubtitleFooterComponent = /** @class */ (function () {
    function PoTableSubtitleFooterComponent(element, renderer) {
        this.element = element;
        this.renderer = renderer;
    }
    PoTableSubtitleFooterComponent.prototype.ngAfterViewInit = function () {
        this.initializeResizeListener();
        this.debounceResize();
    };
    PoTableSubtitleFooterComponent.prototype.ngDoCheck = function () {
        if (!this.isVisible && this.getContainerSize() > 0) {
            this.toggleShowCompleteSubtitle();
            this.isVisible = true;
        }
    };
    PoTableSubtitleFooterComponent.prototype.ngOnDestroy = function () {
        this.removeResizeListener();
    };
    PoTableSubtitleFooterComponent.prototype.debounceResize = function () {
        var _this = this;
        clearTimeout(this.timeoutResize);
        this.timeoutResize = setTimeout(function () {
            _this.toggleShowCompleteSubtitle();
        });
    };
    PoTableSubtitleFooterComponent.prototype.getContainerSize = function () {
        return this.element.nativeElement.querySelector('.po-table-subtitle-footer-container').offsetWidth;
    };
    PoTableSubtitleFooterComponent.prototype.getItemsSize = function () {
        var items = this.element.nativeElement.querySelectorAll('.po-table-subtitle-footer');
        return Array.from(items).map(function (item) { return item['offsetWidth']; }).reduce(function (a, b) { return a + b; }, 16);
    };
    PoTableSubtitleFooterComponent.prototype.initializeResizeListener = function () {
        var _this = this;
        this.resizeListener = this.renderer.listen('window', 'resize', function (event) {
            _this.debounceResize();
        });
    };
    PoTableSubtitleFooterComponent.prototype.removeResizeListener = function () {
        this.resizeListener();
    };
    PoTableSubtitleFooterComponent.prototype.toggleShowCompleteSubtitle = function () {
        var containerSize = this.getContainerSize();
        var itemsSize = this.getItemsSize();
        this.showSubtitle = itemsSize > containerSize;
    };
    PoTableSubtitleFooterComponent.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    tslib_1.__decorate([
        Input('p-literals'),
        tslib_1.__metadata("design:type", Object)
    ], PoTableSubtitleFooterComponent.prototype, "literals", void 0);
    tslib_1.__decorate([
        Input('p-subtitles'),
        tslib_1.__metadata("design:type", Array)
    ], PoTableSubtitleFooterComponent.prototype, "subtitles", void 0);
    PoTableSubtitleFooterComponent = tslib_1.__decorate([
        Component({
            selector: 'po-table-subtitle-footer',
            template: "<div class=\"po-table-subtitle-footer-container\">\n  <div *ngFor=\"let subtitle of subtitles\" class=\"po-table-subtitle-footer\">\n    <po-table-subtitle-circle\n      p-hide-title=\"true\"\n      [p-subtitle]=\"subtitle\">\n    </po-table-subtitle-circle>\n    <span class=\"po-table-subtitle-text\">{{ subtitle.label }}</span>\n  </div>\n  <po-table-show-subtitle *ngIf=\"showSubtitle\"\n    [p-literals]=\"literals\"\n    [p-subtitles]=\"subtitles\">\n  </po-table-show-subtitle>\n</div>\n"
        }),
        tslib_1.__metadata("design:paramtypes", [ElementRef, Renderer2])
    ], PoTableSubtitleFooterComponent);
    return PoTableSubtitleFooterComponent;
}());
export { PoTableSubtitleFooterComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdGFibGUtc3VidGl0bGUtZm9vdGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwb3J0aW5hcmkvcG9ydGluYXJpLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tdGFibGUvcG8tdGFibGUtc3VidGl0bGUtZm9vdGVyL3BvLXRhYmxlLXN1YnRpdGxlLWZvb3Rlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxhQUFhLEVBQUUsU0FBUyxFQUFFLE9BQU8sRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFJM0c7Ozs7OztHQU1HO0FBS0g7SUFjRSx3Q0FBb0IsT0FBbUIsRUFBUyxRQUFtQjtRQUEvQyxZQUFPLEdBQVAsT0FBTyxDQUFZO1FBQVMsYUFBUSxHQUFSLFFBQVEsQ0FBVztJQUFJLENBQUM7SUFFeEUsd0RBQWUsR0FBZjtRQUNFLElBQUksQ0FBQyx3QkFBd0IsRUFBRSxDQUFDO1FBQ2hDLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztJQUN4QixDQUFDO0lBRUQsa0RBQVMsR0FBVDtRQUVFLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxJQUFJLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxHQUFHLENBQUMsRUFBRTtZQUNsRCxJQUFJLENBQUMsMEJBQTBCLEVBQUUsQ0FBQztZQUNsQyxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQztTQUN2QjtJQUVILENBQUM7SUFFRCxvREFBVyxHQUFYO1FBQ0UsSUFBSSxDQUFDLG9CQUFvQixFQUFFLENBQUM7SUFDOUIsQ0FBQztJQUVPLHVEQUFjLEdBQXRCO1FBQUEsaUJBS0M7UUFKQyxZQUFZLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQ2pDLElBQUksQ0FBQyxhQUFhLEdBQUcsVUFBVSxDQUFDO1lBQzlCLEtBQUksQ0FBQywwQkFBMEIsRUFBRSxDQUFDO1FBQ3BDLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVPLHlEQUFnQixHQUF4QjtRQUNFLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsYUFBYSxDQUFDLHFDQUFxQyxDQUFDLENBQUMsV0FBVyxDQUFDO0lBQ3JHLENBQUM7SUFFTyxxREFBWSxHQUFwQjtRQUNFLElBQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLGdCQUFnQixDQUFDLDJCQUEyQixDQUFDLENBQUM7UUFFdkYsT0FBTyxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEdBQUcsQ0FBQyxVQUFBLElBQUksSUFBSSxPQUFBLElBQUksQ0FBQyxhQUFhLENBQUMsRUFBbkIsQ0FBbUIsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFDLENBQUMsRUFBRSxDQUFDLElBQUssT0FBQSxDQUFDLEdBQUcsQ0FBQyxFQUFMLENBQUssRUFBRSxFQUFFLENBQUMsQ0FBQztJQUN4RixDQUFDO0lBRU8saUVBQXdCLEdBQWhDO1FBQUEsaUJBSUM7UUFIQyxJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRSxRQUFRLEVBQUUsVUFBQyxLQUFpQjtZQUMvRSxLQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7UUFDeEIsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRU8sNkRBQW9CLEdBQTVCO1FBQ0UsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO0lBQ3hCLENBQUM7SUFFTyxtRUFBMEIsR0FBbEM7UUFDRSxJQUFNLGFBQWEsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztRQUM5QyxJQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7UUFFdEMsSUFBSSxDQUFDLFlBQVksR0FBRyxTQUFTLEdBQUcsYUFBYSxDQUFDO0lBQ2hELENBQUM7O2dCQXBENEIsVUFBVTtnQkFBbUIsU0FBUzs7SUFMOUM7UUFBcEIsS0FBSyxDQUFDLFlBQVksQ0FBQzs7b0VBQVU7SUFHUjtRQUFyQixLQUFLLENBQUMsYUFBYSxDQUFDOzBDQUFZLEtBQUs7cUVBQXdCO0lBWm5ELDhCQUE4QjtRQUoxQyxTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsMEJBQTBCO1lBQ3BDLDBmQUF3RDtTQUN6RCxDQUFDO2lEQWU2QixVQUFVLEVBQW1CLFNBQVM7T0FkeEQsOEJBQThCLENBb0UxQztJQUFELHFDQUFDO0NBQUEsQUFwRUQsSUFvRUM7U0FwRVksOEJBQThCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCwgQ29tcG9uZW50LCBEb0NoZWNrLCBFbGVtZW50UmVmLCBJbnB1dCwgT25EZXN0cm95LCBSZW5kZXJlcjIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgUG9UYWJsZVN1YnRpdGxlQ29sdW1uIH0gZnJvbSAnLi9wby10YWJsZS1zdWJ0aXRsZS1jb2x1bW4uaW50ZXJmYWNlJztcblxuLyoqXG4gKiBAZG9jc1ByaXZhdGVcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBDb21wb25lbnRlIHBhcmEgYSBjcmlhw6fDo28gZGUgdW0gY29uanVudG8gZGUgbGVnZW5kYXMuXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BvLXRhYmxlLXN1YnRpdGxlLWZvb3RlcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9wby10YWJsZS1zdWJ0aXRsZS1mb290ZXIuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFBvVGFibGVTdWJ0aXRsZUZvb3RlckNvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQsIERvQ2hlY2ssIE9uRGVzdHJveSB7XG5cbiAgc2hvd1N1YnRpdGxlOiBib29sZWFuO1xuXG4gIHByaXZhdGUgaXNWaXNpYmxlOiBib29sZWFuO1xuICBwcml2YXRlIHRpbWVvdXRSZXNpemU7XG4gIHByb3RlY3RlZCByZXNpemVMaXN0ZW5lcjogKCkgPT4gdm9pZDtcblxuICAvKiogUHJvcHJpZWRhZGUgcXVlIHJlY2ViZSBhcyBsaXRlcmFpcyBkZWZpbmlkYXMgbm8gYHBvLXRhYmxlYC4gKi9cbiAgQElucHV0KCdwLWxpdGVyYWxzJykgbGl0ZXJhbHM7XG5cbiAgLyoqIFByb3ByaWVkYWRlIHF1ZSByZWNlYmUgYXMgbGVnZW5kYXMgZGVmaW5pZGFzIG5vIGBQb1RhYmxlU3VidGl0bGVDaXJjbGVDb21wb25lbnRgLiAqL1xuICBASW5wdXQoJ3Atc3VidGl0bGVzJykgc3VidGl0bGVzOiBBcnJheTxQb1RhYmxlU3VidGl0bGVDb2x1bW4+O1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZWxlbWVudDogRWxlbWVudFJlZiwgcHVibGljIHJlbmRlcmVyOiBSZW5kZXJlcjIpIHsgfVxuXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgICB0aGlzLmluaXRpYWxpemVSZXNpemVMaXN0ZW5lcigpO1xuICAgIHRoaXMuZGVib3VuY2VSZXNpemUoKTtcbiAgfVxuXG4gIG5nRG9DaGVjaygpIHtcblxuICAgIGlmICghdGhpcy5pc1Zpc2libGUgJiYgdGhpcy5nZXRDb250YWluZXJTaXplKCkgPiAwKSB7XG4gICAgICB0aGlzLnRvZ2dsZVNob3dDb21wbGV0ZVN1YnRpdGxlKCk7XG4gICAgICB0aGlzLmlzVmlzaWJsZSA9IHRydWU7XG4gICAgfVxuXG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLnJlbW92ZVJlc2l6ZUxpc3RlbmVyKCk7XG4gIH1cblxuICBwcml2YXRlIGRlYm91bmNlUmVzaXplKCkge1xuICAgIGNsZWFyVGltZW91dCh0aGlzLnRpbWVvdXRSZXNpemUpO1xuICAgIHRoaXMudGltZW91dFJlc2l6ZSA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgdGhpcy50b2dnbGVTaG93Q29tcGxldGVTdWJ0aXRsZSgpO1xuICAgIH0pO1xuICB9XG5cbiAgcHJpdmF0ZSBnZXRDb250YWluZXJTaXplKCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcucG8tdGFibGUtc3VidGl0bGUtZm9vdGVyLWNvbnRhaW5lcicpLm9mZnNldFdpZHRoO1xuICB9XG5cbiAgcHJpdmF0ZSBnZXRJdGVtc1NpemUoKSB7XG4gICAgY29uc3QgaXRlbXMgPSB0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKCcucG8tdGFibGUtc3VidGl0bGUtZm9vdGVyJyk7XG5cbiAgICByZXR1cm4gQXJyYXkuZnJvbShpdGVtcykubWFwKGl0ZW0gPT4gaXRlbVsnb2Zmc2V0V2lkdGgnXSkucmVkdWNlKChhLCBiKSA9PiBhICsgYiwgMTYpO1xuICB9XG5cbiAgcHJpdmF0ZSBpbml0aWFsaXplUmVzaXplTGlzdGVuZXIoKSB7XG4gICAgdGhpcy5yZXNpemVMaXN0ZW5lciA9IHRoaXMucmVuZGVyZXIubGlzdGVuKCd3aW5kb3cnLCAncmVzaXplJywgKGV2ZW50OiBNb3VzZUV2ZW50KSA9PiB7XG4gICAgICB0aGlzLmRlYm91bmNlUmVzaXplKCk7XG4gICAgfSk7XG4gIH1cblxuICBwcml2YXRlIHJlbW92ZVJlc2l6ZUxpc3RlbmVyKCkge1xuICAgIHRoaXMucmVzaXplTGlzdGVuZXIoKTtcbiAgfVxuXG4gIHByaXZhdGUgdG9nZ2xlU2hvd0NvbXBsZXRlU3VidGl0bGUoKSB7XG4gICAgY29uc3QgY29udGFpbmVyU2l6ZSA9IHRoaXMuZ2V0Q29udGFpbmVyU2l6ZSgpO1xuICAgIGNvbnN0IGl0ZW1zU2l6ZSA9IHRoaXMuZ2V0SXRlbXNTaXplKCk7XG5cbiAgICB0aGlzLnNob3dTdWJ0aXRsZSA9IGl0ZW1zU2l6ZSA+IGNvbnRhaW5lclNpemU7XG4gIH1cblxufVxuIl19