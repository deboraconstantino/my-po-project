import * as tslib_1 from "tslib";
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { DecimalPipe } from '@angular/common';
import { capitalizeFirstLetter, isTypeof } from '../../../utils/util';
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente responsável por apresentar o detalhe de cada linha da tabela.
 */
var PoTableDetailComponent = /** @class */ (function () {
    function PoTableDetailComponent(decimalPipe) {
        this.decimalPipe = decimalPipe;
        /**
         * Define se a tabela possui a opção de `selectable` habilitada.
         */
        this.isSelectable = false;
        /**
         * Ação executada ao selecionar ou desmarcar a seleção de uma linha de detalhe do `po-table`.
         */
        this.selectRow = new EventEmitter();
    }
    Object.defineProperty(PoTableDetailComponent.prototype, "detail", {
        get: function () {
            return this._detail;
        },
        /**
         * Configuração da linha de detalhes.
         */
        set: function (value) {
            this._detail = this.returnPoTableDetailObject(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoTableDetailComponent.prototype, "detailColumns", {
        get: function () {
            return this.detail && this.detail.columns || [];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoTableDetailComponent.prototype, "typeHeaderInline", {
        get: function () {
            return this.detail && !this.detail['typeHeader'] || this.detail['typeHeader'] === 'inline';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoTableDetailComponent.prototype, "typeHeaderTop", {
        get: function () {
            return this.detail && this.detail['typeHeader'] === 'top';
        },
        enumerable: true,
        configurable: true
    });
    PoTableDetailComponent.prototype.formatNumberDetail = function (value, format) {
        if (!format) {
            return value;
        }
        return this.decimalPipe.transform(value, format);
    };
    PoTableDetailComponent.prototype.getColumnTitleLabel = function (detail) {
        return detail.label || capitalizeFirstLetter(detail.property);
    };
    PoTableDetailComponent.prototype.onSelectRow = function (item) {
        item.$selected = !item.$selected;
        this.selectRow.emit(item);
    };
    PoTableDetailComponent.prototype.returnPoTableDetailObject = function (value) {
        if (value && isTypeof(value, 'object')) {
            if (value.columns) {
                value.columns.forEach(function (column) { return column.property = column.property || column.column; });
            }
            if (Array.isArray(value)) {
                return { columns: value };
            }
            if (value.columns) {
                return value;
            }
        }
    };
    PoTableDetailComponent.ctorParameters = function () { return [
        { type: DecimalPipe }
    ]; };
    tslib_1.__decorate([
        Input('p-detail'),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], PoTableDetailComponent.prototype, "detail", null);
    tslib_1.__decorate([
        Input('p-items'),
        tslib_1.__metadata("design:type", Array)
    ], PoTableDetailComponent.prototype, "items", void 0);
    tslib_1.__decorate([
        Input('p-selectable'),
        tslib_1.__metadata("design:type", Boolean)
    ], PoTableDetailComponent.prototype, "isSelectable", void 0);
    tslib_1.__decorate([
        Output('p-select-row'),
        tslib_1.__metadata("design:type", EventEmitter)
    ], PoTableDetailComponent.prototype, "selectRow", void 0);
    PoTableDetailComponent = tslib_1.__decorate([
        Component({
            selector: 'po-table-detail',
            template: "<table class=\"po-table-master-detail\">\n  <thead *ngIf=\"typeHeaderTop\">\n    <tr>\n      <th class=\"po-table-header po-table-column-selectable\" *ngIf=\"isSelectable\"></th>\n      <th class=\"po-table-header po-table-header-column po-table-header-master-detail\"></th>\n      <th class=\"po-table-header po-table-header-ellipsis\" *ngFor=\"let detail of detail.columns\">\n        {{ getColumnTitleLabel(detail) }}\n      </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr class=\"po-table-detail-row\"\n        [class.po-table-row-active]=\"item.$selected && isSelectable\"\n        *ngFor=\"let item of items\">\n\n      <ng-container *ngIf=\"isSelectable; else masterDetailSpace\">\n\n        <td class=\"po-table-column-master-detail-space-checkbox\"></td>\n        <td class=\"po-table-column po-table-column-selectable\">\n          <input\n            class=\"po-table-checkbox\"\n            type=\"checkbox\"\n            [class.po-table-checkbox-checked]=\"item.$selected\">\n          <label class=\"po-table-checkbox-label po-clickable\" (click)=\"onSelectRow(item)\">\n          </label>\n        </td>\n\n      </ng-container>\n\n      <ng-template #masterDetailSpace>\n        <td class=\"po-table-column-master-detail-space\"></td>\n      </ng-template>\n\n      <td class=\"po-table-column-master-detail po-table-master-detail-label\"\n        (click)=\"isSelectable ? onSelectRow(item) : 'javascript:;'\"\n        *ngFor=\"let detail of detailColumns\">\n        <strong *ngIf=\"typeHeaderInline\"> {{ getColumnTitleLabel(detail) }}: </strong>\n\n        <ng-container [ngSwitch]=\"detail.type\">\n          <span *ngSwitchCase=\"'currency'\">{{ item[detail.property] | currency: detail.format:'symbol':'1.2-2' }}</span>\n          <span *ngSwitchCase=\"'date'\">{{ item[detail.property] | date: detail.format || 'dd/MM/yyyy' }}</span>\n          <span *ngSwitchCase=\"'time'\">{{ item[detail.property] | po_time: detail.format || 'HH:mm:ss.ffffff' }}</span>\n          <span *ngSwitchCase=\"'dateTime'\">{{ item[detail.property] | date: detail.format || 'dd/MM/yyyy HH:mm:ss' }}</span>\n          <span *ngSwitchCase=\"'number'\">{{ formatNumberDetail(item[detail.property], detail.format) }}</span>\n          <span *ngSwitchDefault>{{ item[detail.property] }}</span>\n        </ng-container>\n      </td>\n    </tr>\n  </tbody>\n</table>\n"
        }),
        tslib_1.__metadata("design:paramtypes", [DecimalPipe])
    ], PoTableDetailComponent);
    return PoTableDetailComponent;
}());
export { PoTableDetailComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdGFibGUtZGV0YWlsLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwb3J0aW5hcmkvcG9ydGluYXJpLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tdGFibGUvcG8tdGFibGUtZGV0YWlsL3BvLXRhYmxlLWRldGFpbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDdkUsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRTlDLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxRQUFRLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUt0RTs7Ozs7O0dBTUc7QUFLSDtJQThCRSxnQ0FBb0IsV0FBd0I7UUFBeEIsZ0JBQVcsR0FBWCxXQUFXLENBQWE7UUFWNUM7O1dBRUc7UUFDb0IsaUJBQVksR0FBYSxLQUFLLENBQUM7UUFFdEQ7O1dBRUc7UUFDcUIsY0FBUyxHQUF1QixJQUFJLFlBQVksRUFBTyxDQUFDO0lBRWpDLENBQUM7SUF2QjdCLHNCQUFJLDBDQUFNO2FBSTdCO1lBQ0UsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO1FBQ3RCLENBQUM7UUFURDs7V0FFRzthQUNnQixVQUFXLEtBQW9CO1lBQ2hELElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLHlCQUF5QixDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3ZELENBQUM7OztPQUFBO0lBdUJELHNCQUFJLGlEQUFhO2FBQWpCO1lBQ0UsT0FBTyxJQUFJLENBQUMsTUFBTSxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxJQUFJLEVBQUUsQ0FBQztRQUNsRCxDQUFDOzs7T0FBQTtJQUVELHNCQUFJLG9EQUFnQjthQUFwQjtZQUNFLE9BQU8sSUFBSSxDQUFDLE1BQU0sSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsS0FBSyxRQUFRLENBQUM7UUFDN0YsQ0FBQzs7O09BQUE7SUFFRCxzQkFBSSxpREFBYTthQUFqQjtZQUNFLE9BQU8sSUFBSSxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxLQUFLLEtBQUssQ0FBQztRQUM1RCxDQUFDOzs7T0FBQTtJQUVELG1EQUFrQixHQUFsQixVQUFtQixLQUFVLEVBQUUsTUFBYztRQUMzQyxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ1gsT0FBTyxLQUFLLENBQUM7U0FDZDtRQUVELE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ25ELENBQUM7SUFFRCxvREFBbUIsR0FBbkIsVUFBb0IsTUFBMkI7UUFDN0MsT0FBTyxNQUFNLENBQUMsS0FBSyxJQUFJLHFCQUFxQixDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNoRSxDQUFDO0lBRUQsNENBQVcsR0FBWCxVQUFZLElBQUk7UUFDZCxJQUFJLENBQUMsU0FBUyxHQUFHLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQztRQUNqQyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM1QixDQUFDO0lBRU8sMERBQXlCLEdBQWpDLFVBQWtDLEtBQVU7UUFDMUMsSUFBSSxLQUFLLElBQUksUUFBUSxDQUFDLEtBQUssRUFBRSxRQUFRLENBQUMsRUFBRTtZQUV0QyxJQUFJLEtBQUssQ0FBQyxPQUFPLEVBQUU7Z0JBQ2pCLEtBQUssQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLFVBQUEsTUFBTSxJQUFJLE9BQUEsTUFBTSxDQUFDLFFBQVEsR0FBRyxNQUFNLENBQUMsUUFBUSxJQUFJLE1BQU0sQ0FBQyxNQUFNLEVBQWxELENBQWtELENBQUMsQ0FBQzthQUNyRjtZQUVELElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRTtnQkFDeEIsT0FBTyxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsQ0FBQzthQUMzQjtZQUVELElBQUksS0FBSyxDQUFDLE9BQU8sRUFBRTtnQkFDakIsT0FBTyxLQUFLLENBQUM7YUFDZDtTQUNGO0lBQ0gsQ0FBQzs7Z0JBOUNnQyxXQUFXOztJQXZCekI7UUFBbEIsS0FBSyxDQUFDLFVBQVUsQ0FBQzs7O3dEQUVqQjtJQVNpQjtRQUFqQixLQUFLLENBQUMsU0FBUyxDQUFDOzBDQUFRLEtBQUs7eURBQU07SUFLYjtRQUF0QixLQUFLLENBQUMsY0FBYyxDQUFDOztnRUFBZ0M7SUFLOUI7UUFBdkIsTUFBTSxDQUFDLGNBQWMsQ0FBQzswQ0FBYSxZQUFZOzZEQUFnQztJQTVCckUsc0JBQXNCO1FBSmxDLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxpQkFBaUI7WUFDM0IsdzBFQUErQztTQUNoRCxDQUFDO2lEQStCaUMsV0FBVztPQTlCakMsc0JBQXNCLENBOEVsQztJQUFELDZCQUFDO0NBQUEsQUE5RUQsSUE4RUM7U0E5RVksc0JBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERlY2ltYWxQaXBlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcblxuaW1wb3J0IHsgY2FwaXRhbGl6ZUZpcnN0TGV0dGVyLCBpc1R5cGVvZiB9IGZyb20gJy4uLy4uLy4uL3V0aWxzL3V0aWwnO1xuXG5pbXBvcnQgeyBQb1RhYmxlRGV0YWlsIH0gZnJvbSAnLi9wby10YWJsZS1kZXRhaWwuaW50ZXJmYWNlJztcbmltcG9ydCB7IFBvVGFibGVEZXRhaWxDb2x1bW4gfSBmcm9tICcuL3BvLXRhYmxlLWRldGFpbC1jb2x1bW4uaW50ZXJmYWNlJztcblxuLyoqXG4gKiBAZG9jc1ByaXZhdGVcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBDb21wb25lbnRlIHJlc3BvbnPDoXZlbCBwb3IgYXByZXNlbnRhciBvIGRldGFsaGUgZGUgY2FkYSBsaW5oYSBkYSB0YWJlbGEuXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BvLXRhYmxlLWRldGFpbCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9wby10YWJsZS1kZXRhaWwuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFBvVGFibGVEZXRhaWxDb21wb25lbnQge1xuXG4gIHByaXZhdGUgX2RldGFpbDogUG9UYWJsZURldGFpbDtcblxuICAvKipcbiAgICogQ29uZmlndXJhw6fDo28gZGEgbGluaGEgZGUgZGV0YWxoZXMuXG4gICAqL1xuICBASW5wdXQoJ3AtZGV0YWlsJykgc2V0IGRldGFpbCh2YWx1ZTogUG9UYWJsZURldGFpbCkge1xuICAgIHRoaXMuX2RldGFpbCA9IHRoaXMucmV0dXJuUG9UYWJsZURldGFpbE9iamVjdCh2YWx1ZSk7XG4gIH1cblxuICBnZXQgZGV0YWlsKCkge1xuICAgIHJldHVybiB0aGlzLl9kZXRhaWw7XG4gIH1cblxuICAvKipcbiAgICogTGlzdGEgZGUgaXRlbnMgZG8gX2RldGFpbF8gZGEgdGFiZWxhLlxuICAgKi9cbiAgQElucHV0KCdwLWl0ZW1zJykgaXRlbXM6IEFycmF5PGFueT47XG5cbiAgLyoqXG4gICAqIERlZmluZSBzZSBhIHRhYmVsYSBwb3NzdWkgYSBvcMOnw6NvIGRlIGBzZWxlY3RhYmxlYCBoYWJpbGl0YWRhLlxuICAgKi9cbiAgQElucHV0KCdwLXNlbGVjdGFibGUnKSBpc1NlbGVjdGFibGU/OiBib29sZWFuID0gZmFsc2U7XG5cbiAgLyoqXG4gICAqIEHDp8OjbyBleGVjdXRhZGEgYW8gc2VsZWNpb25hciBvdSBkZXNtYXJjYXIgYSBzZWxlw6fDo28gZGUgdW1hIGxpbmhhIGRlIGRldGFsaGUgZG8gYHBvLXRhYmxlYC5cbiAgICovXG4gIEBPdXRwdXQoJ3Atc2VsZWN0LXJvdycpIHNlbGVjdFJvdz86IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBkZWNpbWFsUGlwZTogRGVjaW1hbFBpcGUpIHt9XG5cbiAgZ2V0IGRldGFpbENvbHVtbnMoKTogQXJyYXk8UG9UYWJsZURldGFpbENvbHVtbj4ge1xuICAgIHJldHVybiB0aGlzLmRldGFpbCAmJiB0aGlzLmRldGFpbC5jb2x1bW5zIHx8IFtdO1xuICB9XG5cbiAgZ2V0IHR5cGVIZWFkZXJJbmxpbmUoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuZGV0YWlsICYmICF0aGlzLmRldGFpbFsndHlwZUhlYWRlciddIHx8IHRoaXMuZGV0YWlsWyd0eXBlSGVhZGVyJ10gPT09ICdpbmxpbmUnO1xuICB9XG5cbiAgZ2V0IHR5cGVIZWFkZXJUb3AoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuZGV0YWlsICYmIHRoaXMuZGV0YWlsWyd0eXBlSGVhZGVyJ10gPT09ICd0b3AnO1xuICB9XG5cbiAgZm9ybWF0TnVtYmVyRGV0YWlsKHZhbHVlOiBhbnksIGZvcm1hdDogc3RyaW5nKSB7XG4gICAgaWYgKCFmb3JtYXQpIHtcbiAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5kZWNpbWFsUGlwZS50cmFuc2Zvcm0odmFsdWUsIGZvcm1hdCk7XG4gIH1cblxuICBnZXRDb2x1bW5UaXRsZUxhYmVsKGRldGFpbDogUG9UYWJsZURldGFpbENvbHVtbikge1xuICAgIHJldHVybiBkZXRhaWwubGFiZWwgfHwgY2FwaXRhbGl6ZUZpcnN0TGV0dGVyKGRldGFpbC5wcm9wZXJ0eSk7XG4gIH1cblxuICBvblNlbGVjdFJvdyhpdGVtKSB7XG4gICAgaXRlbS4kc2VsZWN0ZWQgPSAhaXRlbS4kc2VsZWN0ZWQ7XG4gICAgdGhpcy5zZWxlY3RSb3cuZW1pdChpdGVtKTtcbiAgfVxuXG4gIHByaXZhdGUgcmV0dXJuUG9UYWJsZURldGFpbE9iamVjdCh2YWx1ZTogYW55KSB7XG4gICAgaWYgKHZhbHVlICYmIGlzVHlwZW9mKHZhbHVlLCAnb2JqZWN0JykpIHtcblxuICAgICAgaWYgKHZhbHVlLmNvbHVtbnMpIHtcbiAgICAgICAgdmFsdWUuY29sdW1ucy5mb3JFYWNoKGNvbHVtbiA9PiBjb2x1bW4ucHJvcGVydHkgPSBjb2x1bW4ucHJvcGVydHkgfHwgY29sdW1uLmNvbHVtbik7XG4gICAgICB9XG5cbiAgICAgIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgICByZXR1cm4geyBjb2x1bW5zOiB2YWx1ZSB9O1xuICAgICAgfVxuXG4gICAgICBpZiAodmFsdWUuY29sdW1ucykge1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbn1cbiJdfQ==