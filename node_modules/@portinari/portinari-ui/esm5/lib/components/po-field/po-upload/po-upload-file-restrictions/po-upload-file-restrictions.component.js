import * as tslib_1 from "tslib";
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';
import { browserLanguage, formatBytes, poLocaleDefault } from '../../../../utils/util';
import { poUploadLiteralsDefault } from '../po-upload-base.component';
var PoUploadFileRestrictionsComponent = /** @class */ (function () {
    function PoUploadFileRestrictionsComponent(changeDetector) {
        this.changeDetector = changeDetector;
    }
    Object.defineProperty(PoUploadFileRestrictionsComponent.prototype, "allowedExtensions", {
        get: function () {
            return this._allowedExtensions;
        },
        set: function (value) {
            this._allowedExtensions = this.formatAllowedExtensions(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoUploadFileRestrictionsComponent.prototype, "maxFileSize", {
        get: function () {
            return this._maxFileSize;
        },
        set: function (value) {
            this._maxFileSize = formatBytes(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoUploadFileRestrictionsComponent.prototype, "minFileSize", {
        get: function () {
            return this._minFileSize;
        },
        set: function (value) {
            this._minFileSize = formatBytes(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoUploadFileRestrictionsComponent.prototype, "language", {
        get: function () {
            return browserLanguage();
        },
        enumerable: true,
        configurable: true
    });
    PoUploadFileRestrictionsComponent.prototype.ngOnInit = function () {
        this.setLiterals();
    };
    PoUploadFileRestrictionsComponent.prototype.formatAllowedExtensions = function (allowedExtensions) {
        var conjunction = { 'pt': 'e', 'en': 'and', 'es': 'y' };
        return allowedExtensions ? allowedExtensions
            .join(', ')
            .toUpperCase()
            .replace(/,(?=[^,]*$)/, " " + conjunction[this.language]) : undefined;
    };
    PoUploadFileRestrictionsComponent.prototype.setLiterals = function () {
        this.literals = tslib_1.__assign({}, poUploadLiteralsDefault[poLocaleDefault], poUploadLiteralsDefault[this.language]);
        this.changeDetector.detectChanges();
    };
    PoUploadFileRestrictionsComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef }
    ]; };
    tslib_1.__decorate([
        Input('p-allowed-extensions'),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], PoUploadFileRestrictionsComponent.prototype, "allowedExtensions", null);
    tslib_1.__decorate([
        Input('p-max-files'),
        tslib_1.__metadata("design:type", Number)
    ], PoUploadFileRestrictionsComponent.prototype, "maxFiles", void 0);
    tslib_1.__decorate([
        Input('p-max-file-size'),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], PoUploadFileRestrictionsComponent.prototype, "maxFileSize", null);
    tslib_1.__decorate([
        Input('p-min-file-size'),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], PoUploadFileRestrictionsComponent.prototype, "minFileSize", null);
    PoUploadFileRestrictionsComponent = tslib_1.__decorate([
        Component({
            selector: 'po-upload-file-restrictions',
            template: "<p class=\"po-font-text-small\" *ngIf=\"maxFiles > 1\">\n  {{ literals?.numberOfFilesAllowed | poI18n:maxFiles }}\n</p>\n\n<p class=\"po-font-text-small\" *ngIf=\"allowedExtensions\">\n  {{ literals?.allowedFormats | poI18n:allowedExtensions }}\n</p>\n\n<p class=\"po-font-text-small\" *ngIf=\"minFileSize || maxFileSize\">\n  <span>{{ literals?.allowedSizes }}</span>\n\n  <span *ngIf=\"minFileSize && maxFileSize\">\n    {{ literals?.allowedFileSizeRange | poI18n:[minFileSize, maxFileSize] }}\n  </span>\n\n  <span *ngIf=\"minFileSize && !maxFileSize\">\n    {{ literals?.minFileSizeAllowed | poI18n:minFileSize }}\n  </span>\n\n  <span *ngIf=\"maxFileSize && !minFileSize\">\n    {{ literals?.maxFileSizeAllowed | poI18n:maxFileSize }}\n  </span>\n</p>\n",
            changeDetection: ChangeDetectionStrategy.OnPush
        }),
        tslib_1.__metadata("design:paramtypes", [ChangeDetectorRef])
    ], PoUploadFileRestrictionsComponent);
    return PoUploadFileRestrictionsComponent;
}());
export { PoUploadFileRestrictionsComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdXBsb2FkLWZpbGUtcmVzdHJpY3Rpb25zLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwb3J0aW5hcmkvcG9ydGluYXJpLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tZmllbGQvcG8tdXBsb2FkL3BvLXVwbG9hZC1maWxlLXJlc3RyaWN0aW9ucy9wby11cGxvYWQtZmlsZS1yZXN0cmljdGlvbnMuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsaUJBQWlCLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFckcsT0FBTyxFQUFFLGVBQWUsRUFBRSxXQUFXLEVBQUUsZUFBZSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFFdkYsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFPdEU7SUFzQ0UsMkNBQW9CLGNBQWlDO1FBQWpDLG1CQUFjLEdBQWQsY0FBYyxDQUFtQjtJQUFJLENBQUM7SUE5QjNCLHNCQUFJLGdFQUFpQjthQUlwRDtZQUNFLE9BQU8sSUFBSSxDQUFDLGtCQUFrQixDQUFDO1FBQ2pDLENBQUM7YUFOOEIsVUFBc0IsS0FBSztZQUN4RCxJQUFJLENBQUMsa0JBQWtCLEdBQUcsSUFBSSxDQUFDLHVCQUF1QixDQUFNLEtBQUssQ0FBQyxDQUFDO1FBQ3JFLENBQUM7OztPQUFBO0lBUXlCLHNCQUFJLDBEQUFXO2FBSXpDO1lBQ0UsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDO1FBQzNCLENBQUM7YUFOeUIsVUFBZ0IsS0FBSztZQUM3QyxJQUFJLENBQUMsWUFBWSxHQUFHLFdBQVcsQ0FBTSxLQUFLLENBQUMsQ0FBQztRQUM5QyxDQUFDOzs7T0FBQTtJQU15QixzQkFBSSwwREFBVzthQUl6QztZQUNFLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQztRQUMzQixDQUFDO2FBTnlCLFVBQWdCLEtBQUs7WUFDN0MsSUFBSSxDQUFDLFlBQVksR0FBRyxXQUFXLENBQU0sS0FBSyxDQUFDLENBQUM7UUFDOUMsQ0FBQzs7O09BQUE7SUFNRCxzQkFBSSx1REFBUTthQUFaO1lBQ0UsT0FBTyxlQUFlLEVBQUUsQ0FBQztRQUMzQixDQUFDOzs7T0FBQTtJQUlELG9EQUFRLEdBQVI7UUFDRSxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDckIsQ0FBQztJQUVPLG1FQUF1QixHQUEvQixVQUFnQyxpQkFBZ0M7UUFDOUQsSUFBTSxXQUFXLEdBQUcsRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxDQUFDO1FBRTFELE9BQU8saUJBQWlCLENBQUMsQ0FBQyxDQUFDLGlCQUFpQjthQUN6QyxJQUFJLENBQUMsSUFBSSxDQUFDO2FBQ1YsV0FBVyxFQUFFO2FBQ2IsT0FBTyxDQUFDLGFBQWEsRUFBRSxNQUFJLFdBQVcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDO0lBQzFFLENBQUM7SUFFTyx1REFBVyxHQUFuQjtRQUNFLElBQUksQ0FBQyxRQUFRLHdCQUNSLHVCQUF1QixDQUFDLGVBQWUsQ0FBQyxFQUN4Qyx1QkFBdUIsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQzFDLENBQUM7UUFFRixJQUFJLENBQUMsY0FBYyxDQUFDLGFBQWEsRUFBRSxDQUFDO0lBQ3RDLENBQUM7O2dCQXRCbUMsaUJBQWlCOztJQTlCdEI7UUFBOUIsS0FBSyxDQUFDLHNCQUFzQixDQUFDOzs7OEVBRTdCO0lBTXFCO1FBQXJCLEtBQUssQ0FBQyxhQUFhLENBQUM7O3VFQUFrQjtJQUViO1FBQXpCLEtBQUssQ0FBQyxpQkFBaUIsQ0FBQzs7O3dFQUV4QjtJQU15QjtRQUF6QixLQUFLLENBQUMsaUJBQWlCLENBQUM7Ozt3RUFFeEI7SUE1QlUsaUNBQWlDO1FBTDdDLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSw2QkFBNkI7WUFDdkMsa3dCQUEyRDtZQUMzRCxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtTQUNoRCxDQUFDO2lEQXVDb0MsaUJBQWlCO09BdEMxQyxpQ0FBaUMsQ0E4RDdDO0lBQUQsd0NBQUM7Q0FBQSxBQTlERCxJQThEQztTQTlEWSxpQ0FBaUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ2hhbmdlRGV0ZWN0b3JSZWYsIENvbXBvbmVudCwgSW5wdXQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBicm93c2VyTGFuZ3VhZ2UsIGZvcm1hdEJ5dGVzLCBwb0xvY2FsZURlZmF1bHQgfSBmcm9tICcuLi8uLi8uLi8uLi91dGlscy91dGlsJztcblxuaW1wb3J0IHsgcG9VcGxvYWRMaXRlcmFsc0RlZmF1bHQgfSBmcm9tICcuLi9wby11cGxvYWQtYmFzZS5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwby11cGxvYWQtZmlsZS1yZXN0cmljdGlvbnMnLFxuICB0ZW1wbGF0ZVVybDogJy4vcG8tdXBsb2FkLWZpbGUtcmVzdHJpY3Rpb25zLmNvbXBvbmVudC5odG1sJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcbn0pXG5leHBvcnQgY2xhc3MgUG9VcGxvYWRGaWxlUmVzdHJpY3Rpb25zQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICBwcml2YXRlIF9hbGxvd2VkRXh0ZW5zaW9uczogc3RyaW5nO1xuICBwcml2YXRlIF9tYXhGaWxlU2l6ZTogc3RyaW5nO1xuICBwcml2YXRlICBfbWluRmlsZVNpemU6IHN0cmluZztcblxuICBsaXRlcmFsczogYW55O1xuXG4gIEBJbnB1dCgncC1hbGxvd2VkLWV4dGVuc2lvbnMnKSBzZXQgYWxsb3dlZEV4dGVuc2lvbnModmFsdWUpIHtcbiAgICB0aGlzLl9hbGxvd2VkRXh0ZW5zaW9ucyA9IHRoaXMuZm9ybWF0QWxsb3dlZEV4dGVuc2lvbnMoPGFueT52YWx1ZSk7XG4gIH1cblxuICBnZXQgYWxsb3dlZEV4dGVuc2lvbnMoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5fYWxsb3dlZEV4dGVuc2lvbnM7XG4gIH1cblxuICBASW5wdXQoJ3AtbWF4LWZpbGVzJykgbWF4RmlsZXM6IG51bWJlcjtcblxuICBASW5wdXQoJ3AtbWF4LWZpbGUtc2l6ZScpIHNldCBtYXhGaWxlU2l6ZSh2YWx1ZSkge1xuICAgIHRoaXMuX21heEZpbGVTaXplID0gZm9ybWF0Qnl0ZXMoPGFueT52YWx1ZSk7XG4gIH1cblxuICBnZXQgbWF4RmlsZVNpemUoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5fbWF4RmlsZVNpemU7XG4gIH1cblxuICBASW5wdXQoJ3AtbWluLWZpbGUtc2l6ZScpIHNldCBtaW5GaWxlU2l6ZSh2YWx1ZSkge1xuICAgIHRoaXMuX21pbkZpbGVTaXplID0gZm9ybWF0Qnl0ZXMoPGFueT52YWx1ZSk7XG4gIH1cblxuICBnZXQgbWluRmlsZVNpemUoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5fbWluRmlsZVNpemU7XG4gIH1cblxuICBnZXQgbGFuZ3VhZ2UoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gYnJvd3Nlckxhbmd1YWdlKCk7XG4gIH1cblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGNoYW5nZURldGVjdG9yOiBDaGFuZ2VEZXRlY3RvclJlZikgeyB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5zZXRMaXRlcmFscygpO1xuICB9XG5cbiAgcHJpdmF0ZSBmb3JtYXRBbGxvd2VkRXh0ZW5zaW9ucyhhbGxvd2VkRXh0ZW5zaW9uczogQXJyYXk8c3RyaW5nPik6IHN0cmluZyB7XG4gICAgY29uc3QgY29uanVuY3Rpb24gPSB7ICdwdCc6ICdlJywgJ2VuJzogJ2FuZCcsICdlcyc6ICd5JyB9O1xuXG4gICAgcmV0dXJuIGFsbG93ZWRFeHRlbnNpb25zID8gYWxsb3dlZEV4dGVuc2lvbnNcbiAgICAgIC5qb2luKCcsICcpXG4gICAgICAudG9VcHBlckNhc2UoKVxuICAgICAgLnJlcGxhY2UoLywoPz1bXixdKiQpLywgYCAke2Nvbmp1bmN0aW9uW3RoaXMubGFuZ3VhZ2VdfWApIDogdW5kZWZpbmVkO1xuICB9XG5cbiAgcHJpdmF0ZSBzZXRMaXRlcmFscygpIHtcbiAgICB0aGlzLmxpdGVyYWxzID0ge1xuICAgICAgLi4ucG9VcGxvYWRMaXRlcmFsc0RlZmF1bHRbcG9Mb2NhbGVEZWZhdWx0XSxcbiAgICAgIC4uLnBvVXBsb2FkTGl0ZXJhbHNEZWZhdWx0W3RoaXMubGFuZ3VhZ2VdLFxuICAgIH07XG5cbiAgICB0aGlzLmNoYW5nZURldGVjdG9yLmRldGVjdENoYW5nZXMoKTtcbiAgfVxuXG59XG4iXX0=