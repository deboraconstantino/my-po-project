import * as tslib_1 from "tslib";
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { convertToInt } from '../../../../utils/util';
import { PoUploadDragDropAreaComponent } from './po-upload-drag-drop-area/po-upload-drag-drop-area.component';
var PoUploadDragDropHeightDefault = 320;
var PoUploadDragDropHeightMin = 160;
var PoUploadDragDropComponent = /** @class */ (function () {
    function PoUploadDragDropComponent(changeDetector) {
        this.changeDetector = changeDetector;
        this._dragDropHeight = PoUploadDragDropHeightDefault;
        this.isDragOver = false;
        this.fileChange = new EventEmitter();
        this.selectFiles = new EventEmitter();
    }
    Object.defineProperty(PoUploadDragDropComponent.prototype, "dragDropHeight", {
        get: function () {
            return this._dragDropHeight;
        },
        set: function (value) {
            var dragDropHeight = convertToInt(value, PoUploadDragDropHeightDefault);
            this._dragDropHeight = (dragDropHeight < PoUploadDragDropHeightMin) ? PoUploadDragDropHeightMin : dragDropHeight;
        },
        enumerable: true,
        configurable: true
    });
    PoUploadDragDropComponent.prototype.focus = function () {
        this.dragDropAreaComponent.focus();
    };
    PoUploadDragDropComponent.prototype.onAreaElement = function (element) {
        this.areaElement = element;
        // necessário para não ocorrer o erro HasBeenChecked
        this.changeDetector.detectChanges();
    };
    PoUploadDragDropComponent.prototype.onDragLeave = function () {
        this.isDragOver = false;
    };
    PoUploadDragDropComponent.prototype.onDragOver = function () {
        this.isDragOver = true;
    };
    PoUploadDragDropComponent.prototype.onFileChange = function (files) {
        this.isDragOver = false;
        this.fileChange.emit(files);
    };
    PoUploadDragDropComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef }
    ]; };
    tslib_1.__decorate([
        ViewChild('dragDropOverlay', { read: ElementRef, static: false }),
        tslib_1.__metadata("design:type", ElementRef)
    ], PoUploadDragDropComponent.prototype, "dragDropOverlayElement", void 0);
    tslib_1.__decorate([
        ViewChild(PoUploadDragDropAreaComponent, { static: true }),
        tslib_1.__metadata("design:type", PoUploadDragDropAreaComponent)
    ], PoUploadDragDropComponent.prototype, "dragDropAreaComponent", void 0);
    tslib_1.__decorate([
        Input('p-directory-compatible'),
        tslib_1.__metadata("design:type", Boolean)
    ], PoUploadDragDropComponent.prototype, "directoryCompatible", void 0);
    tslib_1.__decorate([
        Input('p-disabled'),
        tslib_1.__metadata("design:type", Boolean)
    ], PoUploadDragDropComponent.prototype, "disabled", void 0);
    tslib_1.__decorate([
        Input('p-drag-drop-height'),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], PoUploadDragDropComponent.prototype, "dragDropHeight", null);
    tslib_1.__decorate([
        Input('p-literals'),
        tslib_1.__metadata("design:type", Object)
    ], PoUploadDragDropComponent.prototype, "literals", void 0);
    tslib_1.__decorate([
        Output('p-file-change'),
        tslib_1.__metadata("design:type", EventEmitter)
    ], PoUploadDragDropComponent.prototype, "fileChange", void 0);
    tslib_1.__decorate([
        Output('p-select-files'),
        tslib_1.__metadata("design:type", EventEmitter)
    ], PoUploadDragDropComponent.prototype, "selectFiles", void 0);
    PoUploadDragDropComponent = tslib_1.__decorate([
        Component({
            selector: 'po-upload-drag-drop',
            template: "<po-upload-drag-drop-area-overlay #dragDropOverlay *ngIf=\"isDragOver\"\r\n  [p-directory-compatible]=\"directoryCompatible\"\r\n  [p-disabled]=\"disabled\"\r\n  [p-literals]=\"literals\"\r\n  [p-target]=\"dragDropAreaComponent.elementRef\"\r\n  (p-area-element)=\"onAreaElement($event)\">\r\n</po-upload-drag-drop-area-overlay>\r\n\r\n<po-upload-drag-drop-area\r\n  p-upload-drag-drop\r\n  [p-area-element]=\"areaElement\"\r\n  [p-directory-compatible]=\"directoryCompatible\"\r\n  [p-disabled]=\"disabled\"\r\n  [p-height]=\"dragDropHeight\"\r\n  [p-literals]=\"literals\"\r\n  [p-overlay]=\"false\"\r\n  (p-drag-leave)=\"onDragLeave()\"\r\n  (p-drag-over)=\"onDragOver()\"\r\n  (p-file-change)=\"onFileChange($event)\"\r\n  (p-select-files)=\"selectFiles.emit()\">\r\n</po-upload-drag-drop-area>\r\n",
            changeDetection: ChangeDetectionStrategy.OnPush
        }),
        tslib_1.__metadata("design:paramtypes", [ChangeDetectorRef])
    ], PoUploadDragDropComponent);
    return PoUploadDragDropComponent;
}());
export { PoUploadDragDropComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdXBsb2FkLWRyYWctZHJvcC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcG9ydGluYXJpL3BvcnRpbmFyaS11aS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3BvLWZpZWxkL3BvLXVwbG9hZC9wby11cGxvYWQtZHJhZy1kcm9wL3BvLXVwbG9hZC1kcmFnLWRyb3AuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsaUJBQWlCLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFMUksT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBRXRELE9BQU8sRUFBRSw2QkFBNkIsRUFBRSxNQUFNLCtEQUErRCxDQUFDO0FBRzlHLElBQU0sNkJBQTZCLEdBQUcsR0FBRyxDQUFDO0FBQzFDLElBQU0seUJBQXlCLEdBQUcsR0FBRyxDQUFDO0FBT3RDO0lBOEJFLG1DQUFvQixjQUFpQztRQUFqQyxtQkFBYyxHQUFkLGNBQWMsQ0FBbUI7UUE1QjdDLG9CQUFlLEdBQVksNkJBQTZCLENBQUM7UUFHakUsZUFBVSxHQUFZLEtBQUssQ0FBQztRQXFCSCxlQUFVLEdBQXNCLElBQUksWUFBWSxFQUFPLENBQUM7UUFFdkQsZ0JBQVcsR0FBc0IsSUFBSSxZQUFZLEVBQU8sQ0FBQztJQUUxQixDQUFDO0lBaEI3QixzQkFBSSxxREFBYzthQU0vQztZQUNFLE9BQU8sSUFBSSxDQUFDLGVBQWUsQ0FBQztRQUM5QixDQUFDO2FBUjRCLFVBQW1CLEtBQWE7WUFDM0QsSUFBTSxjQUFjLEdBQUcsWUFBWSxDQUFDLEtBQUssRUFBRSw2QkFBNkIsQ0FBQyxDQUFDO1lBRTFFLElBQUksQ0FBQyxlQUFlLEdBQUcsQ0FBQyxjQUFjLEdBQUcseUJBQXlCLENBQUMsQ0FBQyxDQUFDLENBQUMseUJBQXlCLENBQUMsQ0FBQyxDQUFDLGNBQWMsQ0FBQztRQUNuSCxDQUFDOzs7T0FBQTtJQWNELHlDQUFLLEdBQUw7UUFDRSxJQUFJLENBQUMscUJBQXFCLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDckMsQ0FBQztJQUVELGlEQUFhLEdBQWIsVUFBYyxPQUFvQjtRQUNoQyxJQUFJLENBQUMsV0FBVyxHQUFHLE9BQU8sQ0FBQztRQUUzQixvREFBb0Q7UUFDcEQsSUFBSSxDQUFDLGNBQWMsQ0FBQyxhQUFhLEVBQUUsQ0FBQztJQUN0QyxDQUFDO0lBRUQsK0NBQVcsR0FBWDtRQUNFLElBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDO0lBQzFCLENBQUM7SUFFRCw4Q0FBVSxHQUFWO1FBQ0UsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUM7SUFDekIsQ0FBQztJQUVELGdEQUFZLEdBQVosVUFBYSxLQUFLO1FBQ2hCLElBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDO1FBRXhCLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzlCLENBQUM7O2dCQXpCbUMsaUJBQWlCOztJQXZCYztRQUFsRSxTQUFTLENBQUMsaUJBQWlCLEVBQUUsRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsQ0FBQzswQ0FBeUIsVUFBVTs2RUFBQztJQUMxQztRQUEzRCxTQUFTLENBQUMsNkJBQTZCLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLENBQUM7MENBQXdCLDZCQUE2Qjs0RUFBQztJQUVoRjtRQUFoQyxLQUFLLENBQUMsd0JBQXdCLENBQUM7OzBFQUE4QjtJQUV6QztRQUFwQixLQUFLLENBQUMsWUFBWSxDQUFDOzsrREFBbUI7SUFFVjtRQUE1QixLQUFLLENBQUMsb0JBQW9CLENBQUM7OzttRUFJM0I7SUFNb0I7UUFBcEIsS0FBSyxDQUFDLFlBQVksQ0FBQzs7K0RBQTRCO0lBRXZCO1FBQXhCLE1BQU0sQ0FBQyxlQUFlLENBQUM7MENBQWEsWUFBWTtpRUFBZ0M7SUFFdkQ7UUFBekIsTUFBTSxDQUFDLGdCQUFnQixDQUFDOzBDQUFjLFlBQVk7a0VBQWdDO0lBNUJ4RSx5QkFBeUI7UUFMckMsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLHFCQUFxQjtZQUMvQiw4eUJBQW1EO1lBQ25ELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO1NBQ2hELENBQUM7aURBK0JvQyxpQkFBaUI7T0E5QjFDLHlCQUF5QixDQXlEckM7SUFBRCxnQ0FBQztDQUFBLEFBekRELElBeURDO1NBekRZLHlCQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDaGFuZ2VEZXRlY3RvclJlZiwgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuaW1wb3J0IHsgY29udmVydFRvSW50IH0gZnJvbSAnLi4vLi4vLi4vLi4vdXRpbHMvdXRpbCc7XHJcblxyXG5pbXBvcnQgeyBQb1VwbG9hZERyYWdEcm9wQXJlYUNvbXBvbmVudCB9IGZyb20gJy4vcG8tdXBsb2FkLWRyYWctZHJvcC1hcmVhL3BvLXVwbG9hZC1kcmFnLWRyb3AtYXJlYS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBQb1VwbG9hZExpdGVyYWxzIH0gZnJvbSAnLi4vaW50ZXJmYWNlcy9wby11cGxvYWQtbGl0ZXJhbHMuaW50ZXJmYWNlJztcclxuXHJcbmNvbnN0IFBvVXBsb2FkRHJhZ0Ryb3BIZWlnaHREZWZhdWx0ID0gMzIwO1xyXG5jb25zdCBQb1VwbG9hZERyYWdEcm9wSGVpZ2h0TWluID0gMTYwO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdwby11cGxvYWQtZHJhZy1kcm9wJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vcG8tdXBsb2FkLWRyYWctZHJvcC5jb21wb25lbnQuaHRtbCcsXHJcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcclxufSlcclxuZXhwb3J0IGNsYXNzIFBvVXBsb2FkRHJhZ0Ryb3BDb21wb25lbnQge1xyXG5cclxuICBwcml2YXRlIF9kcmFnRHJvcEhlaWdodD86IG51bWJlciA9IFBvVXBsb2FkRHJhZ0Ryb3BIZWlnaHREZWZhdWx0O1xyXG5cclxuICBhcmVhRWxlbWVudDogSFRNTEVsZW1lbnQ7XHJcbiAgaXNEcmFnT3ZlcjogYm9vbGVhbiA9IGZhbHNlO1xyXG5cclxuICBAVmlld0NoaWxkKCdkcmFnRHJvcE92ZXJsYXknLCB7IHJlYWQ6IEVsZW1lbnRSZWYsIHN0YXRpYzogZmFsc2UgfSkgZHJhZ0Ryb3BPdmVybGF5RWxlbWVudDogRWxlbWVudFJlZjtcclxuICBAVmlld0NoaWxkKFBvVXBsb2FkRHJhZ0Ryb3BBcmVhQ29tcG9uZW50LCB7IHN0YXRpYzogdHJ1ZSB9KSBkcmFnRHJvcEFyZWFDb21wb25lbnQ6IFBvVXBsb2FkRHJhZ0Ryb3BBcmVhQ29tcG9uZW50O1xyXG5cclxuICBASW5wdXQoJ3AtZGlyZWN0b3J5LWNvbXBhdGlibGUnKSBkaXJlY3RvcnlDb21wYXRpYmxlOiBib29sZWFuO1xyXG5cclxuICBASW5wdXQoJ3AtZGlzYWJsZWQnKSBkaXNhYmxlZDogYm9vbGVhbjtcclxuXHJcbiAgQElucHV0KCdwLWRyYWctZHJvcC1oZWlnaHQnKSBzZXQgZHJhZ0Ryb3BIZWlnaHQodmFsdWU6IG51bWJlcikge1xyXG4gICAgY29uc3QgZHJhZ0Ryb3BIZWlnaHQgPSBjb252ZXJ0VG9JbnQodmFsdWUsIFBvVXBsb2FkRHJhZ0Ryb3BIZWlnaHREZWZhdWx0KTtcclxuXHJcbiAgICB0aGlzLl9kcmFnRHJvcEhlaWdodCA9IChkcmFnRHJvcEhlaWdodCA8IFBvVXBsb2FkRHJhZ0Ryb3BIZWlnaHRNaW4pID8gUG9VcGxvYWREcmFnRHJvcEhlaWdodE1pbiA6IGRyYWdEcm9wSGVpZ2h0O1xyXG4gIH1cclxuXHJcbiAgZ2V0IGRyYWdEcm9wSGVpZ2h0KCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX2RyYWdEcm9wSGVpZ2h0O1xyXG4gIH1cclxuXHJcbiAgQElucHV0KCdwLWxpdGVyYWxzJykgbGl0ZXJhbHM6IFBvVXBsb2FkTGl0ZXJhbHM7XHJcblxyXG4gIEBPdXRwdXQoJ3AtZmlsZS1jaGFuZ2UnKSBmaWxlQ2hhbmdlOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xyXG5cclxuICBAT3V0cHV0KCdwLXNlbGVjdC1maWxlcycpIHNlbGVjdEZpbGVzOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGNoYW5nZURldGVjdG9yOiBDaGFuZ2VEZXRlY3RvclJlZikgeyB9XHJcblxyXG4gIGZvY3VzKCkge1xyXG4gICAgdGhpcy5kcmFnRHJvcEFyZWFDb21wb25lbnQuZm9jdXMoKTtcclxuICB9XHJcblxyXG4gIG9uQXJlYUVsZW1lbnQoZWxlbWVudDogSFRNTEVsZW1lbnQpIHtcclxuICAgIHRoaXMuYXJlYUVsZW1lbnQgPSBlbGVtZW50O1xyXG5cclxuICAgIC8vIG5lY2Vzc8OhcmlvIHBhcmEgbsOjbyBvY29ycmVyIG8gZXJybyBIYXNCZWVuQ2hlY2tlZFxyXG4gICAgdGhpcy5jaGFuZ2VEZXRlY3Rvci5kZXRlY3RDaGFuZ2VzKCk7XHJcbiAgfVxyXG5cclxuICBvbkRyYWdMZWF2ZSgpIHtcclxuICAgIHRoaXMuaXNEcmFnT3ZlciA9IGZhbHNlO1xyXG4gIH1cclxuXHJcbiAgb25EcmFnT3ZlcigpIHtcclxuICAgIHRoaXMuaXNEcmFnT3ZlciA9IHRydWU7XHJcbiAgfVxyXG5cclxuICBvbkZpbGVDaGFuZ2UoZmlsZXMpIHtcclxuICAgIHRoaXMuaXNEcmFnT3ZlciA9IGZhbHNlO1xyXG5cclxuICAgIHRoaXMuZmlsZUNoYW5nZS5lbWl0KGZpbGVzKTtcclxuICB9XHJcblxyXG59XHJcbiJdfQ==