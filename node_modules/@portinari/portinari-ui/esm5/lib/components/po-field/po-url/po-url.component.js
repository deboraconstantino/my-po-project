import * as tslib_1 from "tslib";
import { AfterViewInit, Component, ElementRef, forwardRef, OnDestroy } from '@angular/core';
import { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';
import { PoInputGeneric } from '../po-input-generic/po-input-generic';
/**
 * @docsExtends PoInputBaseComponent
 *
 * @description
 *
 * po-url é um input específico para receber URL, com o pattern já configurado.
 *
 * @example
 *
 * <example name="po-url-basic" title="Portinari Url Basic">
 *   <file name="sample-po-url-basic/sample-po-url-basic.component.html"> </file>
 *   <file name="sample-po-url-basic/sample-po-url-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-url-labs" title="Portinari Url Labs">
 *   <file name="sample-po-url-labs/sample-po-url-labs.component.html"> </file>
 *   <file name="sample-po-url-labs/sample-po-url-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-url-shortener" title="Portinari Url - Shortener">
 *   <file name="sample-po-url-shortener/sample-po-url-shortener.component.html"> </file>
 *   <file name="sample-po-url-shortener/sample-po-url-shortener.component.ts"> </file>
 * </example>
 *
 */
var PoUrlComponent = /** @class */ (function (_super) {
    tslib_1.__extends(PoUrlComponent, _super);
    function PoUrlComponent(el) {
        var _this = _super.call(this, el) || this;
        _this.icon = 'po-icon-world';
        _this.maxlength = 254;
        _this.type = 'url';
        _this.pattern = '^((https|http):\\/\\/)?' + // protocol
            '((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|' + // domain name
            '((\\d{1,3}\\.){3}\\d{1,3}))' + // OR ip (v4) address
            '(\\:\\d+)?(\\/[-A-Za-z\\d%_.~+]*)*' + // port and path
            '(\\?[;&A-Za-z\\d%_.~+=-]*)?' + // query string
            '(\\#[-A-Za-z\\d_]*)?$';
        _this.mask = '';
        _this.listener = _this.validateClassesForPattern.bind(_this);
        return _this;
    }
    PoUrlComponent_1 = PoUrlComponent;
    PoUrlComponent.prototype.ngAfterViewInit = function () {
        var _this = this;
        // Se não tem ngModel ou reactive form adiciona validação com classes css
        setTimeout(function () {
            if (!_this.onChangePropagate) {
                _this.inputEl.nativeElement.addEventListener('keyup', _this.listener);
            }
        });
        _super.prototype.ngAfterViewInit.call(this);
    };
    PoUrlComponent.prototype.ngOnDestroy = function () {
        if (!this.onChangePropagate) {
            this.inputEl.nativeElement.removeEventListener('keyup', this.listener);
        }
    };
    PoUrlComponent.prototype.extraValidation = function (c) {
        return null;
    };
    var PoUrlComponent_1;
    PoUrlComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    PoUrlComponent = PoUrlComponent_1 = tslib_1.__decorate([
        Component({
            selector: 'po-url',
            template: "<po-field-container\n  [p-help]=\"help\"\n  [p-label]=\"label\"\n  [p-optional]=\"!required && optional\">\n\n  <div class=\"po-field-container-content\">\n    <div *ngIf=\"icon\" class=\"po-field-icon-container-left\">\n      <span class=\"po-icon po-field-icon {{ icon }}\" [class.po-field-icon-disabled]=\"disabled\"></span>\n    </div>\n\n    <input #inp\n      class=\"po-input\"\n      [attr.name]=\"name\"\n      [autocomplete]=\"autocomplete\"\n      [class.po-input-icon-left]=\"icon\"\n      [class.po-input-icon-right]=\"clean\"\n      [disabled]=\"disabled\"\n      [placeholder]=\"placeholder\"\n      [readonly]=\"readonly\"\n      [required]=\"required\"\n      [type]=\"type\"\n      (blur)=\"eventOnBlur($event)\"\n      (click)=\"eventOnClick($event)\"\n      (focus)=\"eventOnFocus($event)\"\n      (input)=\"eventOnInput($event)\">\n\n    <div class=\"po-field-icon-container-right\">\n      <po-clean [p-element-ref]=\"inputEl\" (p-change-event)=\"clear($event)\"></po-clean>\n    </div>\n  </div>\n\n  <po-field-container-bottom\n    [p-error-pattern]=\"getErrorPattern()\">\n  </po-field-container-bottom>\n\n</po-field-container>\n",
            providers: [
                {
                    provide: NG_VALUE_ACCESSOR,
                    useExisting: forwardRef(function () { return PoUrlComponent_1; }),
                    multi: true
                },
                {
                    provide: NG_VALIDATORS,
                    useExisting: forwardRef(function () { return PoUrlComponent_1; }),
                    multi: true
                }
            ]
        }),
        tslib_1.__metadata("design:paramtypes", [ElementRef])
    ], PoUrlComponent);
    return PoUrlComponent;
}(PoInputGeneric));
export { PoUrlComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdXJsLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwb3J0aW5hcmkvcG9ydGluYXJpLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tZmllbGQvcG8tdXJsL3BvLXVybC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxhQUFhLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzVGLE9BQU8sRUFBbUIsaUJBQWlCLEVBQUUsYUFBYSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFbkYsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBRXRFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0F3Qkc7QUFnQkg7SUFBb0MsMENBQWM7SUFtQmhELHdCQUFZLEVBQWM7UUFBMUIsWUFDRSxrQkFBTSxFQUFFLENBQUMsU0FDVjtRQW5CRCxVQUFJLEdBQUcsZUFBZSxDQUFDO1FBRXZCLGVBQVMsR0FBVyxHQUFHLENBQUM7UUFFeEIsVUFBSSxHQUFHLEtBQUssQ0FBQztRQUViLGFBQU8sR0FBRyx5QkFBeUIsR0FBRyxXQUFXO1lBQ2pELGtEQUFrRCxHQUFHLGNBQWM7WUFDbkUsNkJBQTZCLEdBQUcscUJBQXFCO1lBQ3JELG9DQUFvQyxHQUFHLGdCQUFnQjtZQUN2RCw2QkFBNkIsR0FBRyxlQUFlO1lBQy9DLHVCQUF1QixDQUFDO1FBRXhCLFVBQUksR0FBRyxFQUFFLENBQUM7UUFFRixjQUFRLEdBQUcsS0FBSSxDQUFDLHlCQUF5QixDQUFDLElBQUksQ0FBQyxLQUFJLENBQUMsQ0FBQzs7SUFJN0QsQ0FBQzt1QkFyQlUsY0FBYztJQXVCekIsd0NBQWUsR0FBZjtRQUFBLGlCQVFDO1FBUEMseUVBQXlFO1FBQ3pFLFVBQVUsQ0FBQztZQUNULElBQUksQ0FBQyxLQUFJLENBQUMsaUJBQWlCLEVBQUU7Z0JBQzNCLEtBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxLQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7YUFDckU7UUFDSCxDQUFDLENBQUMsQ0FBQztRQUNILGlCQUFNLGVBQWUsV0FBRSxDQUFDO0lBQzFCLENBQUM7SUFFRCxvQ0FBVyxHQUFYO1FBQ0UsSUFBSSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsRUFBRTtZQUMzQixJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxtQkFBbUIsQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1NBQ3hFO0lBQ0gsQ0FBQztJQUVELHdDQUFlLEdBQWYsVUFBZ0IsQ0FBa0I7UUFDaEMsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDOzs7Z0JBdEJlLFVBQVU7O0lBbkJmLGNBQWM7UUFmMUIsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLFFBQVE7WUFDbEIsK29DQUFrRDtZQUNsRCxTQUFTLEVBQUU7Z0JBQ1g7b0JBQ0UsT0FBTyxFQUFFLGlCQUFpQjtvQkFDMUIsV0FBVyxFQUFFLFVBQVUsQ0FBQyxjQUFNLE9BQUEsZ0JBQWMsRUFBZCxDQUFjLENBQUM7b0JBQzdDLEtBQUssRUFBRSxJQUFJO2lCQUNaO2dCQUNEO29CQUNFLE9BQU8sRUFBRSxhQUFhO29CQUN0QixXQUFXLEVBQUUsVUFBVSxDQUFDLGNBQU0sT0FBQSxnQkFBYyxFQUFkLENBQWMsQ0FBQztvQkFDN0MsS0FBSyxFQUFFLElBQUk7aUJBQ1o7YUFBQztTQUNILENBQUM7aURBb0JnQixVQUFVO09BbkJmLGNBQWMsQ0EyQzFCO0lBQUQscUJBQUM7Q0FBQSxBQTNDRCxDQUFvQyxjQUFjLEdBMkNqRDtTQTNDWSxjQUFjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCwgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBmb3J3YXJkUmVmLCBPbkRlc3Ryb3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFic3RyYWN0Q29udHJvbCwgTkdfVkFMVUVfQUNDRVNTT1IsIE5HX1ZBTElEQVRPUlMgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5cbmltcG9ydCB7IFBvSW5wdXRHZW5lcmljIH0gZnJvbSAnLi4vcG8taW5wdXQtZ2VuZXJpYy9wby1pbnB1dC1nZW5lcmljJztcblxuLyoqXG4gKiBAZG9jc0V4dGVuZHMgUG9JbnB1dEJhc2VDb21wb25lbnRcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBwby11cmwgw6kgdW0gaW5wdXQgZXNwZWPDrWZpY28gcGFyYSByZWNlYmVyIFVSTCwgY29tIG8gcGF0dGVybiBqw6EgY29uZmlndXJhZG8uXG4gKlxuICogQGV4YW1wbGVcbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tdXJsLWJhc2ljXCIgdGl0bGU9XCJQb3J0aW5hcmkgVXJsIEJhc2ljXCI+XG4gKiAgIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tdXJsLWJhc2ljL3NhbXBsZS1wby11cmwtYmFzaWMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXVybC1iYXNpYy9zYW1wbGUtcG8tdXJsLWJhc2ljLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInBvLXVybC1sYWJzXCIgdGl0bGU9XCJQb3J0aW5hcmkgVXJsIExhYnNcIj5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby11cmwtbGFicy9zYW1wbGUtcG8tdXJsLWxhYnMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXVybC1sYWJzL3NhbXBsZS1wby11cmwtbGFicy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJwby11cmwtc2hvcnRlbmVyXCIgdGl0bGU9XCJQb3J0aW5hcmkgVXJsIC0gU2hvcnRlbmVyXCI+XG4gKiAgIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tdXJsLXNob3J0ZW5lci9zYW1wbGUtcG8tdXJsLXNob3J0ZW5lci5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tdXJsLXNob3J0ZW5lci9zYW1wbGUtcG8tdXJsLXNob3J0ZW5lci5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICpcbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG8tdXJsJyxcbiAgdGVtcGxhdGVVcmw6ICcuLi9wby1pbnB1dC9wby1pbnB1dC5jb21wb25lbnQuaHRtbCcsXG4gIHByb3ZpZGVyczogW1xuICB7XG4gICAgcHJvdmlkZTogTkdfVkFMVUVfQUNDRVNTT1IsXG4gICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gUG9VcmxDb21wb25lbnQpLFxuICAgIG11bHRpOiB0cnVlXG4gIH0sXG4gIHtcbiAgICBwcm92aWRlOiBOR19WQUxJREFUT1JTLFxuICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFBvVXJsQ29tcG9uZW50KSxcbiAgICBtdWx0aTogdHJ1ZVxuICB9XVxufSlcbmV4cG9ydCBjbGFzcyBQb1VybENvbXBvbmVudCBleHRlbmRzIFBvSW5wdXRHZW5lcmljIGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCwgT25EZXN0cm95IHtcblxuICBpY29uID0gJ3BvLWljb24td29ybGQnO1xuXG4gIG1heGxlbmd0aDogbnVtYmVyID0gMjU0O1xuXG4gIHR5cGUgPSAndXJsJztcblxuICBwYXR0ZXJuID0gJ14oKGh0dHBzfGh0dHApOlxcXFwvXFxcXC8pPycgKyAvLyBwcm90b2NvbFxuICAnKCgoW2EtelxcXFxkXShbYS16XFxcXGQtXSpbYS16XFxcXGRdKSopXFxcXC4pK1thLXpdezIsfXwnICsgLy8gZG9tYWluIG5hbWVcbiAgJygoXFxcXGR7MSwzfVxcXFwuKXszfVxcXFxkezEsM30pKScgKyAvLyBPUiBpcCAodjQpIGFkZHJlc3NcbiAgJyhcXFxcOlxcXFxkKyk/KFxcXFwvWy1BLVphLXpcXFxcZCVfLn4rXSopKicgKyAvLyBwb3J0IGFuZCBwYXRoXG4gICcoXFxcXD9bOyZBLVphLXpcXFxcZCVfLn4rPS1dKik/JyArIC8vIHF1ZXJ5IHN0cmluZ1xuICAnKFxcXFwjWy1BLVphLXpcXFxcZF9dKik/JCc7XG5cbiAgbWFzayA9ICcnO1xuXG4gIHByaXZhdGUgbGlzdGVuZXIgPSB0aGlzLnZhbGlkYXRlQ2xhc3Nlc0ZvclBhdHRlcm4uYmluZCh0aGlzKTtcblxuICBjb25zdHJ1Y3RvcihlbDogRWxlbWVudFJlZikge1xuICAgIHN1cGVyKGVsKTtcbiAgfVxuXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgICAvLyBTZSBuw6NvIHRlbSBuZ01vZGVsIG91IHJlYWN0aXZlIGZvcm0gYWRpY2lvbmEgdmFsaWRhw6fDo28gY29tIGNsYXNzZXMgY3NzXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICBpZiAoIXRoaXMub25DaGFuZ2VQcm9wYWdhdGUpIHtcbiAgICAgICAgdGhpcy5pbnB1dEVsLm5hdGl2ZUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5dXAnLCB0aGlzLmxpc3RlbmVyKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICBzdXBlci5uZ0FmdGVyVmlld0luaXQoKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIGlmICghdGhpcy5vbkNoYW5nZVByb3BhZ2F0ZSkge1xuICAgICAgdGhpcy5pbnB1dEVsLm5hdGl2ZUVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5dXAnLCB0aGlzLmxpc3RlbmVyKTtcbiAgICB9XG4gIH1cblxuICBleHRyYVZhbGlkYXRpb24oYzogQWJzdHJhY3RDb250cm9sKTogeyBba2V5OiBzdHJpbmddOiBhbnk7IH0ge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbn1cbiJdfQ==