import * as tslib_1 from "tslib";
import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { isTypeof } from '../../../../utils/util';
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente de pesquisa que será criado dentro do dropdown do `po-multiselect`.
 */
var PoMultiselectSearchComponent = /** @class */ (function () {
    function PoMultiselectSearchComponent() {
        /** Evento que será disparado a cada tecla digitada no campo de busca. */
        this.change = new EventEmitter();
    }
    Object.defineProperty(PoMultiselectSearchComponent.prototype, "placeholder", {
        get: function () {
            return this._placeholder || this.literals.placeholderSearch;
        },
        /**
         * @optional
         *
         * @description
         *
         * Placeholder do campo de pesquisa.
         *
         * > Caso o mesmo não seja informado, o valor padrão será traduzido com base no idioma do navegador (pt, es e en).
         *
         * @default `Buscar`
         */
        set: function (placeholder) {
            this._placeholder = placeholder && isTypeof(placeholder, 'string') ? placeholder : this.literals.placeholderSearch;
        },
        enumerable: true,
        configurable: true
    });
    PoMultiselectSearchComponent.prototype.onChange = function (event) {
        this.change.emit({ event: event, value: this.inputElement.nativeElement.value });
    };
    PoMultiselectSearchComponent.prototype.setFocus = function () {
        this.inputElement.nativeElement.focus();
    };
    PoMultiselectSearchComponent.prototype.clean = function () {
        this.inputElement.nativeElement.value = '';
    };
    tslib_1.__decorate([
        Input('p-literals'),
        tslib_1.__metadata("design:type", Object)
    ], PoMultiselectSearchComponent.prototype, "literals", void 0);
    tslib_1.__decorate([
        Input('p-placeholder'),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], PoMultiselectSearchComponent.prototype, "placeholder", null);
    tslib_1.__decorate([
        Output('p-change'),
        tslib_1.__metadata("design:type", Object)
    ], PoMultiselectSearchComponent.prototype, "change", void 0);
    tslib_1.__decorate([
        ViewChild('inputElement', { read: ElementRef, static: true }),
        tslib_1.__metadata("design:type", ElementRef)
    ], PoMultiselectSearchComponent.prototype, "inputElement", void 0);
    PoMultiselectSearchComponent = tslib_1.__decorate([
        Component({
            selector: 'po-multiselect-search',
            template: "<div class=\"po-field-container-content po-multiselect-container-search\">\n\n  <div class=\"po-field-icon-container-left\">\n    <span class=\"po-icon po-icon-search po-field-icon\"></span>\n  </div>\n\n  <input #inputElement\n    class=\"po-input po-input-icon-left\"\n    type=\"text\"\n    [placeholder]=\"placeholder\"\n    (keyup)=\"onChange($event)\">\n\n</div>\n"
        })
    ], PoMultiselectSearchComponent);
    return PoMultiselectSearchComponent;
}());
export { PoMultiselectSearchComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbXVsdGlzZWxlY3Qtc2VhcmNoLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwb3J0aW5hcmkvcG9ydGluYXJpLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tZmllbGQvcG8tbXVsdGlzZWxlY3QvcG8tbXVsdGlzZWxlY3Qtc2VhcmNoL3BvLW11bHRpc2VsZWN0LXNlYXJjaC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUU5RixPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFJbEQ7Ozs7OztHQU1HO0FBS0g7SUFKQTtRQThCRSx5RUFBeUU7UUFDckQsV0FBTSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7SUFnQmxELENBQUM7SUF6QnlCLHNCQUFJLHFEQUFXO2FBSXZDO1lBQ0UsT0FBTyxJQUFJLENBQUMsWUFBWSxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUM7UUFDOUQsQ0FBQztRQWpCRDs7Ozs7Ozs7OztXQVVHO2FBQ3FCLFVBQWdCLFdBQW1CO1lBQ3pELElBQUksQ0FBQyxZQUFZLEdBQUcsV0FBVyxJQUFJLFFBQVEsQ0FBQyxXQUFXLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxpQkFBaUIsQ0FBQztRQUNySCxDQUFDOzs7T0FBQTtJQVdELCtDQUFRLEdBQVIsVUFBUyxLQUFLO1FBQ1osSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxJQUFJLENBQUMsWUFBWSxDQUFDLGFBQWEsQ0FBQyxLQUFLLEVBQUMsQ0FBQyxDQUFDO0lBQ2pGLENBQUM7SUFFRCwrQ0FBUSxHQUFSO1FBQ0UsSUFBSSxDQUFDLFlBQVksQ0FBQyxhQUFhLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDMUMsQ0FBQztJQUVELDRDQUFLLEdBQUw7UUFDRSxJQUFJLENBQUMsWUFBWSxDQUFDLGFBQWEsQ0FBQyxLQUFLLEdBQUcsRUFBRSxDQUFDO0lBQzdDLENBQUM7SUFwQ29CO1FBQXBCLEtBQUssQ0FBQyxZQUFZLENBQUM7O2tFQUFrQztJQWE5QjtRQUF2QixLQUFLLENBQUMsZUFBZSxDQUFDOzs7bUVBRXRCO0lBT21CO1FBQW5CLE1BQU0sQ0FBQyxVQUFVLENBQUM7O2dFQUE2QjtJQUVjO1FBQTdELFNBQVMsQ0FBQyxjQUFjLEVBQUUsRUFBQyxJQUFJLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsQ0FBQzswQ0FBZSxVQUFVO3NFQUFDO0lBN0I1RSw0QkFBNEI7UUFKeEMsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLHVCQUF1QjtZQUNqQyw4WEFBcUQ7U0FDdEQsQ0FBQztPQUNXLDRCQUE0QixDQTJDeEM7SUFBRCxtQ0FBQztDQUFBLEFBM0NELElBMkNDO1NBM0NZLDRCQUE0QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0LCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgaXNUeXBlb2YgfSBmcm9tICcuLi8uLi8uLi8uLi91dGlscy91dGlsJztcblxuaW1wb3J0IHsgUG9NdWx0aXNlbGVjdExpdGVyYWxzIH0gZnJvbSAnLi4vLi4vaW5kZXgnO1xuXG4vKipcbiAqIEBkb2NzUHJpdmF0ZVxuICpcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIENvbXBvbmVudGUgZGUgcGVzcXVpc2EgcXVlIHNlcsOhIGNyaWFkbyBkZW50cm8gZG8gZHJvcGRvd24gZG8gYHBvLW11bHRpc2VsZWN0YC5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG8tbXVsdGlzZWxlY3Qtc2VhcmNoJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3BvLW11bHRpc2VsZWN0LXNlYXJjaC5jb21wb25lbnQuaHRtbCcsXG59KVxuZXhwb3J0IGNsYXNzIFBvTXVsdGlzZWxlY3RTZWFyY2hDb21wb25lbnQge1xuXG4gIHByaXZhdGUgX3BsYWNlaG9sZGVyPzogc3RyaW5nO1xuXG4gIC8qKiBQcm9wcmllZGFkZSBxdWUgcmVjZWJlIGFzIGxpdGVyYWlzIGRlZmluaWRhcyBubyBgcG8tbXVsdGlzZWxlY3RgLiAqL1xuICBASW5wdXQoJ3AtbGl0ZXJhbHMnKSBsaXRlcmFscz86IFBvTXVsdGlzZWxlY3RMaXRlcmFscztcblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBQbGFjZWhvbGRlciBkbyBjYW1wbyBkZSBwZXNxdWlzYS5cbiAgICpcbiAgICogPiBDYXNvIG8gbWVzbW8gbsOjbyBzZWphIGluZm9ybWFkbywgbyB2YWxvciBwYWRyw6NvIHNlcsOhIHRyYWR1emlkbyBjb20gYmFzZSBubyBpZGlvbWEgZG8gbmF2ZWdhZG9yIChwdCwgZXMgZSBlbikuXG4gICAqXG4gICAqIEBkZWZhdWx0IGBCdXNjYXJgXG4gICAqL1xuICBASW5wdXQoJ3AtcGxhY2Vob2xkZXInKSBzZXQgcGxhY2Vob2xkZXIocGxhY2Vob2xkZXI6IHN0cmluZykge1xuICAgIHRoaXMuX3BsYWNlaG9sZGVyID0gcGxhY2Vob2xkZXIgJiYgaXNUeXBlb2YocGxhY2Vob2xkZXIsICdzdHJpbmcnKSA/IHBsYWNlaG9sZGVyIDogdGhpcy5saXRlcmFscy5wbGFjZWhvbGRlclNlYXJjaDtcbiAgfVxuXG4gIGdldCBwbGFjZWhvbGRlcigpIHtcbiAgICByZXR1cm4gdGhpcy5fcGxhY2Vob2xkZXIgfHwgdGhpcy5saXRlcmFscy5wbGFjZWhvbGRlclNlYXJjaDtcbiAgfVxuXG4gIC8qKiBFdmVudG8gcXVlIHNlcsOhIGRpc3BhcmFkbyBhIGNhZGEgdGVjbGEgZGlnaXRhZGEgbm8gY2FtcG8gZGUgYnVzY2EuICovXG4gIEBPdXRwdXQoJ3AtY2hhbmdlJykgY2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIEBWaWV3Q2hpbGQoJ2lucHV0RWxlbWVudCcsIHtyZWFkOiBFbGVtZW50UmVmLCBzdGF0aWM6IHRydWUgfSkgaW5wdXRFbGVtZW50OiBFbGVtZW50UmVmO1xuXG4gIG9uQ2hhbmdlKGV2ZW50KSB7XG4gICAgdGhpcy5jaGFuZ2UuZW1pdCh7ZXZlbnQ6IGV2ZW50LCB2YWx1ZTogdGhpcy5pbnB1dEVsZW1lbnQubmF0aXZlRWxlbWVudC52YWx1ZX0pO1xuICB9XG5cbiAgc2V0Rm9jdXMoKSB7XG4gICAgdGhpcy5pbnB1dEVsZW1lbnQubmF0aXZlRWxlbWVudC5mb2N1cygpO1xuICB9XG5cbiAgY2xlYW4oKSB7XG4gICAgdGhpcy5pbnB1dEVsZW1lbnQubmF0aXZlRWxlbWVudC52YWx1ZSA9ICcnO1xuICB9XG5cbn1cbiJdfQ==