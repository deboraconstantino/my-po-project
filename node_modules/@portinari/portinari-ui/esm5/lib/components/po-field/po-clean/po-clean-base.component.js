import * as tslib_1 from "tslib";
import { ElementRef, EventEmitter, Input, Output } from '@angular/core';
/**
 * @docsPrivate
 *
 * Este componente é de uso interno utilizado por componentes de entrada de dados com o objetivo de resetar as informações do model.
 *
 * Por padrão limpa o valor do campo e executa o método onChangePropagate, caso tenha a necessidade de tratar a função de limpar o campo,
 * deve implementar a interface PoClean.
 */
var PoCleanBaseComponent = /** @class */ (function () {
    function PoCleanBaseComponent() {
        /** Valor que será atribuído ao campo quando for clicado no po-clean. */
        this.defaultValue = '';
        /**
         * Evento disparado quando executada ação do po-clean.
         * Este evento deve ser usado para avisar para o componente que está usando o po-clean, que o botão foi disparado,
         * e provavelmente será preciso emitir o evento para atualizar o model.
         */
        this.changeEvent = new EventEmitter();
    }
    PoCleanBaseComponent.prototype.clear = function () {
        this.setInputValue(this.defaultValue);
        this.changeEvent.emit(this.defaultValue);
    };
    PoCleanBaseComponent.prototype.showIcon = function () {
        return this.defaultValue !== this.getInputValue() && this.hasCleanAttr() && !this.isDisabled() && !this.isReadonly();
    };
    // Este método verifica se o componente pai possui a propriedade clean diferente de vazio,
    // ou seja, se o po-clean deve ser usado.
    PoCleanBaseComponent.prototype.hasCleanAttr = function () {
        return this.parentComponent.clean;
    };
    // Este método verifica se o componente pai está desabilitado.
    PoCleanBaseComponent.prototype.isDisabled = function () {
        return this.parentComponent.disabled;
    };
    // Este método verifica se o componente pai está somente leitura.
    PoCleanBaseComponent.prototype.isReadonly = function () {
        return this.parentComponent.readonly;
    };
    tslib_1.__decorate([
        Input('p-element-ref'),
        tslib_1.__metadata("design:type", ElementRef)
    ], PoCleanBaseComponent.prototype, "inputRef", void 0);
    tslib_1.__decorate([
        Input('p-default-value'),
        tslib_1.__metadata("design:type", String)
    ], PoCleanBaseComponent.prototype, "defaultValue", void 0);
    tslib_1.__decorate([
        Output('p-change-event'),
        tslib_1.__metadata("design:type", EventEmitter)
    ], PoCleanBaseComponent.prototype, "changeEvent", void 0);
    return PoCleanBaseComponent;
}());
export { PoCleanBaseComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tY2xlYW4tYmFzZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcG9ydGluYXJpL3BvcnRpbmFyaS11aS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3BvLWZpZWxkL3BvLWNsZWFuL3BvLWNsZWFuLWJhc2UuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXhFOzs7Ozs7O0dBT0c7QUFDSDtJQUFBO1FBS0Usd0VBQXdFO1FBQzlDLGlCQUFZLEdBQVksRUFBRSxDQUFDO1FBRXJEOzs7O1dBSUc7UUFDdUIsZ0JBQVcsR0FBdUIsSUFBSSxZQUFZLEVBQU8sQ0FBQztJQWlDdEYsQ0FBQztJQTdCQyxvQ0FBSyxHQUFMO1FBQ0UsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDdEMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQzNDLENBQUM7SUFFRCx1Q0FBUSxHQUFSO1FBQ0UsT0FBTyxJQUFJLENBQUMsWUFBWSxLQUFLLElBQUksQ0FBQyxhQUFhLEVBQUUsSUFBSSxJQUFJLENBQUMsWUFBWSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7SUFDdkgsQ0FBQztJQUVELDBGQUEwRjtJQUMxRix5Q0FBeUM7SUFDakMsMkNBQVksR0FBcEI7UUFDRSxPQUFPLElBQUksQ0FBQyxlQUFlLENBQUMsS0FBSyxDQUFDO0lBQ3BDLENBQUM7SUFFRCw4REFBOEQ7SUFDdEQseUNBQVUsR0FBbEI7UUFDRSxPQUFPLElBQUksQ0FBQyxlQUFlLENBQUMsUUFBUSxDQUFDO0lBQ3ZDLENBQUM7SUFFRCxpRUFBaUU7SUFDekQseUNBQVUsR0FBbEI7UUFDRSxPQUFPLElBQUksQ0FBQyxlQUFlLENBQUMsUUFBUSxDQUFDO0lBQ3ZDLENBQUM7SUFyQ3VCO1FBQXZCLEtBQUssQ0FBQyxlQUFlLENBQUM7MENBQVcsVUFBVTswREFBQztJQUduQjtRQUF6QixLQUFLLENBQUMsaUJBQWlCLENBQUM7OzhEQUE0QjtJQU8zQjtRQUF6QixNQUFNLENBQUMsZ0JBQWdCLENBQUM7MENBQWUsWUFBWTs2REFBZ0M7SUFpQ3RGLDJCQUFDO0NBQUEsQUE5Q0QsSUE4Q0M7U0E5Q3FCLG9CQUFvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG4vKipcbiAqIEBkb2NzUHJpdmF0ZVxuICpcbiAqIEVzdGUgY29tcG9uZW50ZSDDqSBkZSB1c28gaW50ZXJubyB1dGlsaXphZG8gcG9yIGNvbXBvbmVudGVzIGRlIGVudHJhZGEgZGUgZGFkb3MgY29tIG8gb2JqZXRpdm8gZGUgcmVzZXRhciBhcyBpbmZvcm1hw6fDtWVzIGRvIG1vZGVsLlxuICpcbiAqIFBvciBwYWRyw6NvIGxpbXBhIG8gdmFsb3IgZG8gY2FtcG8gZSBleGVjdXRhIG8gbcOpdG9kbyBvbkNoYW5nZVByb3BhZ2F0ZSwgY2FzbyB0ZW5oYSBhIG5lY2Vzc2lkYWRlIGRlIHRyYXRhciBhIGZ1bsOnw6NvIGRlIGxpbXBhciBvIGNhbXBvLFxuICogZGV2ZSBpbXBsZW1lbnRhciBhIGludGVyZmFjZSBQb0NsZWFuLlxuICovXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgUG9DbGVhbkJhc2VDb21wb25lbnQge1xuXG4gIC8qKiBOZXN0YSBwcm9wcmllZGFkZSBkZXZlLXNlIGluZm9ybWFyIG8gZWxlbWVudFJlZiBkbyBjYW1wbyBkZSBlbnRyYWRhIHF1ZSB1dGlsaXphcsOhIG8gcG8tY2xlYW4uICovXG4gIEBJbnB1dCgncC1lbGVtZW50LXJlZicpIGlucHV0UmVmOiBFbGVtZW50UmVmO1xuXG4gIC8qKiBWYWxvciBxdWUgc2Vyw6EgYXRyaWJ1w61kbyBhbyBjYW1wbyBxdWFuZG8gZm9yIGNsaWNhZG8gbm8gcG8tY2xlYW4uICovXG4gIEBJbnB1dCgncC1kZWZhdWx0LXZhbHVlJykgZGVmYXVsdFZhbHVlPzogc3RyaW5nID0gJyc7XG5cbiAgLyoqXG4gICAqIEV2ZW50byBkaXNwYXJhZG8gcXVhbmRvIGV4ZWN1dGFkYSBhw6fDo28gZG8gcG8tY2xlYW4uXG4gICAqIEVzdGUgZXZlbnRvIGRldmUgc2VyIHVzYWRvIHBhcmEgYXZpc2FyIHBhcmEgbyBjb21wb25lbnRlIHF1ZSBlc3TDoSB1c2FuZG8gbyBwby1jbGVhbiwgcXVlIG8gYm90w6NvIGZvaSBkaXNwYXJhZG8sXG4gICAqIGUgcHJvdmF2ZWxtZW50ZSBzZXLDoSBwcmVjaXNvIGVtaXRpciBvIGV2ZW50byBwYXJhIGF0dWFsaXphciBvIG1vZGVsLlxuICAgKi9cbiAgQE91dHB1dCgncC1jaGFuZ2UtZXZlbnQnKSBjaGFuZ2VFdmVudD86IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG5cbiAgcHJvdGVjdGVkIHBhcmVudENvbXBvbmVudDogYW55O1xuXG4gIGNsZWFyKCkge1xuICAgIHRoaXMuc2V0SW5wdXRWYWx1ZSh0aGlzLmRlZmF1bHRWYWx1ZSk7XG4gICAgdGhpcy5jaGFuZ2VFdmVudC5lbWl0KHRoaXMuZGVmYXVsdFZhbHVlKTtcbiAgfVxuXG4gIHNob3dJY29uKCkge1xuICAgIHJldHVybiB0aGlzLmRlZmF1bHRWYWx1ZSAhPT0gdGhpcy5nZXRJbnB1dFZhbHVlKCkgJiYgdGhpcy5oYXNDbGVhbkF0dHIoKSAmJiAhdGhpcy5pc0Rpc2FibGVkKCkgJiYgIXRoaXMuaXNSZWFkb25seSgpO1xuICB9XG5cbiAgLy8gRXN0ZSBtw6l0b2RvIHZlcmlmaWNhIHNlIG8gY29tcG9uZW50ZSBwYWkgcG9zc3VpIGEgcHJvcHJpZWRhZGUgY2xlYW4gZGlmZXJlbnRlIGRlIHZhemlvLFxuICAvLyBvdSBzZWphLCBzZSBvIHBvLWNsZWFuIGRldmUgc2VyIHVzYWRvLlxuICBwcml2YXRlIGhhc0NsZWFuQXR0cigpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5wYXJlbnRDb21wb25lbnQuY2xlYW47XG4gIH1cblxuICAvLyBFc3RlIG3DqXRvZG8gdmVyaWZpY2Egc2UgbyBjb21wb25lbnRlIHBhaSBlc3TDoSBkZXNhYmlsaXRhZG8uXG4gIHByaXZhdGUgaXNEaXNhYmxlZCgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5wYXJlbnRDb21wb25lbnQuZGlzYWJsZWQ7XG4gIH1cblxuICAvLyBFc3RlIG3DqXRvZG8gdmVyaWZpY2Egc2UgbyBjb21wb25lbnRlIHBhaSBlc3TDoSBzb21lbnRlIGxlaXR1cmEuXG4gIHByaXZhdGUgaXNSZWFkb25seSgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5wYXJlbnRDb21wb25lbnQucmVhZG9ubHk7XG4gIH1cblxuICBhYnN0cmFjdCBzZXRJbnB1dFZhbHVlKHZhbHVlOiBzdHJpbmcpOiB2b2lkO1xuXG4gIGFic3RyYWN0IGdldElucHV0VmFsdWUoKTogc3RyaW5nO1xuXG59XG4iXX0=