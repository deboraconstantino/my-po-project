import * as tslib_1 from "tslib";
import { Input } from '@angular/core';
import { convertToBoolean } from './../../../utils/util';
export var poLoadingOverlayLiteralsDefault = {
    en: {
        loading: 'Loading',
    },
    es: {
        loading: 'Cargando',
    },
    pt: {
        loading: 'Carregando',
    },
    ru: {
        loading: 'погрузка',
    }
};
/**
 *
 * @description
 *
 * Este componente mostra ao usuário uma imagem de _loading_ e bloqueia a página inteira ou o container escolhido,
 * enquanto aguarda a resposta de alguma requisição.
 */
var PoLoadingOverlayBaseComponent = /** @class */ (function () {
    function PoLoadingOverlayBaseComponent(languageService) {
        this.languageService = languageService;
        this._screenLock = false;
        if (!this.text) {
            this.text = this.getTextDefault();
        }
    }
    Object.defineProperty(PoLoadingOverlayBaseComponent.prototype, "screenLock", {
        get: function () {
            return this._screenLock;
        },
        /**
         * @optional
         *
         * @description
         *
         * Define se o *overlay* será aplicado a um *container* ou a página inteira.
         *
         * Para utilizar o componente como um *container*, o elemento pai deverá receber uma posição relativa, por exemplo:
         *
         * ```
         * <div style="position: relative">
         *
         *  <po-chart [p-series]="[{ value: 10, category: 'Example' }]">
         *  </po-chart>
         *
         *  <po-loading-overlay>
         *  </po-loading-overlay>
         * </div>
         * ```
         *
         * @default `false`
         */
        set: function (screenLock) {
            this._screenLock = convertToBoolean(screenLock);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoLoadingOverlayBaseComponent.prototype, "text", {
        get: function () {
            return this._text;
        },
        /**
         * @optional
         *
         * @description
         *
         * Texto a ser exibido no componente.
         *
         * > O valor padrão será traduzido acordo com o idioma configurado no [**PoI18n**](/documentation/po-i18n) ou navegador.
         *
         * @default `Carregando`
         */
        set: function (value) {
            this._text = value || this.getTextDefault();
        },
        enumerable: true,
        configurable: true
    });
    PoLoadingOverlayBaseComponent.prototype.getTextDefault = function () {
        var language = this.languageService.getShortLanguage();
        return poLoadingOverlayLiteralsDefault[language].loading;
    };
    tslib_1.__decorate([
        Input('p-screen-lock'),
        tslib_1.__metadata("design:type", Boolean),
        tslib_1.__metadata("design:paramtypes", [Boolean])
    ], PoLoadingOverlayBaseComponent.prototype, "screenLock", null);
    tslib_1.__decorate([
        Input('p-text'),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], PoLoadingOverlayBaseComponent.prototype, "text", null);
    return PoLoadingOverlayBaseComponent;
}());
export { PoLoadingOverlayBaseComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbG9hZGluZy1vdmVybGF5LWJhc2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvcnRpbmFyaS9wb3J0aW5hcmktdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby1sb2FkaW5nL3BvLWxvYWRpbmctb3ZlcmxheS9wby1sb2FkaW5nLW92ZXJsYXktYmFzZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFdEMsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFNekQsTUFBTSxDQUFDLElBQU0sK0JBQStCLEdBQUc7SUFDN0MsRUFBRSxFQUE2QjtRQUM3QixPQUFPLEVBQUUsU0FBUztLQUNuQjtJQUNELEVBQUUsRUFBNkI7UUFDN0IsT0FBTyxFQUFFLFVBQVU7S0FDcEI7SUFDRCxFQUFFLEVBQTZCO1FBQzdCLE9BQU8sRUFBRSxZQUFZO0tBQ3RCO0lBQ0QsRUFBRSxFQUE2QjtRQUM3QixPQUFPLEVBQUUsVUFBVTtLQUNwQjtDQUNGLENBQUM7QUFFRjs7Ozs7O0dBTUc7QUFDSDtJQXNERSx1Q0FBb0IsZUFBa0M7UUFBbEMsb0JBQWUsR0FBZixlQUFlLENBQW1CO1FBcEQ5QyxnQkFBVyxHQUFhLEtBQUssQ0FBQztRQXFEcEMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUU7WUFDZCxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztTQUNuQztJQUNILENBQUM7SUEvQnVCLHNCQUFJLHFEQUFVO2FBSXRDO1lBQ0UsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDO1FBQzFCLENBQUM7UUE1QkQ7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztXQXFCRzthQUNxQixVQUFlLFVBQW1CO1lBQ3hELElBQUksQ0FBQyxXQUFXLEdBQUcsZ0JBQWdCLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDbEQsQ0FBQzs7O09BQUE7SUFpQmdCLHNCQUFJLCtDQUFJO2FBSXpCO1lBQ0UsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQ3BCLENBQUM7UUFqQkQ7Ozs7Ozs7Ozs7V0FVRzthQUNjLFVBQVMsS0FBYTtZQUNyQyxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssSUFBSSxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7UUFDOUMsQ0FBQzs7O09BQUE7SUFZTyxzREFBYyxHQUF0QjtRQUNFLElBQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztRQUV6RCxPQUFPLCtCQUErQixDQUFDLFFBQVEsQ0FBQyxDQUFDLE9BQU8sQ0FBQztJQUMzRCxDQUFDO0lBckN1QjtRQUF2QixLQUFLLENBQUMsZUFBZSxDQUFDOzs7bUVBRXRCO0lBaUJnQjtRQUFoQixLQUFLLENBQUMsUUFBUSxDQUFDOzs7NkRBRWY7SUFrQkgsb0NBQUM7Q0FBQSxBQWxFRCxJQWtFQztTQWxFWSw2QkFBNkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBjb252ZXJ0VG9Cb29sZWFuIH0gZnJvbSAnLi8uLi8uLi8uLi91dGlscy91dGlsJztcblxuaW1wb3J0IHsgUG9MYW5ndWFnZVNlcnZpY2UgfSBmcm9tICcuLi8uLi8uLi9zZXJ2aWNlcy9wby1sYW5ndWFnZS9wby1sYW5ndWFnZS5zZXJ2aWNlJztcblxuaW1wb3J0IHsgUG9Mb2FkaW5nT3ZlcmxheUxpdGVyYWxzIH0gZnJvbSAnLi9pbnRlcmZhY2VzL3BvLWxvYWRpbmctb3ZlcmxheS1saXRlcmFscy5pbnRlcmZhY2UnO1xuXG5leHBvcnQgY29uc3QgcG9Mb2FkaW5nT3ZlcmxheUxpdGVyYWxzRGVmYXVsdCA9IHtcbiAgZW46IDxQb0xvYWRpbmdPdmVybGF5TGl0ZXJhbHM+IHtcbiAgICBsb2FkaW5nOiAnTG9hZGluZycsXG4gIH0sXG4gIGVzOiA8UG9Mb2FkaW5nT3ZlcmxheUxpdGVyYWxzPiB7XG4gICAgbG9hZGluZzogJ0NhcmdhbmRvJyxcbiAgfSxcbiAgcHQ6IDxQb0xvYWRpbmdPdmVybGF5TGl0ZXJhbHM+IHtcbiAgICBsb2FkaW5nOiAnQ2FycmVnYW5kbycsXG4gIH0sXG4gIHJ1OiA8UG9Mb2FkaW5nT3ZlcmxheUxpdGVyYWxzPiB7XG4gICAgbG9hZGluZzogJ9C/0L7Qs9GA0YPQt9C60LAnLFxuICB9XG59O1xuXG4vKipcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBFc3RlIGNvbXBvbmVudGUgbW9zdHJhIGFvIHVzdcOhcmlvIHVtYSBpbWFnZW0gZGUgX2xvYWRpbmdfIGUgYmxvcXVlaWEgYSBww6FnaW5hIGludGVpcmEgb3UgbyBjb250YWluZXIgZXNjb2xoaWRvLFxuICogZW5xdWFudG8gYWd1YXJkYSBhIHJlc3Bvc3RhIGRlIGFsZ3VtYSByZXF1aXNpw6fDo28uXG4gKi9cbmV4cG9ydCBjbGFzcyBQb0xvYWRpbmdPdmVybGF5QmFzZUNvbXBvbmVudCB7XG5cbiAgcHJpdmF0ZSBfc2NyZWVuTG9jaz86IGJvb2xlYW4gPSBmYWxzZTtcbiAgcHJpdmF0ZSBfdGV4dD86IHN0cmluZztcblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBEZWZpbmUgc2UgbyAqb3ZlcmxheSogc2Vyw6EgYXBsaWNhZG8gYSB1bSAqY29udGFpbmVyKiBvdSBhIHDDoWdpbmEgaW50ZWlyYS5cbiAgICpcbiAgICogUGFyYSB1dGlsaXphciBvIGNvbXBvbmVudGUgY29tbyB1bSAqY29udGFpbmVyKiwgbyBlbGVtZW50byBwYWkgZGV2ZXLDoSByZWNlYmVyIHVtYSBwb3Npw6fDo28gcmVsYXRpdmEsIHBvciBleGVtcGxvOlxuICAgKlxuICAgKiBgYGBcbiAgICogPGRpdiBzdHlsZT1cInBvc2l0aW9uOiByZWxhdGl2ZVwiPlxuICAgKlxuICAgKiAgPHBvLWNoYXJ0IFtwLXNlcmllc109XCJbeyB2YWx1ZTogMTAsIGNhdGVnb3J5OiAnRXhhbXBsZScgfV1cIj5cbiAgICogIDwvcG8tY2hhcnQ+XG4gICAqXG4gICAqICA8cG8tbG9hZGluZy1vdmVybGF5PlxuICAgKiAgPC9wby1sb2FkaW5nLW92ZXJsYXk+XG4gICAqIDwvZGl2PlxuICAgKiBgYGBcbiAgICpcbiAgICogQGRlZmF1bHQgYGZhbHNlYFxuICAgKi9cbiAgQElucHV0KCdwLXNjcmVlbi1sb2NrJykgc2V0IHNjcmVlbkxvY2soc2NyZWVuTG9jazogYm9vbGVhbikge1xuICAgIHRoaXMuX3NjcmVlbkxvY2sgPSBjb252ZXJ0VG9Cb29sZWFuKHNjcmVlbkxvY2spO1xuICB9XG5cbiAgZ2V0IHNjcmVlbkxvY2soKSB7XG4gICAgcmV0dXJuIHRoaXMuX3NjcmVlbkxvY2s7XG4gIH1cblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBUZXh0byBhIHNlciBleGliaWRvIG5vIGNvbXBvbmVudGUuXG4gICAqXG4gICAqID4gTyB2YWxvciBwYWRyw6NvIHNlcsOhIHRyYWR1emlkbyBhY29yZG8gY29tIG8gaWRpb21hIGNvbmZpZ3VyYWRvIG5vIFsqKlBvSTE4bioqXSgvZG9jdW1lbnRhdGlvbi9wby1pMThuKSBvdSBuYXZlZ2Fkb3IuXG4gICAqXG4gICAqIEBkZWZhdWx0IGBDYXJyZWdhbmRvYFxuICAgKi9cbiAgQElucHV0KCdwLXRleHQnKSBzZXQgdGV4dCh2YWx1ZTogc3RyaW5nKSB7XG4gICAgdGhpcy5fdGV4dCA9IHZhbHVlIHx8IHRoaXMuZ2V0VGV4dERlZmF1bHQoKTtcbiAgfVxuXG4gIGdldCB0ZXh0KCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuX3RleHQ7XG4gIH1cblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGxhbmd1YWdlU2VydmljZTogUG9MYW5ndWFnZVNlcnZpY2UpIHtcbiAgICBpZiAoIXRoaXMudGV4dCkge1xuICAgICAgdGhpcy50ZXh0ID0gdGhpcy5nZXRUZXh0RGVmYXVsdCgpO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgZ2V0VGV4dERlZmF1bHQoKTogc3RyaW5nIHtcbiAgICBjb25zdCBsYW5ndWFnZSA9IHRoaXMubGFuZ3VhZ2VTZXJ2aWNlLmdldFNob3J0TGFuZ3VhZ2UoKTtcblxuICAgIHJldHVybiBwb0xvYWRpbmdPdmVybGF5TGl0ZXJhbHNEZWZhdWx0W2xhbmd1YWdlXS5sb2FkaW5nO1xuICB9XG5cbn1cbiJdfQ==