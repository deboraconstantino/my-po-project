import * as tslib_1 from "tslib";
import { ElementRef, ViewChild } from '@angular/core';
import { Subject } from 'rxjs';
import { PoChartType } from '../enums/po-chart-type.enum';
var Padding = 24;
var PoChartDynamicTypeComponent = /** @class */ (function () {
    function PoChartDynamicTypeComponent() {
        this.innerRadius = 0;
        this.onSerieClick = new Subject();
        this.onSerieHover = new Subject();
        this.series = [];
    }
    Object.defineProperty(PoChartDynamicTypeComponent.prototype, "isChartGaugeType", {
        get: function () {
            return this.type === PoChartType.Gauge;
        },
        enumerable: true,
        configurable: true
    });
    PoChartDynamicTypeComponent.prototype.calculateSVGContainerDimensions = function (chartWrapperElement, chartHeaderElement, chartLegendElement) {
        var svgContainerHeightCalc = this.height - chartHeaderElement - chartLegendElement - (Padding * 2);
        this.svgHeight = svgContainerHeightCalc <= 0 ? 0 : svgContainerHeightCalc;
        this.centerX = chartWrapperElement / 2;
    };
    PoChartDynamicTypeComponent.prototype.calculateTotalValue = function () {
        this.totalValue = this.type === PoChartType.Gauge ? 100 : this.series.reduce(function (previousValue, serie) { return previousValue + serie.value; }, 0);
    };
    tslib_1.__decorate([
        ViewChild('chartBody', { static: true }),
        tslib_1.__metadata("design:type", ElementRef)
    ], PoChartDynamicTypeComponent.prototype, "chartBody", void 0);
    tslib_1.__decorate([
        ViewChild('svgContainer', { static: true }),
        tslib_1.__metadata("design:type", ElementRef)
    ], PoChartDynamicTypeComponent.prototype, "svgContainer", void 0);
    return PoChartDynamicTypeComponent;
}());
export { PoChartDynamicTypeComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tY2hhcnQtZHluYW1pYy10eXBlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwb3J0aW5hcmkvcG9ydGluYXJpLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tY2hhcnQvcG8tY2hhcnQtdHlwZXMvcG8tY2hhcnQtZHluYW1pYy10eXBlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFdEQsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUcvQixPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFJMUQsSUFBTSxPQUFPLEdBQVcsRUFBRSxDQUFDO0FBRTNCO0lBQUE7UUFjRSxnQkFBVyxHQUFXLENBQUMsQ0FBQztRQUN4QixpQkFBWSxHQUF1RSxJQUFJLE9BQU8sRUFBRSxDQUFDO1FBQ2pHLGlCQUFZLEdBQXVFLElBQUksT0FBTyxFQUFFLENBQUM7UUFDakcsV0FBTSxHQUFlLEVBQUUsQ0FBQztJQTRCMUIsQ0FBQztJQWZDLHNCQUFJLHlEQUFnQjthQUFwQjtZQUNFLE9BQU8sSUFBSSxDQUFDLElBQUksS0FBSyxXQUFXLENBQUMsS0FBSyxDQUFDO1FBQ3pDLENBQUM7OztPQUFBO0lBRUQscUVBQStCLEdBQS9CLFVBQWdDLG1CQUEyQixFQUFFLGtCQUEwQixFQUFFLGtCQUEwQjtRQUNqSCxJQUFNLHNCQUFzQixHQUFHLElBQUksQ0FBQyxNQUFNLEdBQUcsa0JBQWtCLEdBQUcsa0JBQWtCLEdBQUcsQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFFckcsSUFBSSxDQUFDLFNBQVMsR0FBRyxzQkFBc0IsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsc0JBQXNCLENBQUM7UUFDMUUsSUFBSSxDQUFDLE9BQU8sR0FBRyxtQkFBbUIsR0FBRyxDQUFDLENBQUM7SUFDekMsQ0FBQztJQUVELHlEQUFtQixHQUFuQjtRQUNFLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLElBQUksS0FBSyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLFVBQUMsYUFBYSxFQUFFLEtBQUssSUFBSyxPQUFBLGFBQWEsR0FBRyxLQUFLLENBQUMsS0FBSyxFQUEzQixDQUEyQixFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ3pJLENBQUM7SUFqQnlDO1FBQXpDLFNBQVMsQ0FBQyxXQUFXLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLENBQUM7MENBQVksVUFBVTtrRUFBQztJQUVuQjtRQUE1QyxTQUFTLENBQUMsY0FBYyxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxDQUFDOzBDQUFlLFVBQVU7cUVBQUM7SUFpQnhFLGtDQUFDO0NBQUEsQUE3Q0QsSUE2Q0M7U0E3Q3FCLDJCQUEyQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5cbmltcG9ydCB7IFBvQ2hhcnRHYXVnZVNlcmllIH0gZnJvbSAnLi9wby1jaGFydC1nYXVnZS9wby1jaGFydC1nYXVnZS1zZXJpZXMuaW50ZXJmYWNlJztcbmltcG9ydCB7IFBvQ2hhcnRUeXBlIH0gZnJvbSAnLi4vZW51bXMvcG8tY2hhcnQtdHlwZS5lbnVtJztcbmltcG9ydCB7IFBvRG9udXRDaGFydFNlcmllcyB9IGZyb20gJy4vcG8tY2hhcnQtZG9udXQvcG8tY2hhcnQtZG9udXQtc2VyaWVzLmludGVyZmFjZSc7XG5pbXBvcnQgeyBQb1BpZUNoYXJ0U2VyaWVzIH0gZnJvbSAnLi9wby1jaGFydC1waWUvcG8tY2hhcnQtcGllLXNlcmllcy5pbnRlcmZhY2UnO1xuXG5jb25zdCBQYWRkaW5nOiBudW1iZXIgPSAyNDtcblxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIFBvQ2hhcnREeW5hbWljVHlwZUNvbXBvbmVudCB7XG5cbiAgcHJvdGVjdGVkIHdpbmRvd1Jlc2l6ZUxpc3RlbmVyOiAoKSA9PiB2b2lkO1xuICBwcm90ZWN0ZWQgd2luZG93U2Nyb2xsTGlzdGVuZXI6ICgpID0+IHZvaWQ7XG5cbiAgY2VudGVyWDogbnVtYmVyO1xuICBjaGFydEVsZW1lbnRDYXRlZ29yeTogYW55O1xuICBjaGFydEVsZW1lbnREZXNjcmlwdGlvbjogYW55O1xuICBjaGFydEVsZW1lbnRWYWx1ZTogYW55O1xuICBjaGFydEhlYWRlcjogbnVtYmVyO1xuICBjaGFydExlZ2VuZDogbnVtYmVyO1xuICBjaGFydFdyYXBwZXI6IG51bWJlcjtcbiAgY29sb3JzOiBBcnJheTxzdHJpbmc+O1xuICBoZWlnaHQ6IG51bWJlcjtcbiAgaW5uZXJSYWRpdXM6IG51bWJlciA9IDA7XG4gIG9uU2VyaWVDbGljazogU3ViamVjdDxQb0RvbnV0Q2hhcnRTZXJpZXMgfCBQb1BpZUNoYXJ0U2VyaWVzIHwgUG9DaGFydEdhdWdlU2VyaWU+ID0gbmV3IFN1YmplY3QoKTtcbiAgb25TZXJpZUhvdmVyOiBTdWJqZWN0PFBvRG9udXRDaGFydFNlcmllcyB8IFBvUGllQ2hhcnRTZXJpZXMgfCBQb0NoYXJ0R2F1Z2VTZXJpZT4gPSBuZXcgU3ViamVjdCgpO1xuICBzZXJpZXM6IEFycmF5PGFueT4gPSBbXTtcbiAgc3ZnRWxlbWVudDogSFRNTE9iamVjdEVsZW1lbnQ7XG4gIHN2Z0hlaWdodDogbnVtYmVyO1xuICB0YXJnZXQ6IEhUTUxJbnB1dEVsZW1lbnQgJiBFdmVudFRhcmdldDtcbiAgdG9vbHRpcEVsZW1lbnQ6IEhUTUxPYmplY3RFbGVtZW50O1xuICB0b29sdGlwVGV4dDogc3RyaW5nO1xuICB0b3RhbFZhbHVlOiBudW1iZXI7XG4gIHR5cGU6IFBvQ2hhcnRUeXBlO1xuXG4gIEBWaWV3Q2hpbGQoJ2NoYXJ0Qm9keScsIHsgc3RhdGljOiB0cnVlIH0pIGNoYXJ0Qm9keTogRWxlbWVudFJlZjtcblxuICBAVmlld0NoaWxkKCdzdmdDb250YWluZXInLCB7IHN0YXRpYzogdHJ1ZSB9KSBzdmdDb250YWluZXI6IEVsZW1lbnRSZWY7XG5cbiAgZ2V0IGlzQ2hhcnRHYXVnZVR5cGUoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMudHlwZSA9PT0gUG9DaGFydFR5cGUuR2F1Z2U7XG4gIH1cblxuICBjYWxjdWxhdGVTVkdDb250YWluZXJEaW1lbnNpb25zKGNoYXJ0V3JhcHBlckVsZW1lbnQ6IG51bWJlciwgY2hhcnRIZWFkZXJFbGVtZW50OiBudW1iZXIsIGNoYXJ0TGVnZW5kRWxlbWVudDogbnVtYmVyKSB7XG4gICAgY29uc3Qgc3ZnQ29udGFpbmVySGVpZ2h0Q2FsYyA9IHRoaXMuaGVpZ2h0IC0gY2hhcnRIZWFkZXJFbGVtZW50IC0gY2hhcnRMZWdlbmRFbGVtZW50IC0gKFBhZGRpbmcgKiAyKTtcblxuICAgIHRoaXMuc3ZnSGVpZ2h0ID0gc3ZnQ29udGFpbmVySGVpZ2h0Q2FsYyA8PSAwID8gMCA6IHN2Z0NvbnRhaW5lckhlaWdodENhbGM7XG4gICAgdGhpcy5jZW50ZXJYID0gY2hhcnRXcmFwcGVyRWxlbWVudCAvIDI7XG4gIH1cblxuICBjYWxjdWxhdGVUb3RhbFZhbHVlKCkge1xuICAgIHRoaXMudG90YWxWYWx1ZSA9IHRoaXMudHlwZSA9PT0gUG9DaGFydFR5cGUuR2F1Z2UgPyAxMDAgOiB0aGlzLnNlcmllcy5yZWR1Y2UoKHByZXZpb3VzVmFsdWUsIHNlcmllKSA9PiBwcmV2aW91c1ZhbHVlICsgc2VyaWUudmFsdWUsIDApO1xuICB9XG5cbn1cbiJdfQ==