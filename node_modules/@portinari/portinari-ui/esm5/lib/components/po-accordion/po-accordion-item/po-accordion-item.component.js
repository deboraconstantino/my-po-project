import * as tslib_1 from "tslib";
import { Component, Input, TemplateRef, ViewChild } from '@angular/core';
import { PoAccordionService } from '../services/po-accordion.service';
/**
 * @description
 *
 * Componente utilizado para renderizar os itens do `po-accordion`.
 *
 * O componente `po-accordion` já faz o controle de abertura e fechamento dos itens automaticamente,
 * mas caso houver a necessidade de abrir algum dos `po-accordion-item` via Typescript, pode ser feita da seguinte forma:
 *
 * ```
 * <po-accordion>
 *   <po-accordion-item p-label="Portinari Accordion 1" #item1>
 *      Accordion 1
 *   </po-accordion-item>
 *
 *   <po-accordion-item p-label="Portinari Accordion 2">
 *      Accordion 2
 *   </po-accordion-item>
 * </po-accordion>
 * ```
 *
 * e no typescript pode-se utilizar o `@ViewChild`:
 *
 * ```
 *  @ViewChild(PoAccordionItemComponent, { static: true }) item1: PoAccordionItemComponent;
 *
 *  ngAfterContentInit() {
 *    // ou utilizar o método collapse()
 *    this.item1.expand();
 *  }
 * ```
 */
var PoAccordionItemComponent = /** @class */ (function () {
    function PoAccordionItemComponent(accordionService) {
        this.accordionService = accordionService;
    }
    /**
     * Método para colapsar o `po-accordion-item`.
     */
    PoAccordionItemComponent.prototype.collapse = function () {
        this.expanded = false;
        this.accordionService.sendToParentAccordionItemClicked(this);
    };
    /**
     * Método para expandir o `po-accordion-item`.
     */
    PoAccordionItemComponent.prototype.expand = function () {
        this.expanded = true;
        this.accordionService.sendToParentAccordionItemClicked(this);
    };
    PoAccordionItemComponent.ctorParameters = function () { return [
        { type: PoAccordionService }
    ]; };
    tslib_1.__decorate([
        Input('p-label'),
        tslib_1.__metadata("design:type", String)
    ], PoAccordionItemComponent.prototype, "label", void 0);
    tslib_1.__decorate([
        ViewChild(TemplateRef, { static: true }),
        tslib_1.__metadata("design:type", TemplateRef)
    ], PoAccordionItemComponent.prototype, "templateRef", void 0);
    PoAccordionItemComponent = tslib_1.__decorate([
        Component({
            selector: 'po-accordion-item',
            template: "<ng-template>\n  <ng-content></ng-content>\n</ng-template>\n"
        }),
        tslib_1.__metadata("design:paramtypes", [PoAccordionService])
    ], PoAccordionItemComponent);
    return PoAccordionItemComponent;
}());
export { PoAccordionItemComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tYWNjb3JkaW9uLWl0ZW0uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvcnRpbmFyaS9wb3J0aW5hcmktdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby1hY2NvcmRpb24vcG8tYWNjb3JkaW9uLWl0ZW0vcG8tYWNjb3JkaW9uLWl0ZW0uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXpFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBRXRFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0E4Qkc7QUFLSDtJQVNFLGtDQUFvQixnQkFBb0M7UUFBcEMscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFvQjtJQUFHLENBQUM7SUFFNUQ7O09BRUc7SUFDSCwyQ0FBUSxHQUFSO1FBQ0UsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7UUFFdEIsSUFBSSxDQUFDLGdCQUFnQixDQUFDLGdDQUFnQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQy9ELENBQUM7SUFFRDs7T0FFRztJQUNILHlDQUFNLEdBQU47UUFDRSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztRQUVyQixJQUFJLENBQUMsZ0JBQWdCLENBQUMsZ0NBQWdDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDL0QsQ0FBQzs7Z0JBbEJxQyxrQkFBa0I7O0lBSnRDO1FBQWpCLEtBQUssQ0FBQyxTQUFTLENBQUM7OzJEQUFlO0lBRVU7UUFBekMsU0FBUyxDQUFDLFdBQVcsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsQ0FBQzswQ0FBYyxXQUFXO2lFQUFNO0lBUDdELHdCQUF3QjtRQUpwQyxTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsbUJBQW1CO1lBQzdCLHdFQUErQztTQUNoRCxDQUFDO2lEQVVzQyxrQkFBa0I7T0FUN0Msd0JBQXdCLENBNEJwQztJQUFELCtCQUFDO0NBQUEsQUE1QkQsSUE0QkM7U0E1Qlksd0JBQXdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgVGVtcGxhdGVSZWYsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBQb0FjY29yZGlvblNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9wby1hY2NvcmRpb24uc2VydmljZSc7XG5cbi8qKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogQ29tcG9uZW50ZSB1dGlsaXphZG8gcGFyYSByZW5kZXJpemFyIG9zIGl0ZW5zIGRvIGBwby1hY2NvcmRpb25gLlxuICpcbiAqIE8gY29tcG9uZW50ZSBgcG8tYWNjb3JkaW9uYCBqw6EgZmF6IG8gY29udHJvbGUgZGUgYWJlcnR1cmEgZSBmZWNoYW1lbnRvIGRvcyBpdGVucyBhdXRvbWF0aWNhbWVudGUsXG4gKiBtYXMgY2FzbyBob3V2ZXIgYSBuZWNlc3NpZGFkZSBkZSBhYnJpciBhbGd1bSBkb3MgYHBvLWFjY29yZGlvbi1pdGVtYCB2aWEgVHlwZXNjcmlwdCwgcG9kZSBzZXIgZmVpdGEgZGEgc2VndWludGUgZm9ybWE6XG4gKlxuICogYGBgXG4gKiA8cG8tYWNjb3JkaW9uPlxuICogICA8cG8tYWNjb3JkaW9uLWl0ZW0gcC1sYWJlbD1cIlBvcnRpbmFyaSBBY2NvcmRpb24gMVwiICNpdGVtMT5cbiAqICAgICAgQWNjb3JkaW9uIDFcbiAqICAgPC9wby1hY2NvcmRpb24taXRlbT5cbiAqXG4gKiAgIDxwby1hY2NvcmRpb24taXRlbSBwLWxhYmVsPVwiUG9ydGluYXJpIEFjY29yZGlvbiAyXCI+XG4gKiAgICAgIEFjY29yZGlvbiAyXG4gKiAgIDwvcG8tYWNjb3JkaW9uLWl0ZW0+XG4gKiA8L3BvLWFjY29yZGlvbj5cbiAqIGBgYFxuICpcbiAqIGUgbm8gdHlwZXNjcmlwdCBwb2RlLXNlIHV0aWxpemFyIG8gYEBWaWV3Q2hpbGRgOlxuICpcbiAqIGBgYFxuICogIEBWaWV3Q2hpbGQoUG9BY2NvcmRpb25JdGVtQ29tcG9uZW50LCB7IHN0YXRpYzogdHJ1ZSB9KSBpdGVtMTogUG9BY2NvcmRpb25JdGVtQ29tcG9uZW50O1xuICpcbiAqICBuZ0FmdGVyQ29udGVudEluaXQoKSB7XG4gKiAgICAvLyBvdSB1dGlsaXphciBvIG3DqXRvZG8gY29sbGFwc2UoKVxuICogICAgdGhpcy5pdGVtMS5leHBhbmQoKTtcbiAqICB9XG4gKiBgYGBcbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG8tYWNjb3JkaW9uLWl0ZW0nLFxuICB0ZW1wbGF0ZVVybDogJ3BvLWFjY29yZGlvbi1pdGVtLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBQb0FjY29yZGlvbkl0ZW1Db21wb25lbnQge1xuXG4gIGV4cGFuZGVkOiBib29sZWFuO1xuXG4gIC8qKiBUw610dWxvIGRvIGl0ZW0uICovXG4gIEBJbnB1dCgncC1sYWJlbCcpIGxhYmVsOiBzdHJpbmc7XG5cbiAgQFZpZXdDaGlsZChUZW1wbGF0ZVJlZiwgeyBzdGF0aWM6IHRydWUgfSkgdGVtcGxhdGVSZWY6IFRlbXBsYXRlUmVmPGFueT47XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBhY2NvcmRpb25TZXJ2aWNlOiBQb0FjY29yZGlvblNlcnZpY2UpIHt9XG5cbiAgLyoqXG4gICAqIE3DqXRvZG8gcGFyYSBjb2xhcHNhciBvIGBwby1hY2NvcmRpb24taXRlbWAuXG4gICAqL1xuICBjb2xsYXBzZSgpIHtcbiAgICB0aGlzLmV4cGFuZGVkID0gZmFsc2U7XG5cbiAgICB0aGlzLmFjY29yZGlvblNlcnZpY2Uuc2VuZFRvUGFyZW50QWNjb3JkaW9uSXRlbUNsaWNrZWQodGhpcyk7XG4gIH1cblxuICAvKipcbiAgICogTcOpdG9kbyBwYXJhIGV4cGFuZGlyIG8gYHBvLWFjY29yZGlvbi1pdGVtYC5cbiAgICovXG4gIGV4cGFuZCgpIHtcbiAgICB0aGlzLmV4cGFuZGVkID0gdHJ1ZTtcblxuICAgIHRoaXMuYWNjb3JkaW9uU2VydmljZS5zZW5kVG9QYXJlbnRBY2NvcmRpb25JdGVtQ2xpY2tlZCh0aGlzKTtcbiAgfVxufVxuIl19