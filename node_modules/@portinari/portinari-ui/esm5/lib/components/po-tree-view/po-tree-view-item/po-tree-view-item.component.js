import * as tslib_1 from "tslib";
import { animate, state, style, transition, trigger } from '@angular/animations';
import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { PoTreeViewService } from '../services/po-tree-view.service';
var PoTreeViewItemComponent = /** @class */ (function () {
    function PoTreeViewItemComponent(treeViewService) {
        this.treeViewService = treeViewService;
    }
    Object.defineProperty(PoTreeViewItemComponent.prototype, "hasSubItems", {
        get: function () {
            return !!(this.item.subItems && this.item.subItems.length);
        },
        enumerable: true,
        configurable: true
    });
    PoTreeViewItemComponent.prototype.onClick = function (event) {
        event.preventDefault();
        event.stopPropagation();
        this.item.expanded = !this.item.expanded;
        this.treeViewService.emitExpandedEvent(tslib_1.__assign({}, this.item));
    };
    PoTreeViewItemComponent.prototype.onSelect = function (selectedItem) {
        this.treeViewService.emitSelectedEvent(tslib_1.__assign({}, selectedItem));
    };
    PoTreeViewItemComponent.prototype.trackByFunction = function (index) {
        return index;
    };
    PoTreeViewItemComponent.ctorParameters = function () { return [
        { type: PoTreeViewService }
    ]; };
    tslib_1.__decorate([
        Input('p-item'),
        tslib_1.__metadata("design:type", Object)
    ], PoTreeViewItemComponent.prototype, "item", void 0);
    tslib_1.__decorate([
        Input('p-selectable'),
        tslib_1.__metadata("design:type", Boolean)
    ], PoTreeViewItemComponent.prototype, "selectable", void 0);
    PoTreeViewItemComponent = tslib_1.__decorate([
        Component({
            selector: 'po-tree-view-item',
            template: "<li class=\"po-tree-view-item\">\n\n  <po-tree-view-item-header\n    [p-item]=\"item\"\n    [p-selectable]=\"selectable\"\n    (p-expanded)=\"onClick($event)\"\n    (p-selected)=\"onSelect(item)\">\n  </po-tree-view-item-header>\n\n  <ul *ngIf=\"hasSubItems\"\n    class=\"po-tree-view-item-group\"\n    [@toggleBody]=\"item.expanded ? 'expanded' : 'collapsed'\">\n\n    <po-tree-view-item *ngFor=\"let subItem of item.subItems; trackBy: trackByFunction\"\n      [p-item]=\"subItem\"\n      [p-selectable]=\"selectable\">\n    </po-tree-view-item>\n  </ul>\n\n</li>\n",
            changeDetection: ChangeDetectionStrategy.OnPush,
            animations: [
                trigger('toggleBody', [
                    state('collapsed', style({
                        'overflow-y': 'hidden',
                        visibility: 'hidden',
                        opacity: 0,
                        height: '0'
                    })),
                    transition('expanded => collapsed', [
                        style({ height: '*' }),
                        animate(100, style({ opacity: 0 })),
                        animate(200, style({ height: 0 }))
                    ]),
                    transition('collapsed => expanded', [
                        style({ height: '0' }),
                        animate(100, style({ opacity: 1 })),
                        animate(200, style({ height: '*' }))
                    ])
                ])
            ]
        }),
        tslib_1.__metadata("design:paramtypes", [PoTreeViewService])
    ], PoTreeViewItemComponent);
    return PoTreeViewItemComponent;
}());
export { PoTreeViewItemComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdHJlZS12aWV3LWl0ZW0uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvcnRpbmFyaS9wb3J0aW5hcmktdWkvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby10cmVlLXZpZXcvcG8tdHJlZS12aWV3LWl0ZW0vcG8tdHJlZS12aWV3LWl0ZW0uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ2pGLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRzFFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBMkJyRTtJQVVFLGlDQUFvQixlQUFrQztRQUFsQyxvQkFBZSxHQUFmLGVBQWUsQ0FBbUI7SUFBSSxDQUFDO0lBSjNELHNCQUFJLGdEQUFXO2FBQWY7WUFDRSxPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzdELENBQUM7OztPQUFBO0lBSUQseUNBQU8sR0FBUCxVQUFRLEtBQWlCO1FBQ3ZCLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN2QixLQUFLLENBQUMsZUFBZSxFQUFFLENBQUM7UUFFeEIsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUV6QyxJQUFJLENBQUMsZUFBZSxDQUFDLGlCQUFpQixzQkFBTSxJQUFJLENBQUMsSUFBSSxFQUFHLENBQUM7SUFDM0QsQ0FBQztJQUVELDBDQUFRLEdBQVIsVUFBUyxZQUE0QjtRQUNuQyxJQUFJLENBQUMsZUFBZSxDQUFDLGlCQUFpQixzQkFBTSxZQUFZLEVBQUcsQ0FBQztJQUM5RCxDQUFDO0lBRUQsaURBQWUsR0FBZixVQUFnQixLQUFhO1FBQzNCLE9BQU8sS0FBSyxDQUFDO0lBQ2YsQ0FBQzs7Z0JBakJvQyxpQkFBaUI7O0lBUnJDO1FBQWhCLEtBQUssQ0FBQyxRQUFRLENBQUM7O3lEQUFzQjtJQUVmO1FBQXRCLEtBQUssQ0FBQyxjQUFjLENBQUM7OytEQUFxQjtJQUpoQyx1QkFBdUI7UUF6Qm5DLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxtQkFBbUI7WUFDN0IsbWtCQUFpRDtZQUNqRCxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtZQUMvQyxVQUFVLEVBQUU7Z0JBQ1YsT0FBTyxDQUFDLFlBQVksRUFBRTtvQkFDcEIsS0FBSyxDQUFDLFdBQVcsRUFBRSxLQUFLLENBQUM7d0JBQ3ZCLFlBQVksRUFBRSxRQUFRO3dCQUN0QixVQUFVLEVBQUUsUUFBUTt3QkFDcEIsT0FBTyxFQUFFLENBQUM7d0JBQ1YsTUFBTSxFQUFFLEdBQUc7cUJBQ1osQ0FBQyxDQUFDO29CQUNILFVBQVUsQ0FBQyx1QkFBdUIsRUFBRTt3QkFDbEMsS0FBSyxDQUFDLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxDQUFDO3dCQUN0QixPQUFPLENBQUMsR0FBRyxFQUFFLEtBQUssQ0FBQyxFQUFFLE9BQU8sRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDO3dCQUNuQyxPQUFPLENBQUMsR0FBRyxFQUFFLEtBQUssQ0FBQyxFQUFFLE1BQU0sRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDO3FCQUNuQyxDQUFDO29CQUNGLFVBQVUsQ0FBQyx1QkFBdUIsRUFBRTt3QkFDbEMsS0FBSyxDQUFDLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxDQUFDO3dCQUN0QixPQUFPLENBQUMsR0FBRyxFQUFFLEtBQUssQ0FBQyxFQUFFLE9BQU8sRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDO3dCQUNuQyxPQUFPLENBQUMsR0FBRyxFQUFFLEtBQUssQ0FBQyxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO3FCQUNyQyxDQUFDO2lCQUNILENBQUM7YUFDSDtTQUNGLENBQUM7aURBV3FDLGlCQUFpQjtPQVYzQyx1QkFBdUIsQ0E0Qm5DO0lBQUQsOEJBQUM7Q0FBQSxBQTVCRCxJQTRCQztTQTVCWSx1QkFBdUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhbmltYXRlLCBzdGF0ZSwgc3R5bGUsIHRyYW5zaXRpb24sIHRyaWdnZXIgfSBmcm9tICdAYW5ndWxhci9hbmltYXRpb25zJztcbmltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFBvVHJlZVZpZXdJdGVtIH0gZnJvbSAnLi9wby10cmVlLXZpZXctaXRlbS5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgUG9UcmVlVmlld1NlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9wby10cmVlLXZpZXcuc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BvLXRyZWUtdmlldy1pdGVtJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3BvLXRyZWUtdmlldy1pdGVtLmNvbXBvbmVudC5odG1sJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIGFuaW1hdGlvbnM6IFtcbiAgICB0cmlnZ2VyKCd0b2dnbGVCb2R5JywgW1xuICAgICAgc3RhdGUoJ2NvbGxhcHNlZCcsIHN0eWxlKHtcbiAgICAgICAgJ292ZXJmbG93LXknOiAnaGlkZGVuJyxcbiAgICAgICAgdmlzaWJpbGl0eTogJ2hpZGRlbicsXG4gICAgICAgIG9wYWNpdHk6IDAsXG4gICAgICAgIGhlaWdodDogJzAnXG4gICAgICB9KSksXG4gICAgICB0cmFuc2l0aW9uKCdleHBhbmRlZCA9PiBjb2xsYXBzZWQnLCBbXG4gICAgICAgIHN0eWxlKHsgaGVpZ2h0OiAnKicgfSksXG4gICAgICAgIGFuaW1hdGUoMTAwLCBzdHlsZSh7IG9wYWNpdHk6IDAgfSkpLFxuICAgICAgICBhbmltYXRlKDIwMCwgc3R5bGUoeyBoZWlnaHQ6IDAgfSkpXG4gICAgICBdKSxcbiAgICAgIHRyYW5zaXRpb24oJ2NvbGxhcHNlZCA9PiBleHBhbmRlZCcsIFtcbiAgICAgICAgc3R5bGUoeyBoZWlnaHQ6ICcwJyB9KSxcbiAgICAgICAgYW5pbWF0ZSgxMDAsIHN0eWxlKHsgb3BhY2l0eTogMSB9KSksXG4gICAgICAgIGFuaW1hdGUoMjAwLCBzdHlsZSh7IGhlaWdodDogJyonIH0pKVxuICAgICAgXSlcbiAgICBdKVxuICBdXG59KVxuZXhwb3J0IGNsYXNzIFBvVHJlZVZpZXdJdGVtQ29tcG9uZW50IHtcblxuICBASW5wdXQoJ3AtaXRlbScpIGl0ZW06IFBvVHJlZVZpZXdJdGVtO1xuXG4gIEBJbnB1dCgncC1zZWxlY3RhYmxlJykgc2VsZWN0YWJsZTogYm9vbGVhbjtcblxuICBnZXQgaGFzU3ViSXRlbXMoKSB7XG4gICAgcmV0dXJuICEhKHRoaXMuaXRlbS5zdWJJdGVtcyAmJiB0aGlzLml0ZW0uc3ViSXRlbXMubGVuZ3RoKTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgdHJlZVZpZXdTZXJ2aWNlOiBQb1RyZWVWaWV3U2VydmljZSkgeyB9XG5cbiAgb25DbGljayhldmVudDogTW91c2VFdmVudCkge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG5cbiAgICB0aGlzLml0ZW0uZXhwYW5kZWQgPSAhdGhpcy5pdGVtLmV4cGFuZGVkO1xuXG4gICAgdGhpcy50cmVlVmlld1NlcnZpY2UuZW1pdEV4cGFuZGVkRXZlbnQoeyAuLi50aGlzLml0ZW0gfSk7XG4gIH1cblxuICBvblNlbGVjdChzZWxlY3RlZEl0ZW06IFBvVHJlZVZpZXdJdGVtKSB7XG4gICAgdGhpcy50cmVlVmlld1NlcnZpY2UuZW1pdFNlbGVjdGVkRXZlbnQoeyAuLi5zZWxlY3RlZEl0ZW0gfSk7XG4gIH1cblxuICB0cmFja0J5RnVuY3Rpb24oaW5kZXg6IG51bWJlcikge1xuICAgIHJldHVybiBpbmRleDtcbiAgfVxufVxuIl19