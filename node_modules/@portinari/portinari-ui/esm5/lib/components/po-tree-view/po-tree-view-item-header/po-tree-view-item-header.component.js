import * as tslib_1 from "tslib";
import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';
var PoTreeViewItemHeaderComponent = /** @class */ (function () {
    function PoTreeViewItemHeaderComponent() {
        this.selectable = false;
        this.expanded = new EventEmitter();
        this.selected = new EventEmitter();
    }
    Object.defineProperty(PoTreeViewItemHeaderComponent.prototype, "hasSubItems", {
        get: function () {
            return !!(this.item.subItems && this.item.subItems.length);
        },
        enumerable: true,
        configurable: true
    });
    tslib_1.__decorate([
        ViewChild('inputCheckbox', { static: false }),
        tslib_1.__metadata("design:type", Object)
    ], PoTreeViewItemHeaderComponent.prototype, "inputCheckbox", void 0);
    tslib_1.__decorate([
        Input('p-item'),
        tslib_1.__metadata("design:type", Object)
    ], PoTreeViewItemHeaderComponent.prototype, "item", void 0);
    tslib_1.__decorate([
        Input('p-selectable'),
        tslib_1.__metadata("design:type", Boolean)
    ], PoTreeViewItemHeaderComponent.prototype, "selectable", void 0);
    tslib_1.__decorate([
        Output('p-expanded'),
        tslib_1.__metadata("design:type", Object)
    ], PoTreeViewItemHeaderComponent.prototype, "expanded", void 0);
    tslib_1.__decorate([
        Output('p-selected'),
        tslib_1.__metadata("design:type", Object)
    ], PoTreeViewItemHeaderComponent.prototype, "selected", void 0);
    PoTreeViewItemHeaderComponent = tslib_1.__decorate([
        Component({
            selector: 'po-tree-view-item-header',
            template: "<div class=\"po-tree-view-item-header\">\n\n  <button *ngIf=\"hasSubItems\"\n    class=\"po-tree-view-item-header-button\"\n    (click)=\"expanded.emit($event)\">\n    <span class=\"po-icon po-icon-arrow-down po-tree-view-item-header-button-icon\"\n      [class.po-tree-view-item-header-button-icon-transform]=\"item.expanded\">\n    </span>\n  </button>\n\n  <ng-container *ngIf=\"selectable; then checkboxTemplate; else labelTemplate\"></ng-container>\n\n</div>\n\n<ng-template #labelTemplate>\n  <span class=\"po-tree-view-item-header-label\" [class.po-tree-view-item-header-padding]=\"!hasSubItems\">\n    {{ item.label }}\n  </span>\n</ng-template>\n\n<ng-template #checkboxTemplate>\n  <po-checkbox\n    class=\"po-tree-view-item-header-checkbox\"\n    [class.po-tree-view-item-header-padding]=\"!hasSubItems\"\n    [p-label]=\"item.label\"\n    [(ngModel)]=\"item.selected\"\n    (p-change)=\"selected.emit(item)\">\n  </po-checkbox>\n</ng-template>\n",
            changeDetection: ChangeDetectionStrategy.OnPush
        })
    ], PoTreeViewItemHeaderComponent);
    return PoTreeViewItemHeaderComponent;
}());
export { PoTreeViewItemHeaderComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdHJlZS12aWV3LWl0ZW0taGVhZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwb3J0aW5hcmkvcG9ydGluYXJpLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tdHJlZS12aWV3L3BvLXRyZWUtdmlldy1pdGVtLWhlYWRlci9wby10cmVlLXZpZXctaXRlbS1oZWFkZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQVMzRztJQUxBO1FBV3lCLGVBQVUsR0FBWSxLQUFLLENBQUM7UUFFN0IsYUFBUSxHQUFHLElBQUksWUFBWSxFQUFjLENBQUM7UUFFMUMsYUFBUSxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7SUFNM0QsQ0FBQztJQUpDLHNCQUFJLHNEQUFXO2FBQWY7WUFDRSxPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzdELENBQUM7OztPQUFBO0lBWjhDO1FBQTlDLFNBQVMsQ0FBQyxlQUFlLEVBQUUsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLENBQUM7O3dFQUFlO0lBRTVDO1FBQWhCLEtBQUssQ0FBQyxRQUFRLENBQUM7OytEQUFzQjtJQUVmO1FBQXRCLEtBQUssQ0FBQyxjQUFjLENBQUM7O3FFQUE2QjtJQUU3QjtRQUFyQixNQUFNLENBQUMsWUFBWSxDQUFDOzttRUFBMkM7SUFFMUM7UUFBckIsTUFBTSxDQUFDLFlBQVksQ0FBQzs7bUVBQW9DO0lBVjlDLDZCQUE2QjtRQUx6QyxTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsMEJBQTBCO1lBQ3BDLDA4QkFBd0Q7WUFDeEQsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07U0FDaEQsQ0FBQztPQUNXLDZCQUE2QixDQWdCekM7SUFBRCxvQ0FBQztDQUFBLEFBaEJELElBZ0JDO1NBaEJZLDZCQUE2QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFBvVHJlZVZpZXdJdGVtIH0gZnJvbSAnLi4vcG8tdHJlZS12aWV3LWl0ZW0vcG8tdHJlZS12aWV3LWl0ZW0uaW50ZXJmYWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG8tdHJlZS12aWV3LWl0ZW0taGVhZGVyJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3BvLXRyZWUtdmlldy1pdGVtLWhlYWRlci5jb21wb25lbnQuaHRtbCcsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuZXhwb3J0IGNsYXNzIFBvVHJlZVZpZXdJdGVtSGVhZGVyQ29tcG9uZW50IHtcblxuICBAVmlld0NoaWxkKCdpbnB1dENoZWNrYm94JywgeyBzdGF0aWM6IGZhbHNlIH0pIGlucHV0Q2hlY2tib3g7XG5cbiAgQElucHV0KCdwLWl0ZW0nKSBpdGVtOiBQb1RyZWVWaWV3SXRlbTtcblxuICBASW5wdXQoJ3Atc2VsZWN0YWJsZScpIHNlbGVjdGFibGU6IGJvb2xlYW4gPSBmYWxzZTtcblxuICBAT3V0cHV0KCdwLWV4cGFuZGVkJykgZXhwYW5kZWQgPSBuZXcgRXZlbnRFbWl0dGVyPE1vdXNlRXZlbnQ+KCk7XG5cbiAgQE91dHB1dCgncC1zZWxlY3RlZCcpIHNlbGVjdGVkID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG5cbiAgZ2V0IGhhc1N1Ykl0ZW1zKCkge1xuICAgIHJldHVybiAhISh0aGlzLml0ZW0uc3ViSXRlbXMgJiYgdGhpcy5pdGVtLnN1Ykl0ZW1zLmxlbmd0aCk7XG4gIH1cblxufVxuIl19