import * as tslib_1 from "tslib";
import { Directive, ElementRef, HostListener, OnInit, Renderer2 } from '@angular/core';
import { PoTooltipBaseDirective } from './po-tooltip-base.directive';
import { PoTooltipControlPositionService } from './po-tooltip-control-position.service';
/**
 * @docsExtends PoTooltipBaseDirective
 *
 * @example
 *
 * <example name="po-tooltip-basic" title="Portinari Tooltip Basic" >
 *  <file name="sample-po-tooltip-basic/sample-po-tooltip-basic.component.html"> </file>
 *  <file name="sample-po-tooltip-basic/sample-po-tooltip-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-tooltip-labs" title="Portinari Tooltip Labs" >
 *  <file name="sample-po-tooltip-labs/sample-po-tooltip-labs.component.html"> </file>
 *  <file name="sample-po-tooltip-labs/sample-po-tooltip-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-tooltip-new-user" title="Portinari Tooltip - New User" >
 *  <file name="sample-po-tooltip-new-user/sample-po-tooltip-new-user.component.html"> </file>
 *  <file name="sample-po-tooltip-new-user/sample-po-tooltip-new-user.component.ts"> </file>
 * </example>
 *
 */
var PoTooltipDirective = /** @class */ (function (_super) {
    tslib_1.__extends(PoTooltipDirective, _super);
    function PoTooltipDirective(elementRef, renderer, poControlPosition) {
        var _this = _super.call(this) || this;
        _this.elementRef = elementRef;
        _this.renderer = renderer;
        _this.poControlPosition = poControlPosition;
        _this.tooltipOffset = 8;
        return _this;
    }
    PoTooltipDirective.prototype.ngOnInit = function () {
        this.initScrollEventListenerFunction();
    };
    PoTooltipDirective.prototype.onMouseEnter = function () {
        var _this = this;
        setTimeout(function () {
            if (_this.tooltip) {
                _this.tooltipContent ? _this.showTooltip() : _this.createTooltip();
                _this.removeArrow(_this.arrowDirection);
                _this.poControlPosition.adjustPosition(_this.tooltipPosition);
                _this.arrowDirection = _this.poControlPosition.getArrowDirection();
                _this.addArrow(_this.arrowDirection);
                _this.lastTooltipText = _this.tooltip;
            }
        });
    };
    PoTooltipDirective.prototype.onMouseLeave = function () {
        var _this = this;
        // necessita do timeout para conseguir adicionar ".po-invisible", pois quando tem alguns elementos
        // próximos com tooltips e ficar passando o mouse em cima, os mesmos não estavam ficando invisiveis.
        setTimeout(function () {
            _this.hideTooltip();
        });
    };
    PoTooltipDirective.prototype.addArrow = function (arrowDirection) {
        this.renderer.addClass(this.divArrow, "po-arrow-" + arrowDirection);
    };
    PoTooltipDirective.prototype.addScrollEventListener = function () {
        window.addEventListener('scroll', this.eventListenerFunction, true);
    };
    // Monta a estrutura do tooltip
    PoTooltipDirective.prototype.createTooltip = function () {
        this.tooltipContent = this.renderer.createElement('div');
        this.renderer.addClass(this.tooltipContent, 'po-tooltip');
        this.divArrow = this.renderer.createElement('div');
        this.renderer.addClass(this.divArrow, 'po-tooltip-arrow');
        this.divContent = this.renderer.createElement('div');
        this.renderer.addClass(this.divContent, 'po-tooltip-content');
        this.textContent = this.renderer.createText(this.tooltip);
        this.renderer.appendChild(this.divContent, this.textContent);
        this.renderer.appendChild(this.tooltipContent, this.divArrow);
        this.renderer.appendChild(this.tooltipContent, this.divContent);
        this.renderer.appendChild(this.elementRef.nativeElement, this.tooltipContent);
        this.poControlPosition.setElements(this.tooltipContent, this.tooltipOffset, this.elementRef);
        this.addScrollEventListener();
    };
    PoTooltipDirective.prototype.initScrollEventListenerFunction = function () {
        var _this = this;
        this.eventListenerFunction = function () {
            if (!_this.isHidden) {
                setTimeout(function () {
                    _this.poControlPosition.adjustPosition(_this.tooltipPosition);
                });
            }
        };
    };
    PoTooltipDirective.prototype.hideTooltip = function () {
        if (this.tooltipContent) {
            this.renderer.addClass(this.tooltipContent, 'po-invisible');
            this.isHidden = true;
            this.removeScrollEventListener();
        }
    };
    PoTooltipDirective.prototype.removeArrow = function (arrowDirection) {
        if (this.elementRef.nativeElement.querySelector(".po-arrow-" + arrowDirection)) {
            this.renderer.removeClass(this.divArrow, "po-arrow-" + arrowDirection);
        }
    };
    PoTooltipDirective.prototype.removeScrollEventListener = function () {
        window.removeEventListener('scroll', this.eventListenerFunction, true);
    };
    PoTooltipDirective.prototype.showTooltip = function () {
        this.renderer.removeClass(this.tooltipContent, 'po-invisible');
        this.updateTextContent();
        this.isHidden = false;
        this.addScrollEventListener();
    };
    PoTooltipDirective.prototype.updateTextContent = function () {
        if (this.lastTooltipText !== this.tooltip) {
            this.renderer.removeChild(this.divContent, this.textContent);
            this.textContent = this.renderer.createText(this.tooltip);
            this.renderer.appendChild(this.divContent, this.textContent);
        }
    };
    PoTooltipDirective.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 },
        { type: PoTooltipControlPositionService }
    ]; };
    tslib_1.__decorate([
        HostListener('mouseenter'),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", []),
        tslib_1.__metadata("design:returntype", void 0)
    ], PoTooltipDirective.prototype, "onMouseEnter", null);
    tslib_1.__decorate([
        HostListener('mouseleave'),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", []),
        tslib_1.__metadata("design:returntype", void 0)
    ], PoTooltipDirective.prototype, "onMouseLeave", null);
    PoTooltipDirective = tslib_1.__decorate([
        Directive({
            selector: '[p-tooltip]',
            providers: [PoTooltipControlPositionService]
        }),
        tslib_1.__metadata("design:paramtypes", [ElementRef,
            Renderer2,
            PoTooltipControlPositionService])
    ], PoTooltipDirective);
    return PoTooltipDirective;
}(PoTooltipBaseDirective));
export { PoTooltipDirective };
//# sourceMappingURL=data:application/json;base64,