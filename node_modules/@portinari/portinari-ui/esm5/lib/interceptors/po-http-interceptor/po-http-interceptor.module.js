import * as tslib_1 from "tslib";
import { CommonModule } from '@angular/common';
import { HTTP_INTERCEPTORS } from '@angular/common/http';
import { NgModule } from '@angular/core';
import { PoAccordionModule } from '../../components/po-accordion/po-accordion.module';
import { PoModalModule } from '../../components/po-modal/po-modal.module';
import { PoNotificationModule } from '../../services/po-notification/po-notification.module';
import { PoNotificationService } from './../../services/po-notification/po-notification.service';
import { PoTagModule } from '../../components/po-tag/po-tag.module';
import { PoHttpInterceptorDetailComponent } from './po-http-interceptor-detail/po-http-interceptor-detail.component';
import { PoHttpInterceptorService } from './po-http-interceptor.service';
var PoHttpInterceptorModule = /** @class */ (function () {
    function PoHttpInterceptorModule() {
    }
    PoHttpInterceptorModule = tslib_1.__decorate([
        NgModule({
            imports: [
                CommonModule,
                PoAccordionModule,
                PoModalModule,
                PoNotificationModule,
                PoTagModule
            ],
            declarations: [
                PoHttpInterceptorDetailComponent,
            ],
            providers: [
                PoHttpInterceptorService,
                PoNotificationService,
                {
                    provide: HTTP_INTERCEPTORS,
                    useClass: PoHttpInterceptorService,
                    multi: true
                }
            ],
            entryComponents: [PoHttpInterceptorDetailComponent]
        })
    ], PoHttpInterceptorModule);
    return PoHttpInterceptorModule;
}());
export { PoHttpInterceptorModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8taHR0cC1pbnRlcmNlcHRvci5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcG9ydGluYXJpL3BvcnRpbmFyaS11aS8iLCJzb3VyY2VzIjpbImxpYi9pbnRlcmNlcHRvcnMvcG8taHR0cC1pbnRlcmNlcHRvci9wby1odHRwLWludGVyY2VwdG9yLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3pELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFekMsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sbURBQW1ELENBQUM7QUFDdEYsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDJDQUEyQyxDQUFDO0FBQzFFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHVEQUF1RCxDQUFDO0FBQzdGLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDBEQUEwRCxDQUFDO0FBQ2pHLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUVwRSxPQUFPLEVBQUUsZ0NBQWdDLEVBQUUsTUFBTSxtRUFBbUUsQ0FBQztBQUNySCxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQXdCekU7SUFBQTtJQUF1QyxDQUFDO0lBQTNCLHVCQUF1QjtRQXRCbkMsUUFBUSxDQUFDO1lBQ1IsT0FBTyxFQUFFO2dCQUNQLFlBQVk7Z0JBQ1osaUJBQWlCO2dCQUNqQixhQUFhO2dCQUNiLG9CQUFvQjtnQkFDcEIsV0FBVzthQUNaO1lBQ0QsWUFBWSxFQUFFO2dCQUNaLGdDQUFnQzthQUNqQztZQUNELFNBQVMsRUFBRTtnQkFDVCx3QkFBd0I7Z0JBQ3hCLHFCQUFxQjtnQkFDckI7b0JBQ0UsT0FBTyxFQUFFLGlCQUFpQjtvQkFDMUIsUUFBUSxFQUFFLHdCQUF3QjtvQkFDbEMsS0FBSyxFQUFFLElBQUk7aUJBQ1o7YUFDRjtZQUNELGVBQWUsRUFBRSxDQUFDLGdDQUFnQyxDQUFDO1NBQ3BELENBQUM7T0FDVyx1QkFBdUIsQ0FBSTtJQUFELDhCQUFDO0NBQUEsQUFBeEMsSUFBd0M7U0FBM0IsdUJBQXVCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IEhUVFBfSU5URVJDRVBUT1JTIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgUG9BY2NvcmRpb25Nb2R1bGUgfSBmcm9tICcuLi8uLi9jb21wb25lbnRzL3BvLWFjY29yZGlvbi9wby1hY2NvcmRpb24ubW9kdWxlJztcbmltcG9ydCB7IFBvTW9kYWxNb2R1bGUgfSBmcm9tICcuLi8uLi9jb21wb25lbnRzL3BvLW1vZGFsL3BvLW1vZGFsLm1vZHVsZSc7XG5pbXBvcnQgeyBQb05vdGlmaWNhdGlvbk1vZHVsZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL3BvLW5vdGlmaWNhdGlvbi9wby1ub3RpZmljYXRpb24ubW9kdWxlJztcbmltcG9ydCB7IFBvTm90aWZpY2F0aW9uU2VydmljZSB9IGZyb20gJy4vLi4vLi4vc2VydmljZXMvcG8tbm90aWZpY2F0aW9uL3BvLW5vdGlmaWNhdGlvbi5zZXJ2aWNlJztcbmltcG9ydCB7IFBvVGFnTW9kdWxlIH0gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9wby10YWcvcG8tdGFnLm1vZHVsZSc7XG5cbmltcG9ydCB7IFBvSHR0cEludGVyY2VwdG9yRGV0YWlsQ29tcG9uZW50IH0gZnJvbSAnLi9wby1odHRwLWludGVyY2VwdG9yLWRldGFpbC9wby1odHRwLWludGVyY2VwdG9yLWRldGFpbC5jb21wb25lbnQnO1xuaW1wb3J0IHsgUG9IdHRwSW50ZXJjZXB0b3JTZXJ2aWNlIH0gZnJvbSAnLi9wby1odHRwLWludGVyY2VwdG9yLnNlcnZpY2UnO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlLFxuICAgIFBvQWNjb3JkaW9uTW9kdWxlLFxuICAgIFBvTW9kYWxNb2R1bGUsXG4gICAgUG9Ob3RpZmljYXRpb25Nb2R1bGUsXG4gICAgUG9UYWdNb2R1bGVcbiAgXSxcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgUG9IdHRwSW50ZXJjZXB0b3JEZXRhaWxDb21wb25lbnQsXG4gIF0sXG4gIHByb3ZpZGVyczogW1xuICAgIFBvSHR0cEludGVyY2VwdG9yU2VydmljZSxcbiAgICBQb05vdGlmaWNhdGlvblNlcnZpY2UsXG4gICAge1xuICAgICAgcHJvdmlkZTogSFRUUF9JTlRFUkNFUFRPUlMsXG4gICAgICB1c2VDbGFzczogUG9IdHRwSW50ZXJjZXB0b3JTZXJ2aWNlLFxuICAgICAgbXVsdGk6IHRydWVcbiAgICB9XG4gIF0sXG4gIGVudHJ5Q29tcG9uZW50czogW1BvSHR0cEludGVyY2VwdG9yRGV0YWlsQ29tcG9uZW50XVxufSlcbmV4cG9ydCBjbGFzcyBQb0h0dHBJbnRlcmNlcHRvck1vZHVsZSB7IH1cbiJdfQ==