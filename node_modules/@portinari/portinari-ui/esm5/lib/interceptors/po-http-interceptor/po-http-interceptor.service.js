import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { PoComponentInjectorService } from '../../services/po-component-injector/po-component-injector.service';
import { PoNotificationService } from './../../services/po-notification/po-notification.service';
import { PoHttpInterceptorBaseService } from './po-http-interceptor-base.service';
/**
 * @docsExtends PoHttpInterceptorBaseService
 *
 * @example
 * <example name='po-http-interceptor-labs' title='Portinari Http Interceptor Labs'>
 *  <file name='sample-po-http-interceptor-labs.component.ts'> </file>
 *  <file name='sample-po-http-interceptor-labs.component.html'> </file>
 * </example>
 */
var PoHttpInterceptorService = /** @class */ (function (_super) {
    tslib_1.__extends(PoHttpInterceptorService, _super);
    function PoHttpInterceptorService(notification, componentInjector) {
        return _super.call(this, componentInjector, notification) || this;
    }
    PoHttpInterceptorService.ctorParameters = function () { return [
        { type: PoNotificationService },
        { type: PoComponentInjectorService }
    ]; };
    PoHttpInterceptorService = tslib_1.__decorate([
        Injectable(),
        tslib_1.__metadata("design:paramtypes", [PoNotificationService, PoComponentInjectorService])
    ], PoHttpInterceptorService);
    return PoHttpInterceptorService;
}(PoHttpInterceptorBaseService));
export { PoHttpInterceptorService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8taHR0cC1pbnRlcmNlcHRvci5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvcnRpbmFyaS9wb3J0aW5hcmktdWkvIiwic291cmNlcyI6WyJsaWIvaW50ZXJjZXB0b3JzL3BvLWh0dHAtaW50ZXJjZXB0b3IvcG8taHR0cC1pbnRlcmNlcHRvci5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTNDLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLG9FQUFvRSxDQUFDO0FBQ2hILE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDBEQUEwRCxDQUFDO0FBRWpHLE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBRWxGOzs7Ozs7OztHQVFHO0FBRUg7SUFBOEMsb0RBQTRCO0lBQ3hFLGtDQUFZLFlBQW1DLEVBQUUsaUJBQTZDO2VBQzVGLGtCQUFNLGlCQUFpQixFQUFFLFlBQVksQ0FBQztJQUN4QyxDQUFDOztnQkFGeUIscUJBQXFCO2dCQUFxQiwwQkFBMEI7O0lBRG5GLHdCQUF3QjtRQURwQyxVQUFVLEVBQUU7aURBRWUscUJBQXFCLEVBQXFCLDBCQUEwQjtPQURuRix3QkFBd0IsQ0FJcEM7SUFBRCwrQkFBQztDQUFBLEFBSkQsQ0FBOEMsNEJBQTRCLEdBSXpFO1NBSlksd0JBQXdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBQb0NvbXBvbmVudEluamVjdG9yU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL3BvLWNvbXBvbmVudC1pbmplY3Rvci9wby1jb21wb25lbnQtaW5qZWN0b3Iuc2VydmljZSc7XG5pbXBvcnQgeyBQb05vdGlmaWNhdGlvblNlcnZpY2UgfSBmcm9tICcuLy4uLy4uL3NlcnZpY2VzL3BvLW5vdGlmaWNhdGlvbi9wby1ub3RpZmljYXRpb24uc2VydmljZSc7XG5cbmltcG9ydCB7IFBvSHR0cEludGVyY2VwdG9yQmFzZVNlcnZpY2UgfSBmcm9tICcuL3BvLWh0dHAtaW50ZXJjZXB0b3ItYmFzZS5zZXJ2aWNlJztcblxuLyoqXG4gKiBAZG9jc0V4dGVuZHMgUG9IdHRwSW50ZXJjZXB0b3JCYXNlU2VydmljZVxuICpcbiAqIEBleGFtcGxlXG4gKiA8ZXhhbXBsZSBuYW1lPSdwby1odHRwLWludGVyY2VwdG9yLWxhYnMnIHRpdGxlPSdQb3J0aW5hcmkgSHR0cCBJbnRlcmNlcHRvciBMYWJzJz5cbiAqICA8ZmlsZSBuYW1lPSdzYW1wbGUtcG8taHR0cC1pbnRlcmNlcHRvci1sYWJzLmNvbXBvbmVudC50cyc+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPSdzYW1wbGUtcG8taHR0cC1pbnRlcmNlcHRvci1sYWJzLmNvbXBvbmVudC5odG1sJz4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICovXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgUG9IdHRwSW50ZXJjZXB0b3JTZXJ2aWNlIGV4dGVuZHMgUG9IdHRwSW50ZXJjZXB0b3JCYXNlU2VydmljZSB7XG4gIGNvbnN0cnVjdG9yKG5vdGlmaWNhdGlvbjogUG9Ob3RpZmljYXRpb25TZXJ2aWNlLCBjb21wb25lbnRJbmplY3RvcjogUG9Db21wb25lbnRJbmplY3RvclNlcnZpY2UpIHtcbiAgICBzdXBlcihjb21wb25lbnRJbmplY3Rvciwgbm90aWZpY2F0aW9uKTtcbiAgfVxufVxuIl19