/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Input } from '@angular/core';
import { PoPageBlockedUserReason } from './enums/po-page-blocked-user-reason.enum';
/** @type {?} */
var PoPageBlockedUserReasonDefault = PoPageBlockedUserReason.None;
/** @type {?} */
var PoPageBlockedUserParamsDefault = { attempts: 5, days: 90, hours: 24 };
/**
 * \@description
 *
 * O componente `po-page-blocked-user` é utilizado como template para tela de bloqueio de usuário.
 * É possível definir entre três tipos de telas para alertar o usuário sobre um eventual bloqueio de login.
 *
 * Cada modelo de bloqueio possui uma imagem e texto adequados à situação.
 * Os textos das telas são pré-definidos e imutáveis, porém,
 * é possível estipular parâmetros como dias, horas e tentativas de acesso esgotadas.
 *
 * Por fim, há propriedades para adição de telefone e/ou email para contato e também a definição para a url de retorno.
 *
 * Para que as imagens sejam exibidas corretamente, é necessário incluir o caminho delas ao projeto. Para isso, edite
 * o *assets* no arquivo **angular.json** da aplicação na seguinte ordem:
 * ```
 *   "assets": [
 *     "src/assets",
 *     "src/favicon.ico",
 *     {
 *       "glob": "**\/*",
 *       "input": "node_modules/\@portinari/style/images",
 *       "output": "assets/images"
 *     }
 *   ]
 * ```
 *
 * _______________
 *
 * #### Praticidade
 * O `po-page-blocked-user`, assim como suas propriedades, pode também ser transmitido diretamente pelas configuraçãos de rota e,
 * desta maneira, dispensa-se qualquer menção e/ou importação no restante da aplicação. O exemplo abaixo exemplifica
 * a forma dinâmica com a qual o template pode ser gerado se navegasse para uma rota denominada como `/access-denied`:
 *
 *
 * ```
 *   import { PoPageBlockedUserComponent, PoPageBlockedUserReason } from '\@portinari/portinari-templates';
 *
 *   ...
 *   const routes: Routes = [
 *     {
 *       path: 'access-denied', component: PoPageBlockedUserComponent, data: {
 *         contactEmail: 'dev.portinari\@portinari.com',
 *         contactPhone: '0800 1234 000',
 *         reason: PoPageBlockedUserReason.ExpiredPassword,
 *         urlBack: '/home'
 *       }
 *     }
 *     ...
 *   ];
 *
 * \@NgModule({
 *     imports: [RouterModule.forRoot(routes)],
 *     exports: [RouterModule]
 *   })
 *   export class AppRoutingModule { }
 * ```
 *
 * > É essencial que siga a nomenclatura dos atributos exemplificados acima para sua efetiva funcionalidade.
 *
 */
var PoPageBlockedUserBaseComponent = /** @class */ (function () {
    function PoPageBlockedUserBaseComponent() {
        this._params = tslib_1.__assign({}, PoPageBlockedUserParamsDefault);
        this._reason = PoPageBlockedUserReason.None;
        this._urlBack = '/';
    }
    Object.defineProperty(PoPageBlockedUserBaseComponent.prototype, "params", {
        get: /**
         * @return {?}
         */
        function () {
            return this._params;
        },
        /**
         * @optional
         *
         * @description
         *
         * Designação de valores usados para a customização da mensagem de bloqueio.
         * Confira abaixo os valores pré-definidos.
         *
         * ```
         *  const customLiterals: PoPageBlockedUserReasonParams = {
         *    attempts: 5,
         *    days: 90,
         *    hours: 24
         *  };
         * ```
         *
         * > Salientamos a importância e atenção para configuração desses valores conforme definidos no projeto.
         *
         * > Veja os parâmetros customizáveis na interface `PoPageBlockedUserReasonParams`.
         *
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * Designação de valores usados para a customização da mensagem de bloqueio.
         * Confira abaixo os valores pré-definidos.
         *
         * ```
         *  const customLiterals: PoPageBlockedUserReasonParams = {
         *    attempts: 5,
         *    days: 90,
         *    hours: 24
         *  };
         * ```
         *
         * > Salientamos a importância e atenção para configuração desses valores conforme definidos no projeto.
         *
         * > Veja os parâmetros customizáveis na interface `PoPageBlockedUserReasonParams`.
         *
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (value instanceof Object) {
                /** @type {?} */
                var keys = Object.keys(value);
                /** @type {?} */
                var newParams_1 = tslib_1.__assign({}, PoPageBlockedUserParamsDefault);
                keys.forEach((/**
                 * @param {?} key
                 * @return {?}
                 */
                function (key) {
                    newParams_1[key] = value[key];
                }));
                this._params = newParams_1;
            }
            else {
                this._params = tslib_1.__assign({}, PoPageBlockedUserParamsDefault);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageBlockedUserBaseComponent.prototype, "reason", {
        get: /**
         * @return {?}
         */
        function () {
            return this._reason;
        },
        /**
         * @optional
         *
         * @description
         *
         * Definição de motivo de bloqueio de usuário. As informações modificam conforme o motivo selecionado.
         *
         * > Veja os valores válidos no *enum* `PoPageBlockedUserReason`.
         *
         * @default `PoPageBlockedUserReason.None`
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * Definição de motivo de bloqueio de usuário. As informações modificam conforme o motivo selecionado.
         *
         * > Veja os valores válidos no *enum* `PoPageBlockedUserReason`.
         *
         * \@default `PoPageBlockedUserReason.None`
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._reason = ((/** @type {?} */ (Object))).values(PoPageBlockedUserReason).includes(value) ? value : PoPageBlockedUserReasonDefault;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageBlockedUserBaseComponent.prototype, "urlBack", {
        get: /**
         * @return {?}
         */
        function () {
            return this._urlBack;
        },
        /**
         * @optional
         *
         * @description
         *
         * URL para a ação de retorno da página.
         *
         * @default `/`
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * URL para a ação de retorno da página.
         *
         * \@default `/`
         * @param {?} url
         * @return {?}
         */
        function (url) {
            this._urlBack = url;
        },
        enumerable: true,
        configurable: true
    });
    PoPageBlockedUserBaseComponent.propDecorators = {
        contactEmail: [{ type: Input, args: ['p-contact-email',] }],
        contactPhone: [{ type: Input, args: ['p-contact-phone',] }],
        params: [{ type: Input, args: ['p-params',] }],
        logo: [{ type: Input, args: ['p-logo',] }],
        reason: [{ type: Input, args: ['p-reason',] }],
        secondaryLogo: [{ type: Input, args: ['p-secondary-logo',] }],
        urlBack: [{ type: Input, args: ['p-url-back',] }]
    };
    return PoPageBlockedUserBaseComponent;
}());
export { PoPageBlockedUserBaseComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoPageBlockedUserBaseComponent.prototype._params;
    /**
     * @type {?}
     * @private
     */
    PoPageBlockedUserBaseComponent.prototype._reason;
    /**
     * @type {?}
     * @private
     */
    PoPageBlockedUserBaseComponent.prototype._urlBack;
    /**
     * \@optional
     *
     * \@description
     *
     * Valor para o email de contato que deve ser exibido. A ação está de acordo com o protocolo MAILTO e é possível definir
     * tanto rotas internas quanto externas.
     * @type {?}
     */
    PoPageBlockedUserBaseComponent.prototype.contactEmail;
    /**
     * \@optional
     *
     * \@description
     *
     * Valor para o telefone de contato que deve ser exibido. A ação está de acordo com o protocolo TEL.
     *
     * > A propriedade não contem tratamento de máscara, fica a critério do desenvolvedor defini-la.
     * @type {?}
     */
    PoPageBlockedUserBaseComponent.prototype.contactPhone;
    /**
     * Caminho para a logomarca localizada na parte superior, caso não seja definida ou seja inválida assume a logo padrão da PORTINARI.
     * @type {?}
     */
    PoPageBlockedUserBaseComponent.prototype.logo;
    /**
     * \@optional
     *
     * \@description
     *
     * Caminho para a logomarca localizada no rodapé.
     * @type {?}
     */
    PoPageBlockedUserBaseComponent.prototype.secondaryLogo;
}
//# sourceMappingURL=data:application/json;base64,