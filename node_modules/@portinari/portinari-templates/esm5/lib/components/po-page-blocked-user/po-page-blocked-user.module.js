/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { RouterModule } from '@angular/router';
import { PoModule } from '@portinari/portinari-ui';
import { PoPageBackgroundModule } from '../po-page-background/index';
import { PoPageBlockedUserComponent } from './po-page-blocked-user.component';
import { PoPageBlockedUserContactsComponent } from './po-page-blocked-user-contacts/po-page-blocked-user-contacts.component';
import { PoPageBlockedUserReasonComponent } from './po-page-blocked-user-reason/po-page-blocked-user-reason.component';
/**
 * \@description
 *
 * MÃ³dulo do template do po-page-blocked-user.
 */
var PoPageBlockedUserModule = /** @class */ (function () {
    function PoPageBlockedUserModule() {
    }
    PoPageBlockedUserModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        RouterModule,
                        PoModule,
                        PoPageBackgroundModule,
                    ],
                    declarations: [
                        PoPageBlockedUserComponent,
                        PoPageBlockedUserContactsComponent,
                        PoPageBlockedUserReasonComponent,
                    ],
                    exports: [
                        PoPageBlockedUserComponent,
                        PoPageBlockedUserContactsComponent,
                        PoPageBlockedUserReasonComponent,
                    ]
                },] }
    ];
    return PoPageBlockedUserModule;
}());
export { PoPageBlockedUserModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tcGFnZS1ibG9ja2VkLXVzZXIubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvcnRpbmFyaS9wb3J0aW5hcmktdGVtcGxhdGVzLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tcGFnZS1ibG9ja2VkLXVzZXIvcG8tcGFnZS1ibG9ja2VkLXVzZXIubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFL0MsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBRW5ELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQ3JFLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQzlFLE9BQU8sRUFBRSxrQ0FBa0MsRUFBRSxNQUFNLHlFQUF5RSxDQUFDO0FBQzdILE9BQU8sRUFBRSxnQ0FBZ0MsRUFBRSxNQUFNLHFFQUFxRSxDQUFDOzs7Ozs7QUFPdkg7SUFBQTtJQW1CdUMsQ0FBQzs7Z0JBbkJ2QyxRQUFRLFNBQUM7b0JBQ1IsT0FBTyxFQUFFO3dCQUNQLFlBQVk7d0JBQ1osWUFBWTt3QkFFWixRQUFRO3dCQUNSLHNCQUFzQjtxQkFDdkI7b0JBQ0QsWUFBWSxFQUFFO3dCQUNaLDBCQUEwQjt3QkFDMUIsa0NBQWtDO3dCQUNsQyxnQ0FBZ0M7cUJBQ2pDO29CQUNELE9BQU8sRUFBRTt3QkFDUCwwQkFBMEI7d0JBQzFCLGtDQUFrQzt3QkFDbEMsZ0NBQWdDO3FCQUNqQztpQkFDRjs7SUFDc0MsOEJBQUM7Q0FBQSxBQW5CeEMsSUFtQndDO1NBQTNCLHVCQUF1QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFJvdXRlck1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XHJcblxyXG5pbXBvcnQgeyBQb01vZHVsZSB9IGZyb20gJ0Bwb3J0aW5hcmkvcG9ydGluYXJpLXVpJztcclxuXHJcbmltcG9ydCB7IFBvUGFnZUJhY2tncm91bmRNb2R1bGUgfSBmcm9tICcuLi9wby1wYWdlLWJhY2tncm91bmQvaW5kZXgnO1xyXG5pbXBvcnQgeyBQb1BhZ2VCbG9ja2VkVXNlckNvbXBvbmVudCB9IGZyb20gJy4vcG8tcGFnZS1ibG9ja2VkLXVzZXIuY29tcG9uZW50JztcclxuaW1wb3J0IHsgUG9QYWdlQmxvY2tlZFVzZXJDb250YWN0c0NvbXBvbmVudCB9IGZyb20gJy4vcG8tcGFnZS1ibG9ja2VkLXVzZXItY29udGFjdHMvcG8tcGFnZS1ibG9ja2VkLXVzZXItY29udGFjdHMuY29tcG9uZW50JztcclxuaW1wb3J0IHsgUG9QYWdlQmxvY2tlZFVzZXJSZWFzb25Db21wb25lbnQgfSBmcm9tICcuL3BvLXBhZ2UtYmxvY2tlZC11c2VyLXJlYXNvbi9wby1wYWdlLWJsb2NrZWQtdXNlci1yZWFzb24uY29tcG9uZW50JztcclxuXHJcbi8qKlxyXG4gKiBAZGVzY3JpcHRpb25cclxuICpcclxuICogTcOzZHVsbyBkbyB0ZW1wbGF0ZSBkbyBwby1wYWdlLWJsb2NrZWQtdXNlci5cclxuICovXHJcbkBOZ01vZHVsZSh7XHJcbiAgaW1wb3J0czogW1xyXG4gICAgQ29tbW9uTW9kdWxlLFxyXG4gICAgUm91dGVyTW9kdWxlLFxyXG5cclxuICAgIFBvTW9kdWxlLFxyXG4gICAgUG9QYWdlQmFja2dyb3VuZE1vZHVsZSxcclxuICBdLFxyXG4gIGRlY2xhcmF0aW9uczogW1xyXG4gICAgUG9QYWdlQmxvY2tlZFVzZXJDb21wb25lbnQsXHJcbiAgICBQb1BhZ2VCbG9ja2VkVXNlckNvbnRhY3RzQ29tcG9uZW50LFxyXG4gICAgUG9QYWdlQmxvY2tlZFVzZXJSZWFzb25Db21wb25lbnQsXHJcbiAgXSxcclxuICBleHBvcnRzOiBbXHJcbiAgICBQb1BhZ2VCbG9ja2VkVXNlckNvbXBvbmVudCxcclxuICAgIFBvUGFnZUJsb2NrZWRVc2VyQ29udGFjdHNDb21wb25lbnQsXHJcbiAgICBQb1BhZ2VCbG9ja2VkVXNlclJlYXNvbkNvbXBvbmVudCxcclxuICBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBQb1BhZ2VCbG9ja2VkVXNlck1vZHVsZSB7IH1cclxuIl19