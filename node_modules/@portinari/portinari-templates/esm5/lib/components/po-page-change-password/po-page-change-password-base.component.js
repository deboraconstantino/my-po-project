/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { EventEmitter, Input, Output } from '@angular/core';
import { convertToBoolean, isExternalLink, isTypeof } from '../../utils/util';
/**
 * \@description
 *
 * O componente `po-page-change-password` é utilizado como template para tela de cadastro ou alteração de senha.
 *
 * Apresenta dicas e regras para senhas mais seguras e também possibilidade de personalizar o redirecionamento para as telas
 * 'esqueceu a senha', 'voltar' e 'entrar no sistema'. Os textos das telas são pré-definidos e imutáveis.
 *
 * A propriedade `p-url-new-password` automatiza a rotina do template e simplifica o processo de cadastro/alteração de senha, bastando
 * definir uma url para POST das informações digitadas pelo usuário.  A flexibilidade e praticidade podem chegar a um nível em que o
 * desenvolvimento da aplicação no *client side* é desprovida de qualquer código-fonte relacionado à rotina de cadastro/alteração de senha.
 * Seu detalhamento para uso pode ser visto logo abaixo em *propriedades*.
 * Caso julgue necessário, pode-se também definir manualmente a rotina do componente.
 *
 * Para que as imagens sejam exibidas corretamente, é necessário incluir o caminho delas ao projeto. Para isso, edite
 * o *assets* no arquivo **angular.json** da aplicação na seguinte ordem:
 * ```
 *   "assets": [
 *     "src/assets",
 *     "src/favicon.ico",
 *     {
 *       "glob": "**\/*",
 *       "input": "node_modules/\@portinari/style/images",
 *       "output": "assets/images"
 *     }
 *   ]
 * ```
 * @abstract
 */
var PoPageChangePasswordBaseComponent = /** @class */ (function () {
    function PoPageChangePasswordBaseComponent() {
        this._hideCurrentPassword = false;
        this._requirements = [];
        this._urlHome = '/';
        /**
         * \@optional
         *
         * \@description
         *
         * URL para a ação de retorno da página.
         *
         * > O botão `Voltar` aparece apenas para telas de alteração de senha, ou seja, só aparece se a propriedade `p-hide-current-password` for
         * falsa.
         *
         * \@default `/`
         */
        this.urlBack = '/';
        /**
         * \@optional
         *
         * \@description
         *
         * Função executada ao submeter o form pelo botão salvar.
         *
         * Caso definida essa função, a modal de confirmação não aparece, mas pode ser chamada pelo
         * método `openConfirmation`. Exemplo:
         *
         * ```
         * \@ViewChild(PoPageChangePasswordComponent) changePassword: PoPageChangePasswordComponent;
         *
         * onSubmit() {
         *  this.changePassword.openConfirmation();
         * }
         *
         * ```
         * > Esta propriedade será ignorada se for definido valor para a propriedade `p-url-new-password`.
         */
        this.submit = new EventEmitter();
    }
    Object.defineProperty(PoPageChangePasswordBaseComponent.prototype, "hideCurrentPassword", {
        get: /**
         * @return {?}
         */
        function () {
            return this._hideCurrentPassword;
        },
        /**
         * @optional
         *
         * @description
         *
         * Esconde o campo `Senha atual` para que o template seja para criação de senha.
         *
         * @default `false`
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * Esconde o campo `Senha atual` para que o template seja para criação de senha.
         *
         * \@default `false`
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._hideCurrentPassword = convertToBoolean(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageChangePasswordBaseComponent.prototype, "recovery", {
        get: /**
         * @return {?}
         */
        function () {
            return this._recovery;
        },
        /**
         * @optional
         *
         * @description
         *
         * URL para a ação do link `Esqueceu a senha`.
         *
         * A propriedade aceita os seguintes tipos:
         *
         * - **String**: informe uma url externa ou uma rota válida;
         * - **Function**: pode-se customizar a ação. Para esta possilidade basta atribuir:
         * ```
         * <po-page-change-password>
         *      [recovery]="this.myFunc.bind(this)";
         * </po-page-change-password>
         * ```
         *
         * - **PoPageChangePasswordRecovery**: cria-se vínculo automático com o template **po-modal-password-recovery**.
         *   O objeto deve conter a **url** para requisição dos recursos e pode-se definir o **tipo** de modal para recuperação de senha,
         *   **email** para contato e **máscara** do campo de telefone.
         *
         * > Caso não tenha valor o link `Esqueceu a senha` desaparece.
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * URL para a ação do link `Esqueceu a senha`.
         *
         * A propriedade aceita os seguintes tipos:
         *
         * - **String**: informe uma url externa ou uma rota válida;
         * - **Function**: pode-se customizar a ação. Para esta possilidade basta atribuir:
         * ```
         * <po-page-change-password>
         *      [recovery]="this.myFunc.bind(this)";
         * </po-page-change-password>
         * ```
         *
         * - **PoPageChangePasswordRecovery**: cria-se vínculo automático com o template **po-modal-password-recovery**.
         *   O objeto deve conter a **url** para requisição dos recursos e pode-se definir o **tipo** de modal para recuperação de senha,
         *   **email** para contato e **máscara** do campo de telefone.
         *
         * > Caso não tenha valor o link `Esqueceu a senha` desaparece.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._recovery = value;
            if (isTypeof(value, 'string')) {
                this.recoveryUrlType = isExternalLink(value) ? 'externalLink' : 'internalLink';
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageChangePasswordBaseComponent.prototype, "requirements", {
        get: /**
         * @return {?}
         */
        function () {
            return this._requirements;
        },
        /**
         * @optional
         *
         * @description
         *
         * Lista de regras para criação e alteração de senha.
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * Lista de regras para criação e alteração de senha.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._requirements = value || [];
            this.showRequirements = this._requirements.length > 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageChangePasswordBaseComponent.prototype, "urlHome", {
        get: /**
         * @return {?}
         */
        function () {
            return this._urlHome;
        },
        /**
         * @optional
         *
         * @description
         *
         * URL para a ação do botão `Entrar no sistema` da modal de confirmação que aparece após salvar a senha ou se chamada pelo método
         * `openConfirmation`.
         *
         * @default `/`
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * URL para a ação do botão `Entrar no sistema` da modal de confirmação que aparece após salvar a senha ou se chamada pelo método
         * `openConfirmation`.
         *
         * \@default `/`
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._urlHome = value;
            this.modalAction.action = this.navigateTo.bind(this, this.urlHome);
        },
        enumerable: true,
        configurable: true
    });
    PoPageChangePasswordBaseComponent.propDecorators = {
        hideCurrentPassword: [{ type: Input, args: ['p-hide-current-password',] }],
        logo: [{ type: Input, args: ['p-logo',] }],
        recovery: [{ type: Input, args: ['p-recovery',] }],
        requirements: [{ type: Input, args: ['p-requirements',] }],
        secondaryLogo: [{ type: Input, args: ['p-secondary-logo',] }],
        token: [{ type: Input, args: ['p-token',] }],
        urlBack: [{ type: Input, args: ['p-url-back',] }],
        urlNewPassword: [{ type: Input, args: ['p-url-new-password',] }],
        urlHome: [{ type: Input, args: ['p-url-home',] }],
        submit: [{ type: Output, args: ['p-submit',] }]
    };
    return PoPageChangePasswordBaseComponent;
}());
export { PoPageChangePasswordBaseComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoPageChangePasswordBaseComponent.prototype._hideCurrentPassword;
    /**
     * @type {?}
     * @private
     */
    PoPageChangePasswordBaseComponent.prototype._recovery;
    /**
     * @type {?}
     * @private
     */
    PoPageChangePasswordBaseComponent.prototype._requirements;
    /**
     * @type {?}
     * @private
     */
    PoPageChangePasswordBaseComponent.prototype._urlHome;
    /**
     * @type {?}
     * @protected
     */
    PoPageChangePasswordBaseComponent.prototype.validatorChange;
    /** @type {?} */
    PoPageChangePasswordBaseComponent.prototype.confirmPassword;
    /** @type {?} */
    PoPageChangePasswordBaseComponent.prototype.currentPassword;
    /** @type {?} */
    PoPageChangePasswordBaseComponent.prototype.modalAction;
    /** @type {?} */
    PoPageChangePasswordBaseComponent.prototype.newPassword;
    /** @type {?} */
    PoPageChangePasswordBaseComponent.prototype.recoveryUrlType;
    /** @type {?} */
    PoPageChangePasswordBaseComponent.prototype.showRequirements;
    /**
     * \@optional
     *
     * \@description
     *
     * Caminho para a logomarca localizada na parte superior.
     *
     * > Caso seja indefinida o espaço se mantém preservado porém vazio.
     * @type {?}
     */
    PoPageChangePasswordBaseComponent.prototype.logo;
    /**
     * \@optional
     *
     * \@description
     *
     * Caminho para a logomarca localizada no rodapé.
     * @type {?}
     */
    PoPageChangePasswordBaseComponent.prototype.secondaryLogo;
    /**
     * Token para solicitação de troca/recuperação de senha.
     *
     * > Esta propriedade será ignorada caso exista um token como parâmetro na URL inicial do template.
     * @type {?}
     */
    PoPageChangePasswordBaseComponent.prototype.token;
    /**
     * \@optional
     *
     * \@description
     *
     * URL para a ação de retorno da página.
     *
     * > O botão `Voltar` aparece apenas para telas de alteração de senha, ou seja, só aparece se a propriedade `p-hide-current-password` for
     * falsa.
     *
     * \@default `/`
     * @type {?}
     */
    PoPageChangePasswordBaseComponent.prototype.urlBack;
    /**
     * Endpoint usado pelo template para realizar um POST. Quando preenchido, o método `p-submit` será ignorado e o componente adquirirá
     * automatização para o processo de cadastro/troca de senha.
     *
     * ### Processo
     * Ao digitar um valor válido nos campos de senha e pressionar **salvar**,
     * o componente fará uma requisição `POST` na url especificada nesta propriedade passando o objeto contendo os valores definidos pelo
     * usuário.
     *
     * ```
     * body {
     *  token?: token,
     *  oldPassword?: oldPassword,
     *  newPassword: newPassword
     * }
     * ```
     *
     * O código de resposta HTTP de status esperado é `204`.
     *
     * Em caso de **sucesso**, será exibida a modal de confirmação de senha alterada.
     *
     * > O token será informado pela propriedade `p-token`do componente ou por um *query parameter* na URL do template.
     *
     * *Processo finalizado.*
     *
     * _______________
     *
     * #### Praticidade
     * As informações do serviço de autenticação também podem ser transmitidas diretamente pelas configuraçãos de rota e, desta maneira,
     * dispensa-se qualquer menção e/ou importação do componente `po-page-change-password` no restante da aplicação. O exemplo abaixo
     * exemplifica a forma dinâmica com a qual o template de tela de troca de senha pode ser gerado ao navegar para rota `/change-password`, e
     * também como ele se comunica com o serviço para efetuação do processo de troca de senha do usuário e solicitação de nova senha.
     * Basta definir nas configurações de rota:
     *
     *
     * ```
     *   import { PoModalPasswordRecoveryType, PoPageChangePasswordComponent } from '\@portinari/portinari-templates';
     *
     *   ...
     *   const routes: Routes = [
     *     {
     *       path: 'change-password', component: PoPageChangePasswordComponent, data: {
     *         serviceApi: 'https://portinari.io/sample/api/new-password',
     *         recovery: {
     *           url: 'https://portinari.io/sample/api/users',
     *           type: PoModalPasswordRecoveryType.All,
     *           contactMail: 'dev.portinari\@portinari.com',
     *           phoneMask: '9-999-999-9999'
     *         }
     *       }
     *     }
     *     ...
     *   ];
     *
     * \@NgModule({
     *     imports: [RouterModule.forRoot(routes)],
     *     exports: [RouterModule]
     *   })
     *   export class AppRoutingModule { }
     * ```
     *
     *
     * O metadado `serviceApi` deve ser a **url** para requisição dos recursos de troca de senha. E `recovery` é a interface
     * `PoPageChangePasswordRecovery` responsável pelas especificações contidas na modal de recuperação de senha.
     *
     * > É essencial que siga a nomenclatura dos atributos exemplificados acima para sua efetiva funcionalidade.
     *
     * @type {?}
     */
    PoPageChangePasswordBaseComponent.prototype.urlNewPassword;
    /**
     * \@optional
     *
     * \@description
     *
     * Função executada ao submeter o form pelo botão salvar.
     *
     * Caso definida essa função, a modal de confirmação não aparece, mas pode ser chamada pelo
     * método `openConfirmation`. Exemplo:
     *
     * ```
     * \@ViewChild(PoPageChangePasswordComponent) changePassword: PoPageChangePasswordComponent;
     *
     * onSubmit() {
     *  this.changePassword.openConfirmation();
     * }
     *
     * ```
     * > Esta propriedade será ignorada se for definido valor para a propriedade `p-url-new-password`.
     * @type {?}
     */
    PoPageChangePasswordBaseComponent.prototype.submit;
    /**
     * @abstract
     * @param {?} url
     * @return {?}
     */
    PoPageChangePasswordBaseComponent.prototype.navigateTo = function (url) { };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tcGFnZS1jaGFuZ2UtcGFzc3dvcmQtYmFzZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcG9ydGluYXJpL3BvcnRpbmFyaS10ZW1wbGF0ZXMvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby1wYWdlLWNoYW5nZS1wYXNzd29yZC9wby1wYWdlLWNoYW5nZS1wYXNzd29yZC1iYXNlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBSTVELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxjQUFjLEVBQUUsUUFBUSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlDOUU7SUFBQTtRQUVVLHlCQUFvQixHQUFZLEtBQUssQ0FBQztRQUV0QyxrQkFBYSxHQUEyQyxFQUFFLENBQUM7UUFDM0QsYUFBUSxHQUFXLEdBQUcsQ0FBQzs7Ozs7Ozs7Ozs7OztRQW9IVixZQUFPLEdBQVcsR0FBRyxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7UUE4R3ZCLFdBQU0sR0FBc0IsSUFBSSxZQUFZLEVBQUUsQ0FBQztJQUlyRSxDQUFDO0lBbk5DLHNCQUFzQyxrRUFBbUI7Ozs7UUFJekQ7WUFDRSxPQUFPLElBQUksQ0FBQyxvQkFBb0IsQ0FBQztRQUNuQyxDQUFDO1FBZkQ7Ozs7Ozs7O1dBUUc7Ozs7Ozs7Ozs7OztRQUNILFVBQTBELEtBQWM7WUFDdEUsSUFBSSxDQUFDLG9CQUFvQixHQUFHLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3RELENBQUM7OztPQUFBO0lBd0NELHNCQUF5Qix1REFBUTs7OztRQVFqQztZQUNFLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQztRQUN4QixDQUFDO1FBakNEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O1dBc0JHOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztRQUNILFVBQWtDLEtBQXVEO1lBQ3ZGLElBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDO1lBRXZCLElBQUksUUFBUSxDQUFDLEtBQUssRUFBRSxRQUFRLENBQUMsRUFBRTtnQkFDN0IsSUFBSSxDQUFDLGVBQWUsR0FBRyxjQUFjLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUMsY0FBYyxDQUFDO2FBQ2hGO1FBQ0gsQ0FBQzs7O09BQUE7SUFhRCxzQkFBNkIsMkRBQVk7Ozs7UUFJekM7WUFDRSxPQUFPLElBQUksQ0FBQyxhQUFhLENBQUM7UUFDNUIsQ0FBQztRQWJEOzs7Ozs7V0FNRzs7Ozs7Ozs7OztRQUNILFVBQTBDLEtBQTZDO1lBQ3JGLElBQUksQ0FBQyxhQUFhLEdBQUcsS0FBSyxJQUFJLEVBQUUsQ0FBQztZQUNqQyxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO1FBQ3hELENBQUM7OztPQUFBO0lBbUhELHNCQUF5QixzREFBTzs7OztRQUloQztZQUNFLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUN2QixDQUFDO1FBaEJEOzs7Ozs7Ozs7V0FTRzs7Ozs7Ozs7Ozs7OztRQUNILFVBQWlDLEtBQWE7WUFDNUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7WUFDdEIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNyRSxDQUFDOzs7T0FBQTs7c0NBdExBLEtBQUssU0FBQyx5QkFBeUI7dUJBaUIvQixLQUFLLFNBQUMsUUFBUTsyQkF5QmQsS0FBSyxTQUFDLFlBQVk7K0JBbUJsQixLQUFLLFNBQUMsZ0JBQWdCO2dDQWV0QixLQUFLLFNBQUMsa0JBQWtCO3dCQU94QixLQUFLLFNBQUMsU0FBUzswQkFjZixLQUFLLFNBQUMsWUFBWTtpQ0FzRWxCLEtBQUssU0FBQyxvQkFBb0I7MEJBWTFCLEtBQUssU0FBQyxZQUFZO3lCQTRCbEIsTUFBTSxTQUFDLFVBQVU7O0lBSXBCLHdDQUFDO0NBQUEsQUEzT0QsSUEyT0M7U0EzT3FCLGlDQUFpQzs7Ozs7O0lBRXJELGlFQUE4Qzs7Ozs7SUFDOUMsc0RBQW9FOzs7OztJQUNwRSwwREFBbUU7Ozs7O0lBQ25FLHFEQUErQjs7Ozs7SUFDL0IsNERBQStCOztJQUUvQiw0REFBd0I7O0lBQ3hCLDREQUF3Qjs7SUFDeEIsd0RBQTJCOztJQUMzQix3REFBb0I7O0lBQ3BCLDREQUF3Qjs7SUFDeEIsNkRBQTBCOzs7Ozs7Ozs7OztJQTRCMUIsaURBQStCOzs7Ozs7Ozs7SUEyRC9CLDBEQUFrRDs7Ozs7OztJQU9sRCxrREFBaUM7Ozs7Ozs7Ozs7Ozs7O0lBY2pDLG9EQUEyQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQXNFM0MsMkRBQXFEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBd0NyRCxtREFBbUU7Ozs7OztJQUVuRSw0RUFBdUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgUG9Nb2RhbEFjdGlvbiB9IGZyb20gJ0Bwb3J0aW5hcmkvcG9ydGluYXJpLXVpJztcblxuaW1wb3J0IHsgY29udmVydFRvQm9vbGVhbiwgaXNFeHRlcm5hbExpbmssIGlzVHlwZW9mIH0gZnJvbSAnLi4vLi4vdXRpbHMvdXRpbCc7XG5cbmltcG9ydCB7IFBvUGFnZUNoYW5nZVBhc3N3b3JkUmVjb3ZlcnkgfSBmcm9tICcuL2ludGVyZmFjZXMvcG8tcGFnZS1jaGFuZ2UtcGFzc3dvcmQtcmVjb3ZlcnkuaW50ZXJmYWNlJztcbmltcG9ydCB7IFBvUGFnZUNoYW5nZVBhc3N3b3JkUmVxdWlyZW1lbnQgfSBmcm9tICcuL2ludGVyZmFjZXMvcG8tcGFnZS1jaGFuZ2UtcGFzc3dvcmQtcmVxdWlyZW1lbnQuaW50ZXJmYWNlJztcblxuLyoqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBPIGNvbXBvbmVudGUgYHBvLXBhZ2UtY2hhbmdlLXBhc3N3b3JkYCDDqSB1dGlsaXphZG8gY29tbyB0ZW1wbGF0ZSBwYXJhIHRlbGEgZGUgY2FkYXN0cm8gb3UgYWx0ZXJhw6fDo28gZGUgc2VuaGEuXG4gKlxuICogQXByZXNlbnRhIGRpY2FzIGUgcmVncmFzIHBhcmEgc2VuaGFzIG1haXMgc2VndXJhcyBlIHRhbWLDqW0gcG9zc2liaWxpZGFkZSBkZSBwZXJzb25hbGl6YXIgbyByZWRpcmVjaW9uYW1lbnRvIHBhcmEgYXMgdGVsYXNcbiAqICdlc3F1ZWNldSBhIHNlbmhhJywgJ3ZvbHRhcicgZSAnZW50cmFyIG5vIHNpc3RlbWEnLiBPcyB0ZXh0b3MgZGFzIHRlbGFzIHPDo28gcHLDqS1kZWZpbmlkb3MgZSBpbXV0w6F2ZWlzLlxuICpcbiAqIEEgcHJvcHJpZWRhZGUgYHAtdXJsLW5ldy1wYXNzd29yZGAgYXV0b21hdGl6YSBhIHJvdGluYSBkbyB0ZW1wbGF0ZSBlIHNpbXBsaWZpY2EgbyBwcm9jZXNzbyBkZSBjYWRhc3Ryby9hbHRlcmHDp8OjbyBkZSBzZW5oYSwgYmFzdGFuZG9cbiAqIGRlZmluaXIgdW1hIHVybCBwYXJhIFBPU1QgZGFzIGluZm9ybWHDp8O1ZXMgZGlnaXRhZGFzIHBlbG8gdXN1w6FyaW8uICBBIGZsZXhpYmlsaWRhZGUgZSBwcmF0aWNpZGFkZSBwb2RlbSBjaGVnYXIgYSB1bSBuw612ZWwgZW0gcXVlIG9cbiAqIGRlc2Vudm9sdmltZW50byBkYSBhcGxpY2HDp8OjbyBubyAqY2xpZW50IHNpZGUqIMOpIGRlc3Byb3ZpZGEgZGUgcXVhbHF1ZXIgY8OzZGlnby1mb250ZSByZWxhY2lvbmFkbyDDoCByb3RpbmEgZGUgY2FkYXN0cm8vYWx0ZXJhw6fDo28gZGUgc2VuaGEuXG4gKiBTZXUgZGV0YWxoYW1lbnRvIHBhcmEgdXNvIHBvZGUgc2VyIHZpc3RvIGxvZ28gYWJhaXhvIGVtICpwcm9wcmllZGFkZXMqLlxuICogQ2FzbyBqdWxndWUgbmVjZXNzw6FyaW8sIHBvZGUtc2UgdGFtYsOpbSBkZWZpbmlyIG1hbnVhbG1lbnRlIGEgcm90aW5hIGRvIGNvbXBvbmVudGUuXG4gKlxuICogUGFyYSBxdWUgYXMgaW1hZ2VucyBzZWphbSBleGliaWRhcyBjb3JyZXRhbWVudGUsIMOpIG5lY2Vzc8OhcmlvIGluY2x1aXIgbyBjYW1pbmhvIGRlbGFzIGFvIHByb2pldG8uIFBhcmEgaXNzbywgZWRpdGVcbiAqIG8gKmFzc2V0cyogbm8gYXJxdWl2byAqKmFuZ3VsYXIuanNvbioqIGRhIGFwbGljYcOnw6NvIG5hIHNlZ3VpbnRlIG9yZGVtOlxuICogYGBgXG4gKiAgIFwiYXNzZXRzXCI6IFtcbiAqICAgICBcInNyYy9hc3NldHNcIixcbiAqICAgICBcInNyYy9mYXZpY29uLmljb1wiLFxuICogICAgIHtcbiAqICAgICAgIFwiZ2xvYlwiOiBcIioqXFwvKlwiLFxuICogICAgICAgXCJpbnB1dFwiOiBcIm5vZGVfbW9kdWxlcy9AcG9ydGluYXJpL3N0eWxlL2ltYWdlc1wiLFxuICogICAgICAgXCJvdXRwdXRcIjogXCJhc3NldHMvaW1hZ2VzXCJcbiAqICAgICB9XG4gKiAgIF1cbiAqIGBgYFxuICovXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgUG9QYWdlQ2hhbmdlUGFzc3dvcmRCYXNlQ29tcG9uZW50IHtcblxuICBwcml2YXRlIF9oaWRlQ3VycmVudFBhc3N3b3JkOiBib29sZWFuID0gZmFsc2U7XG4gIHByaXZhdGUgX3JlY292ZXJ5OiBzdHJpbmcgfCBQb1BhZ2VDaGFuZ2VQYXNzd29yZFJlY292ZXJ5IHwgRnVuY3Rpb247XG4gIHByaXZhdGUgX3JlcXVpcmVtZW50czogQXJyYXk8UG9QYWdlQ2hhbmdlUGFzc3dvcmRSZXF1aXJlbWVudD4gPSBbXTtcbiAgcHJpdmF0ZSBfdXJsSG9tZTogc3RyaW5nID0gJy8nO1xuICBwcm90ZWN0ZWQgdmFsaWRhdG9yQ2hhbmdlOiBhbnk7XG5cbiAgY29uZmlybVBhc3N3b3JkOiBzdHJpbmc7XG4gIGN1cnJlbnRQYXNzd29yZDogc3RyaW5nO1xuICBtb2RhbEFjdGlvbjogUG9Nb2RhbEFjdGlvbjtcbiAgbmV3UGFzc3dvcmQ6IHN0cmluZztcbiAgcmVjb3ZlcnlVcmxUeXBlOiBzdHJpbmc7XG4gIHNob3dSZXF1aXJlbWVudHM6IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogRXNjb25kZSBvIGNhbXBvIGBTZW5oYSBhdHVhbGAgcGFyYSBxdWUgbyB0ZW1wbGF0ZSBzZWphIHBhcmEgY3JpYcOnw6NvIGRlIHNlbmhhLlxuICAgKlxuICAgKiBAZGVmYXVsdCBgZmFsc2VgXG4gICAqL1xuICBASW5wdXQoJ3AtaGlkZS1jdXJyZW50LXBhc3N3b3JkJykgc2V0IGhpZGVDdXJyZW50UGFzc3dvcmQodmFsdWU6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9oaWRlQ3VycmVudFBhc3N3b3JkID0gY29udmVydFRvQm9vbGVhbih2YWx1ZSk7XG4gIH1cblxuICBnZXQgaGlkZUN1cnJlbnRQYXNzd29yZCgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5faGlkZUN1cnJlbnRQYXNzd29yZDtcbiAgfVxuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIENhbWluaG8gcGFyYSBhIGxvZ29tYXJjYSBsb2NhbGl6YWRhIG5hIHBhcnRlIHN1cGVyaW9yLlxuICAgKlxuICAgKiA+IENhc28gc2VqYSBpbmRlZmluaWRhIG8gZXNwYcOnbyBzZSBtYW50w6ltIHByZXNlcnZhZG8gcG9yw6ltIHZhemlvLlxuICAgKi9cbiAgQElucHV0KCdwLWxvZ28nKSBsb2dvPzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIFVSTCBwYXJhIGEgYcOnw6NvIGRvIGxpbmsgYEVzcXVlY2V1IGEgc2VuaGFgLlxuICAgKlxuICAgKiBBIHByb3ByaWVkYWRlIGFjZWl0YSBvcyBzZWd1aW50ZXMgdGlwb3M6XG4gICAqXG4gICAqIC0gKipTdHJpbmcqKjogaW5mb3JtZSB1bWEgdXJsIGV4dGVybmEgb3UgdW1hIHJvdGEgdsOhbGlkYTtcbiAgICogLSAqKkZ1bmN0aW9uKio6IHBvZGUtc2UgY3VzdG9taXphciBhIGHDp8Ojby4gUGFyYSBlc3RhIHBvc3NpbGlkYWRlIGJhc3RhIGF0cmlidWlyOlxuICAgKiBgYGBcbiAgICogPHBvLXBhZ2UtY2hhbmdlLXBhc3N3b3JkPlxuICAgKiAgICAgIFtyZWNvdmVyeV09XCJ0aGlzLm15RnVuYy5iaW5kKHRoaXMpXCI7XG4gICAqIDwvcG8tcGFnZS1jaGFuZ2UtcGFzc3dvcmQ+XG4gICAqIGBgYFxuICAgKlxuICAgKiAtICoqUG9QYWdlQ2hhbmdlUGFzc3dvcmRSZWNvdmVyeSoqOiBjcmlhLXNlIHbDrW5jdWxvIGF1dG9tw6F0aWNvIGNvbSBvIHRlbXBsYXRlICoqcG8tbW9kYWwtcGFzc3dvcmQtcmVjb3ZlcnkqKi5cbiAgICogICBPIG9iamV0byBkZXZlIGNvbnRlciBhICoqdXJsKiogcGFyYSByZXF1aXNpw6fDo28gZG9zIHJlY3Vyc29zIGUgcG9kZS1zZSBkZWZpbmlyIG8gKip0aXBvKiogZGUgbW9kYWwgcGFyYSByZWN1cGVyYcOnw6NvIGRlIHNlbmhhLFxuICAgKiAgICoqZW1haWwqKiBwYXJhIGNvbnRhdG8gZSAqKm3DoXNjYXJhKiogZG8gY2FtcG8gZGUgdGVsZWZvbmUuXG4gICAqXG4gICAqID4gQ2FzbyBuw6NvIHRlbmhhIHZhbG9yIG8gbGluayBgRXNxdWVjZXUgYSBzZW5oYWAgZGVzYXBhcmVjZS5cbiAgICovXG4gIEBJbnB1dCgncC1yZWNvdmVyeScpIHNldCByZWNvdmVyeSh2YWx1ZTogc3RyaW5nIHwgRnVuY3Rpb24gfCBQb1BhZ2VDaGFuZ2VQYXNzd29yZFJlY292ZXJ5KSB7XG4gICAgdGhpcy5fcmVjb3ZlcnkgPSB2YWx1ZTtcblxuICAgIGlmIChpc1R5cGVvZih2YWx1ZSwgJ3N0cmluZycpKSB7XG4gICAgICB0aGlzLnJlY292ZXJ5VXJsVHlwZSA9IGlzRXh0ZXJuYWxMaW5rKHZhbHVlKSA/ICdleHRlcm5hbExpbmsnIDogJ2ludGVybmFsTGluayc7XG4gICAgfVxuICB9XG5cbiAgZ2V0IHJlY292ZXJ5KCkge1xuICAgIHJldHVybiB0aGlzLl9yZWNvdmVyeTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIExpc3RhIGRlIHJlZ3JhcyBwYXJhIGNyaWHDp8OjbyBlIGFsdGVyYcOnw6NvIGRlIHNlbmhhLlxuICAgKi9cbiAgQElucHV0KCdwLXJlcXVpcmVtZW50cycpIHNldCByZXF1aXJlbWVudHModmFsdWU6IEFycmF5PFBvUGFnZUNoYW5nZVBhc3N3b3JkUmVxdWlyZW1lbnQ+KSB7XG4gICAgdGhpcy5fcmVxdWlyZW1lbnRzID0gdmFsdWUgfHwgW107XG4gICAgdGhpcy5zaG93UmVxdWlyZW1lbnRzID0gdGhpcy5fcmVxdWlyZW1lbnRzLmxlbmd0aCA+IDA7XG4gIH1cbiAgZ2V0IHJlcXVpcmVtZW50cygpIHtcbiAgICByZXR1cm4gdGhpcy5fcmVxdWlyZW1lbnRzO1xuICB9XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogQ2FtaW5obyBwYXJhIGEgbG9nb21hcmNhIGxvY2FsaXphZGEgbm8gcm9kYXDDqS5cbiAgICovXG4gIEBJbnB1dCgncC1zZWNvbmRhcnktbG9nbycpIHNlY29uZGFyeUxvZ28/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRva2VuIHBhcmEgc29saWNpdGHDp8OjbyBkZSB0cm9jYS9yZWN1cGVyYcOnw6NvIGRlIHNlbmhhLlxuICAgKlxuICAgKiA+IEVzdGEgcHJvcHJpZWRhZGUgc2Vyw6EgaWdub3JhZGEgY2FzbyBleGlzdGEgdW0gdG9rZW4gY29tbyBwYXLDom1ldHJvIG5hIFVSTCBpbmljaWFsIGRvIHRlbXBsYXRlLlxuICAgKi9cbiAgQElucHV0KCdwLXRva2VuJykgdG9rZW4/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogVVJMIHBhcmEgYSBhw6fDo28gZGUgcmV0b3JubyBkYSBww6FnaW5hLlxuICAgKlxuICAgKiA+IE8gYm90w6NvIGBWb2x0YXJgIGFwYXJlY2UgYXBlbmFzIHBhcmEgdGVsYXMgZGUgYWx0ZXJhw6fDo28gZGUgc2VuaGEsIG91IHNlamEsIHPDsyBhcGFyZWNlIHNlIGEgcHJvcHJpZWRhZGUgYHAtaGlkZS1jdXJyZW50LXBhc3N3b3JkYCBmb3JcbiAgICogZmFsc2EuXG4gICAqXG4gICAqIEBkZWZhdWx0IGAvYFxuICAgKi9cbiAgQElucHV0KCdwLXVybC1iYWNrJykgdXJsQmFjazogc3RyaW5nID0gJy8nO1xuXG4gIC8qKlxuICAgKiBFbmRwb2ludCB1c2FkbyBwZWxvIHRlbXBsYXRlIHBhcmEgcmVhbGl6YXIgdW0gUE9TVC4gUXVhbmRvIHByZWVuY2hpZG8sIG8gbcOpdG9kbyBgcC1zdWJtaXRgIHNlcsOhIGlnbm9yYWRvIGUgbyBjb21wb25lbnRlIGFkcXVpcmlyw6FcbiAgICogYXV0b21hdGl6YcOnw6NvIHBhcmEgbyBwcm9jZXNzbyBkZSBjYWRhc3Ryby90cm9jYSBkZSBzZW5oYS5cbiAgICpcbiAgICogIyMjIFByb2Nlc3NvXG4gICAqIEFvIGRpZ2l0YXIgdW0gdmFsb3IgdsOhbGlkbyBub3MgY2FtcG9zIGRlIHNlbmhhIGUgcHJlc3Npb25hciAqKnNhbHZhcioqLFxuICAgKiBvIGNvbXBvbmVudGUgZmFyw6EgdW1hIHJlcXVpc2nDp8OjbyBgUE9TVGAgbmEgdXJsIGVzcGVjaWZpY2FkYSBuZXN0YSBwcm9wcmllZGFkZSBwYXNzYW5kbyBvIG9iamV0byBjb250ZW5kbyBvcyB2YWxvcmVzIGRlZmluaWRvcyBwZWxvXG4gICAqIHVzdcOhcmlvLlxuICAgKlxuICAgKiBgYGBcbiAgICogYm9keSB7XG4gICAqICB0b2tlbj86IHRva2VuLFxuICAgKiAgb2xkUGFzc3dvcmQ/OiBvbGRQYXNzd29yZCxcbiAgICogIG5ld1Bhc3N3b3JkOiBuZXdQYXNzd29yZFxuICAgKiB9XG4gICAqIGBgYFxuICAgKlxuICAgKiBPIGPDs2RpZ28gZGUgcmVzcG9zdGEgSFRUUCBkZSBzdGF0dXMgZXNwZXJhZG8gw6kgYDIwNGAuXG4gICAqXG4gICAqIEVtIGNhc28gZGUgKipzdWNlc3NvKiosIHNlcsOhIGV4aWJpZGEgYSBtb2RhbCBkZSBjb25maXJtYcOnw6NvIGRlIHNlbmhhIGFsdGVyYWRhLlxuICAgKlxuICAgKiA+IE8gdG9rZW4gc2Vyw6EgaW5mb3JtYWRvIHBlbGEgcHJvcHJpZWRhZGUgYHAtdG9rZW5gZG8gY29tcG9uZW50ZSBvdSBwb3IgdW0gKnF1ZXJ5IHBhcmFtZXRlciogbmEgVVJMIGRvIHRlbXBsYXRlLlxuICAgKlxuICAgKiAqUHJvY2Vzc28gZmluYWxpemFkby4qXG4gICAqXG4gICAqIF9fX19fX19fX19fX19fX1xuICAgKlxuICAgKiAjIyMjIFByYXRpY2lkYWRlXG4gICAqIEFzIGluZm9ybWHDp8O1ZXMgZG8gc2VydmnDp28gZGUgYXV0ZW50aWNhw6fDo28gdGFtYsOpbSBwb2RlbSBzZXIgdHJhbnNtaXRpZGFzIGRpcmV0YW1lbnRlIHBlbGFzIGNvbmZpZ3VyYcOnw6NvcyBkZSByb3RhIGUsIGRlc3RhIG1hbmVpcmEsXG4gICAqIGRpc3BlbnNhLXNlIHF1YWxxdWVyIG1lbsOnw6NvIGUvb3UgaW1wb3J0YcOnw6NvIGRvIGNvbXBvbmVudGUgYHBvLXBhZ2UtY2hhbmdlLXBhc3N3b3JkYCBubyByZXN0YW50ZSBkYSBhcGxpY2HDp8Ojby4gTyBleGVtcGxvIGFiYWl4b1xuICAgKiBleGVtcGxpZmljYSBhIGZvcm1hIGRpbsOibWljYSBjb20gYSBxdWFsIG8gdGVtcGxhdGUgZGUgdGVsYSBkZSB0cm9jYSBkZSBzZW5oYSBwb2RlIHNlciBnZXJhZG8gYW8gbmF2ZWdhciBwYXJhIHJvdGEgYC9jaGFuZ2UtcGFzc3dvcmRgLCBlXG4gICAqIHRhbWLDqW0gY29tbyBlbGUgc2UgY29tdW5pY2EgY29tIG8gc2VydmnDp28gcGFyYSBlZmV0dWHDp8OjbyBkbyBwcm9jZXNzbyBkZSB0cm9jYSBkZSBzZW5oYSBkbyB1c3XDoXJpbyBlIHNvbGljaXRhw6fDo28gZGUgbm92YSBzZW5oYS5cbiAgICogQmFzdGEgZGVmaW5pciBuYXMgY29uZmlndXJhw6fDtWVzIGRlIHJvdGE6XG4gICAqXG4gICAqXG4gICAqIGBgYFxuICAgKiAgIGltcG9ydCB7IFBvTW9kYWxQYXNzd29yZFJlY292ZXJ5VHlwZSwgUG9QYWdlQ2hhbmdlUGFzc3dvcmRDb21wb25lbnQgfSBmcm9tICdAcG9ydGluYXJpL3BvcnRpbmFyaS10ZW1wbGF0ZXMnO1xuICAgKlxuICAgKiAgIC4uLlxuICAgKiAgIGNvbnN0IHJvdXRlczogUm91dGVzID0gW1xuICAgKiAgICAge1xuICAgKiAgICAgICBwYXRoOiAnY2hhbmdlLXBhc3N3b3JkJywgY29tcG9uZW50OiBQb1BhZ2VDaGFuZ2VQYXNzd29yZENvbXBvbmVudCwgZGF0YToge1xuICAgKiAgICAgICAgIHNlcnZpY2VBcGk6ICdodHRwczovL3BvcnRpbmFyaS5pby9zYW1wbGUvYXBpL25ldy1wYXNzd29yZCcsXG4gICAqICAgICAgICAgcmVjb3Zlcnk6IHtcbiAgICogICAgICAgICAgIHVybDogJ2h0dHBzOi8vcG9ydGluYXJpLmlvL3NhbXBsZS9hcGkvdXNlcnMnLFxuICAgKiAgICAgICAgICAgdHlwZTogUG9Nb2RhbFBhc3N3b3JkUmVjb3ZlcnlUeXBlLkFsbCxcbiAgICogICAgICAgICAgIGNvbnRhY3RNYWlsOiAnZGV2LnBvcnRpbmFyaUBwb3J0aW5hcmkuY29tJyxcbiAgICogICAgICAgICAgIHBob25lTWFzazogJzktOTk5LTk5OS05OTk5J1xuICAgKiAgICAgICAgIH1cbiAgICogICAgICAgfVxuICAgKiAgICAgfVxuICAgKiAgICAgLi4uXG4gICAqICAgXTtcbiAgICpcbiAgICogICBATmdNb2R1bGUoe1xuICAgKiAgICAgaW1wb3J0czogW1JvdXRlck1vZHVsZS5mb3JSb290KHJvdXRlcyldLFxuICAgKiAgICAgZXhwb3J0czogW1JvdXRlck1vZHVsZV1cbiAgICogICB9KVxuICAgKiAgIGV4cG9ydCBjbGFzcyBBcHBSb3V0aW5nTW9kdWxlIHsgfVxuICAgKiBgYGBcbiAgICpcbiAgICpcbiAgICogTyBtZXRhZGFkbyBgc2VydmljZUFwaWAgZGV2ZSBzZXIgYSAqKnVybCoqIHBhcmEgcmVxdWlzacOnw6NvIGRvcyByZWN1cnNvcyBkZSB0cm9jYSBkZSBzZW5oYS4gRSBgcmVjb3ZlcnlgIMOpIGEgaW50ZXJmYWNlXG4gICAqIGBQb1BhZ2VDaGFuZ2VQYXNzd29yZFJlY292ZXJ5YCByZXNwb25zw6F2ZWwgcGVsYXMgZXNwZWNpZmljYcOnw7VlcyBjb250aWRhcyBuYSBtb2RhbCBkZSByZWN1cGVyYcOnw6NvIGRlIHNlbmhhLlxuICAgKlxuICAgKiA+IMOJIGVzc2VuY2lhbCBxdWUgc2lnYSBhIG5vbWVuY2xhdHVyYSBkb3MgYXRyaWJ1dG9zIGV4ZW1wbGlmaWNhZG9zIGFjaW1hIHBhcmEgc3VhIGVmZXRpdmEgZnVuY2lvbmFsaWRhZGUuXG4gICAqXG4gICAqL1xuICBASW5wdXQoJ3AtdXJsLW5ldy1wYXNzd29yZCcpIHVybE5ld1Bhc3N3b3JkPzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIFVSTCBwYXJhIGEgYcOnw6NvIGRvIGJvdMOjbyBgRW50cmFyIG5vIHNpc3RlbWFgIGRhIG1vZGFsIGRlIGNvbmZpcm1hw6fDo28gcXVlIGFwYXJlY2UgYXDDs3Mgc2FsdmFyIGEgc2VuaGEgb3Ugc2UgY2hhbWFkYSBwZWxvIG3DqXRvZG9cbiAgICogYG9wZW5Db25maXJtYXRpb25gLlxuICAgKlxuICAgKiBAZGVmYXVsdCBgL2BcbiAgICovXG4gIEBJbnB1dCgncC11cmwtaG9tZScpIHNldCB1cmxIb21lKHZhbHVlOiBzdHJpbmcpIHtcbiAgICB0aGlzLl91cmxIb21lID0gdmFsdWU7XG4gICAgdGhpcy5tb2RhbEFjdGlvbi5hY3Rpb24gPSB0aGlzLm5hdmlnYXRlVG8uYmluZCh0aGlzLCB0aGlzLnVybEhvbWUpO1xuICB9XG4gIGdldCB1cmxIb21lKCkge1xuICAgIHJldHVybiB0aGlzLl91cmxIb21lO1xuICB9XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogRnVuw6fDo28gZXhlY3V0YWRhIGFvIHN1Ym1ldGVyIG8gZm9ybSBwZWxvIGJvdMOjbyBzYWx2YXIuXG4gICAqXG4gICAqIENhc28gZGVmaW5pZGEgZXNzYSBmdW7Dp8OjbywgYSBtb2RhbCBkZSBjb25maXJtYcOnw6NvIG7Do28gYXBhcmVjZSwgbWFzIHBvZGUgc2VyIGNoYW1hZGEgcGVsb1xuICAgKiBtw6l0b2RvIGBvcGVuQ29uZmlybWF0aW9uYC4gRXhlbXBsbzpcbiAgICpcbiAgICogYGBgXG4gICAqIEBWaWV3Q2hpbGQoUG9QYWdlQ2hhbmdlUGFzc3dvcmRDb21wb25lbnQpIGNoYW5nZVBhc3N3b3JkOiBQb1BhZ2VDaGFuZ2VQYXNzd29yZENvbXBvbmVudDtcbiAgICpcbiAgICogb25TdWJtaXQoKSB7XG4gICAqICB0aGlzLmNoYW5nZVBhc3N3b3JkLm9wZW5Db25maXJtYXRpb24oKTtcbiAgICogfVxuICAgKlxuICAgKiBgYGBcbiAgICogPiBFc3RhIHByb3ByaWVkYWRlIHNlcsOhIGlnbm9yYWRhIHNlIGZvciBkZWZpbmlkbyB2YWxvciBwYXJhIGEgcHJvcHJpZWRhZGUgYHAtdXJsLW5ldy1wYXNzd29yZGAuXG4gICAqL1xuICBAT3V0cHV0KCdwLXN1Ym1pdCcpIHN1Ym1pdDogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgYWJzdHJhY3QgbmF2aWdhdGVUbyh1cmw6IHN0cmluZyk6IHZvaWQ7XG5cbn1cbiJdfQ==