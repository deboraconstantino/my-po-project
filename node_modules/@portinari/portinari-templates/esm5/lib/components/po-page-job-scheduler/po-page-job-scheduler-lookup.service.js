/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { PoPageJobSchedulerService } from './po-page-job-scheduler.service';
var PoPageJobSchedulerLookupService = /** @class */ (function () {
    function PoPageJobSchedulerLookupService(poPageJobSchedulerService) {
        this.poPageJobSchedulerService = poPageJobSchedulerService;
    }
    /**
     * @param {?} search
     * @param {?} page
     * @param {?} pageSize
     * @return {?}
     */
    PoPageJobSchedulerLookupService.prototype.getFilteredData = /**
     * @param {?} search
     * @param {?} page
     * @param {?} pageSize
     * @return {?}
     */
    function (search, page, pageSize) {
        /** @type {?} */
        var params = { page: page, pageSize: pageSize, search: search };
        return this.poPageJobSchedulerService.getProcesses(params);
    };
    /**
     * @param {?} processId
     * @return {?}
     */
    PoPageJobSchedulerLookupService.prototype.getObjectByValue = /**
     * @param {?} processId
     * @return {?}
     */
    function (processId) {
        return this.poPageJobSchedulerService.getProcess(processId);
    };
    PoPageJobSchedulerLookupService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    PoPageJobSchedulerLookupService.ctorParameters = function () { return [
        { type: PoPageJobSchedulerService }
    ]; };
    return PoPageJobSchedulerLookupService;
}());
export { PoPageJobSchedulerLookupService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoPageJobSchedulerLookupService.prototype.poPageJobSchedulerService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tcGFnZS1qb2Itc2NoZWR1bGVyLWxvb2t1cC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvcnRpbmFyaS9wb3J0aW5hcmktdGVtcGxhdGVzLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tcGFnZS1qb2Itc2NoZWR1bGVyL3BvLXBhZ2Utam9iLXNjaGVkdWxlci1sb29rdXAuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQU0zQyxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUU1RTtJQUdFLHlDQUFvQix5QkFBb0Q7UUFBcEQsOEJBQXlCLEdBQXpCLHlCQUF5QixDQUEyQjtJQUFJLENBQUM7Ozs7Ozs7SUFFN0UseURBQWU7Ozs7OztJQUFmLFVBQWdCLE1BQWMsRUFBRSxJQUFZLEVBQUUsUUFBZ0I7O1lBQ3RELE1BQU0sR0FBRyxFQUFFLElBQUksTUFBQSxFQUFFLFFBQVEsVUFBQSxFQUFFLE1BQU0sUUFBQSxFQUFFO1FBRXpDLE9BQU8sSUFBSSxDQUFDLHlCQUF5QixDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUM3RCxDQUFDOzs7OztJQUVELDBEQUFnQjs7OztJQUFoQixVQUFpQixTQUFpQjtRQUNoQyxPQUFPLElBQUksQ0FBQyx5QkFBeUIsQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDOUQsQ0FBQzs7Z0JBYkYsVUFBVTs7OztnQkFGRix5QkFBeUI7O0lBaUJsQyxzQ0FBQztDQUFBLEFBZkQsSUFlQztTQWRZLCtCQUErQjs7Ozs7O0lBRTlCLG9FQUE0RCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuXG5pbXBvcnQgeyBQb0xvb2t1cEZpbHRlciB9IGZyb20gJ0Bwb3J0aW5hcmkvcG9ydGluYXJpLXVpJztcblxuaW1wb3J0IHsgUG9QYWdlSm9iU2NoZWR1bGVyU2VydmljZSB9IGZyb20gJy4vcG8tcGFnZS1qb2Itc2NoZWR1bGVyLnNlcnZpY2UnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgUG9QYWdlSm9iU2NoZWR1bGVyTG9va3VwU2VydmljZSBpbXBsZW1lbnRzIFBvTG9va3VwRmlsdGVyIHtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHBvUGFnZUpvYlNjaGVkdWxlclNlcnZpY2U6IFBvUGFnZUpvYlNjaGVkdWxlclNlcnZpY2UpIHsgfVxuXG4gIGdldEZpbHRlcmVkRGF0YShzZWFyY2g6IHN0cmluZywgcGFnZTogbnVtYmVyLCBwYWdlU2l6ZTogbnVtYmVyKTogT2JzZXJ2YWJsZTxhbnk+IHtcbiAgICBjb25zdCBwYXJhbXMgPSB7IHBhZ2UsIHBhZ2VTaXplLCBzZWFyY2ggfTtcblxuICAgIHJldHVybiB0aGlzLnBvUGFnZUpvYlNjaGVkdWxlclNlcnZpY2UuZ2V0UHJvY2Vzc2VzKHBhcmFtcyk7XG4gIH1cblxuICBnZXRPYmplY3RCeVZhbHVlKHByb2Nlc3NJZDogc3RyaW5nKTogT2JzZXJ2YWJsZTxhbnk+IHtcbiAgICByZXR1cm4gdGhpcy5wb1BhZ2VKb2JTY2hlZHVsZXJTZXJ2aWNlLmdldFByb2Nlc3MocHJvY2Vzc0lkKTtcbiAgfVxuXG59XG4iXX0=