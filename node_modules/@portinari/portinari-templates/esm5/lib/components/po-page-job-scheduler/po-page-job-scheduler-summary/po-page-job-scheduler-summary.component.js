/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { DatePipe } from '@angular/common';
import { PoInfoOrientation } from '@portinari/portinari-ui';
var PoPageJobSchedulerSummaryComponent = /** @class */ (function () {
    function PoPageJobSchedulerSummaryComponent(datePipe) {
        this.datePipe = datePipe;
        this.executionValue = '';
        this.firstExecutionValue = '';
        this.infoOrientation = PoInfoOrientation.Horizontal;
        this.periodicityValue = '';
        this.recurrentValue = '';
        this.literals = (/** @type {?} */ ({}));
        this.parameters = [];
        this.value = (/** @type {?} */ ({}));
    }
    /**
     * @return {?}
     */
    PoPageJobSchedulerSummaryComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _a = this.value, periodicity = _a.periodicity, hour = _a.hour, dayOfMonth = _a.dayOfMonth, daysOfWeek = _a.daysOfWeek, recurrent = _a.recurrent, firstExecution = _a.firstExecution, firstExecutionHour = _a.firstExecutionHour;
        this.periodicityValue = this.getPeriodicityLabel(periodicity);
        this.executionValue = this.getExecutionValue(periodicity, hour, daysOfWeek, dayOfMonth);
        this.firstExecutionValue = this.getFirstExecutionLabel(firstExecution, firstExecutionHour);
        this.recurrentValue = this.getRecurrentValue(recurrent);
    };
    /**
     * @private
     * @param {?} periodicity
     * @param {?=} hour
     * @param {?=} daysOfWeek
     * @param {?=} dayOfMonth
     * @return {?}
     */
    PoPageJobSchedulerSummaryComponent.prototype.getExecutionValue = /**
     * @private
     * @param {?} periodicity
     * @param {?=} hour
     * @param {?=} daysOfWeek
     * @param {?=} dayOfMonth
     * @return {?}
     */
    function (periodicity, hour, daysOfWeek, dayOfMonth) {
        switch (periodicity) {
            case 'daily':
                return this.getHourLabel(hour);
            case 'monthly':
                return this.getMonthlyLabelExecution(dayOfMonth, hour);
            case 'weekly':
                return this.getWeeklyLabelExecution(daysOfWeek, hour);
            default:
                return this.literals.notReported;
        }
    };
    /**
     * @private
     * @param {?} firstExecution
     * @param {?=} firstExecutionHour
     * @return {?}
     */
    PoPageJobSchedulerSummaryComponent.prototype.getFirstExecutionLabel = /**
     * @private
     * @param {?} firstExecution
     * @param {?=} firstExecutionHour
     * @return {?}
     */
    function (firstExecution, firstExecutionHour) {
        if (firstExecution) {
            /** @type {?} */
            var date = this.datePipe.transform(firstExecution, 'dd/MM/yyyy', '-0200');
            return date + " " + this.getHourLabel(firstExecutionHour);
        }
        else {
            return this.literals.notReported;
        }
    };
    /**
     * @private
     * @param {?} hour
     * @return {?}
     */
    PoPageJobSchedulerSummaryComponent.prototype.getHourLabel = /**
     * @private
     * @param {?} hour
     * @return {?}
     */
    function (hour) {
        return this.literals.at + " " + (hour || '00:00') + "h";
    };
    /**
     * @private
     * @param {?} dayOfMonth
     * @param {?} hour
     * @return {?}
     */
    PoPageJobSchedulerSummaryComponent.prototype.getMonthlyLabelExecution = /**
     * @private
     * @param {?} dayOfMonth
     * @param {?} hour
     * @return {?}
     */
    function (dayOfMonth, hour) {
        /** @type {?} */
        var hourLabel = this.getHourLabel(hour);
        return this.literals.day + " " + dayOfMonth + " " + hourLabel;
    };
    /**
     * @private
     * @param {?} periodicity
     * @return {?}
     */
    PoPageJobSchedulerSummaryComponent.prototype.getPeriodicityLabel = /**
     * @private
     * @param {?} periodicity
     * @return {?}
     */
    function (periodicity) {
        switch (periodicity) {
            case 'daily':
                return this.literals.daily;
            case 'monthly':
                return this.literals.monthly;
            case 'weekly':
                return this.literals.weekly;
            default:
                return this.literals.single;
        }
    };
    /**
     * @private
     * @param {?} recurrent
     * @return {?}
     */
    PoPageJobSchedulerSummaryComponent.prototype.getRecurrentValue = /**
     * @private
     * @param {?} recurrent
     * @return {?}
     */
    function (recurrent) {
        return recurrent ? this.literals.yes : this.literals.no;
    };
    /**
     * @private
     * @return {?}
     */
    PoPageJobSchedulerSummaryComponent.prototype.getSorterWeekDays = /**
     * @private
     * @return {?}
     */
    function () {
        return {
            'sunday': 0,
            'monday': 1,
            'tuesday': 2,
            'wednesday': 3,
            'thursday': 4,
            'friday': 5,
            'saturday': 6
        };
    };
    /**
     * @private
     * @param {?} day
     * @return {?}
     */
    PoPageJobSchedulerSummaryComponent.prototype.getTranslateWeekDay = /**
     * @private
     * @param {?} day
     * @return {?}
     */
    function (day) {
        /** @type {?} */
        var days = {
            Sunday: this.literals.sunday,
            Monday: this.literals.monday,
            Tuesday: this.literals.tuesday,
            Wednesday: this.literals.wednesday,
            Thursday: this.literals.thursday,
            Friday: this.literals.friday,
            Saturday: this.literals.saturday,
        };
        return days[day] || '';
    };
    /**
     * @private
     * @param {?=} days
     * @return {?}
     */
    PoPageJobSchedulerSummaryComponent.prototype.getWeekDaysLabel = /**
     * @private
     * @param {?=} days
     * @return {?}
     */
    function (days) {
        var _this = this;
        if (days === void 0) { days = []; }
        /** @type {?} */
        var weekDaysSorted = this.sortWeekDays(days);
        return weekDaysSorted.map((/**
         * @param {?} day
         * @return {?}
         */
        function (day) { return _this.getTranslateWeekDay(day); })).join(', ');
    };
    /**
     * @private
     * @param {?} daysOfWeek
     * @param {?} hour
     * @return {?}
     */
    PoPageJobSchedulerSummaryComponent.prototype.getWeeklyLabelExecution = /**
     * @private
     * @param {?} daysOfWeek
     * @param {?} hour
     * @return {?}
     */
    function (daysOfWeek, hour) {
        if (daysOfWeek && Array.isArray(daysOfWeek)) {
            return this.getWeekDaysLabel(daysOfWeek) + " " + this.getHourLabel(hour);
        }
        else {
            return this.literals.notReported;
        }
    };
    /**
     * @private
     * @param {?=} days
     * @return {?}
     */
    PoPageJobSchedulerSummaryComponent.prototype.sortWeekDays = /**
     * @private
     * @param {?=} days
     * @return {?}
     */
    function (days) {
        if (days === void 0) { days = []; }
        /** @type {?} */
        var sorterWeekDays = this.getSorterWeekDays();
        return days.sort((/**
         * @param {?} a
         * @param {?} b
         * @return {?}
         */
        function (a, b) {
            /** @type {?} */
            var currDay = a.toLowerCase();
            /** @type {?} */
            var nextDay = b.toLowerCase();
            return sorterWeekDays[currDay] > sorterWeekDays[nextDay] ? 1 : -1;
        }));
    };
    PoPageJobSchedulerSummaryComponent.decorators = [
        { type: Component, args: [{
                    selector: 'po-page-job-scheduler-summary',
                    template: "<div class=\"po-md-12\">\n  <po-info\n    [p-label]=\"literals.process\"\n    [p-orientation]=\"infoOrientation\"\n    [p-value]=\"value.processID\">\n  </po-info>\n\n  <po-info\n    [p-label]=\"literals.periodicity\"\n    [p-orientation]=\"infoOrientation\"\n    [p-value]=\"periodicityValue\">\n  </po-info>\n\n  <po-info *ngIf=\"value.periodicity !== 'single'\"\n    [p-label]=\"literals.execution\"\n    [p-orientation]=\"infoOrientation\"\n    [p-value]=\"executionValue\">\n  </po-info>\n\n  <po-info\n    [p-label]=\"literals.recurrent\"\n    [p-orientation]=\"infoOrientation\"\n    [p-value]=\"recurrentValue\">\n  </po-info>\n\n  <po-info\n    [p-label]=\"literals.firstExecution\"\n    [p-orientation]=\"infoOrientation\"\n    [p-value]=\"firstExecutionValue\">\n  </po-info>\n</div>\n\n<po-widget *ngIf=\"parameters && parameters.length\"\n  class=\"po-pt-1 po-pb-1 po-md-12\"\n  [p-title]=\"literals.parameters\">\n\n  <po-dynamic-view\n    [p-fields]=\"parameters\"\n    [p-value]=\"value.executionParameter\">\n  </po-dynamic-view>\n\n</po-widget>\n\n"
                }] }
    ];
    /** @nocollapse */
    PoPageJobSchedulerSummaryComponent.ctorParameters = function () { return [
        { type: DatePipe }
    ]; };
    PoPageJobSchedulerSummaryComponent.propDecorators = {
        literals: [{ type: Input, args: ['p-literals',] }],
        parameters: [{ type: Input, args: ['p-parameters',] }],
        value: [{ type: Input, args: ['p-value',] }]
    };
    return PoPageJobSchedulerSummaryComponent;
}());
export { PoPageJobSchedulerSummaryComponent };
if (false) {
    /** @type {?} */
    PoPageJobSchedulerSummaryComponent.prototype.executionValue;
    /** @type {?} */
    PoPageJobSchedulerSummaryComponent.prototype.firstExecutionValue;
    /** @type {?} */
    PoPageJobSchedulerSummaryComponent.prototype.infoOrientation;
    /** @type {?} */
    PoPageJobSchedulerSummaryComponent.prototype.periodicityValue;
    /** @type {?} */
    PoPageJobSchedulerSummaryComponent.prototype.recurrentValue;
    /** @type {?} */
    PoPageJobSchedulerSummaryComponent.prototype.literals;
    /** @type {?} */
    PoPageJobSchedulerSummaryComponent.prototype.parameters;
    /** @type {?} */
    PoPageJobSchedulerSummaryComponent.prototype.value;
    /**
     * @type {?}
     * @private
     */
    PoPageJobSchedulerSummaryComponent.prototype.datePipe;
}
//# sourceMappingURL=data:application/json;base64,