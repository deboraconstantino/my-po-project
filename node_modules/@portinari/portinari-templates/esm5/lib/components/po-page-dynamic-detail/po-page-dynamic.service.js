/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { HttpClient, HttpHeaders } from '@angular/common/http';
import { map } from 'rxjs/operators';
var PoPageDynamicService = /** @class */ (function () {
    function PoPageDynamicService(http) {
        this.http = http;
        this.endpoint = '/';
        this.headers = new HttpHeaders({
            'X-PORTINARI-SCREEN-LOCK': 'true'
        });
    }
    /**
     * @param {?=} config
     * @return {?}
     */
    PoPageDynamicService.prototype.configServiceApi = /**
     * @param {?=} config
     * @return {?}
     */
    function (config) {
        if (config === void 0) { config = {}; }
        this.endpoint = config.endpoint;
    };
    /**
     * @param {?=} type
     * @return {?}
     */
    PoPageDynamicService.prototype.getMetadata = /**
     * @param {?=} type
     * @return {?}
     */
    function (type) {
        if (type === void 0) { type = 'list'; }
        /** @type {?} */
        var key = this.endpoint + "-" + type + "-metadata";
        /** @type {?} */
        var cache = JSON.parse(localStorage.getItem(key)) || {};
        /** @type {?} */
        var url = this.endpoint + "/metadata?type=" + type + "&version=" + (cache.version || '');
        return this.http.get(url).pipe(map((/**
         * @param {?} response
         * @return {?}
         */
        function (response) {
            if (response.version === cache.version) {
                return cache;
            }
            localStorage.setItem(key, JSON.stringify(response));
            return tslib_1.__assign({}, cache, response);
        })));
    };
    // Deleta um único recurso
    // Deleta um único recurso
    /**
     * @param {?} id
     * @return {?}
     */
    PoPageDynamicService.prototype.deleteResource = 
    // Deleta um único recurso
    /**
     * @param {?} id
     * @return {?}
     */
    function (id) {
        return this.http.delete(this.endpoint + "/" + id, { headers: this.headers });
    };
    // Deleta recursos em lote
    // Deleta recursos em lote
    /**
     * @param {?} ids
     * @return {?}
     */
    PoPageDynamicService.prototype.deleteResources = 
    // Deleta recursos em lote
    /**
     * @param {?} ids
     * @return {?}
     */
    function (ids) {
        return this.http.request('delete', "" + this.endpoint, { headers: this.headers, body: ids });
    };
    // Busca uma lista de recursos
    // Busca uma lista de recursos
    /**
     * @param {?=} params
     * @return {?}
     */
    PoPageDynamicService.prototype.getResources = 
    // Busca uma lista de recursos
    /**
     * @param {?=} params
     * @return {?}
     */
    function (params) {
        if (params === void 0) { params = {}; }
        return this.http.get(this.endpoint, { headers: this.headers, params: params });
    };
    // Busca um único recurso
    // Busca um único recurso
    /**
     * @param {?} id
     * @return {?}
     */
    PoPageDynamicService.prototype.getResource = 
    // Busca um único recurso
    /**
     * @param {?} id
     * @return {?}
     */
    function (id) {
        return this.http.get(this.endpoint + "/" + id, { headers: this.headers });
    };
    // Cria um recurso
    // Cria um recurso
    /**
     * @param {?} resource
     * @return {?}
     */
    PoPageDynamicService.prototype.createResource = 
    // Cria um recurso
    /**
     * @param {?} resource
     * @return {?}
     */
    function (resource) {
        return this.http.post("" + this.endpoint, resource, { headers: this.headers });
    };
    // Atualiza um recurso
    // Atualiza um recurso
    /**
     * @param {?} id
     * @param {?} resource
     * @return {?}
     */
    PoPageDynamicService.prototype.updateResource = 
    // Atualiza um recurso
    /**
     * @param {?} id
     * @param {?} resource
     * @return {?}
     */
    function (id, resource) {
        return this.http.put(this.endpoint + "/" + id, resource, { headers: this.headers });
    };
    PoPageDynamicService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    PoPageDynamicService.ctorParameters = function () { return [
        { type: HttpClient }
    ]; };
    return PoPageDynamicService;
}());
export { PoPageDynamicService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoPageDynamicService.prototype.endpoint;
    /** @type {?} */
    PoPageDynamicService.prototype.headers;
    /**
     * @type {?}
     * @private
     */
    PoPageDynamicService.prototype.http;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tcGFnZS1keW5hbWljLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcG9ydGluYXJpL3BvcnRpbmFyaS10ZW1wbGF0ZXMvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby1wYWdlLWR5bmFtaWMtZGV0YWlsL3BvLXBhZ2UtZHluYW1pYy5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBRy9ELE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUVyQztJQVNFLDhCQUFvQixJQUFnQjtRQUFoQixTQUFJLEdBQUosSUFBSSxDQUFZO1FBTjVCLGFBQVEsR0FBRyxHQUFHLENBQUM7UUFFZCxZQUFPLEdBQWdCLElBQUksV0FBVyxDQUFDO1lBQzlDLHlCQUF5QixFQUFFLE1BQU07U0FDbEMsQ0FBQyxDQUFDO0lBRXFDLENBQUM7Ozs7O0lBRXpDLCtDQUFnQjs7OztJQUFoQixVQUFpQixNQUFrQztRQUFsQyx1QkFBQSxFQUFBLFdBQWtDO1FBQ2pELElBQUksQ0FBQyxRQUFRLEdBQUcsTUFBTSxDQUFDLFFBQVEsQ0FBQztJQUNsQyxDQUFDOzs7OztJQUVELDBDQUFXOzs7O0lBQVgsVUFBWSxJQUFxQjtRQUFyQixxQkFBQSxFQUFBLGFBQXFCOztZQUN6QixHQUFHLEdBQU0sSUFBSSxDQUFDLFFBQVEsU0FBSSxJQUFJLGNBQVc7O1lBQ3pDLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxFQUFFOztZQUVuRCxHQUFHLEdBQU0sSUFBSSxDQUFDLFFBQVEsdUJBQWtCLElBQUksa0JBQVksS0FBSyxDQUFDLE9BQU8sSUFBSSxFQUFFLENBQUU7UUFFbkYsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRzs7OztRQUFDLFVBQUMsUUFBYTtZQUMvQyxJQUFJLFFBQVEsQ0FBQyxPQUFPLEtBQUssS0FBSyxDQUFDLE9BQU8sRUFBRTtnQkFDdEMsT0FBTyxLQUFLLENBQUM7YUFDZDtZQUVELFlBQVksQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUVwRCw0QkFBYSxLQUFLLEVBQUssUUFBUSxFQUFHO1FBQ3BDLENBQUMsRUFBQyxDQUFDLENBQUM7SUFDTixDQUFDO0lBRUQsMEJBQTBCOzs7Ozs7SUFDMUIsNkNBQWM7Ozs7OztJQUFkLFVBQWUsRUFBRTtRQUNmLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUksSUFBSSxDQUFDLFFBQVEsU0FBSSxFQUFJLEVBQUUsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUM7SUFDL0UsQ0FBQztJQUVELDBCQUEwQjs7Ozs7O0lBQzFCLDhDQUFlOzs7Ozs7SUFBZixVQUFnQixHQUFlO1FBQzdCLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLEtBQUcsSUFBSSxDQUFDLFFBQVUsRUFBRSxFQUFFLE9BQU8sRUFBRSxJQUFJLENBQUMsT0FBTyxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsQ0FBRSxDQUFDO0lBQ2hHLENBQUM7SUFFRCw4QkFBOEI7Ozs7OztJQUM5QiwyQ0FBWTs7Ozs7O0lBQVosVUFBYSxNQUFlO1FBQWYsdUJBQUEsRUFBQSxXQUFlO1FBQzFCLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxFQUFFLE9BQU8sRUFBRSxJQUFJLENBQUMsT0FBTyxFQUFFLE1BQU0sUUFBQSxFQUFFLENBQUMsQ0FBQztJQUN6RSxDQUFDO0lBRUQseUJBQXlCOzs7Ozs7SUFDekIsMENBQVc7Ozs7OztJQUFYLFVBQVksRUFBRTtRQUNaLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUksSUFBSSxDQUFDLFFBQVEsU0FBSSxFQUFJLEVBQUUsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUM7SUFDNUUsQ0FBQztJQUVELGtCQUFrQjs7Ozs7O0lBQ2xCLDZDQUFjOzs7Ozs7SUFBZCxVQUFlLFFBQVE7UUFDckIsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFHLElBQUksQ0FBQyxRQUFVLEVBQUUsUUFBUSxFQUFFLEVBQUUsT0FBTyxFQUFFLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDO0lBQ2pGLENBQUM7SUFFRCxzQkFBc0I7Ozs7Ozs7SUFDdEIsNkNBQWM7Ozs7Ozs7SUFBZCxVQUFlLEVBQUUsRUFBRSxRQUFRO1FBQ3pCLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUksSUFBSSxDQUFDLFFBQVEsU0FBSSxFQUFJLEVBQUUsUUFBUSxFQUFFLEVBQUUsT0FBTyxFQUFFLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDO0lBQ3RGLENBQUM7O2dCQTVERixVQUFVOzs7O2dCQUxGLFVBQVU7O0lBa0VuQiwyQkFBQztDQUFBLEFBN0RELElBNkRDO1NBNURZLG9CQUFvQjs7Ozs7O0lBRS9CLHdDQUF1Qjs7SUFFdkIsdUNBRUc7Ozs7O0lBRVMsb0NBQXdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSHR0cENsaWVudCwgSHR0cEhlYWRlcnMgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5cbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IG1hcCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFBvUGFnZUR5bmFtaWNTZXJ2aWNlIHtcblxuICBwcml2YXRlIGVuZHBvaW50ID0gJy8nO1xuXG4gIHJlYWRvbmx5IGhlYWRlcnM6IEh0dHBIZWFkZXJzID0gbmV3IEh0dHBIZWFkZXJzKHtcbiAgICAnWC1QT1JUSU5BUkktU0NSRUVOLUxPQ0snOiAndHJ1ZSdcbiAgfSk7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBodHRwOiBIdHRwQ2xpZW50KSB7IH1cblxuICBjb25maWdTZXJ2aWNlQXBpKGNvbmZpZzogeyBlbmRwb2ludD86IHN0cmluZyB9ID0ge30pIHtcbiAgICB0aGlzLmVuZHBvaW50ID0gY29uZmlnLmVuZHBvaW50O1xuICB9XG5cbiAgZ2V0TWV0YWRhdGEodHlwZTogc3RyaW5nID0gJ2xpc3QnKTogT2JzZXJ2YWJsZTxhbnk+IHtcbiAgICBjb25zdCBrZXkgPSBgJHt0aGlzLmVuZHBvaW50fS0ke3R5cGV9LW1ldGFkYXRhYDtcbiAgICBjb25zdCBjYWNoZSA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oa2V5KSkgfHwge307XG5cbiAgICBjb25zdCB1cmwgPSBgJHt0aGlzLmVuZHBvaW50fS9tZXRhZGF0YT90eXBlPSR7dHlwZX0mdmVyc2lvbj0ke2NhY2hlLnZlcnNpb24gfHwgJyd9YDtcblxuICAgIHJldHVybiB0aGlzLmh0dHAuZ2V0KHVybCkucGlwZShtYXAoKHJlc3BvbnNlOiBhbnkpID0+IHtcbiAgICAgIGlmIChyZXNwb25zZS52ZXJzaW9uID09PSBjYWNoZS52ZXJzaW9uKSB7XG4gICAgICAgIHJldHVybiBjYWNoZTtcbiAgICAgIH1cblxuICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oa2V5LCBKU09OLnN0cmluZ2lmeShyZXNwb25zZSkpO1xuXG4gICAgICByZXR1cm4gIHsgLi4uY2FjaGUsIC4uLnJlc3BvbnNlIH07XG4gICAgfSkpO1xuICB9XG5cbiAgLy8gRGVsZXRhIHVtIMO6bmljbyByZWN1cnNvXG4gIGRlbGV0ZVJlc291cmNlKGlkKTogT2JzZXJ2YWJsZTxhbnk+IHtcbiAgICByZXR1cm4gdGhpcy5odHRwLmRlbGV0ZShgJHt0aGlzLmVuZHBvaW50fS8ke2lkfWAsIHsgaGVhZGVyczogdGhpcy5oZWFkZXJzIH0pO1xuICB9XG5cbiAgLy8gRGVsZXRhIHJlY3Vyc29zIGVtIGxvdGVcbiAgZGVsZXRlUmVzb3VyY2VzKGlkczogQXJyYXk8YW55Pik6IE9ic2VydmFibGU8YW55PiB7XG4gICAgcmV0dXJuIHRoaXMuaHR0cC5yZXF1ZXN0KCdkZWxldGUnLCBgJHt0aGlzLmVuZHBvaW50fWAsIHsgaGVhZGVyczogdGhpcy5oZWFkZXJzLCBib2R5OiBpZHMgfSApO1xuICB9XG5cbiAgLy8gQnVzY2EgdW1hIGxpc3RhIGRlIHJlY3Vyc29zXG4gIGdldFJlc291cmNlcyhwYXJhbXM6IHt9ID0ge30pOiBPYnNlcnZhYmxlPGFueT4ge1xuICAgIHJldHVybiB0aGlzLmh0dHAuZ2V0KHRoaXMuZW5kcG9pbnQsIHsgaGVhZGVyczogdGhpcy5oZWFkZXJzLCBwYXJhbXMgfSk7XG4gIH1cblxuICAvLyBCdXNjYSB1bSDDum5pY28gcmVjdXJzb1xuICBnZXRSZXNvdXJjZShpZCk6IE9ic2VydmFibGU8YW55PiB7XG4gICAgcmV0dXJuIHRoaXMuaHR0cC5nZXQoYCR7dGhpcy5lbmRwb2ludH0vJHtpZH1gLCB7IGhlYWRlcnM6IHRoaXMuaGVhZGVycyB9KTtcbiAgfVxuXG4gIC8vIENyaWEgdW0gcmVjdXJzb1xuICBjcmVhdGVSZXNvdXJjZShyZXNvdXJjZSk6IE9ic2VydmFibGU8YW55PiB7XG4gICAgcmV0dXJuIHRoaXMuaHR0cC5wb3N0KGAke3RoaXMuZW5kcG9pbnR9YCwgcmVzb3VyY2UsIHsgaGVhZGVyczogdGhpcy5oZWFkZXJzIH0pO1xuICB9XG5cbiAgLy8gQXR1YWxpemEgdW0gcmVjdXJzb1xuICB1cGRhdGVSZXNvdXJjZShpZCwgcmVzb3VyY2UpOiBPYnNlcnZhYmxlPGFueT4ge1xuICAgIHJldHVybiB0aGlzLmh0dHAucHV0KGAke3RoaXMuZW5kcG9pbnR9LyR7aWR9YCwgcmVzb3VyY2UsIHsgaGVhZGVyczogdGhpcy5oZWFkZXJzIH0pO1xuICB9XG59XG4iXX0=