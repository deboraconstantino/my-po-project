/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ActivatedRoute, Router } from '@angular/router';
import { Component, Input } from '@angular/core';
import { PoDialogService, PoNotificationService, PoTableColumnSortType } from '@portinari/portinari-ui';
import * as util from '../../utils/util';
import { PoPageDynamicDetailComponent } from '../po-page-dynamic-detail/po-page-dynamic-detail.component';
// import { PoPageDynamicEditComponent } from '../po-page-dynamic-edit/po-page-dynamic-edit.component';
import { PoPageDynamicListBaseComponent } from './po-page-dynamic-list-base.component';
import { PoPageDynamicService } from './po-page-dynamic.service';
/** @type {?} */
export var poPageDynamicTableLiteralsDefault = {
    en: {
        pageAction: 'New',
        pageActionRemoveAll: 'Delete',
        tableActionView: 'View',
        tableActionEdit: 'Edit',
        tableActionDuplicate: 'Duplicate',
        tableActionDelete: 'Delete',
        confirmRemoveTitle: 'Confirm delete',
        confirmRemoveMessage: 'Are you sure you want to delete this record? You can not undo this action.',
        confirmRemoveAllTitle: 'Confirm batch deletion',
        confirmRemoveAllMessage: 'Are you sure you want to delete all these records? You can not undo this action.',
        loadDataErrorNotification: 'Service not found',
        removeSuccessNotification: 'Item deleted successfully',
        removeAllSuccessNotification: 'Items deleted successfully'
    },
    es: {
        pageAction: 'Nuevo',
        pageActionRemoveAll: 'Borrar',
        tableActionView: 'Visualizar',
        tableActionEdit: 'Editar',
        tableActionDuplicate: 'Duplicar',
        tableActionDelete: 'Borrar',
        confirmRemoveTitle: 'Confirmar la exclusión',
        confirmRemoveMessage: '¿Está seguro de que desea eliminar este registro? No puede deshacer esta acción.',
        confirmRemoveAllTitle: 'Confirmar la exclusión por lotes',
        confirmRemoveAllMessage: '¿Está seguro de que desea eliminar todos estos registros? No puede deshacer esta acción.',
        loadDataErrorNotification: 'Servicio no informado.',
        removeSuccessNotification: 'Elemento eliminado con éxito',
        removeAllSuccessNotification: 'Elementos eliminados con éxito'
    },
    pt: {
        pageAction: 'Novo',
        pageActionRemoveAll: 'Excluir',
        tableActionView: 'Visualizar',
        tableActionEdit: 'Editar',
        tableActionDuplicate: 'Duplicar',
        tableActionDelete: 'Excluir',
        confirmRemoveTitle: 'Confirmar exclusão',
        confirmRemoveMessage: 'Tem certeza de que deseja excluir esse registro? Você não poderá desfazer essa ação.',
        confirmRemoveAllTitle: 'Confirmar exclusão em lote',
        confirmRemoveAllMessage: 'Tem certeza de que deseja excluir todos esses registros? Você não poderá desfazer essa ação.',
        loadDataErrorNotification: 'Serviço não informado.',
        removeSuccessNotification: 'Item excluido com sucesso',
        removeAllSuccessNotification: 'Items excluidos com sucesso'
    }
};
/**
 * \@docsExtends PoPageDynamicListBaseComponent
 *
 * \@description
 *
 * O `po-page-dynamic-table` é uma página que exibe uma lista de registros em uma tabela baseado em uma lista de fields,
 * o mesmo também suporta metadados conforme especificado na documentação.
 *
 * \@example
 *
 * <example name="po-page-dynamic-table-basic" title="Portinari Page Dynamic Table Basic">
 *  <file name="sample-po-page-dynamic-table-basic/sample-po-page-dynamic-table-basic.component.html"> </file>
 *  <file name="sample-po-page-dynamic-table-basic/sample-po-page-dynamic-table-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-page-dynamic-table-users" title="Portinari Page Dynamic Table - Users">
 *  <file name="sample-po-page-dynamic-table-users/sample-po-page-dynamic-table-users.component.html"> </file>
 *  <file name="sample-po-page-dynamic-table-users/sample-po-page-dynamic-table-users.component.ts"> </file>
 * </example>
 */
var PoPageDynamicTableComponent = /** @class */ (function (_super) {
    tslib_1.__extends(PoPageDynamicTableComponent, _super);
    function PoPageDynamicTableComponent(router, activatedRoute, poDialogService, poNotification, poPageDynamicService) {
        var _this = _super.call(this) || this;
        _this.router = router;
        _this.activatedRoute = activatedRoute;
        _this.poDialogService = poDialogService;
        _this.poNotification = poNotification;
        _this.poPageDynamicService = poPageDynamicService;
        _this._actions = {};
        _this._pageActions = [];
        _this._tableActions = [];
        _this.page = 1;
        _this.params = {};
        _this.hasNext = false;
        _this.items = [];
        _this.literals = tslib_1.__assign({}, poPageDynamicTableLiteralsDefault[util.poLocaleDefault], poPageDynamicTableLiteralsDefault[util.browserLanguage()]);
        return _this;
    }
    Object.defineProperty(PoPageDynamicTableComponent.prototype, "actions", {
        get: /**
         * @return {?}
         */
        function () {
            return this._actions;
        },
        /**
         * @optional
         *
         * @description
         *
         * Ações da página e da tabela.
         */
        set: /**
         * \@optional
         *
         * \@description
         *
         * Ações da página e da tabela.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._actions = value && typeof value === 'object' && Object.keys(value).length > 0 ? value : {};
            this.setPageActions(this.actions);
            this.setRemoveAllAction();
            this.setTableActions(this.actions);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    PoPageDynamicTableComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (this.activatedRoute.snapshot.data.serviceApi) {
            this.serviceApi = this.activatedRoute.snapshot.data.serviceApi;
            this.poPageDynamicService.configServiceApi({ endpoint: this.serviceApi });
            this.loadMetadata();
        }
        else {
            this.poPageDynamicService.configServiceApi({ endpoint: this.serviceApi });
            this.loadData();
        }
    };
    /**
     * @param {?} filter
     * @return {?}
     */
    PoPageDynamicTableComponent.prototype.onAdvancedSearch = /**
     * @param {?} filter
     * @return {?}
     */
    function (filter) {
        this.loadData(tslib_1.__assign({ page: 1 }, filter));
        this.params = filter;
    };
    /**
     * @param {?} disclaimers
     * @return {?}
     */
    PoPageDynamicTableComponent.prototype.onChangeDisclaimers = /**
     * @param {?} disclaimers
     * @return {?}
     */
    function (disclaimers) {
        /** @type {?} */
        var filter = {};
        disclaimers.forEach((/**
         * @param {?} disclaimer
         * @return {?}
         */
        function (disclaimer) {
            filter[disclaimer.property] = disclaimer.value;
        }));
        this.onAdvancedSearch(filter);
    };
    /**
     * @param {?} filter
     * @return {?}
     */
    PoPageDynamicTableComponent.prototype.onQuickSearch = /**
     * @param {?} filter
     * @return {?}
     */
    function (filter) {
        this.loadData(filter ? { page: 1, search: filter } : undefined);
        this.params = filter ? { search: filter } : {};
    };
    /**
     * @param {?} sortedColumn
     * @return {?}
     */
    PoPageDynamicTableComponent.prototype.onSort = /**
     * @param {?} sortedColumn
     * @return {?}
     */
    function (sortedColumn) {
        this.sortedColumn = sortedColumn;
    };
    /**
     * @return {?}
     */
    PoPageDynamicTableComponent.prototype.showMore = /**
     * @return {?}
     */
    function () {
        this.loadData(tslib_1.__assign({ page: ++this.page }, this.params));
    };
    Object.defineProperty(PoPageDynamicTableComponent.prototype, "hasActionRemoveAll", {
        get: /**
         * @return {?}
         */
        function () {
            return !!this.actions.removeAll;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageDynamicTableComponent.prototype, "pageActions", {
        get: /**
         * @return {?}
         */
        function () {
            return tslib_1.__spread(this._pageActions);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageDynamicTableComponent.prototype, "tableActions", {
        get: /**
         * @return {?}
         */
        function () {
            return this._tableActions;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @private
     * @param {?} item
     * @return {?}
     */
    PoPageDynamicTableComponent.prototype.confirmRemove = /**
     * @private
     * @param {?} item
     * @return {?}
     */
    function (item) {
        /** @type {?} */
        var confirmOptions = {
            title: this.literals.confirmRemoveTitle,
            message: this.literals.confirmRemoveMessage,
            confirm: this.remove.bind(this, item)
        };
        this.poDialogService.confirm(confirmOptions);
    };
    /**
     * @private
     * @return {?}
     */
    PoPageDynamicTableComponent.prototype.confirmRemoveAll = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var confirmOptions = {
            title: this.literals.confirmRemoveAllTitle,
            message: this.literals.confirmRemoveAllMessage,
            confirm: this.removeAll.bind(this)
        };
        this.poDialogService.confirm(confirmOptions);
    };
    /**
     * @private
     * @param {?} item
     * @return {?}
     */
    PoPageDynamicTableComponent.prototype.formatUniqueKey = /**
     * @private
     * @param {?} item
     * @return {?}
     */
    function (item) {
        /** @type {?} */
        var keys = util.mapObjectByProperties(item, this.keys);
        return util.valuesFromObject(keys).join('|');
    };
    /**
     * @private
     * @param {?=} sortedColumn
     * @return {?}
     */
    PoPageDynamicTableComponent.prototype.getOrderParam = /**
     * @private
     * @param {?=} sortedColumn
     * @return {?}
     */
    function (sortedColumn) {
        if (sortedColumn === void 0) { sortedColumn = { type: undefined }; }
        var column = sortedColumn.column, type = sortedColumn.type;
        if (!column) {
            return {};
        }
        if (type === PoTableColumnSortType.Descending) {
            return { order: "-" + column.property };
        }
        return { order: "" + column.property };
    };
    /**
     * @private
     * @param {?=} params
     * @return {?}
     */
    PoPageDynamicTableComponent.prototype.loadData = /**
     * @private
     * @param {?=} params
     * @return {?}
     */
    function (params) {
        var _this = this;
        if (params === void 0) { params = {}; }
        if (!this.serviceApi) {
            this.poNotification.error(this.literals.loadDataErrorNotification);
            return;
        }
        /** @type {?} */
        var orderParam = this.getOrderParam(this.sortedColumn);
        /** @type {?} */
        var defaultParams = { page: 1, pageSize: 10 };
        /** @type {?} */
        var fullParams = tslib_1.__assign({}, defaultParams, params, orderParam);
        this.poPageDynamicService.getResources(fullParams).toPromise().then((/**
         * @param {?} response
         * @return {?}
         */
        function (response) {
            _this.items = fullParams.page === 1 ? response.items : tslib_1.__spread(_this.items, response.items);
            _this.page = fullParams.page;
            _this.hasNext = response.hasNext;
        }));
    };
    /**
     * @private
     * @return {?}
     */
    PoPageDynamicTableComponent.prototype.loadMetadata = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        this.poPageDynamicService.getMetadata().toPromise().then((/**
         * @param {?} response
         * @return {?}
         */
        function (response) {
            _this.autoRouter = response.autoRouter;
            _this.actions = response.actions || {};
            _this.breadcrumb = response.breadcrumb || { items: [] };
            _this.fields = response.fields || [];
            _this.title = response.title;
            _this.loadData();
        }));
    };
    // @todo Validar rotas na mão pois se existir uma rota '**' o catch do navigation não funciona.
    // @todo Validar rotas na mão pois se existir uma rota '**' o catch do navigation não funciona.
    /**
     * @private
     * @param {?} route
     * @param {?=} forceStopAutoRouter
     * @return {?}
     */
    PoPageDynamicTableComponent.prototype.navigateTo = 
    // @todo Validar rotas na mão pois se existir uma rota '**' o catch do navigation não funciona.
    /**
     * @private
     * @param {?} route
     * @param {?=} forceStopAutoRouter
     * @return {?}
     */
    function (route, forceStopAutoRouter) {
        var _this = this;
        if (forceStopAutoRouter === void 0) { forceStopAutoRouter = false; }
        this.router.navigate([route.url || route.path], { queryParams: route.params })
            .catch((/**
         * @return {?}
         */
        function () {
            if (forceStopAutoRouter || !_this.autoRouter) {
                return;
            }
            _this.router.config.unshift((/** @type {?} */ ({
                path: route.path, component: route.component, data: { serviceApi: _this.serviceApi, autoRouter: true }
            })));
            _this.navigateTo(route, true);
        }));
    };
    /**
     * @private
     * @param {?} path
     * @param {?} item
     * @return {?}
     */
    PoPageDynamicTableComponent.prototype.openDetail = /**
     * @private
     * @param {?} path
     * @param {?} item
     * @return {?}
     */
    function (path, item) {
        /** @type {?} */
        var url = this.resolveUrl(item, path);
        this.navigateTo({ path: path, url: url, component: PoPageDynamicDetailComponent });
    };
    /**
     * @private
     * @param {?} path
     * @param {?} item
     * @return {?}
     */
    PoPageDynamicTableComponent.prototype.openDuplicate = /**
     * @private
     * @param {?} path
     * @param {?} item
     * @return {?}
     */
    function (path, item) {
        /** @type {?} */
        var duplicates = util.mapObjectByProperties(item, this.duplicates);
        this.navigateTo({ path: path, params: { duplicate: JSON.stringify(duplicates) } });
        // this.navigateTo({ path, params: { duplicate: JSON.stringify(duplicates) } , component: PoPageDynamicEditComponent });
    };
    /**
     * @private
     * @param {?} path
     * @param {?} item
     * @return {?}
     */
    PoPageDynamicTableComponent.prototype.openEdit = /**
     * @private
     * @param {?} path
     * @param {?} item
     * @return {?}
     */
    function (path, item) {
        /** @type {?} */
        var url = this.resolveUrl(item, path);
        this.navigateTo({ path: path, url: url });
        // this.navigateTo({ path, url, component: PoPageDynamicEditComponent });
    };
    /**
     * @private
     * @param {?} path
     * @return {?}
     */
    PoPageDynamicTableComponent.prototype.openNew = /**
     * @private
     * @param {?} path
     * @return {?}
     */
    function (path) {
        this.navigateTo({ path: path });
        // this.navigateTo({ path, component: PoPageDynamicEditComponent });
    };
    /**
     * Caso exista mais de um identificador, será concatenado com '|'.
     *
     * Ex: { id: 1, company: 'portinari' }
     *
     * Para o endpoint /resources/:id será executada a url /resources/1|portinari
     */
    /**
     * Caso exista mais de um identificador, será concatenado com '|'.
     *
     * Ex: { id: 1, company: 'portinari' }
     *
     * Para o endpoint /resources/:id será executada a url /resources/1|portinari
     * @private
     * @param {?} item
     * @return {?}
     */
    PoPageDynamicTableComponent.prototype.remove = /**
     * Caso exista mais de um identificador, será concatenado com '|'.
     *
     * Ex: { id: 1, company: 'portinari' }
     *
     * Para o endpoint /resources/:id será executada a url /resources/1|portinari
     * @private
     * @param {?} item
     * @return {?}
     */
    function (item) {
        var _this = this;
        /** @type {?} */
        var uniqueKey = this.formatUniqueKey(item);
        this.poPageDynamicService.deleteResource(uniqueKey).toPromise().then((/**
         * @return {?}
         */
        function () {
            _this.removeLocalItems([item]);
            _this.poNotification.success(_this.literals.removeSuccessNotification);
        }));
    };
    /**
     * @private
     * @return {?}
     */
    PoPageDynamicTableComponent.prototype.removeAll = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        // TODO: usar propriedade nova pra validar os itens selecionados
        /** @type {?} */
        var selectedItems = this.items.filter((/**
         * @param {?} item
         * @return {?}
         */
        function (item) { return item.$selected; }));
        if (selectedItems.length === 0) {
            // TODO: usar propriedade nova pra validar os itens selecionados
            return;
        }
        /** @type {?} */
        var keysSelectedItems = util.mapArrayByProperties(selectedItems, this.keys);
        this.poPageDynamicService.deleteResources(keysSelectedItems).toPromise().then((/**
         * @return {?}
         */
        function () {
            _this.removeLocalItems(selectedItems);
            _this.poNotification.success(_this.literals.removeAllSuccessNotification);
        }));
    };
    /**
     * @private
     * @param {?=} items
     * @return {?}
     */
    PoPageDynamicTableComponent.prototype.removeLocalItems = /**
     * @private
     * @param {?=} items
     * @return {?}
     */
    function (items) {
        var _this = this;
        if (items === void 0) { items = []; }
        items.forEach((/**
         * @param {?} itemRemoved
         * @return {?}
         */
        function (itemRemoved) {
            /** @type {?} */
            var indexItemRemoved = _this.items.indexOf(itemRemoved);
            _this.items.splice(indexItemRemoved, 1);
        }));
    };
    /**
     * @private
     * @param {?} item
     * @param {?} path
     * @return {?}
     */
    PoPageDynamicTableComponent.prototype.resolveUrl = /**
     * @private
     * @param {?} item
     * @param {?} path
     * @return {?}
     */
    function (item, path) {
        /** @type {?} */
        var uniqueKey = this.formatUniqueKey(item);
        return path.replace(/:id/g, uniqueKey);
    };
    /**
     * @private
     * @param {?} actions
     * @return {?}
     */
    PoPageDynamicTableComponent.prototype.setPageActions = /**
     * @private
     * @param {?} actions
     * @return {?}
     */
    function (actions) {
        if (actions) {
            this._pageActions = [
                { label: this.literals.pageAction, action: this.openNew.bind(this, actions.new), disabled: !this._actions.new },
            ];
        }
    };
    /**
     * @private
     * @return {?}
     */
    PoPageDynamicTableComponent.prototype.setRemoveAllAction = /**
     * @private
     * @return {?}
     */
    function () {
        if (this._actions.removeAll) {
            this._pageActions.push({
                label: this.literals.pageActionRemoveAll, action: this.confirmRemoveAll.bind(this),
                disabled: !this._actions.removeAll
            });
        }
    };
    /**
     * @private
     * @param {?} actions
     * @return {?}
     */
    PoPageDynamicTableComponent.prototype.setTableActions = /**
     * @private
     * @param {?} actions
     * @return {?}
     */
    function (actions) {
        if (actions) {
            this._tableActions = [
                { action: this.openDetail.bind(this, actions.detail), label: this.literals.tableActionView, visible: !!this._actions.detail },
                { action: this.openEdit.bind(this, actions.edit), label: this.literals.tableActionEdit, visible: !!this._actions.edit },
                { action: this.openDuplicate.bind(this, actions.duplicate), label: this.literals.tableActionDuplicate,
                    visible: !!this._actions.duplicate
                },
                { action: this.confirmRemove.bind(this), label: this.literals.tableActionDelete, separator: true, type: 'danger',
                    visible: !!this._actions.remove
                }
            ];
        }
    };
    PoPageDynamicTableComponent.decorators = [
        { type: Component, args: [{
                    selector: 'po-page-dynamic-table',
                    template: "<po-page-dynamic-search\n  [p-actions]=\"pageActions\"\n  [p-breadcrumb]=\"breadcrumb\"\n  [p-filters]=\"filters\"\n  [p-title]=\"title\"\n  (p-advanced-search)=\"onAdvancedSearch($event)\"\n  (p-change-disclaimers)=\"onChangeDisclaimers($event)\"\n  (p-quick-search)=\"onQuickSearch($event)\">\n\n  <po-table\n    p-sort=\"true\"\n    [p-actions]=\"tableActions\"\n    [p-checkbox]=\"hasActionRemoveAll\"\n    [p-columns]=\"columns\"\n    [p-items]=\"items\"\n    [p-show-more-disabled]=\"!hasNext\"\n    (p-show-more)=\"showMore()\"\n    (p-sort-by)=\"onSort($event)\">\n  </po-table>\n\n</po-page-dynamic-search>\n",
                    providers: [PoPageDynamicService]
                }] }
    ];
    /** @nocollapse */
    PoPageDynamicTableComponent.ctorParameters = function () { return [
        { type: Router },
        { type: ActivatedRoute },
        { type: PoDialogService },
        { type: PoNotificationService },
        { type: PoPageDynamicService }
    ]; };
    PoPageDynamicTableComponent.propDecorators = {
        actions: [{ type: Input, args: ['p-actions',] }]
    };
    return PoPageDynamicTableComponent;
}(PoPageDynamicListBaseComponent));
export { PoPageDynamicTableComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoPageDynamicTableComponent.prototype._actions;
    /**
     * @type {?}
     * @private
     */
    PoPageDynamicTableComponent.prototype._pageActions;
    /**
     * @type {?}
     * @private
     */
    PoPageDynamicTableComponent.prototype._tableActions;
    /**
     * @type {?}
     * @private
     */
    PoPageDynamicTableComponent.prototype.page;
    /**
     * @type {?}
     * @private
     */
    PoPageDynamicTableComponent.prototype.params;
    /**
     * @type {?}
     * @private
     */
    PoPageDynamicTableComponent.prototype.sortedColumn;
    /** @type {?} */
    PoPageDynamicTableComponent.prototype.hasNext;
    /** @type {?} */
    PoPageDynamicTableComponent.prototype.items;
    /** @type {?} */
    PoPageDynamicTableComponent.prototype.literals;
    /**
     * @type {?}
     * @private
     */
    PoPageDynamicTableComponent.prototype.router;
    /**
     * @type {?}
     * @private
     */
    PoPageDynamicTableComponent.prototype.activatedRoute;
    /**
     * @type {?}
     * @private
     */
    PoPageDynamicTableComponent.prototype.poDialogService;
    /**
     * @type {?}
     * @private
     */
    PoPageDynamicTableComponent.prototype.poNotification;
    /**
     * @type {?}
     * @private
     */
    PoPageDynamicTableComponent.prototype.poPageDynamicService;
}
//# sourceMappingURL=data:application/json;base64,