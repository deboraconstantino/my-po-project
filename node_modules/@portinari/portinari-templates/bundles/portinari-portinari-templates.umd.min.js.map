{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@portinari/portinari-templates/lib/utils/util.ts","ng://@portinari/portinari-templates/lib/components/po-modal-password-recovery/literals/i18n/po-modal-password-recovery-literals.ts","ng://@portinari/portinari-templates/lib/components/po-modal-password-recovery/enums/po-modal-password-recovery-type.enum.ts","ng://@portinari/portinari-templates/lib/components/po-modal-password-recovery/po-modal-password-recovery-base.component.ts","ng://@portinari/portinari-templates/lib/components/po-modal-password-recovery/enums/po-modal-password-recovery-modal-content.enum.ts","ng://@portinari/portinari-templates/lib/components/po-modal-password-recovery/po-modal-password-recovery.service.ts","ng://@portinari/portinari-templates/lib/components/po-modal-password-recovery/po-modal-password-recovery.component.ts","ng://@portinari/portinari-templates/lib/components/po-modal-password-recovery/po-modal-password-recovery-error-message/po-modal-password-recovery-error-message.component.ts","ng://@portinari/portinari-templates/lib/components/po-modal-password-recovery/po-modal-password-recovery.module.ts","ng://@portinari/portinari-templates/lib/components/po-page-background/po-page-background.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-background/po-page-background.module.ts","ng://@portinari/portinari-templates/lib/components/po-page-blocked-user/enums/po-page-blocked-user-reason.enum.ts","ng://@portinari/portinari-templates/lib/components/po-page-blocked-user/po-page-blocked-user-base.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-blocked-user/po-page-blocked-user.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-blocked-user/po-page-blocked-user-contacts/po-page-blocked-user-contacts.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-blocked-user/literals/i18n/po-page-blocked-user-literals.ts","ng://@portinari/portinari-templates/lib/components/po-page-blocked-user/po-page-blocked-user-reason/po-page-blocked-user-reason.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-blocked-user/po-page-blocked-user.module.ts","ng://@portinari/portinari-templates/lib/components/po-page-change-password/po-page-change-password-base.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-change-password/literals/i18n/po-page-change-password-literals.ts","ng://@portinari/portinari-templates/lib/components/po-page-change-password/po-page-change-password.service.ts","ng://@portinari/portinari-templates/lib/components/po-page-change-password/po-page-change-password.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-change-password/po-page-change-password.module.ts","ng://@portinari/portinari-templates/lib/services/po-page-dynamic/po-page-dynamic.service.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-detail/po-page-dynamic-detail.component.ts","ng://@portinari/portinari-templates/lib/services/po-page-dynamic/po-page-dynamic.module.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-detail/po-page-dynamic-detail.module.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-edit/po-page-dynamic-edit.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-edit/po-page-dynamic-edit.module.ts","ng://@portinari/portinari-templates/lib/services/po-page-customization/po-page-customization.service.ts","ng://@portinari/portinari-templates/lib/services/po-page-customization/po-page-customization.module.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-search/po-advanced-filter/po-advanced-filter-base.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-search/po-advanced-filter/po-advanced-filter.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-search/po-page-dynamic-search-base.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-search/po-page-dynamic-search.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-search/po-page-dynamic-search.module.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-table/po-page-dynamic-list-base.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-table/po-page-dynamic-table.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-table/po-page-dynamic-table.module.ts","ng://@portinari/portinari-templates/lib/components/po-page-job-scheduler/po-page-job-scheduler-internal.ts","ng://@portinari/portinari-templates/lib/components/po-page-job-scheduler/po-page-job-scheduler-base.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-job-scheduler/po-page-job-scheduler-literals.ts","ng://@portinari/portinari-templates/lib/components/po-page-job-scheduler/po-page-job-scheduler.service.ts","ng://@portinari/portinari-templates/lib/components/po-page-job-scheduler/po-page-job-scheduler-lookup.service.ts","ng://@portinari/portinari-templates/lib/components/po-page-job-scheduler/po-page-job-scheduler.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-job-scheduler/po-page-job-scheduler-execution/po-page-job-scheduler-execution.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-job-scheduler/po-page-job-scheduler-parameters/po-page-job-scheduler-parameters.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-job-scheduler/po-page-job-scheduler-summary/po-page-job-scheduler-summary.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-job-scheduler/po-page-job-scheduler.module.ts","ng://@portinari/portinari-templates/lib/components/po-page-login/enums/po-page-login-authentication-type.enum.ts","ng://@portinari/portinari-templates/lib/components/po-page-login/po-page-login-base.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-login/po-page-login.service.ts","ng://@portinari/portinari-templates/lib/components/po-page-login/po-page-login.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-login/po-page-login-popover/po-page-login-popover.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-login/po-page-login.module.ts","ng://@portinari/portinari-templates/lib/components/components.module.ts","ng://@portinari/portinari-templates/lib/services/services.module.ts","ng://@portinari/portinari-templates/lib/po-templates.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__generator","thisArg","body","f","y","g","_","label","sent","trys","ops","next","verb","throw","return","Symbol","iterator","v","op","TypeError","done","value","pop","push","e","step","__read","o","m","r","ar","error","__spread","concat","poLocales","poLocaleDefault","browserLanguage","getShortBrowserLanguage","getBrowserLanguage","navigator","language","toLowerCase","substring","includes","convertToBoolean","val","trim","isTypeof","object","type","isExternalLink","url","startsWith","mapObjectByProperties","properties","reduce","selectedProperties","property","_a","valuesFromObject","keys","map","addZero","time","poModalPasswordRecoveryLiterals","en","cancelButton","closeButton","continueButton","email","emailErrorMessagePhrase","emailSentConfirmationPhrase","emailSentTitle","forgotPasswordTitle","insertCode","insertEmail","insertPhone","phoneErrorMessagePhrase","prepositionIn","prepositionOr","recoveryPasswordPhrase","resendEmailButton","resendSmsCodePhrase","sendAgainPhrase","sendAgain","sendButton","sentSmsCodePhrase","sms","smsCodeErrorMessagePhrase","supportContact","telephone","typeCodeTitle","es","pt","ru","All","Email","SMS","PoModalPasswordRecoveryDefaultMaxLength","PoModalPasswordRecoveryDefaultMinLength","PoModalPasswordRecoveryDefaultPhone","PoModalPasswordRecoveryTypeDefault","PoModalPasswordRecoveryType","PoModalPasswordRecoveryBaseComponent","_phoneMask","_type","maxLength","minLength","literals","codeSubmit","EventEmitter","submit","defineProperty","_contactEmail","smsCodeErrorMessage","concatenateSMSErrorMessage","values","literalCodeErrorMessage","Input","args","Output","SMSCode","Confirmation","PoModalPasswordRecoveryService","http","post","urlRecovery","item","params","observe","Injectable","HttpClient","PoModalPasswordRecoveryComponent","_super","router","poI18nPipe","poModalPasswordRecoveryService","_this","chosenTypeFormOption","codeMask","emailModal","emailModalPhrases","firstPhrase","secondPhrase","endpoint","invalidCode","invalidEmail","modalType","PoModalPasswordRecoveryModalContent","submittedCodeValue","submittedContactValue","primaryAction","undefined","action","secondaryAction","typeFormOptions","tslib_1.__extends","ngOnDestroy","passwordRecoverySubscription","unsubscribe","smsCodeSubscription","completed","cancelAction","formModelChangesCheck","form","invalidForm","invalid","dirty","disabled","codeError","showCustomCodeError","pristine","getInputType","pipeModalPhrases","setTimeout","control","emailForm","controls","resetFormFields","open","checkFormType","setEmailModalPhrasesAndActions","recoveryModalElement","openConfirmation","modalTitle","setActions","submitAction","openSmsCode","submitSmsCodeAction","smsCodeForm","resendSmsCode","incrementRetryAttempts","submitActionRequest","emit","assignSmsResponse","responseObj","smsBodyResponse","hash","urlValidationCode","modalPasswordRecoveryTypeAll","close","formReset","markAsPristine","markAsUntouched","updateValueAndValidity","getEmitValue","phone","retry","openExternalLink","queryParam","window","openInternalLink","navigate","queryParams","token","setPipeArguments","redirectToChangePassword","recoveryToken","urlChangePassword","smsCode","primarylabel","secondaryLabel","setRequestEndpoint","literalAttr","arg","transform","data","subscribe","response","status","code","submitSmsCodeRequest","message","Component","selector","template","Router","PoI18nPipe","ViewChild","static","PoModalPasswordRecoveryErrorMessageComponent","PoModalPasswordRecoveryModule","NgModule","imports","CommonModule","FormsModule","PoFieldModule","PoModalModule","declarations","exports","providers","PoPageBackgroundComponent","_showSelectLanguage","selectLanguageOptions","selectedLanguage","_logo","_secondaryLogo","showSelectLanguage","ngOnInit","selectedLanguageOption","onChangeLanguage","PoPageBackgroundModule","RouterModule","PoDividerModule","None","ExceededAttempts","ExpiredPassword","PoPageBlockedUserReasonDefault","PoPageBlockedUserReason","PoPageBlockedUserParamsDefault","attempts","days","hours","PoPageBlockedUserBaseComponent","_params","_reason","_urlBack","newParams_1","forEach","key","poPageBlockedUserButtonLiterals","primaryButton","PoPageBlockedUserComponent","activatedRoute","checkingForRouteMetadata","snapshot","navigateTo","checkingForMetadataProperty","contactEmail","contactPhone","reason","urlBack","ActivatedRoute","PoPageBlockedUserContactsComponent","changeDetector","overflowItem","ngAfterViewInit","checkContactItemWidth","ngOnChanges","changes","phoneWidth","phoneItem","nativeElement","offsetWidth","mailWidth","mailItem","contactGroupHalfWidth","contactGroup","detectChanges","ChangeDetectorRef","poPageBlockedUserLiterals","none","title","exceededAttempts","thirdPhrase","expiredPassword","PoPageBlockedUserReasonComponent","getLiterals","getImageByReasonType","reasonImage","getParams","literalParams","PoPageBlockedUserModule","PoModule","PoPageChangePasswordBaseComponent","_hideCurrentPassword","_requirements","_urlHome","_recovery","recoveryUrlType","showRequirements","modalAction","bind","urlHome","poPageChangePasswordLiterals","backButton","confirmPassword","createNewPassword","createNewPasswordPhrase","currentPassword","enterSystemButton","forgotPassword","newPassword","passwordSuccessfullyCreated","passwordSuccessfullyUpdated","requirements","safetyTips","safetyTipsFirst","safetyTipsPhrase","safetyTipsSecond","safetyTipsThird","saveButton","PoPageChangePasswordService","PoPageChangePasswordComponent","route","service","poComponentInjector","viewRef","componentRef","parentRef","urlNewPassword","subscribeToTokenParameter","newPasswordSubscription","onForgotPasswordClick","recovery","createModalPasswordRecoveryComponent","onLoginSubmit","getLoginForm","postUrlNewPassword","observers","emitSubmit","modal","validatePassword","passwordForm","controlConfirmPassword","controlNewPassword","setFormErrors","equalPassword","required","find","requirement","validateRequirement","hideCurrentPassword","destroyComponentInApplication","createComponentInApplication","instance","contactMail","phoneMask","changeDetectorRef","setErrors","PoComponentInjectorService","ViewContainerRef","PoModalComponent","read","NgForm","PoPageChangePasswordModule","entryComponents","PoPageDynamicService","headers","HttpHeaders","X-PORTINARI-SCREEN-LOCK","configServiceApi","config","metadata","getMetadata","cache","JSON","parse","localStorage","getItem","version","get","pipe","setItem","stringify","deleteResource","id","delete","deleteResources","ids","request","getResources","getResource","createResource","resource","updateResource","put","providedIn","poPageDynamicDetailLiteralsDefault","pageActionEdit","pageActionRemove","pageActionBack","confirmRemoveTitle","confirmRemoveMessage","removeNotificationSuccess","registerNotFound","PoPageDynamicDetailComponent","poNotification","poDialogService","poPageDynamicService","_actions","_autoRouter","_duplicates","_fields","_keys","_pageActions","util.poLocaleDefault","util.browserLanguage","model","breadcrumb","items","isObject","getPageActions","util.convertToBoolean","isArray","getKeysByFields","fields","getDuplicatesByFields","paramId","serviceApi","loadMetadata","loadData","confirmRemove","path","confirmOptions","confirm","remove","formatUniqueKey","util.valuesFromObject","util.mapObjectByProperties","join","goBack","history","back","toPromise","then","catch","actions","autoRouter","forceStopAutoRouter","unshift","component","openEdit","resolveUrl","uniqueKey","success","replace","pageActions","edit","filter","field","duplicate","PoNotificationService","PoDialogService","PoPageDynamicModule","HttpClientModule","PoPageDynamicDetailModule","PoDynamicModule","PoPageModule","PoWidgetModule","poPageDynamicEditLiteralsDefault","cancelConfirmMessage","detailActionNew","pageActionCancel","pageActionSave","pageActionSaveNew","saveNewNotificationSuccessSave","saveNewNotificationSuccessUpdate","saveNewNotificationWarning","saveNotificationSuccessSave","saveNotificationSuccessUpdate","saveNotificationWarning","PoPageDynamicEditComponent","_controlFields","_detailFields","detailActions","getControlFields","getDetailFields","serviceMetadataApi","gridDetail","insertRow","cancel","dynamicForm","typeMetadata","save","warning","saveOperation","msgSucess","saveNew","reset","PoPageDynamicEditModule","PoButtonModule","PoGridModule","PoPageCustomizationService","getCustomOptions","origin","originalOption","optionSchema","createObservable","newPageOptions","mergePageOptions","changeOriginalOptionsToNewOptions","objectToChange","newOptions","from","Promise","resolve","schema","objWithNewProp","prop","nameProp","createNewProp","merge","mergeOptions","keyForMerge","originalOptions","filterProp","mergeOptionsArray","deduplicateNewOptions","newItem","originalItem","newOptionsItem","PoPageCustomizationModule","poAdvancedFiltersLiteralsDefault","cancelLabel","confirmLabel","PoAdvancedFilterBaseComponent","languageService","_filters","models","getValuesFromForm","searchEvent","poModal","getShortLanguage","filters","_literals","PoAdvancedFilterComponent","PoLanguageService","PoDynamicFormComponent","poPageDynamicSearchLiteralsDefault","disclaimerGroupTitle","filterTitle","filterCancelLabel","filterConfirmLabel","quickSearchLabel","searchPlaceholder","PoPageDynamicSearchBaseComponent","advancedSearch","changeDisclaimers","quickSearch","setAdvancedFilterLiterals","advancedFilterLiterals","PoPageDynamicSearchComponent","poPageCustomizationService","_disclaimerGroup","change","onChangeDisclaimerGroup","disclaimers","_filterSettings","advancedAction","ngModel","placeholder","changeDisclaimersEnabled","onLoad","loadOptionsOnInitialize","loadSubscription","onAction","quickFilter","onAdvancedAction","poAdvancedFilter","onAdvancedSearch","setDisclaimers","applyDisclaimerLabelValue","filterValue","filteredField","options","option","formatDate","date","year","parseInt","substr","month","day","Date","toLocaleDateString","getFieldByProperty","fieldName","getFilterValueToDisclaimer","PoDynamicFieldType","text","charAt","toUpperCase","slice","getPoDynamicPageOptions","responsePoOption","PoPageDynamicSearchModule","PoLanguageModule","PoPageDynamicListBaseComponent","_columns","setFieldsProperties","visible","poPageDynamicTableLiteralsDefault","pageAction","pageActionRemoveAll","tableActionView","tableActionEdit","tableActionDuplicate","tableActionDelete","confirmRemoveAllTitle","confirmRemoveAllMessage","loadDataErrorNotification","removeSuccessNotification","removeAllSuccessNotification","PoPageDynamicTableComponent","_tableActions","page","subscriptions","hasNext","setPageActions","setRemoveAllAction","setTableActions","loadDataFromAPI","subscription","onChangeDisclaimers","disclaimer","onQuickSearch","search","onSort","sortedColumn","showMore","removeAll","confirmRemoveAll","getOrderParam","column","PoTableColumnSortType","Descending","order","throwError","orderParam","fullParams","pageSize","tap","EMPTY","openDetail","openDuplicate","duplicates","openNew","removeLocalItems","selectedItems","$selected","keysSelectedItems","itemRemoved","indexItemRemoved","indexOf","splice","new","detail","separator","metadata$","data$","customOption$","PoPageDynamicTableModule","PoTableModule","PoPageJobSchedulerInternal","periodicity","firstExecution","firstExecutionHour","getCurrentHour","recurrent","getHours","getMinutes","PoPageJobSchedulerBaseComponent","poPageJobSchedulerService","markAsDirtyInvalidControls","markAsDirty","poPageJobSchedulerLiteralsDefault","at","execution","process","enterProcess","single","daily","weekly","monthly","scheduling","parameterization","conclude","hour","weekDays","sunday","monday","tuesday","wednesday","thursday","friday","saturday","parameters","yes","no","notReported","periodicityData","confirmation","confirmSaveMessage","confirmUpdateMessage","parametersNotFound","PoPageJobSchedulerService","jobScheduler","convertToJobScheduler","getHeadProcesses","head","X-Portinari-No-Error","getParametersByProcess","processId","getProcess","getProcesses","convertToJobSchedulerInternal","jobSchedulerInternal","convertToPeriodicity","replaceHourFirstExecution","returnValidExecutionParameter","executionParameter","removeInvalidKeys","getHourFirstExecution","convertToPeriodicityInternal","newValue","valuePeriodicity","dayOfMonth","daysOfWeek","split","minute","firstExecutionDate","invalidKeys","timeSplited","minutes","setHours","getMonth","getDate","toString","formatYear","getFullYear","dateString","convertDateToISOExtended","parameter","newParameter","PoPageJobSchedulerLookupService","getFilteredData","getObjectByValue","PoPageJobSchedulerComponent","poPageDynamicLookupService","isEdit","backPageAction","nextStepOperation","isDisabledBack","concludePageActions","confirmJobScheduler","nextPageActions","isDisabledAdvance","jobSchedulerActions","steps","innerWidth","changePageActionsBySteps","currentStep","nextStep","stepsLength","stepNumber","schedulerExecution","schedulerParameters","PoStepperStatus","Done","onChangeProcess","existAPI","confirmMessage","emitSuccessMessage","msgSuccess","_arguments","generator","resetJobSchedulerForm","P","reject","fulfilled","rejected","result","operation","Default","encapsulation","ViewEncapsulation","PoPageJobSchedulerExecutionComponent","poPageJobSchedulerLookup","_value","dayPattern","existProcessAPI","minDateFirstExecution","periodicityOptions","timePattern","changeProcess","subscribeProcessIdValueChanges","periodicityTemplates","dailyTemplate","monthlyTemplate","weeklyTempalte","checkExistsProcessesAPI","getPeriodicityOptions","getWeekDays","valueChanges","PoPageJobSchedulerParametersComponent","valueChange","PoPageJobSchedulerSummaryComponent","datePipe","executionValue","firstExecutionValue","infoOrientation","PoInfoOrientation","Horizontal","periodicityValue","recurrentValue","getPeriodicityLabel","getExecutionValue","getFirstExecutionLabel","getRecurrentValue","getHourLabel","getMonthlyLabelExecution","getWeeklyLabelExecution","hourLabel","getSorterWeekDays","getTranslateWeekDay","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","getWeekDaysLabel","sortWeekDays","sorterWeekDays","sort","a","currDay","nextDay","DatePipe","PoPageJobSchedulerModule","PoContainerModule","PoDialogModule","PoInfoModule","PoStepperModule","Basic","Bearer","poPageLoginLiteralsDefault","loginErrorPattern","loginHint","loginPlaceholder","passwordErrorPattern","passwordPlaceholder","customFieldErrorPattern","customFieldPlaceholder","rememberUser","rememberUserHint","submitLabel","submittedLabel","highlightInfo","registerUrl","titlePopover","forgotYourPassword","ifYouTryHarder","yourUserWillBeBlocked","createANewPasswordNow","iForgotMyPassword","poPageLoginLiteralIn","poPageLoginLiteralTo","PoPageLoginBaseComponent","loginService","allLoginErrors","allPasswordErrors","showExceededAttemptsWarning","_authenticationType","PoPageLoginAuthenticationType","_hideRememberUser","_loading","_loginErrors","_passwordErrors","loginChange","loginSubmit","passwordChange","_customField","customFieldType","customFieldObject","getDefaultCustomFieldObject","_productName","_environment","environment","_exceededAttemptsWarning","valueDefault","validNumber","validDefaultValue","defaultValue","convertToInt","exceededAttemptsWarning","_login","authenticationUrl","setLoginErrors","setPasswordErrors","_registerUrl","_authenticationUrl","_blockedUrl","loginHintWithContactEmail","concatenateLoginHintWithContactEmail","titleWithProductName","productName","concatenateTitleWithProductName","loginSubscription","closePopover","loginForm","login","password","customField","onLogin","authenticationType","setValuesToProperties","sessionStorage","redirectBlockedUrl","blockedUrl","maxAttemptsRemaining","loginErrors","loginWarnings","passwordErrors","passwordWarnings","PoPageLoginService","btoa","user","Authorization","PoPageLoginComponent","differs","customPasswordError","custom","differ","ngAfterViewChecked","validateArrayChanges","array","callback","generateLoginError","generatePasswordError","changeLoginModel","changePasswordModel","onSelectedLanguage","openUrl","setUrlRedirect","concatenate","defaultLiteral","prefixLiteral","concatenateLiteral","literal","prepositionLiteral","poPageLoginRecovery","resetControl","setControlErrors","allErrors","errors","patternError","hasError","valid","markAsTouched","element","diff","defaultLoginHintLiteral","defaultTitleLiteral","pageLoginLiterals","IterableDiffers","PoPageLoginPopoverComponent","recoveryType","PoPageLoginModule","PoComponentsModule","PoServicesModule","PoTemplatesModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// Idiomas suportados pelas pÃ¡ginas\r\nexport const poLocales = ['pt', 'en', 'es', 'ru'];\r\n// Idioma padrÃ£o\r\nexport const poLocaleDefault = 'pt';\r\n\r\n/**\r\n * @deprecated\r\n * Utilize o mÃ©todo `getShortBrowserLanguage`.\r\n *\r\n * @description\r\n * Retorna idioma do browser ou o idioma padrÃ£o.\r\n */\r\nexport function browserLanguage() {\r\n  return getShortBrowserLanguage();\r\n}\r\n\r\n/**\r\n * Retorna o idioma atual do navegador\r\n */\r\nexport function getBrowserLanguage(): string {\r\n  // navigator.userLanguage is the value for IE10\r\n  return navigator.language || navigator['userLanguage'];\r\n}\r\n\r\n/**\r\n * Retorna o idioma do navegador, com somente as duas primeiras letras. Por exemplo: \"pt\" ou \"es\".\r\n *\r\n * Caso o valor retornado pelo navegador nÃ£o estiver dentro dos idiomas suportados pelo PO,\r\n * serÃ¡ retornado a linguagem padrÃ£o (poLocaleDefault).\r\n */\r\nexport function getShortBrowserLanguage(): string {\r\n  const language = (getBrowserLanguage() || poLocaleDefault).toLowerCase().substring(0, 2);\r\n\r\n  if (!poLocales.includes(language)) {\r\n    return poLocaleDefault;\r\n  }\r\n\r\n  return language;\r\n}\r\n\r\nexport function convertToBoolean(val: any): boolean {\r\n  if (typeof val === 'string') {\r\n    val = val.toLowerCase().trim();\r\n    return (val === 'true' || val === 'on' || val === '');\r\n  }\r\n\r\n  if (typeof val === 'number') {\r\n    return val === 1;\r\n  }\r\n\r\n  return !!val;\r\n}\r\n\r\nexport function convertToInt(value: any, valueDefault?: any): number {\r\n  const validNumber = parseInt(value, 10);\r\n  const validDefaultValue = parseInt(valueDefault, 10);\r\n  const defaultValue = validDefaultValue || validDefaultValue === 0 ? validDefaultValue : undefined;\r\n\r\n  return validNumber || validNumber === 0 ? validNumber : defaultValue;\r\n}\r\n\r\nexport function isTypeof(object: any, type: any) {\r\n  return typeof object === type;\r\n}\r\n\r\n/**\r\n *\r\n * @param fn FunÃ§Ã£o que serÃ¡ executada dentro do contexto. Podendo ser o nome da funÃ§Ã£o\r\n * ou a referÃªncia da mesma.\r\n *\r\n * @param context Contexto do qual a funÃ§Ã£o serÃ¡ executada.\r\n */\r\nexport function callFunction(fn: any, context: any, param?): void {\r\n  if (isTypeof(fn, 'function')) {\r\n    fn.call(context, param);\r\n  } else {\r\n    context[fn](param);\r\n  }\r\n}\r\n\r\nexport function convertIsoToDate(value: string , start: boolean, end: boolean) {\r\n  if (value) {\r\n    const day = parseInt(value.substring(8, 10), 10);\r\n    const month = parseInt(value.substring(5, 7), 10);\r\n    const year = parseInt(value.substring(0, 4), 10);\r\n    if (start) {\r\n      const date = new Date(year, month - 1, day, 0, 0, 0);\r\n\r\n      setYearFrom0To100(date, year);\r\n\r\n      return date;\r\n    } else if (end) {\r\n      const date = new Date(year, month - 1, day, 23, 59, 59);\r\n\r\n      setYearFrom0To100(date, year);\r\n\r\n      return date;\r\n    } else {\r\n      const milliseconds = Date.parse(value);\r\n      const timezone = new Date().getTimezoneOffset() * 60000;\r\n      return new Date(milliseconds + timezone);\r\n    }\r\n  }\r\n}\r\n\r\nexport function convertDateToISOExtended(date: Date, time?: string) {\r\n  if (date) {\r\n\r\n    const getMonth = date.getMonth() + 1;\r\n    const day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();\r\n    const month = getMonth < 10 ? '0' + getMonth : getMonth;\r\n    const year = formatYear(date.getFullYear());\r\n\r\n    const dateString = date.toString();\r\n\r\n    if (time) {\r\n      return year + '-' + month + '-' + day + time;\r\n    } else {\r\n      return year + '-' + month + '-' + day + 'T' + dateString.substring(16, 24) +\r\n          dateString.substring(28, 31) + ':' + dateString.substring(31, 33);\r\n    }\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * Transforma o ano em uma string no formato yyyy e caso o ano seja menor que 1000 preenche com zeros a esquerda.\r\n * @param year Ano\r\n */\r\nexport function formatYear(year: number) {\r\n\r\n  if (year >= 1000) {\r\n    return year.toString();\r\n  }\r\n\r\n  if (year > 99 && year < 1000) {\r\n    return `0${year}`;\r\n  }\r\n\r\n  if (year > 9 && year < 100) {\r\n    return `00${year}`;\r\n  }\r\n\r\n  if (year >= 0 && year < 10) {\r\n    return `000${year}`;\r\n  }\r\n\r\n}\r\n\r\nexport function isEquals(value, comparedValue) {\r\n  return JSON.stringify(value) === JSON.stringify(comparedValue);\r\n}\r\n\r\n/**\r\n * Caso o ano original da data seja entre 0 e 100 atribui esse valor ao ano, pois o `new Date` do javascript transforma o ano para 190X.\r\n * @param date Data\r\n * @param year Ano original\r\n */\r\nexport function setYearFrom0To100(date: Date, year: number) {\r\n  if (year >= 0 && year < 100 ) {\r\n    date.setFullYear(year);\r\n  }\r\n}\r\n\r\nexport function sortOptionsByProperty(options: Array<any>, property: string) {\r\n  options.sort((optionA, optionB) => {\r\n    optionA = optionA[property].toString().toLowerCase();\r\n    optionB = optionB[property].toString().toLowerCase();\r\n\r\n    if (optionA < optionB) {\r\n      return -1;\r\n    }\r\n    if (optionA > optionB) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  });\r\n}\r\n\r\nexport function removeDuplicatedOptions(list: Array<any>) {\r\n  for (let i = 0; i < list.length; i++) {\r\n    if (i === 0) { continue; }\r\n\r\n    if (list.findIndex(op => op.value === list[i].value) !== i) {\r\n      list.splice(i, 1);\r\n      i--;\r\n    }\r\n  }\r\n}\r\n\r\nexport function removeUndefinedAndNullOptions(list: Array<any>) {\r\n  for (let i = 0; i < list.length; i++) {\r\n    if (list[i].value === undefined || list[i].value === null ) {\r\n      list.splice(i, 1);\r\n      i--;\r\n    }\r\n  }\r\n}\r\n\r\nexport function validValue(value: any) {\r\n  return (value !== null && value !== undefined && value !== '') || value === false;\r\n}\r\n\r\nexport function isExternalLink(url): boolean {\r\n  return url ? url.startsWith('http') : false;\r\n}\r\n\r\nexport function openExternalLink(url): void {\r\n  window.open(url, '_blank');\r\n}\r\n\r\nexport function  getFormattedLink(link: string): string {\r\n  let formattedLink = '';\r\n  // Retira todos os pontos no comeÃ§o da URL.\r\n  if (link) {\r\n    formattedLink = link.replace(/^(\\.)+/g, '');\r\n  }\r\n  // Verifica se foi utilizado uma rota que nÃ£o comece com barra.\r\n  if (!formattedLink.startsWith('/')) {\r\n    formattedLink = '/'.concat(formattedLink);\r\n  }\r\n  return formattedLink;\r\n}\r\n\r\n/**\r\n * MÃ©todo responsÃ¡vel por ordenar dois valores.\r\n *\r\n * @param leftSide Primeiro valor a ser comparado.\r\n * @param rightSide Segundo valor a ser comparado.\r\n * @param ascending Determina se serÃ¡ em ordem ascendente ou descendente.\r\n */\r\nexport function sortValues(leftSide: string, rightSide: string, ascending: boolean = true): number {\r\n  if (ascending) {\r\n    if (leftSide < rightSide) {\r\n      return -1;\r\n    } else if (leftSide > rightSide) {\r\n      return 1;\r\n    }\r\n  } else if (ascending === false) {\r\n    if (leftSide < rightSide) {\r\n      return 1;\r\n    } else if (leftSide > rightSide) {\r\n      return -1;\r\n    }\r\n  }\r\n  return 0;\r\n}\r\n\r\nexport function validateDateRange(date: Date, dateStart: Date, dateEnd: Date) {\r\n  if (dateStart && dateEnd) {\r\n    return (date >= dateStart && date <= dateEnd);\r\n  } else if (dateStart && !dateEnd) {\r\n    return (date >= dateStart);\r\n  } else if (!dateStart && dateEnd) {\r\n    return (date <= dateEnd);\r\n  } else {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport function capitalizeFirstLetter(text: string): string {\r\n  return `${text.charAt(0).toUpperCase()}${text.slice(1)}`;\r\n}\r\n\r\n/**\r\n * Mapeia um novo array apenas com as propriedades definidas pelo desenvolvedor baseado em um array de\r\n * origem.\r\n *\r\n * Exemplo:\r\n *\r\n * ```\r\n * const people = [\r\n *  { id: 1, name: 'Fulano', birthdate: '1980-11-01', genre: 'Male', city: 'SÃ£o Paulo', dependents: 2 },\r\n *  { id: 2, name: 'Beltrano', birthdate: '1997-01-21', genre: 'Female', city: 'Joinville', dependents: 0 },\r\n *  { id: 3, name: 'Siclano', birthdate: '1995-07-15', genre: 'Male', city: 'Joinville', dependents: 0 }\r\n * ];\r\n *\r\n * const properties = ['id', 'name'];\r\n *\r\n * const idAndName = mapArrayByProperties(people, properties);\r\n *\r\n * console.log(idAndName); // [{ id: 1, name: 'Fulano' }, { id: 2, name: 'Beltrano' }, { id: 3, name: 'Siclano' }]\r\n * ```\r\n *\r\n * Um outro uso para o mÃ©todo Ã© \"parear\" todos os objetos do array com as mesmas propriedades.\r\n *\r\n * ```\r\n * const customers = [\r\n *  { id: 1, name: 'Fulano', city: 'SÃ£o Paulo', dependents: 2 }, // sem genre\r\n *  { id: 2, name: 'Beltrano', genre: 'Female', city: 'Joinville' }, // sem dependents\r\n *  { id: 3, name: 'Siclano', genre: 'Male', city: 'Joinville', dependents: 0 }\r\n * ];\r\n * const properties = ['id', 'name', 'city', 'genre', 'dependents'];\r\n *\r\n * const pattern = mapArrayByProperties(customers, properties);\r\n * console.log(pattern);\r\n *\r\n * // [\r\n * //   { id: 1, name: 'Fulano', city: 'SÃ£o Paulo', genre: undefined, dependents: 2 },\r\n * //   { id: 2, name: 'Beltrano', city: 'Joinville', genre: 'Female', dependents: undefined },\r\n * //   { id: 3, name: 'Siclano', city: 'Joinville', genre: 'Male', dependents: 0 }\r\n * // ]\r\n * ```\r\n *\r\n * @param items {Array<any>} Array de items original.\r\n * @param properties {Array<string>} Array de string com a lista de propriedades que devem ser retornadas.\r\n *\r\n * @returns Array<any>\r\n */\r\nexport function mapArrayByProperties(items: Array<any> = [], properties: Array<string> = []): Array<any> {\r\n  return items.map(item => mapObjectByProperties(item, properties));\r\n}\r\n\r\n/**\r\n * Mapeia um novo objeto apenas com as propriedades definidas pelo desenvolvedor.\r\n *\r\n * Exemplo:\r\n *\r\n * ```\r\n * const person = { id: 1, name: 'Fulano', birthdate: '1980-11-01', genre: 'Male', city: 'SÃ£o Paulo', dependents: 2 };\r\n *\r\n * const properties = ['id', 'name'];\r\n *\r\n * const idAndName = mapObjectByProperties(person, properties);\r\n *\r\n * console.log(idAndName); // { id: 1, name: 'Fulano' }\r\n * ```\r\n *\r\n * @param object {Array<any>} Array de items original.\r\n * @param properties {Array<string>} Array de string com a lista de propriedades que devem ser retornadas.\r\n *\r\n * @returns Array<any>\r\n */\r\nexport function mapObjectByProperties(object: any = {}, properties: Array<string> = []) {\r\n  const getSelectedProperties = (selectedProperties, property) => ({ ...selectedProperties, [property]: object[property] });\r\n\r\n  return properties.reduce(getSelectedProperties, {});\r\n}\r\n\r\n/**\r\n * Retorna os valores de um objeto dentro de um array.\r\n *\r\n * > Simula o Object.values(obj), o mesmo deve ser removido assim que a versÃ£o typescrit for atualizada.\r\n *\r\n * @param object Objeto de onde serÃ¡ pego os valores.\r\n */\r\nexport function valuesFromObject(object: any = {}): Array<any> {\r\n  return Object.keys(object).map(property => object[property]);\r\n}\r\n\r\n/**\r\n * adiciona 0 no tempo informado, caso menor q 10\r\n *\r\n * @param time\r\n */\r\nexport function addZero(time: number) {\r\n  if (!time) {\r\n    return '00';\r\n  }\r\n\r\n  if (time < 10) {\r\n    return `0${time}`;\r\n  }\r\n\r\n  return time;\r\n}\r\n","export const poModalPasswordRecoveryLiterals = {\r\n  en: <any>{\r\n    cancelButton: 'Cancel',\r\n    closeButton: 'Close',\r\n    continueButton: 'Continue',\r\n    email: 'e-mail',\r\n    emailErrorMessagePhrase: 'Invalid e-mail format',\r\n    emailSentConfirmationPhrase: `We have sent the instructions and new password creation link to your e-mail.\r\n    If you did not receive it after a few minutes, check your spam box or click Resend.`,\r\n    emailSentTitle: 'E-mail sent',\r\n    forgotPasswordTitle: 'Forgot your password?',\r\n    insertCode: 'Type the code',\r\n    insertEmail: 'Enter your e-mail',\r\n    insertPhone: 'Enter your mobile number',\r\n    phoneErrorMessagePhrase: 'Invalid phone number',\r\n    prepositionIn: 'in',\r\n    prepositionOr: 'or',\r\n    recoveryPasswordPhrase: 'To recover your password we will send you a {0} with instructions.',\r\n    resendEmailButton: 'Resend',\r\n    resendSmsCodePhrase: 'If the code does not arrive within a few minutes, please send it again.',\r\n    sendAgainPhrase: 'If the code does not arrive within a few minutes',\r\n    sendAgain: 'send again.',\r\n    sendButton: 'Submit',\r\n    sentSmsCodePhrase: 'We sent a code for your mobile phone.',\r\n    sms: 'SMS',\r\n    smsCodeErrorMessagePhrase: 'Invalid code. Please re-enter or contact support',\r\n    supportContact: 'If you do not have access to {0} contact support',\r\n    telephone: 'telephone',\r\n    typeCodeTitle: 'Enter sent code'\r\n  },\r\n  es: <any>{\r\n    cancelButton: 'Cancelar',\r\n    closeButton: 'Cerrar',\r\n    continueButton: 'Continuar',\r\n    email: 'e-mail',\r\n    emailErrorMessagePhrase: 'Formato de correo electrÃ³nico no vÃ¡lido',\r\n    emailSentConfirmationPhrase: `Enviamos las instrucciones y enlace de creaciÃ³n de nueva contraseÃ±a para su correo electrÃ³nico.\r\n    Si no ha recibido despuÃ©s de unos minutos, compruebe su caja de spam o haga clic en Reenviar`,\r\n    emailSentTitle: 'E-mail enviado',\r\n    forgotPasswordTitle: 'Olvidaste tu contraseÃ±a?',\r\n    insertCode: 'Introduzca el cÃ³digo',\r\n    insertEmail: 'Introduce tu e-mail',\r\n    insertPhone: 'Introduce tu nÃºmero de celular',\r\n    phoneErrorMessagePhrase: 'NÃºmero de telÃ©fono no vÃ¡lido',\r\n    prepositionIn: 'en',\r\n    prepositionOr: 'u',\r\n    recoveryPasswordPhrase: 'Para recuperar su contraseÃ±a vamos a enviar un {0} con instrucciones.',\r\n    resendEmailButton: 'Reenviar',\r\n    resendSmsCodePhrase: 'Si el cÃ³digo no llega dentro de unos minutos, vuelva a enviar.',\r\n    sendAgain: 'envÃ­e de nuevo.',\r\n    sendAgainPhrase: 'Si el cÃ³digo no llega dentro de unos minutos',\r\n    sendButton: 'Enviar',\r\n    sentSmsCodePhrase: 'Enviamos un cÃ³digo para su celular.',\r\n    sms: 'SMS',\r\n    smsCodeErrorMessagePhrase: 'CÃ³digo no vÃ¡lido. Escriba de nuevo o pÃ³ngase en contacto con el soporte',\r\n    supportContact: 'Si no tiene acceso a {0} pÃ³ngase en contacto con el soporte',\r\n    telephone: 'telÃ©fono',\r\n    typeCodeTitle: 'Escribir cÃ³digo enviado'\r\n  },\r\n  pt: <any>{\r\n    cancelButton: 'Cancelar',\r\n    closeButton: 'Fechar',\r\n    continueButton: 'Continuar',\r\n    email: 'e-mail',\r\n    emailErrorMessagePhrase: 'Formato de e-mail invÃ¡lido',\r\n    emailSentConfirmationPhrase: `Enviamos as instruÃ§Ãµes e link de criaÃ§Ã£o de nova senha para o seu e-mail.\r\n    Caso nÃ£o tenha recebido apÃ³s alguns minutos, verifique sua caixa de spam ou clique em Reenviar.`,\r\n    emailSentTitle: 'E-mail enviado',\r\n    forgotPasswordTitle: 'Esqueceu sua senha?',\r\n    insertCode: 'Digite o cÃ³digo',\r\n    insertEmail: 'Insira seu e-mail',\r\n    insertPhone: 'Insira seu nÃºmero de celular',\r\n    phoneErrorMessagePhrase: 'NÃºmero de telefone invÃ¡lido',\r\n    prepositionIn: 'em',\r\n    prepositionOr: 'ou',\r\n    recoveryPasswordPhrase: 'Para recuperar sua senha vamos enviar um {0} com instruÃ§Ãµes.',\r\n    resendEmailButton: 'Reenviar',\r\n    resendSmsCodePhrase: 'Se o cÃ³digo nÃ£o chegar dentro de alguns minutos envie novamente',\r\n    sendAgain: 'envie novamente.',\r\n    sendAgainPhrase: 'Se o cÃ³digo nÃ£o chegar dentro de alguns minutos',\r\n    sendButton: 'Enviar',\r\n    sentSmsCodePhrase: 'Enviamos um cÃ³digo para seu celular cadastrado.',\r\n    sms: 'SMS',\r\n    smsCodeErrorMessagePhrase: 'CÃ³digo invÃ¡lido. Digite novamente ou contacte o suporte',\r\n    supportContact: 'Se nÃ£o tiver acesso ao {0} contacte o suporte',\r\n    telephone: 'telefone',\r\n    typeCodeTitle: 'Digitar cÃ³digo enviado'\r\n  },\r\n  ru: <any>{\r\n    cancelButton: 'Ð¾ÑÐ¼ÐµÐ½Ð¸ÑÑ',\r\n    closeButton: 'Ð±Ð»Ð¸Ð·ÐºÐ¾',\r\n    continueButton: 'Ð±Ð»Ð¸Ð·ÐºÐ¾',\r\n    email: 'Ð¿Ð¾ ÑÐ»ÐµÐºÑÑÐ¾Ð½Ð½Ð¾Ð¹ Ð¿Ð¾ÑÑÐµ',\r\n    emailErrorMessagePhrase: 'ÐÐµÐ²ÐµÑÐ½ÑÐ¹ ÑÐ¾ÑÐ¼Ð°Ñ ÑÐ»ÐµÐºÑÑÐ¾Ð½Ð½Ð¾Ð¹ Ð¿Ð¾ÑÑÑ',\r\n    emailSentConfirmationPhrase: `ÐÑ Ð¾ÑÐ¿ÑÐ°Ð²Ð¸Ð»Ð¸ Ð¸Ð½ÑÑÑÑÐºÑÐ¸Ð¸ Ð¸ Ð½Ð¾Ð²ÑÑ ÑÑÑÐ»ÐºÑ Ð´Ð»Ñ ÑÐ¾Ð·Ð´Ð°Ð½Ð¸Ñ Ð¿Ð°ÑÐ¾Ð»Ñ Ð´Ð»Ñ Ð²Ð°ÑÐµÐ¹ ÑÐ»ÐµÐºÑÑÐ¾Ð½Ð½Ð¾Ð¹ Ð¿Ð¾ÑÑÑ.\r\nÐÑÐ»Ð¸ Ð²Ñ Ð½Ðµ Ð¿Ð¾Ð»ÑÑÐ¸Ð»Ð¸ ÐµÐ³Ð¾ Ð² ÑÐµÑÐµÐ½Ð¸Ðµ Ð½ÐµÑÐºÐ¾Ð»ÑÐºÐ¸Ñ Ð¼Ð¸Ð½ÑÑ, ÑÑÑÐ°Ð½Ð¾Ð²Ð¸ÑÐµ ÑÐ»Ð°Ð¶Ð¾Ðº Ð¡Ð¿Ð°Ð¼ Ð¸Ð»Ð¸ Ð½Ð°Ð¶Ð¼Ð¸ÑÐµ ÐÐ°Ð»ÐµÐµ.`,\r\n    emailSentTitle: 'ÐÐ¸ÑÑÐ¼Ð¾ Ð¾ÑÐ¿ÑÐ°Ð²Ð»ÐµÐ½Ð¾',\r\n    forgotPasswordTitle: 'ÐÐ°Ð±ÑÐ»Ð¸ Ð¿Ð°ÑÐ¾Ð»Ñ?',\r\n    insertCode: 'ÐÐ²ÐµÐ´Ð¸ÑÐµ ÐºÐ¾Ð´',\r\n    insertEmail: 'ÐÐ²ÐµÐ´Ð¸ÑÐµ Ð°Ð´ÑÐµÑ ÑÐ»ÐµÐºÑÑÐ¾Ð½Ð½Ð¾Ð¹ Ð¿Ð¾ÑÑÑ',\r\n    insertPhone: 'ÐÐ²ÐµÐ´Ð¸ÑÐµ Ð½Ð¾Ð¼ÐµÑ Ð²Ð°ÑÐµÐ³Ð¾ Ð¼Ð¾Ð±Ð¸Ð»ÑÐ½Ð¾Ð³Ð¾ ÑÐµÐ»ÐµÑÐ¾Ð½Ð°',\r\n    phoneErrorMessagePhrase: 'ÐÐµÐ²ÐµÑÐ½ÑÐ¹ Ð½Ð¾Ð¼ÐµÑ ÑÐµÐ»ÐµÑÐ¾Ð½Ð°',\r\n    prepositionIn: 'Ð²',\r\n    prepositionOr: 'Ð¸Ð»Ð¸',\r\n    recoveryPasswordPhrase: 'ÐÐ»Ñ Ð²Ð¾ÑÑÑÐ°Ð½Ð¾Ð²Ð»ÐµÐ½Ð¸Ñ Ð²Ð°ÑÐµÐ³Ð¾ Ð¿Ð°ÑÐ¾Ð»Ñ Ð¼Ñ Ð²ÑÑÐ»ÐµÐ¼ {0} Ñ Ð¸Ð½ÑÑÑÑÐºÑÐ¸ÑÐ¼Ð¸.',\r\n    resendEmailButton: 'ÐÑÐ¿ÑÐ°Ð²Ð¸ÑÑ ÐµÑÐµ ÑÐ°Ð·',\r\n    resendSmsCodePhrase: 'ÐÑÐ»Ð¸ ÐºÐ¾Ð´ Ð½Ðµ Ð¿ÑÐ¸ÑÐ¾Ð´Ð¸Ñ ÑÐµÑÐµÐ· Ð½ÐµÑÐºÐ¾Ð»ÑÐºÐ¾ Ð¼Ð¸Ð½ÑÑ, Ð¿Ð¾Ð¿ÑÐ¾Ð±ÑÐ¹ÑÐµ ÐµÑÐµ ÑÐ°Ð·.',\r\n    sendAgain: 'Ð¾ÑÐ¿ÑÐ°Ð²Ð¸ÑÑ ÑÐ½Ð¾Ð²Ð°.',\r\n    sendAgainPhrase: 'ÐÑÐ»Ð¸ ÐºÐ¾Ð´ Ð½Ðµ Ð¿ÑÐ¸ÑÐ¾Ð´Ð¸Ñ ÑÐµÑÐµÐ· Ð½ÐµÑÐºÐ¾Ð»ÑÐºÐ¾ Ð¼Ð¸Ð½ÑÑ',\r\n    sendButton: 'Ð¿Ð¾ÑÐ»Ð°ÑÑ',\r\n    sentSmsCodePhrase: 'ÐÑ Ð¾ÑÐ¿ÑÐ°Ð²Ð»ÑÐµÐ¼ ÐºÐ¾Ð´ Ð½Ð° Ð²Ð°Ñ Ð·Ð°ÑÐµÐ³Ð¸ÑÑÑÐ¸ÑÐ¾Ð²Ð°Ð½Ð½ÑÐ¹ Ð¼Ð¾Ð±Ð¸Ð»ÑÐ½ÑÐ¹ ÑÐµÐ»ÐµÑÐ¾Ð½.',\r\n    sms: 'SMS',\r\n    smsCodeErrorMessagePhrase: 'ÐÐµÐ²ÐµÑÐ½ÑÐ¹ ÐºÐ¾Ð´. ÐÐ¾Ð²ÑÐ¾ÑÐ¸ÑÐµ Ð¸Ð»Ð¸ Ð¾Ð±ÑÐ°ÑÐ¸ÑÐµÑÑ Ð² ÑÐ»ÑÐ¶Ð±Ñ Ð¿Ð¾Ð´Ð´ÐµÑÐ¶ÐºÐ¸',\r\n    supportContact: 'ÐÑÐ»Ð¸ Ñ Ð²Ð°Ñ Ð½ÐµÑ Ð´Ð¾ÑÑÑÐ¿Ð° Ðº {0}, Ð¾Ð±ÑÐ°ÑÐ¸ÑÐµÑÑ Ð² ÑÐ»ÑÐ¶Ð±Ñ Ð¿Ð¾Ð´Ð´ÐµÑÐ¶ÐºÐ¸',\r\n    telephone: 'ÑÐµÐ»ÐµÑÐ¾Ð½',\r\n    typeCodeTitle: 'ÐÐ²ÐµÐ´Ð¸ÑÐµ Ð¾ÑÐ¿ÑÐ°Ð²Ð»ÐµÐ½Ð½ÑÐ¹ ÐºÐ¾Ð´'\r\n  }\r\n};\r\n","/**\r\n * @usedBy PoModalPasswordRecoveryComponent\r\n *\r\n * @description\r\n *\r\n * *Enum* para especificaÃ§Ã£o do tipo de recuperaÃ§Ã£o de senha.\r\n */\r\nexport enum PoModalPasswordRecoveryType {\r\n  /** Possibilita ao usuÃ¡rio optar por envio via email ou SMS */\r\n  All = 'all',\r\n\r\n  /** DefiniÃ§Ã£o para recuperaÃ§Ã£o apenas por email */\r\n  Email = 'email',\r\n\r\n  /** DefiniÃ§Ã£o para recuperaÃ§Ã£o apenas por SMS */\r\n  SMS = 'sms'\r\n\r\n}\r\n","import { EventEmitter, Input, Output } from '@angular/core';\r\n\r\nimport { browserLanguage, poLocaleDefault } from '../../utils/util';\r\n\r\nimport { poModalPasswordRecoveryLiterals } from './literals/i18n/po-modal-password-recovery-literals';\r\nimport { PoModalPasswordRecoveryType } from './enums/po-modal-password-recovery-type.enum';\r\n\r\nconst PoModalPasswordRecoveryDefaultMaxLength = 15;\r\nconst PoModalPasswordRecoveryDefaultMinLength = 15;\r\nconst PoModalPasswordRecoveryDefaultPhone = '(99) 99999-9999';\r\nconst PoModalPasswordRecoveryTypeDefault: PoModalPasswordRecoveryType = PoModalPasswordRecoveryType.Email;\r\n\r\n/**\r\n * @description\r\n *\r\n * O componente `po-modal-password-recovery` Ã© utilizado como template para solicitaÃ§Ã£o de troca de senha.\r\n *\r\n * Ã composto por uma modal que possui trÃªs telas, cada uma com as seguintes caracterÃ­sticas:\r\n *\r\n * - A primeira possui campos para preenchimento de email ou nÃºmero de telefone;\r\n * - Tela com campo para preenchimento de cÃ³digo SMS enviado para o nÃºmero de telefone enviado;\r\n * - A terceira se trata de uma confirmaÃ§Ã£o de envio de link para a caixa de email do usuÃ¡rio.\r\n *\r\n *\r\n * A propriedade `p-url-recovery` automatiza a rotina do componente e simplifica o processo\r\n * para recuperaÃ§Ã£o de senha, bastando definir uma url para requisiÃ§Ã£o dos recursos.\r\n * Seu detalhamento para uso pode ser visto logo abaixo em *propriedades*.\r\n * Caso julgue necessÃ¡rio, pode-se tambÃ©m definir manualmente a rotina do componente.\r\n *\r\n *\r\n * Para a modal de digitaÃ§Ã£o de cÃ³digo SMS, Ã© possÃ­vel definir uma mensagem de erro\r\n * customizada com a propriedade `p-code-error` e hÃ¡ um link para\r\n * reenvio de cÃ³digo por SMS. Ao reenviar, o evento `p-code-submit` envia um objeto com o telefone do usuÃ¡rio e a quantidade\r\n * de vezes em que o usuÃ¡rio fez a solicitaÃ§Ã£o de reenvio.\r\n *\r\n * > Ã indicada a utilizaÃ§Ã£o da tela de digitaÃ§Ã£o para envio de cÃ³digo SMS apenas\r\n * se a opÃ§Ã£o por envio SMS for disponibilizada para o usuÃ¡rio.\r\n *\r\n *\r\n * A modal de confirmaÃ§Ã£o contÃ©m uma aÃ§Ã£o de reenvio e o evento `p-submit`\r\n * Ã© quem passa o objeto contendo o email em conjunto com a quantidade de tentativas de reenvio.\r\n *\r\n * > A tela de confirmaÃ§Ã£o Ã© indicada para quando o usuÃ¡rio solicitar a troca atravÃ©s do email.\r\n *\r\n * > Os textos das modals sÃ£o prÃ©-definidos, imutÃ¡veis e sÃ£o traduzidos de acordo com o idioma do *browser* (pt, en e es)\r\n *\r\n * Para que as imagens sejam exibidas corretamente, Ã© necessÃ¡rio incluir o caminho delas ao projeto. Para isso, edite\r\n * o *assets* no arquivo **angular.json** da aplicaÃ§Ã£o na seguinte ordem:\r\n * ```\r\n *   \"assets\": [\r\n *     \"src/assets\",\r\n *     \"src/favicon.ico\",\r\n *     {\r\n *       \"glob\": \"**\\/*\",\r\n *       \"input\": \"node_modules/@portinari/style/images\",\r\n *       \"output\": \"assets/images\"\r\n *     }\r\n *   ]\r\n * ```\r\n */\r\nexport abstract class PoModalPasswordRecoveryBaseComponent {\r\n\r\n  private _contactEmail: string;\r\n  private _phoneMask = PoModalPasswordRecoveryDefaultPhone;\r\n  private _type: PoModalPasswordRecoveryType = PoModalPasswordRecoveryTypeDefault;\r\n\r\n  email: string;\r\n  maxLength = PoModalPasswordRecoveryDefaultMaxLength;\r\n  minLength = PoModalPasswordRecoveryDefaultMinLength;\r\n  modalPasswordRecoveryTypeAll: boolean;\r\n  phone: string;\r\n  smsCode: string;\r\n  smsCodeErrorMessage: string;\r\n\r\n  literals: { cancelButton: string, closeButton: string, continueButton: string, email: string, emailErrorMessagePhrase: string,\r\n    emailSentConfirmationPhrase: string, emailSentTitle: string, forgotPasswordTitle: string,\r\n    insertCode: string, insertEmail: string, insertPhone: string, phoneErrorMessagePhrase: string,\r\n    prepositionIn: string, prepositionOr: string, recoveryPasswordPhrase: string, resendEmailButton: string,\r\n    resendSmsCodePhrase: string, sendAgain: string, sendAgainPhrase: string, sendButton: string, sms: string, smsCode: string,\r\n    smsCodeErrorMessagePhrase: string, sentSmsCodePhrase: string, supportContact: string, telephone: string, typeCodeTitle: string } =\r\n    {\r\n      ...poModalPasswordRecoveryLiterals[poLocaleDefault],\r\n      ...poModalPasswordRecoveryLiterals[browserLanguage()],\r\n    };\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * DefiniÃ§Ã£o do e-mail que Ã© exibido na mensagem para contato de suporte.\r\n   */\r\n  @Input('p-contact-email') set contactEmail(value: string) {\r\n    this._contactEmail = value;\r\n\r\n    this.smsCodeErrorMessage = this.concatenateSMSErrorMessage(value);\r\n  }\r\n\r\n  get contactEmail() {\r\n    return this._contactEmail;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * DefiniÃ§Ã£o de mensagem de erro customizada para quando o usuÃ¡rio passar um cÃ³digo SMS invÃ¡lido ou errado.\r\n   */\r\n  @Input('p-code-error') codeError: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * DefiniÃ§Ã£o da mascara do campo de telefone.\r\n   *\r\n   * @default `(99) 99999-9999`\r\n   */\r\n  @Input('p-phone-mask') set phoneMask(value: string) {\r\n    this._phoneMask = value || PoModalPasswordRecoveryDefaultPhone;\r\n    this.minLength = this.maxLength = this._phoneMask.length;\r\n  }\r\n\r\n  get phoneMask() {\r\n    return this._phoneMask;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define o tipo de recuperaÃ§Ã£o de senha que serÃ¡ exibido.\r\n   *\r\n   * @default `PoModalPasswordRecoveryType.Email`\r\n   *\r\n   */\r\n  @Input('p-type') set type(value: PoModalPasswordRecoveryType) {\r\n    this._type = (<any>Object).values(PoModalPasswordRecoveryType).includes(value) ? value : PoModalPasswordRecoveryTypeDefault;\r\n  }\r\n\r\n  get type() {\r\n    return this._type;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Endpoint usado pelo template para requisiÃ§Ã£o do recurso. Quando preenchido,\r\n   * o mÃ©todos `p-submit` e `p-submit-code` serÃ£o ignorados e o componente adquirirÃ¡ automatizaÃ§Ã£o\r\n   * para o processo de solicitaÃ§Ã£o de troca de senha.\r\n   *\r\n   * ### Processos\r\n   * Ao digitar um valor vÃ¡lido no campo de email/telefone e pressionar **enviar**,\r\n   * o componente farÃ¡ uma requisiÃ§Ã£o `POST` na url especificada nesta propriedade passando o objeto contendo o valor definido pelo usuÃ¡rio.\r\n   *\r\n   * ```\r\n   * body {\r\n   *  email: email,\r\n   *  retry?: retry\r\n   * }\r\n   * ```\r\n   *\r\n   *\r\n   * #### RecuperaÃ§Ã£o por email\r\n   * Para a recuperaÃ§Ã£o de senha por **email**, o cÃ³digo de resposta HTTP de status esperado Ã© `204`.\r\n   *\r\n   * Em caso de **sucesso**, serÃ¡ exibida a modal de confirmaÃ§Ã£o de e-mail para o usuÃ¡rio.\r\n   *\r\n   *\r\n   * > A aÃ§Ã£o **Reenviar** na tela de confirmaÃ§Ã£o efetua uma nova requisiÃ§Ã£o\r\n   * passando-se o objeto com incremento para o valor da propriedade **retry**.\r\n   *\r\n   * *Processo finalizado.*\r\n   *\r\n   *\r\n   * #### RecuperaÃ§Ã£o por SMS\r\n   * Se a opÃ§Ã£o de recuperaÃ§Ã£o for por **SMS**, o cÃ³digo de status de sucesso deve ser `200`.\r\n   * Em caso de **sucesso**, abre-se a modal de digitaÃ§Ã£o de cÃ³digo SMS e a resposta\r\n   * desta requisiÃ§Ã£o deve retornar uma definiÃ§Ã£o de dados abaixo:\r\n   *\r\n   * ```\r\n   * 200:\r\n   *  {\r\n   *    hash: hash,\r\n   *    urlValidationCode?: url\r\n   *  }\r\n   * ```\r\n   *\r\n   *\r\n   * - O **hash** serÃ¡ o cÃ³digo de validaÃ§Ã£o da solicitaÃ§Ã£o do SMS para ser enviado juntamente com o cÃ³digo de verificaÃ§Ã£o do SMS;\r\n   * - **urlValidationCode** Ã© a url usada para validaÃ§Ã£o do cÃ³digo enviado por SMS.\r\n   *\r\n   *\r\n   * > Caso nÃ£o seja passado urlValidationCode, o endpoint usado para validaÃ§Ã£o do cÃ³digo serÃ¡ `<p-url-recovery>/validation`.\r\n   *\r\n   *\r\n   * #### ValidaÃ§Ã£o do cÃ³digo SMS\r\n   * Ao digitar um valor vÃ¡lido no campo de cÃ³digo SMS e pressionar **continuar**, o componente farÃ¡ uma requisiÃ§Ã£o `POST` contendo:\r\n   *\r\n   * ```\r\n   * POST /<p-url-recovery>/validation OU /<urlValidationCode>\r\n   * Body {\r\n   *  hash: hash,\r\n   *  code: code\r\n   * }\r\n   * ```\r\n   *\r\n   *\r\n   * O cÃ³digo de resposta HTTP de status esperado Ã© `200`.\r\n   *\r\n   * Em caso de **erro** na validaÃ§Ã£o do cÃ³digo SMS, a modal se mantÃ©m com o campo para digitaÃ§Ã£o\r\n   * de cÃ³digo SMS\r\n   *\r\n   *\r\n   * > Pode-se atribuir a mensagem de erro (message) para o atributo `p-code-error` conforme retorno abaixo:\r\n   *\r\n   * ```\r\n   * 400\r\n   *  {\r\n   *    error {\r\n   *      message: 'Error Message'\r\n   *    }\r\n   *  }\r\n   * ```\r\n   *\r\n   *\r\n   * Em caso de **sucesso**, espera-se a resposta desta requisiÃ§Ã£o retornando a seguinte definiÃ§Ã£o:\r\n   *\r\n   * ```\r\n   * 200:\r\n   *  {\r\n   *    token: token,\r\n   *    urlChangePassword?: url\r\n   *  }\r\n   * ```\r\n   *\r\n   *\r\n   * - **token**: Token de alteraÃ§Ã£o de senha;\r\n   * - **urlChangePassword**: url para o formulÃ¡rio de alteraÃ§Ã£o de senha.\r\n   *\r\n   *\r\n   * O componente estÃ¡ configurado para redirecionar para a url estabelecida em `urlChangePassword`.\r\n   *\r\n   * > Caso nÃ£o seja passado valor para urlChangePassword,\r\n   * a url usada para validaÃ§Ã£o serÃ¡ a `<p-url-recovery>/changePassword?token=<token>`.\r\n   *\r\n   * *Processo finalizado.*\r\n   */\r\n  @Input('p-url-recovery') urlRecovery?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * AÃ§Ã£o contendo como parÃ¢metro o cÃ³digo enviado por SMS e digitado pelo usuÃ¡rio.\r\n   *\r\n   * > Esta propriedade serÃ¡ ignorada se for definido valor para a propriedade `p-url-recovery`.\r\n   */\r\n  @Output('p-code-submit') codeSubmit = new EventEmitter<any>();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * AÃ§Ã£o contendo o email como parÃ¢metro e que Ã© executada quando o usuÃ¡rio clica sobres os botÃµes de 'enviar' e 'reenviar' e-mail.\r\n   *\r\n   * > Esta propriedade serÃ¡ ignorada se for definido valor para a propriedade `p-url-recovery`.\r\n   */\r\n  @Output('p-submit') submit = new EventEmitter<any>();\r\n\r\n  /**\r\n   * AcÃ£o para conclusÃ£o de processo e fechamento da modal. Indica-se sua utilizaÃ§Ã£o\r\n   * para apÃ³s o envio e validaÃ§Ã£o do cÃ³digo SMS enviado pelo usuÃ¡rio.\r\n   *\r\n   * > Nas modals em que hÃ¡ a aÃ§Ã£o de 'cancelar' dispensa-se o uso desta aÃ§Ã£o pois o componente jÃ¡ trata o fechamento da modal.\r\n   */\r\n  abstract completed(): void;\r\n\r\n  /**\r\n   * Abre a modal de preenchimento de email ou nÃºmero de telefone para solicitaÃ§Ã£o de troca de senha.\r\n   */\r\n  abstract open(): void;\r\n\r\n  /**\r\n   * Abre a modal de confirmaÃ§Ã£o de envio de email.\r\n   */\r\n  abstract openConfirmation(): void;\r\n\r\n  /**\r\n   * Abre a modal de preenchimento do cÃ³digo SMS enviado ao usuÃ¡rio.\r\n   */\r\n  abstract openSmsCode(): void;\r\n\r\n  private concatenateSMSErrorMessage(value: string) {\r\n    const literalCodeErrorMessage = this.literals.smsCodeErrorMessagePhrase;\r\n\r\n    return value && value !== '' ? `${literalCodeErrorMessage} ${this.literals.prepositionIn} ${value}.` : literalCodeErrorMessage;\r\n  }\r\n\r\n}\r\n","/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Enum para definiÃ§Ã£o do tipo de conteÃºdo exibido na modal.\r\n */\r\nexport enum PoModalPasswordRecoveryModalContent {\r\n\r\n  /** ExibiÃ§Ã£o de modal contendo campo para preenchimento de email ou nÃºmero de telefone */\r\n  Email = 'email',\r\n\r\n  /** ExibiÃ§Ã£o de modal contendo campo para inserÃ§Ã£o de cÃ³digo enviado por SMS */\r\n  SMSCode = 'smsCode',\r\n\r\n  /** ExibiÃ§Ã£o de modal de confirmaÃ§Ã£o de envio */\r\n  Confirmation = 'confirmation'\r\n\r\n}\r\n","import { HttpClient, HttpParams, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { PoModalPasswordRecovery } from './interfaces/po-modal-password-recovery.interface';\r\n\r\n@Injectable()\r\nexport class PoModalPasswordRecoveryService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  post(\r\n    urlRecovery: string,\r\n    item: PoModalPasswordRecovery,\r\n    params?: HttpParams | { [param: string]: string | Array<string>; }\r\n    ): Observable<HttpResponse<Object>> {\r\n    return this.http.post<any>(urlRecovery, item, { observe: 'response', params: params });\r\n  }\r\n\r\n}\r\n","import { Component, OnDestroy, ViewChild } from '@angular/core';\r\nimport { AbstractControl, NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { isExternalLink } from '../../utils/util';\r\nimport { PoI18nPipe, PoModalAction, PoModalComponent, PoRadioGroupOption } from '@portinari/portinari-ui';\r\n\r\nimport { PoModalPasswordRecovery } from './interfaces/po-modal-password-recovery.interface';\r\nimport { PoModalPasswordRecoveryBaseComponent } from './po-modal-password-recovery-base.component';\r\nimport { PoModalPasswordRecoveryModalContent } from './enums/po-modal-password-recovery-modal-content.enum';\r\nimport { PoModalPasswordRecoveryService } from './po-modal-password-recovery.service';\r\nimport { PoModalPasswordRecoveryType } from './enums/po-modal-password-recovery-type.enum';\r\n\r\n/**\r\n * @docsExtends PoModalPasswordRecoveryBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-modal-password-recovery-basic\" title=\"Portinari Modal Password Recovery Basic\">\r\n *  <file name=\"sample-po-modal-password-recovery-basic/sample-po-modal-password-recovery-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-modal-password-recovery-basic/sample-po-modal-password-recovery-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-modal-password-recovery-labs\" title=\"Portinari Modal Password Recovery Labs\">\r\n *  <file name=\"sample-po-modal-password-recovery-labs/sample-po-modal-password-recovery-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-modal-password-recovery-labs/sample-po-modal-password-recovery-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-modal-password-recovery-request\" title=\"Portinari Modal Password Recovery Request\">\r\n *  <file name=\"sample-po-modal-password-recovery-request/sample-po-modal-password-recovery-request.component.html\"> </file>\r\n *  <file name=\"sample-po-modal-password-recovery-request/sample-po-modal-password-recovery-request.component.ts\"> </file>\r\n * </example>\r\n */\r\n\r\n@Component({\r\n  selector: 'po-modal-password-recovery',\r\n  templateUrl: './po-modal-password-recovery.component.html'\r\n})\r\n\r\nexport class PoModalPasswordRecoveryComponent extends PoModalPasswordRecoveryBaseComponent implements OnDestroy {\r\n\r\n  chosenTypeFormOption: string = PoModalPasswordRecoveryType.Email;\r\n  codeMask: string = '9 9 9 9 9 9';\r\n  control: AbstractControl;\r\n  emailModal: boolean = true;\r\n  emailModalPhrases = { firstPhrase: null as string, secondPhrase: null as string };\r\n  endpoint: string = '.';\r\n  invalidCode: boolean = false;\r\n  invalidEmail: boolean = false;\r\n  modalTitle: string;\r\n  modalType: PoModalPasswordRecoveryModalContent = PoModalPasswordRecoveryModalContent.Email;\r\n  showCustomCodeError: boolean;\r\n  smsCodeErrorMessagePhrase: string;\r\n  submittedCodeValue = {} as PoModalPasswordRecovery;\r\n  submittedContactValue = {} as PoModalPasswordRecovery;\r\n\r\n  private passwordRecoverySubscription: Subscription;\r\n  private smsBodyResponse;\r\n  private smsCodeSubscription: Subscription;\r\n\r\n  @ViewChild('emailForm', { static: false }) emailForm: NgForm;\r\n\r\n  @ViewChild('recoveryModal', { static: true }) recoveryModalElement: PoModalComponent;\r\n\r\n  @ViewChild('smsCodeForm', { static: false }) smsCodeForm: NgForm;\r\n\r\n  primaryAction: PoModalAction = { label: undefined, action: () => { } };\r\n\r\n  secondaryAction: PoModalAction = { label: undefined, action: () => { } };\r\n\r\n  typeFormOptions: Array<PoRadioGroupOption> = [\r\n    { label: 'e-mail', value: PoModalPasswordRecoveryType.Email },\r\n    { label: 'SMS', value: PoModalPasswordRecoveryType.SMS }\r\n  ];\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private poI18nPipe: PoI18nPipe,\r\n    private poModalPasswordRecoveryService: PoModalPasswordRecoveryService\r\n    ) {\r\n    super();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.passwordRecoverySubscription) {\r\n      this.passwordRecoverySubscription.unsubscribe();\r\n    }\r\n\r\n    if (this.smsCodeSubscription) {\r\n      this.smsCodeSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  completed() {\r\n    this.cancelAction();\r\n  }\r\n\r\n  formModelChangesCheck(form: NgForm) {\r\n    const invalidForm = form.invalid;\r\n    this.invalidEmail = invalidForm && form.dirty;\r\n    this.primaryAction.disabled = invalidForm;\r\n\r\n    if (this.modalType === PoModalPasswordRecoveryModalContent.SMSCode) {\r\n      const codeError: boolean = this.codeError !== undefined && this.codeError !== '';\r\n      this.showCustomCodeError = codeError && form.pristine;\r\n    }\r\n  }\r\n\r\n  getInputType(type) {\r\n    this.type = type;\r\n    this.pipeModalPhrases();\r\n    setTimeout(() => {\r\n      this.control = this.emailForm.controls[type];\r\n      this.formModelChangesCheck(this.emailForm);\r\n      this.resetFormFields(this.control);\r\n    });\r\n  }\r\n\r\n  open() {\r\n    const control = this.checkFormType(this.type);\r\n    this.control = this.emailForm.controls[control];\r\n    this.setEmailModalPhrasesAndActions();\r\n    this.formModelChangesCheck(this.emailForm);\r\n    this.recoveryModalElement.open();\r\n  }\r\n\r\n  openConfirmation() {\r\n    this.modalTitle = this.literals.emailSentTitle;\r\n    this.modalType = PoModalPasswordRecoveryModalContent.Confirmation;\r\n    this.setActions(this.cancelAction, this.literals.closeButton, this.submitAction, this.literals.resendEmailButton, false);\r\n  }\r\n\r\n  openSmsCode() {\r\n    this.modalTitle = this.literals.typeCodeTitle;\r\n    this.modalType = PoModalPasswordRecoveryModalContent.SMSCode;\r\n    this.setActions(this.submitSmsCodeAction, this.literals.continueButton, this.cancelAction, this.literals.cancelButton, true);\r\n\r\n    setTimeout(() => {\r\n      this.control = this.smsCodeForm.controls['sms'];\r\n      this.formModelChangesCheck(this.smsCodeForm);\r\n    });\r\n  }\r\n\r\n  resendSmsCode() {\r\n    this.incrementRetryAttempts();\r\n    if (this.urlRecovery) {\r\n      this.submitActionRequest(this.submittedContactValue, this.type);\r\n    } else {\r\n      this.submit.emit(this.submittedContactValue);\r\n    }\r\n  }\r\n\r\n  private assignSmsResponse(responseObj) {\r\n    this.smsBodyResponse = Object.assign({}, {hash: responseObj.hash});\r\n    if (responseObj.urlValidationCode) {\r\n      this.smsBodyResponse = Object.assign(this.smsBodyResponse, {urlValidationCode: responseObj.urlValidationCode});\r\n    }\r\n  }\r\n\r\n  private cancelAction() {\r\n    this.resetFormFields(this.control);\r\n    this.submittedContactValue = {};\r\n\r\n    this.chosenTypeFormOption = PoModalPasswordRecoveryType.Email;\r\n    this.modalType = PoModalPasswordRecoveryModalContent.Email;\r\n    this.type = this.modalPasswordRecoveryTypeAll ? PoModalPasswordRecoveryType.All : this.type;\r\n    this.recoveryModalElement.close();\r\n  }\r\n\r\n  private checkFormType(type: PoModalPasswordRecoveryType) {\r\n    return type !== PoModalPasswordRecoveryType.All ? type : PoModalPasswordRecoveryType.Email;\r\n  }\r\n\r\n  private formReset(control: AbstractControl) {\r\n    control.markAsPristine();\r\n    control.markAsUntouched();\r\n    control.updateValueAndValidity();\r\n  }\r\n\r\n  private getEmitValue(type: PoModalPasswordRecoveryType) {\r\n    return type === PoModalPasswordRecoveryType.SMS ? this.phone : this.email;\r\n  }\r\n\r\n  private incrementRetryAttempts() {\r\n    this.submittedContactValue.retry = (this.submittedContactValue.retry + 1 || 1);\r\n  }\r\n\r\n  private openExternalLink(url, queryParam) {\r\n    window.open(`${url}?token=${queryParam}`, '_self');\r\n  }\r\n\r\n  private openInternalLink(url, endpoint, queryParam) {\r\n    this.router.navigate([`${url}/${endpoint}`], { queryParams: { token: queryParam } });\r\n  }\r\n\r\n  private pipeModalPhrases() {\r\n    if (this.type === PoModalPasswordRecoveryType.SMS) {\r\n      this.emailModalPhrases.firstPhrase = this.setPipeArguments(this.literals.recoveryPasswordPhrase, this.literals.sms);\r\n      this.emailModalPhrases.secondPhrase = this.setPipeArguments(this.literals.supportContact, this.literals.telephone);\r\n    } else {\r\n      this.emailModalPhrases.firstPhrase = this.setPipeArguments(this.literals.recoveryPasswordPhrase, this.literals.email);\r\n      this.emailModalPhrases.secondPhrase = this.setPipeArguments(this.literals.supportContact, this.literals.email);\r\n    }\r\n  }\r\n\r\n  private redirectToChangePassword(recoveryToken: PoModalPasswordRecovery) {\r\n    const urlChangePassword = recoveryToken.urlChangePassword;\r\n    if (urlChangePassword) {\r\n      isExternalLink(urlChangePassword) ?\r\n      this.openExternalLink(urlChangePassword, recoveryToken.token) :\r\n      this.openInternalLink(this.urlRecovery, urlChangePassword, recoveryToken.token);\r\n    } else {\r\n      const changePasswordEndpoint = 'changePassword';\r\n      this.openInternalLink(this.urlRecovery, changePasswordEndpoint, recoveryToken.token);\r\n    }\r\n  }\r\n\r\n  private resetFormFields(control) {\r\n    this.formReset(control);\r\n    this.email = undefined;\r\n    this.phone = undefined;\r\n    this.smsCode = undefined;\r\n  }\r\n\r\n  private setActions(primaryAction, primarylabel, secondaryAction, secondaryLabel, disabled) {\r\n    this.primaryAction.action = () => primaryAction.call(this);\r\n    this.primaryAction.label = primarylabel;\r\n    this.secondaryAction.action = () => secondaryAction.call(this);\r\n    this.secondaryAction.label = secondaryLabel;\r\n    this.primaryAction.disabled = disabled;\r\n  }\r\n\r\n  private setEmailModalPhrasesAndActions() {\r\n    this.modalTitle = this.literals.forgotPasswordTitle;\r\n    this.pipeModalPhrases();\r\n    this.modalPasswordRecoveryTypeAll = this.type === PoModalPasswordRecoveryType.All;\r\n    this.setActions(this.submitAction, this.literals.sendButton, this.cancelAction, this.literals.cancelButton, true);\r\n  }\r\n\r\n  private setRequestEndpoint(urlValidationCode?: string) {\r\n    const endpoint = urlValidationCode || 'validation';\r\n\r\n    return `${this.urlRecovery}/${endpoint}`;\r\n  }\r\n\r\n  private setPipeArguments(literalAttr: string, arg: string) {\r\n    return this.poI18nPipe.transform(literalAttr, arg);\r\n  }\r\n\r\n  private submitAction() {\r\n    this.modalType === PoModalPasswordRecoveryModalContent.Confirmation ? this.incrementRetryAttempts() : this.formReset(this.control);\r\n    this.submittedContactValue[this.checkFormType(this.type)] = this.getEmitValue(this.type);\r\n    if (this.urlRecovery) {\r\n      this.submitActionRequest(this.submittedContactValue, this.type);\r\n    } else {\r\n      this.submit.emit(this.submittedContactValue);\r\n    }\r\n  }\r\n\r\n  private submitActionRequest(data: PoModalPasswordRecovery, modalType: PoModalPasswordRecoveryType) {\r\n    const params = modalType === PoModalPasswordRecoveryType.SMS ? { type: 'sms' } : undefined;\r\n\r\n    this.passwordRecoverySubscription =\r\n    this.poModalPasswordRecoveryService.post(this.urlRecovery, data, params)\r\n    .subscribe(response => {\r\n      if ((modalType === PoModalPasswordRecoveryType.Email || modalType === PoModalPasswordRecoveryType.All) && response.status === 204) {\r\n        this.openConfirmation();\r\n      } else if (modalType === PoModalPasswordRecoveryType.SMS && response.status === 200) {\r\n        this.assignSmsResponse(response.body);\r\n        this.openSmsCode();\r\n      }\r\n    });\r\n  }\r\n\r\n  private submitSmsCodeAction() {\r\n    this.submittedCodeValue.code = this.smsCode;\r\n\r\n    if (this.urlRecovery) {\r\n      this.submittedCodeValue = Object.assign(this.submittedCodeValue, {hash: this.smsBodyResponse.hash});\r\n      this.submitSmsCodeRequest(this.submittedCodeValue);\r\n\r\n    } else {\r\n      this.codeSubmit.emit(this.submittedCodeValue);\r\n    }\r\n    this.resetFormFields(this.control);\r\n  }\r\n\r\n  private submitSmsCodeRequest(data: PoModalPasswordRecovery) {\r\n    this.smsCodeSubscription = this.poModalPasswordRecoveryService\r\n    .post(this.setRequestEndpoint(this.smsBodyResponse.urlValidationCode), data)\r\n    .subscribe(\r\n      response => {\r\n        const successStatus = response.status === 200;\r\n        if (successStatus) {\r\n          this.completed();\r\n          this.redirectToChangePassword(response.body);\r\n        }\r\n      },\r\n      error => {\r\n        this.codeError = error.error.message;\r\n        this.openSmsCode();\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Componente utilizado para exibiÃ§Ã£o da mensagem customizada de erro em um campo de formulÃ¡rio.\r\n */\r\n@Component({\r\n  selector: 'po-modal-password-recovery-error-message',\r\n  templateUrl: './po-modal-password-recovery-error-message.component.html'\r\n})\r\n\r\nexport class PoModalPasswordRecoveryErrorMessageComponent {\r\n\r\n  /** Texto exibido na mensagem de erro. */\r\n  @Input('p-text') text: string;\r\n\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { PoFieldModule, PoI18nPipe, PoModalModule } from '@portinari/portinari-ui';\r\n\r\nimport { PoModalPasswordRecoveryComponent } from './po-modal-password-recovery.component';\r\nimport { PoModalPasswordRecoveryErrorMessageComponent\r\n} from './po-modal-password-recovery-error-message/po-modal-password-recovery-error-message.component';\r\nimport { PoModalPasswordRecoveryService } from './po-modal-password-recovery.service';\r\n\r\n/**\r\n * @description\r\n *\r\n * MÃ³dulo do template do po-modal-password-recovery.\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n\r\n    PoFieldModule,\r\n    PoModalModule\r\n  ],\r\n  declarations: [\r\n    PoModalPasswordRecoveryComponent,\r\n    PoModalPasswordRecoveryErrorMessageComponent\r\n  ],\r\n  exports: [\r\n    PoModalPasswordRecoveryComponent,\r\n    PoModalPasswordRecoveryErrorMessageComponent\r\n  ],\r\n  providers: [PoI18nPipe, PoModalPasswordRecoveryService]\r\n})\r\nexport class PoModalPasswordRecoveryModule { }\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { browserLanguage, convertToBoolean, isTypeof } from './../../utils/util';\r\nimport { PoSelectOption } from '@portinari/portinari-ui';\r\n\r\n@Component({\r\n  selector: 'po-page-background',\r\n  templateUrl: './po-page-background.component.html'\r\n})\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Componente para definiÃ§Ã£o de cor de fundo e dos logotipos primÃ¡rio e secundÃ¡rio para os templates\r\n * de `po-page-login` e demais templates de login.\r\n */\r\nexport class PoPageBackgroundComponent implements OnInit {\r\n\r\n  private _logo?: string;\r\n  private _secondaryLogo?: string;\r\n  private _showSelectLanguage?: boolean = false;\r\n\r\n  selectedLanguageOption: string;\r\n\r\n  selectLanguageOptions: Array<PoSelectOption> = [\r\n    { label: 'English', value: 'en' },\r\n    { label: 'EspaÃ±ol', value: 'es' },\r\n    { label: 'PortuguÃªs', value: 'pt' },\r\n    { label: 'PÑÑÑÐºÐ¸Ð¹', value: 'ru' }\r\n  ];\r\n\r\n  /** Insere uma imagem de destaque ao lado direito do container. */\r\n  @Input('p-background') background?: string;\r\n\r\n  /** Designa se o logotipo deve desaparecer em resoluÃ§Ãµes menores. */\r\n  @Input('p-hide-logo') hideLogo?: boolean;\r\n\r\n  /** Texto de destaque sobreposto Ã  imagem de destaque. Essa opÃ§Ã£o Ã© utilizada em conjunto com o atributo `p-background`. */\r\n  @Input('p-highlight-info') highlightInfo?: string;\r\n\r\n  /** Caminho para a logomarca localizada na parte superior. */\r\n  @Input('p-logo') set logo(value: any) {\r\n    this._logo = isTypeof(value, 'string') && value.trim() ? value : undefined;\r\n  }\r\n\r\n  get logo() {\r\n    return this._logo;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Caminho para a logomarca localizada no rodapÃ©.\r\n   */\r\n  @Input('p-secondary-logo') set secondaryLogo(value: any) {\r\n    this._secondaryLogo = isTypeof(value, 'string') && value.trim() ? value : undefined;\r\n  }\r\n\r\n  get secondaryLogo() {\r\n    return this._secondaryLogo;\r\n  }\r\n\r\n  /** Define se o seletor de idiomas deve ser exibido. */\r\n  @Input('p-show-select-language') set showSelectLanguage(showSelectLanguage: boolean) {\r\n    this._showSelectLanguage = convertToBoolean(showSelectLanguage);\r\n  }\r\n  get showSelectLanguage() {\r\n    return this._showSelectLanguage;\r\n  }\r\n\r\n  /**\r\n   * Evento disparado ao selecionar alguma opÃ§Ã£o no seletor de idiomas.\r\n   * Para este evento serÃ¡ passado como parÃ¢metro o valor de idioma selecionado.\r\n   */\r\n  @Output('p-selected-language') selectedLanguage?: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  ngOnInit() {\r\n    this.selectedLanguageOption = browserLanguage();\r\n  }\r\n\r\n  onChangeLanguage() {\r\n    this.selectedLanguage.emit(this.selectedLanguageOption);\r\n  }\r\n\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { PoDividerModule, PoFieldModule } from '@portinari/portinari-ui';\r\n\r\nimport { PoPageBackgroundComponent } from './po-page-background.component';\r\n\r\n/**\r\n * @description\r\n *\r\n * MÃ³dulo do template do po-page-background.\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule,\r\n    PoDividerModule,\r\n    PoFieldModule,\r\n  ],\r\n  declarations: [\r\n    PoPageBackgroundComponent\r\n  ],\r\n  exports: [\r\n    PoPageBackgroundComponent\r\n  ]\r\n})\r\nexport class PoPageBackgroundModule { }\r\n","/**\r\n * @usedBy PoPageBlockedUserComponent\r\n *\r\n * @description\r\n *\r\n * *Enum* para os tipos de motivo de bloqueio de usuÃ¡rio. As informaÃ§Ãµes modificam conforme o motivo selecionado pelo desenvolvedor.\r\n */\r\nexport enum PoPageBlockedUserReason {\r\n\r\n  /** Sem definiÃ§Ã£o; a tela exibirÃ¡ conteÃºdo de bloqueio genÃ©rico. */\r\n  None = 'none',\r\n\r\n  /** DefiniÃ§Ã£o para tentativas de acesso esgotadas. */\r\n  ExceededAttempts = 'exceededAttempts',\r\n\r\n  /** DefiniÃ§Ã£o para senha expirada. */\r\n  ExpiredPassword = 'expiredPassword',\r\n\r\n}\r\n","import { Input, OnInit } from '@angular/core';\r\n\r\nimport { PoPageBlockedUserReason } from './enums/po-page-blocked-user-reason.enum';\r\nimport { PoPageBlockedUserReasonParams } from './interfaces/po-page-blocked-user-reason-params.interface';\r\n\r\nconst PoPageBlockedUserReasonDefault: PoPageBlockedUserReason = PoPageBlockedUserReason.None;\r\nconst PoPageBlockedUserParamsDefault: PoPageBlockedUserReasonParams = { attempts: 5, days: 90, hours: 24 };\r\n\r\n/**\r\n * @description\r\n *\r\n * O componente `po-page-blocked-user` Ã© utilizado como template para tela de bloqueio de usuÃ¡rio.\r\n * Ã possÃ­vel definir entre trÃªs tipos de telas para alertar o usuÃ¡rio sobre um eventual bloqueio de login.\r\n *\r\n * Cada modelo de bloqueio possui uma imagem e texto adequados Ã  situaÃ§Ã£o.\r\n * Os textos das telas sÃ£o prÃ©-definidos e imutÃ¡veis, porÃ©m,\r\n * Ã© possÃ­vel estipular parÃ¢metros como dias, horas e tentativas de acesso esgotadas.\r\n *\r\n * Por fim, hÃ¡ propriedades para adiÃ§Ã£o de telefone e/ou email para contato e tambÃ©m a definiÃ§Ã£o para a url de retorno.\r\n *\r\n * Para que as imagens sejam exibidas corretamente, Ã© necessÃ¡rio incluir o caminho delas ao projeto. Para isso, edite\r\n * o *assets* no arquivo **angular.json** da aplicaÃ§Ã£o na seguinte ordem:\r\n * ```\r\n *   \"assets\": [\r\n *     \"src/assets\",\r\n *     \"src/favicon.ico\",\r\n *     {\r\n *       \"glob\": \"**\\/*\",\r\n *       \"input\": \"node_modules/@portinari/style/images\",\r\n *       \"output\": \"assets/images\"\r\n *     }\r\n *   ]\r\n * ```\r\n *\r\n * _______________\r\n *\r\n * #### Praticidade\r\n * O `po-page-blocked-user`, assim como suas propriedades, pode tambÃ©m ser transmitido diretamente pelas configuraÃ§Ã£os de rota e,\r\n * desta maneira, dispensa-se qualquer menÃ§Ã£o e/ou importaÃ§Ã£o no restante da aplicaÃ§Ã£o. O exemplo abaixo exemplifica\r\n * a forma dinÃ¢mica com a qual o template pode ser gerado se navegasse para uma rota denominada como `/access-denied`:\r\n *\r\n *\r\n * ```\r\n *   import { PoPageBlockedUserComponent, PoPageBlockedUserReason } from '@portinari/portinari-templates';\r\n *\r\n *   ...\r\n *   const routes: Routes = [\r\n *     {\r\n *       path: 'access-denied', component: PoPageBlockedUserComponent, data: {\r\n *         contactEmail: 'dev.portinari@portinari.com',\r\n *         contactPhone: '0800 1234 000',\r\n *         reason: PoPageBlockedUserReason.ExpiredPassword,\r\n *         urlBack: '/home'\r\n *       }\r\n *     }\r\n *     ...\r\n *   ];\r\n *\r\n *   @NgModule({\r\n *     imports: [RouterModule.forRoot(routes)],\r\n *     exports: [RouterModule]\r\n *   })\r\n *   export class AppRoutingModule { }\r\n * ```\r\n *\r\n * > Ã essencial que siga a nomenclatura dos atributos exemplificados acima para sua efetiva funcionalidade.\r\n *\r\n */\r\nexport class PoPageBlockedUserBaseComponent {\r\n\r\n  private _params: PoPageBlockedUserReasonParams = {...PoPageBlockedUserParamsDefault};\r\n  private _reason: PoPageBlockedUserReason = PoPageBlockedUserReason.None;\r\n  private _urlBack: string = '/';\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Valor para o email de contato que deve ser exibido. A aÃ§Ã£o estÃ¡ de acordo com o protocolo MAILTO e Ã© possÃ­vel definir\r\n   * tanto rotas internas quanto externas.\r\n   */\r\n  @Input('p-contact-email') contactEmail: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Valor para o telefone de contato que deve ser exibido. A aÃ§Ã£o estÃ¡ de acordo com o protocolo TEL.\r\n   *\r\n   * > A propriedade nÃ£o contem tratamento de mÃ¡scara, fica a critÃ©rio do desenvolvedor defini-la.\r\n   */\r\n  @Input('p-contact-phone') contactPhone: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * DesignaÃ§Ã£o de valores usados para a customizaÃ§Ã£o da mensagem de bloqueio.\r\n   * Confira abaixo os valores prÃ©-definidos.\r\n   *\r\n   * ```\r\n   *  const customLiterals: PoPageBlockedUserReasonParams = {\r\n   *    attempts: 5,\r\n   *    days: 90,\r\n   *    hours: 24\r\n   *  };\r\n   * ```\r\n   *\r\n   * > Salientamos a importÃ¢ncia e atenÃ§Ã£o para configuraÃ§Ã£o desses valores conforme definidos no projeto.\r\n   *\r\n   * > Veja os parÃ¢metros customizÃ¡veis na interface `PoPageBlockedUserReasonParams`.\r\n   *\r\n   */\r\n  @Input('p-params') set params(value: PoPageBlockedUserReasonParams) {\r\n    if (value instanceof Object) {\r\n      const keys = Object.keys(value);\r\n      const newParams = {...PoPageBlockedUserParamsDefault};\r\n\r\n      keys.forEach(key => {\r\n        newParams[key] = value[key];\r\n      });\r\n\r\n      this._params = newParams;\r\n    } else {\r\n      this._params = {...PoPageBlockedUserParamsDefault};\r\n    }\r\n  }\r\n\r\n  get params() {\r\n    return this._params;\r\n  }\r\n\r\n  /** Caminho para a logomarca localizada na parte superior, caso nÃ£o seja definida ou seja invÃ¡lida assume a logo padrÃ£o da PORTINARI. */\r\n  @Input('p-logo') logo?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * DefiniÃ§Ã£o de motivo de bloqueio de usuÃ¡rio. As informaÃ§Ãµes modificam conforme o motivo selecionado.\r\n   *\r\n   * > Veja os valores vÃ¡lidos no *enum* `PoPageBlockedUserReason`.\r\n   *\r\n   * @default `PoPageBlockedUserReason.None`\r\n   */\r\n  @Input('p-reason') set reason(value: PoPageBlockedUserReason) {\r\n    this._reason = (<any>Object).values(PoPageBlockedUserReason).includes(value) ? value : PoPageBlockedUserReasonDefault;\r\n  }\r\n\r\n  get reason() {\r\n    return this._reason;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Caminho para a logomarca localizada no rodapÃ©.\r\n   */\r\n  @Input('p-secondary-logo') secondaryLogo?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * URL para a aÃ§Ã£o de retorno da pÃ¡gina.\r\n   *\r\n   * @default `/`\r\n   */\r\n  @Input('p-url-back') set urlBack(url: string) {\r\n    this._urlBack = url;\r\n  }\r\n\r\n  get urlBack() {\r\n    return this._urlBack;\r\n  }\r\n\r\n}\r\n","import { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\nimport { browserLanguage, isExternalLink, poLocaleDefault } from '../../utils/util';\r\n\r\nimport { PoPageBlockedUserBaseComponent } from './po-page-blocked-user-base.component';\r\n\r\nexport const poPageBlockedUserButtonLiterals: Object = {\r\n  en: <any> {\r\n    primaryButton: 'Back to home screen',\r\n  },\r\n  es: <any> {\r\n    primaryButton: 'Volver al inicio',\r\n  },\r\n  pt: <any> {\r\n    primaryButton: 'Voltar para o inÃ­cio',\r\n  },\r\n  ru: <any> {\r\n    primaryButton: 'ÐÐµÑÐµÐ¹ÑÐ¸ Ðº Ð½Ð°ÑÐ°Ð»Ñ ÑÑÑÐ°Ð½Ð¸ÑÑ',\r\n  }\r\n};\r\n\r\n/**\r\n * @docsExtends PoPageBlockedUserBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-page-blocked-user-basic\" title=\"Portinari Page Blocked User Basic\">\r\n *  <file name=\"sample-po-page-blocked-user-basic/sample-po-page-blocked-user-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-page-blocked-user-basic/sample-po-page-blocked-user-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-page-blocked-user-labs\" title=\"Portinari Page Blocked User Labs\">\r\n *  <file name=\"sample-po-page-blocked-user-labs/sample-po-page-blocked-user-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-page-blocked-user-labs/sample-po-page-blocked-user-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-page-blocked-user-exceeded-attempts\" title=\"Portinari Page Blocked User Exceeded Attempts\">\r\n *  <file name=\"sample-po-page-blocked-user-exceeded-attempts/sample-po-page-blocked-user-exceeded-attempts.component.html\"> </file>\r\n *  <file name=\"sample-po-page-blocked-user-exceeded-attempts/sample-po-page-blocked-user-exceeded-attempts.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-page-blocked-user-expired-password\" title=\"Portinari Page Blocked User Expired Password\">\r\n *  <file name=\"sample-po-page-blocked-user-expired-password/sample-po-page-blocked-user-expired-password.component.html\"> </file>\r\n *  <file name=\"sample-po-page-blocked-user-expired-password/sample-po-page-blocked-user-expired-password.component.ts\"> </file>\r\n * </example>\r\n */\r\n\r\n@Component({\r\n  selector: 'po-page-blocked-user',\r\n  templateUrl: './po-page-blocked-user.component.html'\r\n})\r\n\r\nexport class PoPageBlockedUserComponent extends PoPageBlockedUserBaseComponent implements OnInit {\r\n\r\n  literals = {\r\n    ...poPageBlockedUserButtonLiterals[poLocaleDefault],\r\n    ...poPageBlockedUserButtonLiterals[browserLanguage()],\r\n  };\r\n\r\n  constructor(private activatedRoute: ActivatedRoute, private router: Router) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.checkingForRouteMetadata(this.activatedRoute.snapshot.data);\r\n  }\r\n\r\n  navigateTo(url: string) {\r\n    isExternalLink(url) ?  window.open(url) : this.router.navigate([url || '/']);\r\n  }\r\n\r\n  private checkingForMetadataProperty(object, property) {\r\n    if (Object.prototype.hasOwnProperty.call(object, property)) {\r\n      return object[property];\r\n    }\r\n  }\r\n\r\n  private checkingForRouteMetadata(data) {\r\n    if (Object.keys(data).length !== 0) {\r\n      this.contactEmail = this.checkingForMetadataProperty(data, 'contactEmail') || this.contactEmail;\r\n      this.contactPhone = this.checkingForMetadataProperty(data, 'contactPhone') || this.contactPhone;\r\n      this.reason = this.checkingForMetadataProperty(data, 'reason') || this.reason;\r\n      this.urlBack = this.checkingForMetadataProperty(data, 'urlBack') || this.urlBack;\r\n    }\r\n  }\r\n\r\n}\r\n","import { AfterViewInit, ChangeDetectorRef, Component, ElementRef, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\r\n\r\nconst poPageBlockedUserContactItemMargin = 16;\r\n\r\n@Component({\r\n  selector: 'po-page-blocked-user-contacts',\r\n  templateUrl: './po-page-blocked-user-contacts.component.html'\r\n})\r\nexport class PoPageBlockedUserContactsComponent implements AfterViewInit, OnChanges {\r\n\r\n  literals: Object;\r\n  overflowItem: boolean = false;\r\n\r\n  private mailText: string;\r\n  private phoneText: string;\r\n\r\n  @Input('p-email') email: string;\r\n\r\n  @Input('p-phone') phone: string;\r\n\r\n  @ViewChild('contactGroup', { static: true }) contactGroup: ElementRef;\r\n\r\n  @ViewChild('mailItem', { static: true }) mailItem: ElementRef;\r\n\r\n  @ViewChild('phoneItem', { static: true }) phoneItem: ElementRef;\r\n\r\n  constructor(private changeDetector: ChangeDetectorRef) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.checkContactItemWidth();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.email || changes.phone) {\r\n      this.checkContactItemWidth();\r\n    }\r\n  }\r\n\r\n  private checkContactItemWidth() {\r\n    if ( !this.email || !this.phone ) {\r\n      this.overflowItem = true;\r\n      return;\r\n    } else {\r\n      setTimeout(() => {\r\n        const phoneWidth = this.phoneItem.nativeElement.offsetWidth;\r\n        const mailWidth = this.mailItem.nativeElement.offsetWidth;\r\n        const contactGroupHalfWidth = this.contactGroup.nativeElement.offsetWidth / 2;\r\n\r\n        this.overflowItem = phoneWidth > contactGroupHalfWidth || mailWidth > contactGroupHalfWidth - poPageBlockedUserContactItemMargin;\r\n      });\r\n    }\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n}\r\n","export const poPageBlockedUserLiterals = {\r\n  none: {\r\n    pt: {\r\n      title: 'Opa!',\r\n      firstPhrase: 'Tivemos que bloquear essa tela temporariamente.',\r\n      secondPhrase: 'Mas nÃ£o se preocupe! Basta fazer seu login novamente.'\r\n    },\r\n    en: {\r\n      title: 'Oops!',\r\n      firstPhrase: 'We had to temporarily block this screen.',\r\n      secondPhrase: 'But do not worry! Just sign in again.'\r\n    },\r\n    es: {\r\n      title: 'Opa!',\r\n      firstPhrase: 'Tuvimos que bloquear esta pantalla temporalmente.',\r\n      secondPhrase: 'Â¡Pero no se preocupe! SÃ³lo tienes que iniciar sesiÃ³n de nuevo.'\r\n    },\r\n  },\r\n  exceededAttempts: {\r\n    pt: {\r\n      title:\r\n        'Opa!',\r\n      firstPhrase:\r\n        `Para sua seguranÃ§a, apÃ³s {0} tentativa(s) de senha seu usuÃ¡rio fica bloqueado e nÃ£o pode ser acessado em {1} hora(s) :( `,\r\n      secondPhrase:\r\n        'Isso Ã© para evitar que hackers invadam sua conta.',\r\n      thirdPhrase:\r\n        'Mas nÃ£o se preocupe! Se vocÃª for o dono da conta e apenas esqueceu sua senha, basta entrar em contato com o suporte.'\r\n    },\r\n    en: {\r\n      title:\r\n        'Oops!',\r\n      firstPhrase:\r\n        `For your security, after {0} attempt(s) of password\r\n        your user gets blocked and can not be accessed in {1} hour(s) :(`,\r\n      secondPhrase:\r\n        'This is to prevent hackers from hacking into your account.',\r\n      thirdPhrase:\r\n        'But do not worry! If you are the owner of the account and just forgot your password, just contact support.'\r\n    },\r\n    es: {\r\n      title:\r\n        'Opa!',\r\n      firstPhrase:\r\n        `Para su seguridad, despuÃ©s de {0} intento(s) de contraseÃ±a\r\n        su usuario queda bloqueado y no puede ser accedido en {1} hora(s) :(`,\r\n      secondPhrase:\r\n        'Esto es para evitar que los hackers invadan su cuenta.',\r\n      thirdPhrase:\r\n        `Â¡Pero no se preocupe! Si usted es el dueÃ±o de la cuenta\r\n        y acaba de olvidar su contraseÃ±a, simplemente pÃ³ngase en contacto con el soporte.`\r\n    }\r\n  },\r\n  expiredPassword: {\r\n    pt: {\r\n      title:\r\n        'Opa! Sua senha expirou',\r\n      firstPhrase:\r\n        `A cada {0} dia(s) Ã© preciso criar uma nova senha por questÃ£o de seguranÃ§a. ApÃ³s esses {0} dia(s) seu acesso Ã© bloqueado :(`,\r\n      secondPhrase:\r\n        'Mas nÃ£o se preocupe! Basta entrar em contato com o administrador do sistema.'\r\n    },\r\n    en: {\r\n      title:\r\n        'Oops! Your Password has expired',\r\n      firstPhrase:\r\n        `Every {0} day(s) you need to create a new password for security reasons.\r\n        After these {0} day(s) your access is blocked :(`,\r\n      secondPhrase:\r\n        'But do not worry! Just contact your system administrator.'\r\n    },\r\n    es: {\r\n      title:\r\n        'Opa! Su contraseÃ±a ha caducado',\r\n      firstPhrase:\r\n        `Cada {0} dÃ­a(s) es necesario crear una nueva contraseÃ±a por razones de seguridad.\r\n        DespuÃ©s de estos {0} dÃ­a(s) su acceso estÃ¡ bloqueado :(`,\r\n      secondPhrase:\r\n        'Â¡Pero no se preocupe! SÃ³lo tienes que ponerse en contacto con el administrador del sistema.'\r\n    }\r\n  }\r\n};\r\n","import { ChangeDetectorRef, Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\n\r\nimport { browserLanguage, poLocaleDefault } from '../../../utils/util';\r\n\r\nimport { poPageBlockedUserLiterals } from './../literals/i18n/po-page-blocked-user-literals';\r\nimport { PoPageBlockedUserReason } from '../enums/po-page-blocked-user-reason.enum';\r\nimport { PoPageBlockedUserReasonParams } from '../interfaces/po-page-blocked-user-reason-params.interface';\r\n\r\n@Component({\r\n  selector: 'po-page-blocked-user-reason',\r\n  templateUrl: './po-page-blocked-user-reason.component.html'\r\n})\r\nexport class PoPageBlockedUserReasonComponent implements OnChanges, OnInit {\r\n\r\n  literalParams;\r\n  literals: {title: string, firstPhrase: string, secondPhrase: string, thirdPhrase: string};\r\n\r\n  @Input('p-params') params: PoPageBlockedUserReasonParams;\r\n\r\n  @Input('p-reason') reason: PoPageBlockedUserReason;\r\n\r\n  constructor(private changeDetector: ChangeDetectorRef) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.reason || changes.params) {\r\n      this.getLiterals();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getLiterals();\r\n  }\r\n\r\n  getImageByReasonType() {\r\n    let reasonImage;\r\n\r\n    switch (this.reason) {\r\n      case 'none': {\r\n        reasonImage = 'big-lock';\r\n        break;\r\n      }\r\n      case 'exceededAttempts': {\r\n        reasonImage = 'blocked-user';\r\n        break;\r\n      }\r\n      case 'expiredPassword': {\r\n        reasonImage = 'expired';\r\n        break;\r\n      }\r\n    }\r\n    return `./assets/images/${reasonImage}.svg`;\r\n  }\r\n\r\n  getParams() {\r\n    this.literalParams =\r\n      this.reason === 'expiredPassword' ? [this.params.days, this.params.days] : [this.params.attempts, this.params.hours];\r\n  }\r\n\r\n  private getLiterals() {\r\n    this.getParams();\r\n\r\n    this.literals = {\r\n      ...poPageBlockedUserLiterals[this.reason][poLocaleDefault],\r\n      ...poPageBlockedUserLiterals[this.reason][browserLanguage()],\r\n    };\r\n\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { PoModule } from '@portinari/portinari-ui';\r\n\r\nimport { PoPageBackgroundModule } from '../po-page-background/index';\r\nimport { PoPageBlockedUserComponent } from './po-page-blocked-user.component';\r\nimport { PoPageBlockedUserContactsComponent } from './po-page-blocked-user-contacts/po-page-blocked-user-contacts.component';\r\nimport { PoPageBlockedUserReasonComponent } from './po-page-blocked-user-reason/po-page-blocked-user-reason.component';\r\n\r\n/**\r\n * @description\r\n *\r\n * MÃ³dulo do template do po-page-blocked-user.\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n\r\n    PoModule,\r\n    PoPageBackgroundModule,\r\n  ],\r\n  declarations: [\r\n    PoPageBlockedUserComponent,\r\n    PoPageBlockedUserContactsComponent,\r\n    PoPageBlockedUserReasonComponent,\r\n  ],\r\n  exports: [\r\n    PoPageBlockedUserComponent,\r\n    PoPageBlockedUserContactsComponent,\r\n    PoPageBlockedUserReasonComponent,\r\n  ]\r\n})\r\nexport class PoPageBlockedUserModule { }\r\n","import { EventEmitter, Input, Output } from '@angular/core';\r\n\r\nimport { PoModalAction } from '@portinari/portinari-ui';\r\n\r\nimport { convertToBoolean, isExternalLink, isTypeof } from '../../utils/util';\r\n\r\nimport { PoPageChangePasswordRecovery } from './interfaces/po-page-change-password-recovery.interface';\r\nimport { PoPageChangePasswordRequirement } from './interfaces/po-page-change-password-requirement.interface';\r\n\r\n/**\r\n * @description\r\n *\r\n * O componente `po-page-change-password` Ã© utilizado como template para tela de cadastro ou alteraÃ§Ã£o de senha.\r\n *\r\n * Apresenta dicas e regras para senhas mais seguras e tambÃ©m possibilidade de personalizar o redirecionamento para as telas\r\n * 'esqueceu a senha', 'voltar' e 'entrar no sistema'. Os textos das telas sÃ£o prÃ©-definidos e imutÃ¡veis.\r\n *\r\n * A propriedade `p-url-new-password` automatiza a rotina do template e simplifica o processo de cadastro/alteraÃ§Ã£o de senha, bastando\r\n * definir uma url para POST das informaÃ§Ãµes digitadas pelo usuÃ¡rio.  A flexibilidade e praticidade podem chegar a um nÃ­vel em que o\r\n * desenvolvimento da aplicaÃ§Ã£o no *client side* Ã© desprovida de qualquer cÃ³digo-fonte relacionado Ã  rotina de cadastro/alteraÃ§Ã£o de senha.\r\n * Seu detalhamento para uso pode ser visto logo abaixo em *propriedades*.\r\n * Caso julgue necessÃ¡rio, pode-se tambÃ©m definir manualmente a rotina do componente.\r\n *\r\n * Para que as imagens sejam exibidas corretamente, Ã© necessÃ¡rio incluir o caminho delas ao projeto. Para isso, edite\r\n * o *assets* no arquivo **angular.json** da aplicaÃ§Ã£o na seguinte ordem:\r\n * ```\r\n *   \"assets\": [\r\n *     \"src/assets\",\r\n *     \"src/favicon.ico\",\r\n *     {\r\n *       \"glob\": \"**\\/*\",\r\n *       \"input\": \"node_modules/@portinari/style/images\",\r\n *       \"output\": \"assets/images\"\r\n *     }\r\n *   ]\r\n * ```\r\n */\r\nexport abstract class PoPageChangePasswordBaseComponent {\r\n\r\n  private _hideCurrentPassword: boolean = false;\r\n  private _recovery: string | PoPageChangePasswordRecovery | Function;\r\n  private _requirements: Array<PoPageChangePasswordRequirement> = [];\r\n  private _urlHome: string = '/';\r\n  protected validatorChange: any;\r\n\r\n  confirmPassword: string;\r\n  currentPassword: string;\r\n  modalAction: PoModalAction;\r\n  newPassword: string;\r\n  recoveryUrlType: string;\r\n  showRequirements: boolean;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Esconde o campo `Senha atual` para que o template seja para criaÃ§Ã£o de senha.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-hide-current-password') set hideCurrentPassword(value: boolean) {\r\n    this._hideCurrentPassword = convertToBoolean(value);\r\n  }\r\n\r\n  get hideCurrentPassword(): boolean {\r\n    return this._hideCurrentPassword;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Caminho para a logomarca localizada na parte superior.\r\n   *\r\n   * > Caso seja indefinida o espaÃ§o se mantÃ©m preservado porÃ©m vazio.\r\n   */\r\n  @Input('p-logo') logo?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * URL para a aÃ§Ã£o do link `Esqueceu a senha`.\r\n   *\r\n   * A propriedade aceita os seguintes tipos:\r\n   *\r\n   * - **String**: informe uma url externa ou uma rota vÃ¡lida;\r\n   * - **Function**: pode-se customizar a aÃ§Ã£o. Para esta possilidade basta atribuir:\r\n   * ```\r\n   * <po-page-change-password>\r\n   *      [recovery]=\"this.myFunc.bind(this)\";\r\n   * </po-page-change-password>\r\n   * ```\r\n   *\r\n   * - **PoPageChangePasswordRecovery**: cria-se vÃ­nculo automÃ¡tico com o template **po-modal-password-recovery**.\r\n   *   O objeto deve conter a **url** para requisiÃ§Ã£o dos recursos e pode-se definir o **tipo** de modal para recuperaÃ§Ã£o de senha,\r\n   *   **email** para contato e **mÃ¡scara** do campo de telefone.\r\n   *\r\n   * > Caso nÃ£o tenha valor o link `Esqueceu a senha` desaparece.\r\n   */\r\n  @Input('p-recovery') set recovery(value: string | Function | PoPageChangePasswordRecovery) {\r\n    this._recovery = value;\r\n\r\n    if (isTypeof(value, 'string')) {\r\n      this.recoveryUrlType = isExternalLink(value) ? 'externalLink' : 'internalLink';\r\n    }\r\n  }\r\n\r\n  get recovery() {\r\n    return this._recovery;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Lista de regras para criaÃ§Ã£o e alteraÃ§Ã£o de senha.\r\n   */\r\n  @Input('p-requirements') set requirements(value: Array<PoPageChangePasswordRequirement>) {\r\n    this._requirements = value || [];\r\n    this.showRequirements = this._requirements.length > 0;\r\n  }\r\n  get requirements() {\r\n    return this._requirements;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Caminho para a logomarca localizada no rodapÃ©.\r\n   */\r\n  @Input('p-secondary-logo') secondaryLogo?: string;\r\n\r\n  /**\r\n   * Token para solicitaÃ§Ã£o de troca/recuperaÃ§Ã£o de senha.\r\n   *\r\n   * > Esta propriedade serÃ¡ ignorada caso exista um token como parÃ¢metro na URL inicial do template.\r\n   */\r\n  @Input('p-token') token?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * URL para a aÃ§Ã£o de retorno da pÃ¡gina.\r\n   *\r\n   * > O botÃ£o `Voltar` aparece apenas para telas de alteraÃ§Ã£o de senha, ou seja, sÃ³ aparece se a propriedade `p-hide-current-password` for\r\n   * falsa.\r\n   *\r\n   * @default `/`\r\n   */\r\n  @Input('p-url-back') urlBack: string = '/';\r\n\r\n  /**\r\n   * Endpoint usado pelo template para realizar um POST. Quando preenchido, o mÃ©todo `p-submit` serÃ¡ ignorado e o componente adquirirÃ¡\r\n   * automatizaÃ§Ã£o para o processo de cadastro/troca de senha.\r\n   *\r\n   * ### Processo\r\n   * Ao digitar um valor vÃ¡lido nos campos de senha e pressionar **salvar**,\r\n   * o componente farÃ¡ uma requisiÃ§Ã£o `POST` na url especificada nesta propriedade passando o objeto contendo os valores definidos pelo\r\n   * usuÃ¡rio.\r\n   *\r\n   * ```\r\n   * body {\r\n   *  token?: token,\r\n   *  oldPassword?: oldPassword,\r\n   *  newPassword: newPassword\r\n   * }\r\n   * ```\r\n   *\r\n   * O cÃ³digo de resposta HTTP de status esperado Ã© `204`.\r\n   *\r\n   * Em caso de **sucesso**, serÃ¡ exibida a modal de confirmaÃ§Ã£o de senha alterada.\r\n   *\r\n   * > O token serÃ¡ informado pela propriedade `p-token`do componente ou por um *query parameter* na URL do template.\r\n   *\r\n   * *Processo finalizado.*\r\n   *\r\n   * _______________\r\n   *\r\n   * #### Praticidade\r\n   * As informaÃ§Ãµes do serviÃ§o de autenticaÃ§Ã£o tambÃ©m podem ser transmitidas diretamente pelas configuraÃ§Ã£os de rota e, desta maneira,\r\n   * dispensa-se qualquer menÃ§Ã£o e/ou importaÃ§Ã£o do componente `po-page-change-password` no restante da aplicaÃ§Ã£o. O exemplo abaixo\r\n   * exemplifica a forma dinÃ¢mica com a qual o template de tela de troca de senha pode ser gerado ao navegar para rota `/change-password`, e\r\n   * tambÃ©m como ele se comunica com o serviÃ§o para efetuaÃ§Ã£o do processo de troca de senha do usuÃ¡rio e solicitaÃ§Ã£o de nova senha.\r\n   * Basta definir nas configuraÃ§Ãµes de rota:\r\n   *\r\n   *\r\n   * ```\r\n   *   import { PoModalPasswordRecoveryType, PoPageChangePasswordComponent } from '@portinari/portinari-templates';\r\n   *\r\n   *   ...\r\n   *   const routes: Routes = [\r\n   *     {\r\n   *       path: 'change-password', component: PoPageChangePasswordComponent, data: {\r\n   *         serviceApi: 'https://portinari.io/sample/api/new-password',\r\n   *         recovery: {\r\n   *           url: 'https://portinari.io/sample/api/users',\r\n   *           type: PoModalPasswordRecoveryType.All,\r\n   *           contactMail: 'dev.portinari@portinari.com',\r\n   *           phoneMask: '9-999-999-9999'\r\n   *         }\r\n   *       }\r\n   *     }\r\n   *     ...\r\n   *   ];\r\n   *\r\n   *   @NgModule({\r\n   *     imports: [RouterModule.forRoot(routes)],\r\n   *     exports: [RouterModule]\r\n   *   })\r\n   *   export class AppRoutingModule { }\r\n   * ```\r\n   *\r\n   *\r\n   * O metadado `serviceApi` deve ser a **url** para requisiÃ§Ã£o dos recursos de troca de senha. E `recovery` Ã© a interface\r\n   * `PoPageChangePasswordRecovery` responsÃ¡vel pelas especificaÃ§Ãµes contidas na modal de recuperaÃ§Ã£o de senha.\r\n   *\r\n   * > Ã essencial que siga a nomenclatura dos atributos exemplificados acima para sua efetiva funcionalidade.\r\n   *\r\n   */\r\n  @Input('p-url-new-password') urlNewPassword?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * URL para a aÃ§Ã£o do botÃ£o `Entrar no sistema` da modal de confirmaÃ§Ã£o que aparece apÃ³s salvar a senha ou se chamada pelo mÃ©todo\r\n   * `openConfirmation`.\r\n   *\r\n   * @default `/`\r\n   */\r\n  @Input('p-url-home') set urlHome(value: string) {\r\n    this._urlHome = value;\r\n    this.modalAction.action = this.navigateTo.bind(this, this.urlHome);\r\n  }\r\n  get urlHome() {\r\n    return this._urlHome;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * FunÃ§Ã£o executada ao submeter o form pelo botÃ£o salvar.\r\n   *\r\n   * Caso definida essa funÃ§Ã£o, a modal de confirmaÃ§Ã£o nÃ£o aparece, mas pode ser chamada pelo\r\n   * mÃ©todo `openConfirmation`. Exemplo:\r\n   *\r\n   * ```\r\n   * @ViewChild(PoPageChangePasswordComponent) changePassword: PoPageChangePasswordComponent;\r\n   *\r\n   * onSubmit() {\r\n   *  this.changePassword.openConfirmation();\r\n   * }\r\n   *\r\n   * ```\r\n   * > Esta propriedade serÃ¡ ignorada se for definido valor para a propriedade `p-url-new-password`.\r\n   */\r\n  @Output('p-submit') submit: EventEmitter<any> = new EventEmitter();\r\n\r\n  abstract navigateTo(url: string): void;\r\n\r\n}\r\n","export const poPageChangePasswordLiterals = {\r\n  en: <any> {\r\n    backButton: 'Back',\r\n    confirmPassword: 'Confirm password',\r\n    createNewPassword: 'Create new password',\r\n    createNewPasswordPhrase: 'Protect your account with a personal password created by you',\r\n    currentPassword: 'Current password',\r\n    enterSystemButton: 'Enter the system',\r\n    forgotPassword: 'Forgot your password?',\r\n    newPassword: 'New password',\r\n    passwordSuccessfullyCreated: 'Password successfully created!',\r\n    passwordSuccessfullyUpdated: 'Password successfully updated!',\r\n    requirements: 'Password requirements',\r\n    safetyTips: 'Safety tips!',\r\n    safetyTipsFirst: 'is used in other accounts;',\r\n    safetyTipsPhrase: 'Avoid a password that:',\r\n    safetyTipsSecond: 'has personal information like your name, nickname or family names;',\r\n    safetyTipsThird: 'that uses obvious sequences like \"123\" or obvious words like \"password\";',\r\n    saveButton: 'Save',\r\n  },\r\n  es: <any> {\r\n    backButton: 'Volver',\r\n    confirmPassword: 'Confirmar seÃ±a',\r\n    createNewPassword: 'Crear nueva contraseÃ±a',\r\n    createNewPasswordPhrase: 'Proteger su cuenta con una contraseÃ±a personal creada por usted',\r\n    currentPassword: 'ContraseÃ±a actual',\r\n    enterSystemButton: 'Entrar en el sistema',\r\n    forgotPassword: 'Â¿Olvidaste tu contraseÃ±a?',\r\n    newPassword: 'Nueva contraseÃ±a',\r\n    passwordSuccessfullyCreated: 'ContraseÃ±a creada correctamente!',\r\n    passwordSuccessfullyUpdated: 'ContraseÃ±a correctamente actualizada!',\r\n    requirements: 'Requisitos de contraseÃ±a',\r\n    safetyTips: 'Consejos de seguridad!',\r\n    safetyTipsFirst: 'se utilice en otras cuentas;',\r\n    safetyTipsPhrase: 'Evite una contraseÃ±a que:',\r\n    safetyTipsSecond: 'utiliza informaciÃ³n personal como su nombre, apellido o nombre de familia;',\r\n    safetyTipsThird: 'utilice secuencias muy obvias como \"1234\" o \"abcd\" o palabras obvias como \"contraseÃ±a\";',\r\n    saveButton: 'Guardar',\r\n  },\r\n  pt: <any> {\r\n    backButton: 'Voltar',\r\n    confirmPassword: 'Confirmar senha',\r\n    createNewPassword: 'Criar nova senha',\r\n    createNewPasswordPhrase: 'Proteja sua conta com uma senha pessoal criada por vocÃª',\r\n    currentPassword: 'Senha atual',\r\n    enterSystemButton: 'Entrar no sistema',\r\n    forgotPassword: 'Esqueceu sua senha?',\r\n    newPassword: 'Nova senha',\r\n    passwordSuccessfullyCreated: 'Senha criada com sucesso!',\r\n    passwordSuccessfullyUpdated: 'Senha alterada com sucesso!',\r\n    requirements: 'Requisitos de senha',\r\n    safetyTips: 'Dicas de seguranÃ§a!',\r\n    safetyTipsFirst: 'seja usada em outras contas;',\r\n    safetyTipsPhrase: 'Evite uma senha que:',\r\n    safetyTipsSecond: 'usa informaÃ§Ãµes pessoais como seu nome, apelido ou nome de familiares;',\r\n    safetyTipsThird: 'use sequÃªncias muito Ã³bvias como \"1234\" ou \"abcd\" ou palavras Ã³bvias como âsenhaâ;',\r\n    saveButton: 'Salvar',\r\n  },\r\n  ru: <any> {\r\n    backButton: 'Ð²Ð¾Ð·Ð²ÑÐ°ÑÐµÐ½Ð¸Ðµ',\r\n    confirmPassword: 'ÐÐ¾Ð´ÑÐ²ÐµÑÐ´Ð¸ÑÐµ Ð¿Ð°ÑÐ¾Ð»Ñ',\r\n    createNewPassword: 'Ð¡Ð¾Ð·Ð´Ð°ÑÑ Ð½Ð¾Ð²ÑÐ¹ Ð¿Ð°ÑÐ¾Ð»Ñ',\r\n    createNewPasswordPhrase: 'ÐÐ°ÑÐ¸ÑÐ¸ÑÐµ ÑÐ²Ð¾Ð¹ Ð°ÐºÐºÐ°ÑÐ½Ñ Ñ Ð¿Ð¾Ð¼Ð¾ÑÑÑ Ð»Ð¸ÑÐ½Ð¾Ð³Ð¾ Ð¿Ð°ÑÐ¾Ð»Ñ.',\r\n    currentPassword: 'Ð¢ÐµÐºÑÑÐ¸Ð¹ Ð¿Ð°ÑÐ¾Ð»Ñ',\r\n    enterSystemButton: 'ÐÑÐ¾Ð´ Ð² ÑÐ¸ÑÑÐµÐ¼Ñ',\r\n    forgotPassword: 'ÐÐ°Ð±ÑÐ»Ð¸ Ð¿Ð°ÑÐ¾Ð»Ñ?',\r\n    newPassword: 'ÐÐ¾Ð²ÑÐ¹ Ð¿Ð°ÑÐ¾Ð»Ñ',\r\n    passwordSuccessfullyCreated: 'ÐÐ°ÑÐ¾Ð»Ñ ÑÑÐ¿ÐµÑÐ½Ð¾ ÑÐ¾Ð·Ð´Ð°Ð½!',\r\n    passwordSuccessfullyUpdated: 'ÐÐ°ÑÐ¾Ð»Ñ ÑÑÐ¿ÐµÑÐ½Ð¾ Ð¸Ð·Ð¼ÐµÐ½ÐµÐ½!',\r\n    requirements: 'Ð¢ÑÐµÐ±Ð¾Ð²Ð°Ð½Ð¸Ñ Ðº Ð¿Ð°ÑÐ¾Ð»Ñ',\r\n    safetyTips: 'Ð¡Ð¾Ð²ÐµÑÑ Ð¿Ð¾ Ð±ÐµÐ·Ð¾Ð¿Ð°ÑÐ½Ð¾ÑÑÐ¸!',\r\n    safetyTipsFirst: 'Ð¸ÑÐ¿Ð¾Ð»ÑÐ·Ð¾Ð²Ð°ÑÑÑÑ Ð½Ð° Ð´ÑÑÐ³Ð¸Ñ ÑÑÐµÑÐ°Ñ;',\r\n    safetyTipsPhrase: 'ÐÐ·Ð±ÐµÐ³Ð°Ð¹ÑÐµ Ð¿Ð°ÑÐ¾Ð»Ñ, ÐºÐ¾ÑÐ¾ÑÑÐ¹:',\r\n    safetyTipsSecond: 'Ð¸ÑÐ¿Ð¾Ð»ÑÐ·ÑÐµÑ Ð»Ð¸ÑÐ½ÑÑ Ð¸Ð½ÑÐ¾ÑÐ¼Ð°ÑÐ¸Ñ, ÑÐ°ÐºÑÑ ââÐºÐ°Ðº Ð²Ð°ÑÐµ Ð¸Ð¼Ñ, ÑÐ°Ð¼Ð¸Ð»Ð¸Ñ Ð¸Ð»Ð¸ ÑÐ°Ð¼Ð¸Ð»Ð¸Ñ;',\r\n    safetyTipsThird: 'Ð¸ÑÐ¿Ð¾Ð»ÑÐ·ÑÐ¹ÑÐµ Ð¾ÑÐµÐ½Ñ Ð¾ÑÐµÐ²Ð¸Ð´Ð½ÑÐµ ÑÑÑÐ¾ÐºÐ¸, ÑÐ°ÐºÐ¸Ðµ ÐºÐ°Ðº \"1234\" Ð¸Ð»Ð¸ \"abcd\", Ð¸Ð»Ð¸ ÑÐ°ÐºÐ¸Ðµ Ð¾ÑÐµÐ²Ð¸Ð´Ð½ÑÐµ ÑÐ»Ð¾Ð²Ð°, ÐºÐ°Ðº \"Ð¿Ð°ÑÐ¾Ð»Ñ\";',\r\n    saveButton: 'ÑÐºÐ¾Ð½Ð¾Ð¼Ð¸ÑÑ',\r\n  }\r\n};\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class PoPageChangePasswordService {\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  post(url: string, item: any): Observable<HttpResponse<Object>> {\r\n    return this.http.post<any>(url, item, { observe: 'response' });\r\n  }\r\n}\r\n","import { AfterViewInit, Component, ComponentRef, OnDestroy, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { PoComponentInjectorService, PoModalAction, PoModalComponent } from '@portinari/portinari-ui';\r\n\r\nimport { browserLanguage, isExternalLink, isTypeof, poLocaleDefault } from '../../utils/util';\r\n\r\nimport { PoModalPasswordRecoveryComponent } from '../po-modal-password-recovery/po-modal-password-recovery.component';\r\nimport { PoModalPasswordRecoveryType } from '../po-modal-password-recovery/enums/po-modal-password-recovery-type.enum';\r\nimport { PoPageChangePassword } from './interfaces/po-page-change-password.interface';\r\nimport { PoPageChangePasswordBaseComponent } from './po-page-change-password-base.component';\r\nimport { poPageChangePasswordLiterals } from './literals/i18n/po-page-change-password-literals';\r\nimport { PoPageChangePasswordRecovery } from './interfaces/po-page-change-password-recovery.interface';\r\nimport { PoPageChangePasswordRequirement } from './interfaces/po-page-change-password-requirement.interface';\r\nimport { PoPageChangePasswordService } from './po-page-change-password.service';\r\n\r\n/**\r\n * @docsExtends PoPageChangePasswordBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-page-change-password-basic\" title=\"Portinari Page Change Password Basic\">\r\n *  <file name=\"sample-po-page-change-password-basic/sample-po-page-change-password-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-page-change-password-basic/sample-po-page-change-password-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-page-change-password-labs\" title=\"Portinari Page Change Password Labs\">\r\n *  <file name=\"sample-po-page-change-password-labs/sample-po-page-change-password-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-page-change-password-labs/sample-po-page-change-password-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-page-change-password-modify\" title=\"Portinari Page Change Password Modify\">\r\n *  <file name=\"sample-po-page-change-password-modify/sample-po-page-change-password-modify.component.html\"> </file>\r\n *  <file name=\"sample-po-page-change-password-modify/sample-po-page-change-password-modify.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-page-change-password-create\" title=\"Portinari Page Change Password Create\">\r\n *  <file name=\"sample-po-page-change-password-create/sample-po-page-change-password-create.component.html\"> </file>\r\n *  <file name=\"sample-po-page-change-password-create/sample-po-page-change-password-create.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-page-change-password-request\" title=\"Portinari Page Change Password Request\">\r\n *  <file name=\"sample-po-page-change-password-request/sample-po-page-change-password-request.component.html\"> </file>\r\n *  <file name=\"sample-po-page-change-password-request/sample-po-page-change-password-request.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-page-change-password',\r\n  templateUrl: './po-page-change-password.component.html'\r\n})\r\n\r\nexport class PoPageChangePasswordComponent extends PoPageChangePasswordBaseComponent implements AfterViewInit, OnDestroy, OnInit {\r\n\r\n  private newPasswordSubscription: Subscription;\r\n\r\n  readonly literals: { backButton: string, confirmPassword: string, createNewPassword: string, createNewPasswordPhrase: string,\r\n    currentPassword: string, enterSystemButton: string, forgotPassword: string, newPassword: string, passwordSuccessfullyCreated: string,\r\n    passwordSuccessfullyUpdated: string, requirements: string, safetyTips: string, safetyTipsPhrase: string, safetyTipsFirst: string,\r\n    safetyTipsSecond: string, safetyTipsThird: string, saveButton: string } =\r\n    {\r\n      ...poPageChangePasswordLiterals[poLocaleDefault],\r\n      ...poPageChangePasswordLiterals[browserLanguage()],\r\n    };\r\n\r\n  private componentRef: ComponentRef<any> = null;\r\n\r\n  modalAction: PoModalAction = {\r\n    action: this.navigateTo.bind(this, this.urlHome),\r\n    label: this.literals.enterSystemButton\r\n  };\r\n\r\n  parentRef: any;\r\n\r\n  @ViewChild(PoModalComponent, { static: true }) modal: PoModalComponent;\r\n  @ViewChild('pageChangePassword', { read: ViewContainerRef, static: true }) pageChangePassword: ViewContainerRef;\r\n  @ViewChild('passwordForm', { read: NgForm, static: true }) passwordForm: NgForm;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private service: PoPageChangePasswordService,\r\n    private poComponentInjector: PoComponentInjectorService,\r\n    viewRef: ViewContainerRef) {\r\n      super();\r\n      this.parentRef = viewRef['_view']['component'];\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.urlNewPassword) {\r\n      this.subscribeToTokenParameter();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.newPasswordSubscription) {\r\n      this.newPasswordSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.checkingForRouteMetadata(this.activatedRoute.snapshot.data);\r\n  }\r\n\r\n  navigateTo(url: string) {\r\n    isExternalLink(url) ?  window.open(url) : this.router.navigate([url || '/']);\r\n  }\r\n\r\n  onForgotPasswordClick(recovery): void {\r\n    if (isTypeof(recovery, 'function')) {\r\n      recovery();\r\n    } else {\r\n      this.createModalPasswordRecoveryComponent(recovery);\r\n    }\r\n  }\r\n\r\n  onLoginSubmit(): void {\r\n\r\n    const form = this.getLoginForm();\r\n\r\n    if (this.urlNewPassword) {\r\n      this.postUrlNewPassword(form);\r\n    } else if (this.submit && this.submit.observers.length) {\r\n      this.emitSubmit(form);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Abre uma modal de confirmaÃ§Ã£o com texto, imagem e botÃ£o que redireciona para o link definido na propriedade `p-url-home`\u001c\r\n   */\r\n  openConfirmation() {\r\n    this.modal.open();\r\n  }\r\n\r\n  validatePassword() {\r\n    const controls =  this.passwordForm.form.controls;\r\n    const controlConfirmPassword = controls['confirmPassword'];\r\n    const controlNewPassword = controls['newPassword'];\r\n\r\n    if (!this.newPassword) {\r\n      this.setFormErrors({'required': true}, [controlNewPassword]);\r\n    } else if (!this.confirmPassword) {\r\n      this.setFormErrors({'required': true}, [controlConfirmPassword]);\r\n    } else if (this.newPassword && this.confirmPassword && this.newPassword !== this.confirmPassword) {\r\n      this.setFormErrors({'equalPassword': true}, [controlNewPassword, controlConfirmPassword]);\r\n    }  else {\r\n      this.setFormErrors(null, [controlConfirmPassword, controlNewPassword]);\r\n    }\r\n\r\n    if (this.requirements.length && this.requirements.find(requirement =>  this.validateRequirement(requirement) === false)) {\r\n      this.setFormErrors({'requirement': true}, [controlNewPassword]);\r\n    }\r\n  }\r\n\r\n  validateRequirement(requirement: PoPageChangePasswordRequirement) {\r\n    return typeof requirement.status === 'function' ? requirement.status.call(this.parentRef, this.newPassword) : requirement.status;\r\n  }\r\n\r\n  private checkingForMetadataProperty(object, property) {\r\n    if (Object.prototype.hasOwnProperty.call(object, property)) {\r\n      return object[property];\r\n    }\r\n  }\r\n\r\n  private checkingForRouteMetadata(data) {\r\n    if (Object.keys(data).length !== 0) {\r\n      this.urlNewPassword = this.checkingForMetadataProperty(data, 'serviceApi') || this.urlNewPassword;\r\n      this.recovery = this.checkingForMetadataProperty(data, 'recovery') || this.recovery;\r\n      this.hideCurrentPassword = this.checkingForMetadataProperty(data, 'hideCurrentPassword') || this.hideCurrentPassword;\r\n    }\r\n  }\r\n\r\n  private createModalPasswordRecoveryComponent(recovery: PoPageChangePasswordRecovery) {\r\n    if (this.componentRef) {\r\n      this.poComponentInjector.destroyComponentInApplication(this.componentRef);\r\n    }\r\n\r\n    this.componentRef = this.poComponentInjector.createComponentInApplication(PoModalPasswordRecoveryComponent);\r\n    this.componentRef.instance.recovery = recovery.url;\r\n    this.componentRef.instance.contactEmail = recovery.contactMail;\r\n    this.componentRef.instance.phoneMask = recovery.phoneMask;\r\n    this.componentRef.instance.type = recovery.type || PoModalPasswordRecoveryType.Email;\r\n    this.componentRef.changeDetectorRef.detectChanges();\r\n    setTimeout(() => {\r\n      this.componentRef.instance.open();\r\n    });\r\n  }\r\n\r\n  private emitSubmit(form: PoPageChangePassword) {\r\n    this.submit.emit(form);\r\n  }\r\n\r\n  private getLoginForm(): PoPageChangePassword {\r\n    return {\r\n      currentPassword: this.currentPassword,\r\n      newPassword: this.newPassword\r\n    };\r\n  }\r\n\r\n  private postUrlNewPassword(form: PoPageChangePassword) {\r\n\r\n    form['token'] = this.token;\r\n\r\n    this.service.post(this.urlNewPassword, form).subscribe(response => {\r\n      if (response.status === 204) {\r\n        this.openConfirmation();\r\n      }\r\n    });\r\n  }\r\n\r\n  private setFormErrors(error: any, controls?: Array<any>) {\r\n    controls.forEach(control => {\r\n      control.setErrors(error);\r\n    });\r\n  }\r\n\r\n  private subscribeToTokenParameter() {\r\n    this.route.queryParams.subscribe(params => {\r\n      const token = params['token'];\r\n\r\n      if (token) {\r\n        this.token = token;\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { PoModule } from '@portinari/portinari-ui';\r\n\r\nimport { PoModalPasswordRecoveryComponent } from '../po-modal-password-recovery/po-modal-password-recovery.component';\r\nimport { PoPageBackgroundModule } from '../po-page-background/index';\r\nimport { PoPageChangePasswordComponent } from './po-page-change-password.component';\r\nimport { PoPageChangePasswordService } from './po-page-change-password.service';\r\n\r\n/**\r\n * @description\r\n *\r\n * MÃ³dulo do template do po-page-change-password.\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule,\r\n\r\n    PoModule,\r\n    PoPageBackgroundModule\r\n  ],\r\n  declarations: [\r\n    PoPageChangePasswordComponent\r\n  ],\r\n  entryComponents: [\r\n    PoModalPasswordRecoveryComponent\r\n  ],\r\n  providers: [\r\n    PoPageChangePasswordService\r\n  ],\r\n  exports: [\r\n    PoPageChangePasswordComponent\r\n  ]\r\n})\r\nexport class PoPageChangePasswordModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PoPageDynamicService {\r\n\r\n  private endpoint = '/';\r\n  private metadata: string;\r\n\r\n  readonly headers: HttpHeaders = new HttpHeaders({\r\n    'X-PORTINARI-SCREEN-LOCK': 'true'\r\n  });\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  configServiceApi(config: { endpoint?: string, metadata?: string } = {}) {\r\n    this.endpoint = config.endpoint;\r\n    this.metadata = config.metadata || this.metadata;\r\n  }\r\n\r\n  getMetadata<T>(type: string = 'list'): Observable<T> {\r\n    const key = `${this.endpoint}-${type}-metadata`;\r\n    const cache = JSON.parse(localStorage.getItem(key)) || {};\r\n    const metadataUrlBase = this.metadata || `${this.endpoint}/metadata`;\r\n\r\n    const url = `${metadataUrlBase}?type=${type}&version=${cache.version || ''}`;\r\n\r\n    return this.http.get<T>(url).pipe(map((response: any) => {\r\n      if (response.version === cache.version) {\r\n        return cache;\r\n      }\r\n\r\n      localStorage.setItem(key, JSON.stringify(response));\r\n\r\n      return  { ...cache, ...response };\r\n    }));\r\n  }\r\n\r\n  // Deleta um Ãºnico recurso\r\n  deleteResource(id): Observable<any> {\r\n    return this.http.delete(`${this.endpoint}/${id}`, { headers: this.headers });\r\n  }\r\n\r\n  // Deleta recursos em lote\r\n  deleteResources(ids: Array<any>): Observable<any> {\r\n    return this.http.request('delete', `${this.endpoint}`, { headers: this.headers, body: ids } );\r\n  }\r\n\r\n  // Busca uma lista de recursos\r\n  getResources(params?: HttpParams): Observable<any> {\r\n    return this.http.get(this.endpoint, { headers: this.headers, params });\r\n  }\r\n\r\n  // Busca um Ãºnico recurso\r\n  getResource(id): Observable<any> {\r\n    return this.http.get(`${this.endpoint}/${id}`, { headers: this.headers });\r\n  }\r\n\r\n  // Cria um recurso\r\n  createResource(resource): Observable<any> {\r\n    return this.http.post(`${this.endpoint}`, resource, { headers: this.headers });\r\n  }\r\n\r\n  // Atualiza um recurso\r\n  updateResource(id, resource): Observable<any> {\r\n    return this.http.put(`${this.endpoint}/${id}`, resource, { headers: this.headers });\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Route, Router, ActivatedRoute } from '@angular/router';\r\n\r\nimport * as util from '../../utils/util';\r\n\r\nimport { PoBreadcrumb, PoPageAction, PoDialogService, PoDialogConfirmOptions, PoNotificationService } from '@portinari/portinari-ui';\r\n\r\nimport { PoPageDynamicDetailActions } from './po-page-dynamic-detail-actions.interface';\r\nimport { PoPageDynamicDetailField } from './po-page-dynamic-detail-field.interface';\r\nimport { PoPageDynamicService } from '../../services/po-page-dynamic/po-page-dynamic.service';\r\n\r\nexport const poPageDynamicDetailLiteralsDefault = {\r\n  en: {\r\n    pageActionEdit: 'Edit',\r\n    pageActionRemove: 'Delete',\r\n    pageActionBack: 'Back',\r\n    confirmRemoveTitle: 'Confirm delete',\r\n    confirmRemoveMessage: 'Are you sure you want to delete this record? You can not undo this action.',\r\n    removeNotificationSuccess: 'Item deleted successfully.',\r\n    registerNotFound: 'Register not found.'\r\n  },\r\n  es: {\r\n    pageActionEdit: 'Editar',\r\n    pageActionRemove: 'Borrar',\r\n    pageActionBack: 'Regreso',\r\n    confirmRemoveTitle: 'Confirmar la exclusiÃ³n',\r\n    confirmRemoveMessage: 'Â¿EstÃ¡ seguro de que desea eliminar este registro? No puede deshacer esta acciÃ³n.',\r\n    removeNotificationSuccess: 'Elemento eliminado con Ã©xito.',\r\n    registerNotFound: 'Registro no encontrado.'\r\n  },\r\n  pt: {\r\n    pageActionEdit: 'Editar',\r\n    pageActionRemove: 'Excluir',\r\n    pageActionBack: 'Voltar',\r\n    confirmRemoveTitle: 'Confirmar exclusÃ£o',\r\n    confirmRemoveMessage: 'Tem certeza de que deseja excluir esse registro? VocÃª nÃ£o poderÃ¡ desfazer essa aÃ§Ã£o.',\r\n    removeNotificationSuccess: 'Item excluÃ­do com sucesso.',\r\n    registerNotFound: 'Registro nÃ£o encontrado.'\r\n  }\r\n};\r\n\r\n/**\r\n * @description\r\n *\r\n * O `po-page-dynamic-detail` Ã© uma pÃ¡gina que serve para exibir registros em detalhes,\r\n * o mesmo tambÃ©m suporta metadados conforme especificado na documentaÃ§Ã£o.\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-page-dynamic-detail-basic\" title=\"Portinari Page Dynamic Detail Basic\">\r\n *  <file name=\"sample-po-page-dynamic-detail-basic/sample-po-page-dynamic-detail-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-page-dynamic-detail-basic/sample-po-page-dynamic-detail-basic.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-page-dynamic-detail',\r\n  templateUrl: './po-page-dynamic-detail.component.html',\r\n  providers: [ PoPageDynamicService ]\r\n})\r\nexport class PoPageDynamicDetailComponent implements OnInit {\r\n\r\n  private _actions: PoPageDynamicDetailActions = {};\r\n  private _autoRouter: boolean = false;\r\n  private _duplicates: Array<any> = [];\r\n  private _fields: Array<any> = [];\r\n  private _keys: Array<any> = [];\r\n  private _pageActions: Array<PoPageAction> = [];\r\n\r\n  literals = {\r\n    ...poPageDynamicDetailLiteralsDefault[util.poLocaleDefault],\r\n    ...poPageDynamicDetailLiteralsDefault[util.browserLanguage()]\r\n  };\r\n  model: any = {};\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define as aÃ§Ãµes da pÃ¡gina de acordo com a interface `PoPageDynamicDetailActions`.\r\n   */\r\n  @Input('p-actions') set actions(value: PoPageDynamicDetailActions) {\r\n    this._actions = this.isObject(value) ? value : {};\r\n\r\n    this._pageActions = this.getPageActions(this._actions);\r\n  }\r\n\r\n  /**\r\n   * @todo Validar rotas na mÃ£o pois se existir uma rota '**' o catch do navigation nÃ£o funciona.\r\n   *\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Cria automaticamente as rotas de ediÃ§Ã£o (novo/duplicate) e detalhes caso as aÃ§Ãµes\r\n   * estejam definidas nas aÃ§Ãµes.\r\n   *\r\n   * > Para o correto funcionamento nÃ£o pode haver nenhum rota coringa (`**`) especificada.\r\n   *\r\n   * @default false\r\n   */\r\n  @Input('p-auto-router') set autoRouter(value: boolean) {\r\n    this._autoRouter = util.convertToBoolean(value);\r\n  }\r\n\r\n  get autoRouter(): boolean {\r\n    return this._autoRouter;\r\n  }\r\n\r\n  /** Objeto com propriedades do breadcrumb. */\r\n  @Input('p-breadcrumb') breadcrumb?: PoBreadcrumb = { items: [] };\r\n\r\n  /** Lista dos campos exibidos na pÃ¡gina. */\r\n  @Input('p-fields') set fields(value: Array<PoPageDynamicDetailField>) {\r\n    this._fields = Array.isArray(value) ? [...value] : [];\r\n\r\n    this._keys = this.getKeysByFields(this.fields);\r\n    this._duplicates = this.getDuplicatesByFields(this.fields);\r\n  }\r\n\r\n  get fields(): Array<PoPageDynamicDetailField> {\r\n    return this._fields;\r\n  }\r\n\r\n  /** TÃ­tulo da pÃ¡gina. */\r\n  @Input('p-title') title: string;\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Endpoint usado pelo template para requisiÃ§Ã£o do recurso que serÃ£o exibido.\r\n   *\r\n   * Caso a aÃ§Ã£o `remove` estiver configurada, serÃ¡ feito uma requisiÃ§Ã£o de exclusÃ£o nesse mesmo endpoint passando os campos\r\n   * setados como `key: true`.\r\n   *\r\n   * > `DELETE {end-point}/{keys}`\r\n   *\r\n   * ```\r\n   *  <po-page-dynamic-detail\r\n   *    [p-actions]=\"{ remove: '/' }\"\r\n   *    [p-fields]=\"[ { property: 'id', key: true } ]\"\r\n   *    p-service=\"/api/po-samples/v1/people\"\r\n   *    ...>\r\n   *  </po-page-dynamic-detail>\r\n   * ```\r\n   *\r\n   * ResquisiÃ§Ã£o disparada, onde a propriedade `id` Ã© igual a 2:\r\n   *\r\n   * ```\r\n   *  DELETE /api/po-samples/v1/people/2 HTTP/1.1\r\n   *  Host: localhost:4000\r\n   *  Connection: keep-alive\r\n   *  Accept: application/json, text/plain\r\n   *  ...\r\n   * ```\r\n   *\r\n   * > Caso esteja usando metadados com o template, serÃ¡ disparado uma requisiÃ§Ã£o na inicializaÃ§Ã£o do template para buscar\r\n   * > os metadados da pÃ¡gina passando o tipo do metadado esperado e a versÃ£o cacheada pelo browser.\r\n   * >\r\n   * > `GET {end-point}/metadata?type=detail&version={version}`\r\n   */\r\n  @Input('p-service-api') serviceApi: string;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private poNotification: PoNotificationService,\r\n    private poDialogService: PoDialogService,\r\n    private poPageDynamicService: PoPageDynamicService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const paramId = this.activatedRoute.snapshot.params['id'];\r\n\r\n    if (this.activatedRoute.snapshot.data.serviceApi) {\r\n      this.serviceApi = this.activatedRoute.snapshot.data.serviceApi;\r\n\r\n      this.poPageDynamicService.configServiceApi({ endpoint: this.serviceApi });\r\n\r\n      this.loadMetadata(paramId);\r\n    } else {\r\n      this.poPageDynamicService.configServiceApi({ endpoint: this.serviceApi });\r\n\r\n      this.loadData(paramId);\r\n    }\r\n  }\r\n\r\n  get duplicates() {\r\n    return [...this._duplicates];\r\n  }\r\n\r\n  get keys() {\r\n    return [...this._keys];\r\n  }\r\n\r\n  get pageActions() {\r\n    return [...this._pageActions];\r\n  }\r\n\r\n  private confirmRemove(path) {\r\n    const confirmOptions: PoDialogConfirmOptions = {\r\n      title: this.literals.confirmRemoveTitle,\r\n      message: this.literals.confirmRemoveMessage,\r\n      confirm: this.remove.bind(this, path)\r\n    };\r\n\r\n    this.poDialogService.confirm(confirmOptions);\r\n  }\r\n\r\n  private formatUniqueKey(item) {\r\n    const keys = util.mapObjectByProperties(item, this.keys);\r\n\r\n    return util.valuesFromObject(keys).join('|');\r\n  }\r\n\r\n  private goBack(/*path*/) {\r\n    window.history.back();\r\n    // if (path) {\r\n    //   this.navigateTo({ path, component: PoPageDynamicEditComponent });\r\n    // } else {\r\n    //   window.history.back();\r\n    // }\r\n  }\r\n\r\n  private loadData(id) {\r\n    this.poPageDynamicService.getResource(id).toPromise().then(response => {\r\n      this.model = response;\r\n    }).catch(() => {\r\n      this.model = undefined;\r\n      this.actions = undefined;\r\n    });\r\n  }\r\n\r\n  private loadMetadata(id) {\r\n    this.poPageDynamicService.getMetadata<any>('detail').toPromise().then(response => {\r\n      this.autoRouter = response.autoRouter;\r\n      this.actions = response.actions || {};\r\n      this.breadcrumb = response.breadcrumb || { items : [] };\r\n      this.fields = response.fields || [];\r\n      this.title = response.title;\r\n\r\n      this.loadData(id);\r\n    });\r\n  }\r\n\r\n  // @todo Validar rotas na mÃ£o pois se existir uma rota '**' o catch do navigation nÃ£o funciona.\r\n  private navigateTo(route: { path: string, component?, url?: string, params?: any }, forceStopAutoRouter: boolean = false) {\r\n    this.router.navigate([route.url || route.path], { queryParams: route.params })\r\n      .catch(() => {\r\n        if (forceStopAutoRouter || !this.autoRouter) {\r\n          return;\r\n        }\r\n\r\n        this.router.config.unshift(<Route>{\r\n          path: route.path, component: route.component, data: { serviceApi: this.serviceApi, autoRouter: true }\r\n        });\r\n\r\n        this.navigateTo(route, true);\r\n      });\r\n  }\r\n\r\n  private openEdit(path) {\r\n    const url = this.resolveUrl(this.model, path);\r\n\r\n    // this.navigateTo({ path, url, component: PoPageDynamicEditComponent });\r\n    this.navigateTo({ path, url });\r\n  }\r\n\r\n  private remove(path) {\r\n    const uniqueKey = this.formatUniqueKey(this.model);\r\n\r\n    this.poPageDynamicService.deleteResource(uniqueKey).toPromise().then(() => {\r\n      this.poNotification.success(this.literals.removeNotificationSuccess);\r\n\r\n      this.navigateTo({ path: path });\r\n      // this.navigateTo({ path: path, component: PoPageDynamicTableComponent });\r\n    });\r\n  }\r\n\r\n  private resolveUrl(item: any, path: string) {\r\n    const uniqueKey = this.formatUniqueKey(item);\r\n\r\n    return path.replace(/:id/g, uniqueKey);\r\n  }\r\n\r\n  private getPageActions(actions: PoPageDynamicDetailActions = {}): Array<PoPageAction> {\r\n    const pageActions = [];\r\n\r\n    if (actions.edit) {\r\n      pageActions.push({ label: this.literals.pageActionEdit, action: this.openEdit.bind(this, actions.edit) });\r\n    }\r\n\r\n    if (actions.remove) {\r\n      pageActions.push({ label: this.literals.pageActionRemove, action: this.confirmRemove.bind(this, actions.remove) });\r\n    }\r\n\r\n    if (actions.back === undefined || actions.back) {\r\n      pageActions.push({ label: this.literals.pageActionBack, action: this.goBack.bind(this, actions.back) });\r\n    }\r\n\r\n    return pageActions;\r\n  }\r\n\r\n  private getKeysByFields(fields: Array<any> = []) {\r\n    return fields.filter(field => field.key === true).map(field => field.property);\r\n  }\r\n\r\n  private getDuplicatesByFields(fields: Array<any> = []) {\r\n    return fields.filter(field => field.duplicate === true).map(field => field.property);\r\n  }\r\n\r\n  private isObject(value: any): boolean {\r\n    return !!value && typeof value === 'object' && !Array.isArray(value);\r\n  }\r\n\r\n}\r\n","import { HttpClientModule } from '@angular/common/http';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { PoPageDynamicService } from './po-page-dynamic.service';\r\n/**\r\n * @description\r\n *\r\n * MÃ³dulo do serviÃ§o do po-page-dynamic-service.\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [\r\n    PoPageDynamicService\r\n  ]\r\n})\r\nexport class PoPageDynamicModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { PoDynamicModule, PoModalModule, PoPageModule, PoWidgetModule } from '@portinari/portinari-ui';\r\n\r\nimport { PoPageDynamicDetailComponent } from './po-page-dynamic-detail.component';\r\nimport { PoPageDynamicModule } from '../../services/po-page-dynamic/po-page-dynamic.module';\r\n\r\n/**\r\n * @description\r\n *\r\n * MÃ³dulo do template do po-page-dynamic-detail.\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule,\r\n\r\n    PoDynamicModule,\r\n    PoModalModule,\r\n    PoPageModule,\r\n    PoWidgetModule,\r\n    PoPageDynamicModule\r\n  ],\r\n  declarations: [\r\n    PoPageDynamicDetailComponent\r\n  ],\r\n  exports: [\r\n    PoPageDynamicDetailComponent\r\n  ]\r\n})\r\nexport class PoPageDynamicDetailModule { }\r\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport {\r\n  PoBreadcrumb,\r\n  PoDialogService,\r\n  PoDynamicFormComponent,\r\n  PoGridComponent,\r\n  PoGridRowActions,\r\n  PoNotificationService,\r\n  PoPageAction } from '@portinari/portinari-ui';\r\n\r\nimport * as util from './../../utils/util';\r\n\r\nimport { PoPageDynamicEditActions } from './interfaces/po-page-dynamic-edit-actions.interface';\r\nimport { PoPageDynamicEditField } from './interfaces/po-page-dynamic-edit-field.interface';\r\nimport { PoPageDynamicService } from '../../services/po-page-dynamic/po-page-dynamic.service';\r\n\r\nexport const poPageDynamicEditLiteralsDefault = {\r\n  en: {\r\n    cancelConfirmMessage: 'Are you sure you want to cancel this operation?',\r\n    detailActionNew: 'New',\r\n    pageActionCancel: 'Cancel',\r\n    pageActionSave: 'Save',\r\n    pageActionSaveNew: 'Save and new',\r\n    registerNotFound: 'Register not found.',\r\n    saveNewNotificationSuccessSave: 'Resource successfully saved.',\r\n    saveNewNotificationSuccessUpdate: 'Resource successfully updated.',\r\n    saveNewNotificationWarning: 'Form must be filled out correctly.',\r\n    saveNotificationSuccessSave: 'Resource successfully saved.',\r\n    saveNotificationSuccessUpdate: 'Resource successfully updated.',\r\n    saveNotificationWarning: 'Form must be filled out correctly.',\r\n  },\r\n  es: {\r\n    cancelConfirmMessage: 'EstÃ¡ seguro de que desea cancelar esta operaciÃ³n?',\r\n    detailActionNew: 'Nuevo',\r\n    pageActionCancel: 'Cancelar',\r\n    pageActionSave: 'Guardar',\r\n    pageActionSaveNew: 'Guardar y nuevo',\r\n    registerNotFound: 'Registro no encontrado.',\r\n    saveNewNotificationSuccessSave: 'Recurso salvo con Ã©xito.',\r\n    saveNewNotificationSuccessUpdate: 'Recurso actualizado con Ã©xito.',\r\n    saveNewNotificationWarning: 'El formulario debe llenarse correctamente.',\r\n    saveNotificationSuccessSave: 'Recurso salvo con Ã©xito.',\r\n    saveNotificationSuccessUpdate: 'Recurso actualizado con Ã©xito.',\r\n    saveNotificationWarning: 'El formulario debe llenarse correctamente.',\r\n  },\r\n  pt: {\r\n    cancelConfirmMessage: 'Tem certeza que deseja cancelar esta operaÃ§Ã£o?',\r\n    detailActionNew: 'Novo',\r\n    pageActionCancel: 'Cancelar',\r\n    pageActionSave: 'Salvar',\r\n    pageActionSaveNew: 'Salvar e novo',\r\n    registerNotFound: 'Registro nÃ£o encontrado.',\r\n    saveNewNotificationSuccessSave: 'Recurso salvo com sucesso.',\r\n    saveNewNotificationSuccessUpdate: 'Recurso atualizado com sucesso.',\r\n    saveNewNotificationWarning: 'FormulÃ¡rio precisa ser preenchido corretamente.',\r\n    saveNotificationSuccessSave: 'Recurso salvo com sucesso.',\r\n    saveNotificationSuccessUpdate: 'Recurso atualizado com sucesso.',\r\n    saveNotificationWarning: 'FormulÃ¡rio precisa ser preenchido corretamente.',\r\n  }\r\n};\r\n\r\n/**\r\n * @description\r\n *\r\n * O `po-page-dynamic-edit` Ã© uma pÃ¡gina que pode servir para editar ou criar novos registros,\r\n * o mesmo tambÃ©m suporta metadados conforme especificado na documentaÃ§Ã£o.\r\n *\r\n * ### UtilizaÃ§Ã£o via rota\r\n *\r\n * Ao utilizar as rotas para carregar o template, o `page-dynamic-edit` disponibiliza propriedades para\r\n * poder especificar o endpoint dos dados e dos metadados. Exemplo de utilizaÃ§Ã£o:\r\n *\r\n * ```\r\n * {\r\n *   path: 'people',\r\n *   component: PoPageDynamicEditComponent,\r\n *   data: {\r\n *     serviceApi: 'http://localhost:3000/v1/people', // endpoint dos dados\r\n *     serviceMetadataApi: 'http://localhost:3000/v1/metadata' // endpoint dos metadados\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * Para carregar com um recurso jÃ¡ existente, deve-se ser incluÃ­do um parÃ¢metro na rota chamado `id`:\r\n *\r\n * ```\r\n * {\r\n *   path: 'people/:id',\r\n *   component: PoPageDynamicEditComponent,\r\n *   data: {\r\n *     serviceApi: 'http://localhost:3000/v1/people', // endpoint dos dados\r\n *     serviceMetadataApi: 'http://localhost:3000/v1/metadata' // endpoint dos metadados\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * A requisiÃ§Ã£o dos metadados Ã© feita na inicializaÃ§Ã£o do template para buscar os metadados da pÃ¡gina passando o\r\n * tipo do metadado esperado e a versÃ£o cacheada pelo browser.\r\n *\r\n * O formato esperado na resposta da requisiÃ§Ã£o estÃ¡ especificado na interface\r\n * [PoPageDynamicEditMetadata](/documentation/po-page-dynamic-edit#po-page-dynamic-edit-metadata). Por exemplo:\r\n *\r\n * ```\r\n *  {\r\n *   version: 1,\r\n *   title: 'Person edit',\r\n *   fields: [\r\n *     { property: 'id', key: true, disabled: true },\r\n *     { property: 'status' },\r\n *     { property: 'name' },\r\n *     { property: 'nickname' },\r\n *     { property: 'birthdate', label: 'Birth date' },\r\n *     { property: 'genre' },\r\n *     { property: 'city' },\r\n *     { property: 'country' }\r\n *   ]\r\n * }\r\n * ```\r\n *\r\n * > Caso o endpoint dos metadados nÃ£o seja especificado, serÃ¡ feito uma requisiÃ§Ã£o utilizando o `serviceApi` da seguinte forma:\r\n * ```\r\n * GET {end-point}/metadata?type=edit&version={version}\r\n * ```\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-page-dynamic-edit-basic\" title=\"Portinari Page Dynamic Edit Basic\">\r\n *  <file name=\"sample-po-page-dynamic-edit-basic/sample-po-page-dynamic-edit-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-page-dynamic-edit-basic/sample-po-page-dynamic-edit-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-page-dynamic-edit-user\" title=\"Portinari Page Dynamic Edit - User\">\r\n *  <file name=\"sample-po-page-dynamic-edit-user/sample-po-page-dynamic-edit-user.component.html\"> </file>\r\n *  <file name=\"sample-po-page-dynamic-edit-user/sample-po-page-dynamic-edit-user.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-page-dynamic-edit-master-detail\" title=\"Portinari Page Dynamic Edit - Master Detail\">\r\n *  <file name=\"sample-po-page-dynamic-edit-master-detail/sample-po-page-dynamic-edit-master-detail.component.html\"> </file>\r\n *  <file name=\"sample-po-page-dynamic-edit-master-detail/sample-po-page-dynamic-edit-master-detail.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-page-dynamic-edit',\r\n  templateUrl: './po-page-dynamic-edit.component.html',\r\n  providers: [ PoPageDynamicService ]\r\n})\r\nexport class PoPageDynamicEditComponent implements OnInit {\r\n\r\n  private _actions: PoPageDynamicEditActions = {};\r\n  private _autoRouter: boolean = false;\r\n  private _controlFields: Array<any> = [];\r\n  private _detailFields: Array<any> = [];\r\n  private _duplicates: Array<any> = [];\r\n  private _fields: Array<any> = [];\r\n  private _keys: Array<any> = [];\r\n  private _pageActions: Array<PoPageAction> = [];\r\n\r\n  literals = {\r\n    ...poPageDynamicEditLiteralsDefault[util.poLocaleDefault],\r\n    ...poPageDynamicEditLiteralsDefault[util.browserLanguage()]\r\n  };\r\n  model: any = {};\r\n\r\n  // beforeSave: return boolean\r\n  // afterSave\r\n  // beforeRemove: return boolean\r\n  // afterRemove\r\n  // beforeInsert: : return boolean\r\n  readonly detailActions: PoGridRowActions = { };\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * AÃ§Ãµes da pÃ¡gina.\r\n   */\r\n  @Input('p-actions') set actions(value: PoPageDynamicEditActions) {\r\n    this._actions = this.isObject(value) ? value : {};\r\n\r\n    this._pageActions = this.getPageActions(this._actions);\r\n  }\r\n\r\n  /**\r\n   * @todo Validar rotas na mÃ£o pois se existir uma rota '**' o catch do navigation nÃ£o funciona.\r\n   *\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Cria automaticamente as rotas de ediÃ§Ã£o (novo/duplicate) e detalhes caso as aÃ§Ãµes\r\n   * estejam definidas nas aÃ§Ãµes.\r\n   *\r\n   * > Para o correto funcionamento nÃ£o pode haver nenhum rota coringa (`**`) especificada.\r\n   *\r\n   * @default false\r\n   */\r\n  @Input('p-auto-router') set autoRouter(value: boolean) {\r\n    this._autoRouter = util.convertToBoolean(value);\r\n  }\r\n\r\n  get autoRouter(): boolean {\r\n    return this._autoRouter;\r\n  }\r\n\r\n  /** Objeto com propriedades do breadcrumb. */\r\n  @Input('p-breadcrumb') breadcrumb?: PoBreadcrumb = { items: [] };\r\n\r\n  /** Lista dos campos usados na tabela e busca avanÃ§ada. */\r\n  @Input('p-fields') set fields(value: Array<PoPageDynamicEditField>) {\r\n    this._fields = Array.isArray(value) ? [...value] : [];\r\n\r\n    this._keys = this.getKeysByFields(this._fields);\r\n    this._duplicates = this.getDuplicatesByFields(this._fields);\r\n\r\n    this._controlFields = this.getControlFields(this._fields);\r\n    this._detailFields = this.getDetailFields(this._fields);\r\n  }\r\n\r\n  get fields(): Array<PoPageDynamicEditField> {\r\n    return this._fields;\r\n  }\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Endpoint usado pelo template para requisiÃ§Ã£o do recurso que serÃ¡ exibido para ediÃ§Ã£o.\r\n   *\r\n   * Para as aÃ§Ãµes de `save` e `saveNew`, serÃ¡ feito uma requisiÃ§Ã£o de criaÃ§Ã£o nesse mesmo endpoint passando os valores\r\n   * preenchidos pelo usuÃ¡rio via payload.\r\n   *\r\n   * > `POST {end-point}`\r\n   *\r\n   * ```\r\n   *  <po-page-dynamic-edit\r\n   *    [p-actions]=\"{ save: '/', saveNew: 'new' }\"\r\n   *    [p-fields]=\"[ { property: 'name' }, { property: 'city' } ]\"\r\n   *    p-service=\"/api/po-samples/v1/people\"\r\n   *    ...>\r\n   *  </po-page-dynamic-edit>\r\n   * ```\r\n   *\r\n   * ResquisiÃ§Ã£o disparada, onde a propriedade `name` e `city` foram preenchidas:\r\n   *\r\n   * ```\r\n   *  POST /api/po-samples/v1/people HTTP/1.1\r\n   *  Host: localhost:4000\r\n   *  Connection: keep-alive\r\n   *  Accept: application/json, text/plain\r\n   *  ...\r\n   * ```\r\n   *\r\n   * Request payload:\r\n   *\r\n   * ```\r\n   * { \"name\": \"Fulano\", \"city\": \"Smallville\" }\r\n   * ```\r\n   *\r\n   * Caso queira que o template carregue um recurso jÃ¡ existente, deve-se ser incluÃ­do um parametro na rota chamado `id`.\r\n   *\r\n   * Exemplo de configuraÃ§Ã£o de rota:\r\n   *\r\n   * ```\r\n   *  RouterModule.forRoot([\r\n   *    ...\r\n   *    { path: 'edit/:id', component: PersonEditComponent },\r\n   *    ...\r\n   *  ],\r\n   * ```\r\n   *\r\n   * Baseado nisso, na inicializaÃ§Ã£o do template, serÃ¡ disparado uma requisiÃ§Ã£o para buscar o recurso que serÃ¡ editado.\r\n   *\r\n   * > `GET {end-point}/{id}`\r\n   *\r\n   * Nos mÃ©todos de `save` e `saveNew`, ao invÃ©s de um `POST`, serÃ¡ disparado um `PUT`.\r\n   *\r\n   * ResquisiÃ§Ã£o disparada, onde a propriedade `name` e `city` foram preenchidas / atualizadas, e o `id` da url Ã© 2:\r\n   *\r\n   * ```\r\n   *  PUT /api/po-samples/v1/people/2 HTTP/1.1\r\n   *  Host: localhost:4000\r\n   *  Connection: keep-alive\r\n   *  Accept: application/json, text/plain\r\n   *  ...\r\n   * ```\r\n   *\r\n   * Request payload:\r\n   *\r\n   * ```\r\n   * { \"name\": \"Fulano\", \"city\": \"Metropolis\" }\r\n   * ```\r\n   */\r\n  @Input('p-service-api') serviceApi: string;\r\n\r\n  /** TÃ­tulo da pÃ¡gina. */\r\n  @Input('p-title') title: string;\r\n\r\n  @ViewChild('dynamicForm', { static: false }) dynamicForm: PoDynamicFormComponent;\r\n  @ViewChild('gridDetail', { static: false }) gridDetail: PoGridComponent;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private poNotification: PoNotificationService,\r\n    private poDialogService: PoDialogService,\r\n    private poPageDynamicService: PoPageDynamicService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const paramId = this.activatedRoute.snapshot.params['id'];\r\n    const duplicate = this.activatedRoute.snapshot.queryParams['duplicate'];\r\n\r\n    const { serviceApi, serviceMetadataApi } = this.activatedRoute.snapshot.data;\r\n    this.serviceApi = serviceApi || this.serviceApi;\r\n    this.poPageDynamicService.configServiceApi({ endpoint: this.serviceApi, metadata: serviceMetadataApi });\r\n\r\n    if (serviceApi) {\r\n      this.loadMetadata(paramId, duplicate);\r\n    } else {\r\n      this.loadData(paramId, duplicate);\r\n    }\r\n  }\r\n\r\n  get duplicates() {\r\n    return [...this._duplicates];\r\n  }\r\n\r\n  get keys() {\r\n    return [...this._keys];\r\n  }\r\n\r\n  get pageActions() {\r\n    return [...this._pageActions];\r\n  }\r\n\r\n  get controlFields() {\r\n    return this._controlFields;\r\n  }\r\n\r\n  get detailFields() {\r\n    return this._detailFields;\r\n  }\r\n\r\n  detailActionNew() {\r\n    this.gridDetail.insertRow();\r\n  }\r\n\r\n  private cancel(path) {\r\n    if (this.dynamicForm && this.dynamicForm.form.dirty) {\r\n      this.poDialogService.confirm({\r\n        message: this.literals.cancelConfirmMessage,\r\n        title: this.literals.pageActionCancel,\r\n        confirm: this.goBack.bind(this, path)\r\n      });\r\n    } else {\r\n      this.goBack(path);\r\n    }\r\n  }\r\n\r\n  private formatUniqueKey(item) {\r\n    const keys = util.mapObjectByProperties(item, this.keys);\r\n\r\n    return util.valuesFromObject(keys).join('|');\r\n  }\r\n\r\n  private goBack(path) {\r\n    if (path) {\r\n      this.router.navigate([path]);\r\n    } else {\r\n      window.history.back();\r\n    }\r\n  }\r\n\r\n  private loadData(id, duplicate?) {\r\n    if (!id) {\r\n      try {\r\n        this.model = JSON.parse(duplicate) || {};\r\n      } catch {\r\n        this.model = {};\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    this.poPageDynamicService.getResource(id).toPromise().then(response => {\r\n      this.model = response;\r\n    }).catch(() => {\r\n      this.model = undefined;\r\n      this.actions = undefined;\r\n      this._pageActions = [];\r\n    });\r\n  }\r\n\r\n  private loadMetadata(paramId: string | number, duplicate: string) {\r\n    const typeMetadata = paramId ? 'edit' : 'create';\r\n\r\n    this.poPageDynamicService.getMetadata<any>(typeMetadata).toPromise().then(response => {\r\n      this.autoRouter = response.autoRouter;\r\n      this.actions = response.actions || {};\r\n      this.breadcrumb = response.breadcrumb || { items : [] };\r\n      this.fields = response.fields || [];\r\n      this.title = response.title;\r\n\r\n      this.loadData(paramId, duplicate);\r\n    });\r\n  }\r\n\r\n  private navigateTo(path: string) {\r\n    if (path) {\r\n      const url = this.resolveUrl(this.model, path);\r\n\r\n      this.router.navigate([url]);\r\n    } else {\r\n      window.history.back();\r\n    }\r\n  }\r\n\r\n  private resolveUrl(item: any, path: string) {\r\n    const uniqueKey = this.formatUniqueKey(item);\r\n\r\n    return path.replace(/:id/g, uniqueKey);\r\n  }\r\n\r\n  private save(path) {\r\n    if (this.dynamicForm.form.invalid) {\r\n      this.poNotification.warning(this.literals.saveNotificationWarning);\r\n      return;\r\n    }\r\n\r\n    const paramId = this.activatedRoute.snapshot.params['id'];\r\n\r\n    const saveOperation: Observable<any> = paramId\r\n      ? this.poPageDynamicService.updateResource(paramId, this.model)\r\n      : this.poPageDynamicService.createResource(this.model);\r\n\r\n    const msgSucess = paramId ? this.literals.saveNotificationSuccessUpdate : this.literals.saveNotificationSuccessSave;\r\n\r\n    saveOperation.toPromise().then(() => {\r\n      this.poNotification.success(msgSucess);\r\n\r\n      this.navigateTo(path);\r\n    });\r\n  }\r\n\r\n  private saveNew(path) {\r\n    if (this.dynamicForm.form.invalid) {\r\n      this.poNotification.warning(this.literals.saveNewNotificationWarning);\r\n      return;\r\n    }\r\n\r\n    const paramId = this.activatedRoute.snapshot.params['id'];\r\n\r\n    if (paramId) {\r\n      this.poPageDynamicService.updateResource(paramId, this.model)\r\n        .toPromise().then(() => {\r\n          this.poNotification.success(this.literals.saveNewNotificationSuccessUpdate);\r\n\r\n          this.navigateTo(path);\r\n        });\r\n    } else {\r\n      this.poPageDynamicService.createResource(this.model)\r\n        .toPromise().then(() => {\r\n          this.poNotification.success(this.literals.saveNewNotificationSuccessSave);\r\n\r\n          this.model = {};\r\n          this.dynamicForm.form.reset();\r\n        });\r\n    }\r\n  }\r\n\r\n  private getKeysByFields(fields: Array<any> = []) {\r\n    return fields.filter(field => field.key === true).map(field => field.property);\r\n  }\r\n\r\n  private getControlFields(fields: Array<any> = []) {\r\n    return fields.filter(field => field.type !== 'detail');\r\n  }\r\n\r\n  private getDetailFields(fields: Array<any> = []) {\r\n    return fields.filter(field => field.type === 'detail');\r\n  }\r\n\r\n  private getDuplicatesByFields(fields: Array<any> = []) {\r\n    return fields.filter(field => field.duplicate === true).map(field => field.property);\r\n  }\r\n\r\n  private getPageActions(actions: PoPageDynamicEditActions = {}): Array<PoPageAction> {\r\n    const pageActions = [{ label: this.literals.pageActionSave, action: this.save.bind(this, actions.save) }];\r\n\r\n    if (actions.saveNew) {\r\n      pageActions.push({ label: this.literals.pageActionSaveNew, action: this.saveNew.bind(this, actions.saveNew) });\r\n    }\r\n\r\n    if (actions.cancel === undefined || actions.cancel) {\r\n      pageActions.push({ label: this.literals.pageActionCancel, action: this.cancel.bind(this, actions.cancel) });\r\n    }\r\n\r\n    return pageActions;\r\n  }\r\n\r\n  private isObject(value: any): boolean {\r\n    return !!value && typeof value === 'object' && !Array.isArray(value);\r\n  }\r\n\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport {\r\n  PoButtonModule,\r\n  PoDividerModule,\r\n  PoDynamicModule,\r\n  PoGridModule,\r\n  PoPageModule,\r\n  PoWidgetModule\r\n} from '@portinari/portinari-ui';\r\n\r\nimport { PoPageDynamicEditComponent } from './po-page-dynamic-edit.component';\r\nimport { PoPageDynamicModule } from '../../services/po-page-dynamic/po-page-dynamic.module';\r\n\r\n/**\r\n * @description\r\n *\r\n * MÃ³dulo do template do po-page-dynamic-detail.\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule,\r\n\r\n    PoButtonModule,\r\n    PoDividerModule,\r\n    PoDynamicModule,\r\n    PoGridModule,\r\n    PoPageModule,\r\n    PoWidgetModule,\r\n    PoPageDynamicModule\r\n  ],\r\n  declarations: [\r\n    PoPageDynamicEditComponent\r\n  ],\r\n  exports: [\r\n    PoPageDynamicEditComponent\r\n  ]\r\n})\r\nexport class PoPageDynamicEditModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { Observable, from } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { PoPageDynamicOptionsSchema, PoPageDynamicOptionsProp } from './po-page-dynamic-options.interface';\r\n\r\ntype urlOrFunction = string | Function ;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class PoPageCustomizationService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getCustomOptions<T>(origin: urlOrFunction, originalOption: T, optionSchema: PoPageDynamicOptionsSchema<T>): Observable<T> {\r\n    return this.createObservable<T>(origin).pipe(\r\n      map(newPageOptions => this.mergePageOptions<T>(originalOption, newPageOptions, optionSchema))\r\n    );\r\n  }\r\n\r\n  changeOriginalOptionsToNewOptions<T, K>(objectToChange: T, newOptions: K) {\r\n    Object.keys(newOptions).forEach(key => {\r\n      const value = newOptions[key];\r\n      if (objectToChange[key]) {\r\n        if (Array.isArray(value)) {\r\n          objectToChange[key] = [...value];\r\n          return;\r\n        }\r\n        if ((typeof (value) === 'number' || typeof (value) === 'string')) {\r\n          objectToChange[key] = value;\r\n          return;\r\n        }\r\n        if (typeof (value) === 'object') {\r\n          objectToChange[key] = { ...value };\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private createObservable<T>(origin: urlOrFunction): Observable<T> {\r\n    if (typeof origin === 'string') {\r\n      return this.http.post<T>(origin, {});\r\n    }\r\n    return from(Promise.resolve(origin()));\r\n  }\r\n\r\n  private mergePageOptions<T>(originalOption: T, newPageOptions: T, optionSchema: PoPageDynamicOptionsSchema<T>) {\r\n\r\n    const mergePageOptions: T = optionSchema.schema.reduce(\r\n      (objWithNewProp, prop) =>\r\n      ({...objWithNewProp, [prop.nameProp]: this.createNewProp(prop, originalOption, newPageOptions)})\r\n      , {} as T);\r\n\r\n    Object.keys(mergePageOptions).forEach(key => !mergePageOptions[key] && delete mergePageOptions[key]);\r\n\r\n    return mergePageOptions;\r\n  }\r\n\r\n  private createNewProp<T>(prop: PoPageDynamicOptionsProp<T>, originalOption: T, newPageOptions: T) {\r\n    if (prop.merge) {\r\n        return this.mergeOptions(originalOption[prop.nameProp], newPageOptions[prop.nameProp], prop.keyForMerge  );\r\n    } else {\r\n      return newPageOptions[prop.nameProp] || originalOption[prop.nameProp];\r\n    }\r\n  }\r\n\r\n  private mergeOptions<T>(originalOptions: (Array<T> | T) , newOptions: (Array<T> | T) , filterProp?: keyof T) {\r\n\r\n    if (!originalOptions && !newOptions) {\r\n      return;\r\n    }\r\n    if (!newOptions) {\r\n      return originalOptions;\r\n    }\r\n    if (!originalOptions) {\r\n      return newOptions;\r\n    }\r\n\r\n    if (originalOptions instanceof Array && newOptions instanceof Array ) {\r\n      return this.mergeOptionsArray(originalOptions, newOptions, filterProp);\r\n    }\r\n\r\n    return {...originalOptions, ...newOptions};\r\n\r\n  }\r\n\r\n  private mergeOptionsArray<T>(originalOptions: Array<T>, newOptions: Array<T>, filterProp: keyof T) {\r\n    const deduplicateNewOptions = newOptions.filter(\r\n      newItem => !originalOptions.find(originalItem => originalItem[filterProp] === newItem[filterProp]));\r\n    const mergedOriginalOptions = originalOptions.map(originalItem => {\r\n        const newItem = newOptions.find(newOptionsItem => originalItem[filterProp] === newOptionsItem[filterProp]) || originalItem;\r\n        return {...originalItem, ...newItem};\r\n      }\r\n    );\r\n    return [...mergedOriginalOptions, ...deduplicateNewOptions];\r\n  }\r\n}\r\n","import { HttpClientModule } from '@angular/common/http';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { PoPageCustomizationService } from './po-page-customization.service';\r\n\r\n/**\r\n * @description\r\n *\r\n * MÃ³dulo do serviÃ§o do po-page-customization-service.\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [\r\n    PoPageCustomizationService\r\n  ]\r\n})\r\nexport class PoPageCustomizationModule { }\r\n","import { EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\n\r\nimport { PoDynamicFormField, PoLanguageService, PoModalAction, PoModalComponent } from '@portinari/portinari-ui';\r\n\r\nimport { poLocaleDefault } from '../../../utils/util';\r\n\r\nimport { PoAdvancedFilterLiterals } from './po-advanced-filter-literals.interface';\r\n\r\nexport const poAdvancedFiltersLiteralsDefault = {\r\n  en: <PoAdvancedFilterLiterals> {\r\n    title: 'Advanced search',\r\n    cancelLabel: 'Cancel',\r\n    confirmLabel: 'Apply filters'\r\n  },\r\n  es: <PoAdvancedFilterLiterals> {\r\n    title: 'BÃºsqueda avanzada',\r\n    cancelLabel: 'Cancelar',\r\n    confirmLabel: 'Aplicar filtros'\r\n  },\r\n  pt: <PoAdvancedFilterLiterals> {\r\n    title: 'Busca avanÃ§ada',\r\n    cancelLabel: 'Cancelar',\r\n    confirmLabel: 'Aplicar filtros'\r\n  },\r\n  ru: <PoAdvancedFilterLiterals> {\r\n    title: 'Ð Ð°ÑÑÐ¸ÑÐµÐ½Ð½ÑÐ¹ Ð¿Ð¾Ð¸ÑÐº',\r\n    cancelLabel: 'Ð¾ÑÐ¼ÐµÐ½Ð¸ÑÑ',\r\n    confirmLabel: 'ÐÑÐ¸Ð¼ÐµÐ½Ð¸ÑÑ ÑÐ¸Ð»ÑÑÑÑ'\r\n  }\r\n};\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Filtro de busca avanÃ§ada criado a partir de um formulÃ¡rio dinÃ¢mico.\r\n * Componente de uso interno.\r\n */\r\nexport class PoAdvancedFilterBaseComponent {\r\n\r\n  @ViewChild(PoModalComponent, { static: true }) poModal: PoModalComponent;\r\n\r\n  private _filters: Array<PoDynamicFormField> = [];\r\n  private _literals: PoAdvancedFilterLiterals;\r\n\r\n  filter = {};\r\n  language: string = poLocaleDefault;\r\n\r\n  primaryAction: PoModalAction = {\r\n    action: () => {\r\n      const models = this.getValuesFromForm();\r\n\r\n      this.searchEvent.emit(models);\r\n      this.poModal.close();\r\n    },\r\n    label: this.literals.confirmLabel\r\n  };\r\n\r\n  secondaryAction: PoModalAction = {\r\n    action: () => {\r\n      this.poModal.close();\r\n    },\r\n    label: this.literals.cancelLabel\r\n  };\r\n\r\n  /**\r\n   * ColeÃ§Ã£o de objetos que implementam a interface PoDynamicFormField, para definiÃ§Ã£o dos campos que serÃ£o criados\r\n   * dinamicamente.\r\n   */\r\n  @Input('p-filters') set filters(filters: Array<PoDynamicFormField>) {\r\n    this._filters = Array.isArray(filters) ? [...filters] : [];\r\n  }\r\n\r\n  get filters() {\r\n    return this._filters;\r\n  }\r\n\r\n  /** Objeto com as literais usadas no `po-advanced-filter`. */\r\n  @Input('p-literals') set literals(value: PoAdvancedFilterLiterals) {\r\n    if (value instanceof Object && !(value instanceof Array)) {\r\n      this._literals = {\r\n        ...poAdvancedFiltersLiteralsDefault[poLocaleDefault],\r\n        ...poAdvancedFiltersLiteralsDefault[this.language],\r\n        ...value\r\n      };\r\n    } else {\r\n      this._literals = poAdvancedFiltersLiteralsDefault[this.language];\r\n    }\r\n\r\n    this.primaryAction.label = this.literals.confirmLabel;\r\n    this.secondaryAction.label = this.literals.cancelLabel;\r\n  }\r\n\r\n  get literals() {\r\n    return this._literals || poAdvancedFiltersLiteralsDefault[this.language];\r\n  }\r\n\r\n  /** FunÃ§Ã£o que serÃ¡ disparada e receberÃ¡ os valores do formulÃ¡rio ao ser clicado no botÃ£o buscar. */\r\n  @Output('p-search-event') searchEvent = new EventEmitter<any>();\r\n\r\n  constructor(languageService: PoLanguageService) {\r\n    this.language = languageService.getShortLanguage();\r\n  }\r\n\r\n    // Retorna os models dos campos preenchidos\r\n  private getValuesFromForm() {\r\n    Object.keys(this.filter).forEach(property => {\r\n      if (this.filter[property] === undefined || this.filter[property] === '') {\r\n        delete this.filter[property];\r\n      }\r\n    });\r\n\r\n    return this.filter;\r\n  }\r\n\r\n}\r\n","import { Component, ViewChild } from '@angular/core';\r\n\r\nimport { PoDynamicFormComponent, PoLanguageService } from '@portinari/portinari-ui';\r\n\r\nimport { PoAdvancedFilterBaseComponent } from './po-advanced-filter-base.component';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @docsExtends PoAdvancedFilterBaseComponent\r\n *\r\n * @examplePrivate\r\n *\r\n * <example-private name=\"po-advanced-filter\" title=\"Portinari Busca AvanÃ§ada\">\r\n *   <file name=\"sample-po-advanced-filter.component.html\"> </file>\r\n *   <file name=\"sample-po-advanced-filter.component.ts\"> </file>\r\n * </example-private>\r\n */\r\n@Component({\r\n  selector: 'po-advanced-filter',\r\n  templateUrl: './po-advanced-filter.component.html'\r\n})\r\nexport class PoAdvancedFilterComponent extends PoAdvancedFilterBaseComponent {\r\n\r\n  @ViewChild(PoDynamicFormComponent, { static: true }) poDynamicForm: PoDynamicFormComponent;\r\n\r\n  constructor(languageService: PoLanguageService) {\r\n    super(languageService);\r\n  }\r\n\r\n  open() {\r\n    this.filter = {};\r\n    this.poModal.open();\r\n  }\r\n\r\n}\r\n","import { EventEmitter, Input, Output } from '@angular/core';\r\n\r\nimport { PoBreadcrumb, PoDynamicFormField, PoLanguageService, PoPageAction } from '@portinari/portinari-ui';\r\n\r\nimport { poLocaleDefault } from '../../utils/util';\r\n\r\nimport { PoPageDynamicSearchLiterals } from './po-page-dynamic-search-literals.interface';\r\nimport { poAdvancedFiltersLiteralsDefault } from './po-advanced-filter/po-advanced-filter-base.component';\r\nimport { PoAdvancedFilterLiterals } from './po-advanced-filter/po-advanced-filter-literals.interface';\r\nimport { PoPageDynamicSearchOptions } from './po-page-dynamic-search-options.interface';\r\n\r\nexport const poPageDynamicSearchLiteralsDefault = {\r\n  en: <PoPageDynamicSearchLiterals> {\r\n    disclaimerGroupTitle: 'Displaying results filtered by:',\r\n    filterTitle: poAdvancedFiltersLiteralsDefault.en.title,\r\n    filterCancelLabel: poAdvancedFiltersLiteralsDefault.en.cancelLabel,\r\n    filterConfirmLabel: poAdvancedFiltersLiteralsDefault.en.confirmLabel,\r\n    quickSearchLabel: 'Quick search:',\r\n    searchPlaceholder: 'Search'\r\n  },\r\n  es: <PoPageDynamicSearchLiterals> {\r\n    disclaimerGroupTitle: 'Presentando resultados filtrados por:',\r\n    filterTitle: poAdvancedFiltersLiteralsDefault.es.title,\r\n    filterCancelLabel: poAdvancedFiltersLiteralsDefault.es.cancelLabel,\r\n    filterConfirmLabel: poAdvancedFiltersLiteralsDefault.es.confirmLabel,\r\n    quickSearchLabel: 'BÃºsqueda rÃ¡pida:',\r\n    searchPlaceholder: 'Buscar',\r\n  },\r\n  pt: <PoPageDynamicSearchLiterals> {\r\n    disclaimerGroupTitle: 'Apresentando resultados filtrados por:',\r\n    filterTitle: poAdvancedFiltersLiteralsDefault.pt.title,\r\n    filterCancelLabel: poAdvancedFiltersLiteralsDefault.pt.cancelLabel,\r\n    filterConfirmLabel: poAdvancedFiltersLiteralsDefault.pt.confirmLabel,\r\n    quickSearchLabel: 'Pesquisa rÃ¡pida:',\r\n    searchPlaceholder: 'Pesquisar'\r\n  },\r\n  ru: <PoPageDynamicSearchLiterals> {\r\n    disclaimerGroupTitle: 'ÐÑÐ¾Ð±ÑÐ°Ð¶ÐµÐ½Ð¸Ðµ ÑÐµÐ·ÑÐ»ÑÑÐ°ÑÐ¾Ð², Ð¾ÑÑÐ¸Ð»ÑÑÑÐ¾Ð²Ð°Ð½Ð½ÑÑ Ð¿Ð¾:',\r\n    filterTitle: poAdvancedFiltersLiteralsDefault.ru.title,\r\n    filterCancelLabel: poAdvancedFiltersLiteralsDefault.ru.cancelLabel,\r\n    filterConfirmLabel: poAdvancedFiltersLiteralsDefault.ru.confirmLabel,\r\n    quickSearchLabel: 'ÐÑÑÑÑÑÐ¹ Ð¿Ð¾Ð¸ÑÐº:',\r\n    searchPlaceholder: 'Ð¸ÑÑÐ»ÐµÐ´Ð¾Ð²Ð°Ð½Ð¸Ðµ'\r\n  },\r\n};\r\n\r\n/**\r\n * @description\r\n *\r\n * Componente com as aÃ§Ãµes de pesquisa jÃ¡ definidas, bastando que o desenvolvedor implemente apenas a chamada para as APIs\r\n * e exiba as informaÃ§Ãµes.\r\n */\r\nexport class PoPageDynamicSearchBaseComponent {\r\n\r\n  private _filters: Array<PoDynamicFormField> = [];\r\n  private _literals: PoPageDynamicSearchLiterals;\r\n\r\n  advancedFilterLiterals: PoAdvancedFilterLiterals;\r\n\r\n  private language: string;\r\n\r\n  /** Nesta propriedade deve ser definido um array de objetos que implementam a interface `PoPageAction`. */\r\n  @Input('p-actions') actions?: Array<PoPageAction> = [];\r\n\r\n  /** Objeto com propriedades do breadcrumb. */\r\n  @Input('p-breadcrumb') breadcrumb?: PoBreadcrumb = { items: [] };\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Objeto com as literais usadas no `po-page-dynamic-search`.\r\n   *\r\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\r\n   *\r\n   * ```\r\n   *  const customLiterals: PoPageDynamicSearchLiterals = {\r\n   *    disclaimerGroupTitle: 'Filtros aplicados:',\r\n   *    filterTitle: 'Filtro avanÃ§ado',\r\n   *    filterCancelLabel: 'Fechar',\r\n   *    filterConfirmLabel: 'Aplicar',\r\n   *    quickSearchLabel: 'Valor pesquisado:',\r\n   *    searchPlaceholder: 'Pesquise aqui'\r\n   *  };\r\n   * ```\r\n   *\r\n   * Ou passando apenas as literais que deseja customizar:\r\n   *\r\n   * ```\r\n   *  const customLiterals: PoPageDynamicSearchLiterals = {\r\n   *    filterTitle: 'Filtro avanÃ§ado'\r\n   *  };\r\n   * ```\r\n   *\r\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\r\n   *\r\n   * ```\r\n   * <po-page-dynamic-search\r\n   *   [p-literals]=\"customLiterals\">\r\n   * </po-page-dynamic-search>\r\n   * ```\r\n   *\r\n   * > O valor padrÃ£o serÃ¡ traduzido de acordo com o idioma configurado no [`PoI18nService`](/documentation/po-i18n) ou *browser*.\r\n   */\r\n  @Input('p-literals') set literals(value: PoPageDynamicSearchLiterals) {\r\n    if (value instanceof Object && !(value instanceof Array)) {\r\n      this._literals = {\r\n        ...poPageDynamicSearchLiteralsDefault[poLocaleDefault],\r\n        ...poPageDynamicSearchLiteralsDefault[this.language],\r\n        ...value\r\n      };\r\n    } else {\r\n      this._literals = poPageDynamicSearchLiteralsDefault[this.language];\r\n    }\r\n\r\n    this.setAdvancedFilterLiterals(this.literals);\r\n  }\r\n\r\n  get literals() {\r\n    return this._literals || poPageDynamicSearchLiteralsDefault[this.language];\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Lista dos campos usados na busca avanÃ§ada. Caso o mesmo nÃ£o seja passado a busca avanÃ§ada nÃ£o serÃ¡ exibida.\r\n   */\r\n  @Input('p-filters') set filters(filters: Array<PoDynamicFormField>) {\r\n    this._filters = Array.isArray(filters) ? [...filters] : [];\r\n  }\r\n\r\n  get filters(): Array<PoDynamicFormField> {\r\n    return this._filters;\r\n  }\r\n\r\n  /**\r\n   * FunÃ§Ã£o ou serviÃ§o que serÃ¡ executado na inicializaÃ§Ã£o do componente.\r\n   *\r\n   * A propriedade aceita os seguintes tipos:\r\n   * - `string`: *Endpoint* usado pelo componente para requisiÃ§Ã£o via `POST`.\r\n   * - `function`: MÃ©todo que serÃ¡ executado.\r\n   *\r\n   * O retorno desta funÃ§Ã£o deve ser do tipo `PoPageDynamicSearchOptions`,\r\n   * onde o usuÃ¡rio poderÃ¡ customizar novos filtros, breadcrumb, title e actions\r\n   *\r\n   * Por exemplo:\r\n   *\r\n   * ```\r\n   * getPageOptions(): PoPageDynamicSearchOptions {\r\n   * return {\r\n   *   actions: [\r\n   *     { label: 'Find on Google' },\r\n   *   ],\r\n   *   filters: [\r\n   *     { property: 'idCard', gridColumns: 6 }\r\n   *   ]\r\n   * };\r\n   * }\r\n   *\r\n   * ```\r\n   * Para referenciar a sua funÃ§Ã£o utilize a propriedade `bind`, por exemplo:\r\n   * ```\r\n   *  [p-load]=\"onLoadOptions.bind(this)\"\r\n   * ```\r\n   */\r\n  @Input('p-load') onLoad: string | (() => PoPageDynamicSearchOptions);\r\n\r\n  /** TÃ­tulo da pÃ¡gina. */\r\n  @Input('p-title') title: string;\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Evento disparado ao executar a pesquisa avanÃ§ada, o mesmo irÃ¡ repassar um objeto com os valores preenchidos no modal de pesquisa.\r\n   *\r\n   * > Campos nÃ£o preenchidos nÃ£o irÃ£o aparecer no objeto passado por parÃ¢metro.\r\n   */\r\n  @Output('p-advanced-search') advancedSearch?: EventEmitter<any> = new EventEmitter();\r\n\r\n  /** Evento disparado ao remover um ou todos os disclaimers pelo usuÃ¡rio. */\r\n  @Output('p-change-disclaimers') changeDisclaimers?: EventEmitter<any> = new EventEmitter();\r\n\r\n  /** Evento disparado ao realizar uma busca pelo campo de pesquisa rÃ¡pida, o mesmo serÃ¡ chamado repassando o valor digitado. */\r\n  @Output('p-quick-search') quickSearch?: EventEmitter<string> = new EventEmitter();\r\n\r\n  constructor(languageService: PoLanguageService) {\r\n    this.language = languageService.getShortLanguage();\r\n  }\r\n\r\n  protected setAdvancedFilterLiterals(literals: PoPageDynamicSearchLiterals) {\r\n    this.advancedFilterLiterals = {\r\n      cancelLabel: literals.filterCancelLabel,\r\n      confirmLabel: literals.filterConfirmLabel,\r\n      title: literals.filterTitle\r\n    };\r\n  }\r\n}\r\n","import { Component, ViewChild, OnInit, OnDestroy } from '@angular/core';\r\n\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { PoDisclaimerGroup, PoDynamicFieldType, PoDynamicFormField, PoLanguageService, PoPageFilter } from '@portinari/portinari-ui';\r\n\r\nimport { capitalizeFirstLetter, getBrowserLanguage } from '../../utils/util';\r\nimport { PoPageCustomizationService } from '../../services/po-page-customization/po-page-customization.service';\r\n\r\nimport { PoAdvancedFilterComponent } from './po-advanced-filter/po-advanced-filter.component';\r\nimport { PoPageDynamicSearchBaseComponent } from './po-page-dynamic-search-base.component';\r\nimport { PoPageDynamicSearchOptions } from './po-page-dynamic-search-options.interface';\r\nimport { PoPageDynamicOptionsSchema } from '../../services';\r\n\r\ntype UrlOrPoCustomizationFunction = string | (() => PoPageDynamicSearchOptions );\r\n\r\n/**\r\n * @docsExtends PoPageDynamicSearchBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-page-dynamic-search-basic\" title=\"Portinari Page Dynamic Search Basic\">\r\n *  <file name=\"sample-po-page-dynamic-search-basic/sample-po-page-dynamic-search-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-page-dynamic-search-basic/sample-po-page-dynamic-search-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-page-dynamic-search-hiring-processes\" title=\"Portinari Page Dynamic Search - Hiring processes\">\r\n *  <file name=\"sample-po-page-dynamic-search-hiring-processes/sample-po-page-dynamic-search-hiring-processes.component.html\"> </file>\r\n *  <file name=\"sample-po-page-dynamic-search-hiring-processes/sample-po-page-dynamic-search-hiring-processes.component.ts\"> </file>\r\n *  <file name=\"sample-po-page-dynamic-search-hiring-processes/sample-po-page-dynamic-search-hiring-processes.service.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-page-dynamic-search',\r\n  templateUrl: './po-page-dynamic-search.component.html'\r\n})\r\nexport class PoPageDynamicSearchComponent extends PoPageDynamicSearchBaseComponent implements OnInit, OnDestroy {\r\n\r\n  private loadSubscription: Subscription;\r\n\r\n  private readonly _disclaimerGroup: PoDisclaimerGroup = {\r\n    change: this.onChangeDisclaimerGroup.bind(this),\r\n    disclaimers: [],\r\n    title: this.literals.disclaimerGroupTitle\r\n  };\r\n\r\n  private readonly _filterSettings: PoPageFilter = {\r\n    action: 'onAction',\r\n    advancedAction: 'onAdvancedAction',\r\n    ngModel: 'quickFilter',\r\n    placeholder: this.literals.searchPlaceholder\r\n  };\r\n\r\n  // Flag to control when changeDisclaimerGroup should be called\r\n  private changeDisclaimersEnabled: boolean = false;\r\n\r\n  private quickFilter;\r\n\r\n  @ViewChild(PoAdvancedFilterComponent, { static: true }) poAdvancedFilter: PoAdvancedFilterComponent;\r\n\r\n  constructor(languageService: PoLanguageService, private poPageCustomizationService: PoPageCustomizationService) {\r\n    super(languageService);\r\n  }\r\n\r\n  get disclaimerGroup() {\r\n    return Object.assign({}, this._disclaimerGroup, { title: this.literals.disclaimerGroupTitle });\r\n  }\r\n\r\n  get filterSettings() {\r\n    this._filterSettings.advancedAction = this.filters.length === 0 ? undefined : 'onAdvancedAction';\r\n\r\n    return Object.assign({}, this._filterSettings, { placeholder: this.literals.searchPlaceholder });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setAdvancedFilterLiterals(this.literals);\r\n    if (this.onLoad) {\r\n      this.loadOptionsOnInitialize(this.onLoad);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.loadSubscription) {\r\n      this.loadSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  onAction() {\r\n    this.changeDisclaimersEnabled = false;\r\n    this._disclaimerGroup.disclaimers = [\r\n      { property: 'search', label: `${this.literals.quickSearchLabel} ${this.quickFilter}`, value: this.quickFilter }\r\n    ];\r\n\r\n    if (this.quickSearch.observers && this.quickSearch.observers.length > 0) {\r\n      this.quickSearch.emit(this.quickFilter);\r\n    }\r\n\r\n    this.quickFilter = undefined;\r\n  }\r\n\r\n  onAdvancedAction() {\r\n    this.poAdvancedFilter.open();\r\n  }\r\n\r\n  onAdvancedSearch(filters) {\r\n    this.changeDisclaimersEnabled = false;\r\n    this._disclaimerGroup.disclaimers = this.setDisclaimers(filters);\r\n\r\n    this.advancedSearch.emit(filters);\r\n  }\r\n\r\n  private applyDisclaimerLabelValue(field: any, filterValue: any) {\r\n    const values = Array.isArray(filterValue) ? filterValue : [ filterValue ];\r\n\r\n    const labels = values.map(value => {\r\n      const filteredField = field.options.find(option => option.value === value);\r\n\r\n      return filteredField.label || filteredField.value;\r\n    });\r\n\r\n    return labels.join(', ');\r\n  }\r\n\r\n  private formatDate(date: string) {\r\n    const year = parseInt(date.substr(0, 4), 10);\r\n    const month = parseInt(date.substr(5, 2), 10);\r\n    const day = parseInt(date.substr(8, 2), 10);\r\n\r\n    return new Date(year, month - 1, day).toLocaleDateString(getBrowserLanguage());\r\n  }\r\n\r\n  private getFieldByProperty(fields: Array<PoDynamicFormField>, fieldName: string) {\r\n    return fields.find((field: PoDynamicFormField) => field.property === fieldName);\r\n  }\r\n\r\n  private getFilterValueToDisclaimer(field: any, value: any) {\r\n\r\n    if (field.type === PoDynamicFieldType.Date) {\r\n      return this.formatDate(value);\r\n    }\r\n\r\n    if (field.options) {\r\n      return this.applyDisclaimerLabelValue(field, value);\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  private onChangeDisclaimerGroup(disclaimers) {\r\n    this.changeDisclaimersEnabled ? this.changeDisclaimers.emit(disclaimers) : this.changeDisclaimersEnabled = true;\r\n  }\r\n\r\n  private setDisclaimers(filters) {\r\n    const disclaimers = [];\r\n    const properties = Object.keys(filters);\r\n\r\n    properties.forEach(property => {\r\n      const field = this.getFieldByProperty(this.filters, property);\r\n      const label = field.label || capitalizeFirstLetter(field.property);\r\n      const value = filters[property];\r\n\r\n      disclaimers.push({\r\n        label: `${label}: ${this.getFilterValueToDisclaimer(field, value)}`,\r\n        property,\r\n        value\r\n      });\r\n    });\r\n\r\n    return disclaimers;\r\n  }\r\n\r\n  private loadOptionsOnInitialize(onLoad: UrlOrPoCustomizationFunction) {\r\n\r\n    this.loadSubscription = this.getPoDynamicPageOptions(onLoad).subscribe(responsePoOption =>\r\n        this.poPageCustomizationService.changeOriginalOptionsToNewOptions(this, responsePoOption));\r\n  }\r\n\r\n  private getPoDynamicPageOptions(onLoad: UrlOrPoCustomizationFunction): Observable<PoPageDynamicSearchOptions> {\r\n    const originalOption: PoPageDynamicSearchOptions = {\r\n      title: this.title,\r\n      actions: this.actions,\r\n      breadcrumb: this.breadcrumb,\r\n      filters: this.filters\r\n    };\r\n\r\n    const pageOptionSchema: PoPageDynamicOptionsSchema<PoPageDynamicSearchOptions> = {\r\n      schema: [\r\n        {\r\n          nameProp: 'filters',\r\n          merge: true,\r\n          keyForMerge: 'property'\r\n        },\r\n        {\r\n          nameProp: 'actions',\r\n          merge: true,\r\n          keyForMerge: 'label'\r\n        },\r\n        {\r\n          nameProp: 'breadcrumb'\r\n        },\r\n        {\r\n          nameProp: 'title'\r\n        }\r\n      ]\r\n    };\r\n\r\n    return this.poPageCustomizationService.getCustomOptions(onLoad, originalOption, pageOptionSchema);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { PoDynamicModule, PoLanguageModule, PoModalModule, PoPageModule } from '@portinari/portinari-ui';\r\n\r\nimport { PoPageCustomizationModule } from '../../services/po-page-customization/po-page-customization.module';\r\n\r\nimport { PoAdvancedFilterComponent } from './po-advanced-filter/po-advanced-filter.component';\r\nimport { PoPageDynamicSearchComponent } from './po-page-dynamic-search.component';\r\n\r\n/**\r\n * @description\r\n *\r\n * MÃ³dulo do template do po-page-dynamic-search.\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule,\r\n\r\n    PoDynamicModule,\r\n    PoLanguageModule,\r\n    PoModalModule,\r\n    PoPageModule,\r\n    PoPageCustomizationModule\r\n  ],\r\n  declarations: [\r\n    PoAdvancedFilterComponent,\r\n    PoPageDynamicSearchComponent\r\n  ],\r\n  exports: [\r\n    PoPageDynamicSearchComponent\r\n  ]\r\n})\r\nexport class PoPageDynamicSearchModule { }\r\n","import { Input } from '@angular/core';\r\n\r\nimport { PoBreadcrumb } from '@portinari/portinari-ui';\r\n\r\nimport { convertToBoolean } from '../../utils/util';\r\n\r\nimport { PoPageDynamicTableField } from './interfaces/po-page-dynamic-table-field.interface';\r\n\r\nexport class PoPageDynamicListBaseComponent {\r\n\r\n  private _autoRouter: boolean = false;\r\n  private _columns: Array<any> = [];\r\n  private _duplicates: Array<any> = [];\r\n  private _fields: Array<any> = [];\r\n  private _filters: Array<any> = [];\r\n  private _keys: Array<any> = [];\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Cria automaticamente as rotas de ediÃ§Ã£o (novo/duplicate) e detalhes caso sejam definidas aÃ§Ãµes na propriedade `p-actions`\r\n   *\r\n   * As rotas criadas serÃ£o baseadas na propriedade `p-actions`.\r\n   *\r\n   * > Para o correto funcionamento nÃ£o pode haver nenhuma rota coringa (`**`) especificada.\r\n   *\r\n   * @default false\r\n   */\r\n  @Input('p-auto-router') set autoRouter(value: boolean) {\r\n    this._autoRouter = convertToBoolean(value);\r\n  }\r\n\r\n  get autoRouter(): boolean {\r\n    return this._autoRouter;\r\n  }\r\n\r\n  /** Objeto com propriedades do breadcrumb. */\r\n  @Input('p-breadcrumb') breadcrumb?: PoBreadcrumb = { items: [] };\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Lista dos campos usados na tabela e busca avanÃ§ada.\r\n   *\r\n   *\r\n   * > Caso nÃ£o seja definido fields a tabela assumirÃ¡ o comportamento padrÃ£o.\r\n   */\r\n  @Input('p-fields') set fields(fields: Array<PoPageDynamicTableField>) {\r\n    this._fields = Array.isArray(fields) ? [...fields] : [];\r\n\r\n    this.setFieldsProperties(this.fields);\r\n  }\r\n\r\n  get fields(): Array<PoPageDynamicTableField> {\r\n    return this._fields;\r\n  }\r\n\r\n  /** Endpoint da API dos recursos que serÃ£o exibidos. */\r\n  /**\r\n   * @description\r\n   *\r\n   * Endpoint usado pelo template para requisiÃ§Ã£o dos recursos que serÃ£o exibidos.\r\n   *\r\n   * Ao realizar requisiÃ§Ãµes de busca, podem ser enviados os parÃ¢metros (caso possuam valor): `page`, `pageSize`, `search` e `order`.\r\n   *\r\n   * Caso a coluna estiver ordenada descendentemente serÃ¡ enviada da seguinte forma: `-name`, se for ordenada\r\n   * ascendentemente serÃ¡ enviada apenas com o nome da coluna, por exemplo: `name`.\r\n   *\r\n   * Exemplo de uma requisiÃ§Ã£o de busca:\r\n   *\r\n   * > `GET {end-point}/{resource}?page=1&pageSize=10&search=components&order=-name`\r\n   *\r\n   * Caso a aÃ§Ã£o `remove` estiver configurada, serÃ¡ feito uma requisiÃ§Ã£o de exclusÃ£o nesse mesmo endpoint passando os campos\r\n   * setados como `key: true`.\r\n   *\r\n   * > `DELETE {end-point}/{keys}`\r\n   *\r\n   * ```\r\n   *  <po-page-dynamic-table\r\n   *    [p-actions]=\"{ remove: true }\"\r\n   *    [p-fields]=\"[ { property: 'id', key: true } ]\"\r\n   *    p-service=\"/api/po-samples/v1/people\"\r\n   *    ...>\r\n   *  </po-page-dynamic-table>\r\n   * ```\r\n   *\r\n   * ResquisiÃ§Ã£o disparada, onde a propriedade `id` Ã© igual a 2:\r\n   *\r\n   * ```\r\n   *  DELETE /api/po-samples/v1/people/2 HTTP/1.1\r\n   *  Host: localhost:4000\r\n   *  Connection: keep-alive\r\n   *  Accept: application/json, text/plain\r\n   *  ...\r\n   * ```\r\n   *\r\n   * Para a aÃ§Ã£o `removeAll`, serÃ¡ feito uma requisiÃ§Ã£o de exclusÃ£o em lote para esse mesmo endpoint passando, uma lista\r\n   * de objetos com os campos setados como `key: true` via `payload`.\r\n   *\r\n   * > `DELETE {end-point}`\r\n   *\r\n   * > `Payload: [ {key}, {key} ... {key} ]`\r\n   *\r\n   * ```\r\n   *  <po-page-dynamic-table\r\n   *    [p-actions]=\"{ removeAll: true }\"\r\n   *    [p-fields]=\"[ { property: 'id', key: true } ]\"\r\n   *    p-service=\"/api/po-samples/v1/people\"\r\n   *    ...>\r\n   *  </po-page-dynamic-table>\r\n   * ```\r\n   *\r\n   * ResquisiÃ§Ã£o disparada, onde foram selecionados 3 itens para serem removidos:\r\n   *\r\n   * ```\r\n   *  DELETE /api/po-samples/v1/people HTTP/1.1\r\n   *  Host: localhost:4000\r\n   *  Connection: keep-alive\r\n   *  Accept: application/json, text/plain\r\n   *  ...\r\n   * ```\r\n   *\r\n   * Request payload:\r\n   *\r\n   * ```\r\n   * [{\"id\":2},{\"id\":4},{\"id\":5}]\r\n   * ```\r\n   *\r\n   * > Caso esteja usando metadados com o template, serÃ¡ disparado uma requisiÃ§Ã£o na inicializaÃ§Ã£o do template para buscar\r\n   * > os metadados da pÃ¡gina passando o tipo do metadado esperado e a versÃ£o cacheada pelo browser.\r\n   * >\r\n   * > `GET {end-point}/metadata?type=list&version={version}`\r\n   */\r\n  @Input('p-service-api') serviceApi: string;\r\n\r\n  /** TÃ­tulo da pÃ¡gina. */\r\n  @Input('p-title') title: string;\r\n\r\n  get columns() {\r\n    return [...this._columns];\r\n  }\r\n\r\n  get duplicates() {\r\n    return [...this._duplicates];\r\n  }\r\n\r\n  get filters() {\r\n    return [...this._filters];\r\n  }\r\n\r\n  get keys() {\r\n    return [...this._keys];\r\n  }\r\n\r\n  private setFieldsProperties(fields: Array<any>) {\r\n    this._filters = fields.filter(field => field.filter === true);\r\n    this._columns = fields.filter(field => field.visible === undefined || field.visible === true);\r\n    this._keys = fields.filter(field => field.key === true).map(field => field.property);\r\n    this._duplicates = fields.filter(field => field.duplicate === true).map(field => field.property);\r\n  }\r\n\r\n}\r\n","import { ActivatedRoute, Route, Router } from '@angular/router';\r\nimport { Component, Input, OnInit, OnDestroy } from '@angular/core';\r\n\r\nimport { Subscription, Observable, EMPTY, throwError, concat } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nimport {\r\n  PoDialogConfirmOptions,\r\n  PoDialogService,\r\n  PoNotificationService,\r\n  PoPageAction,\r\n  PoTableAction,\r\n  PoTableColumnSort,\r\n  PoTableColumnSortType\r\n} from '@portinari/portinari-ui';\r\n\r\nimport * as util from '../../utils/util';\r\n\r\nimport { PoPageDynamicDetailComponent } from '../po-page-dynamic-detail/po-page-dynamic-detail.component';\r\n\r\nimport { PoPageDynamicListBaseComponent } from './po-page-dynamic-list-base.component';\r\nimport { PoPageDynamicService } from '../../services/po-page-dynamic/po-page-dynamic.service';\r\nimport { PoPageDynamicTableActions } from './interfaces/po-page-dynamic-table-actions.interface';\r\nimport { PoPageDynamicTableOptions } from './interfaces/po-page-dynamic-table-options.interface';\r\nimport { PoPageCustomizationService } from './../../services/po-page-customization/po-page-customization.service';\r\nimport { PoPageDynamicOptionsSchema } from './../../services/po-page-customization/po-page-dynamic-options.interface';\r\nimport { PoPageDynamicTableMetaData } from './interfaces/po-page-dynamic-table-metadata.interface';\r\n\r\ntype UrlOrPoCustomizationFunction = string | (() => PoPageDynamicTableOptions );\r\n\r\nexport const poPageDynamicTableLiteralsDefault = {\r\n  en: {\r\n    pageAction: 'New',\r\n    pageActionRemoveAll: 'Delete',\r\n    tableActionView: 'View',\r\n    tableActionEdit: 'Edit',\r\n    tableActionDuplicate: 'Duplicate',\r\n    tableActionDelete: 'Delete',\r\n    confirmRemoveTitle: 'Confirm delete',\r\n    confirmRemoveMessage: 'Are you sure you want to delete this record? You can not undo this action.',\r\n    confirmRemoveAllTitle: 'Confirm batch deletion',\r\n    confirmRemoveAllMessage: 'Are you sure you want to delete all these records? You can not undo this action.',\r\n    loadDataErrorNotification: 'Service not found',\r\n    removeSuccessNotification: 'Item deleted successfully',\r\n    removeAllSuccessNotification: 'Items deleted successfully'\r\n  },\r\n  es: {\r\n    pageAction: 'Nuevo',\r\n    pageActionRemoveAll: 'Borrar',\r\n    tableActionView: 'Visualizar',\r\n    tableActionEdit: 'Editar',\r\n    tableActionDuplicate: 'Duplicar',\r\n    tableActionDelete: 'Borrar',\r\n    confirmRemoveTitle: 'Confirmar la exclusiÃ³n',\r\n    confirmRemoveMessage: 'Â¿EstÃ¡ seguro de que desea eliminar este registro? No puede deshacer esta acciÃ³n.',\r\n    confirmRemoveAllTitle: 'Confirmar la exclusiÃ³n por lotes',\r\n    confirmRemoveAllMessage: 'Â¿EstÃ¡ seguro de que desea eliminar todos estos registros? No puede deshacer esta acciÃ³n.',\r\n    loadDataErrorNotification: 'Servicio no informado.',\r\n    removeSuccessNotification: 'Elemento eliminado con Ã©xito',\r\n    removeAllSuccessNotification: 'Elementos eliminados con Ã©xito'\r\n  },\r\n  pt: {\r\n    pageAction: 'Novo',\r\n    pageActionRemoveAll: 'Excluir',\r\n    tableActionView: 'Visualizar',\r\n    tableActionEdit: 'Editar',\r\n    tableActionDuplicate: 'Duplicar',\r\n    tableActionDelete: 'Excluir',\r\n    confirmRemoveTitle: 'Confirmar exclusÃ£o',\r\n    confirmRemoveMessage: 'Tem certeza de que deseja excluir esse registro? VocÃª nÃ£o poderÃ¡ desfazer essa aÃ§Ã£o.',\r\n    confirmRemoveAllTitle: 'Confirmar exclusÃ£o em lote',\r\n    confirmRemoveAllMessage: 'Tem certeza de que deseja excluir todos esses registros? VocÃª nÃ£o poderÃ¡ desfazer essa aÃ§Ã£o.',\r\n    loadDataErrorNotification: 'ServiÃ§o nÃ£o informado.',\r\n    removeSuccessNotification: 'Item excluido com sucesso',\r\n    removeAllSuccessNotification: 'Items excluidos com sucesso'\r\n  }\r\n};\r\n\r\n/**\r\n * @docsExtends PoPageDynamicListBaseComponent\r\n *\r\n * @description\r\n *\r\n * O `po-page-dynamic-table` Ã© uma pÃ¡gina que exibe uma lista de registros em uma tabela baseado em uma lista de fields,\r\n * o mesmo tambÃ©m suporta metadados conforme especificado na documentaÃ§Ã£o.\r\n *\r\n * ### UtilizaÃ§Ã£o via rota\r\n *\r\n * Ao utilizar as rotas para carregar o template, o `page-dynamic-table` disponibiliza propriedades para\r\n * poder especificar o endpoint dos dados e dos metadados. Exemplo de utilizaÃ§Ã£o:\r\n *\r\n * ```\r\n * {\r\n *   path: 'people',\r\n *   component: PoPageDynamicTableComponent,\r\n *   data: {\r\n *     serviceApi: 'http://localhost:3000/v1/people', // endpoint dos dados\r\n *     serviceMetadataApi: 'http://localhost:3000/v1/metadata' // endpoint dos metadados\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * Para carregar com um recurso jÃ¡ existente, deve ser incluÃ­do um parÃ¢metro na rota chamado `id`:\r\n *\r\n * ```\r\n * {\r\n *   path: 'people/:id',\r\n *   component: PoPageDynamicTableComponent,\r\n *   data: {\r\n *     serviceApi: 'http://localhost:3000/v1/people', // endpoint dos dados\r\n *     serviceMetadataApi: 'http://localhost:3000/v1/metadata' // endpoint dos metadados\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * A requisiÃ§Ã£o dos metadados Ã© feita na inicializaÃ§Ã£o do template para buscar os metadados da pÃ¡gina passando o\r\n * tipo do metadado esperado e a versÃ£o cacheada pelo browser.\r\n *\r\n * O formato esperado na resposta da requisiÃ§Ã£o estÃ¡ especificado na interface\r\n * [PoPageDynamicTableMetadata](/documentation/po-page-dynamic-table#po-page-dynamic-table-metadata). Por exemplo:\r\n *\r\n * ```\r\n *  {\r\n *   version: 1,\r\n *   title: 'Person Table',\r\n *   fields: [\r\n *     { property: 'id', key: true, disabled: true },\r\n *     { property: 'status' },\r\n *     { property: 'name' },\r\n *     { property: 'nickname' },\r\n *     { property: 'birthdate', label: 'Birth date' },\r\n *     { property: 'genre' },\r\n *     { property: 'city' },\r\n *     { property: 'country' }\r\n *   ]\r\n * }\r\n * ```\r\n *\r\n * > Caso o endpoint dos metadados nÃ£o seja especificado, serÃ¡ feito uma requisiÃ§Ã£o utilizando o `serviceApi` da seguinte forma:\r\n * ```\r\n * GET {end-point}/metadata?type=list&version={version}\r\n * ```\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-page-dynamic-table-basic\" title=\"Portinari Page Dynamic Table Basic\">\r\n *  <file name=\"sample-po-page-dynamic-table-basic/sample-po-page-dynamic-table-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-page-dynamic-table-basic/sample-po-page-dynamic-table-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-page-dynamic-table-users\" title=\"Portinari Page Dynamic Table - Users\">\r\n *  <file name=\"sample-po-page-dynamic-table-users/sample-po-page-dynamic-table-users.component.html\"> </file>\r\n *  <file name=\"sample-po-page-dynamic-table-users/sample-po-page-dynamic-table-users.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-page-dynamic-table',\r\n  templateUrl: './po-page-dynamic-table.component.html',\r\n  providers: [ PoPageDynamicService ]\r\n})\r\nexport class PoPageDynamicTableComponent extends PoPageDynamicListBaseComponent implements OnInit, OnDestroy {\r\n\r\n  private _actions: PoPageDynamicTableActions = {};\r\n  private _pageActions: Array<PoPageAction> = [];\r\n  private _tableActions: Array<PoTableAction> = [];\r\n\r\n  private page: number = 1;\r\n  private params = {};\r\n  private sortedColumn: PoTableColumnSort;\r\n  private subscriptions: Array<Subscription> = [];\r\n\r\n  hasNext = false;\r\n  items = [];\r\n  literals = {\r\n    ...poPageDynamicTableLiteralsDefault[util.poLocaleDefault],\r\n    ...poPageDynamicTableLiteralsDefault[util.browserLanguage()]\r\n  };\r\n\r\n  /**\r\n   * FunÃ§Ã£o ou serviÃ§o que serÃ¡ executado na inicializaÃ§Ã£o do componente.\r\n   *\r\n   * A propriedade aceita os seguintes tipos:\r\n   * - `string`: *Endpoint* usado pelo componente para requisiÃ§Ã£o via `POST`.\r\n   * - `function`: MÃ©todo que serÃ¡ executado.\r\n   *\r\n   * O retorno desta funÃ§Ã£o deve ser do tipo `PoPageDynamicTableOptions`,\r\n   * onde o usuÃ¡rio poderÃ¡ customizar novos campos, breadcrumb, title e actions\r\n   *\r\n   * Por exemplo:\r\n   *\r\n   * ```\r\n   * getPageOptions(): PoPageDynamicTableOptions {\r\n   * return {\r\n   *   actions:\r\n   *     { new: 'new', edit: 'edit/:id', remove: true },\r\n   *   fields: [\r\n   *     { property: 'idCard', gridColumns: 6 }\r\n   *   ]\r\n   * };\r\n   * }\r\n   *\r\n   * ```\r\n   * Para referenciar a sua funÃ§Ã£o utilize a propriedade `bind`, por exemplo:\r\n   * ```\r\n   *  [p-load]=\"onLoadOptions.bind(this)\"\r\n   * ```\r\n   */\r\n  @Input('p-load') onLoad: string | (() => PoPageDynamicTableOptions );\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * AÃ§Ãµes da pÃ¡gina e da tabela.\r\n   */\r\n  @Input('p-actions') set actions(value: PoPageDynamicTableActions) {\r\n    this._actions = value && typeof value === 'object' && Object.keys(value).length > 0 ? value : {};\r\n\r\n    this.setPageActions(this.actions);\r\n    this.setRemoveAllAction();\r\n    this.setTableActions(this.actions);\r\n  }\r\n\r\n  get actions(): PoPageDynamicTableActions {\r\n    return this._actions;\r\n  }\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private poDialogService: PoDialogService,\r\n    private poNotification: PoNotificationService,\r\n    private poPageDynamicService: PoPageDynamicService,\r\n    private poPageCustomizationService: PoPageCustomizationService\r\n    ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadDataFromAPI();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscriptions) {\r\n      this.subscriptions.forEach(subscription => {\r\n        subscription.unsubscribe();\r\n      });\r\n    }\r\n  }\r\n  onAdvancedSearch(filter) {\r\n    this.subscriptions.push(this.loadData({ page: 1, ...filter }).subscribe());\r\n    this.params = filter;\r\n  }\r\n\r\n  onChangeDisclaimers(disclaimers) {\r\n    const filter = {};\r\n\r\n    disclaimers.forEach(disclaimer => {\r\n      filter[disclaimer.property] = disclaimer.value;\r\n    });\r\n\r\n    this.onAdvancedSearch(filter);\r\n  }\r\n\r\n  onQuickSearch(filter) {\r\n    this.subscriptions.push(this.loadData(filter ? { page: 1, search: filter } : undefined).subscribe());\r\n    this.params = filter ? { search: filter } : {};\r\n  }\r\n\r\n  onSort(sortedColumn: PoTableColumnSort) {\r\n    this.sortedColumn = sortedColumn;\r\n  }\r\n\r\n  showMore() {\r\n    this.subscriptions.push(this.loadData({ page: ++this.page, ...this.params }).subscribe());\r\n  }\r\n\r\n  get hasActionRemoveAll() {\r\n    return !!this.actions.removeAll;\r\n  }\r\n\r\n  get pageActions() {\r\n    return [...this._pageActions];\r\n  }\r\n\r\n  get tableActions() {\r\n    return this._tableActions;\r\n  }\r\n\r\n  private confirmRemove(item) {\r\n    const confirmOptions: PoDialogConfirmOptions = {\r\n      title: this.literals.confirmRemoveTitle,\r\n      message: this.literals.confirmRemoveMessage,\r\n      confirm: this.remove.bind(this, item)\r\n    };\r\n\r\n    this.poDialogService.confirm(confirmOptions);\r\n  }\r\n\r\n  private confirmRemoveAll() {\r\n    const confirmOptions: PoDialogConfirmOptions = {\r\n      title: this.literals.confirmRemoveAllTitle,\r\n      message: this.literals.confirmRemoveAllMessage,\r\n      confirm: this.removeAll.bind(this)\r\n    };\r\n\r\n    this.poDialogService.confirm(confirmOptions);\r\n  }\r\n\r\n  private formatUniqueKey(item) {\r\n    const keys = util.mapObjectByProperties(item, this.keys);\r\n\r\n    return util.valuesFromObject(keys).join('|');\r\n  }\r\n\r\n  private getOrderParam(sortedColumn: PoTableColumnSort = { type: undefined }) {\r\n    const { column, type } = sortedColumn;\r\n\r\n    if (!column) {\r\n      return {};\r\n    }\r\n\r\n    if (type === PoTableColumnSortType.Descending) {\r\n      return { order: `-${column.property}` };\r\n    }\r\n\r\n    return { order: `${column.property}` };\r\n  }\r\n\r\n  private loadData(params: { page?: number, search?: string } = {}) {\r\n    if (!this.serviceApi) {\r\n      this.poNotification.error(this.literals.loadDataErrorNotification);\r\n      return throwError(this.literals.loadDataErrorNotification);\r\n    }\r\n\r\n    const orderParam = this.getOrderParam(this.sortedColumn);\r\n    const defaultParams: any = { page: 1, pageSize: 10 };\r\n    const fullParams: any = { ...defaultParams, ...params, ...orderParam };\r\n\r\n    return this.poPageDynamicService.getResources(fullParams).pipe(\r\n     tap(response => {\r\n      this.items = fullParams.page === 1 ? response.items : [...this.items, ...response.items];\r\n      this.page = fullParams.page;\r\n      this.hasNext = response.hasNext;\r\n     })\r\n   );\r\n  }\r\n\r\n  private getMetadata(serviceApi: string): Observable<PoPageDynamicTableMetaData> {\r\n    if (serviceApi) {\r\n      return this.poPageDynamicService.getMetadata<PoPageDynamicTableMetaData>().pipe(\r\n       tap(response => {\r\n         this.autoRouter = response.autoRouter || this.autoRouter;\r\n         this.actions = response.actions || this.actions;\r\n         this.breadcrumb = response.breadcrumb || this.breadcrumb;\r\n         this.fields = response.fields || this.fields;\r\n         this.title = response.title || this.title;\r\n       })\r\n     );\r\n    }\r\n\r\n    return EMPTY;\r\n  }\r\n\r\n  // @todo Validar rotas na mÃ£o pois se existir uma rota '**' o catch do navigation nÃ£o funciona.\r\n  private navigateTo(route: {path: string, component?, url?: string, params?: any}, forceStopAutoRouter: boolean = false) {\r\n    this.router.navigate([route.url || route.path], { queryParams: route.params })\r\n      .catch(() => {\r\n        if (forceStopAutoRouter || !this.autoRouter) {\r\n          return;\r\n        }\r\n\r\n        this.router.config.unshift(<Route>{\r\n          path: route.path, component: route.component,  data: { serviceApi: this.serviceApi, autoRouter: true }\r\n        });\r\n\r\n        this.navigateTo(route, true);\r\n      });\r\n  }\r\n\r\n  private openDetail(path: string, item) {\r\n    const url = this.resolveUrl(item, path);\r\n\r\n    this.navigateTo({ path, url, component: PoPageDynamicDetailComponent });\r\n  }\r\n\r\n  private openDuplicate(path: string, item) {\r\n    const duplicates = util.mapObjectByProperties(item, this.duplicates);\r\n\r\n    this.navigateTo({ path, params: { duplicate: JSON.stringify(duplicates) } });\r\n  }\r\n\r\n  private openEdit(path: string, item) {\r\n    const url = this.resolveUrl(item, path);\r\n\r\n    this.navigateTo({ path, url });\r\n  }\r\n\r\n  private openNew(path: string) {\r\n    this.navigateTo({ path });\r\n  }\r\n\r\n  /**\r\n   * Caso exista mais de um identificador, serÃ¡ concatenado com '|'.\r\n   *\r\n   * Ex: { id: 1, company: 'portinari' }\r\n   *\r\n   * Para o endpoint /resources/:id serÃ¡ executada a url /resources/1|portinari\r\n   */\r\n  private remove(item) {\r\n    const uniqueKey = this.formatUniqueKey(item);\r\n\r\n    this.poPageDynamicService.deleteResource(uniqueKey).toPromise().then(() => {\r\n      this.removeLocalItems([item]);\r\n\r\n      this.poNotification.success(this.literals.removeSuccessNotification);\r\n    });\r\n  }\r\n\r\n  private removeAll() {\r\n    // TODO: usar propriedade nova pra validar os itens selecionados\r\n    const selectedItems = this.items.filter(item => item.$selected);\r\n\r\n    if (selectedItems.length === 0) {\r\n      // TODO: usar propriedade nova pra validar os itens selecionados\r\n      return;\r\n    }\r\n\r\n    const keysSelectedItems = util.mapArrayByProperties(selectedItems, this.keys);\r\n\r\n    this.poPageDynamicService.deleteResources(keysSelectedItems).toPromise().then(() => {\r\n      this.removeLocalItems(selectedItems);\r\n\r\n      this.poNotification.success(this.literals.removeAllSuccessNotification);\r\n    });\r\n  }\r\n\r\n  private removeLocalItems(items = []) {\r\n    items.forEach(itemRemoved => {\r\n      const indexItemRemoved = this.items.indexOf(itemRemoved);\r\n\r\n      this.items.splice(indexItemRemoved, 1);\r\n    });\r\n  }\r\n\r\n  private resolveUrl(item: any, path: string) {\r\n    const uniqueKey = this.formatUniqueKey(item);\r\n\r\n    return path.replace(/:id/g, uniqueKey);\r\n  }\r\n\r\n  private setPageActions(actions: PoPageDynamicTableActions) {\r\n    if (actions) {\r\n      this._pageActions = [\r\n        { label: this.literals.pageAction, action: this.openNew.bind(this, actions.new), disabled: !this._actions.new },\r\n      ];\r\n    }\r\n  }\r\n\r\n  private setRemoveAllAction() {\r\n    if (this._actions.removeAll) {\r\n      this._pageActions.push({\r\n      label: this.literals.pageActionRemoveAll, action: this.confirmRemoveAll.bind(this),\r\n        disabled: !this._actions.removeAll\r\n      });\r\n    }\r\n  }\r\n\r\n  private setTableActions(actions: PoPageDynamicTableActions) {\r\n    if (actions) {\r\n      this._tableActions = [\r\n        { action: this.openDetail.bind(this, actions.detail), label: this.literals.tableActionView, visible: !!this._actions.detail },\r\n        { action: this.openEdit.bind(this, actions.edit), label: this.literals.tableActionEdit, visible: !!this._actions.edit },\r\n        { action: this.openDuplicate.bind(this, actions.duplicate), label: this.literals.tableActionDuplicate,\r\n          visible: !!this._actions.duplicate\r\n        },\r\n        { action: this.confirmRemove.bind(this), label: this.literals.tableActionDelete, separator: true, type: 'danger',\r\n          visible: !!this._actions.remove\r\n        }\r\n      ];\r\n    }\r\n  }\r\n\r\n  private loadDataFromAPI() {\r\n    const { serviceApi, serviceMetadataApi } = this.activatedRoute.snapshot.data;\r\n    this.serviceApi = serviceApi || this.serviceApi;\r\n    this.poPageDynamicService.configServiceApi({ endpoint: this.serviceApi, metadata: serviceMetadataApi });\r\n    const metadata$ = this.getMetadata(serviceApi);\r\n    const data$ = this.loadData();\r\n    const customOption$ = this.loadOptionsOnInitialize(this.onLoad);\r\n    this.subscriptions.push(concat(metadata$, data$, customOption$).subscribe());\r\n  }\r\n\r\n  private loadOptionsOnInitialize(onLoad: UrlOrPoCustomizationFunction) {\r\n\r\n    if (onLoad) {\r\n      return this.getPoDynamicPageOptions(onLoad).pipe(\r\n        tap(responsePoOption => this.poPageCustomizationService.changeOriginalOptionsToNewOptions(this, responsePoOption)));\r\n    }\r\n\r\n    return EMPTY;\r\n  }\r\n\r\n  private getPoDynamicPageOptions(onLoad: UrlOrPoCustomizationFunction): Observable<PoPageDynamicTableOptions> {\r\n    const originalOption: PoPageDynamicTableOptions = {\r\n      fields: this.fields,\r\n      actions: this.actions,\r\n      breadcrumb: this.breadcrumb,\r\n      title: this.title\r\n    };\r\n\r\n    const pageOptionSchema: PoPageDynamicOptionsSchema<PoPageDynamicTableOptions> = {\r\n      schema: [\r\n        {\r\n          nameProp: 'fields',\r\n          merge: true,\r\n          keyForMerge: 'property'\r\n        },\r\n        {\r\n          nameProp: 'actions',\r\n          merge: true\r\n        },\r\n        {\r\n          nameProp: 'breadcrumb'\r\n        },\r\n        {\r\n          nameProp: 'title'\r\n        }\r\n      ]\r\n    };\r\n\r\n    return this.poPageCustomizationService.getCustomOptions(onLoad, originalOption, pageOptionSchema);\r\n  }\r\n\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { PoTableModule } from '@portinari/portinari-ui';\r\n\r\nimport { PoPageDynamicSearchModule } from '../po-page-dynamic-search/po-page-dynamic-search.module';\r\n\r\nimport { PoPageDynamicTableComponent } from './po-page-dynamic-table.component';\r\nimport { PoPageCustomizationModule } from '../../services/po-page-customization/po-page-customization.module';\r\nimport { PoPageDynamicModule } from '../../services/po-page-dynamic/po-page-dynamic.module';\r\n\r\n/**\r\n * @description\r\n *\r\n * MÃ³dulo do template do po-page-dynamic-search.\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule,\r\n\r\n    PoTableModule,\r\n    PoPageDynamicSearchModule,\r\n    PoPageCustomizationModule,\r\n    PoPageDynamicModule\r\n  ],\r\n  declarations: [\r\n    PoPageDynamicTableComponent\r\n  ],\r\n  exports: [\r\n    PoPageDynamicTableComponent\r\n  ]\r\n})\r\nexport class PoPageDynamicTableModule { }\r\n","import { PoJobSchedulerInternal } from './interfaces/po-job-scheduler-internal.interface';\r\n\r\nexport class PoPageJobSchedulerInternal implements PoJobSchedulerInternal {\r\n\r\n  periodicity = 'single';\r\n  firstExecution = new Date();\r\n  firstExecutionHour = this.getCurrentHour(this.firstExecution);\r\n  recurrent = true;\r\n\r\n  private getCurrentHour(date: Date): string {\r\n    const hours = date.getHours() < 10 ? '0' + date.getHours() : date.getHours();\r\n    const minutes = date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes();\r\n\r\n    return `${hours}:${minutes}`;\r\n  }\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\nimport { Input } from '@angular/core';\r\n\r\nimport { PoBreadcrumb } from '@portinari/portinari-ui';\r\n\r\nimport { PoJobSchedulerInternal } from './interfaces/po-job-scheduler-internal.interface';\r\nimport { PoPageJobSchedulerInternal } from './po-page-job-scheduler-internal';\r\nimport { PoPageJobSchedulerService } from './po-page-job-scheduler.service';\r\n\r\n/**\r\n * @description\r\n *\r\n * O `po-page-job-scheduler` Ã© uma pÃ¡gina para criaÃ§Ã£o e atualizaÃ§Ã£o do *Job Scheduler* de forma simplificada, apenas informando\r\n * o serviÃ§o (endpoint) para consumo, sem a necessidade de criar componentes e tratamentos dos dados.\r\n */\r\nexport class PoPageJobSchedulerBaseComponent {\r\n\r\n  /** Objeto com propriedades do breadcrumb. */\r\n  @Input('p-breadcrumb') breadcrumb?: PoBreadcrumb = { items: [] };\r\n\r\n  /**\r\n   * Endpoint usado pelo template para requisiÃ§Ã£o do recurso que serÃ¡ utilizado para criaÃ§Ã£o e ediÃ§Ã£o.\r\n   *\r\n   * #### Processos\r\n   *\r\n   * Em sua inicializaÃ§Ã£o serÃ¡ verificado a existÃªncia do endpoint `{end-point}/processes`.\r\n   * Caso o endpoint seja vÃ¡lido, serÃ¡ utilizado um componente para selecionar o processo e filtrÃ¡-los.\r\n   * Caso nÃ£o seja vÃ¡lido, serÃ¡ utilizado um campo de entrada de texto para informar o endpoint.\r\n   *\r\n   * Para realizar o filtro de busca do processo, serÃ¡ enviado o conteÃºdo a ser filtrado atravÃ©s da propriedade *search*.\r\n   * Os processos devem retornar uma lista de objetos que seguem a definiÃ§Ã£o de dados abaixo:\r\n   *\r\n   * ```\r\n   * GET {end-point}/processes?search=ac04\r\n   * ...\r\n   * { \"processID\": \"string\", \"description\": \"string\" }\r\n   * ```\r\n   *\r\n   * Para retornar parÃ¢metros dos processos, serÃ¡ realizado um `GET` como exemplificado abaixo.\r\n   * Os parÃ¢metros devem retornar uma lista de objetos que seguem a interface [PoDynamicFormField](/documentation/po-dynamic-form).\r\n   *\r\n   * ```\r\n   * GET {end-point}/processes/:id/parameters\r\n   * ...\r\n   * { items: [{ \"property\": \"server\" }, { \"property\": \"program\" }] }\r\n   * ```\r\n   *\r\n   * #### Salvar e Atualizar\r\n   *\r\n   * Para salvar o recurso, serÃ¡ feito uma requisiÃ§Ã£o de criaÃ§Ã£o no mesmo endpoint, passando os valores\r\n   * preenchidos pelo usuÃ¡rio via *payload*. Abaixo uma requisiÃ§Ã£o `POST` disparada,\r\n   * onde as propriedades do *Job Scheduler* foram preenchidas:\r\n   *\r\n   * ```\r\n   *  POST /api/po-samples/v1/jobschedulers HTTP/1.1\r\n   *  Host: localhost:4000\r\n   *  Connection: keep-alive\r\n   *  Accept: application/json, text/plain\r\n   *  ...\r\n   * ```\r\n   *\r\n   * *Request payload*:\r\n   *\r\n   * ```\r\n   * { \"firstExecution\": \"2018-12-07T00:00:01-00:00\", \"recurrent\": true, \"daily\": { \"hour\": 10, \"minute\": 12 }, \"processID\": \"ac0405\" }\r\n   * ```\r\n   *\r\n   * Caso queira que o template carregue um recurso jÃ¡ existente, deve ser incluÃ­do um parÃ¢metro na rota chamado `id`.\r\n   *\r\n   * Exemplo de configuraÃ§Ã£o de rota:\r\n   *\r\n   * ```\r\n   *  RouterModule.forRoot([\r\n   *    ...\r\n   *    { path: 'edit/:id', component: ExampleJobSchedulerComponent },\r\n   *    ...\r\n   *  ],\r\n   * ```\r\n   *\r\n   * Baseado nisso, na inicializaÃ§Ã£o do template serÃ¡ disparado uma requisiÃ§Ã£o para buscar o recurso que serÃ¡ editado.\r\n   *\r\n   * ```\r\n   * GET {end-point}/{id}\r\n   * ```\r\n   *\r\n   * Ao salvar o recurso serÃ¡ disparado um `PUT` com os dados preenchidos. Abaixo uma requisiÃ§Ã£o `PUT` disparada,\r\n   * onde a propriedade *recurrent* e *daily* foram preenchidas/atualizadas e o `id` da url Ã© 1:\r\n   *\r\n   * ```\r\n   *  PUT /api/po-samples/v1/jobschedulers/1 HTTP/1.1\r\n   *  Host: localhost:4000\r\n   *  Connection: keep-alive\r\n   *  Accept: application/json, text/plain\r\n   *  ...\r\n   * ```\r\n   *\r\n   * *Request payload*:\r\n   *\r\n   * ```\r\n   * { \"firstExecution\": \"2018-12-07T00:00:01-00:00\", \"recurrent\": false, \"daily\": { \"hour\": 11, \"minute\": 30 }, \"processID\": \"ac0405\" }\r\n   * ```\r\n   */\r\n  @Input('p-service-api') serviceApi: string;\r\n\r\n  /** TÃ­tulo da pÃ¡gina. */\r\n  @Input('p-title') title: string;\r\n\r\n  model: PoJobSchedulerInternal = new PoPageJobSchedulerInternal();\r\n\r\n  constructor(protected poPageJobSchedulerService: PoPageJobSchedulerService) {}\r\n\r\n  protected loadData(id: string | number) {\r\n    if (!id) {\r\n      this.model = new PoPageJobSchedulerInternal();\r\n      return;\r\n    }\r\n\r\n    this.poPageJobSchedulerService.getResource(id).toPromise().then((response: PoJobSchedulerInternal) => {\r\n      this.model = response;\r\n    }).catch(() => {\r\n      this.model = new PoPageJobSchedulerInternal();\r\n    });\r\n\r\n  }\r\n\r\n  protected markAsDirtyInvalidControls(controls: { [key: string]: AbstractControl } ) {\r\n    for (const key in controls) {\r\n      if (controls.hasOwnProperty(key)) {\r\n        const control = controls[key];\r\n\r\n        if (control.invalid) {\r\n          control.markAsDirty();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","export const poPageJobSchedulerLiteralsDefault = {\r\n  en: {\r\n    at: 'at',\r\n    back: 'Back',\r\n    next: 'Next',\r\n    periodicity: 'Periodicity',\r\n    execution: 'Execution',\r\n    process: 'Process',\r\n    enterProcess: 'Enter a process',\r\n    recurrent: 'Recurrent',\r\n    single: 'Single',\r\n    daily: 'Daily',\r\n    weekly: 'Weekly',\r\n    monthly: 'Monthly',\r\n    scheduling: 'Scheduling',\r\n    parameterization: 'Parameterization',\r\n    conclude: 'Conclude',\r\n    firstExecution: 'First Execution',\r\n    hour: 'Hour',\r\n    day: 'Day',\r\n    weekDays: 'Week days',\r\n    sunday: 'Sunday',\r\n    monday: 'Monday',\r\n    tuesday: 'Tuesday',\r\n    wednesday: 'Wednesday',\r\n    thursday: 'Thursday',\r\n    friday: 'Friday',\r\n    saturday: 'Saturday',\r\n    parameters: 'Parameters',\r\n    yes: 'Yes',\r\n    no: 'No',\r\n    notReported: 'Not reported',\r\n    periodicityData: 'Periodicity data',\r\n    confirmation: 'Confirmation',\r\n    confirmSaveMessage: 'Are you sure you want to complete this schedule?',\r\n    confirmUpdateMessage: 'Are you sure you want to update this schedule?',\r\n    saveNotificationSuccessUpdate: 'Successfully updated scheduling',\r\n    saveNotificationSuccessSave: 'Successfully saved scheduling',\r\n    parametersNotFound: 'Parameters not found.'\r\n  },\r\n  es: {\r\n    at: 'a las',\r\n    back: 'Volver',\r\n    next: 'Avanzar',\r\n    periodicity: 'Periodicidad',\r\n    execution: 'EjecuciÃ³n',\r\n    process: 'Proceso',\r\n    enterProcess: 'Informe un proceso',\r\n    recurrent: 'Recurrente',\r\n    single: 'Ãnica',\r\n    daily: 'Diaria',\r\n    weekly: 'Semanal',\r\n    monthly: 'Mensual',\r\n    scheduling: 'ProgramaciÃ³n',\r\n    parameterization: 'ParametrizaciÃ³n',\r\n    conclude: 'Completar',\r\n    firstExecution: 'Primera ejecuciÃ³n',\r\n    hour: 'Horario',\r\n    day: 'DÃ­a',\r\n    weekDays: 'Dias de la semana',\r\n    sunday: 'Domingo',\r\n    monday: 'Lunes',\r\n    tuesday: 'Martes',\r\n    wednesday: 'MiÃ©rcoles',\r\n    thursday: 'Jueves',\r\n    friday: 'Viernes',\r\n    saturday: 'SÃ¡bado',\r\n    parameters: 'ParÃ¡metros',\r\n    yes: 'SÃ­',\r\n    no: 'No',\r\n    notReported: 'No informado',\r\n    periodicityData: 'Dados da periodicidade',\r\n    confirmation: 'ConfirmaciÃ³n',\r\n    confirmSaveMessage: 'Â¿EstÃ¡ seguro de que desea completar esta programaciÃ³n de proceso?',\r\n    confirmUpdateMessage: 'Â¿EstÃ¡ seguro de que desea cambiar esta programaciÃ³n de proceso?',\r\n    saveNotificationSuccessUpdate: 'ProgramaciÃ³n de proceso actualizada con Ã©xito.',\r\n    saveNotificationSuccessSave: 'ProgramaciÃ³n de proceso salvo con Ã©xito.',\r\n    parametersNotFound: 'No se encontraron parÃ¡metros.'\r\n  },\r\n  pt: {\r\n    at: 'Ã s',\r\n    back: 'Voltar',\r\n    next: 'AvanÃ§ar',\r\n    periodicity: 'Periodicidade',\r\n    execution: 'ExecuÃ§Ã£o',\r\n    process: 'Processo',\r\n    enterProcess: 'Informe um processo',\r\n    recurrent: 'Recorrente',\r\n    single: 'Ãnica',\r\n    daily: 'DiÃ¡ria',\r\n    weekly: 'Semanal',\r\n    monthly: 'Mensal',\r\n    scheduling: 'Agendamento',\r\n    parameterization: 'ParametrizaÃ§Ã£o',\r\n    conclude: 'Concluir',\r\n    firstExecution: 'Primeira execuÃ§Ã£o',\r\n    hour: 'HorÃ¡rio',\r\n    day: 'Dia',\r\n    weekDays: 'Dias de semana',\r\n    sunday: 'Domingo',\r\n    monday: 'Segunda-feira',\r\n    tuesday: 'TerÃ§a-feira',\r\n    wednesday: 'Quarta-feira',\r\n    thursday: 'Quinta-feira',\r\n    friday: 'Sexta-feira',\r\n    saturday: 'SÃ¡bado',\r\n    parameters: 'ParÃ¢metros',\r\n    yes: 'Sim',\r\n    no: 'NÃ£o',\r\n    notReported: 'NÃ£o informado',\r\n    periodicityData: 'Dados da periodicidade',\r\n    confirmation: 'ConfirmaÃ§Ã£o',\r\n    confirmSaveMessage: 'Tem certeza que deseja concluir este agendamento de processo?',\r\n    confirmUpdateMessage: 'Tem certeza que deseja alterar este agendamento de processo?',\r\n    saveNotificationSuccessUpdate: 'Agendamento de processo atualizado com sucesso.',\r\n    saveNotificationSuccessSave: 'Agendamento de processo salvo com sucesso.',\r\n    parametersNotFound: 'ParÃ¢metros nÃ£o foram encontrados.'\r\n  }\r\n};\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { addZero, convertDateToISOExtended } from '../../utils/util';\r\nimport { PoDynamicFormField } from '@portinari/portinari-ui';\r\n\r\nimport { PoJobScheduler } from './interfaces/po-job-scheduler.interface';\r\nimport { PoJobSchedulerInternal } from './interfaces/po-job-scheduler-internal.interface';\r\n\r\n@Injectable()\r\nexport class PoPageJobSchedulerService {\r\n\r\n  private endpoint = '/';\r\n\r\n  readonly headers: HttpHeaders = new HttpHeaders({\r\n    'X-PORTINARI-SCREEN-LOCK': 'true'\r\n  });\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  configServiceApi(config: { endpoint?: string } = {}) {\r\n    this.endpoint = config.endpoint;\r\n  }\r\n\r\n  // Cria um recurso\r\n  createResource(resource): Observable<any> {\r\n    const jobScheduler = this.convertToJobScheduler(resource);\r\n\r\n    return this.http.post(`${this.endpoint}`, jobScheduler, { headers: this.headers });\r\n  }\r\n\r\n  getHeadProcesses() {\r\n    const headers = { 'X-Portinari-No-Error': 'true' };\r\n\r\n    return this.http.head(`${this.endpoint}/processes`, { headers });\r\n  }\r\n\r\n  // Busca parametros pelo processo id\r\n  getParametersByProcess(processId: string | number): Observable<any> {\r\n    return this.http.get(`${this.endpoint}/processes/${processId}/parameters`, { headers: this.headers })\r\n    .pipe(map((resource: { items: Array<PoDynamicFormField> }) => resource.items));\r\n  }\r\n\r\n  // Busca um Ãºnico recurso\r\n  getProcess(id: string | number): Observable<any> {\r\n    return this.http.get(`${this.endpoint}/processes/${id}`, { headers: this.headers });\r\n  }\r\n\r\n  // Busca uma lista de processos\r\n  getProcesses(params: {} = {}): Observable<any> {\r\n    return this.http.get(`${this.endpoint}/processes`, { params });\r\n  }\r\n\r\n  // Busca um Ãºnico recurso\r\n  getResource(id: string | number): Observable<any> {\r\n    return this.http.get(`${this.endpoint}/${id}`, { headers: this.headers })\r\n      .pipe(map(resource => this.convertToJobSchedulerInternal(resource)));\r\n  }\r\n\r\n  // Atualiza um recurso\r\n  updateResource(id, resource): Observable<any> {\r\n    const jobScheduler = this.convertToJobScheduler(resource);\r\n\r\n    return this.http.put(`${this.endpoint}/${id}`, jobScheduler, { headers: this.headers });\r\n  }\r\n\r\n  private convertToJobScheduler(jobSchedulerInternal): PoJobScheduler {\r\n    const jobScheduler = { ...jobSchedulerInternal };\r\n\r\n    if (jobSchedulerInternal.periodicity) {\r\n\r\n      if (jobSchedulerInternal.periodicity === 'single') {\r\n        jobScheduler.recurrent = false;\r\n      } else {\r\n        Object.assign(jobScheduler, this.convertToPeriodicity(jobSchedulerInternal));\r\n      }\r\n\r\n    }\r\n\r\n    if (jobSchedulerInternal.firstExecutionHour) {\r\n      jobScheduler.firstExecution =\r\n        this.replaceHourFirstExecution(jobSchedulerInternal.firstExecution, jobSchedulerInternal.firstExecutionHour);\r\n    }\r\n\r\n    if (!Object.keys(this.returnValidExecutionParameter(jobScheduler.executionParameter)).length) {\r\n      delete jobScheduler.executionParameter;\r\n    }\r\n\r\n    this.removeInvalidKeys(jobScheduler);\r\n\r\n    return jobScheduler;\r\n  }\r\n\r\n  private convertToJobSchedulerInternal(jobScheduler = <any> {}): PoJobSchedulerInternal {\r\n    const jobSchedulerInternal = { ...jobScheduler };\r\n\r\n    if (jobScheduler.firstExecution) {\r\n      jobSchedulerInternal.firstExecutionHour = this.getHourFirstExecution(jobScheduler.firstExecution);\r\n    }\r\n\r\n    Object.assign(jobSchedulerInternal, this.convertToPeriodicityInternal(jobScheduler));\r\n\r\n    this.removeInvalidKeys(jobSchedulerInternal, ['weekly', 'monthly', 'daily']);\r\n\r\n    return jobSchedulerInternal;\r\n  }\r\n\r\n  private convertToPeriodicity(value: { periodicity: string , dayOfMonth?: string, daysOfWeek?: number, hour?: string }) {\r\n    const newValue = {};\r\n    const valuePeriodicity = value.periodicity;\r\n\r\n    if (valuePeriodicity) {\r\n      newValue[valuePeriodicity] = {};\r\n\r\n      if (valuePeriodicity === 'monthly') {\r\n        newValue[valuePeriodicity].day = value.dayOfMonth ? parseInt(value.dayOfMonth, 10) : 0;\r\n      } else if (valuePeriodicity === 'weekly') {\r\n        newValue[valuePeriodicity].daysOfWeek = value.daysOfWeek;\r\n      }\r\n\r\n      newValue[valuePeriodicity].hour = value.hour ? parseInt(value.hour.split(':')[0], 10) : 0;\r\n      newValue[valuePeriodicity].minute = value.hour ? parseInt(value.hour.split(':')[1], 10) : 0;\r\n    }\r\n\r\n    return newValue;\r\n  }\r\n\r\n  private convertToPeriodicityInternal(value = <any> {}) {\r\n    if (value.monthly) {\r\n      return {\r\n        periodicity: 'monthly',\r\n        hour: `${addZero(value.monthly.hour)}:${addZero(value.monthly.minute)}`,\r\n        dayOfMonth: value.monthly.day\r\n      };\r\n    } else if (value.daily) {\r\n      return {\r\n        periodicity: 'daily',\r\n        hour: `${addZero(value.daily.hour)}:${addZero(value.daily.minute)}`\r\n      };\r\n    } else if (value.weekly) {\r\n      return {\r\n        periodicity: 'weekly',\r\n        hour: `${addZero(value.weekly.hour)}:${addZero(value.weekly.minute)}`,\r\n        daysOfWeek: [...value.weekly.daysOfWeek]\r\n      };\r\n    } else {\r\n      return {\r\n        periodicity: 'single'\r\n      };\r\n    }\r\n  }\r\n\r\n  private getCurrentHour(date: Date): string {\r\n    const hours = addZero(date.getHours());\r\n    const minutes = addZero(date.getMinutes());\r\n\r\n    return `${hours}:${minutes}`;\r\n  }\r\n\r\n  private getHourFirstExecution(firstExecutionDate: string): string {\r\n    return this.getCurrentHour(new Date(firstExecutionDate));\r\n  }\r\n\r\n  private removeInvalidKeys(value: object, keys?: Array<string>) {\r\n    const invalidKeys = keys || ['periodicity', 'hour', 'minute', 'day', 'daysOfWeek', 'dayOfMonth', 'firstExecutionHour'];\r\n\r\n    Object.keys(value).forEach(key => {\r\n      if (invalidKeys.includes(key)) {\r\n        delete value[key];\r\n      }\r\n    });\r\n  }\r\n\r\n  private replaceHourFirstExecution(date: string, time: string): string {\r\n    const firstExecutionDate = new Date(date);\r\n\r\n    const timeSplited = time.split(':');\r\n\r\n    const hours = parseInt(timeSplited[0], 10);\r\n    const minutes = parseInt(timeSplited[1], 10);\r\n\r\n    firstExecutionDate.setHours(hours, minutes);\r\n\r\n    return convertDateToISOExtended(firstExecutionDate);\r\n  }\r\n\r\n  private returnValidExecutionParameter(parameter: object) {\r\n    const newParameter = { ...parameter };\r\n\r\n    for (const key in newParameter) {\r\n      if (newParameter.hasOwnProperty(key) && newParameter[key] === undefined) {\r\n        delete newParameter[key];\r\n      }\r\n    }\r\n\r\n    return newParameter;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { PoLookupFilter } from '@portinari/portinari-ui';\r\n\r\nimport { PoPageJobSchedulerService } from './po-page-job-scheduler.service';\r\n\r\n@Injectable()\r\nexport class PoPageJobSchedulerLookupService implements PoLookupFilter {\r\n\r\n  constructor(private poPageJobSchedulerService: PoPageJobSchedulerService) { }\r\n\r\n  getFilteredData(search: string, page: number, pageSize: number): Observable<any> {\r\n    const params = { page, pageSize, search };\r\n\r\n    return this.poPageJobSchedulerService.getProcesses(params);\r\n  }\r\n\r\n  getObjectByValue(processId: string): Observable<any> {\r\n    return this.poPageJobSchedulerService.getProcess(processId);\r\n  }\r\n\r\n}\r\n","import { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport {\r\n  PoDialogService,\r\n  PoDynamicFormField,\r\n  PoNotificationService,\r\n  PoPageAction,\r\n  PoStepperItem,\r\n  PoStepperStatus\r\n} from '@portinari/portinari-ui';\r\n\r\nimport * as util from './../../utils/util';\r\n\r\nimport { PoJobSchedulerInternal } from './interfaces/po-job-scheduler-internal.interface';\r\nimport { PoPageJobSchedulerInternal } from './po-page-job-scheduler-internal';\r\nimport { PoPageJobSchedulerBaseComponent } from './po-page-job-scheduler-base.component';\r\nimport { poPageJobSchedulerLiteralsDefault } from './po-page-job-scheduler-literals';\r\nimport { PoPageJobSchedulerLookupService } from './po-page-job-scheduler-lookup.service';\r\nimport { PoPageJobSchedulerService } from './po-page-job-scheduler.service';\r\n\r\n/**\r\n * @docsExtends PoPageJobSchedulerBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-page-job-scheduler-basic\" title=\"Portinari Page Job Scheduler Basic\">\r\n *  <file name=\"sample-po-page-job-scheduler-basic/sample-po-page-job-scheduler-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-page-job-scheduler-basic/sample-po-page-job-scheduler-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n */\r\n@Component({\r\n  selector: 'po-page-job-scheduler',\r\n  templateUrl: './po-page-job-scheduler.component.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n  styles: [`\r\n    po-container .po-container {\r\n      overflow-y: unset;\r\n    }\r\n  `]\r\n})\r\nexport class PoPageJobSchedulerComponent extends PoPageJobSchedulerBaseComponent implements OnInit {\r\n\r\n  isEdit = false;\r\n  literals = {\r\n    ...poPageJobSchedulerLiteralsDefault[util.poLocaleDefault],\r\n    ...poPageJobSchedulerLiteralsDefault[util.browserLanguage()]\r\n  };\r\n  parameters: Array<PoDynamicFormField> = [];\r\n  saveOperation: Observable<any>;\r\n  step: number = 1;\r\n\r\n  private backPageAction: PoPageAction = {\r\n    label: this.literals.back,\r\n    action: this.nextStepOperation.bind(this, 'back'),\r\n    disabled: this.isDisabledBack.bind(this)\r\n  };\r\n\r\n  private concludePageActions: Array<PoPageAction> = [\r\n    {\r\n      label: this.literals.conclude,\r\n      action: this.confirmJobScheduler.bind(this)\r\n    },\r\n    { ...this.backPageAction }\r\n  ];\r\n\r\n  private nextPageActions: Array<PoPageAction> = [\r\n    {\r\n      label: this.literals.next,\r\n      action: this.nextStepOperation.bind(this, 'next'),\r\n      disabled: this.isDisabledAdvance.bind(this)\r\n    },\r\n    { ...this.backPageAction }\r\n  ];\r\n\r\n  jobSchedulerActions: Array<PoPageAction> = [\r\n    ...this.nextPageActions\r\n  ];\r\n\r\n  readonly steps: Array<PoStepperItem> = [\r\n    { label: this.literals.scheduling },\r\n    { label: this.literals.parameterization },\r\n    { label: this.literals.conclude }\r\n  ];\r\n\r\n  @ViewChild('schedulerExecution', { static: true }) schedulerExecution: { form: NgForm };\r\n  @ViewChild('schedulerParameters', { static: true }) schedulerParameters: { form: NgForm };\r\n\r\n  constructor(\r\n    public poPageDynamicLookupService: PoPageJobSchedulerLookupService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private poDialogService: PoDialogService,\r\n    private poNotification: PoNotificationService,\r\n    private router: Router,\r\n    poPageJobSchedulerService: PoPageJobSchedulerService) {\r\n      super(poPageJobSchedulerService);\r\n    }\r\n\r\n  get stepperOrientation(): 'horizontal' | 'vertical' {\r\n    return window.innerWidth > 481 && window.innerWidth < 960 ? 'horizontal' : 'vertical';\r\n  }\r\n\r\n  ngOnInit() {\r\n    const paramId = this.activatedRoute.snapshot.params['id'];\r\n\r\n    this.isEdit = !!paramId;\r\n\r\n    this.poPageJobSchedulerService.configServiceApi({ endpoint: this.serviceApi });\r\n\r\n    this.loadData(paramId);\r\n  }\r\n\r\n  changePageActionsBySteps(currentStep: number, nextStep: number) {\r\n    const stepsLength = this.steps.length;\r\n\r\n    if (nextStep === stepsLength) {\r\n    this.jobSchedulerActions = [ ...this.concludePageActions ];\r\n\r\n    } else if (currentStep === stepsLength && nextStep < currentStep) {\r\n\r\n    this.jobSchedulerActions = [ ...this.nextPageActions ];\r\n    }\r\n  }\r\n\r\n  nextStep(stepNumber: number) {\r\n\r\n    if (stepNumber > 1 && this.schedulerExecution.form.invalid) {\r\n      this.markAsDirtyInvalidControls(this.schedulerExecution.form.controls);\r\n      return;\r\n    }\r\n\r\n    if (stepNumber > 2 && (this.schedulerParameters && this.schedulerParameters.form && this.schedulerParameters.form.invalid)) {\r\n      this.markAsDirtyInvalidControls(this.schedulerParameters.form.controls);\r\n      return;\r\n    }\r\n\r\n    this.changePageActionsBySteps(this.step, stepNumber);\r\n\r\n    const steps = this.steps[this.step - 1];\r\n    this.step = stepNumber;\r\n\r\n    if (steps) {\r\n      steps.status = PoStepperStatus.Done;\r\n    }\r\n  }\r\n\r\n  onChangeProcess(process: { processId: string, existAPI: boolean }) {\r\n    if (process.existAPI && process.processId) {\r\n      this.getParametersByProcess(process.processId);\r\n\r\n      if (!this.isEdit) {\r\n        this.model.executionParameter = {};\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n  }\r\n\r\n  private confirmJobScheduler() {\r\n    const paramId = this.activatedRoute.snapshot.params['id'];\r\n\r\n    const confirmMessage = paramId ? this.literals.confirmUpdateMessage : this.literals.confirmSaveMessage;\r\n\r\n    this.poDialogService.confirm({\r\n      title: this.literals.confirmation,\r\n      message: confirmMessage,\r\n      confirm: () => {\r\n        const model = Object.assign({}, this.model);\r\n\r\n        this.save(model, paramId);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  private async emitSuccessMessage(msgSuccess: any, saveOperation: Observable<any>) {\r\n    await saveOperation.toPromise();\r\n    this.poNotification.success(msgSuccess);\r\n    this.resetJobSchedulerForm();\r\n  }\r\n\r\n  private getParametersByProcess(process: any) {\r\n\r\n    this.poPageJobSchedulerService.getParametersByProcess(process).subscribe(parameters => {\r\n      this.parameters = parameters;\r\n    });\r\n\r\n  }\r\n\r\n  private isDisabledAdvance(): boolean {\r\n    return this.schedulerExecution ? this.schedulerExecution.form.invalid : false;\r\n  }\r\n\r\n  private isDisabledBack(): boolean {\r\n    return this.step === 1;\r\n  }\r\n\r\n  private nextStepOperation(operation?: 'back' | 'next') {\r\n    const stepNumber = operation === 'back' ? this.step - 1 : this.step + 1;\r\n\r\n    this.nextStep(stepNumber);\r\n  }\r\n\r\n  private resetJobSchedulerForm() {\r\n    this.schedulerExecution.form.reset();\r\n\r\n    // radiogroup nÃ£o estava atribuindo novo valor, fica vermelho sem o timetout.\r\n    setTimeout(() => {\r\n      this.model = new PoPageJobSchedulerInternal();\r\n\r\n      this.step = 1;\r\n      this.steps.forEach(step => {\r\n        step.status = PoStepperStatus.Default;\r\n      });\r\n\r\n      this.jobSchedulerActions = [...this.nextPageActions];\r\n    });\r\n\r\n  }\r\n\r\n  private save(model: PoJobSchedulerInternal, paramId) {\r\n    const saveOperation = paramId\r\n      ? this.poPageJobSchedulerService.updateResource(paramId, model)\r\n      : this.poPageJobSchedulerService.createResource(model);\r\n\r\n    const msgSuccess = paramId ? this.literals.saveNotificationSuccessUpdate : this.literals.saveNotificationSuccessSave;\r\n\r\n    this.emitSuccessMessage(msgSuccess, saveOperation);\r\n  }\r\n\r\n}\r\n","import { AfterViewInit, Component, EventEmitter, Input, OnInit, Output, TemplateRef, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\n\r\nimport { PoCheckboxGroupOption, PoRadioGroupOption } from '@portinari/portinari-ui';\r\n\r\nimport { isTypeof } from '../../../utils/util';\r\n\r\nimport { PoPageJobSchedulerLookupService } from '../po-page-job-scheduler-lookup.service';\r\nimport { PoPageJobSchedulerService } from '../po-page-job-scheduler.service';\r\n\r\n@Component({\r\n  selector: 'po-page-job-scheduler-execution',\r\n  templateUrl: 'po-page-job-scheduler-execution.component.html'\r\n})\r\nexport class PoPageJobSchedulerExecutionComponent implements OnInit, AfterViewInit {\r\n\r\n  private _value: any = {};\r\n\r\n  dayPattern = '^(3[0-1]|[0-2][0-9]|[1-9]|0[1-9])$';\r\n  existProcessAPI = true;\r\n  minDateFirstExecution = new Date();\r\n  periodicityOptions: Array<PoRadioGroupOption> = [];\r\n  periodicityTemplates: { daily: TemplateRef<any>, weekly: TemplateRef<any>, monthly: TemplateRef<any> } ;\r\n  timePattern = '^(2[0-3]|[01][0-9]):?([0-5][0-9])$';\r\n  weekDays: Array<PoCheckboxGroupOption> = [];\r\n\r\n  @ViewChild('formExecution', { static: true }) form: NgForm;\r\n\r\n  // templates\r\n  @ViewChild('dailyTemplate', { static: true }) dailyTemplate;\r\n  @ViewChild('monthlyTemplate', { static: true }) monthlyTemplate;\r\n  @ViewChild('weeklyTemplate', { static: true }) weeklyTempalte;\r\n\r\n  @Input('p-is-edit') isEdit: boolean = false;\r\n\r\n  @Input('p-literals') literals = <any> {};\r\n\r\n  @Input('p-value') set value(value: any) {\r\n    this._value = value && isTypeof(value, 'object') ? value : {};\r\n  }\r\n\r\n  get value() {\r\n    return this._value;\r\n  }\r\n\r\n  @Output('p-change-process') changeProcess: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  constructor(\r\n    private poPageJobSchedulerService: PoPageJobSchedulerService,\r\n    public poPageJobSchedulerLookup: PoPageJobSchedulerLookupService) { }\r\n\r\n  get startDateFirstExecution() {\r\n    return this.isEdit ? undefined : this.minDateFirstExecution;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n\r\n    setTimeout(() => {\r\n      this.subscribeProcessIdValueChanges();\r\n    });\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.periodicityTemplates = {\r\n      daily: this.dailyTemplate,\r\n      monthly: this.monthlyTemplate,\r\n      weekly: this.weeklyTempalte\r\n    };\r\n\r\n    this.checkExistsProcessesAPI();\r\n\r\n    this.periodicityOptions = this.getPeriodicityOptions();\r\n    this.weekDays = this.getWeekDays();\r\n  }\r\n\r\n  private checkExistsProcessesAPI() {\r\n    this.poPageJobSchedulerService.getHeadProcesses().subscribe(undefined, error => {\r\n      this.existProcessAPI = false;\r\n    });\r\n  }\r\n\r\n  private getPeriodicityOptions() {\r\n    return [\r\n      { label: this.literals.single, value: 'single' },\r\n      { label: this.literals.daily, value: 'daily' },\r\n      { label: this.literals.weekly, value: 'weekly' },\r\n      { label: this.literals.monthly, value: 'monthly' }\r\n    ];\r\n  }\r\n\r\n  private getWeekDays() {\r\n    return [\r\n      { label: this.literals.sunday, value: 'Sunday' },\r\n      { label: this.literals.monday, value: 'Monday' },\r\n      { label: this.literals.tuesday, value: 'Tuesday' },\r\n      { label: this.literals.wednesday, value: 'Wednesday' },\r\n      { label: this.literals.thursday, value: 'Thursday' },\r\n      { label: this.literals.friday, value: 'Friday' },\r\n      { label: this.literals.saturday, value: 'Saturday' }\r\n    ];\r\n  }\r\n\r\n  private subscribeProcessIdValueChanges() {\r\n    this.form.controls['processID'].valueChanges.subscribe(processId => {\r\n      this.changeProcess.emit({ processId, existAPI: this.existProcessAPI });\r\n    });\r\n  }\r\n\r\n}\r\n","import { AfterViewInit, Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\n\r\nimport { PoDynamicFormField } from '@portinari/portinari-ui';\r\n\r\n@Component({\r\n  selector: 'po-page-job-scheduler-parameters',\r\n  templateUrl: 'po-page-job-scheduler-parameters.component.html'\r\n})\r\nexport class PoPageJobSchedulerParametersComponent implements AfterViewInit {\r\n\r\n  @ViewChild('parametersForm', { static: true }) form: NgForm;\r\n\r\n  @Input('p-literals') literals = <any> {};\r\n\r\n  @Input('p-parameters') parameters: Array<PoDynamicFormField> = [];\r\n\r\n  @Input('p-value') value;\r\n\r\n  @Output('p-valueChange') valueChange: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  ngAfterViewInit() {\r\n    if (this.form) {\r\n      setTimeout(() => {\r\n\r\n        this.form.valueChanges.subscribe(value => {\r\n          this.valueChange.emit(value);\r\n        });\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\n\r\nimport { PoDynamicViewField, PoInfoOrientation } from '@portinari/portinari-ui';\r\n\r\nimport { PoJobSchedulerInternal } from '../interfaces/po-job-scheduler-internal.interface';\r\n\r\n@Component({\r\n  selector: 'po-page-job-scheduler-summary',\r\n  templateUrl: 'po-page-job-scheduler-summary.component.html'\r\n})\r\nexport class PoPageJobSchedulerSummaryComponent implements OnInit {\r\n\r\n  executionValue = '';\r\n  firstExecutionValue = '';\r\n  infoOrientation = PoInfoOrientation.Horizontal;\r\n  periodicityValue = '';\r\n  recurrentValue = '';\r\n\r\n  @Input('p-literals') literals = <any> {};\r\n\r\n  @Input('p-parameters') parameters: Array<PoDynamicViewField> = [];\r\n\r\n  @Input('p-value') value: PoJobSchedulerInternal = <any> {};\r\n\r\n  constructor(private datePipe: DatePipe) {}\r\n\r\n  ngOnInit() {\r\n    const { periodicity, hour, dayOfMonth, daysOfWeek, recurrent, firstExecution, firstExecutionHour } = this.value;\r\n\r\n    this.periodicityValue = this.getPeriodicityLabel(periodicity);\r\n    this.executionValue = this.getExecutionValue(periodicity, hour, daysOfWeek, dayOfMonth);\r\n    this.firstExecutionValue = this.getFirstExecutionLabel(firstExecution, firstExecutionHour);\r\n    this.recurrentValue = this.getRecurrentValue(recurrent);\r\n  }\r\n\r\n  private getExecutionValue(periodicity: string, hour?: string, daysOfWeek?: Array<string>, dayOfMonth?: number) {\r\n    switch (periodicity) {\r\n      case 'daily':\r\n        return this.getHourLabel(hour);\r\n      case 'monthly':\r\n        return this.getMonthlyLabelExecution(dayOfMonth, hour);\r\n      case 'weekly':\r\n        return this.getWeeklyLabelExecution(daysOfWeek, hour);\r\n      default:\r\n        return this.literals.notReported;\r\n    }\r\n  }\r\n\r\n  private getFirstExecutionLabel(firstExecution: Date, firstExecutionHour?: string): string {\r\n    if (firstExecution) {\r\n      const date = this.datePipe.transform(firstExecution, 'dd/MM/yyyy', '-0200');\r\n\r\n      return `${date} ${this.getHourLabel(firstExecutionHour)}`;\r\n    } else {\r\n      return this.literals.notReported;\r\n    }\r\n  }\r\n\r\n  private getHourLabel(hour: string) {\r\n    return `${this.literals.at} ${hour || '00:00'}h`;\r\n  }\r\n\r\n  private getMonthlyLabelExecution(dayOfMonth: number, hour: string) {\r\n    const hourLabel = this.getHourLabel(hour);\r\n\r\n    return `${this.literals.day} ${dayOfMonth} ${hourLabel}`;\r\n  }\r\n\r\n  private getPeriodicityLabel(periodicity) {\r\n    switch (periodicity) {\r\n      case 'daily':\r\n        return this.literals.daily;\r\n      case 'monthly':\r\n        return this.literals.monthly;\r\n      case 'weekly':\r\n        return this.literals.weekly;\r\n      default:\r\n        return this.literals.single;\r\n    }\r\n  }\r\n\r\n  private getRecurrentValue(recurrent: boolean): string {\r\n    return recurrent ? this.literals.yes : this.literals.no;\r\n  }\r\n\r\n  private getSorterWeekDays() {\r\n    return {\r\n      'sunday': 0,\r\n      'monday': 1,\r\n      'tuesday': 2,\r\n      'wednesday': 3,\r\n      'thursday': 4,\r\n      'friday': 5,\r\n      'saturday': 6\r\n    };\r\n  }\r\n\r\n  private getTranslateWeekDay(day: string): string {\r\n    const days = {\r\n      Sunday: this.literals.sunday,\r\n      Monday: this.literals.monday,\r\n      Tuesday: this.literals.tuesday,\r\n      Wednesday: this.literals.wednesday,\r\n      Thursday: this.literals.thursday,\r\n      Friday: this.literals.friday,\r\n      Saturday: this.literals.saturday,\r\n    };\r\n\r\n    return days[day] || '';\r\n  }\r\n\r\n  private getWeekDaysLabel(days: Array<string> = []): string {\r\n    const weekDaysSorted = this.sortWeekDays(days);\r\n\r\n    return weekDaysSorted.map(day => this.getTranslateWeekDay(day)).join(', ');\r\n  }\r\n\r\n  private getWeeklyLabelExecution(daysOfWeek: Array<string>, hour: string) {\r\n    if (daysOfWeek && Array.isArray(daysOfWeek)) {\r\n      return `${this.getWeekDaysLabel(daysOfWeek)} ${this.getHourLabel(hour)}`;\r\n    } else {\r\n      return this.literals.notReported;\r\n    }\r\n  }\r\n\r\n  private sortWeekDays(days: Array<string> = []) {\r\n    const sorterWeekDays = this.getSorterWeekDays();\r\n\r\n    return days.sort((a: string, b: string) => {\r\n      const currDay = a.toLowerCase();\r\n      const nextDay = b.toLowerCase();\r\n\r\n      return sorterWeekDays[currDay] > sorterWeekDays[nextDay] ? 1 : -1;\r\n    });\r\n  }\r\n\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport {\r\n  PoButtonModule,\r\n  PoContainerModule,\r\n  PoDialogModule,\r\n  PoDividerModule,\r\n  PoDynamicModule,\r\n  PoFieldModule,\r\n  PoInfoModule,\r\n  PoPageModule,\r\n  PoStepperModule,\r\n  PoWidgetModule\r\n} from '@portinari/portinari-ui';\r\n\r\nimport { PoPageJobSchedulerComponent } from './po-page-job-scheduler.component';\r\nimport { PoPageJobSchedulerExecutionComponent } from './po-page-job-scheduler-execution/po-page-job-scheduler-execution.component';\r\nimport { PoPageJobSchedulerLookupService } from './po-page-job-scheduler-lookup.service';\r\nimport { PoPageJobSchedulerParametersComponent } from './po-page-job-scheduler-parameters/po-page-job-scheduler-parameters.component';\r\nimport { PoPageJobSchedulerService } from './po-page-job-scheduler.service';\r\nimport { PoPageJobSchedulerSummaryComponent } from './po-page-job-scheduler-summary/po-page-job-scheduler-summary.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PoPageJobSchedulerComponent,\r\n    PoPageJobSchedulerExecutionComponent,\r\n    PoPageJobSchedulerParametersComponent,\r\n    PoPageJobSchedulerSummaryComponent\r\n  ],\r\n  exports: [\r\n    PoPageJobSchedulerComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    PoButtonModule,\r\n    PoContainerModule,\r\n    PoDialogModule,\r\n    PoDividerModule,\r\n    PoDynamicModule,\r\n    PoFieldModule,\r\n    PoInfoModule,\r\n    PoPageModule,\r\n    PoStepperModule,\r\n    PoWidgetModule\r\n  ],\r\n  providers: [\r\n    PoPageJobSchedulerService,\r\n    PoPageJobSchedulerLookupService\r\n  ]\r\n})\r\nexport class PoPageJobSchedulerModule { }\r\n","/**\r\n * @usedBy PoPageLoginComponent\r\n *\r\n * @description\r\n *\r\n * *Enum* para definiÃ§Ã£o do tipo de autenticaÃ§Ã£o.\r\n */\r\nexport enum PoPageLoginAuthenticationType {\r\n\r\n  /** AutenticaÃ§Ã£o Basic */\r\n  Basic = 'Basic',\r\n\r\n  /** AutenticaÃ§Ã£o Bearer */\r\n  Bearer = 'Bearer',\r\n\r\n}\r\n","import { Subscription } from 'rxjs';\r\nimport { EventEmitter, Input, OnDestroy, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { convertToBoolean, convertToInt, getShortBrowserLanguage, isExternalLink, isTypeof, poLocaleDefault } from './../../utils/util';\r\n\r\nimport { PoPageLogin } from './interfaces/po-page-login.interface';\r\nimport { PoPageLoginAuthenticationType } from './enums/po-page-login-authentication-type.enum';\r\nimport { PoPageLoginCustomField } from './interfaces/po-page-login-custom-field.interface';\r\nimport { PoPageLoginLiterals } from './interfaces/po-page-login-literals.interface';\r\nimport { PoPageLoginRecovery } from './interfaces/po-page-login-recovery.interface';\r\nimport { PoPageLoginService } from './po-page-login.service';\r\n\r\nconst poPageLoginContentMaxLength = 40;\r\n\r\nexport const poPageLoginLiteralsDefault = {\r\n  en: <PoPageLoginLiterals> {\r\n    title: 'Welcome',\r\n    loginErrorPattern: 'Invalid Login',\r\n    loginHint: `Your login user was given to you at your first day.\r\n    If you don't have this information contact support`,\r\n    loginPlaceholder: 'Insert your e-mail',\r\n    passwordErrorPattern: 'Invalid Password',\r\n    passwordPlaceholder: 'Insert your password',\r\n    customFieldErrorPattern: 'Invalid value',\r\n    customFieldPlaceholder: 'Please enter a value',\r\n    rememberUser: 'Automatic login',\r\n    rememberUserHint: 'You can disable this option in system configuration',\r\n    submitLabel: 'Enter',\r\n    submittedLabel: 'Loading...',\r\n    forgotPassword: 'Forgot your Password?',\r\n    highlightInfo: '',\r\n    registerUrl: 'New register',\r\n    titlePopover: 'Oops!',\r\n    forgotYourPassword: 'Forgot your password?',\r\n    ifYouTryHarder: 'If you try ',\r\n    attempts: '{0} more time(s) ',\r\n    yourUserWillBeBlocked: 'without success your user will be blocked and you will be left 24 hours without being able to access :(',\r\n    createANewPasswordNow: 'Better create a new password now! You will be able to log into the system right away.',\r\n    iForgotMyPassword: 'I forgot my password'\r\n  },\r\n  es: <PoPageLoginLiterals> {\r\n    title: 'Bienvenido',\r\n    loginErrorPattern: 'Login invÃ¡lido',\r\n    loginHint: `Su usuario ha sido entregado para usted en su primer dÃ­a.\r\n    Si no tiene esta informaciÃ³n, pÃ³ngase en contacto con el soporte tÃ©cnico`,\r\n    loginPlaceholder: 'Inserte su e-mail',\r\n    passwordErrorPattern: 'ContraseÃ±a invÃ¡lida',\r\n    passwordPlaceholder: 'Inserte su contraseÃ±a',\r\n    customFieldErrorPattern: 'Valor no vÃ¡lido.',\r\n    customFieldPlaceholder: 'Por favor introduzca un valor',\r\n    rememberUser: 'Inicio de sesiÃ³n automÃ¡ticamente',\r\n    rememberUserHint: 'Puede deshabilitar esta opciÃ³n en el menÃº del sistema.',\r\n    submitLabel: 'Entrar',\r\n    submittedLabel: 'Cargando...',\r\n    forgotPassword: 'Olvidaste tu contraseÃ±a?',\r\n    highlightInfo: '',\r\n    registerUrl: 'Nuevo registro',\r\n    titlePopover: 'Opa!',\r\n    forgotYourPassword: 'Olvidaste tu contraseÃ±a?',\r\n    ifYouTryHarder: 'Si intenta mÃ¡s ',\r\n    attempts: '{0} vez/veces ',\r\n    yourUserWillBeBlocked: 'sin Ã©xito su usuario sera bloqueado y usted vÃ¡s permanecer 24 horas sin poder acceder a :(',\r\n    createANewPasswordNow: 'Â¡Mejor crear una nueva contraseÃ±a ahora! Usted podrÃ¡ entrar en el sistema inmediatamente despuÃ©s.',\r\n    iForgotMyPassword: 'Olvide mi contraseÃ±a'\r\n  },\r\n  pt: <PoPageLoginLiterals> {\r\n    title: 'Bem-vindo',\r\n    loginErrorPattern: 'Login invÃ¡lido',\r\n    loginHint: `Seu usuÃ¡rio foi entregue a vocÃª no seu primeiro dia.\r\n    Caso nÃ£o tenha mais essa informaÃ§Ã£o contacte o suporte`,\r\n    loginPlaceholder: 'Insira seu e-mail',\r\n    passwordErrorPattern: 'Senha invÃ¡lida',\r\n    passwordPlaceholder: 'Insira sua senha',\r\n    customFieldErrorPattern: 'Valor invÃ¡lido.',\r\n    customFieldPlaceholder: 'Por favor insira um valor',\r\n    rememberUser: 'Logar automaticamente',\r\n    rememberUserHint: 'VocÃª pode desabilitar essa opÃ§Ã£o no menu do sistema',\r\n    submitLabel: 'Entrar',\r\n    submittedLabel: 'Carregando...',\r\n    forgotPassword: 'Esqueceu sua senha?',\r\n    highlightInfo: '',\r\n    registerUrl: 'Novo registro',\r\n    titlePopover: 'Opa!',\r\n    forgotYourPassword: 'Esqueceu sua senha?',\r\n    ifYouTryHarder: 'Se tentar mais ',\r\n    attempts: '{0} vez(es) ',\r\n    yourUserWillBeBlocked: 'sem sucesso seu usuÃ¡rio serÃ¡ bloqueado e vocÃª fica 24 horas sem poder acessar :(',\r\n    createANewPasswordNow: 'Melhor criar uma senha nova agora! VocÃª vai poder entrar no sistema logo em seguida.',\r\n    iForgotMyPassword: 'Esqueci minha senha'\r\n  },\r\n  ru: <PoPageLoginLiterals> {\r\n    title: 'ÐÐ¾Ð±ÑÐ¾ Ð¿Ð¾Ð¶Ð°Ð»Ð¾Ð²Ð°ÑÑ!',\r\n    loginErrorPattern: 'ÐÐµÐ²ÐµÑÐ½ÑÐ¹ Ð»Ð¾Ð³Ð¸Ð½',\r\n    loginHint: `ÐÐ°Ñ Ð»Ð¾Ð³Ð¸Ð½ Ð±ÑÐ» Ð¿ÑÐµÐ´Ð¾ÑÑÐ°Ð²Ð»ÐµÐ½ Ð²Ð°Ð¼ Ð² Ð¿ÐµÑÐ²ÑÐ¹ Ð´ÐµÐ½Ñ.\r\n    ÐÑÐ»Ð¸ Ñ Ð²Ð°Ñ Ð½ÐµÑ ÑÑÐ¾Ð¹ Ð¸Ð½ÑÐ¾ÑÐ¼Ð°ÑÐ¸Ð¸, Ð¾Ð±ÑÐ°ÑÐ¸ÑÐµÑÑ Ð² ÑÐ»ÑÐ¶Ð±Ñ Ð¿Ð¾Ð´Ð´ÐµÑÐ¶ÐºÐ¸`,\r\n    loginPlaceholder: 'ÐÑÑÐ°Ð²ÑÑÐµ ÑÐ²Ð¾Ð¹ Ð°Ð´ÑÐµÑ ÑÐ»ÐµÐºÑÑÐ¾Ð½Ð½Ð¾Ð¹ Ð¿Ð¾ÑÑÑ',\r\n    passwordErrorPattern: 'ÐÐµÐ²ÐµÑÐ½ÑÐ¹ Ð¿Ð°ÑÐ¾Ð»Ñ',\r\n    passwordPlaceholder: 'ÐÐ²ÐµÐ´Ð¸ÑÐµ ÑÐ²Ð¾Ð¹ Ð¿Ð°ÑÐ¾Ð»Ñ',\r\n    customFieldErrorPattern: 'ÐÐµÐ²ÐµÑÐ½Ð¾Ðµ Ð·Ð½Ð°ÑÐµÐ½Ð¸Ðµ.',\r\n    customFieldPlaceholder: 'ÐÐ¾Ð¶Ð°Ð»ÑÐ¹ÑÑÐ°, Ð²Ð²ÐµÐ´Ð¸ÑÐµ Ð·Ð½Ð°ÑÐµÐ½Ð¸Ðµ',\r\n    rememberUser: 'ÐÐ²ÑÐ¾Ð¼Ð°ÑÐ¸ÑÐµÑÐºÐ¸Ð¹ Ð²ÑÐ¾Ð´',\r\n    rememberUserHint: 'ÐÑ Ð¼Ð¾Ð¶ÐµÑÐµ Ð¾ÑÐºÐ»ÑÑÐ¸ÑÑ ÑÑÑ Ð¾Ð¿ÑÐ¸Ñ Ð² ÐºÐ¾Ð½ÑÐ¸Ð³ÑÑÐ°ÑÐ¸Ð¸ ÑÐ¸ÑÑÐµÐ¼Ñ',\r\n    submitLabel: 'ÐÐ¾Ð¹ÑÐ¸',\r\n    submittedLabel: '3Ð°Ð³ÑÑÐ·ÐºÐ°...',\r\n    forgotPassword: 'ÐÐ°Ð±ÑÐ»Ð¸ Ð¿Ð°ÑÐ¾Ð»Ñ?',\r\n    highlightInfo: '',\r\n    registerUrl: 'ÐÐ¾Ð²ÑÐ¹ ÑÐµÐ³Ð¸ÑÑÑ',\r\n    titlePopover: 'ÐÐ¹!',\r\n    forgotYourPassword: 'ÐÐ°Ð±ÑÐ»Ð¸ Ð¿Ð°ÑÐ¾Ð»Ñ?',\r\n    ifYouTryHarder: 'ÐÑÐ»Ð¸ Ð²Ñ Ð±ÐµÐ·ÑÑÐ¿ÐµÑÐ½Ð¾ Ð¿Ð¾Ð¿ÑÑÐ°ÐµÑÐµÑÑ Ð²Ð¾Ð¹ÑÐ¸ ÐµÑÐµ ',\r\n    attempts: '{0} ÑÐ°Ð·(Ð°) ',\r\n    yourUserWillBeBlocked: 'ÐÐ°Ñ Ð¿Ð¾Ð»ÑÐ·Ð¾Ð²Ð°ÑÐµÐ»Ñ Ð±ÑÐ´ÐµÑ Ð·Ð°Ð±Ð»Ð¾ÐºÐ¸ÑÐ¾Ð²Ð°Ð½, Ð¸ ÐÑ Ð¾ÑÑÐ°Ð½ÐµÑÐµÑÑ Ð½Ð° 24 ÑÐ°ÑÐ° Ð±ÐµÐ· Ð²Ð¾Ð·Ð¼Ð¾Ð¶Ð½Ð¾ÑÑÐ¸ Ð´Ð¾ÑÑÑÐ¿Ð° :(',\r\n    createANewPasswordNow: 'ÐÑÑÑÐµ ÑÐ¾Ð·Ð´Ð°Ð¹ÑÐµ Ð½Ð¾Ð²ÑÐ¹ Ð¿Ð°ÑÐ¾Ð»Ñ ÑÐµÐ¹ÑÐ°Ñ!Â ÐÑ ÑÐ¼Ð¾Ð¶ÐµÑÐµ ÑÑÐ°Ð·Ñ Ð²Ð¾Ð¹ÑÐ¸ Ð² ÑÐ¸ÑÑÐµÐ¼Ñ.',\r\n    iForgotMyPassword: 'Ð¯ Ð·Ð°Ð±ÑÐ» ÑÐ²Ð¾Ð¹ Ð¿Ð°ÑÐ¾Ð»Ñ'\r\n  }\r\n};\r\n\r\nexport const poPageLoginLiteralIn = {\r\n  en: 'in',\r\n  es: 'en',\r\n  pt: 'em',\r\n  ru: 'Ð²'\r\n};\r\n\r\nexport const poPageLoginLiteralTo = {\r\n  en: 'to',\r\n  es: 'al',\r\n  pt: 'ao',\r\n  ru: 'Ðº'\r\n};\r\n\r\n/**\r\n * @description\r\n *\r\n * O componente `po-page-login` Ã© utilizado como template para tela de login.\r\n * Com ele Ã© possÃ­vel definirmos valores para usuÃ¡rio, senha e definir aÃ§Ãµes para recuperaÃ§Ã£o de senha e gravaÃ§Ã£o de dados do usuÃ¡rio.\r\n * TambÃ©m Ã© possÃ­vel inserir uma imagem em conjunto com um texto de destaque.\r\n *\r\n *\r\n * A propriedade `p-authentication-url` automatiza a rotina do componente e simplifica o processo para autenticaÃ§Ã£o do usuÃ¡rio, bastando\r\n * definir uma url para requisiÃ§Ã£o da autenticaÃ§Ã£o. A flexibilidade e praticidade podem chegar a um nÃ­vel em que o desenvolvimento\r\n * da aplicaÃ§Ã£o no *client side* Ã© desprovida de qualquer cÃ³digo-fonte relacionado Ã  rotina de login de usuÃ¡rio.\r\n * Seu detalhamento para uso pode ser visto logo abaixo em *propriedades*.\r\n * Caso julgue necessÃ¡rio, pode-se tambÃ©m definir manualmente a rotina do componente.\r\n *\r\n *\r\n * Para que as imagens sejam exibidas corretamente, Ã© necessÃ¡rio incluir o caminho delas ao projeto. Para isso, edite\r\n * o *assets* no arquivo **angular.json** da aplicaÃ§Ã£o na seguinte ordem:\r\n * ```\r\n *   \"assets\": [\r\n *     \"src/assets\",\r\n *     \"src/favicon.ico\",\r\n *     {\r\n *       \"glob\": \"**\\/*\",\r\n *       \"input\": \"node_modules/@portinari/style/images\",\r\n *       \"output\": \"assets/images\"\r\n *     }\r\n *   ]\r\n * ```\r\n */\r\nexport abstract class PoPageLoginBaseComponent implements OnDestroy {\r\n\r\n  allLoginErrors: Array<string> = [];\r\n  allPasswordErrors: Array<string> = [];\r\n  customFieldObject: PoPageLoginCustomField;\r\n  customFieldType: string;\r\n  loginSubscription: Subscription;\r\n  password: string;\r\n  rememberUser: boolean = false;\r\n  selectedLanguage: string;\r\n  showExceededAttemptsWarning = false;\r\n\r\n  private _authenticationType: PoPageLoginAuthenticationType = PoPageLoginAuthenticationType.Basic;\r\n  private _authenticationUrl: string;\r\n  private _blockedUrl: string;\r\n  private _contactEmail: string;\r\n  private _customField: string | PoPageLoginCustomField;\r\n  private _environment?: string;\r\n  private _exceededAttemptsWarning?: number;\r\n  private _hideRememberUser: boolean = false;\r\n  private _literals: PoPageLoginLiterals;\r\n  private _loading?: boolean = false;\r\n  private _login: string;\r\n  private _loginErrors: Array<string> = [];\r\n  private _passwordErrors: Array<string> = [];\r\n  private _productName: string;\r\n  private _recovery: string | PoPageLoginRecovery | Function;\r\n  private _registerUrl: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Ao informar um valor do tipo `string`, o mesmo serÃ¡ aplicado como a chave do campo customizado e utilizarÃ¡\r\n   * os valores padrÃµes contidos na propriedade `literals` como `customFieldErrorPattern` e `customFieldPlaceholder`.\r\n   *\r\n   * Existe a possibilidade de informar um objeto que segue a definiÃ§Ã£o da interface `PoPageLoginCustomField`, onde\r\n   * atravÃ©s dos parÃ¢metros enviados pode gerar um `po-input`, `po-combo` especificamente para serviÃ§os\r\n   * ou `po-select` para valores fixos.\r\n   *\r\n   * Abaixo seguem os exemplos de cada tipo de campo.\r\n   *\r\n   * `po-input`:\r\n   *\r\n   * ```\r\n   * {\r\n   *   property: 'domain',\r\n   *   value: 'jv01',\r\n   *   placeholder: 'Enter your domain',\r\n   *   pattern: '[a-z]',\r\n   *   errorPattern: 'Invalid value'\r\n   * }\r\n   * ```\r\n   *\r\n   * `po-combo`:\r\n   *\r\n   * ```\r\n   * {\r\n   *   property: 'domain',\r\n   *   value: 'jv01',\r\n   *   placeholder: 'Enter your domain',\r\n   *   url: 'https://portinari.io/sample/api/comboOption/domains',\r\n   *   fieldValue: 'nickname'\r\n   * }\r\n   * ```\r\n   *\r\n   * `po-select`:\r\n   *\r\n   * ```\r\n   * {\r\n   *   property: 'domain',\r\n   *   value: 'jv01',\r\n   *   placeholder: 'Enter your domain',\r\n   *   options: [{label: 'Domain 1', value: '1'}, {label: 'Domain 2', value: '2'}]\r\n   * }\r\n   * ```\r\n   *\r\n   * Caso o customField possua options, url e fieldValue preenchidos, serÃ¡ priorizado o po-select\r\n   * utilizando o options.\r\n   *\r\n   */\r\n  @Input('p-custom-field') set customField(value: string | PoPageLoginCustomField) {\r\n    if (value) {\r\n\r\n      if (isTypeof(value, 'string')) {\r\n        this.customFieldType = 'input';\r\n        this._customField = value;\r\n        this.customFieldObject = this.getDefaultCustomFieldObject(value);\r\n        return;\r\n      }\r\n\r\n      if (isTypeof(value, 'object') && !Array.isArray(value) && value['property']) {\r\n        this._customField = value;\r\n        this.customFieldObject = <PoPageLoginCustomField> value;\r\n\r\n        if (!this.customFieldObject.options && !this.customFieldObject.url) {\r\n          this.customFieldType = 'input';\r\n        } else {\r\n          this.customFieldType = this.customFieldObject.options ? 'select' : 'combo';\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n    }\r\n\r\n    this._customField = undefined;\r\n    this.customFieldObject = undefined;\r\n  }\r\n\r\n  get customField(): string | PoPageLoginCustomField {\r\n    return this._customField;\r\n  }\r\n\r\n  /**\r\n   * O `p-background` permite inserir uma imagem de destaque ao lado direito do formulÃ¡rio de login, caso a propriedade\r\n   * nÃ£o seja preenchida o formulÃ¡rio serÃ¡ centralizado no espaÃ§o disponÃ­vel.\r\n   *\r\n   * A fonte da imagem pode ser de um caminho local ou uma url de um servidor externo.\r\n   *\r\n   * AlÃ©m da imagem, Ã© possÃ­vel adicionar um texto informativo por cima da imagem da imagem de destaque, para isso informe\r\n   * um valor para a literal `highlightInfo`.\r\n   *\r\n   * > Veja mais sobre as literais na propriedade `p-literals`.\r\n   *\r\n   * Exemplos de valores vÃ¡lidos:\r\n   * - **local**: `./assets/images/login-background.png`\r\n   * - **url externa**: `https://portinari.io/assets/images/login-background.png`\r\n   *\r\n   * > Essa propriedade Ã© ignorada para aplicaÃ§Ãµes mobile.\r\n   */\r\n  @Input('p-background') background?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Personaliza o e-mail que Ã© exibido na mensagem de dica de login padrÃ£o para contato de suporte.\r\n   */\r\n  @Input('p-contact-email') set contactEmail(value: string) {\r\n    this._contactEmail = value;\r\n  }\r\n  get contactEmail() {\r\n    return this._contactEmail;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Valor customizado que sucede o tÃ­tulo de boas-vindas.\r\n   *\r\n   * > Esta propriedade Ã© sobreposta se `p-literals` contiver uma definiÃ§Ã£o customizada para a literal `title`.\r\n   *\r\n   * > Veja mais sobre as literais na propriedade `p-literals`.\r\n   *\r\n   */\r\n  @Input('p-product-name') set productName(value: string) {\r\n    this._productName = value;\r\n  }\r\n  get productName() {\r\n    return this._productName;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   * Adiciona uma `tag` abaixo do tÃ­tulo que especifica o ambiente que o usuÃ¡rio estÃ¡ fazendo o login.\r\n   *\r\n   * > Essa propriedade limita o texto em 40 caracteres.\r\n   */\r\n  @Input('p-environment') set environment(environment: string) {\r\n    if (environment && environment.length > poPageLoginContentMaxLength) {\r\n      this._environment = environment.substring(0, poPageLoginContentMaxLength);\r\n    } else {\r\n      this._environment = environment;\r\n    }\r\n  }\r\n  get environment() {\r\n    return this._environment;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   * Exibe um aviso de bloqueio de acordo com a quantidade restante de tentativas.\r\n   * O aviso serÃ¡ exibido somente se a quantidade for maior que zero.\r\n   *\r\n   * > Caso tenha algum valor atribuÃ­do para o atributo `p-authentication-url` e o retorno da requisiÃ§Ã£o estiver atribuindo valor\r\n   * para o `p-exceeded-attempts-warning`, o valor considerado serÃ¡ o do retorno da requisiÃ§Ã£o.\r\n   *\r\n   * @default `0`\r\n   */\r\n  @Input('p-exceeded-attempts-warning') set exceededAttemptsWarning(value: number) {\r\n    this._exceededAttemptsWarning = convertToInt(value);\r\n    this.showExceededAttemptsWarning = this.exceededAttemptsWarning > 0;\r\n  }\r\n\r\n  get exceededAttemptsWarning(): number {\r\n    return this._exceededAttemptsWarning;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Esconde a funÃ§Ã£o \"Lembrar usuÃ¡rio\" do formulÃ¡rio de login.\r\n   *\r\n   * Quando essa propriedade Ã© setada com `true` a propriedade `rememberUser` enviada no evento `p-login-submit` serÃ¡ sempre\r\n   * `false`.\r\n   *\r\n   * > Veja a propriedade `p-literals` para customizar a literal `rememberUser`.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-hide-remember-user') set hideRememberUser(value: boolean) {\r\n    this._hideRememberUser = <any>value === '' ? true : convertToBoolean(value);\r\n\r\n    if (this._hideRememberUser) {\r\n      this.rememberUser = false;\r\n    }\r\n  }\r\n  get hideRememberUser(): boolean {\r\n    return this._hideRememberUser;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Objeto com as literais usadas no `po-page-login`.\r\n   *\r\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\r\n   *\r\n   * ```\r\n   *  const customLiterals: PoPageLoginLiterals = {\r\n   *    attempts: '{0} vez(es) ',\r\n   *    createANewPasswordNow: 'Melhor criar uma senha nova agora! VocÃª vai poder entrar no sistema logo em seguida.',\r\n   *    forgotPassword: 'Esqueceu sua senha?',\r\n   *    forgotYourPassword: 'Esqueceu sua senha?',\r\n   *    highlightInfo: '',\r\n   *    iForgotMyPassword: 'Esqueci minha senha',\r\n   *    ifYouTryHarder: 'Se tentar mais ',\r\n   *    title: 'Seja bem-vindo',\r\n   *    loginErrorPattern: 'Login obrigatÃ³rio',\r\n   *    loginHint: 'Caso nÃ£o possua usuÃ¡rio entre em contato com o suporte',\r\n   *    loginLabel: 'Insira seu usuÃ¡rio',\r\n   *    loginPlaceholder: 'Insira seu usuÃ¡rio de acesso',\r\n   *    passwordErrorPattern: 'Senha obrigatÃ³ria',\r\n   *    passwordLabel: 'Insira sua senha',\r\n   *    passwordPlaceholder: 'Insira sua senha de acesso',\r\n   *    customFieldErrorPattern: 'Campo customizado invÃ¡lido',\r\n   *    customFieldPlaceholder: 'Por favor insira um valor',\r\n   *    registerUrl: 'Novo registro',\r\n   *    rememberUser: 'Lembrar usuÃ¡rio',\r\n   *    rememberUserHint: 'Esta opÃ§Ã£o pode ser desabilitada nas configuraÃ§Ãµes do sistema',\r\n   *    submitLabel: 'Acessar sistema',\r\n   *    submittedLabel: 'Carregando...',\r\n   *    titlePopover: 'Opa!',\r\n   *    yourUserWillBeBlocked: 'sem sucesso seu usuÃ¡rio serÃ¡ bloqueado e vocÃª fica 24 horas sem poder acessar :('\r\n   *  };\r\n   * ```\r\n   *\r\n   * Ou passando apenas as literais que deseja customizar:\r\n   *\r\n   * ```\r\n   *  const customLiterals: PoPageLoginLiterals = {\r\n   *    loginPlaceholder: 'Insira seu usuÃ¡rio de acesso',\r\n   *    passwordPlaceholder: 'Insira sua senha de acesso',\r\n   *    submitLabel: 'Acessar sistema'\r\n   *  };\r\n   * ```\r\n   *\r\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\r\n   *\r\n   * ```\r\n   * <po-page-login\r\n   *   [p-literals]=\"customLiterals\">\r\n   * </po-page-login>\r\n   * ```\r\n   *\r\n   *  > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do browser (pt, en, es).\r\n   *  > Ã tambÃ©m possÃ­vel alternar o objeto padrÃ£o de literais atravÃ©s do seletor de idiomas localizado na parte inferior do template,\r\n   * nesse caso, hÃ¡ tambÃ©m a opÃ§Ã£o do idioma russo.\r\n   */\r\n  @Input('p-literals') set literals(value: PoPageLoginLiterals) {\r\n    this._literals = value;\r\n  }\r\n\r\n  get literals() {\r\n    return this._literals;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Habilita um estado de carregamento ao botÃ£o de *login*.\r\n   *\r\n   * > Ã necessÃ¡rio atribuir `true` Ã  esta propriedade na funÃ§Ã£o definida em `p-login-submit`.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-loading') set loading(value: boolean) {\r\n    this._loading = convertToBoolean(value);\r\n  }\r\n\r\n  get loading(): boolean {\r\n    return this._loading;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Valor do modelo do campo de login.\r\n   */\r\n  @Input('p-login') set login(value: string) {\r\n    this._login = value;\r\n\r\n    if (!this.authenticationUrl) {\r\n      this.loginChange.emit(this._login);\r\n    }\r\n  }\r\n\r\n  get login(): string {\r\n    return this._login;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Caminho para a logomarca localizada na parte superior.\r\n   *\r\n   * > Caso seja indefinida o espaÃ§o se mantÃ©m preservado porÃ©m vazio.\r\n   */\r\n  @Input('p-logo') logo?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * ExpressÃ£o regular para validar o campo de login, caso a expressÃ£o nÃ£o seja atentida, a literal `loginErrorPattern`\r\n   * serÃ¡ exibida.\r\n   *\r\n   * Exemplos de valores vÃ¡lidos:\r\n   * - email: `[expressao-regular-email]`\r\n   * - cpf: `[expressao-regular-cpf]`\r\n   *\r\n   * > Veja a propriedade `p-literals` para customizar a literal `loginErrorPattern`.\r\n   */\r\n  @Input('p-login-pattern') loginPattern?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Atributo que recebe uma lista de erros e exibe abaixo do campo de login.\r\n   */\r\n  @Input('p-login-errors') set loginErrors(value: Array<string>) {\r\n    this._loginErrors = value || [];\r\n    this.setLoginErrors(this._loginErrors);\r\n  }\r\n  get loginErrors() {\r\n    return this._loginErrors;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Atributo que recebe uma lista de erros e exibe abaixo do campo de password.\r\n   */\r\n  @Input('p-password-errors') set passwordErrors(value: Array<string>) {\r\n    this._passwordErrors = value || [];\r\n    this.setPasswordErrors(this._passwordErrors);\r\n  }\r\n  get passwordErrors() {\r\n    return this._passwordErrors;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * ExpressÃ£o regular para validar o campo de password, caso a expressÃ£o nÃ£o seja atentida, a literal `passwordErrorPattern`\r\n   * serÃ¡ exibida.\r\n   *\r\n   * Exemplos de valores vÃ¡lidos:\r\n   * - Apenas nÃºmeros: `\\d?`\r\n   * - Letras mÃ­nusculas: `\\z?`\r\n   *\r\n   * > Veja a propriedade `p-literals` para customizar a literal `passwordErrorPattern`.\r\n   */\r\n  @Input('p-password-pattern') passwordPattern?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Exibe um link abaixo do formulÃ¡rio de login para que os usuÃ¡rios da aplicaÃ§Ã£o faÃ§am a recuperaÃ§Ã£o dos dados de autenticaÃ§Ã£o.\r\n   *\r\n   * A propriedade aceita os seguintes tipos:\r\n   *\r\n   * - **String**: informe uma url externa ou uma rota vÃ¡lida;\r\n   * - **Function**: pode-se customizar a aÃ§Ã£o. Para esta possilidade basta atribuir:\r\n   * ```\r\n   * <po-page-login>\r\n   *   [recovery]=\"this.myRecovery.bind(this)\">\r\n   * </po-page-login>\r\n   * ```\r\n   *\r\n   * - **PoPageLoginRecovery**: cria-se vÃ­nculo automÃ¡tico com o template **po-modal-password-recovery**.\r\n   *   O objeto deve conter a **url** para requisiÃ§Ã£o dos recursos e pode-se definir o **tipo** de modal para recuperaÃ§Ã£o de senha,\r\n   *   **email** para contato e **mÃ¡scara** do campo de telefone.\r\n   */\r\n  @Input('p-recovery') set recovery(value: string | Function | PoPageLoginRecovery) {\r\n    this._recovery = value;\r\n  }\r\n\r\n  get recovery() {\r\n    return this._recovery;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Caso a aplicaÃ§Ã£o tenha um link para novos cadastros, informe uma url externa ou uma rota vÃ¡lida, dessa\r\n   * forma serÃ¡ exibido um link abaixo do formulÃ¡rio de login para os usuÃ¡rios da aplicaÃ§Ã£o.\r\n   *\r\n   * Exemplos de valores vÃ¡lidos:\r\n   * - **local**: `/home`\r\n   * - **url externa**: `https://portinari.io`\r\n   *\r\n   * > Veja a propriedade `p-literals` para customizar a literal `registerUrl`.\r\n   */\r\n  @Input('p-register-url') set registerUrl(value: string) {\r\n    this._registerUrl = isTypeof(value, 'string') ? value : undefined;\r\n  }\r\n\r\n  get registerUrl(): string {\r\n    return this._registerUrl;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Caminho para a logomarca localizada no rodapÃ©.\r\n   */\r\n  @Input('p-secondary-logo') secondaryLogo?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Atributo que recebe o tipo de esquema da autenticaÃ§Ã£o, sendo suportados apenas os valores `Basic` e `Bearer`.\r\n   *\r\n   * > Caso o tipo definido seja `Basic`, o componente farÃ¡ uma requisiÃ§Ã£o `POST` contendo:\r\n   *\r\n   * ```\r\n   * headers {\r\n   *  Authorization: Basic base64(login:password)\r\n   * }\r\n   *\r\n   * body {\r\n   *  rememberUser: rememberUser\r\n   * }\r\n   * ```\r\n   *\r\n   * > Caso o tipo definido seja `Bearer`, o componente farÃ¡ uma requisiÃ§Ã£o `POST` contendo:\r\n   *\r\n   * ```\r\n   * body {\r\n   *  login: login,\r\n   *  password: base64(password),\r\n   *  rememberUser: rememberUser\r\n   * }\r\n   * ```\r\n   *\r\n   * @default `PoPageLoginAuthenticationType.Basic`\r\n   */\r\n  @Input('p-authentication-type') set authenticationType(value: PoPageLoginAuthenticationType) {\r\n    this._authenticationType =\r\n    (<any>Object).values(PoPageLoginAuthenticationType).includes(value) ? value : PoPageLoginAuthenticationType.Basic;\r\n  }\r\n\r\n  get authenticationType(): PoPageLoginAuthenticationType {\r\n    return this._authenticationType;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Endpoint usado pelo template para requisiÃ§Ã£o do recurso. Quando preenchido, o mÃ©todo `p-login-submit` serÃ¡ ignorado e o\r\n   * componente adquirirÃ¡ automatizaÃ§Ã£o para o processo de autenticaÃ§Ã£o.\r\n   *\r\n   * ### Processos\r\n   * Ao digitar um valor vÃ¡lido no campo de login/password e pressionar **Enter**, o componente farÃ¡ uma requisiÃ§Ã£o `POST`\r\n   * na url especificada nesta propriedade passando o objeto contendo o valor definido pelo usuÃ¡rio:\r\n   *\r\n   * ```\r\n   * headers {\r\n   *  Authorization: Basic base64(login:password)\r\n   * }\r\n   *\r\n   * body {\r\n   *  rememberUser: rememberUser\r\n   * }\r\n   * ```\r\n   *\r\n   * Em caso de **sucesso**, o objeto de retorno Ã© armazenado no `sessionStorage` e o usuÃ¡rio Ã© redirecionado para a pÃ¡gina inicial da\r\n   * aplicaÃ§Ã£o `/`.\r\n   *\r\n   * ```\r\n   * 200:\r\n   *  {\r\n   *    user: user\r\n   *  }\r\n   * ```\r\n   *\r\n   * Em caso de **erro** na autenticaÃ§Ã£o, espera-se o seguinte retorno:\r\n   *\r\n   * ```\r\n   * 400/401\r\n   *  {\r\n   *    code: 400/401,\r\n   *    message: message,\r\n   *    detailedMessage: detailedMessage,\r\n   *    helpUrl?: helpUrl\r\n   *  }\r\n   * ```\r\n   *\r\n   * > Pode-se atribuir uma quantidade mÃ¡xima de tentativas restantes (maxAttemptsRemaining) para o atributo `p-exceeded-attempts-warning`,\r\n   * assim como os avisos relacionados aos campos login e password (loginWarnings, passwordWarnings) para os atributos `p-login-errors` e\r\n   * `p-password-errors` conforme retorno abaixo:\r\n   *\r\n   * ```\r\n   * 400\r\n   *  {\r\n   *    code: 400/401,\r\n   *    message: message,\r\n   *    detailedMessage: detailedMessage,\r\n   *    helpUrl?: helpUrl,\r\n   *    maxAttemptsRemaining?: maxAttemptsRemaining,\r\n   *    loginWarnings?: [loginWarnings],\r\n   *    passwordWarnings?: [passwordWarnings]\r\n   *  }\r\n   * ```\r\n   *\r\n   * > Caso o valor atribuÃ­do para `p-exceeded-attempts-warning` seja igual a 0(zero), poderÃ¡ ser passado um valor para o\r\n   * atributo `p-blocked-url` e o usuÃ¡rio serÃ¡ redirecionado para uma tela de bloqueio.\r\n   *\r\n   * *Processo finalizado.*\r\n   *\r\n   * _______________\r\n   *\r\n   * #### Praticidade\r\n   * As informaÃ§Ãµes do serviÃ§o de autenticaÃ§Ã£o tambÃ©m podem ser transmitidas diretamente pelas configuraÃ§Ã£os de rota e, desta maneira,\r\n   * dispensa-se qualquer menÃ§Ã£o e/ou importaÃ§Ã£o do componente `po-page-login` no restante da aplicaÃ§Ã£o. O exemplo abaixo exemplifica\r\n   * a forma dinÃ¢mica com a qual o template de tela de login pode ser gerado ao navegar para rota `/login`, e tambÃ©m como ele se comunica\r\n   * com o serviÃ§o para efetuaÃ§Ã£o do processo de autenticaÃ§Ã£o do usuÃ¡rio e solicitaÃ§Ã£o de nova senha.\r\n   * Basta definir nas configuraÃ§Ãµes de rota:\r\n   *\r\n   *\r\n   * ```\r\n   *   import { PoPageLoginComponent, PoPageLoginAthenticationType } from '@portinari/portinari-templates';\r\n   *\r\n   *   ...\r\n   *   const routes: Routes = [\r\n   *     {\r\n   *       path: 'login', component: PoPageLoginComponent, data: {\r\n   *         serviceApi: 'https://portinari.io/sample/api/users/authentication',\r\n   *         environment: 'development',\r\n   *         recovery: {\r\n   *           url: 'https://portinari.io/sample/api/users',\r\n   *           type: PoModalPasswordRecoveryType.All,\r\n   *           contactMail: 'dev.portinari@portinari.com',\r\n   *           phoneMask: '9-999-999-9999'\r\n   *         },\r\n   *         registerUrl: '/new-password',\r\n   *         authenticationType: PoPageLoginAthenticationType.Basic\r\n   *       }\r\n   *     }\r\n   *     ...\r\n   *   ];\r\n   *\r\n   *   @NgModule({\r\n   *     imports: [RouterModule.forRoot(routes)],\r\n   *     exports: [RouterModule]\r\n   *   })\r\n   *   export class AppRoutingModule { }\r\n   * ```\r\n   *\r\n   *\r\n   * O metadado `serviceApi` deve ser a **url** para requisiÃ§Ã£o dos recursos de autenticaÃ§Ã£o, o `environment` alimenta a propriedade\r\n   * `p-environment`, `recovery` Ã© a interface `PoPageLoginRecovery` responsÃ¡vel pelas especificaÃ§Ãµes contidas na modal de recuperaÃ§Ã£o de\r\n   * senha, `registerUrl` alimenta a propriedade `p-register-url` e `authenticationType` que define a propriedade `p-authentication-type`.\r\n   *\r\n   * > Ã essencial que siga a nomenclatura dos atributos exemplificados acima para sua efetiva funcionalidade.\r\n   *\r\n   */\r\n  @Input('p-authentication-url') set authenticationUrl(value: string) {\r\n    this._authenticationUrl = isTypeof(value, 'string') ? value : undefined;\r\n  }\r\n\r\n  get authenticationUrl(): string {\r\n    return this._authenticationUrl;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Caso o valor atribuÃ­do para `p-exceeded-attempts-warning` seja igual a 0(zero) e a aplicaÃ§Ã£o tenha um link de bloqueio de usuÃ¡rio,\r\n   * informe uma url externa ou uma rota vÃ¡lida, dessa forma em caso de bloqueio o usuÃ¡rio serÃ¡ redirecionado.\r\n   */\r\n  @Input('p-blocked-url') set blockedUrl(value: string) {\r\n    this._blockedUrl = isTypeof(value, 'string') ? value : undefined;\r\n  }\r\n\r\n  get blockedUrl(): string {\r\n    return this._blockedUrl;\r\n  }\r\n\r\n  /**\r\n   * Evento disparado quando o usuÃ¡rio alterar o input do campo login.\r\n   *\r\n   * Esse evento receberÃ¡ como parÃ¢metro uma variÃ¡vel do tipo `string` com o texto informado no campo.\r\n   *\r\n   * > Esta propriedade serÃ¡ ignorada se for definido valor para a propriedade `p-authentication-url`.\r\n   */\r\n  @Output('p-login-change') loginChange?: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  /**\r\n   * Evento disparado ao submeter o formulÃ¡rio de login (apertando `Enter` dentro dos campos ou pressionando o botÃ£o de confirmaÃ§Ã£o).\r\n   *\r\n   * Esse evento receberÃ¡ como parÃ¢metro um objeto do tipo `PoPageLogin` com os dados informados no formulÃ¡rio.\r\n   *\r\n   * > Esta propriedade serÃ¡ ignorada se for definido valor para a propriedade `p-url-recovery`.\r\n   *\r\n   * > Para mais detalhes consulte a documentaÃ§Ã£o sobre a interface `PoPageLogin` mais abaixo.\r\n   */\r\n  @Output('p-login-submit') loginSubmit = new EventEmitter<PoPageLogin>();\r\n\r\n  /**\r\n   * Evento disparado quando o usuÃ¡rio alterar o input do campo password.\r\n   *\r\n   * Esse evento receberÃ¡ como parÃ¢metro uma variÃ¡vel do tipo `string` com o texto informado no campo.\r\n   *\r\n   * > Esta propriedade serÃ¡ ignorada se for definido valor para a propriedade `p-authentication-url`.\r\n   */\r\n  @Output('p-password-change') passwordChange?: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  get language(): string {\r\n    return this.selectedLanguage || getShortBrowserLanguage();\r\n  }\r\n\r\n  get pageLoginLiterals(): PoPageLoginLiterals {\r\n    const loginHintWithContactEmail = this.contactEmail ? this.concatenateLoginHintWithContactEmail(this.contactEmail) : undefined;\r\n\r\n    const titleWithProductName = this.productName ? this.concatenateTitleWithProductName(this.productName) : undefined;\r\n\r\n    return {\r\n      ...poPageLoginLiteralsDefault[poLocaleDefault],\r\n      ...poPageLoginLiteralsDefault[this.language],\r\n      ...loginHintWithContactEmail,\r\n      ...titleWithProductName,\r\n      ...this.literals\r\n    };\r\n  }\r\n\r\n  constructor(private loginService: PoPageLoginService, public router: Router) { }\r\n\r\n  ngOnDestroy() {\r\n    if (this.loginSubscription) {\r\n      this.loginSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  closePopover() {\r\n    this.showExceededAttemptsWarning = false;\r\n  }\r\n\r\n  onLoginSubmit(): void {\r\n    const loginForm: PoPageLogin = {\r\n      login: this.login,\r\n      password: this.password,\r\n      rememberUser: this.rememberUser\r\n    };\r\n\r\n    if (this.customField) {\r\n      loginForm[this.customFieldObject.property] = this.customFieldObject.value;\r\n    }\r\n\r\n    if (this.authenticationUrl) {\r\n      this.loginSubscription =\r\n      this.loginService.onLogin(this.authenticationUrl, this.authenticationType, loginForm)\r\n      .subscribe(data => {\r\n        this.setValuesToProperties();\r\n        sessionStorage.setItem('PO_USER_LOGIN', JSON.stringify(data));\r\n        this.openInternalLink('/');\r\n      },\r\n      error => {\r\n        if (error.error.code === '400' || error.error.code === '401') {\r\n          this.setValuesToProperties(error);\r\n          this.redirectBlockedUrl(this.exceededAttemptsWarning, this.blockedUrl);\r\n        }\r\n      });\r\n    } else {\r\n      this.loginSubmit.emit(loginForm);\r\n      this.showExceededAttemptsWarning = this.exceededAttemptsWarning > 0;\r\n    }\r\n  }\r\n\r\n  private getDefaultCustomFieldObject(property): PoPageLoginCustomField {\r\n    return { property };\r\n  }\r\n\r\n  private openExternalLink(url: string) {\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  private openInternalLink(url: string) {\r\n    this.router.navigate([url]);\r\n  }\r\n\r\n  private redirectBlockedUrl(attempts: number, blockedUrl: string) {\r\n    if (attempts === 0 && blockedUrl) {\r\n      this.showExceededAttemptsWarning = false;\r\n      isExternalLink(blockedUrl) ? this.openExternalLink(blockedUrl) : this.openInternalLink(blockedUrl);\r\n    }\r\n  }\r\n\r\n  private setValuesToProperties(result?) {\r\n    if (result) {\r\n      this.exceededAttemptsWarning = result.error.maxAttemptsRemaining;\r\n      this.loginErrors = result.error.loginWarnings;\r\n      this.passwordErrors = result.error.passwordWarnings;\r\n      this.blockedUrl = result.error.blockedUrl;\r\n    } else {\r\n      this.exceededAttemptsWarning = 0;\r\n      this.loginErrors = [];\r\n      this.passwordErrors = [];\r\n      this.blockedUrl = '';\r\n    }\r\n  }\r\n\r\n  protected abstract concatenateLoginHintWithContactEmail(contactEmail: string);\r\n\r\n  protected abstract concatenateTitleWithProductName(productName: string);\r\n\r\n  protected abstract setLoginErrors(value: Array<string>): void;\r\n\r\n  protected abstract setPasswordErrors(value: Array<string>): void;\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { PoPageLogin } from './interfaces/po-page-login.interface';\r\nimport { PoPageLoginAuthenticationType } from './enums/po-page-login-authentication-type.enum';\r\n\r\n@Injectable()\r\nexport class PoPageLoginService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  onLogin(url: string, type: PoPageLoginAuthenticationType, loginForm: PoPageLogin): Observable<Object> {\r\n\r\n    if (type === PoPageLoginAuthenticationType.Bearer) {\r\n      loginForm.password = btoa(loginForm.password);\r\n      return this.http.post(url, loginForm);\r\n    } else {\r\n      const user = `(${loginForm.login}:${loginForm.password})`;\r\n      const headers = new HttpHeaders({\r\n        'Authorization': `${type} ` + btoa(user)\r\n      });\r\n      delete loginForm.login;\r\n      delete loginForm.password;\r\n      return this.http.post(url, loginForm, { headers });\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","import { AbstractControl, NgForm } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AfterViewChecked, ChangeDetectorRef, Component, ComponentRef, IterableDiffers, OnInit, ViewChild, ViewContainerRef\r\n} from '@angular/core';\r\n\r\nimport { isExternalLink } from '../../utils/util';\r\nimport { PoComponentInjectorService } from '@portinari/portinari-ui';\r\n\r\nimport { PoModalPasswordRecoveryComponent } from '../po-modal-password-recovery/po-modal-password-recovery.component';\r\nimport { PoModalPasswordRecoveryType } from '../po-modal-password-recovery/enums/po-modal-password-recovery-type.enum';\r\nimport { PoPageLoginBaseComponent, poPageLoginLiteralIn, poPageLoginLiteralTo, poPageLoginLiteralsDefault\r\n} from './po-page-login-base.component';\r\nimport { PoPageLoginRecovery } from './interfaces/po-page-login-recovery.interface';\r\nimport { PoPageLoginService } from './po-page-login.service';\r\n\r\n/**\r\n * @docsExtends PoPageLoginBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-page-login-basic\" title=\"Portinari Page Login Basic\">\r\n *  <file name=\"sample-po-page-login-basic/sample-po-page-login-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-page-login-basic/sample-po-page-login-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-page-login-labs\" title=\"Portinari Page Login Labs\">\r\n *  <file name=\"sample-po-page-login-labs/sample-po-page-login-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-page-login-labs/sample-po-page-login-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-page-login-human-resources\" title=\"Portinari Page Login - Human Resources\">\r\n *  <file name=\"sample-po-page-login-human-resources/sample-po-page-login-human-resources.component.html\"> </file>\r\n *  <file name=\"sample-po-page-login-human-resources/sample-po-page-login-human-resources.component.ts\"> </file>\r\n *  <file name=\"sample-po-page-login-human-resources/sample-po-page-login-human-resources.module.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-page-login-automatic-service\" title=\"Portinari Page Login - Automatic Service\">\r\n *  <file name=\"sample-po-page-login-automatic-service/sample-po-page-login-automatic-service.component.html\"> </file>\r\n *  <file name=\"sample-po-page-login-automatic-service/sample-po-page-login-automatic-service.component.ts\"> </file>\r\n * </example>\r\n */\r\n\r\n@Component({\r\n  selector: 'po-page-login',\r\n  templateUrl: './po-page-login.component.html'\r\n})\r\n\r\nexport class PoPageLoginComponent extends PoPageLoginBaseComponent implements AfterViewChecked, OnInit {\r\n\r\n  private componentRef: ComponentRef<any> = null;\r\n  private differ: any;\r\n  private readonly customPasswordError = { custom : false };\r\n\r\n  @ViewChild('loginForm', { read: NgForm, static: true }) loginForm: NgForm;\r\n  @ViewChild('pageLogin', { read: ViewContainerRef, static: true }) pageLogin: ViewContainerRef;\r\n\r\n  constructor(\r\n    public changeDetector: ChangeDetectorRef,\r\n    private activatedRoute: ActivatedRoute,\r\n    private poComponentInjector: PoComponentInjectorService,\r\n    differs: IterableDiffers,\r\n    loginService: PoPageLoginService,\r\n    router: Router,\r\n    ) {\r\n    super(loginService, router);\r\n    this.differ = differs.find([]).create(null);\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    if (this.differ) {\r\n      this.validateArrayChanges(this.differ, [\r\n        { array: this.loginErrors, callback: this.generateLoginError.bind(this) },\r\n        { array: this.passwordErrors, callback: this.generatePasswordError.bind(this) }\r\n      ]);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.checkingForRouteMetadata(this.activatedRoute.snapshot.data);\r\n  }\r\n\r\n  changeLoginModel() {\r\n    if (this.authenticationUrl) {\r\n      this.loginErrors = [];\r\n    } else {\r\n      this.setLoginErrors(this.loginErrors);\r\n      this.loginChange.emit(this.login);\r\n    }\r\n  }\r\n\r\n  changePasswordModel() {\r\n    if (this.authenticationUrl) {\r\n      this.passwordErrors = [];\r\n    } else {\r\n      this.setPasswordErrors(this.passwordErrors);\r\n      this.passwordChange.emit(this.password);\r\n    }\r\n  }\r\n\r\n  onSelectedLanguage(language: string) {\r\n    this.selectedLanguage = language;\r\n  }\r\n\r\n  openUrl(recovery: any): void {\r\n    switch (typeof recovery) {\r\n      case 'string': {\r\n        this.setUrlRedirect(recovery);\r\n        break;\r\n      }\r\n      case 'function': {\r\n        recovery();\r\n        break;\r\n      }\r\n      case 'object': {\r\n        this.createModalPasswordRecoveryComponent(recovery);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  private checkingForMetadataProperty(object, property) {\r\n    if (Object.prototype.hasOwnProperty.call(object, property)) {\r\n      return object[property];\r\n    }\r\n  }\r\n\r\n  private checkingForRouteMetadata(data) {\r\n    if (Object.keys(data).length !== 0) {\r\n      this.authenticationUrl = this.checkingForMetadataProperty(data, 'serviceApi') || this.authenticationUrl;\r\n      this.authenticationType = this.checkingForMetadataProperty(data, 'authenticationType') || this.authenticationType;\r\n      this.environment = this.checkingForMetadataProperty(data, 'environment') || this.environment;\r\n      this.recovery = this.checkingForMetadataProperty(data, 'recovery') || this.recovery;\r\n      this.registerUrl = this.checkingForMetadataProperty(data, 'registerUrl') || this.registerUrl;\r\n    }\r\n  }\r\n\r\n  private concatenate(defaultLiteral: string, prefixLiteral: string, value: string) {\r\n    return `${defaultLiteral} ${prefixLiteral} ${value}`;\r\n  }\r\n\r\n  private concatenateLiteral(value: string, literal: string, defaultLiteral: string, prepositionLiteral: string) {\r\n    return { [literal]: this.concatenate(defaultLiteral, prepositionLiteral, value) };\r\n  }\r\n\r\n  private createModalPasswordRecoveryComponent(poPageLoginRecovery: PoPageLoginRecovery) {\r\n    if (this.componentRef) {\r\n      this.poComponentInjector.destroyComponentInApplication(this.componentRef);\r\n    }\r\n\r\n    this.componentRef = this.poComponentInjector.createComponentInApplication(PoModalPasswordRecoveryComponent);\r\n    this.componentRef.instance.urlRecovery = poPageLoginRecovery.url;\r\n    this.componentRef.instance.contactEmail = poPageLoginRecovery.contactMail;\r\n    this.componentRef.instance.phoneMask = poPageLoginRecovery.phoneMask;\r\n    this.componentRef.instance.type = poPageLoginRecovery.type || PoModalPasswordRecoveryType.Email;\r\n    this.componentRef.changeDetectorRef.detectChanges();\r\n    setTimeout(() => {\r\n      this.componentRef.instance.open();\r\n    });\r\n  }\r\n\r\n  private generateLoginError() {\r\n    if (this.loginErrors && this.loginErrors.length) {\r\n      this.setLoginErrors(this.loginErrors);\r\n    } else {\r\n      const control = this.loginForm.form.controls['login'];\r\n      if (control) {\r\n        this.resetControl(control);\r\n      }\r\n    }\r\n  }\r\n\r\n  private generatePasswordError() {\r\n    if (this.passwordErrors && this.passwordErrors.length) {\r\n      this.setPasswordErrors(this.passwordErrors);\r\n    } else {\r\n      const control = this.loginForm.form.controls['password'];\r\n\r\n      if (control) {\r\n        this.resetControl(control);\r\n      }\r\n    }\r\n  }\r\n\r\n  private resetControl(control: AbstractControl) {\r\n    control.markAsPristine();\r\n    control.markAsUntouched();\r\n    control.updateValueAndValidity();\r\n  }\r\n\r\n  private setControlErrors(allErrors: string, control: AbstractControl, errors: Array<string>, patternError: string) {\r\n\r\n    if (control) {\r\n\r\n      this[allErrors] = control.hasError('pattern') ? [...errors, ...[patternError]] : [...errors];\r\n\r\n      if (errors && errors.length && (control.valid || control.pristine)) {\r\n        control.markAsTouched();\r\n        control.markAsDirty();\r\n        control.setErrors(this.customPasswordError);\r\n      }\r\n    }\r\n  }\r\n\r\n  private setUrlRedirect(url) {\r\n    isExternalLink(url) ?  window.open(url, '_blank') : this.router.navigate([url]);\r\n  }\r\n\r\n  private validateArrayChanges(differ: any, array: Array<{ array: Array<any>, callback: any }>) {\r\n\r\n    array.forEach(element => {\r\n      const changes = differ.diff(element.array);\r\n      if (changes) {\r\n        element.callback();\r\n        this.changeDetector.detectChanges();\r\n      }\r\n    });\r\n  }\r\n\r\n  protected concatenateLoginHintWithContactEmail(contactEmail: string) {\r\n    const defaultLoginHintLiteral = poPageLoginLiteralsDefault[this.language].loginHint;\r\n    const prepositionLiteral = poPageLoginLiteralIn[this.language];\r\n\r\n    return this.concatenateLiteral(contactEmail, 'loginHint', defaultLoginHintLiteral, prepositionLiteral);\r\n  }\r\n\r\n  protected concatenateTitleWithProductName(productName: string) {\r\n    const defaultTitleLiteral = poPageLoginLiteralsDefault[this.language].title;\r\n    const prepositionLiteral = poPageLoginLiteralTo[this.language];\r\n\r\n    return this.concatenateLiteral(productName, 'title', defaultTitleLiteral, prepositionLiteral);\r\n  }\r\n\r\n  protected setLoginErrors(errors: Array<string>) {\r\n    const control = this.loginForm.form.controls['login'];\r\n    this.setControlErrors('allLoginErrors', control, errors, this.pageLoginLiterals.loginErrorPattern);\r\n  }\r\n\r\n  protected setPasswordErrors(errors: Array<string>) {\r\n    const control = this.loginForm.form.controls['password'];\r\n    this.setControlErrors('allPasswordErrors', control, errors, this.pageLoginLiterals.passwordErrorPattern);\r\n  }\r\n\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\nimport { isExternalLink, isTypeof } from '../../../utils/util';\r\n\r\nimport { PoPageLoginLiterals } from '../interfaces/po-page-login-literals.interface';\r\nimport { PoPageLoginRecovery } from '../interfaces/po-page-login-recovery.interface';\r\n\r\n@Component({\r\n  selector: 'po-page-login-popover',\r\n  templateUrl: './po-page-login-popover.component.html'\r\n})\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Componente para definiÃ§Ã£o da mensagem de aviso de bloqueio do `po-page-login`.\r\n */\r\nexport class PoPageLoginPopoverComponent {\r\n\r\n  recoveryType: string;\r\n\r\n  private _recovery: string | Function | PoPageLoginRecovery;\r\n\r\n  @Input('p-literals') literals: PoPageLoginLiterals;\r\n\r\n  /** exibe o link de 'esqueci minha senha' e verifica se o valor Ã© um link interno ou externo */\r\n  @Input('p-recovery') set recovery(value: string | Function | PoPageLoginRecovery) {\r\n    this._recovery = value;\r\n\r\n    if (isTypeof(value, 'string')) {\r\n      this.recoveryType = isExternalLink(value) ? 'externalLink' : 'internalLink';\r\n    }\r\n  }\r\n\r\n  get recovery() {\r\n    return this._recovery;\r\n  }\r\n\r\n  /** define se a mensagem deverÃ¡ ser exibida caso seja maior que 0(zero) */\r\n  @Input('p-remaining-attempts') remainingAttempts: number;\r\n\r\n  /** se 'p-recovery' for do tipo Function ou PoPageLoginRecovery, emite para o mÃ©todo 'openUrl' do componente 'po-page-login' */\r\n  @Output('p-forgot-password') forgotPassword = new EventEmitter<any>();\r\n\r\n  onForgotPasswordClick(recovery) {\r\n    this.forgotPassword.emit(recovery);\r\n  }\r\n\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { PoModule } from '@portinari/portinari-ui';\r\n\r\nimport { PoModalPasswordRecoveryComponent } from '../po-modal-password-recovery/po-modal-password-recovery.component';\r\nimport { PoPageBackgroundModule } from '../po-page-background/index';\r\nimport { PoPageLoginComponent } from './po-page-login.component';\r\nimport { PoPageLoginPopoverComponent } from './po-page-login-popover/po-page-login-popover.component';\r\nimport { PoPageLoginService } from './po-page-login.service';\r\n\r\n/**\r\n * @description\r\n *\r\n * MÃ³dulo do template do po-page-login.\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule,\r\n    PoPageBackgroundModule,\r\n    PoModule\r\n  ],\r\n  declarations: [\r\n    PoPageLoginComponent,\r\n    PoPageLoginPopoverComponent\r\n  ],\r\n  entryComponents: [\r\n    PoModalPasswordRecoveryComponent\r\n  ],\r\n  exports: [\r\n    PoPageLoginComponent\r\n  ],\r\n  providers: [PoPageLoginService]\r\n})\r\nexport class PoPageLoginModule { }\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { PoModalPasswordRecoveryModule } from './po-modal-password-recovery/po-modal-password-recovery.module';\r\nimport { PoPageBackgroundModule } from './po-page-background/po-page-background.module';\r\nimport { PoPageBlockedUserModule } from './po-page-blocked-user/po-page-blocked-user.module';\r\nimport { PoPageChangePasswordModule } from './po-page-change-password/po-page-change-password.module';\r\nimport { PoPageDynamicDetailModule } from './po-page-dynamic-detail/po-page-dynamic-detail.module';\r\nimport { PoPageDynamicEditModule } from './po-page-dynamic-edit/po-page-dynamic-edit.module';\r\nimport { PoPageDynamicSearchModule } from './po-page-dynamic-search/po-page-dynamic-search.module';\r\nimport { PoPageDynamicTableModule } from './po-page-dynamic-table/po-page-dynamic-table.module';\r\nimport { PoPageJobSchedulerModule } from './po-page-job-scheduler/po-page-job-scheduler.module';\r\nimport { PoPageLoginModule } from './po-page-login/po-page-login.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    PoModalPasswordRecoveryModule,\r\n    PoPageBackgroundModule,\r\n    PoPageBlockedUserModule,\r\n    PoPageChangePasswordModule,\r\n    PoPageDynamicDetailModule,\r\n    PoPageDynamicEditModule,\r\n    PoPageDynamicSearchModule,\r\n    PoPageDynamicTableModule,\r\n    PoPageJobSchedulerModule,\r\n    PoPageLoginModule\r\n  ],\r\n  exports: [\r\n    PoModalPasswordRecoveryModule,\r\n    PoPageBackgroundModule,\r\n    PoPageBlockedUserModule,\r\n    PoPageChangePasswordModule,\r\n    PoPageDynamicDetailModule,\r\n    PoPageDynamicEditModule,\r\n    PoPageDynamicSearchModule,\r\n    PoPageDynamicTableModule,\r\n    PoPageJobSchedulerModule,\r\n    PoPageLoginModule\r\n  ]\r\n})\r\nexport class PoComponentsModule { }\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { PoPageCustomizationModule } from './po-page-customization/po-page-customization.module';\r\nimport { PoPageDynamicModule } from './po-page-dynamic/po-page-dynamic.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    PoPageCustomizationModule,\r\n    PoPageDynamicModule\r\n  ],\r\n  exports: [\r\n    PoPageCustomizationModule,\r\n    PoPageDynamicModule\r\n  ]\r\n})\r\nexport class PoServicesModule { }\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { PoComponentsModule } from './components/components.module';\r\nimport { PoServicesModule } from './services/services.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    PoComponentsModule,\r\n    PoServicesModule\r\n  ],\r\n  exports: [\r\n    PoComponentsModule,\r\n    PoServicesModule\r\n  ]\r\n})\r\nexport class PoTemplatesModule { }\r\n"]}