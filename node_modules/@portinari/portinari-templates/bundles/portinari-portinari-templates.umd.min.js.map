{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@portinari/portinari-templates/lib/utils/util.ts","ng://@portinari/portinari-templates/lib/components/po-modal-password-recovery/literals/i18n/po-modal-password-recovery-literals.ts","ng://@portinari/portinari-templates/lib/components/po-modal-password-recovery/enums/po-modal-password-recovery-type.enum.ts","ng://@portinari/portinari-templates/lib/components/po-modal-password-recovery/po-modal-password-recovery-base.component.ts","ng://@portinari/portinari-templates/lib/components/po-modal-password-recovery/enums/po-modal-password-recovery-modal-content.enum.ts","ng://@portinari/portinari-templates/lib/components/po-modal-password-recovery/po-modal-password-recovery.service.ts","ng://@portinari/portinari-templates/lib/components/po-modal-password-recovery/po-modal-password-recovery.component.ts","ng://@portinari/portinari-templates/lib/components/po-modal-password-recovery/po-modal-password-recovery-error-message/po-modal-password-recovery-error-message.component.ts","ng://@portinari/portinari-templates/lib/components/po-modal-password-recovery/po-modal-password-recovery.module.ts","ng://@portinari/portinari-templates/lib/components/po-page-background/po-page-background.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-background/po-page-background.module.ts","ng://@portinari/portinari-templates/lib/components/po-page-blocked-user/enums/po-page-blocked-user-reason.enum.ts","ng://@portinari/portinari-templates/lib/components/po-page-blocked-user/po-page-blocked-user-base.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-blocked-user/po-page-blocked-user.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-blocked-user/po-page-blocked-user-contacts/po-page-blocked-user-contacts.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-blocked-user/literals/i18n/po-page-blocked-user-literals.ts","ng://@portinari/portinari-templates/lib/components/po-page-blocked-user/po-page-blocked-user-reason/po-page-blocked-user-reason.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-blocked-user/po-page-blocked-user.module.ts","ng://@portinari/portinari-templates/lib/components/po-page-change-password/po-page-change-password-base.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-change-password/literals/i18n/po-page-change-password-literals.ts","ng://@portinari/portinari-templates/lib/components/po-page-change-password/po-page-change-password.service.ts","ng://@portinari/portinari-templates/lib/components/po-page-change-password/po-page-change-password.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-change-password/po-page-change-password.module.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-detail/po-page-dynamic.service.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-detail/po-page-dynamic-detail.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-detail/po-page-dynamic-detail.module.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-edit/po-page-dynamic.service.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-edit/po-page-dynamic-edit.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-edit/po-page-dynamic-edit.module.ts","ng://@portinari/portinari-templates/lib/services/po-page-customization/po-page-customization.service.ts","ng://@portinari/portinari-templates/lib/services/po-page-customization/po-page-customization.module.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-search/po-advanced-filter/po-advanced-filter-base.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-search/po-advanced-filter/po-advanced-filter.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-search/po-page-dynamic-search-base.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-search/po-page-dynamic-search.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-search/po-page-dynamic-search.module.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-table/po-page-dynamic-list-base.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-table/po-page-dynamic.service.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-table/po-page-dynamic-table.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-table/po-page-dynamic-table.module.ts","ng://@portinari/portinari-templates/lib/components/po-page-job-scheduler/po-page-job-scheduler-internal.ts","ng://@portinari/portinari-templates/lib/components/po-page-job-scheduler/po-page-job-scheduler-base.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-job-scheduler/po-page-job-scheduler-literals.ts","ng://@portinari/portinari-templates/lib/components/po-page-job-scheduler/po-page-job-scheduler.service.ts","ng://@portinari/portinari-templates/lib/components/po-page-job-scheduler/po-page-job-scheduler-lookup.service.ts","ng://@portinari/portinari-templates/lib/components/po-page-job-scheduler/po-page-job-scheduler.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-job-scheduler/po-page-job-scheduler-execution/po-page-job-scheduler-execution.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-job-scheduler/po-page-job-scheduler-parameters/po-page-job-scheduler-parameters.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-job-scheduler/po-page-job-scheduler-summary/po-page-job-scheduler-summary.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-job-scheduler/po-page-job-scheduler.module.ts","ng://@portinari/portinari-templates/lib/components/po-page-login/enums/po-page-login-authentication-type.enum.ts","ng://@portinari/portinari-templates/lib/components/po-page-login/po-page-login-base.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-login/po-page-login.service.ts","ng://@portinari/portinari-templates/lib/components/po-page-login/po-page-login.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-login/po-page-login-popover/po-page-login-popover.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-login/po-page-login.module.ts","ng://@portinari/portinari-templates/lib/components/components.module.ts","ng://@portinari/portinari-templates/lib/services/services.module.ts","ng://@portinari/portinari-templates/lib/po-templates.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__generator","thisArg","body","f","y","g","_","label","sent","trys","ops","next","verb","throw","return","Symbol","iterator","v","op","TypeError","done","value","pop","push","e","step","__read","o","m","r","ar","error","__spread","concat","poLocales","poLocaleDefault","browserLanguage","getShortBrowserLanguage","getBrowserLanguage","navigator","language","toLowerCase","substring","includes","convertToBoolean","val","trim","isTypeof","object","type","isExternalLink","url","startsWith","mapObjectByProperties","properties","reduce","selectedProperties","property","_a","valuesFromObject","keys","map","addZero","time","poModalPasswordRecoveryLiterals","en","cancelButton","closeButton","continueButton","email","emailErrorMessagePhrase","emailSentConfirmationPhrase","emailSentTitle","forgotPasswordTitle","insertCode","insertEmail","insertPhone","phoneErrorMessagePhrase","prepositionIn","prepositionOr","recoveryPasswordPhrase","resendEmailButton","resendSmsCodePhrase","sendAgainPhrase","sendAgain","sendButton","sentSmsCodePhrase","sms","smsCodeErrorMessagePhrase","supportContact","telephone","typeCodeTitle","es","pt","ru","All","Email","SMS","PoModalPasswordRecoveryDefaultMaxLength","PoModalPasswordRecoveryDefaultMinLength","PoModalPasswordRecoveryDefaultPhone","PoModalPasswordRecoveryTypeDefault","PoModalPasswordRecoveryType","PoModalPasswordRecoveryBaseComponent","_phoneMask","_type","maxLength","minLength","literals","codeSubmit","EventEmitter","submit","defineProperty","_contactEmail","smsCodeErrorMessage","concatenateSMSErrorMessage","values","literalCodeErrorMessage","Input","args","Output","SMSCode","Confirmation","PoModalPasswordRecoveryService","http","post","urlRecovery","item","params","observe","Injectable","HttpClient","PoModalPasswordRecoveryComponent","_super","router","poI18nPipe","poModalPasswordRecoveryService","_this","chosenTypeFormOption","codeMask","emailModal","emailModalPhrases","firstPhrase","secondPhrase","endpoint","invalidCode","invalidEmail","modalType","PoModalPasswordRecoveryModalContent","submittedCodeValue","submittedContactValue","primaryAction","undefined","action","secondaryAction","typeFormOptions","tslib_1.__extends","ngOnDestroy","passwordRecoverySubscription","unsubscribe","smsCodeSubscription","completed","cancelAction","formModelChangesCheck","form","invalidForm","invalid","dirty","disabled","codeError","showCustomCodeError","pristine","getInputType","pipeModalPhrases","setTimeout","control","emailForm","controls","resetFormFields","open","checkFormType","setEmailModalPhrasesAndActions","recoveryModalElement","openConfirmation","modalTitle","setActions","submitAction","openSmsCode","submitSmsCodeAction","smsCodeForm","resendSmsCode","incrementRetryAttempts","submitActionRequest","emit","assignSmsResponse","responseObj","smsBodyResponse","hash","urlValidationCode","modalPasswordRecoveryTypeAll","close","formReset","markAsPristine","markAsUntouched","updateValueAndValidity","getEmitValue","phone","retry","openExternalLink","queryParam","window","openInternalLink","navigate","queryParams","token","setPipeArguments","redirectToChangePassword","recoveryToken","urlChangePassword","smsCode","primarylabel","secondaryLabel","setRequestEndpoint","literalAttr","arg","transform","data","subscribe","response","status","code","submitSmsCodeRequest","message","Component","selector","template","Router","PoI18nPipe","ViewChild","static","PoModalPasswordRecoveryErrorMessageComponent","PoModalPasswordRecoveryModule","NgModule","imports","CommonModule","FormsModule","PoFieldModule","PoModalModule","declarations","exports","providers","PoPageBackgroundComponent","_showSelectLanguage","selectLanguageOptions","selectedLanguage","_logo","_secondaryLogo","showSelectLanguage","ngOnInit","selectedLanguageOption","onChangeLanguage","PoPageBackgroundModule","RouterModule","PoDividerModule","None","ExceededAttempts","ExpiredPassword","PoPageBlockedUserReasonDefault","PoPageBlockedUserReason","PoPageBlockedUserParamsDefault","attempts","days","hours","PoPageBlockedUserBaseComponent","_params","_reason","_urlBack","newParams_1","forEach","key","poPageBlockedUserButtonLiterals","primaryButton","PoPageBlockedUserComponent","activatedRoute","checkingForRouteMetadata","snapshot","navigateTo","checkingForMetadataProperty","contactEmail","contactPhone","reason","urlBack","ActivatedRoute","PoPageBlockedUserContactsComponent","changeDetector","overflowItem","ngAfterViewInit","checkContactItemWidth","ngOnChanges","changes","phoneWidth","phoneItem","nativeElement","offsetWidth","mailWidth","mailItem","contactGroupHalfWidth","contactGroup","detectChanges","ChangeDetectorRef","poPageBlockedUserLiterals","none","title","exceededAttempts","thirdPhrase","expiredPassword","PoPageBlockedUserReasonComponent","getLiterals","getImageByReasonType","reasonImage","getParams","literalParams","PoPageBlockedUserModule","PoModule","PoPageChangePasswordBaseComponent","_hideCurrentPassword","_requirements","_urlHome","_recovery","recoveryUrlType","showRequirements","modalAction","bind","urlHome","poPageChangePasswordLiterals","backButton","confirmPassword","createNewPassword","createNewPasswordPhrase","currentPassword","enterSystemButton","forgotPassword","newPassword","passwordSuccessfullyCreated","passwordSuccessfullyUpdated","requirements","safetyTips","safetyTipsFirst","safetyTipsPhrase","safetyTipsSecond","safetyTipsThird","saveButton","PoPageChangePasswordService","PoPageChangePasswordComponent","route","service","poComponentInjector","viewRef","componentRef","parentRef","urlNewPassword","subscribeToTokenParameter","newPasswordSubscription","onForgotPasswordClick","recovery","createModalPasswordRecoveryComponent","onLoginSubmit","getLoginForm","postUrlNewPassword","observers","emitSubmit","modal","validatePassword","passwordForm","controlConfirmPassword","controlNewPassword","setFormErrors","equalPassword","required","find","requirement","validateRequirement","hideCurrentPassword","destroyComponentInApplication","createComponentInApplication","instance","contactMail","phoneMask","changeDetectorRef","setErrors","PoComponentInjectorService","ViewContainerRef","PoModalComponent","read","NgForm","PoPageChangePasswordModule","entryComponents","PoPageDynamicService","headers","HttpHeaders","X-PORTINARI-SCREEN-LOCK","configServiceApi","config","getMetadata","cache","JSON","parse","localStorage","getItem","version","get","pipe","setItem","stringify","deleteResource","id","delete","deleteResources","ids","request","getResources","getResource","createResource","resource","updateResource","put","poPageDynamicDetailLiteralsDefault","pageActionEdit","pageActionRemove","pageActionBack","confirmRemoveTitle","confirmRemoveMessage","removeNotificationSuccess","registerNotFound","PoPageDynamicDetailComponent","poNotification","poDialogService","poPageDynamicService","_actions","_autoRouter","_duplicates","_fields","_keys","_pageActions","util.poLocaleDefault","util.browserLanguage","model","breadcrumb","items","isObject","getPageActions","util.convertToBoolean","isArray","getKeysByFields","fields","getDuplicatesByFields","paramId","serviceApi","loadMetadata","loadData","confirmRemove","path","confirmOptions","confirm","remove","formatUniqueKey","util.valuesFromObject","util.mapObjectByProperties","join","goBack","history","back","toPromise","then","catch","actions","autoRouter","forceStopAutoRouter","unshift","component","openEdit","resolveUrl","uniqueKey","success","replace","pageActions","edit","filter","field","duplicate","PoNotificationService","PoDialogService","PoPageDynamicDetailModule","PoDynamicModule","PoPageModule","PoWidgetModule","metadata","poPageDynamicEditLiteralsDefault","cancelConfirmMessage","detailActionNew","pageActionCancel","pageActionSave","pageActionSaveNew","saveNewNotificationSuccessSave","saveNewNotificationSuccessUpdate","saveNewNotificationWarning","saveNotificationSuccessSave","saveNotificationSuccessUpdate","saveNotificationWarning","PoPageDynamicEditComponent","_controlFields","_detailFields","detailActions","getControlFields","getDetailFields","serviceMetadataApi","gridDetail","insertRow","cancel","dynamicForm","typeMetadata","save","warning","saveOperation","msgSucess","saveNew","reset","PoPageDynamicEditModule","PoButtonModule","PoGridModule","PoPageCustomizationService","getCustomOptions","origin","originalOption","createObservable","newPageOptions","mergePageOptions","changeOriginalOptionsToNewOptions","objectToChange","newOptions","from","Promise","resolve","filters","mergeOptions","originalOptions","filterProp","deduplicateNewOptions","newItem","originalItem","newOptionsItem","providedIn","PoPageCustomizationModule","HttpClientModule","poAdvancedFiltersLiteralsDefault","cancelLabel","confirmLabel","PoAdvancedFilterBaseComponent","languageService","_filters","models","getValuesFromForm","searchEvent","poModal","getShortLanguage","_literals","PoAdvancedFilterComponent","PoLanguageService","PoDynamicFormComponent","poPageDynamicSearchLiteralsDefault","disclaimerGroupTitle","filterTitle","filterCancelLabel","filterConfirmLabel","quickSearchLabel","searchPlaceholder","PoPageDynamicSearchBaseComponent","advancedSearch","changeDisclaimers","quickSearch","setAdvancedFilterLiterals","advancedFilterLiterals","PoPageDynamicSearchComponent","poPageCustomizationService","_disclaimerGroup","change","onChangeDisclaimerGroup","disclaimers","_filterSettings","advancedAction","ngModel","placeholder","changeDisclaimersEnabled","onLoad","loadOptionsOnInitialize","loadSubscription","onAction","quickFilter","onAdvancedAction","poAdvancedFilter","onAdvancedSearch","setDisclaimers","applyDisclaimerLabelValue","filterValue","filteredField","options","option","formatDate","date","year","parseInt","substr","month","day","Date","toLocaleDateString","getFieldByProperty","fieldName","getFilterValueToDisclaimer","PoDynamicFieldType","text","charAt","toUpperCase","slice","getPoDynamicPageOptions","responsePoOption","PoPageDynamicSearchModule","PoLanguageModule","PoPageDynamicListBaseComponent","_columns","setFieldsProperties","visible","poPageDynamicTableLiteralsDefault","pageAction","pageActionRemoveAll","tableActionView","tableActionEdit","tableActionDuplicate","tableActionDelete","confirmRemoveAllTitle","confirmRemoveAllMessage","loadDataErrorNotification","removeSuccessNotification","removeAllSuccessNotification","PoPageDynamicTableComponent","_tableActions","page","hasNext","setPageActions","setRemoveAllAction","setTableActions","onChangeDisclaimers","disclaimer","onQuickSearch","search","onSort","sortedColumn","showMore","removeAll","confirmRemoveAll","getOrderParam","column","PoTableColumnSortType","Descending","order","orderParam","fullParams","pageSize","openDetail","openDuplicate","duplicates","openNew","removeLocalItems","selectedItems","$selected","keysSelectedItems","itemRemoved","indexItemRemoved","indexOf","splice","new","detail","separator","PoPageDynamicTableModule","PoTableModule","PoPageJobSchedulerInternal","periodicity","firstExecution","firstExecutionHour","getCurrentHour","recurrent","getHours","getMinutes","PoPageJobSchedulerBaseComponent","poPageJobSchedulerService","markAsDirtyInvalidControls","markAsDirty","poPageJobSchedulerLiteralsDefault","at","execution","process","enterProcess","single","daily","weekly","monthly","scheduling","parameterization","conclude","hour","weekDays","sunday","monday","tuesday","wednesday","thursday","friday","saturday","parameters","yes","no","notReported","periodicityData","confirmation","confirmSaveMessage","confirmUpdateMessage","parametersNotFound","PoPageJobSchedulerService","jobScheduler","convertToJobScheduler","getHeadProcesses","head","X-Portinari-No-Error","getParametersByProcess","processId","getProcess","getProcesses","convertToJobSchedulerInternal","jobSchedulerInternal","convertToPeriodicity","replaceHourFirstExecution","returnValidExecutionParameter","executionParameter","removeInvalidKeys","getHourFirstExecution","convertToPeriodicityInternal","newValue","valuePeriodicity","dayOfMonth","daysOfWeek","split","minute","firstExecutionDate","invalidKeys","timeSplited","minutes","setHours","getMonth","getDate","toString","formatYear","getFullYear","dateString","convertDateToISOExtended","parameter","newParameter","PoPageJobSchedulerLookupService","getFilteredData","getObjectByValue","PoPageJobSchedulerComponent","poPageDynamicLookupService","isEdit","backPageAction","nextStepOperation","isDisabledBack","concludePageActions","confirmJobScheduler","nextPageActions","isDisabledAdvance","jobSchedulerActions","steps","innerWidth","changePageActionsBySteps","currentStep","nextStep","stepsLength","stepNumber","schedulerExecution","schedulerParameters","PoStepperStatus","Done","onChangeProcess","existAPI","confirmMessage","emitSuccessMessage","msgSuccess","_arguments","generator","resetJobSchedulerForm","P","reject","fulfilled","rejected","result","operation","Default","encapsulation","ViewEncapsulation","PoPageJobSchedulerExecutionComponent","poPageJobSchedulerLookup","_value","dayPattern","existProcessAPI","minDateFirstExecution","periodicityOptions","timePattern","changeProcess","subscribeProcessIdValueChanges","periodicityTemplates","dailyTemplate","monthlyTemplate","weeklyTempalte","checkExistsProcessesAPI","getPeriodicityOptions","getWeekDays","valueChanges","PoPageJobSchedulerParametersComponent","valueChange","PoPageJobSchedulerSummaryComponent","datePipe","executionValue","firstExecutionValue","infoOrientation","PoInfoOrientation","Horizontal","periodicityValue","recurrentValue","getPeriodicityLabel","getExecutionValue","getFirstExecutionLabel","getRecurrentValue","getHourLabel","getMonthlyLabelExecution","getWeeklyLabelExecution","hourLabel","getSorterWeekDays","getTranslateWeekDay","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","getWeekDaysLabel","sortWeekDays","sorterWeekDays","sort","a","currDay","nextDay","DatePipe","PoPageJobSchedulerModule","PoContainerModule","PoDialogModule","PoInfoModule","PoStepperModule","Basic","Bearer","poPageLoginLiteralsDefault","loginErrorPattern","loginHint","loginPlaceholder","passwordErrorPattern","passwordPlaceholder","customFieldErrorPattern","customFieldPlaceholder","rememberUser","rememberUserHint","submitLabel","submittedLabel","highlightInfo","registerUrl","titlePopover","forgotYourPassword","ifYouTryHarder","yourUserWillBeBlocked","createANewPasswordNow","iForgotMyPassword","poPageLoginLiteralIn","poPageLoginLiteralTo","PoPageLoginBaseComponent","loginService","allLoginErrors","allPasswordErrors","showExceededAttemptsWarning","_authenticationType","PoPageLoginAuthenticationType","_hideRememberUser","_loading","_loginErrors","_passwordErrors","loginChange","loginSubmit","passwordChange","_customField","customFieldType","customFieldObject","getDefaultCustomFieldObject","_productName","_environment","environment","_exceededAttemptsWarning","valueDefault","validNumber","validDefaultValue","convertToInt","exceededAttemptsWarning","_login","authenticationUrl","setLoginErrors","setPasswordErrors","_registerUrl","_authenticationUrl","_blockedUrl","loginHintWithContactEmail","concatenateLoginHintWithContactEmail","titleWithProductName","productName","concatenateTitleWithProductName","loginSubscription","closePopover","loginForm","login","password","customField","onLogin","authenticationType","setValuesToProperties","sessionStorage","redirectBlockedUrl","blockedUrl","maxAttemptsRemaining","loginErrors","loginWarnings","passwordErrors","passwordWarnings","PoPageLoginService","btoa","user","Authorization","PoPageLoginComponent","differs","customPasswordError","custom","differ","ngAfterViewChecked","validateArrayChanges","array","callback","generateLoginError","generatePasswordError","changeLoginModel","changePasswordModel","onSelectedLanguage","openUrl","setUrlRedirect","concatenate","defaultLiteral","prefixLiteral","concatenateLiteral","literal","prepositionLiteral","poPageLoginRecovery","resetControl","setControlErrors","allErrors","errors","patternError","hasError","valid","markAsTouched","element","diff","defaultLoginHintLiteral","defaultTitleLiteral","pageLoginLiterals","IterableDiffers","PoPageLoginPopoverComponent","recoveryType","PoPageLoginModule","PoComponentsModule","PoServicesModule","PoTemplatesModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// Idiomas suportados pelas pÃ¡ginas\nexport const poLocales = ['pt', 'en', 'es', 'ru'];\n// Idioma padrÃ£o\nexport const poLocaleDefault = 'pt';\n\n/**\n * @deprecated\n * Utilize o mÃ©todo `getShortBrowserLanguage`.\n *\n * @description\n * Retorna idioma do browser ou o idioma padrÃ£o.\n */\nexport function browserLanguage() {\n  return getShortBrowserLanguage();\n}\n\n/**\n * Retorna o idioma atual do navegador\n */\nexport function getBrowserLanguage(): string {\n  // navigator.userLanguage is the value for IE10\n  return navigator.language || navigator['userLanguage'];\n}\n\n/**\n * Retorna o idioma do navegador, com somente as duas primeiras letras. Por exemplo: \"pt\" ou \"es\".\n *\n * Caso o valor retornado pelo navegador nÃ£o estiver dentro dos idiomas suportados pelo PO,\n * serÃ¡ retornado a linguagem padrÃ£o (poLocaleDefault).\n */\nexport function getShortBrowserLanguage(): string {\n  const language = (getBrowserLanguage() || poLocaleDefault).toLowerCase().substring(0, 2);\n\n  if (!poLocales.includes(language)) {\n    return poLocaleDefault;\n  }\n\n  return language;\n}\n\nexport function convertToBoolean(val: any): boolean {\n  if (typeof val === 'string') {\n    val = val.toLowerCase().trim();\n    return (val === 'true' || val === 'on' || val === '');\n  }\n\n  if (typeof val === 'number') {\n    return val === 1;\n  }\n\n  return !!val;\n}\n\nexport function convertToInt(value: any, valueDefault?: any): number {\n  const validNumber = parseInt(value, 10);\n  const validDefaultValue = parseInt(valueDefault, 10);\n  const defaultValue = validDefaultValue || validDefaultValue === 0 ? validDefaultValue : undefined;\n\n  return validNumber || validNumber === 0 ? validNumber : defaultValue;\n}\n\nexport function isTypeof(object: any, type: any) {\n  return typeof object === type;\n}\n\n/**\n *\n * @param fn FunÃ§Ã£o que serÃ¡ executada dentro do contexto. Podendo ser o nome da funÃ§Ã£o\n * ou a referÃªncia da mesma.\n *\n * @param context Contexto do qual a funÃ§Ã£o serÃ¡ executada.\n */\nexport function callFunction(fn: any, context: any, param?): void {\n  if (isTypeof(fn, 'function')) {\n    fn.call(context, param);\n  } else {\n    context[fn](param);\n  }\n}\n\nexport function convertIsoToDate(value: string , start: boolean, end: boolean) {\n  if (value) {\n    const day = parseInt(value.substring(8, 10), 10);\n    const month = parseInt(value.substring(5, 7), 10);\n    const year = parseInt(value.substring(0, 4), 10);\n    if (start) {\n      const date = new Date(year, month - 1, day, 0, 0, 0);\n\n      setYearFrom0To100(date, year);\n\n      return date;\n    } else if (end) {\n      const date = new Date(year, month - 1, day, 23, 59, 59);\n\n      setYearFrom0To100(date, year);\n\n      return date;\n    } else {\n      const milliseconds = Date.parse(value);\n      const timezone = new Date().getTimezoneOffset() * 60000;\n      return new Date(milliseconds + timezone);\n    }\n  }\n}\n\nexport function convertDateToISOExtended(date: Date, time?: string) {\n  if (date) {\n\n    const getMonth = date.getMonth() + 1;\n    const day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();\n    const month = getMonth < 10 ? '0' + getMonth : getMonth;\n    const year = formatYear(date.getFullYear());\n\n    const dateString = date.toString();\n\n    if (time) {\n      return year + '-' + month + '-' + day + time;\n    } else {\n      return year + '-' + month + '-' + day + 'T' + dateString.substring(16, 24) +\n          dateString.substring(28, 31) + ':' + dateString.substring(31, 33);\n    }\n  } else {\n    return null;\n  }\n}\n\n/**\n * Transforma o ano em uma string no formato yyyy e caso o ano seja menor que 1000 preenche com zeros a esquerda.\n * @param year Ano\n */\nexport function formatYear(year: number) {\n\n  if (year >= 1000) {\n    return year.toString();\n  }\n\n  if (year > 99 && year < 1000) {\n    return `0${year}`;\n  }\n\n  if (year > 9 && year < 100) {\n    return `00${year}`;\n  }\n\n  if (year >= 0 && year < 10) {\n    return `000${year}`;\n  }\n\n}\n\nexport function isEquals(value, comparedValue) {\n  return JSON.stringify(value) === JSON.stringify(comparedValue);\n}\n\n/**\n * Caso o ano original da data seja entre 0 e 100 atribui esse valor ao ano, pois o `new Date` do javascript transforma o ano para 190X.\n * @param date Data\n * @param year Ano original\n */\nexport function setYearFrom0To100(date: Date, year: number) {\n  if (year >= 0 && year < 100 ) {\n    date.setFullYear(year);\n  }\n}\n\nexport function sortOptionsByProperty(options: Array<any>, property: string) {\n  options.sort((optionA, optionB) => {\n    optionA = optionA[property].toString().toLowerCase();\n    optionB = optionB[property].toString().toLowerCase();\n\n    if (optionA < optionB) {\n      return -1;\n    }\n    if (optionA > optionB) {\n      return 1;\n    }\n    return 0;\n  });\n}\n\nexport function removeDuplicatedOptions(list: Array<any>) {\n  for (let i = 0; i < list.length; i++) {\n    if (i === 0) { continue; }\n\n    if (list.findIndex(op => op.value === list[i].value) !== i) {\n      list.splice(i, 1);\n      i--;\n    }\n  }\n}\n\nexport function removeUndefinedAndNullOptions(list: Array<any>) {\n  for (let i = 0; i < list.length; i++) {\n    if (list[i].value === undefined || list[i].value === null ) {\n      list.splice(i, 1);\n      i--;\n    }\n  }\n}\n\nexport function validValue(value: any) {\n  return (value !== null && value !== undefined && value !== '') || value === false;\n}\n\nexport function isExternalLink(url): boolean {\n  return url ? url.startsWith('http') : false;\n}\n\nexport function openExternalLink(url): void {\n  window.open(url, '_blank');\n}\n\nexport function  getFormattedLink(link: string): string {\n  let formattedLink = '';\n  // Retira todos os pontos no comeÃ§o da URL.\n  if (link) {\n    formattedLink = link.replace(/^(\\.)+/g, '');\n  }\n  // Verifica se foi utilizado uma rota que nÃ£o comece com barra.\n  if (!formattedLink.startsWith('/')) {\n    formattedLink = '/'.concat(formattedLink);\n  }\n  return formattedLink;\n}\n\n/**\n * MÃ©todo responsÃ¡vel por ordenar dois valores.\n *\n * @param leftSide Primeiro valor a ser comparado.\n * @param rightSide Segundo valor a ser comparado.\n * @param ascending Determina se serÃ¡ em ordem ascendente ou descendente.\n */\nexport function sortValues(leftSide: string, rightSide: string, ascending: boolean = true): number {\n  if (ascending) {\n    if (leftSide < rightSide) {\n      return -1;\n    } else if (leftSide > rightSide) {\n      return 1;\n    }\n  } else if (ascending === false) {\n    if (leftSide < rightSide) {\n      return 1;\n    } else if (leftSide > rightSide) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nexport function validateDateRange(date: Date, dateStart: Date, dateEnd: Date) {\n  if (dateStart && dateEnd) {\n    return (date >= dateStart && date <= dateEnd);\n  } else if (dateStart && !dateEnd) {\n    return (date >= dateStart);\n  } else if (!dateStart && dateEnd) {\n    return (date <= dateEnd);\n  } else {\n    return true;\n  }\n}\n\nexport function capitalizeFirstLetter(text: string): string {\n  return `${text.charAt(0).toUpperCase()}${text.slice(1)}`;\n}\n\n/**\n * Mapeia um novo array apenas com as propriedades definidas pelo desenvolvedor baseado em um array de\n * origem.\n *\n * Exemplo:\n *\n * ```\n * const people = [\n *  { id: 1, name: 'Fulano', birthdate: '1980-11-01', genre: 'Male', city: 'SÃ£o Paulo', dependents: 2 },\n *  { id: 2, name: 'Beltrano', birthdate: '1997-01-21', genre: 'Female', city: 'Joinville', dependents: 0 },\n *  { id: 3, name: 'Siclano', birthdate: '1995-07-15', genre: 'Male', city: 'Joinville', dependents: 0 }\n * ];\n *\n * const properties = ['id', 'name'];\n *\n * const idAndName = mapArrayByProperties(people, properties);\n *\n * console.log(idAndName); // [{ id: 1, name: 'Fulano' }, { id: 2, name: 'Beltrano' }, { id: 3, name: 'Siclano' }]\n * ```\n *\n * Um outro uso para o mÃ©todo Ã© \"parear\" todos os objetos do array com as mesmas propriedades.\n *\n * ```\n * const customers = [\n *  { id: 1, name: 'Fulano', city: 'SÃ£o Paulo', dependents: 2 }, // sem genre\n *  { id: 2, name: 'Beltrano', genre: 'Female', city: 'Joinville' }, // sem dependents\n *  { id: 3, name: 'Siclano', genre: 'Male', city: 'Joinville', dependents: 0 }\n * ];\n * const properties = ['id', 'name', 'city', 'genre', 'dependents'];\n *\n * const pattern = mapArrayByProperties(customers, properties);\n * console.log(pattern);\n *\n * // [\n * //   { id: 1, name: 'Fulano', city: 'SÃ£o Paulo', genre: undefined, dependents: 2 },\n * //   { id: 2, name: 'Beltrano', city: 'Joinville', genre: 'Female', dependents: undefined },\n * //   { id: 3, name: 'Siclano', city: 'Joinville', genre: 'Male', dependents: 0 }\n * // ]\n * ```\n *\n * @param items {Array<any>} Array de items original.\n * @param properties {Array<string>} Array de string com a lista de propriedades que devem ser retornadas.\n *\n * @returns Array<any>\n */\nexport function mapArrayByProperties(items: Array<any> = [], properties: Array<string> = []): Array<any> {\n  return items.map(item => mapObjectByProperties(item, properties));\n}\n\n/**\n * Mapeia um novo objeto apenas com as propriedades definidas pelo desenvolvedor.\n *\n * Exemplo:\n *\n * ```\n * const person = { id: 1, name: 'Fulano', birthdate: '1980-11-01', genre: 'Male', city: 'SÃ£o Paulo', dependents: 2 };\n *\n * const properties = ['id', 'name'];\n *\n * const idAndName = mapObjectByProperties(person, properties);\n *\n * console.log(idAndName); // { id: 1, name: 'Fulano' }\n * ```\n *\n * @param object {Array<any>} Array de items original.\n * @param properties {Array<string>} Array de string com a lista de propriedades que devem ser retornadas.\n *\n * @returns Array<any>\n */\nexport function mapObjectByProperties(object: any = {}, properties: Array<string> = []) {\n  const getSelectedProperties = (selectedProperties, property) => ({ ...selectedProperties, [property]: object[property] });\n\n  return properties.reduce(getSelectedProperties, {});\n}\n\n/**\n * Retorna os valores de um objeto dentro de um array.\n *\n * > Simula o Object.values(obj), o mesmo deve ser removido assim que a versÃ£o typescrit for atualizada.\n *\n * @param object Objeto de onde serÃ¡ pego os valores.\n */\nexport function valuesFromObject(object: any = {}): Array<any> {\n  return Object.keys(object).map(property => object[property]);\n}\n\n/**\n * adiciona 0 no tempo informado, caso menor q 10\n *\n * @param time\n */\nexport function addZero(time: number) {\n  if (!time) {\n    return '00';\n  }\n\n  if (time < 10) {\n    return `0${time}`;\n  }\n\n  return time;\n}\n","export const poModalPasswordRecoveryLiterals = {\n  en: <any>{\n    cancelButton: 'Cancel',\n    closeButton: 'Close',\n    continueButton: 'Continue',\n    email: 'e-mail',\n    emailErrorMessagePhrase: 'Invalid e-mail format',\n    emailSentConfirmationPhrase: `We have sent the instructions and new password creation link to your e-mail.\n    If you did not receive it after a few minutes, check your spam box or click Resend.`,\n    emailSentTitle: 'E-mail sent',\n    forgotPasswordTitle: 'Forgot your password?',\n    insertCode: 'Type the code',\n    insertEmail: 'Enter your e-mail',\n    insertPhone: 'Enter your mobile number',\n    phoneErrorMessagePhrase: 'Invalid phone number',\n    prepositionIn: 'in',\n    prepositionOr: 'or',\n    recoveryPasswordPhrase: 'To recover your password we will send you a {0} with instructions.',\n    resendEmailButton: 'Resend',\n    resendSmsCodePhrase: 'If the code does not arrive within a few minutes, please send it again.',\n    sendAgainPhrase: 'If the code does not arrive within a few minutes',\n    sendAgain: 'send again.',\n    sendButton: 'Submit',\n    sentSmsCodePhrase: 'We sent a code for your mobile phone.',\n    sms: 'SMS',\n    smsCodeErrorMessagePhrase: 'Invalid code. Please re-enter or contact support',\n    supportContact: 'If you do not have access to {0} contact support',\n    telephone: 'telephone',\n    typeCodeTitle: 'Enter sent code'\n  },\n  es: <any>{\n    cancelButton: 'Cancelar',\n    closeButton: 'Cerrar',\n    continueButton: 'Continuar',\n    email: 'e-mail',\n    emailErrorMessagePhrase: 'Formato de correo electrÃ³nico no vÃ¡lido',\n    emailSentConfirmationPhrase: `Enviamos las instrucciones y enlace de creaciÃ³n de nueva contraseÃ±a para su correo electrÃ³nico.\n    Si no ha recibido despuÃ©s de unos minutos, compruebe su caja de spam o haga clic en Reenviar`,\n    emailSentTitle: 'E-mail enviado',\n    forgotPasswordTitle: 'Olvidaste tu contraseÃ±a?',\n    insertCode: 'Introduzca el cÃ³digo',\n    insertEmail: 'Introduce tu e-mail',\n    insertPhone: 'Introduce tu nÃºmero de celular',\n    phoneErrorMessagePhrase: 'NÃºmero de telÃ©fono no vÃ¡lido',\n    prepositionIn: 'en',\n    prepositionOr: 'u',\n    recoveryPasswordPhrase: 'Para recuperar su contraseÃ±a vamos a enviar un {0} con instrucciones.',\n    resendEmailButton: 'Reenviar',\n    resendSmsCodePhrase: 'Si el cÃ³digo no llega dentro de unos minutos, vuelva a enviar.',\n    sendAgain: 'envÃ­e de nuevo.',\n    sendAgainPhrase: 'Si el cÃ³digo no llega dentro de unos minutos',\n    sendButton: 'Enviar',\n    sentSmsCodePhrase: 'Enviamos un cÃ³digo para su celular.',\n    sms: 'SMS',\n    smsCodeErrorMessagePhrase: 'CÃ³digo no vÃ¡lido. Escriba de nuevo o pÃ³ngase en contacto con el soporte',\n    supportContact: 'Si no tiene acceso a {0} pÃ³ngase en contacto con el soporte',\n    telephone: 'telÃ©fono',\n    typeCodeTitle: 'Escribir cÃ³digo enviado'\n  },\n  pt: <any>{\n    cancelButton: 'Cancelar',\n    closeButton: 'Fechar',\n    continueButton: 'Continuar',\n    email: 'e-mail',\n    emailErrorMessagePhrase: 'Formato de e-mail invÃ¡lido',\n    emailSentConfirmationPhrase: `Enviamos as instruÃ§Ãµes e link de criaÃ§Ã£o de nova senha para o seu e-mail.\n    Caso nÃ£o tenha recebido apÃ³s alguns minutos, verifique sua caixa de spam ou clique em Reenviar.`,\n    emailSentTitle: 'E-mail enviado',\n    forgotPasswordTitle: 'Esqueceu sua senha?',\n    insertCode: 'Digite o cÃ³digo',\n    insertEmail: 'Insira seu e-mail',\n    insertPhone: 'Insira seu nÃºmero de celular',\n    phoneErrorMessagePhrase: 'NÃºmero de telefone invÃ¡lido',\n    prepositionIn: 'em',\n    prepositionOr: 'ou',\n    recoveryPasswordPhrase: 'Para recuperar sua senha vamos enviar um {0} com instruÃ§Ãµes.',\n    resendEmailButton: 'Reenviar',\n    resendSmsCodePhrase: 'Se o cÃ³digo nÃ£o chegar dentro de alguns minutos envie novamente',\n    sendAgain: 'envie novamente.',\n    sendAgainPhrase: 'Se o cÃ³digo nÃ£o chegar dentro de alguns minutos',\n    sendButton: 'Enviar',\n    sentSmsCodePhrase: 'Enviamos um cÃ³digo para seu celular cadastrado.',\n    sms: 'SMS',\n    smsCodeErrorMessagePhrase: 'CÃ³digo invÃ¡lido. Digite novamente ou contacte o suporte',\n    supportContact: 'Se nÃ£o tiver acesso ao {0} contacte o suporte',\n    telephone: 'telefone',\n    typeCodeTitle: 'Digitar cÃ³digo enviado'\n  },\n  ru: <any>{\n    cancelButton: 'Ð¾ÑÐ¼ÐµÐ½Ð¸ÑÑ',\n    closeButton: 'Ð±Ð»Ð¸Ð·ÐºÐ¾',\n    continueButton: 'Ð±Ð»Ð¸Ð·ÐºÐ¾',\n    email: 'Ð¿Ð¾ ÑÐ»ÐµÐºÑÑÐ¾Ð½Ð½Ð¾Ð¹ Ð¿Ð¾ÑÑÐµ',\n    emailErrorMessagePhrase: 'ÐÐµÐ²ÐµÑÐ½ÑÐ¹ ÑÐ¾ÑÐ¼Ð°Ñ ÑÐ»ÐµÐºÑÑÐ¾Ð½Ð½Ð¾Ð¹ Ð¿Ð¾ÑÑÑ',\n    emailSentConfirmationPhrase: `ÐÑ Ð¾ÑÐ¿ÑÐ°Ð²Ð¸Ð»Ð¸ Ð¸Ð½ÑÑÑÑÐºÑÐ¸Ð¸ Ð¸ Ð½Ð¾Ð²ÑÑ ÑÑÑÐ»ÐºÑ Ð´Ð»Ñ ÑÐ¾Ð·Ð´Ð°Ð½Ð¸Ñ Ð¿Ð°ÑÐ¾Ð»Ñ Ð´Ð»Ñ Ð²Ð°ÑÐµÐ¹ ÑÐ»ÐµÐºÑÑÐ¾Ð½Ð½Ð¾Ð¹ Ð¿Ð¾ÑÑÑ.\nÐÑÐ»Ð¸ Ð²Ñ Ð½Ðµ Ð¿Ð¾Ð»ÑÑÐ¸Ð»Ð¸ ÐµÐ³Ð¾ Ð² ÑÐµÑÐµÐ½Ð¸Ðµ Ð½ÐµÑÐºÐ¾Ð»ÑÐºÐ¸Ñ Ð¼Ð¸Ð½ÑÑ, ÑÑÑÐ°Ð½Ð¾Ð²Ð¸ÑÐµ ÑÐ»Ð°Ð¶Ð¾Ðº Ð¡Ð¿Ð°Ð¼ Ð¸Ð»Ð¸ Ð½Ð°Ð¶Ð¼Ð¸ÑÐµ ÐÐ°Ð»ÐµÐµ.`,\n    emailSentTitle: 'ÐÐ¸ÑÑÐ¼Ð¾ Ð¾ÑÐ¿ÑÐ°Ð²Ð»ÐµÐ½Ð¾',\n    forgotPasswordTitle: 'ÐÐ°Ð±ÑÐ»Ð¸ Ð¿Ð°ÑÐ¾Ð»Ñ?',\n    insertCode: 'ÐÐ²ÐµÐ´Ð¸ÑÐµ ÐºÐ¾Ð´',\n    insertEmail: 'ÐÐ²ÐµÐ´Ð¸ÑÐµ Ð°Ð´ÑÐµÑ ÑÐ»ÐµÐºÑÑÐ¾Ð½Ð½Ð¾Ð¹ Ð¿Ð¾ÑÑÑ',\n    insertPhone: 'ÐÐ²ÐµÐ´Ð¸ÑÐµ Ð½Ð¾Ð¼ÐµÑ Ð²Ð°ÑÐµÐ³Ð¾ Ð¼Ð¾Ð±Ð¸Ð»ÑÐ½Ð¾Ð³Ð¾ ÑÐµÐ»ÐµÑÐ¾Ð½Ð°',\n    phoneErrorMessagePhrase: 'ÐÐµÐ²ÐµÑÐ½ÑÐ¹ Ð½Ð¾Ð¼ÐµÑ ÑÐµÐ»ÐµÑÐ¾Ð½Ð°',\n    prepositionIn: 'Ð²',\n    prepositionOr: 'Ð¸Ð»Ð¸',\n    recoveryPasswordPhrase: 'ÐÐ»Ñ Ð²Ð¾ÑÑÑÐ°Ð½Ð¾Ð²Ð»ÐµÐ½Ð¸Ñ Ð²Ð°ÑÐµÐ³Ð¾ Ð¿Ð°ÑÐ¾Ð»Ñ Ð¼Ñ Ð²ÑÑÐ»ÐµÐ¼ {0} Ñ Ð¸Ð½ÑÑÑÑÐºÑÐ¸ÑÐ¼Ð¸.',\n    resendEmailButton: 'ÐÑÐ¿ÑÐ°Ð²Ð¸ÑÑ ÐµÑÐµ ÑÐ°Ð·',\n    resendSmsCodePhrase: 'ÐÑÐ»Ð¸ ÐºÐ¾Ð´ Ð½Ðµ Ð¿ÑÐ¸ÑÐ¾Ð´Ð¸Ñ ÑÐµÑÐµÐ· Ð½ÐµÑÐºÐ¾Ð»ÑÐºÐ¾ Ð¼Ð¸Ð½ÑÑ, Ð¿Ð¾Ð¿ÑÐ¾Ð±ÑÐ¹ÑÐµ ÐµÑÐµ ÑÐ°Ð·.',\n    sendAgain: 'Ð¾ÑÐ¿ÑÐ°Ð²Ð¸ÑÑ ÑÐ½Ð¾Ð²Ð°.',\n    sendAgainPhrase: 'ÐÑÐ»Ð¸ ÐºÐ¾Ð´ Ð½Ðµ Ð¿ÑÐ¸ÑÐ¾Ð´Ð¸Ñ ÑÐµÑÐµÐ· Ð½ÐµÑÐºÐ¾Ð»ÑÐºÐ¾ Ð¼Ð¸Ð½ÑÑ',\n    sendButton: 'Ð¿Ð¾ÑÐ»Ð°ÑÑ',\n    sentSmsCodePhrase: 'ÐÑ Ð¾ÑÐ¿ÑÐ°Ð²Ð»ÑÐµÐ¼ ÐºÐ¾Ð´ Ð½Ð° Ð²Ð°Ñ Ð·Ð°ÑÐµÐ³Ð¸ÑÑÑÐ¸ÑÐ¾Ð²Ð°Ð½Ð½ÑÐ¹ Ð¼Ð¾Ð±Ð¸Ð»ÑÐ½ÑÐ¹ ÑÐµÐ»ÐµÑÐ¾Ð½.',\n    sms: 'SMS',\n    smsCodeErrorMessagePhrase: 'ÐÐµÐ²ÐµÑÐ½ÑÐ¹ ÐºÐ¾Ð´. ÐÐ¾Ð²ÑÐ¾ÑÐ¸ÑÐµ Ð¸Ð»Ð¸ Ð¾Ð±ÑÐ°ÑÐ¸ÑÐµÑÑ Ð² ÑÐ»ÑÐ¶Ð±Ñ Ð¿Ð¾Ð´Ð´ÐµÑÐ¶ÐºÐ¸',\n    supportContact: 'ÐÑÐ»Ð¸ Ñ Ð²Ð°Ñ Ð½ÐµÑ Ð´Ð¾ÑÑÑÐ¿Ð° Ðº {0}, Ð¾Ð±ÑÐ°ÑÐ¸ÑÐµÑÑ Ð² ÑÐ»ÑÐ¶Ð±Ñ Ð¿Ð¾Ð´Ð´ÐµÑÐ¶ÐºÐ¸',\n    telephone: 'ÑÐµÐ»ÐµÑÐ¾Ð½',\n    typeCodeTitle: 'ÐÐ²ÐµÐ´Ð¸ÑÐµ Ð¾ÑÐ¿ÑÐ°Ð²Ð»ÐµÐ½Ð½ÑÐ¹ ÐºÐ¾Ð´'\n  }\n};\n","/**\n * @usedBy PoModalPasswordRecoveryComponent\n *\n * @description\n *\n * *Enum* para especificaÃ§Ã£o do tipo de recuperaÃ§Ã£o de senha.\n */\nexport enum PoModalPasswordRecoveryType {\n  /** Possibilita ao usuÃ¡rio optar por envio via email ou SMS */\n  All = 'all',\n\n  /** DefiniÃ§Ã£o para recuperaÃ§Ã£o apenas por email */\n  Email = 'email',\n\n  /** DefiniÃ§Ã£o para recuperaÃ§Ã£o apenas por SMS */\n  SMS = 'sms'\n\n}\n","import { EventEmitter, Input, Output } from '@angular/core';\n\nimport { browserLanguage, poLocaleDefault } from '../../utils/util';\n\nimport { poModalPasswordRecoveryLiterals } from './literals/i18n/po-modal-password-recovery-literals';\nimport { PoModalPasswordRecoveryType } from './enums/po-modal-password-recovery-type.enum';\n\nconst PoModalPasswordRecoveryDefaultMaxLength = 15;\nconst PoModalPasswordRecoveryDefaultMinLength = 15;\nconst PoModalPasswordRecoveryDefaultPhone = '(99) 99999-9999';\nconst PoModalPasswordRecoveryTypeDefault: PoModalPasswordRecoveryType = PoModalPasswordRecoveryType.Email;\n\n/**\n * @description\n *\n * O componente `po-modal-password-recovery` Ã© utilizado como template para solicitaÃ§Ã£o de troca de senha.\n *\n * Ã composto por uma modal que possui trÃªs telas, cada uma com as seguintes caracterÃ­sticas:\n *\n * - A primeira possui campos para preenchimento de email ou nÃºmero de telefone;\n * - Tela com campo para preenchimento de cÃ³digo SMS enviado para o nÃºmero de telefone enviado;\n * - A terceira se trata de uma confirmaÃ§Ã£o de envio de link para a caixa de email do usuÃ¡rio.\n *\n *\n * A propriedade `p-url-recovery` automatiza a rotina do componente e simplifica o processo\n * para recuperaÃ§Ã£o de senha, bastando definir uma url para requisiÃ§Ã£o dos recursos.\n * Seu detalhamento para uso pode ser visto logo abaixo em *propriedades*.\n * Caso julgue necessÃ¡rio, pode-se tambÃ©m definir manualmente a rotina do componente.\n *\n *\n * Para a modal de digitaÃ§Ã£o de cÃ³digo SMS, Ã© possÃ­vel definir uma mensagem de erro\n * customizada com a propriedade `p-code-error` e hÃ¡ um link para\n * reenvio de cÃ³digo por SMS. Ao reenviar, o evento `p-code-submit` envia um objeto com o telefone do usuÃ¡rio e a quantidade\n * de vezes em que o usuÃ¡rio fez a solicitaÃ§Ã£o de reenvio.\n *\n * > Ã indicada a utilizaÃ§Ã£o da tela de digitaÃ§Ã£o para envio de cÃ³digo SMS apenas\n * se a opÃ§Ã£o por envio SMS for disponibilizada para o usuÃ¡rio.\n *\n *\n * A modal de confirmaÃ§Ã£o contÃ©m uma aÃ§Ã£o de reenvio e o evento `p-submit`\n * Ã© quem passa o objeto contendo o email em conjunto com a quantidade de tentativas de reenvio.\n *\n * > A tela de confirmaÃ§Ã£o Ã© indicada para quando o usuÃ¡rio solicitar a troca atravÃ©s do email.\n *\n * > Os textos das modals sÃ£o prÃ©-definidos, imutÃ¡veis e sÃ£o traduzidos de acordo com o idioma do *browser* (pt, en e es)\n *\n * Para que as imagens sejam exibidas corretamente, Ã© necessÃ¡rio incluir o caminho delas ao projeto. Para isso, edite\n * o *assets* no arquivo **angular.json** da aplicaÃ§Ã£o na seguinte ordem:\n * ```\n *   \"assets\": [\n *     \"src/assets\",\n *     \"src/favicon.ico\",\n *     {\n *       \"glob\": \"**\\/*\",\n *       \"input\": \"node_modules/@portinari/style/images\",\n *       \"output\": \"assets/images\"\n *     }\n *   ]\n * ```\n */\nexport abstract class PoModalPasswordRecoveryBaseComponent {\n\n  private _contactEmail: string;\n  private _phoneMask = PoModalPasswordRecoveryDefaultPhone;\n  private _type: PoModalPasswordRecoveryType = PoModalPasswordRecoveryTypeDefault;\n\n  email: string;\n  maxLength = PoModalPasswordRecoveryDefaultMaxLength;\n  minLength = PoModalPasswordRecoveryDefaultMinLength;\n  modalPasswordRecoveryTypeAll: boolean;\n  phone: string;\n  smsCode: string;\n  smsCodeErrorMessage: string;\n\n  literals: { cancelButton: string, closeButton: string, continueButton: string, email: string, emailErrorMessagePhrase: string,\n    emailSentConfirmationPhrase: string, emailSentTitle: string, forgotPasswordTitle: string,\n    insertCode: string, insertEmail: string, insertPhone: string, phoneErrorMessagePhrase: string,\n    prepositionIn: string, prepositionOr: string, recoveryPasswordPhrase: string, resendEmailButton: string,\n    resendSmsCodePhrase: string, sendAgain: string, sendAgainPhrase: string, sendButton: string, sms: string, smsCode: string,\n    smsCodeErrorMessagePhrase: string, sentSmsCodePhrase: string, supportContact: string, telephone: string, typeCodeTitle: string } =\n    {\n      ...poModalPasswordRecoveryLiterals[poLocaleDefault],\n      ...poModalPasswordRecoveryLiterals[browserLanguage()],\n    };\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * DefiniÃ§Ã£o do e-mail que Ã© exibido na mensagem para contato de suporte.\n   */\n  @Input('p-contact-email') set contactEmail(value: string) {\n    this._contactEmail = value;\n\n    this.smsCodeErrorMessage = this.concatenateSMSErrorMessage(value);\n  }\n\n  get contactEmail() {\n    return this._contactEmail;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * DefiniÃ§Ã£o de mensagem de erro customizada para quando o usuÃ¡rio passar um cÃ³digo SMS invÃ¡lido ou errado.\n   */\n  @Input('p-code-error') codeError: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * DefiniÃ§Ã£o da mascara do campo de telefone.\n   *\n   * @default `(99) 99999-9999`\n   */\n  @Input('p-phone-mask') set phoneMask(value: string) {\n    this._phoneMask = value || PoModalPasswordRecoveryDefaultPhone;\n    this.minLength = this.maxLength = this._phoneMask.length;\n  }\n\n  get phoneMask() {\n    return this._phoneMask;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o tipo de recuperaÃ§Ã£o de senha que serÃ¡ exibido.\n   *\n   * @default `PoModalPasswordRecoveryType.Email`\n   *\n   */\n  @Input('p-type') set type(value: PoModalPasswordRecoveryType) {\n    this._type = (<any>Object).values(PoModalPasswordRecoveryType).includes(value) ? value : PoModalPasswordRecoveryTypeDefault;\n  }\n\n  get type() {\n    return this._type;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Endpoint usado pelo template para requisiÃ§Ã£o do recurso. Quando preenchido,\n   * o mÃ©todos `p-submit` e `p-submit-code` serÃ£o ignorados e o componente adquirirÃ¡ automatizaÃ§Ã£o\n   * para o processo de solicitaÃ§Ã£o de troca de senha.\n   *\n   * ### Processos\n   * Ao digitar um valor vÃ¡lido no campo de email/telefone e pressionar **enviar**,\n   * o componente farÃ¡ uma requisiÃ§Ã£o `POST` na url especificada nesta propriedade passando o objeto contendo o valor definido pelo usuÃ¡rio.\n   *\n   * ```\n   * body {\n   *  email: email,\n   *  retry?: retry\n   * }\n   * ```\n   *\n   *\n   * #### RecuperaÃ§Ã£o por email\n   * Para a recuperaÃ§Ã£o de senha por **email**, o cÃ³digo de resposta HTTP de status esperado Ã© `204`.\n   *\n   * Em caso de **sucesso**, serÃ¡ exibida a modal de confirmaÃ§Ã£o de e-mail para o usuÃ¡rio.\n   *\n   *\n   * > A aÃ§Ã£o **Reenviar** na tela de confirmaÃ§Ã£o efetua uma nova requisiÃ§Ã£o\n   * passando-se o objeto com incremento para o valor da propriedade **retry**.\n   *\n   * *Processo finalizado.*\n   *\n   *\n   * #### RecuperaÃ§Ã£o por SMS\n   * Se a opÃ§Ã£o de recuperaÃ§Ã£o for por **SMS**, o cÃ³digo de status de sucesso deve ser `200`.\n   * Em caso de **sucesso**, abre-se a modal de digitaÃ§Ã£o de cÃ³digo SMS e a resposta\n   * desta requisiÃ§Ã£o deve retornar uma definiÃ§Ã£o de dados abaixo:\n   *\n   * ```\n   * 200:\n   *  {\n   *    hash: hash,\n   *    urlValidationCode?: url\n   *  }\n   * ```\n   *\n   *\n   * - O **hash** serÃ¡ o cÃ³digo de validaÃ§Ã£o da solicitaÃ§Ã£o do SMS para ser enviado juntamente com o cÃ³digo de verificaÃ§Ã£o do SMS;\n   * - **urlValidationCode** Ã© a url usada para validaÃ§Ã£o do cÃ³digo enviado por SMS.\n   *\n   *\n   * > Caso nÃ£o seja passado urlValidationCode, o endpoint usado para validaÃ§Ã£o do cÃ³digo serÃ¡ `<p-url-recovery>/validation`.\n   *\n   *\n   * #### ValidaÃ§Ã£o do cÃ³digo SMS\n   * Ao digitar um valor vÃ¡lido no campo de cÃ³digo SMS e pressionar **continuar**, o componente farÃ¡ uma requisiÃ§Ã£o `POST` contendo:\n   *\n   * ```\n   * POST /<p-url-recovery>/validation OU /<urlValidationCode>\n   * Body {\n   *  hash: hash,\n   *  code: code\n   * }\n   * ```\n   *\n   *\n   * O cÃ³digo de resposta HTTP de status esperado Ã© `200`.\n   *\n   * Em caso de **erro** na validaÃ§Ã£o do cÃ³digo SMS, a modal se mantÃ©m com o campo para digitaÃ§Ã£o\n   * de cÃ³digo SMS\n   *\n   *\n   * > Pode-se atribuir a mensagem de erro (message) para o atributo `p-code-error` conforme retorno abaixo:\n   *\n   * ```\n   * 400\n   *  {\n   *    error {\n   *      message: 'Error Message'\n   *    }\n   *  }\n   * ```\n   *\n   *\n   * Em caso de **sucesso**, espera-se a resposta desta requisiÃ§Ã£o retornando a seguinte definiÃ§Ã£o:\n   *\n   * ```\n   * 200:\n   *  {\n   *    token: token,\n   *    urlChangePassword?: url\n   *  }\n   * ```\n   *\n   *\n   * - **token**: Token de alteraÃ§Ã£o de senha;\n   * - **urlChangePassword**: url para o formulÃ¡rio de alteraÃ§Ã£o de senha.\n   *\n   *\n   * O componente estÃ¡ configurado para redirecionar para a url estabelecida em `urlChangePassword`.\n   *\n   * > Caso nÃ£o seja passado valor para urlChangePassword,\n   * a url usada para validaÃ§Ã£o serÃ¡ a `<p-url-recovery>/changePassword?token=<token>`.\n   *\n   * *Processo finalizado.*\n   */\n  @Input('p-url-recovery') urlRecovery?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * AÃ§Ã£o contendo como parÃ¢metro o cÃ³digo enviado por SMS e digitado pelo usuÃ¡rio.\n   *\n   * > Esta propriedade serÃ¡ ignorada se for definido valor para a propriedade `p-url-recovery`.\n   */\n  @Output('p-code-submit') codeSubmit = new EventEmitter<any>();\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * AÃ§Ã£o contendo o email como parÃ¢metro e que Ã© executada quando o usuÃ¡rio clica sobres os botÃµes de 'enviar' e 'reenviar' e-mail.\n   *\n   * > Esta propriedade serÃ¡ ignorada se for definido valor para a propriedade `p-url-recovery`.\n   */\n  @Output('p-submit') submit = new EventEmitter<any>();\n\n  /**\n   * AcÃ£o para conclusÃ£o de processo e fechamento da modal. Indica-se sua utilizaÃ§Ã£o\n   * para apÃ³s o envio e validaÃ§Ã£o do cÃ³digo SMS enviado pelo usuÃ¡rio.\n   *\n   * > Nas modals em que hÃ¡ a aÃ§Ã£o de 'cancelar' dispensa-se o uso desta aÃ§Ã£o pois o componente jÃ¡ trata o fechamento da modal.\n   */\n  abstract completed(): void;\n\n  /**\n   * Abre a modal de preenchimento de email ou nÃºmero de telefone para solicitaÃ§Ã£o de troca de senha.\n   */\n  abstract open(): void;\n\n  /**\n   * Abre a modal de confirmaÃ§Ã£o de envio de email.\n   */\n  abstract openConfirmation(): void;\n\n  /**\n   * Abre a modal de preenchimento do cÃ³digo SMS enviado ao usuÃ¡rio.\n   */\n  abstract openSmsCode(): void;\n\n  private concatenateSMSErrorMessage(value: string) {\n    const literalCodeErrorMessage = this.literals.smsCodeErrorMessagePhrase;\n\n    return value && value !== '' ? `${literalCodeErrorMessage} ${this.literals.prepositionIn} ${value}.` : literalCodeErrorMessage;\n  }\n\n}\n","/**\n * @docsPrivate\n *\n * @description\n *\n * Enum para definiÃ§Ã£o do tipo de conteÃºdo exibido na modal.\n */\nexport enum PoModalPasswordRecoveryModalContent {\n\n  /** ExibiÃ§Ã£o de modal contendo campo para preenchimento de email ou nÃºmero de telefone */\n  Email = 'email',\n\n  /** ExibiÃ§Ã£o de modal contendo campo para inserÃ§Ã£o de cÃ³digo enviado por SMS */\n  SMSCode = 'smsCode',\n\n  /** ExibiÃ§Ã£o de modal de confirmaÃ§Ã£o de envio */\n  Confirmation = 'confirmation'\n\n}\n","import { HttpClient, HttpParams, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { PoModalPasswordRecovery } from './interfaces/po-modal-password-recovery.interface';\n\n@Injectable()\nexport class PoModalPasswordRecoveryService {\n\n  constructor(private http: HttpClient) { }\n\n  post(\n    urlRecovery: string,\n    item: PoModalPasswordRecovery,\n    params?: HttpParams | { [param: string]: string | Array<string>; }\n    ): Observable<HttpResponse<Object>> {\n    return this.http.post<any>(urlRecovery, item, { observe: 'response', params: params });\n  }\n\n}\n","import { Component, OnDestroy, ViewChild } from '@angular/core';\nimport { AbstractControl, NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { isExternalLink } from '../../utils/util';\nimport { PoI18nPipe, PoModalAction, PoModalComponent, PoRadioGroupOption } from '@portinari/portinari-ui';\n\nimport { PoModalPasswordRecovery } from './interfaces/po-modal-password-recovery.interface';\nimport { PoModalPasswordRecoveryBaseComponent } from './po-modal-password-recovery-base.component';\nimport { PoModalPasswordRecoveryModalContent } from './enums/po-modal-password-recovery-modal-content.enum';\nimport { PoModalPasswordRecoveryService } from './po-modal-password-recovery.service';\nimport { PoModalPasswordRecoveryType } from './enums/po-modal-password-recovery-type.enum';\n\n/**\n * @docsExtends PoModalPasswordRecoveryBaseComponent\n *\n * @example\n *\n * <example name=\"po-modal-password-recovery-basic\" title=\"Portinari Modal Password Recovery Basic\">\n *  <file name=\"sample-po-modal-password-recovery-basic/sample-po-modal-password-recovery-basic.component.html\"> </file>\n *  <file name=\"sample-po-modal-password-recovery-basic/sample-po-modal-password-recovery-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-modal-password-recovery-labs\" title=\"Portinari Modal Password Recovery Labs\">\n *  <file name=\"sample-po-modal-password-recovery-labs/sample-po-modal-password-recovery-labs.component.html\"> </file>\n *  <file name=\"sample-po-modal-password-recovery-labs/sample-po-modal-password-recovery-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-modal-password-recovery-request\" title=\"Portinari Modal Password Recovery Request\">\n *  <file name=\"sample-po-modal-password-recovery-request/sample-po-modal-password-recovery-request.component.html\"> </file>\n *  <file name=\"sample-po-modal-password-recovery-request/sample-po-modal-password-recovery-request.component.ts\"> </file>\n * </example>\n */\n\n@Component({\n  selector: 'po-modal-password-recovery',\n  templateUrl: './po-modal-password-recovery.component.html'\n})\n\nexport class PoModalPasswordRecoveryComponent extends PoModalPasswordRecoveryBaseComponent implements OnDestroy {\n\n  chosenTypeFormOption: string = PoModalPasswordRecoveryType.Email;\n  codeMask: string = '9 9 9 9 9 9';\n  control: AbstractControl;\n  emailModal: boolean = true;\n  emailModalPhrases = { firstPhrase: null as string, secondPhrase: null as string };\n  endpoint: string = '.';\n  invalidCode: boolean = false;\n  invalidEmail: boolean = false;\n  modalTitle: string;\n  modalType: PoModalPasswordRecoveryModalContent = PoModalPasswordRecoveryModalContent.Email;\n  showCustomCodeError: boolean;\n  smsCodeErrorMessagePhrase: string;\n  submittedCodeValue = {} as PoModalPasswordRecovery;\n  submittedContactValue = {} as PoModalPasswordRecovery;\n\n  private passwordRecoverySubscription: Subscription;\n  private smsBodyResponse;\n  private smsCodeSubscription: Subscription;\n\n  @ViewChild('emailForm', { static: false }) emailForm: NgForm;\n\n  @ViewChild('recoveryModal', { static: true }) recoveryModalElement: PoModalComponent;\n\n  @ViewChild('smsCodeForm', { static: false }) smsCodeForm: NgForm;\n\n  primaryAction: PoModalAction = { label: undefined, action: () => { } };\n\n  secondaryAction: PoModalAction = { label: undefined, action: () => { } };\n\n  typeFormOptions: Array<PoRadioGroupOption> = [\n    { label: 'e-mail', value: PoModalPasswordRecoveryType.Email },\n    { label: 'SMS', value: PoModalPasswordRecoveryType.SMS }\n  ];\n\n  constructor(\n    private router: Router,\n    private poI18nPipe: PoI18nPipe,\n    private poModalPasswordRecoveryService: PoModalPasswordRecoveryService\n    ) {\n    super();\n  }\n\n  ngOnDestroy() {\n    if (this.passwordRecoverySubscription) {\n      this.passwordRecoverySubscription.unsubscribe();\n    }\n\n    if (this.smsCodeSubscription) {\n      this.smsCodeSubscription.unsubscribe();\n    }\n  }\n\n  completed() {\n    this.cancelAction();\n  }\n\n  formModelChangesCheck(form: NgForm) {\n    const invalidForm = form.invalid;\n    this.invalidEmail = invalidForm && form.dirty;\n    this.primaryAction.disabled = invalidForm;\n\n    if (this.modalType === PoModalPasswordRecoveryModalContent.SMSCode) {\n      const codeError: boolean = this.codeError !== undefined && this.codeError !== '';\n      this.showCustomCodeError = codeError && form.pristine;\n    }\n  }\n\n  getInputType(type) {\n    this.type = type;\n    this.pipeModalPhrases();\n    setTimeout(() => {\n      this.control = this.emailForm.controls[type];\n      this.formModelChangesCheck(this.emailForm);\n      this.resetFormFields(this.control);\n    });\n  }\n\n  open() {\n    const control = this.checkFormType(this.type);\n    this.control = this.emailForm.controls[control];\n    this.setEmailModalPhrasesAndActions();\n    this.formModelChangesCheck(this.emailForm);\n    this.recoveryModalElement.open();\n  }\n\n  openConfirmation() {\n    this.modalTitle = this.literals.emailSentTitle;\n    this.modalType = PoModalPasswordRecoveryModalContent.Confirmation;\n    this.setActions(this.cancelAction, this.literals.closeButton, this.submitAction, this.literals.resendEmailButton, false);\n  }\n\n  openSmsCode() {\n    this.modalTitle = this.literals.typeCodeTitle;\n    this.modalType = PoModalPasswordRecoveryModalContent.SMSCode;\n    this.setActions(this.submitSmsCodeAction, this.literals.continueButton, this.cancelAction, this.literals.cancelButton, true);\n\n    setTimeout(() => {\n      this.control = this.smsCodeForm.controls['sms'];\n      this.formModelChangesCheck(this.smsCodeForm);\n    });\n  }\n\n  resendSmsCode() {\n    this.incrementRetryAttempts();\n    if (this.urlRecovery) {\n      this.submitActionRequest(this.submittedContactValue, this.type);\n    } else {\n      this.submit.emit(this.submittedContactValue);\n    }\n  }\n\n  private assignSmsResponse(responseObj) {\n    this.smsBodyResponse = Object.assign({}, {hash: responseObj.hash});\n    if (responseObj.urlValidationCode) {\n      this.smsBodyResponse = Object.assign(this.smsBodyResponse, {urlValidationCode: responseObj.urlValidationCode});\n    }\n  }\n\n  private cancelAction() {\n    this.resetFormFields(this.control);\n    this.submittedContactValue = {};\n\n    this.chosenTypeFormOption = PoModalPasswordRecoveryType.Email;\n    this.modalType = PoModalPasswordRecoveryModalContent.Email;\n    this.type = this.modalPasswordRecoveryTypeAll ? PoModalPasswordRecoveryType.All : this.type;\n    this.recoveryModalElement.close();\n  }\n\n  private checkFormType(type: PoModalPasswordRecoveryType) {\n    return type !== PoModalPasswordRecoveryType.All ? type : PoModalPasswordRecoveryType.Email;\n  }\n\n  private formReset(control: AbstractControl) {\n    control.markAsPristine();\n    control.markAsUntouched();\n    control.updateValueAndValidity();\n  }\n\n  private getEmitValue(type: PoModalPasswordRecoveryType) {\n    return type === PoModalPasswordRecoveryType.SMS ? this.phone : this.email;\n  }\n\n  private incrementRetryAttempts() {\n    this.submittedContactValue.retry = (this.submittedContactValue.retry + 1 || 1);\n  }\n\n  private openExternalLink(url, queryParam) {\n    window.open(`${url}?token=${queryParam}`, '_self');\n  }\n\n  private openInternalLink(url, endpoint, queryParam) {\n    this.router.navigate([`${url}/${endpoint}`], { queryParams: { token: queryParam } });\n  }\n\n  private pipeModalPhrases() {\n    if (this.type === PoModalPasswordRecoveryType.SMS) {\n      this.emailModalPhrases.firstPhrase = this.setPipeArguments(this.literals.recoveryPasswordPhrase, this.literals.sms);\n      this.emailModalPhrases.secondPhrase = this.setPipeArguments(this.literals.supportContact, this.literals.telephone);\n    } else {\n      this.emailModalPhrases.firstPhrase = this.setPipeArguments(this.literals.recoveryPasswordPhrase, this.literals.email);\n      this.emailModalPhrases.secondPhrase = this.setPipeArguments(this.literals.supportContact, this.literals.email);\n    }\n  }\n\n  private redirectToChangePassword(recoveryToken: PoModalPasswordRecovery) {\n    const urlChangePassword = recoveryToken.urlChangePassword;\n    if (urlChangePassword) {\n      isExternalLink(urlChangePassword) ?\n      this.openExternalLink(urlChangePassword, recoveryToken.token) :\n      this.openInternalLink(this.urlRecovery, urlChangePassword, recoveryToken.token);\n    } else {\n      const changePasswordEndpoint = 'changePassword';\n      this.openInternalLink(this.urlRecovery, changePasswordEndpoint, recoveryToken.token);\n    }\n  }\n\n  private resetFormFields(control) {\n    this.formReset(control);\n    this.email = undefined;\n    this.phone = undefined;\n    this.smsCode = undefined;\n  }\n\n  private setActions(primaryAction, primarylabel, secondaryAction, secondaryLabel, disabled) {\n    this.primaryAction.action = () => primaryAction.call(this);\n    this.primaryAction.label = primarylabel;\n    this.secondaryAction.action = () => secondaryAction.call(this);\n    this.secondaryAction.label = secondaryLabel;\n    this.primaryAction.disabled = disabled;\n  }\n\n  private setEmailModalPhrasesAndActions() {\n    this.modalTitle = this.literals.forgotPasswordTitle;\n    this.pipeModalPhrases();\n    this.modalPasswordRecoveryTypeAll = this.type === PoModalPasswordRecoveryType.All;\n    this.setActions(this.submitAction, this.literals.sendButton, this.cancelAction, this.literals.cancelButton, true);\n  }\n\n  private setRequestEndpoint(urlValidationCode?: string) {\n    const endpoint = urlValidationCode || 'validation';\n\n    return `${this.urlRecovery}/${endpoint}`;\n  }\n\n  private setPipeArguments(literalAttr: string, arg: string) {\n    return this.poI18nPipe.transform(literalAttr, arg);\n  }\n\n  private submitAction() {\n    this.modalType === PoModalPasswordRecoveryModalContent.Confirmation ? this.incrementRetryAttempts() : this.formReset(this.control);\n    this.submittedContactValue[this.checkFormType(this.type)] = this.getEmitValue(this.type);\n    if (this.urlRecovery) {\n      this.submitActionRequest(this.submittedContactValue, this.type);\n    } else {\n      this.submit.emit(this.submittedContactValue);\n    }\n  }\n\n  private submitActionRequest(data: PoModalPasswordRecovery, modalType: PoModalPasswordRecoveryType) {\n    const params = modalType === PoModalPasswordRecoveryType.SMS ? { type: 'sms' } : undefined;\n\n    this.passwordRecoverySubscription =\n    this.poModalPasswordRecoveryService.post(this.urlRecovery, data, params)\n    .subscribe(response => {\n      if ((modalType === PoModalPasswordRecoveryType.Email || modalType === PoModalPasswordRecoveryType.All) && response.status === 204) {\n        this.openConfirmation();\n      } else if (modalType === PoModalPasswordRecoveryType.SMS && response.status === 200) {\n        this.assignSmsResponse(response.body);\n        this.openSmsCode();\n      }\n    });\n  }\n\n  private submitSmsCodeAction() {\n    this.submittedCodeValue.code = this.smsCode;\n\n    if (this.urlRecovery) {\n      this.submittedCodeValue = Object.assign(this.submittedCodeValue, {hash: this.smsBodyResponse.hash});\n      this.submitSmsCodeRequest(this.submittedCodeValue);\n\n    } else {\n      this.codeSubmit.emit(this.submittedCodeValue);\n    }\n    this.resetFormFields(this.control);\n  }\n\n  private submitSmsCodeRequest(data: PoModalPasswordRecovery) {\n    this.smsCodeSubscription = this.poModalPasswordRecoveryService\n    .post(this.setRequestEndpoint(this.smsBodyResponse.urlValidationCode), data)\n    .subscribe(\n      response => {\n        const successStatus = response.status === 200;\n        if (successStatus) {\n          this.completed();\n          this.redirectToChangePassword(response.body);\n        }\n      },\n      error => {\n        this.codeError = error.error.message;\n        this.openSmsCode();\n      }\n    );\n  }\n\n}\n","import { Component, Input } from '@angular/core';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente utilizado para exibiÃ§Ã£o da mensagem customizada de erro em um campo de formulÃ¡rio.\n */\n@Component({\n  selector: 'po-modal-password-recovery-error-message',\n  templateUrl: './po-modal-password-recovery-error-message.component.html'\n})\n\nexport class PoModalPasswordRecoveryErrorMessageComponent {\n\n  /** Texto exibido na mensagem de erro. */\n  @Input('p-text') text: string;\n\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { PoFieldModule, PoI18nPipe, PoModalModule } from '@portinari/portinari-ui';\n\nimport { PoModalPasswordRecoveryComponent } from './po-modal-password-recovery.component';\nimport { PoModalPasswordRecoveryErrorMessageComponent\n} from './po-modal-password-recovery-error-message/po-modal-password-recovery-error-message.component';\nimport { PoModalPasswordRecoveryService } from './po-modal-password-recovery.service';\n\n/**\n * @description\n *\n * MÃ³dulo do template do po-modal-password-recovery.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n\n    PoFieldModule,\n    PoModalModule\n  ],\n  declarations: [\n    PoModalPasswordRecoveryComponent,\n    PoModalPasswordRecoveryErrorMessageComponent\n  ],\n  exports: [\n    PoModalPasswordRecoveryComponent,\n    PoModalPasswordRecoveryErrorMessageComponent\n  ],\n  providers: [PoI18nPipe, PoModalPasswordRecoveryService]\n})\nexport class PoModalPasswordRecoveryModule { }\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nimport { browserLanguage, convertToBoolean, isTypeof } from './../../utils/util';\nimport { PoSelectOption } from '@portinari/portinari-ui';\n\n@Component({\n  selector: 'po-page-background',\n  templateUrl: './po-page-background.component.html'\n})\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente para definiÃ§Ã£o de cor de fundo e dos logotipos primÃ¡rio e secundÃ¡rio para os templates\n * de `po-page-login` e demais templates de login.\n */\nexport class PoPageBackgroundComponent implements OnInit {\n\n  private _logo?: string;\n  private _secondaryLogo?: string;\n  private _showSelectLanguage?: boolean = false;\n\n  selectedLanguageOption: string;\n\n  selectLanguageOptions: Array<PoSelectOption> = [\n    { label: 'English', value: 'en' },\n    { label: 'EspaÃ±ol', value: 'es' },\n    { label: 'PortuguÃªs', value: 'pt' },\n    { label: 'PÑÑÑÐºÐ¸Ð¹', value: 'ru' }\n  ];\n\n  /** Insere uma imagem de destaque ao lado direito do container. */\n  @Input('p-background') background?: string;\n\n  /** Designa se o logotipo deve desaparecer em resoluÃ§Ãµes menores. */\n  @Input('p-hide-logo') hideLogo?: boolean;\n\n  /** Texto de destaque sobreposto Ã  imagem de destaque. Essa opÃ§Ã£o Ã© utilizada em conjunto com o atributo `p-background`. */\n  @Input('p-highlight-info') highlightInfo?: string;\n\n  /** Caminho para a logomarca localizada na parte superior. */\n  @Input('p-logo') set logo(value: any) {\n    this._logo = isTypeof(value, 'string') && value.trim() ? value : undefined;\n  }\n\n  get logo() {\n    return this._logo;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caminho para a logomarca localizada no rodapÃ©.\n   */\n  @Input('p-secondary-logo') set secondaryLogo(value: any) {\n    this._secondaryLogo = isTypeof(value, 'string') && value.trim() ? value : undefined;\n  }\n\n  get secondaryLogo() {\n    return this._secondaryLogo;\n  }\n\n  /** Define se o seletor de idiomas deve ser exibido. */\n  @Input('p-show-select-language') set showSelectLanguage(showSelectLanguage: boolean) {\n    this._showSelectLanguage = convertToBoolean(showSelectLanguage);\n  }\n  get showSelectLanguage() {\n    return this._showSelectLanguage;\n  }\n\n  /**\n   * Evento disparado ao selecionar alguma opÃ§Ã£o no seletor de idiomas.\n   * Para este evento serÃ¡ passado como parÃ¢metro o valor de idioma selecionado.\n   */\n  @Output('p-selected-language') selectedLanguage?: EventEmitter<any> = new EventEmitter<any>();\n\n  ngOnInit() {\n    this.selectedLanguageOption = browserLanguage();\n  }\n\n  onChangeLanguage() {\n    this.selectedLanguage.emit(this.selectedLanguageOption);\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoDividerModule, PoFieldModule } from '@portinari/portinari-ui';\n\nimport { PoPageBackgroundComponent } from './po-page-background.component';\n\n/**\n * @description\n *\n * MÃ³dulo do template do po-page-background.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    PoDividerModule,\n    PoFieldModule,\n  ],\n  declarations: [\n    PoPageBackgroundComponent\n  ],\n  exports: [\n    PoPageBackgroundComponent\n  ]\n})\nexport class PoPageBackgroundModule { }\n","/**\n * @usedBy PoPageBlockedUserComponent\n *\n * @description\n *\n * *Enum* para os tipos de motivo de bloqueio de usuÃ¡rio. As informaÃ§Ãµes modificam conforme o motivo selecionado pelo desenvolvedor.\n */\nexport enum PoPageBlockedUserReason {\n\n  /** Sem definiÃ§Ã£o; a tela exibirÃ¡ conteÃºdo de bloqueio genÃ©rico. */\n  None = 'none',\n\n  /** DefiniÃ§Ã£o para tentativas de acesso esgotadas. */\n  ExceededAttempts = 'exceededAttempts',\n\n  /** DefiniÃ§Ã£o para senha expirada. */\n  ExpiredPassword = 'expiredPassword',\n\n}\n","import { Input, OnInit } from '@angular/core';\n\nimport { PoPageBlockedUserReason } from './enums/po-page-blocked-user-reason.enum';\nimport { PoPageBlockedUserReasonParams } from './interfaces/po-page-blocked-user-reason-params.interface';\n\nconst PoPageBlockedUserReasonDefault: PoPageBlockedUserReason = PoPageBlockedUserReason.None;\nconst PoPageBlockedUserParamsDefault: PoPageBlockedUserReasonParams = { attempts: 5, days: 90, hours: 24 };\n\n/**\n * @description\n *\n * O componente `po-page-blocked-user` Ã© utilizado como template para tela de bloqueio de usuÃ¡rio.\n * Ã possÃ­vel definir entre trÃªs tipos de telas para alertar o usuÃ¡rio sobre um eventual bloqueio de login.\n *\n * Cada modelo de bloqueio possui uma imagem e texto adequados Ã  situaÃ§Ã£o.\n * Os textos das telas sÃ£o prÃ©-definidos e imutÃ¡veis, porÃ©m,\n * Ã© possÃ­vel estipular parÃ¢metros como dias, horas e tentativas de acesso esgotadas.\n *\n * Por fim, hÃ¡ propriedades para adiÃ§Ã£o de telefone e/ou email para contato e tambÃ©m a definiÃ§Ã£o para a url de retorno.\n *\n * Para que as imagens sejam exibidas corretamente, Ã© necessÃ¡rio incluir o caminho delas ao projeto. Para isso, edite\n * o *assets* no arquivo **angular.json** da aplicaÃ§Ã£o na seguinte ordem:\n * ```\n *   \"assets\": [\n *     \"src/assets\",\n *     \"src/favicon.ico\",\n *     {\n *       \"glob\": \"**\\/*\",\n *       \"input\": \"node_modules/@portinari/style/images\",\n *       \"output\": \"assets/images\"\n *     }\n *   ]\n * ```\n *\n * _______________\n *\n * #### Praticidade\n * O `po-page-blocked-user`, assim como suas propriedades, pode tambÃ©m ser transmitido diretamente pelas configuraÃ§Ã£os de rota e,\n * desta maneira, dispensa-se qualquer menÃ§Ã£o e/ou importaÃ§Ã£o no restante da aplicaÃ§Ã£o. O exemplo abaixo exemplifica\n * a forma dinÃ¢mica com a qual o template pode ser gerado se navegasse para uma rota denominada como `/access-denied`:\n *\n *\n * ```\n *   import { PoPageBlockedUserComponent, PoPageBlockedUserReason } from '@portinari/portinari-templates';\n *\n *   ...\n *   const routes: Routes = [\n *     {\n *       path: 'access-denied', component: PoPageBlockedUserComponent, data: {\n *         contactEmail: 'dev.portinari@portinari.com',\n *         contactPhone: '0800 1234 000',\n *         reason: PoPageBlockedUserReason.ExpiredPassword,\n *         urlBack: '/home'\n *       }\n *     }\n *     ...\n *   ];\n *\n *   @NgModule({\n *     imports: [RouterModule.forRoot(routes)],\n *     exports: [RouterModule]\n *   })\n *   export class AppRoutingModule { }\n * ```\n *\n * > Ã essencial que siga a nomenclatura dos atributos exemplificados acima para sua efetiva funcionalidade.\n *\n */\nexport class PoPageBlockedUserBaseComponent {\n\n  private _params: PoPageBlockedUserReasonParams = {...PoPageBlockedUserParamsDefault};\n  private _reason: PoPageBlockedUserReason = PoPageBlockedUserReason.None;\n  private _urlBack: string = '/';\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Valor para o email de contato que deve ser exibido. A aÃ§Ã£o estÃ¡ de acordo com o protocolo MAILTO e Ã© possÃ­vel definir\n   * tanto rotas internas quanto externas.\n   */\n  @Input('p-contact-email') contactEmail: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Valor para o telefone de contato que deve ser exibido. A aÃ§Ã£o estÃ¡ de acordo com o protocolo TEL.\n   *\n   * > A propriedade nÃ£o contem tratamento de mÃ¡scara, fica a critÃ©rio do desenvolvedor defini-la.\n   */\n  @Input('p-contact-phone') contactPhone: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * DesignaÃ§Ã£o de valores usados para a customizaÃ§Ã£o da mensagem de bloqueio.\n   * Confira abaixo os valores prÃ©-definidos.\n   *\n   * ```\n   *  const customLiterals: PoPageBlockedUserReasonParams = {\n   *    attempts: 5,\n   *    days: 90,\n   *    hours: 24\n   *  };\n   * ```\n   *\n   * > Salientamos a importÃ¢ncia e atenÃ§Ã£o para configuraÃ§Ã£o desses valores conforme definidos no projeto.\n   *\n   * > Veja os parÃ¢metros customizÃ¡veis na interface `PoPageBlockedUserReasonParams`.\n   *\n   */\n  @Input('p-params') set params(value: PoPageBlockedUserReasonParams) {\n    if (value instanceof Object) {\n      const keys = Object.keys(value);\n      const newParams = {...PoPageBlockedUserParamsDefault};\n\n      keys.forEach(key => {\n        newParams[key] = value[key];\n      });\n\n      this._params = newParams;\n    } else {\n      this._params = {...PoPageBlockedUserParamsDefault};\n    }\n  }\n\n  get params() {\n    return this._params;\n  }\n\n  /** Caminho para a logomarca localizada na parte superior, caso nÃ£o seja definida ou seja invÃ¡lida assume a logo padrÃ£o da PORTINARI. */\n  @Input('p-logo') logo?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * DefiniÃ§Ã£o de motivo de bloqueio de usuÃ¡rio. As informaÃ§Ãµes modificam conforme o motivo selecionado.\n   *\n   * > Veja os valores vÃ¡lidos no *enum* `PoPageBlockedUserReason`.\n   *\n   * @default `PoPageBlockedUserReason.None`\n   */\n  @Input('p-reason') set reason(value: PoPageBlockedUserReason) {\n    this._reason = (<any>Object).values(PoPageBlockedUserReason).includes(value) ? value : PoPageBlockedUserReasonDefault;\n  }\n\n  get reason() {\n    return this._reason;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caminho para a logomarca localizada no rodapÃ©.\n   */\n  @Input('p-secondary-logo') secondaryLogo?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * URL para a aÃ§Ã£o de retorno da pÃ¡gina.\n   *\n   * @default `/`\n   */\n  @Input('p-url-back') set urlBack(url: string) {\n    this._urlBack = url;\n  }\n\n  get urlBack() {\n    return this._urlBack;\n  }\n\n}\n","import { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\nimport { browserLanguage, isExternalLink, poLocaleDefault } from '../../utils/util';\n\nimport { PoPageBlockedUserBaseComponent } from './po-page-blocked-user-base.component';\n\nexport const poPageBlockedUserButtonLiterals: Object = {\n  en: <any> {\n    primaryButton: 'Back to home screen',\n  },\n  es: <any> {\n    primaryButton: 'Volver al inicio',\n  },\n  pt: <any> {\n    primaryButton: 'Voltar para o inÃ­cio',\n  },\n  ru: <any> {\n    primaryButton: 'ÐÐµÑÐµÐ¹ÑÐ¸ Ðº Ð½Ð°ÑÐ°Ð»Ñ ÑÑÑÐ°Ð½Ð¸ÑÑ',\n  }\n};\n\n/**\n * @docsExtends PoPageBlockedUserBaseComponent\n *\n * @example\n *\n * <example name=\"po-page-blocked-user-basic\" title=\"Portinari Page Blocked User Basic\">\n *  <file name=\"sample-po-page-blocked-user-basic/sample-po-page-blocked-user-basic.component.html\"> </file>\n *  <file name=\"sample-po-page-blocked-user-basic/sample-po-page-blocked-user-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-blocked-user-labs\" title=\"Portinari Page Blocked User Labs\">\n *  <file name=\"sample-po-page-blocked-user-labs/sample-po-page-blocked-user-labs.component.html\"> </file>\n *  <file name=\"sample-po-page-blocked-user-labs/sample-po-page-blocked-user-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-blocked-user-exceeded-attempts\" title=\"Portinari Page Blocked User Exceeded Attempts\">\n *  <file name=\"sample-po-page-blocked-user-exceeded-attempts/sample-po-page-blocked-user-exceeded-attempts.component.html\"> </file>\n *  <file name=\"sample-po-page-blocked-user-exceeded-attempts/sample-po-page-blocked-user-exceeded-attempts.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-blocked-user-expired-password\" title=\"Portinari Page Blocked User Expired Password\">\n *  <file name=\"sample-po-page-blocked-user-expired-password/sample-po-page-blocked-user-expired-password.component.html\"> </file>\n *  <file name=\"sample-po-page-blocked-user-expired-password/sample-po-page-blocked-user-expired-password.component.ts\"> </file>\n * </example>\n */\n\n@Component({\n  selector: 'po-page-blocked-user',\n  templateUrl: './po-page-blocked-user.component.html'\n})\n\nexport class PoPageBlockedUserComponent extends PoPageBlockedUserBaseComponent implements OnInit {\n\n  literals = {\n    ...poPageBlockedUserButtonLiterals[poLocaleDefault],\n    ...poPageBlockedUserButtonLiterals[browserLanguage()],\n  };\n\n  constructor(private activatedRoute: ActivatedRoute, private router: Router) {\n    super();\n  }\n\n  ngOnInit() {\n    this.checkingForRouteMetadata(this.activatedRoute.snapshot.data);\n  }\n\n  navigateTo(url: string) {\n    isExternalLink(url) ?  window.open(url) : this.router.navigate([url || '/']);\n  }\n\n  private checkingForMetadataProperty(object, property) {\n    if (Object.prototype.hasOwnProperty.call(object, property)) {\n      return object[property];\n    }\n  }\n\n  private checkingForRouteMetadata(data) {\n    if (Object.keys(data).length !== 0) {\n      this.contactEmail = this.checkingForMetadataProperty(data, 'contactEmail') || this.contactEmail;\n      this.contactPhone = this.checkingForMetadataProperty(data, 'contactPhone') || this.contactPhone;\n      this.reason = this.checkingForMetadataProperty(data, 'reason') || this.reason;\n      this.urlBack = this.checkingForMetadataProperty(data, 'urlBack') || this.urlBack;\n    }\n  }\n\n}\n","import { AfterViewInit, ChangeDetectorRef, Component, ElementRef, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\n\nconst poPageBlockedUserContactItemMargin = 16;\n\n@Component({\n  selector: 'po-page-blocked-user-contacts',\n  templateUrl: './po-page-blocked-user-contacts.component.html'\n})\nexport class PoPageBlockedUserContactsComponent implements AfterViewInit, OnChanges {\n\n  literals: Object;\n  overflowItem: boolean = false;\n\n  private mailText: string;\n  private phoneText: string;\n\n  @Input('p-email') email: string;\n\n  @Input('p-phone') phone: string;\n\n  @ViewChild('contactGroup', { static: true }) contactGroup: ElementRef;\n\n  @ViewChild('mailItem', { static: true }) mailItem: ElementRef;\n\n  @ViewChild('phoneItem', { static: true }) phoneItem: ElementRef;\n\n  constructor(private changeDetector: ChangeDetectorRef) {}\n\n  ngAfterViewInit() {\n    this.checkContactItemWidth();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.email || changes.phone) {\n      this.checkContactItemWidth();\n    }\n  }\n\n  private checkContactItemWidth() {\n    if ( !this.email || !this.phone ) {\n      this.overflowItem = true;\n      return;\n    } else {\n      setTimeout(() => {\n        const phoneWidth = this.phoneItem.nativeElement.offsetWidth;\n        const mailWidth = this.mailItem.nativeElement.offsetWidth;\n        const contactGroupHalfWidth = this.contactGroup.nativeElement.offsetWidth / 2;\n\n        this.overflowItem = phoneWidth > contactGroupHalfWidth || mailWidth > contactGroupHalfWidth - poPageBlockedUserContactItemMargin;\n      });\n    }\n    this.changeDetector.detectChanges();\n  }\n\n}\n","export const poPageBlockedUserLiterals = {\n  none: {\n    pt: {\n      title: 'Opa!',\n      firstPhrase: 'Tivemos que bloquear essa tela temporariamente.',\n      secondPhrase: 'Mas nÃ£o se preocupe! Basta fazer seu login novamente.'\n    },\n    en: {\n      title: 'Oops!',\n      firstPhrase: 'We had to temporarily block this screen.',\n      secondPhrase: 'But do not worry! Just sign in again.'\n    },\n    es: {\n      title: 'Opa!',\n      firstPhrase: 'Tuvimos que bloquear esta pantalla temporalmente.',\n      secondPhrase: 'Â¡Pero no se preocupe! SÃ³lo tienes que iniciar sesiÃ³n de nuevo.'\n    },\n  },\n  exceededAttempts: {\n    pt: {\n      title:\n        'Opa!',\n      firstPhrase:\n        `Para sua seguranÃ§a, apÃ³s {0} tentativa(s) de senha seu usuÃ¡rio fica bloqueado e nÃ£o pode ser acessado em {1} hora(s) :( `,\n      secondPhrase:\n        'Isso Ã© para evitar que hackers invadam sua conta.',\n      thirdPhrase:\n        'Mas nÃ£o se preocupe! Se vocÃª for o dono da conta e apenas esqueceu sua senha, basta entrar em contato com o suporte.'\n    },\n    en: {\n      title:\n        'Oops!',\n      firstPhrase:\n        `For your security, after {0} attempt(s) of password\n        your user gets blocked and can not be accessed in {1} hour(s) :(`,\n      secondPhrase:\n        'This is to prevent hackers from hacking into your account.',\n      thirdPhrase:\n        'But do not worry! If you are the owner of the account and just forgot your password, just contact support.'\n    },\n    es: {\n      title:\n        'Opa!',\n      firstPhrase:\n        `Para su seguridad, despuÃ©s de {0} intento(s) de contraseÃ±a\n        su usuario queda bloqueado y no puede ser accedido en {1} hora(s) :(`,\n      secondPhrase:\n        'Esto es para evitar que los hackers invadan su cuenta.',\n      thirdPhrase:\n        `Â¡Pero no se preocupe! Si usted es el dueÃ±o de la cuenta\n        y acaba de olvidar su contraseÃ±a, simplemente pÃ³ngase en contacto con el soporte.`\n    }\n  },\n  expiredPassword: {\n    pt: {\n      title:\n        'Opa! Sua senha expirou',\n      firstPhrase:\n        `A cada {0} dia(s) Ã© preciso criar uma nova senha por questÃ£o de seguranÃ§a. ApÃ³s esses {0} dia(s) seu acesso Ã© bloqueado :(`,\n      secondPhrase:\n        'Mas nÃ£o se preocupe! Basta entrar em contato com o administrador do sistema.'\n    },\n    en: {\n      title:\n        'Oops! Your Password has expired',\n      firstPhrase:\n        `Every {0} day(s) you need to create a new password for security reasons.\n        After these {0} day(s) your access is blocked :(`,\n      secondPhrase:\n        'But do not worry! Just contact your system administrator.'\n    },\n    es: {\n      title:\n        'Opa! Su contraseÃ±a ha caducado',\n      firstPhrase:\n        `Cada {0} dÃ­a(s) es necesario crear una nueva contraseÃ±a por razones de seguridad.\n        DespuÃ©s de estos {0} dÃ­a(s) su acceso estÃ¡ bloqueado :(`,\n      secondPhrase:\n        'Â¡Pero no se preocupe! SÃ³lo tienes que ponerse en contacto con el administrador del sistema.'\n    }\n  }\n};\n","import { ChangeDetectorRef, Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\n\nimport { browserLanguage, poLocaleDefault } from '../../../utils/util';\n\nimport { poPageBlockedUserLiterals } from './../literals/i18n/po-page-blocked-user-literals';\nimport { PoPageBlockedUserReason } from '../enums/po-page-blocked-user-reason.enum';\nimport { PoPageBlockedUserReasonParams } from '../interfaces/po-page-blocked-user-reason-params.interface';\n\n@Component({\n  selector: 'po-page-blocked-user-reason',\n  templateUrl: './po-page-blocked-user-reason.component.html'\n})\nexport class PoPageBlockedUserReasonComponent implements OnChanges, OnInit {\n\n  literalParams;\n  literals: {title: string, firstPhrase: string, secondPhrase: string, thirdPhrase: string};\n\n  @Input('p-params') params: PoPageBlockedUserReasonParams;\n\n  @Input('p-reason') reason: PoPageBlockedUserReason;\n\n  constructor(private changeDetector: ChangeDetectorRef) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.reason || changes.params) {\n      this.getLiterals();\n    }\n  }\n\n  ngOnInit() {\n    this.getLiterals();\n  }\n\n  getImageByReasonType() {\n    let reasonImage;\n\n    switch (this.reason) {\n      case 'none': {\n        reasonImage = 'big-lock';\n        break;\n      }\n      case 'exceededAttempts': {\n        reasonImage = 'blocked-user';\n        break;\n      }\n      case 'expiredPassword': {\n        reasonImage = 'expired';\n        break;\n      }\n    }\n    return `./assets/images/${reasonImage}.svg`;\n  }\n\n  getParams() {\n    this.literalParams =\n      this.reason === 'expiredPassword' ? [this.params.days, this.params.days] : [this.params.attempts, this.params.hours];\n  }\n\n  private getLiterals() {\n    this.getParams();\n\n    this.literals = {\n      ...poPageBlockedUserLiterals[this.reason][poLocaleDefault],\n      ...poPageBlockedUserLiterals[this.reason][browserLanguage()],\n    };\n\n    this.changeDetector.detectChanges();\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoModule } from '@portinari/portinari-ui';\n\nimport { PoPageBackgroundModule } from '../po-page-background/index';\nimport { PoPageBlockedUserComponent } from './po-page-blocked-user.component';\nimport { PoPageBlockedUserContactsComponent } from './po-page-blocked-user-contacts/po-page-blocked-user-contacts.component';\nimport { PoPageBlockedUserReasonComponent } from './po-page-blocked-user-reason/po-page-blocked-user-reason.component';\n\n/**\n * @description\n *\n * MÃ³dulo do template do po-page-blocked-user.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n\n    PoModule,\n    PoPageBackgroundModule,\n  ],\n  declarations: [\n    PoPageBlockedUserComponent,\n    PoPageBlockedUserContactsComponent,\n    PoPageBlockedUserReasonComponent,\n  ],\n  exports: [\n    PoPageBlockedUserComponent,\n    PoPageBlockedUserContactsComponent,\n    PoPageBlockedUserReasonComponent,\n  ]\n})\nexport class PoPageBlockedUserModule { }\n","import { EventEmitter, Input, Output } from '@angular/core';\n\nimport { PoModalAction } from '@portinari/portinari-ui';\n\nimport { convertToBoolean, isExternalLink, isTypeof } from '../../utils/util';\n\nimport { PoPageChangePasswordRecovery } from './interfaces/po-page-change-password-recovery.interface';\nimport { PoPageChangePasswordRequirement } from './interfaces/po-page-change-password-requirement.interface';\n\n/**\n * @description\n *\n * O componente `po-page-change-password` Ã© utilizado como template para tela de cadastro ou alteraÃ§Ã£o de senha.\n *\n * Apresenta dicas e regras para senhas mais seguras e tambÃ©m possibilidade de personalizar o redirecionamento para as telas\n * 'esqueceu a senha', 'voltar' e 'entrar no sistema'. Os textos das telas sÃ£o prÃ©-definidos e imutÃ¡veis.\n *\n * A propriedade `p-url-new-password` automatiza a rotina do template e simplifica o processo de cadastro/alteraÃ§Ã£o de senha, bastando\n * definir uma url para POST das informaÃ§Ãµes digitadas pelo usuÃ¡rio.  A flexibilidade e praticidade podem chegar a um nÃ­vel em que o\n * desenvolvimento da aplicaÃ§Ã£o no *client side* Ã© desprovida de qualquer cÃ³digo-fonte relacionado Ã  rotina de cadastro/alteraÃ§Ã£o de senha.\n * Seu detalhamento para uso pode ser visto logo abaixo em *propriedades*.\n * Caso julgue necessÃ¡rio, pode-se tambÃ©m definir manualmente a rotina do componente.\n *\n * Para que as imagens sejam exibidas corretamente, Ã© necessÃ¡rio incluir o caminho delas ao projeto. Para isso, edite\n * o *assets* no arquivo **angular.json** da aplicaÃ§Ã£o na seguinte ordem:\n * ```\n *   \"assets\": [\n *     \"src/assets\",\n *     \"src/favicon.ico\",\n *     {\n *       \"glob\": \"**\\/*\",\n *       \"input\": \"node_modules/@portinari/style/images\",\n *       \"output\": \"assets/images\"\n *     }\n *   ]\n * ```\n */\nexport abstract class PoPageChangePasswordBaseComponent {\n\n  private _hideCurrentPassword: boolean = false;\n  private _recovery: string | PoPageChangePasswordRecovery | Function;\n  private _requirements: Array<PoPageChangePasswordRequirement> = [];\n  private _urlHome: string = '/';\n  protected validatorChange: any;\n\n  confirmPassword: string;\n  currentPassword: string;\n  modalAction: PoModalAction;\n  newPassword: string;\n  recoveryUrlType: string;\n  showRequirements: boolean;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Esconde o campo `Senha atual` para que o template seja para criaÃ§Ã£o de senha.\n   *\n   * @default `false`\n   */\n  @Input('p-hide-current-password') set hideCurrentPassword(value: boolean) {\n    this._hideCurrentPassword = convertToBoolean(value);\n  }\n\n  get hideCurrentPassword(): boolean {\n    return this._hideCurrentPassword;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caminho para a logomarca localizada na parte superior.\n   *\n   * > Caso seja indefinida o espaÃ§o se mantÃ©m preservado porÃ©m vazio.\n   */\n  @Input('p-logo') logo?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * URL para a aÃ§Ã£o do link `Esqueceu a senha`.\n   *\n   * A propriedade aceita os seguintes tipos:\n   *\n   * - **String**: informe uma url externa ou uma rota vÃ¡lida;\n   * - **Function**: pode-se customizar a aÃ§Ã£o. Para esta possilidade basta atribuir:\n   * ```\n   * <po-page-change-password>\n   *      [recovery]=\"this.myFunc.bind(this)\";\n   * </po-page-change-password>\n   * ```\n   *\n   * - **PoPageChangePasswordRecovery**: cria-se vÃ­nculo automÃ¡tico com o template **po-modal-password-recovery**.\n   *   O objeto deve conter a **url** para requisiÃ§Ã£o dos recursos e pode-se definir o **tipo** de modal para recuperaÃ§Ã£o de senha,\n   *   **email** para contato e **mÃ¡scara** do campo de telefone.\n   *\n   * > Caso nÃ£o tenha valor o link `Esqueceu a senha` desaparece.\n   */\n  @Input('p-recovery') set recovery(value: string | Function | PoPageChangePasswordRecovery) {\n    this._recovery = value;\n\n    if (isTypeof(value, 'string')) {\n      this.recoveryUrlType = isExternalLink(value) ? 'externalLink' : 'internalLink';\n    }\n  }\n\n  get recovery() {\n    return this._recovery;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Lista de regras para criaÃ§Ã£o e alteraÃ§Ã£o de senha.\n   */\n  @Input('p-requirements') set requirements(value: Array<PoPageChangePasswordRequirement>) {\n    this._requirements = value || [];\n    this.showRequirements = this._requirements.length > 0;\n  }\n  get requirements() {\n    return this._requirements;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caminho para a logomarca localizada no rodapÃ©.\n   */\n  @Input('p-secondary-logo') secondaryLogo?: string;\n\n  /**\n   * Token para solicitaÃ§Ã£o de troca/recuperaÃ§Ã£o de senha.\n   *\n   * > Esta propriedade serÃ¡ ignorada caso exista um token como parÃ¢metro na URL inicial do template.\n   */\n  @Input('p-token') token?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * URL para a aÃ§Ã£o de retorno da pÃ¡gina.\n   *\n   * > O botÃ£o `Voltar` aparece apenas para telas de alteraÃ§Ã£o de senha, ou seja, sÃ³ aparece se a propriedade `p-hide-current-password` for\n   * falsa.\n   *\n   * @default `/`\n   */\n  @Input('p-url-back') urlBack: string = '/';\n\n  /**\n   * Endpoint usado pelo template para realizar um POST. Quando preenchido, o mÃ©todo `p-submit` serÃ¡ ignorado e o componente adquirirÃ¡\n   * automatizaÃ§Ã£o para o processo de cadastro/troca de senha.\n   *\n   * ### Processo\n   * Ao digitar um valor vÃ¡lido nos campos de senha e pressionar **salvar**,\n   * o componente farÃ¡ uma requisiÃ§Ã£o `POST` na url especificada nesta propriedade passando o objeto contendo os valores definidos pelo\n   * usuÃ¡rio.\n   *\n   * ```\n   * body {\n   *  token?: token,\n   *  oldPassword?: oldPassword,\n   *  newPassword: newPassword\n   * }\n   * ```\n   *\n   * O cÃ³digo de resposta HTTP de status esperado Ã© `204`.\n   *\n   * Em caso de **sucesso**, serÃ¡ exibida a modal de confirmaÃ§Ã£o de senha alterada.\n   *\n   * > O token serÃ¡ informado pela propriedade `p-token`do componente ou por um *query parameter* na URL do template.\n   *\n   * *Processo finalizado.*\n   *\n   * _______________\n   *\n   * #### Praticidade\n   * As informaÃ§Ãµes do serviÃ§o de autenticaÃ§Ã£o tambÃ©m podem ser transmitidas diretamente pelas configuraÃ§Ã£os de rota e, desta maneira,\n   * dispensa-se qualquer menÃ§Ã£o e/ou importaÃ§Ã£o do componente `po-page-change-password` no restante da aplicaÃ§Ã£o. O exemplo abaixo\n   * exemplifica a forma dinÃ¢mica com a qual o template de tela de troca de senha pode ser gerado ao navegar para rota `/change-password`, e\n   * tambÃ©m como ele se comunica com o serviÃ§o para efetuaÃ§Ã£o do processo de troca de senha do usuÃ¡rio e solicitaÃ§Ã£o de nova senha.\n   * Basta definir nas configuraÃ§Ãµes de rota:\n   *\n   *\n   * ```\n   *   import { PoModalPasswordRecoveryType, PoPageChangePasswordComponent } from '@portinari/portinari-templates';\n   *\n   *   ...\n   *   const routes: Routes = [\n   *     {\n   *       path: 'change-password', component: PoPageChangePasswordComponent, data: {\n   *         serviceApi: 'https://portinari.io/sample/api/new-password',\n   *         recovery: {\n   *           url: 'https://portinari.io/sample/api/users',\n   *           type: PoModalPasswordRecoveryType.All,\n   *           contactMail: 'dev.portinari@portinari.com',\n   *           phoneMask: '9-999-999-9999'\n   *         }\n   *       }\n   *     }\n   *     ...\n   *   ];\n   *\n   *   @NgModule({\n   *     imports: [RouterModule.forRoot(routes)],\n   *     exports: [RouterModule]\n   *   })\n   *   export class AppRoutingModule { }\n   * ```\n   *\n   *\n   * O metadado `serviceApi` deve ser a **url** para requisiÃ§Ã£o dos recursos de troca de senha. E `recovery` Ã© a interface\n   * `PoPageChangePasswordRecovery` responsÃ¡vel pelas especificaÃ§Ãµes contidas na modal de recuperaÃ§Ã£o de senha.\n   *\n   * > Ã essencial que siga a nomenclatura dos atributos exemplificados acima para sua efetiva funcionalidade.\n   *\n   */\n  @Input('p-url-new-password') urlNewPassword?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * URL para a aÃ§Ã£o do botÃ£o `Entrar no sistema` da modal de confirmaÃ§Ã£o que aparece apÃ³s salvar a senha ou se chamada pelo mÃ©todo\n   * `openConfirmation`.\n   *\n   * @default `/`\n   */\n  @Input('p-url-home') set urlHome(value: string) {\n    this._urlHome = value;\n    this.modalAction.action = this.navigateTo.bind(this, this.urlHome);\n  }\n  get urlHome() {\n    return this._urlHome;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * FunÃ§Ã£o executada ao submeter o form pelo botÃ£o salvar.\n   *\n   * Caso definida essa funÃ§Ã£o, a modal de confirmaÃ§Ã£o nÃ£o aparece, mas pode ser chamada pelo\n   * mÃ©todo `openConfirmation`. Exemplo:\n   *\n   * ```\n   * @ViewChild(PoPageChangePasswordComponent) changePassword: PoPageChangePasswordComponent;\n   *\n   * onSubmit() {\n   *  this.changePassword.openConfirmation();\n   * }\n   *\n   * ```\n   * > Esta propriedade serÃ¡ ignorada se for definido valor para a propriedade `p-url-new-password`.\n   */\n  @Output('p-submit') submit: EventEmitter<any> = new EventEmitter();\n\n  abstract navigateTo(url: string): void;\n\n}\n","export const poPageChangePasswordLiterals = {\n  en: <any> {\n    backButton: 'Back',\n    confirmPassword: 'Confirm password',\n    createNewPassword: 'Create new password',\n    createNewPasswordPhrase: 'Protect your account with a personal password created by you',\n    currentPassword: 'Current password',\n    enterSystemButton: 'Enter the system',\n    forgotPassword: 'Forgot your password?',\n    newPassword: 'New password',\n    passwordSuccessfullyCreated: 'Password successfully created!',\n    passwordSuccessfullyUpdated: 'Password successfully updated!',\n    requirements: 'Password requirements',\n    safetyTips: 'Safety tips!',\n    safetyTipsFirst: 'is used in other accounts;',\n    safetyTipsPhrase: 'Avoid a password that:',\n    safetyTipsSecond: 'has personal information like your name, nickname or family names;',\n    safetyTipsThird: 'that uses obvious sequences like \"123\" or obvious words like \"password\";',\n    saveButton: 'Save',\n  },\n  es: <any> {\n    backButton: 'Volver',\n    confirmPassword: 'Confirmar seÃ±a',\n    createNewPassword: 'Crear nueva contraseÃ±a',\n    createNewPasswordPhrase: 'Proteger su cuenta con una contraseÃ±a personal creada por usted',\n    currentPassword: 'ContraseÃ±a actual',\n    enterSystemButton: 'Entrar en el sistema',\n    forgotPassword: 'Â¿Olvidaste tu contraseÃ±a?',\n    newPassword: 'Nueva contraseÃ±a',\n    passwordSuccessfullyCreated: 'ContraseÃ±a creada correctamente!',\n    passwordSuccessfullyUpdated: 'ContraseÃ±a correctamente actualizada!',\n    requirements: 'Requisitos de contraseÃ±a',\n    safetyTips: 'Consejos de seguridad!',\n    safetyTipsFirst: 'se utilice en otras cuentas;',\n    safetyTipsPhrase: 'Evite una contraseÃ±a que:',\n    safetyTipsSecond: 'utiliza informaciÃ³n personal como su nombre, apellido o nombre de familia;',\n    safetyTipsThird: 'utilice secuencias muy obvias como \"1234\" o \"abcd\" o palabras obvias como \"contraseÃ±a\";',\n    saveButton: 'Guardar',\n  },\n  pt: <any> {\n    backButton: 'Voltar',\n    confirmPassword: 'Confirmar senha',\n    createNewPassword: 'Criar nova senha',\n    createNewPasswordPhrase: 'Proteja sua conta com uma senha pessoal criada por vocÃª',\n    currentPassword: 'Senha atual',\n    enterSystemButton: 'Entrar no sistema',\n    forgotPassword: 'Esqueceu sua senha?',\n    newPassword: 'Nova senha',\n    passwordSuccessfullyCreated: 'Senha criada com sucesso!',\n    passwordSuccessfullyUpdated: 'Senha alterada com sucesso!',\n    requirements: 'Requisitos de senha',\n    safetyTips: 'Dicas de seguranÃ§a!',\n    safetyTipsFirst: 'seja usada em outras contas;',\n    safetyTipsPhrase: 'Evite uma senha que:',\n    safetyTipsSecond: 'usa informaÃ§Ãµes pessoais como seu nome, apelido ou nome de familiares;',\n    safetyTipsThird: 'use sequÃªncias muito Ã³bvias como \"1234\" ou \"abcd\" ou palavras Ã³bvias como âsenhaâ;',\n    saveButton: 'Salvar',\n  },\n  ru: <any> {\n    backButton: 'Ð²Ð¾Ð·Ð²ÑÐ°ÑÐµÐ½Ð¸Ðµ',\n    confirmPassword: 'ÐÐ¾Ð´ÑÐ²ÐµÑÐ´Ð¸ÑÐµ Ð¿Ð°ÑÐ¾Ð»Ñ',\n    createNewPassword: 'Ð¡Ð¾Ð·Ð´Ð°ÑÑ Ð½Ð¾Ð²ÑÐ¹ Ð¿Ð°ÑÐ¾Ð»Ñ',\n    createNewPasswordPhrase: 'ÐÐ°ÑÐ¸ÑÐ¸ÑÐµ ÑÐ²Ð¾Ð¹ Ð°ÐºÐºÐ°ÑÐ½Ñ Ñ Ð¿Ð¾Ð¼Ð¾ÑÑÑ Ð»Ð¸ÑÐ½Ð¾Ð³Ð¾ Ð¿Ð°ÑÐ¾Ð»Ñ.',\n    currentPassword: 'Ð¢ÐµÐºÑÑÐ¸Ð¹ Ð¿Ð°ÑÐ¾Ð»Ñ',\n    enterSystemButton: 'ÐÑÐ¾Ð´ Ð² ÑÐ¸ÑÑÐµÐ¼Ñ',\n    forgotPassword: 'ÐÐ°Ð±ÑÐ»Ð¸ Ð¿Ð°ÑÐ¾Ð»Ñ?',\n    newPassword: 'ÐÐ¾Ð²ÑÐ¹ Ð¿Ð°ÑÐ¾Ð»Ñ',\n    passwordSuccessfullyCreated: 'ÐÐ°ÑÐ¾Ð»Ñ ÑÑÐ¿ÐµÑÐ½Ð¾ ÑÐ¾Ð·Ð´Ð°Ð½!',\n    passwordSuccessfullyUpdated: 'ÐÐ°ÑÐ¾Ð»Ñ ÑÑÐ¿ÐµÑÐ½Ð¾ Ð¸Ð·Ð¼ÐµÐ½ÐµÐ½!',\n    requirements: 'Ð¢ÑÐµÐ±Ð¾Ð²Ð°Ð½Ð¸Ñ Ðº Ð¿Ð°ÑÐ¾Ð»Ñ',\n    safetyTips: 'Ð¡Ð¾Ð²ÐµÑÑ Ð¿Ð¾ Ð±ÐµÐ·Ð¾Ð¿Ð°ÑÐ½Ð¾ÑÑÐ¸!',\n    safetyTipsFirst: 'Ð¸ÑÐ¿Ð¾Ð»ÑÐ·Ð¾Ð²Ð°ÑÑÑÑ Ð½Ð° Ð´ÑÑÐ³Ð¸Ñ ÑÑÐµÑÐ°Ñ;',\n    safetyTipsPhrase: 'ÐÐ·Ð±ÐµÐ³Ð°Ð¹ÑÐµ Ð¿Ð°ÑÐ¾Ð»Ñ, ÐºÐ¾ÑÐ¾ÑÑÐ¹:',\n    safetyTipsSecond: 'Ð¸ÑÐ¿Ð¾Ð»ÑÐ·ÑÐµÑ Ð»Ð¸ÑÐ½ÑÑ Ð¸Ð½ÑÐ¾ÑÐ¼Ð°ÑÐ¸Ñ, ÑÐ°ÐºÑÑ ââÐºÐ°Ðº Ð²Ð°ÑÐµ Ð¸Ð¼Ñ, ÑÐ°Ð¼Ð¸Ð»Ð¸Ñ Ð¸Ð»Ð¸ ÑÐ°Ð¼Ð¸Ð»Ð¸Ñ;',\n    safetyTipsThird: 'Ð¸ÑÐ¿Ð¾Ð»ÑÐ·ÑÐ¹ÑÐµ Ð¾ÑÐµÐ½Ñ Ð¾ÑÐµÐ²Ð¸Ð´Ð½ÑÐµ ÑÑÑÐ¾ÐºÐ¸, ÑÐ°ÐºÐ¸Ðµ ÐºÐ°Ðº \"1234\" Ð¸Ð»Ð¸ \"abcd\", Ð¸Ð»Ð¸ ÑÐ°ÐºÐ¸Ðµ Ð¾ÑÐµÐ²Ð¸Ð´Ð½ÑÐµ ÑÐ»Ð¾Ð²Ð°, ÐºÐ°Ðº \"Ð¿Ð°ÑÐ¾Ð»Ñ\";',\n    saveButton: 'ÑÐºÐ¾Ð½Ð¾Ð¼Ð¸ÑÑ',\n  }\n};\n","import { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { HttpClient, HttpResponse } from '@angular/common/http';\n\n@Injectable()\nexport class PoPageChangePasswordService {\n\n  constructor(private http: HttpClient) {}\n\n  post(url: string, item: any): Observable<HttpResponse<Object>> {\n    return this.http.post<any>(url, item, { observe: 'response' });\n  }\n}\n","import { AfterViewInit, Component, ComponentRef, OnDestroy, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { Subscription } from 'rxjs';\n\nimport { PoComponentInjectorService, PoModalAction, PoModalComponent } from '@portinari/portinari-ui';\n\nimport { browserLanguage, isExternalLink, isTypeof, poLocaleDefault } from '../../utils/util';\n\nimport { PoModalPasswordRecoveryComponent } from '../po-modal-password-recovery/po-modal-password-recovery.component';\nimport { PoModalPasswordRecoveryType } from '../po-modal-password-recovery/enums/po-modal-password-recovery-type.enum';\nimport { PoPageChangePassword } from './interfaces/po-page-change-password.interface';\nimport { PoPageChangePasswordBaseComponent } from './po-page-change-password-base.component';\nimport { poPageChangePasswordLiterals } from './literals/i18n/po-page-change-password-literals';\nimport { PoPageChangePasswordRecovery } from './interfaces/po-page-change-password-recovery.interface';\nimport { PoPageChangePasswordRequirement } from './interfaces/po-page-change-password-requirement.interface';\nimport { PoPageChangePasswordService } from './po-page-change-password.service';\n\n/**\n * @docsExtends PoPageChangePasswordBaseComponent\n *\n * @example\n *\n * <example name=\"po-page-change-password-basic\" title=\"Portinari Page Change Password Basic\">\n *  <file name=\"sample-po-page-change-password-basic/sample-po-page-change-password-basic.component.html\"> </file>\n *  <file name=\"sample-po-page-change-password-basic/sample-po-page-change-password-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-change-password-labs\" title=\"Portinari Page Change Password Labs\">\n *  <file name=\"sample-po-page-change-password-labs/sample-po-page-change-password-labs.component.html\"> </file>\n *  <file name=\"sample-po-page-change-password-labs/sample-po-page-change-password-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-change-password-modify\" title=\"Portinari Page Change Password Modify\">\n *  <file name=\"sample-po-page-change-password-modify/sample-po-page-change-password-modify.component.html\"> </file>\n *  <file name=\"sample-po-page-change-password-modify/sample-po-page-change-password-modify.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-change-password-create\" title=\"Portinari Page Change Password Create\">\n *  <file name=\"sample-po-page-change-password-create/sample-po-page-change-password-create.component.html\"> </file>\n *  <file name=\"sample-po-page-change-password-create/sample-po-page-change-password-create.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-change-password-request\" title=\"Portinari Page Change Password Request\">\n *  <file name=\"sample-po-page-change-password-request/sample-po-page-change-password-request.component.html\"> </file>\n *  <file name=\"sample-po-page-change-password-request/sample-po-page-change-password-request.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-page-change-password',\n  templateUrl: './po-page-change-password.component.html'\n})\n\nexport class PoPageChangePasswordComponent extends PoPageChangePasswordBaseComponent implements AfterViewInit, OnDestroy, OnInit {\n\n  private newPasswordSubscription: Subscription;\n\n  readonly literals: { backButton: string, confirmPassword: string, createNewPassword: string, createNewPasswordPhrase: string,\n    currentPassword: string, enterSystemButton: string, forgotPassword: string, newPassword: string, passwordSuccessfullyCreated: string,\n    passwordSuccessfullyUpdated: string, requirements: string, safetyTips: string, safetyTipsPhrase: string, safetyTipsFirst: string,\n    safetyTipsSecond: string, safetyTipsThird: string, saveButton: string } =\n    {\n      ...poPageChangePasswordLiterals[poLocaleDefault],\n      ...poPageChangePasswordLiterals[browserLanguage()],\n    };\n\n  private componentRef: ComponentRef<any> = null;\n\n  modalAction: PoModalAction = {\n    action: this.navigateTo.bind(this, this.urlHome),\n    label: this.literals.enterSystemButton\n  };\n\n  parentRef: any;\n\n  @ViewChild(PoModalComponent, { static: true }) modal: PoModalComponent;\n  @ViewChild('pageChangePassword', { read: ViewContainerRef, static: true }) pageChangePassword: ViewContainerRef;\n  @ViewChild('passwordForm', { read: NgForm, static: true }) passwordForm: NgForm;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private route: ActivatedRoute,\n    private router: Router,\n    private service: PoPageChangePasswordService,\n    private poComponentInjector: PoComponentInjectorService,\n    viewRef: ViewContainerRef) {\n      super();\n      this.parentRef = viewRef['_view']['component'];\n  }\n\n  ngAfterViewInit() {\n    if (this.urlNewPassword) {\n      this.subscribeToTokenParameter();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.newPasswordSubscription) {\n      this.newPasswordSubscription.unsubscribe();\n    }\n  }\n\n  ngOnInit() {\n    this.checkingForRouteMetadata(this.activatedRoute.snapshot.data);\n  }\n\n  navigateTo(url: string) {\n    isExternalLink(url) ?  window.open(url) : this.router.navigate([url || '/']);\n  }\n\n  onForgotPasswordClick(recovery): void {\n    if (isTypeof(recovery, 'function')) {\n      recovery();\n    } else {\n      this.createModalPasswordRecoveryComponent(recovery);\n    }\n  }\n\n  onLoginSubmit(): void {\n\n    const form = this.getLoginForm();\n\n    if (this.urlNewPassword) {\n      this.postUrlNewPassword(form);\n    } else if (this.submit && this.submit.observers.length) {\n      this.emitSubmit(form);\n    }\n  }\n\n  /**\n   * Abre uma modal de confirmaÃ§Ã£o com texto, imagem e botÃ£o que redireciona para o link definido na propriedade `p-url-home`\u001c\n   */\n  openConfirmation() {\n    this.modal.open();\n  }\n\n  validatePassword() {\n    const controls =  this.passwordForm.form.controls;\n    const controlConfirmPassword = controls['confirmPassword'];\n    const controlNewPassword = controls['newPassword'];\n\n    if (!this.newPassword) {\n      this.setFormErrors({'required': true}, [controlNewPassword]);\n    } else if (!this.confirmPassword) {\n      this.setFormErrors({'required': true}, [controlConfirmPassword]);\n    } else if (this.newPassword && this.confirmPassword && this.newPassword !== this.confirmPassword) {\n      this.setFormErrors({'equalPassword': true}, [controlNewPassword, controlConfirmPassword]);\n    }  else {\n      this.setFormErrors(null, [controlConfirmPassword, controlNewPassword]);\n    }\n\n    if (this.requirements.length && this.requirements.find(requirement =>  this.validateRequirement(requirement) === false)) {\n      this.setFormErrors({'requirement': true}, [controlNewPassword]);\n    }\n  }\n\n  validateRequirement(requirement: PoPageChangePasswordRequirement) {\n    return typeof requirement.status === 'function' ? requirement.status.call(this.parentRef, this.newPassword) : requirement.status;\n  }\n\n  private checkingForMetadataProperty(object, property) {\n    if (Object.prototype.hasOwnProperty.call(object, property)) {\n      return object[property];\n    }\n  }\n\n  private checkingForRouteMetadata(data) {\n    if (Object.keys(data).length !== 0) {\n      this.urlNewPassword = this.checkingForMetadataProperty(data, 'serviceApi') || this.urlNewPassword;\n      this.recovery = this.checkingForMetadataProperty(data, 'recovery') || this.recovery;\n      this.hideCurrentPassword = this.checkingForMetadataProperty(data, 'hideCurrentPassword') || this.hideCurrentPassword;\n    }\n  }\n\n  private createModalPasswordRecoveryComponent(recovery: PoPageChangePasswordRecovery) {\n    if (this.componentRef) {\n      this.poComponentInjector.destroyComponentInApplication(this.componentRef);\n    }\n\n    this.componentRef = this.poComponentInjector.createComponentInApplication(PoModalPasswordRecoveryComponent);\n    this.componentRef.instance.recovery = recovery.url;\n    this.componentRef.instance.contactEmail = recovery.contactMail;\n    this.componentRef.instance.phoneMask = recovery.phoneMask;\n    this.componentRef.instance.type = recovery.type || PoModalPasswordRecoveryType.Email;\n    this.componentRef.changeDetectorRef.detectChanges();\n    setTimeout(() => {\n      this.componentRef.instance.open();\n    });\n  }\n\n  private emitSubmit(form: PoPageChangePassword) {\n    this.submit.emit(form);\n  }\n\n  private getLoginForm(): PoPageChangePassword {\n    return {\n      currentPassword: this.currentPassword,\n      newPassword: this.newPassword\n    };\n  }\n\n  private postUrlNewPassword(form: PoPageChangePassword) {\n\n    form['token'] = this.token;\n\n    this.service.post(this.urlNewPassword, form).subscribe(response => {\n      if (response.status === 204) {\n        this.openConfirmation();\n      }\n    });\n  }\n\n  private setFormErrors(error: any, controls?: Array<any>) {\n    controls.forEach(control => {\n      control.setErrors(error);\n    });\n  }\n\n  private subscribeToTokenParameter() {\n    this.route.queryParams.subscribe(params => {\n      const token = params['token'];\n\n      if (token) {\n        this.token = token;\n      }\n    });\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoModule } from '@portinari/portinari-ui';\n\nimport { PoModalPasswordRecoveryComponent } from '../po-modal-password-recovery/po-modal-password-recovery.component';\nimport { PoPageBackgroundModule } from '../po-page-background/index';\nimport { PoPageChangePasswordComponent } from './po-page-change-password.component';\nimport { PoPageChangePasswordService } from './po-page-change-password.service';\n\n/**\n * @description\n *\n * MÃ³dulo do template do po-page-change-password.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n\n    PoModule,\n    PoPageBackgroundModule\n  ],\n  declarations: [\n    PoPageChangePasswordComponent\n  ],\n  entryComponents: [\n    PoModalPasswordRecoveryComponent\n  ],\n  providers: [\n    PoPageChangePasswordService\n  ],\n  exports: [\n    PoPageChangePasswordComponent\n  ]\n})\nexport class PoPageChangePasswordModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class PoPageDynamicService {\n\n  private endpoint = '/';\n\n  readonly headers: HttpHeaders = new HttpHeaders({\n    'X-PORTINARI-SCREEN-LOCK': 'true'\n  });\n\n  constructor(private http: HttpClient) { }\n\n  configServiceApi(config: { endpoint?: string } = {}) {\n    this.endpoint = config.endpoint;\n  }\n\n  getMetadata(type: string = 'list'): Observable<any> {\n    const key = `${this.endpoint}-${type}-metadata`;\n    const cache = JSON.parse(localStorage.getItem(key)) || {};\n\n    const url = `${this.endpoint}/metadata?type=${type}&version=${cache.version || ''}`;\n\n    return this.http.get(url).pipe(map((response: any) => {\n      if (response.version === cache.version) {\n        return cache;\n      }\n\n      localStorage.setItem(key, JSON.stringify(response));\n\n      return  { ...cache, ...response };\n    }));\n  }\n\n  // Deleta um Ãºnico recurso\n  deleteResource(id): Observable<any> {\n    return this.http.delete(`${this.endpoint}/${id}`, { headers: this.headers });\n  }\n\n  // Deleta recursos em lote\n  deleteResources(ids: Array<any>): Observable<any> {\n    return this.http.request('delete', `${this.endpoint}`, { headers: this.headers, body: ids } );\n  }\n\n  // Busca uma lista de recursos\n  getResources(params: {} = {}): Observable<any> {\n    return this.http.get(this.endpoint, { headers: this.headers, params });\n  }\n\n  // Busca um Ãºnico recurso\n  getResource(id): Observable<any> {\n    return this.http.get(`${this.endpoint}/${id}`, { headers: this.headers });\n  }\n\n  // Cria um recurso\n  createResource(resource): Observable<any> {\n    return this.http.post(`${this.endpoint}`, resource, { headers: this.headers });\n  }\n\n  // Atualiza um recurso\n  updateResource(id, resource): Observable<any> {\n    return this.http.put(`${this.endpoint}/${id}`, resource, { headers: this.headers });\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Route, Router, ActivatedRoute } from '@angular/router';\n\nimport * as util from '../../utils/util';\n\nimport { PoBreadcrumb, PoPageAction, PoDialogService, PoDialogConfirmOptions, PoNotificationService } from '@portinari/portinari-ui';\n\nimport { PoPageDynamicDetailActions } from './po-page-dynamic-detail-actions.interface';\nimport { PoPageDynamicDetailField } from './po-page-dynamic-detail-field.interface';\nimport { PoPageDynamicService } from './po-page-dynamic.service';\n\nexport const poPageDynamicDetailLiteralsDefault = {\n  en: {\n    pageActionEdit: 'Edit',\n    pageActionRemove: 'Delete',\n    pageActionBack: 'Back',\n    confirmRemoveTitle: 'Confirm delete',\n    confirmRemoveMessage: 'Are you sure you want to delete this record? You can not undo this action.',\n    removeNotificationSuccess: 'Item deleted successfully.',\n    registerNotFound: 'Register not found.'\n  },\n  es: {\n    pageActionEdit: 'Editar',\n    pageActionRemove: 'Borrar',\n    pageActionBack: 'Regreso',\n    confirmRemoveTitle: 'Confirmar la exclusiÃ³n',\n    confirmRemoveMessage: 'Â¿EstÃ¡ seguro de que desea eliminar este registro? No puede deshacer esta acciÃ³n.',\n    removeNotificationSuccess: 'Elemento eliminado con Ã©xito.',\n    registerNotFound: 'Registro no encontrado.'\n  },\n  pt: {\n    pageActionEdit: 'Editar',\n    pageActionRemove: 'Excluir',\n    pageActionBack: 'Voltar',\n    confirmRemoveTitle: 'Confirmar exclusÃ£o',\n    confirmRemoveMessage: 'Tem certeza de que deseja excluir esse registro? VocÃª nÃ£o poderÃ¡ desfazer essa aÃ§Ã£o.',\n    removeNotificationSuccess: 'Item excluÃ­do com sucesso.',\n    registerNotFound: 'Registro nÃ£o encontrado.'\n  }\n};\n\n/**\n * @description\n *\n * O `po-page-dynamic-detail` Ã© uma pÃ¡gina que serve para exibir registros em detalhes,\n * o mesmo tambÃ©m suporta metadados conforme especificado na documentaÃ§Ã£o.\n *\n * @example\n *\n * <example name=\"po-page-dynamic-detail-basic\" title=\"Portinari Page Dynamic Detail Basic\">\n *  <file name=\"sample-po-page-dynamic-detail-basic/sample-po-page-dynamic-detail-basic.component.html\"> </file>\n *  <file name=\"sample-po-page-dynamic-detail-basic/sample-po-page-dynamic-detail-basic.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-page-dynamic-detail',\n  templateUrl: './po-page-dynamic-detail.component.html',\n  providers: [ PoPageDynamicService ]\n})\nexport class PoPageDynamicDetailComponent implements OnInit {\n\n  private _actions: PoPageDynamicDetailActions = {};\n  private _autoRouter: boolean = false;\n  private _duplicates: Array<any> = [];\n  private _fields: Array<any> = [];\n  private _keys: Array<any> = [];\n  private _pageActions: Array<PoPageAction> = [];\n\n  literals = {\n    ...poPageDynamicDetailLiteralsDefault[util.poLocaleDefault],\n    ...poPageDynamicDetailLiteralsDefault[util.browserLanguage()]\n  };\n  model: any = {};\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define as aÃ§Ãµes da pÃ¡gina de acordo com a interface `PoPageDynamicDetailActions`.\n   */\n  @Input('p-actions') set actions(value: PoPageDynamicDetailActions) {\n    this._actions = this.isObject(value) ? value : {};\n\n    this._pageActions = this.getPageActions(this._actions);\n  }\n\n  /**\n   * @todo Validar rotas na mÃ£o pois se existir uma rota '**' o catch do navigation nÃ£o funciona.\n   *\n   * @optional\n   *\n   * @description\n   *\n   * Cria automaticamente as rotas de ediÃ§Ã£o (novo/duplicate) e detalhes caso as aÃ§Ãµes\n   * estejam definidas nas aÃ§Ãµes.\n   *\n   * > Para o correto funcionamento nÃ£o pode haver nenhum rota coringa (`**`) especificada.\n   *\n   * @default false\n   */\n  @Input('p-auto-router') set autoRouter(value: boolean) {\n    this._autoRouter = util.convertToBoolean(value);\n  }\n\n  get autoRouter(): boolean {\n    return this._autoRouter;\n  }\n\n  /** Objeto com propriedades do breadcrumb. */\n  @Input('p-breadcrumb') breadcrumb?: PoBreadcrumb = { items: [] };\n\n  /** Lista dos campos exibidos na pÃ¡gina. */\n  @Input('p-fields') set fields(value: Array<PoPageDynamicDetailField>) {\n    this._fields = Array.isArray(value) ? [...value] : [];\n\n    this._keys = this.getKeysByFields(this.fields);\n    this._duplicates = this.getDuplicatesByFields(this.fields);\n  }\n\n  get fields(): Array<PoPageDynamicDetailField> {\n    return this._fields;\n  }\n\n  /** TÃ­tulo da pÃ¡gina. */\n  @Input('p-title') title: string;\n\n  /**\n   * @description\n   *\n   * Endpoint usado pelo template para requisiÃ§Ã£o do recurso que serÃ£o exibido.\n   *\n   * Caso a aÃ§Ã£o `remove` estiver configurada, serÃ¡ feito uma requisiÃ§Ã£o de exclusÃ£o nesse mesmo endpoint passando os campos\n   * setados como `key: true`.\n   *\n   * > `DELETE {end-point}/{keys}`\n   *\n   * ```\n   *  <po-page-dynamic-detail\n   *    [p-actions]=\"{ remove: '/' }\"\n   *    [p-fields]=\"[ { property: 'id', key: true } ]\"\n   *    p-service=\"/api/po-samples/v1/people\"\n   *    ...>\n   *  </po-page-dynamic-detail>\n   * ```\n   *\n   * ResquisiÃ§Ã£o disparada, onde a propriedade `id` Ã© igual a 2:\n   *\n   * ```\n   *  DELETE /api/po-samples/v1/people/2 HTTP/1.1\n   *  Host: localhost:4000\n   *  Connection: keep-alive\n   *  Accept: application/json, text/plain\n   *  ...\n   * ```\n   *\n   * > Caso esteja usando metadados com o template, serÃ¡ disparado uma requisiÃ§Ã£o na inicializaÃ§Ã£o do template para buscar\n   * > os metadados da pÃ¡gina passando o tipo do metadado esperado e a versÃ£o cacheada pelo browser.\n   * >\n   * > `GET {end-point}/metadata?type=detail&version={version}`\n   */\n  @Input('p-service-api') serviceApi: string;\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private poNotification: PoNotificationService,\n    private poDialogService: PoDialogService,\n    private poPageDynamicService: PoPageDynamicService) {\n  }\n\n  ngOnInit(): void {\n    const paramId = this.activatedRoute.snapshot.params['id'];\n\n    if (this.activatedRoute.snapshot.data.serviceApi) {\n      this.serviceApi = this.activatedRoute.snapshot.data.serviceApi;\n\n      this.poPageDynamicService.configServiceApi({ endpoint: this.serviceApi });\n\n      this.loadMetadata(paramId);\n    } else {\n      this.poPageDynamicService.configServiceApi({ endpoint: this.serviceApi });\n\n      this.loadData(paramId);\n    }\n  }\n\n  get duplicates() {\n    return [...this._duplicates];\n  }\n\n  get keys() {\n    return [...this._keys];\n  }\n\n  get pageActions() {\n    return [...this._pageActions];\n  }\n\n  private confirmRemove(path) {\n    const confirmOptions: PoDialogConfirmOptions = {\n      title: this.literals.confirmRemoveTitle,\n      message: this.literals.confirmRemoveMessage,\n      confirm: this.remove.bind(this, path)\n    };\n\n    this.poDialogService.confirm(confirmOptions);\n  }\n\n  private formatUniqueKey(item) {\n    const keys = util.mapObjectByProperties(item, this.keys);\n\n    return util.valuesFromObject(keys).join('|');\n  }\n\n  private goBack(/*path*/) {\n    window.history.back();\n    // if (path) {\n    //   this.navigateTo({ path, component: PoPageDynamicEditComponent });\n    // } else {\n    //   window.history.back();\n    // }\n  }\n\n  private loadData(id) {\n    this.poPageDynamicService.getResource(id).toPromise().then(response => {\n      this.model = response;\n    }).catch(() => {\n      this.model = undefined;\n      this.actions = undefined;\n    });\n  }\n\n  private loadMetadata(id) {\n    this.poPageDynamicService.getMetadata('detail').toPromise().then(response => {\n      this.autoRouter = response.autoRouter;\n      this.actions = response.actions || {};\n      this.breadcrumb = response.breadcrumb || { items : [] };\n      this.fields = response.fields || [];\n      this.title = response.title;\n\n      this.loadData(id);\n    });\n  }\n\n  // @todo Validar rotas na mÃ£o pois se existir uma rota '**' o catch do navigation nÃ£o funciona.\n  private navigateTo(route: { path: string, component?, url?: string, params?: any }, forceStopAutoRouter: boolean = false) {\n    this.router.navigate([route.url || route.path], { queryParams: route.params })\n      .catch(() => {\n        if (forceStopAutoRouter || !this.autoRouter) {\n          return;\n        }\n\n        this.router.config.unshift(<Route>{\n          path: route.path, component: route.component, data: { serviceApi: this.serviceApi, autoRouter: true }\n        });\n\n        this.navigateTo(route, true);\n      });\n  }\n\n  private openEdit(path) {\n    const url = this.resolveUrl(this.model, path);\n\n    // this.navigateTo({ path, url, component: PoPageDynamicEditComponent });\n    this.navigateTo({ path, url });\n  }\n\n  private remove(path) {\n    const uniqueKey = this.formatUniqueKey(this.model);\n\n    this.poPageDynamicService.deleteResource(uniqueKey).toPromise().then(() => {\n      this.poNotification.success(this.literals.removeNotificationSuccess);\n\n      this.navigateTo({ path: path });\n      // this.navigateTo({ path: path, component: PoPageDynamicTableComponent });\n    });\n  }\n\n  private resolveUrl(item: any, path: string) {\n    const uniqueKey = this.formatUniqueKey(item);\n\n    return path.replace(/:id/g, uniqueKey);\n  }\n\n  private getPageActions(actions: PoPageDynamicDetailActions = {}): Array<PoPageAction> {\n    const pageActions = [];\n\n    if (actions.edit) {\n      pageActions.push({ label: this.literals.pageActionEdit, action: this.openEdit.bind(this, actions.edit) });\n    }\n\n    if (actions.remove) {\n      pageActions.push({ label: this.literals.pageActionRemove, action: this.confirmRemove.bind(this, actions.remove) });\n    }\n\n    if (actions.back === undefined || actions.back) {\n      pageActions.push({ label: this.literals.pageActionBack, action: this.goBack.bind(this, actions.back) });\n    }\n\n    return pageActions;\n  }\n\n  private getKeysByFields(fields: Array<any> = []) {\n    return fields.filter(field => field.key === true).map(field => field.property);\n  }\n\n  private getDuplicatesByFields(fields: Array<any> = []) {\n    return fields.filter(field => field.duplicate === true).map(field => field.property);\n  }\n\n  private isObject(value: any): boolean {\n    return !!value && typeof value === 'object' && !Array.isArray(value);\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoDynamicModule, PoModalModule, PoPageModule, PoWidgetModule } from '@portinari/portinari-ui';\n\nimport { PoPageDynamicDetailComponent } from './po-page-dynamic-detail.component';\n\n/**\n * @description\n *\n * MÃ³dulo do template do po-page-dynamic-detail.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n\n    PoDynamicModule,\n    PoModalModule,\n    PoPageModule,\n    PoWidgetModule\n  ],\n  declarations: [\n    PoPageDynamicDetailComponent\n  ],\n  exports: [\n    PoPageDynamicDetailComponent\n  ]\n})\nexport class PoPageDynamicDetailModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class PoPageDynamicService {\n\n  private endpoint = '/';\n  private metadata: string;\n\n  readonly headers: HttpHeaders = new HttpHeaders({\n    'X-PORTINARI-SCREEN-LOCK': 'true'\n  });\n\n  constructor(private http: HttpClient) { }\n\n  configServiceApi(config: { endpoint?: string, metadata?: string } = {}) {\n    this.endpoint = config.endpoint;\n    this.metadata = config.metadata || this.metadata;\n  }\n\n  getMetadata(type: string = 'list'): Observable<any> {\n    const key = `${this.endpoint}-${type}-metadata`;\n    const cache = JSON.parse(localStorage.getItem(key)) || {};\n    const metadataUrlBase = this.metadata || `${this.endpoint}/metadata`;\n\n    const url = `${metadataUrlBase}?type=${type}&version=${cache.version || ''}`;\n\n    return this.http.get(url).pipe(map((response: any) => {\n      if (response.version === cache.version) {\n        return cache;\n      }\n\n      localStorage.setItem(key, JSON.stringify(response));\n\n      return  { ...cache, ...response };\n    }));\n  }\n\n  // Deleta um Ãºnico recurso\n  deleteResource(id): Observable<any> {\n    return this.http.delete(`${this.endpoint}/${id}`, { headers: this.headers });\n  }\n\n  // Deleta recursos em lote\n  deleteResources(ids: Array<any>): Observable<any> {\n    return this.http.request('delete', `${this.endpoint}`, { headers: this.headers, body: ids } );\n  }\n\n  // Busca uma lista de recursos\n  getResources(params: {} = {}): Observable<any> {\n    return this.http.get(this.endpoint, { headers: this.headers, params });\n  }\n\n  // Busca um Ãºnico recurso\n  getResource(id): Observable<any> {\n    return this.http.get(`${this.endpoint}/${id}`, { headers: this.headers });\n  }\n\n  // Cria um recurso\n  createResource(resource): Observable<any> {\n    return this.http.post(`${this.endpoint}`, resource, { headers: this.headers });\n  }\n\n  // Atualiza um recurso\n  updateResource(id, resource): Observable<any> {\n    return this.http.put(`${this.endpoint}/${id}`, resource, { headers: this.headers });\n  }\n}\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { Observable } from 'rxjs';\n\nimport {\n  PoBreadcrumb,\n  PoDialogService,\n  PoDynamicFormComponent,\n  PoGridComponent,\n  PoGridRowActions,\n  PoNotificationService,\n  PoPageAction } from '@portinari/portinari-ui';\n\nimport * as util from './../../utils/util';\n\nimport { PoPageDynamicEditActions } from './interfaces/po-page-dynamic-edit-actions.interface';\nimport { PoPageDynamicEditField } from './interfaces/po-page-dynamic-edit-field.interface';\nimport { PoPageDynamicService } from './po-page-dynamic.service';\n\nexport const poPageDynamicEditLiteralsDefault = {\n  en: {\n    cancelConfirmMessage: 'Are you sure you want to cancel this operation?',\n    detailActionNew: 'New',\n    pageActionCancel: 'Cancel',\n    pageActionSave: 'Save',\n    pageActionSaveNew: 'Save and new',\n    registerNotFound: 'Register not found.',\n    saveNewNotificationSuccessSave: 'Resource successfully saved.',\n    saveNewNotificationSuccessUpdate: 'Resource successfully updated.',\n    saveNewNotificationWarning: 'Form must be filled out correctly.',\n    saveNotificationSuccessSave: 'Resource successfully saved.',\n    saveNotificationSuccessUpdate: 'Resource successfully updated.',\n    saveNotificationWarning: 'Form must be filled out correctly.',\n  },\n  es: {\n    cancelConfirmMessage: 'EstÃ¡ seguro de que desea cancelar esta operaciÃ³n?',\n    detailActionNew: 'Nuevo',\n    pageActionCancel: 'Cancelar',\n    pageActionSave: 'Guardar',\n    pageActionSaveNew: 'Guardar y nuevo',\n    registerNotFound: 'Registro no encontrado.',\n    saveNewNotificationSuccessSave: 'Recurso salvo con Ã©xito.',\n    saveNewNotificationSuccessUpdate: 'Recurso actualizado con Ã©xito.',\n    saveNewNotificationWarning: 'El formulario debe llenarse correctamente.',\n    saveNotificationSuccessSave: 'Recurso salvo con Ã©xito.',\n    saveNotificationSuccessUpdate: 'Recurso actualizado con Ã©xito.',\n    saveNotificationWarning: 'El formulario debe llenarse correctamente.',\n  },\n  pt: {\n    cancelConfirmMessage: 'Tem certeza que deseja cancelar esta operaÃ§Ã£o?',\n    detailActionNew: 'Novo',\n    pageActionCancel: 'Cancelar',\n    pageActionSave: 'Salvar',\n    pageActionSaveNew: 'Salvar e novo',\n    registerNotFound: 'Registro nÃ£o encontrado.',\n    saveNewNotificationSuccessSave: 'Recurso salvo com sucesso.',\n    saveNewNotificationSuccessUpdate: 'Recurso atualizado com sucesso.',\n    saveNewNotificationWarning: 'FormulÃ¡rio precisa ser preenchido corretamente.',\n    saveNotificationSuccessSave: 'Recurso salvo com sucesso.',\n    saveNotificationSuccessUpdate: 'Recurso atualizado com sucesso.',\n    saveNotificationWarning: 'FormulÃ¡rio precisa ser preenchido corretamente.',\n  }\n};\n\n/**\n * @description\n *\n * O `po-page-dynamic-edit` Ã© uma pÃ¡gina que pode servir para editar ou criar novos registros,\n * o mesmo tambÃ©m suporta metadados conforme especificado na documentaÃ§Ã£o.\n *\n * ### UtilizaÃ§Ã£o via rota\n *\n * Ao utilizar as rotas para carregar o template, o `page-dynamic-edit` disponibiliza propriedades para\n * poder especificar o endpoint dos dados e dos metadados. Exemplo de utilizaÃ§Ã£o:\n *\n * ```\n * {\n *   path: 'people',\n *   component: PoPageDynamicEditComponent,\n *   data: {\n *     serviceApi: 'http://localhost:3000/v1/people', // endpoint dos dados\n *     serviceMetadataApi: 'http://localhost:3000/v1/metadata' // endpoint dos metadados\n *   }\n * }\n * ```\n *\n * Para carregar com um recurso jÃ¡ existente, deve-se ser incluÃ­do um parÃ¢metro na rota chamado `id`:\n *\n * ```\n * {\n *   path: 'people/:id',\n *   component: PoPageDynamicEditComponent,\n *   data: {\n *     serviceApi: 'http://localhost:3000/v1/people', // endpoint dos dados\n *     serviceMetadataApi: 'http://localhost:3000/v1/metadata' // endpoint dos metadados\n *   }\n * }\n * ```\n *\n * A requisiÃ§Ã£o dos metadados Ã© feita na inicializaÃ§Ã£o do template para buscar os metadados da pÃ¡gina passando o\n * tipo do metadado esperado e a versÃ£o cacheada pelo browser.\n *\n * O formato esperado na resposta da requisiÃ§Ã£o estÃ¡ especificado na interface\n * [PoPageDynamicEditMetadata](/documentation/po-page-dynamic-edit#po-page-dynamic-edit-metadata). Por exemplo:\n *\n * ```\n *  {\n *   version: 1,\n *   title: 'Person edit',\n *   fields: [\n *     { property: 'id', key: true, disabled: true },\n *     { property: 'status' },\n *     { property: 'name' },\n *     { property: 'nickname' },\n *     { property: 'birthdate', label: 'Birth date' },\n *     { property: 'genre' },\n *     { property: 'city' },\n *     { property: 'country' }\n *   ]\n * }\n * ```\n *\n * > Caso o endpoint dos metadados nÃ£o seja especificado, serÃ¡ feito uma requisiÃ§Ã£o utilizando o `serviceApi` da seguinte forma:\n * ```\n * GET {end-point}/metadata?type=edit&version={version}\n * ```\n *\n * @example\n *\n * <example name=\"po-page-dynamic-edit-basic\" title=\"Portinari Page Dynamic Edit Basic\">\n *  <file name=\"sample-po-page-dynamic-edit-basic/sample-po-page-dynamic-edit-basic.component.html\"> </file>\n *  <file name=\"sample-po-page-dynamic-edit-basic/sample-po-page-dynamic-edit-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-dynamic-edit-user\" title=\"Portinari Page Dynamic Edit - User\">\n *  <file name=\"sample-po-page-dynamic-edit-user/sample-po-page-dynamic-edit-user.component.html\"> </file>\n *  <file name=\"sample-po-page-dynamic-edit-user/sample-po-page-dynamic-edit-user.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-dynamic-edit-master-detail\" title=\"Portinari Page Dynamic Edit - Master Detail\">\n *  <file name=\"sample-po-page-dynamic-edit-master-detail/sample-po-page-dynamic-edit-master-detail.component.html\"> </file>\n *  <file name=\"sample-po-page-dynamic-edit-master-detail/sample-po-page-dynamic-edit-master-detail.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-page-dynamic-edit',\n  templateUrl: './po-page-dynamic-edit.component.html',\n  providers: [ PoPageDynamicService ]\n})\nexport class PoPageDynamicEditComponent implements OnInit {\n\n  private _actions: PoPageDynamicEditActions = {};\n  private _autoRouter: boolean = false;\n  private _controlFields: Array<any> = [];\n  private _detailFields: Array<any> = [];\n  private _duplicates: Array<any> = [];\n  private _fields: Array<any> = [];\n  private _keys: Array<any> = [];\n  private _pageActions: Array<PoPageAction> = [];\n\n  literals = {\n    ...poPageDynamicEditLiteralsDefault[util.poLocaleDefault],\n    ...poPageDynamicEditLiteralsDefault[util.browserLanguage()]\n  };\n  model: any = {};\n\n  // beforeSave: return boolean\n  // afterSave\n  // beforeRemove: return boolean\n  // afterRemove\n  // beforeInsert: : return boolean\n  readonly detailActions: PoGridRowActions = { };\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * AÃ§Ãµes da pÃ¡gina.\n   */\n  @Input('p-actions') set actions(value: PoPageDynamicEditActions) {\n    this._actions = this.isObject(value) ? value : {};\n\n    this._pageActions = this.getPageActions(this._actions);\n  }\n\n  /**\n   * @todo Validar rotas na mÃ£o pois se existir uma rota '**' o catch do navigation nÃ£o funciona.\n   *\n   * @optional\n   *\n   * @description\n   *\n   * Cria automaticamente as rotas de ediÃ§Ã£o (novo/duplicate) e detalhes caso as aÃ§Ãµes\n   * estejam definidas nas aÃ§Ãµes.\n   *\n   * > Para o correto funcionamento nÃ£o pode haver nenhum rota coringa (`**`) especificada.\n   *\n   * @default false\n   */\n  @Input('p-auto-router') set autoRouter(value: boolean) {\n    this._autoRouter = util.convertToBoolean(value);\n  }\n\n  get autoRouter(): boolean {\n    return this._autoRouter;\n  }\n\n  /** Objeto com propriedades do breadcrumb. */\n  @Input('p-breadcrumb') breadcrumb?: PoBreadcrumb = { items: [] };\n\n  /** Lista dos campos usados na tabela e busca avanÃ§ada. */\n  @Input('p-fields') set fields(value: Array<PoPageDynamicEditField>) {\n    this._fields = Array.isArray(value) ? [...value] : [];\n\n    this._keys = this.getKeysByFields(this._fields);\n    this._duplicates = this.getDuplicatesByFields(this._fields);\n\n    this._controlFields = this.getControlFields(this._fields);\n    this._detailFields = this.getDetailFields(this._fields);\n  }\n\n  get fields(): Array<PoPageDynamicEditField> {\n    return this._fields;\n  }\n\n  /**\n   * @description\n   *\n   * Endpoint usado pelo template para requisiÃ§Ã£o do recurso que serÃ¡ exibido para ediÃ§Ã£o.\n   *\n   * Para as aÃ§Ãµes de `save` e `saveNew`, serÃ¡ feito uma requisiÃ§Ã£o de criaÃ§Ã£o nesse mesmo endpoint passando os valores\n   * preenchidos pelo usuÃ¡rio via payload.\n   *\n   * > `POST {end-point}`\n   *\n   * ```\n   *  <po-page-dynamic-edit\n   *    [p-actions]=\"{ save: '/', saveNew: 'new' }\"\n   *    [p-fields]=\"[ { property: 'name' }, { property: 'city' } ]\"\n   *    p-service=\"/api/po-samples/v1/people\"\n   *    ...>\n   *  </po-page-dynamic-edit>\n   * ```\n   *\n   * ResquisiÃ§Ã£o disparada, onde a propriedade `name` e `city` foram preenchidas:\n   *\n   * ```\n   *  POST /api/po-samples/v1/people HTTP/1.1\n   *  Host: localhost:4000\n   *  Connection: keep-alive\n   *  Accept: application/json, text/plain\n   *  ...\n   * ```\n   *\n   * Request payload:\n   *\n   * ```\n   * { \"name\": \"Fulano\", \"city\": \"Smallville\" }\n   * ```\n   *\n   * Caso queira que o template carregue um recurso jÃ¡ existente, deve-se ser incluÃ­do um parametro na rota chamado `id`.\n   *\n   * Exemplo de configuraÃ§Ã£o de rota:\n   *\n   * ```\n   *  RouterModule.forRoot([\n   *    ...\n   *    { path: 'edit/:id', component: PersonEditComponent },\n   *    ...\n   *  ],\n   * ```\n   *\n   * Baseado nisso, na inicializaÃ§Ã£o do template, serÃ¡ disparado uma requisiÃ§Ã£o para buscar o recurso que serÃ¡ editado.\n   *\n   * > `GET {end-point}/{id}`\n   *\n   * Nos mÃ©todos de `save` e `saveNew`, ao invÃ©s de um `POST`, serÃ¡ disparado um `PUT`.\n   *\n   * ResquisiÃ§Ã£o disparada, onde a propriedade `name` e `city` foram preenchidas / atualizadas, e o `id` da url Ã© 2:\n   *\n   * ```\n   *  PUT /api/po-samples/v1/people/2 HTTP/1.1\n   *  Host: localhost:4000\n   *  Connection: keep-alive\n   *  Accept: application/json, text/plain\n   *  ...\n   * ```\n   *\n   * Request payload:\n   *\n   * ```\n   * { \"name\": \"Fulano\", \"city\": \"Metropolis\" }\n   * ```\n   */\n  @Input('p-service-api') serviceApi: string;\n\n  /** TÃ­tulo da pÃ¡gina. */\n  @Input('p-title') title: string;\n\n  @ViewChild('dynamicForm', { static: false }) dynamicForm: PoDynamicFormComponent;\n  @ViewChild('gridDetail', { static: false }) gridDetail: PoGridComponent;\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private poNotification: PoNotificationService,\n    private poDialogService: PoDialogService,\n    private poPageDynamicService: PoPageDynamicService) {\n  }\n\n  ngOnInit(): void {\n    const paramId = this.activatedRoute.snapshot.params['id'];\n    const duplicate = this.activatedRoute.snapshot.queryParams['duplicate'];\n\n    const { serviceApi, serviceMetadataApi } = this.activatedRoute.snapshot.data;\n    this.serviceApi = serviceApi || this.serviceApi;\n    this.poPageDynamicService.configServiceApi({ endpoint: this.serviceApi, metadata: serviceMetadataApi });\n\n    if (serviceApi) {\n      this.loadMetadata(paramId, duplicate);\n    } else {\n      this.loadData(paramId, duplicate);\n    }\n  }\n\n  get duplicates() {\n    return [...this._duplicates];\n  }\n\n  get keys() {\n    return [...this._keys];\n  }\n\n  get pageActions() {\n    return [...this._pageActions];\n  }\n\n  get controlFields() {\n    return this._controlFields;\n  }\n\n  get detailFields() {\n    return this._detailFields;\n  }\n\n  detailActionNew() {\n    this.gridDetail.insertRow();\n  }\n\n  private cancel(path) {\n    if (this.dynamicForm && this.dynamicForm.form.dirty) {\n      this.poDialogService.confirm({\n        message: this.literals.cancelConfirmMessage,\n        title: this.literals.pageActionCancel,\n        confirm: this.goBack.bind(this, path)\n      });\n    } else {\n      this.goBack(path);\n    }\n  }\n\n  private formatUniqueKey(item) {\n    const keys = util.mapObjectByProperties(item, this.keys);\n\n    return util.valuesFromObject(keys).join('|');\n  }\n\n  private goBack(path) {\n    if (path) {\n      this.router.navigate([path]);\n    } else {\n      window.history.back();\n    }\n  }\n\n  private loadData(id, duplicate?) {\n    if (!id) {\n      try {\n        this.model = JSON.parse(duplicate) || {};\n      } catch {\n        this.model = {};\n      }\n\n      return;\n    }\n\n    this.poPageDynamicService.getResource(id).toPromise().then(response => {\n      this.model = response;\n    }).catch(() => {\n      this.model = undefined;\n      this.actions = undefined;\n      this._pageActions = [];\n    });\n  }\n\n  private loadMetadata(paramId: string | number, duplicate: string) {\n    const typeMetadata = paramId ? 'edit' : 'create';\n\n    this.poPageDynamicService.getMetadata(typeMetadata).toPromise().then(response => {\n      this.autoRouter = response.autoRouter;\n      this.actions = response.actions || {};\n      this.breadcrumb = response.breadcrumb || { items : [] };\n      this.fields = response.fields || [];\n      this.title = response.title;\n\n      this.loadData(paramId, duplicate);\n    });\n  }\n\n  private navigateTo(path: string) {\n    if (path) {\n      const url = this.resolveUrl(this.model, path);\n\n      this.router.navigate([url]);\n    } else {\n      window.history.back();\n    }\n  }\n\n  private resolveUrl(item: any, path: string) {\n    const uniqueKey = this.formatUniqueKey(item);\n\n    return path.replace(/:id/g, uniqueKey);\n  }\n\n  private save(path) {\n    if (this.dynamicForm.form.invalid) {\n      this.poNotification.warning(this.literals.saveNotificationWarning);\n      return;\n    }\n\n    const paramId = this.activatedRoute.snapshot.params['id'];\n\n    const saveOperation: Observable<any> = paramId\n      ? this.poPageDynamicService.updateResource(paramId, this.model)\n      : this.poPageDynamicService.createResource(this.model);\n\n    const msgSucess = paramId ? this.literals.saveNotificationSuccessUpdate : this.literals.saveNotificationSuccessSave;\n\n    saveOperation.toPromise().then(() => {\n      this.poNotification.success(msgSucess);\n\n      this.navigateTo(path);\n    });\n  }\n\n  private saveNew(path) {\n    if (this.dynamicForm.form.invalid) {\n      this.poNotification.warning(this.literals.saveNewNotificationWarning);\n      return;\n    }\n\n    const paramId = this.activatedRoute.snapshot.params['id'];\n\n    if (paramId) {\n      this.poPageDynamicService.updateResource(paramId, this.model)\n        .toPromise().then(() => {\n          this.poNotification.success(this.literals.saveNewNotificationSuccessUpdate);\n\n          this.navigateTo(path);\n        });\n    } else {\n      this.poPageDynamicService.createResource(this.model)\n        .toPromise().then(() => {\n          this.poNotification.success(this.literals.saveNewNotificationSuccessSave);\n\n          this.model = {};\n          this.dynamicForm.form.reset();\n        });\n    }\n  }\n\n  private getKeysByFields(fields: Array<any> = []) {\n    return fields.filter(field => field.key === true).map(field => field.property);\n  }\n\n  private getControlFields(fields: Array<any> = []) {\n    return fields.filter(field => field.type !== 'detail');\n  }\n\n  private getDetailFields(fields: Array<any> = []) {\n    return fields.filter(field => field.type === 'detail');\n  }\n\n  private getDuplicatesByFields(fields: Array<any> = []) {\n    return fields.filter(field => field.duplicate === true).map(field => field.property);\n  }\n\n  private getPageActions(actions: PoPageDynamicEditActions = {}): Array<PoPageAction> {\n    const pageActions = [{ label: this.literals.pageActionSave, action: this.save.bind(this, actions.save) }];\n\n    if (actions.saveNew) {\n      pageActions.push({ label: this.literals.pageActionSaveNew, action: this.saveNew.bind(this, actions.saveNew) });\n    }\n\n    if (actions.cancel === undefined || actions.cancel) {\n      pageActions.push({ label: this.literals.pageActionCancel, action: this.cancel.bind(this, actions.cancel) });\n    }\n\n    return pageActions;\n  }\n\n  private isObject(value: any): boolean {\n    return !!value && typeof value === 'object' && !Array.isArray(value);\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport {\n  PoButtonModule,\n  PoDividerModule,\n  PoDynamicModule,\n  PoGridModule,\n  PoPageModule,\n  PoWidgetModule\n} from '@portinari/portinari-ui';\n\nimport { PoPageDynamicEditComponent } from './po-page-dynamic-edit.component';\n\n/**\n * @description\n *\n * MÃ³dulo do template do po-page-dynamic-detail.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n\n    PoButtonModule,\n    PoDividerModule,\n    PoDynamicModule,\n    PoGridModule,\n    PoPageModule,\n    PoWidgetModule\n  ],\n  declarations: [\n    PoPageDynamicEditComponent\n  ],\n  exports: [\n    PoPageDynamicEditComponent\n  ]\n})\nexport class PoPageDynamicEditModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable, from } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { PoPageDynamicOptions, UrlOrPoCustomizationFunction } from './po-page-dynamic-options.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class PoPageCustomizationService {\n\n  constructor(private http: HttpClient) { }\n\n  getCustomOptions(origin: UrlOrPoCustomizationFunction, originalOption: PoPageDynamicOptions): Observable<PoPageDynamicOptions> {\n    return this.createObservable(origin).pipe(\n      map(newPageOptions => this.mergePageOptions(originalOption, newPageOptions))\n    );\n  }\n\n  changeOriginalOptionsToNewOptions<T, K>(objectToChange: T, newOptions: K) {\n    Object.keys(newOptions).forEach(key => {\n      const value = newOptions[key];\n      if (objectToChange[key]) {\n        if (Array.isArray(value)) {\n          objectToChange[key] = [...value];\n          return;\n        }\n        if ((typeof (value) === 'number' || typeof (value) === 'string')) {\n          objectToChange[key] = value;\n          return;\n        }\n        if (typeof (value) === 'object') {\n          objectToChange[key] = { ...value };\n        }\n      }\n    });\n  }\n\n  private createObservable(origin: UrlOrPoCustomizationFunction): Observable<PoPageDynamicOptions> {\n    if (typeof origin === 'string') {\n      return this.http.post<PoPageDynamicOptions>(origin, {});\n    }\n    return from(Promise.resolve(origin()));\n  }\n\n  private mergePageOptions(originalOption: PoPageDynamicOptions, newPageOptions: PoPageDynamicOptions): PoPageDynamicOptions {\n    const mergePageOptions: PoPageDynamicOptions = {\n      filters: this.mergeOptions(originalOption.filters, newPageOptions.filters, 'property'),\n      actions: this.mergeOptions(originalOption.actions, newPageOptions.actions, 'label'),\n      breadcrumb: newPageOptions.breadcrumb ? newPageOptions.breadcrumb : originalOption.breadcrumb,\n      title: newPageOptions.title ? newPageOptions.title : originalOption.title\n    };\n\n    Object.keys(mergePageOptions).forEach(key => !mergePageOptions[key] && delete mergePageOptions[key]);\n\n    return mergePageOptions;\n  }\n\n  private mergeOptions<T>(originalOptions: Array<T>, newOptions: Array<T>, filterProp: keyof T): Array<T> {\n\n    if (!originalOptions && !newOptions) {\n      return;\n    }\n    if (!newOptions) {\n      return originalOptions;\n    }\n    if (!originalOptions) {\n      return newOptions;\n    }\n\n    const deduplicateNewOptions = newOptions.filter(\n      newItem => !originalOptions.find(originalItem => originalItem[filterProp] === newItem[filterProp]));\n    const mergedOriginalOptions = originalOptions.map(originalItem => {\n        const newItem = newOptions.find(newOptionsItem => originalItem[filterProp] === newOptionsItem[filterProp]) || originalItem;\n        return {...originalItem, ...newItem};\n      }\n    );\n\n    return [...mergedOriginalOptions, ...deduplicateNewOptions];\n  }\n}\n","import { HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoPageCustomizationService } from './po-page-customization.service';\n\n/**\n * @description\n *\n * MÃ³dulo do serviÃ§o do po-page-customization-service.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  providers: [\n    PoPageCustomizationService\n  ]\n})\nexport class PoPageCustomizationModule { }\n","import { EventEmitter, Input, Output, ViewChild } from '@angular/core';\n\nimport { PoDynamicFormField, PoLanguageService, PoModalAction, PoModalComponent } from '@portinari/portinari-ui';\n\nimport { poLocaleDefault } from '../../../utils/util';\n\nimport { PoAdvancedFilterLiterals } from './po-advanced-filter-literals.interface';\n\nexport const poAdvancedFiltersLiteralsDefault = {\n  en: <PoAdvancedFilterLiterals> {\n    title: 'Advanced search',\n    cancelLabel: 'Cancel',\n    confirmLabel: 'Apply filters'\n  },\n  es: <PoAdvancedFilterLiterals> {\n    title: 'BÃºsqueda avanzada',\n    cancelLabel: 'Cancelar',\n    confirmLabel: 'Aplicar filtros'\n  },\n  pt: <PoAdvancedFilterLiterals> {\n    title: 'Busca avanÃ§ada',\n    cancelLabel: 'Cancelar',\n    confirmLabel: 'Aplicar filtros'\n  },\n  ru: <PoAdvancedFilterLiterals> {\n    title: 'Ð Ð°ÑÑÐ¸ÑÐµÐ½Ð½ÑÐ¹ Ð¿Ð¾Ð¸ÑÐº',\n    cancelLabel: 'Ð¾ÑÐ¼ÐµÐ½Ð¸ÑÑ',\n    confirmLabel: 'ÐÑÐ¸Ð¼ÐµÐ½Ð¸ÑÑ ÑÐ¸Ð»ÑÑÑÑ'\n  }\n};\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Filtro de busca avanÃ§ada criado a partir de um formulÃ¡rio dinÃ¢mico.\n * Componente de uso interno.\n */\nexport class PoAdvancedFilterBaseComponent {\n\n  @ViewChild(PoModalComponent, { static: true }) poModal: PoModalComponent;\n\n  private _filters: Array<PoDynamicFormField> = [];\n  private _literals: PoAdvancedFilterLiterals;\n\n  filter = {};\n  language: string = poLocaleDefault;\n\n  primaryAction: PoModalAction = {\n    action: () => {\n      const models = this.getValuesFromForm();\n\n      this.searchEvent.emit(models);\n      this.poModal.close();\n    },\n    label: this.literals.confirmLabel\n  };\n\n  secondaryAction: PoModalAction = {\n    action: () => {\n      this.poModal.close();\n    },\n    label: this.literals.cancelLabel\n  };\n\n  /**\n   * ColeÃ§Ã£o de objetos que implementam a interface PoDynamicFormField, para definiÃ§Ã£o dos campos que serÃ£o criados\n   * dinamicamente.\n   */\n  @Input('p-filters') set filters(filters: Array<PoDynamicFormField>) {\n    this._filters = Array.isArray(filters) ? [...filters] : [];\n  }\n\n  get filters() {\n    return this._filters;\n  }\n\n  /** Objeto com as literais usadas no `po-advanced-filter`. */\n  @Input('p-literals') set literals(value: PoAdvancedFilterLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...poAdvancedFiltersLiteralsDefault[poLocaleDefault],\n        ...poAdvancedFiltersLiteralsDefault[this.language],\n        ...value\n      };\n    } else {\n      this._literals = poAdvancedFiltersLiteralsDefault[this.language];\n    }\n\n    this.primaryAction.label = this.literals.confirmLabel;\n    this.secondaryAction.label = this.literals.cancelLabel;\n  }\n\n  get literals() {\n    return this._literals || poAdvancedFiltersLiteralsDefault[this.language];\n  }\n\n  /** FunÃ§Ã£o que serÃ¡ disparada e receberÃ¡ os valores do formulÃ¡rio ao ser clicado no botÃ£o buscar. */\n  @Output('p-search-event') searchEvent = new EventEmitter<any>();\n\n  constructor(languageService: PoLanguageService) {\n    this.language = languageService.getShortLanguage();\n  }\n\n    // Retorna os models dos campos preenchidos\n  private getValuesFromForm() {\n    Object.keys(this.filter).forEach(property => {\n      if (this.filter[property] === undefined || this.filter[property] === '') {\n        delete this.filter[property];\n      }\n    });\n\n    return this.filter;\n  }\n\n}\n","import { Component, ViewChild } from '@angular/core';\n\nimport { PoDynamicFormComponent, PoLanguageService } from '@portinari/portinari-ui';\n\nimport { PoAdvancedFilterBaseComponent } from './po-advanced-filter-base.component';\n\n/**\n * @docsPrivate\n *\n * @docsExtends PoAdvancedFilterBaseComponent\n *\n * @examplePrivate\n *\n * <example-private name=\"po-advanced-filter\" title=\"Portinari Busca AvanÃ§ada\">\n *   <file name=\"sample-po-advanced-filter.component.html\"> </file>\n *   <file name=\"sample-po-advanced-filter.component.ts\"> </file>\n * </example-private>\n */\n@Component({\n  selector: 'po-advanced-filter',\n  templateUrl: './po-advanced-filter.component.html'\n})\nexport class PoAdvancedFilterComponent extends PoAdvancedFilterBaseComponent {\n\n  @ViewChild(PoDynamicFormComponent, { static: true }) poDynamicForm: PoDynamicFormComponent;\n\n  constructor(languageService: PoLanguageService) {\n    super(languageService);\n  }\n\n  open() {\n    this.filter = {};\n    this.poModal.open();\n  }\n\n}\n","import { EventEmitter, Input, Output } from '@angular/core';\n\nimport { PoBreadcrumb, PoDynamicFormField, PoLanguageService, PoPageAction } from '@portinari/portinari-ui';\n\nimport { poLocaleDefault } from '../../utils/util';\n\nimport { PoPageDynamicOptions } from './../../services/po-page-customization/po-page-dynamic-options.interface';\nimport { PoPageDynamicSearchLiterals } from './po-page-dynamic-search-literals.interface';\nimport { poAdvancedFiltersLiteralsDefault } from './po-advanced-filter/po-advanced-filter-base.component';\nimport { PoAdvancedFilterLiterals } from './po-advanced-filter/po-advanced-filter-literals.interface';\n\nexport const poPageDynamicSearchLiteralsDefault = {\n  en: <PoPageDynamicSearchLiterals> {\n    disclaimerGroupTitle: 'Displaying results filtered by:',\n    filterTitle: poAdvancedFiltersLiteralsDefault.en.title,\n    filterCancelLabel: poAdvancedFiltersLiteralsDefault.en.cancelLabel,\n    filterConfirmLabel: poAdvancedFiltersLiteralsDefault.en.confirmLabel,\n    quickSearchLabel: 'Quick search:',\n    searchPlaceholder: 'Search'\n  },\n  es: <PoPageDynamicSearchLiterals> {\n    disclaimerGroupTitle: 'Presentando resultados filtrados por:',\n    filterTitle: poAdvancedFiltersLiteralsDefault.es.title,\n    filterCancelLabel: poAdvancedFiltersLiteralsDefault.es.cancelLabel,\n    filterConfirmLabel: poAdvancedFiltersLiteralsDefault.es.confirmLabel,\n    quickSearchLabel: 'BÃºsqueda rÃ¡pida:',\n    searchPlaceholder: 'Buscar',\n  },\n  pt: <PoPageDynamicSearchLiterals> {\n    disclaimerGroupTitle: 'Apresentando resultados filtrados por:',\n    filterTitle: poAdvancedFiltersLiteralsDefault.pt.title,\n    filterCancelLabel: poAdvancedFiltersLiteralsDefault.pt.cancelLabel,\n    filterConfirmLabel: poAdvancedFiltersLiteralsDefault.pt.confirmLabel,\n    quickSearchLabel: 'Pesquisa rÃ¡pida:',\n    searchPlaceholder: 'Pesquisar'\n  },\n  ru: <PoPageDynamicSearchLiterals> {\n    disclaimerGroupTitle: 'ÐÑÐ¾Ð±ÑÐ°Ð¶ÐµÐ½Ð¸Ðµ ÑÐµÐ·ÑÐ»ÑÑÐ°ÑÐ¾Ð², Ð¾ÑÑÐ¸Ð»ÑÑÑÐ¾Ð²Ð°Ð½Ð½ÑÑ Ð¿Ð¾:',\n    filterTitle: poAdvancedFiltersLiteralsDefault.ru.title,\n    filterCancelLabel: poAdvancedFiltersLiteralsDefault.ru.cancelLabel,\n    filterConfirmLabel: poAdvancedFiltersLiteralsDefault.ru.confirmLabel,\n    quickSearchLabel: 'ÐÑÑÑÑÑÐ¹ Ð¿Ð¾Ð¸ÑÐº:',\n    searchPlaceholder: 'Ð¸ÑÑÐ»ÐµÐ´Ð¾Ð²Ð°Ð½Ð¸Ðµ'\n  },\n};\n\n/**\n * @description\n *\n * Componente com as aÃ§Ãµes de pesquisa jÃ¡ definidas, bastando que o desenvolvedor implemente apenas a chamada para as APIs\n * e exiba as informaÃ§Ãµes.\n */\nexport class PoPageDynamicSearchBaseComponent {\n\n  private _filters: Array<PoDynamicFormField> = [];\n  private _literals: PoPageDynamicSearchLiterals;\n\n  advancedFilterLiterals: PoAdvancedFilterLiterals;\n\n  private language: string;\n\n  /** Nesta propriedade deve ser definido um array de objetos que implementam a interface `PoPageAction`. */\n  @Input('p-actions') actions?: Array<PoPageAction> = [];\n\n  /** Objeto com propriedades do breadcrumb. */\n  @Input('p-breadcrumb') breadcrumb?: PoBreadcrumb = { items: [] };\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com as literais usadas no `po-page-dynamic-search`.\n   *\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\n   *\n   * ```\n   *  const customLiterals: PoPageDynamicSearchLiterals = {\n   *    disclaimerGroupTitle: 'Filtros aplicados:',\n   *    filterTitle: 'Filtro avanÃ§ado',\n   *    filterCancelLabel: 'Fechar',\n   *    filterConfirmLabel: 'Aplicar',\n   *    quickSearchLabel: 'Valor pesquisado:',\n   *    searchPlaceholder: 'Pesquise aqui'\n   *  };\n   * ```\n   *\n   * Ou passando apenas as literais que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: PoPageDynamicSearchLiterals = {\n   *    filterTitle: 'Filtro avanÃ§ado'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <po-page-dynamic-search\n   *   [p-literals]=\"customLiterals\">\n   * </po-page-dynamic-search>\n   * ```\n   *\n   * > O valor padrÃ£o serÃ¡ traduzido de acordo com o idioma configurado no [`PoI18nService`](/documentation/po-i18n) ou *browser*.\n   */\n  @Input('p-literals') set literals(value: PoPageDynamicSearchLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...poPageDynamicSearchLiteralsDefault[poLocaleDefault],\n        ...poPageDynamicSearchLiteralsDefault[this.language],\n        ...value\n      };\n    } else {\n      this._literals = poPageDynamicSearchLiteralsDefault[this.language];\n    }\n\n    this.setAdvancedFilterLiterals(this.literals);\n  }\n\n  get literals() {\n    return this._literals || poPageDynamicSearchLiteralsDefault[this.language];\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Lista dos campos usados na busca avanÃ§ada. Caso o mesmo nÃ£o seja passado a busca avanÃ§ada nÃ£o serÃ¡ exibida.\n   */\n  @Input('p-filters') set filters(filters: Array<PoDynamicFormField>) {\n    this._filters = Array.isArray(filters) ? [...filters] : [];\n  }\n\n  get filters(): Array<PoDynamicFormField> {\n    return this._filters;\n  }\n\n  /**\n   * FunÃ§Ã£o ou serviÃ§o que serÃ¡ executado na inicializaÃ§Ã£o do componente.\n   *\n   * A propriedade aceita os seguintes tipos:\n   * - `string`: *Endpoint* usado pelo componente para requisiÃ§Ã£o via `POST`.\n   * - `function`: MÃ©todo que serÃ¡ executado.\n   *\n   * O retorno desta funÃ§Ã£o deve ser do tipo `PoPageDynamicOptions`,\n   * onde o usuÃ¡rio poderÃ¡ customizar novos filtros, breadcrumb, title e actions\n   *\n   * Por exemplo:\n   *\n   * ```\n   * getPageOptions(): PoPageDynamicOptions {\n   * return {\n   *   actions: [\n   *     { label: 'Find on Google' },\n   *   ],\n   *   filters: [\n   *     { property: 'idCard', gridColumns: 6 }\n   *   ]\n   * };\n   * }\n   *\n   * ```\n   * Para referenciar a sua funÃ§Ã£o utilize a propriedade `bind`, por exemplo:\n   * ```\n   *  [p-load]=\"onLoadOptions.bind(this)\"\n   * ```\n   */\n  @Input('p-load') onLoad: string | (() => PoPageDynamicOptions );\n\n  /** TÃ­tulo da pÃ¡gina. */\n  @Input('p-title') title: string;\n\n  /**\n   * @description\n   *\n   * Evento disparado ao executar a pesquisa avanÃ§ada, o mesmo irÃ¡ repassar um objeto com os valores preenchidos no modal de pesquisa.\n   *\n   * > Campos nÃ£o preenchidos nÃ£o irÃ£o aparecer no objeto passado por parÃ¢metro.\n   */\n  @Output('p-advanced-search') advancedSearch?: EventEmitter<any> = new EventEmitter();\n\n  /** Evento disparado ao remover um ou todos os disclaimers pelo usuÃ¡rio. */\n  @Output('p-change-disclaimers') changeDisclaimers?: EventEmitter<any> = new EventEmitter();\n\n  /** Evento disparado ao realizar uma busca pelo campo de pesquisa rÃ¡pida, o mesmo serÃ¡ chamado repassando o valor digitado. */\n  @Output('p-quick-search') quickSearch?: EventEmitter<string> = new EventEmitter();\n\n  constructor(languageService: PoLanguageService) {\n    this.language = languageService.getShortLanguage();\n  }\n\n  protected setAdvancedFilterLiterals(literals: PoPageDynamicSearchLiterals) {\n    this.advancedFilterLiterals = {\n      cancelLabel: literals.filterCancelLabel,\n      confirmLabel: literals.filterConfirmLabel,\n      title: literals.filterTitle\n    };\n  }\n\n}\n","import { Component, ViewChild, OnInit, OnDestroy } from '@angular/core';\n\nimport { Observable, Subscription } from 'rxjs';\nimport { PoDisclaimerGroup, PoDynamicFieldType, PoDynamicFormField, PoLanguageService, PoPageFilter } from '@portinari/portinari-ui';\n\nimport { capitalizeFirstLetter, getBrowserLanguage } from '../../utils/util';\nimport { PoPageCustomizationService } from '../../services/po-page-customization/po-page-customization.service';\nimport { UrlOrPoCustomizationFunction, PoPageDynamicOptions } from '../../services/po-page-customization/po-page-dynamic-options.interface';\n\nimport { PoAdvancedFilterComponent } from './po-advanced-filter/po-advanced-filter.component';\nimport { PoPageDynamicSearchBaseComponent } from './po-page-dynamic-search-base.component';\n\n/**\n * @docsExtends PoPageDynamicSearchBaseComponent\n *\n * @example\n *\n * <example name=\"po-page-dynamic-search-basic\" title=\"Portinari Page Dynamic Search Basic\">\n *  <file name=\"sample-po-page-dynamic-search-basic/sample-po-page-dynamic-search-basic.component.html\"> </file>\n *  <file name=\"sample-po-page-dynamic-search-basic/sample-po-page-dynamic-search-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-dynamic-search-hiring-processes\" title=\"Portinari Page Dynamic Search - Hiring processes\">\n *  <file name=\"sample-po-page-dynamic-search-hiring-processes/sample-po-page-dynamic-search-hiring-processes.component.html\"> </file>\n *  <file name=\"sample-po-page-dynamic-search-hiring-processes/sample-po-page-dynamic-search-hiring-processes.component.ts\"> </file>\n *  <file name=\"sample-po-page-dynamic-search-hiring-processes/sample-po-page-dynamic-search-hiring-processes.service.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-page-dynamic-search',\n  templateUrl: './po-page-dynamic-search.component.html'\n})\nexport class PoPageDynamicSearchComponent extends PoPageDynamicSearchBaseComponent implements OnInit, OnDestroy {\n\n  private loadSubscription: Subscription;\n\n  private readonly _disclaimerGroup: PoDisclaimerGroup = {\n    change: this.onChangeDisclaimerGroup.bind(this),\n    disclaimers: [],\n    title: this.literals.disclaimerGroupTitle\n  };\n\n  private readonly _filterSettings: PoPageFilter = {\n    action: 'onAction',\n    advancedAction: 'onAdvancedAction',\n    ngModel: 'quickFilter',\n    placeholder: this.literals.searchPlaceholder\n  };\n\n  // Flag to control when changeDisclaimerGroup should be called\n  private changeDisclaimersEnabled: boolean = false;\n\n  private quickFilter;\n\n  @ViewChild(PoAdvancedFilterComponent, { static: true }) poAdvancedFilter: PoAdvancedFilterComponent;\n\n  constructor(languageService: PoLanguageService, private poPageCustomizationService: PoPageCustomizationService) {\n    super(languageService);\n  }\n\n  get disclaimerGroup() {\n    return Object.assign({}, this._disclaimerGroup, { title: this.literals.disclaimerGroupTitle });\n  }\n\n  get filterSettings() {\n    this._filterSettings.advancedAction = this.filters.length === 0 ? undefined : 'onAdvancedAction';\n\n    return Object.assign({}, this._filterSettings, { placeholder: this.literals.searchPlaceholder });\n  }\n\n  ngOnInit() {\n    this.setAdvancedFilterLiterals(this.literals);\n    if (this.onLoad) {\n      this.loadOptionsOnInitialize(this.onLoad);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.loadSubscription) {\n      this.loadSubscription.unsubscribe();\n    }\n  }\n\n  onAction() {\n    this.changeDisclaimersEnabled = false;\n    this._disclaimerGroup.disclaimers = [\n      { property: 'search', label: `${this.literals.quickSearchLabel} ${this.quickFilter}`, value: this.quickFilter }\n    ];\n\n    if (this.quickSearch.observers && this.quickSearch.observers.length > 0) {\n      this.quickSearch.emit(this.quickFilter);\n    }\n\n    this.quickFilter = undefined;\n  }\n\n  onAdvancedAction() {\n    this.poAdvancedFilter.open();\n  }\n\n  onAdvancedSearch(filters) {\n    this.changeDisclaimersEnabled = false;\n    this._disclaimerGroup.disclaimers = this.setDisclaimers(filters);\n\n    this.advancedSearch.emit(filters);\n  }\n\n  private applyDisclaimerLabelValue(field: any, filterValue: any) {\n    const values = Array.isArray(filterValue) ? filterValue : [ filterValue ];\n\n    const labels = values.map(value => {\n      const filteredField = field.options.find(option => option.value === value);\n\n      return filteredField.label || filteredField.value;\n    });\n\n    return labels.join(', ');\n  }\n\n  private formatDate(date: string) {\n    const year = parseInt(date.substr(0, 4), 10);\n    const month = parseInt(date.substr(5, 2), 10);\n    const day = parseInt(date.substr(8, 2), 10);\n\n    return new Date(year, month - 1, day).toLocaleDateString(getBrowserLanguage());\n  }\n\n  private getFieldByProperty(fields: Array<PoDynamicFormField>, fieldName: string) {\n    return fields.find((field: PoDynamicFormField) => field.property === fieldName);\n  }\n\n  private getFilterValueToDisclaimer(field: any, value: any) {\n\n    if (field.type === PoDynamicFieldType.Date) {\n      return this.formatDate(value);\n    }\n\n    if (field.options) {\n      return this.applyDisclaimerLabelValue(field, value);\n    }\n\n    return value;\n  }\n\n  private onChangeDisclaimerGroup(disclaimers) {\n    this.changeDisclaimersEnabled ? this.changeDisclaimers.emit(disclaimers) : this.changeDisclaimersEnabled = true;\n  }\n\n  private setDisclaimers(filters) {\n    const disclaimers = [];\n    const properties = Object.keys(filters);\n\n    properties.forEach(property => {\n      const field = this.getFieldByProperty(this.filters, property);\n      const label = field.label || capitalizeFirstLetter(field.property);\n      const value = filters[property];\n\n      disclaimers.push({\n        label: `${label}: ${this.getFilterValueToDisclaimer(field, value)}`,\n        property,\n        value\n      });\n    });\n\n    return disclaimers;\n  }\n\n  private loadOptionsOnInitialize(onLoad: UrlOrPoCustomizationFunction) {\n\n    this.loadSubscription = this.getPoDynamicPageOptions(onLoad).subscribe(responsePoOption =>\n        this.poPageCustomizationService.changeOriginalOptionsToNewOptions(this, responsePoOption));\n  }\n\n  private getPoDynamicPageOptions(onLoad: UrlOrPoCustomizationFunction): Observable<PoPageDynamicOptions> {\n    const originalOption: PoPageDynamicOptions = {\n      title: this.title,\n      actions: this.actions,\n      breadcrumb: this.breadcrumb,\n      filters: this.filters\n    };\n\n    return this.poPageCustomizationService.getCustomOptions(onLoad, originalOption);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoDynamicModule, PoLanguageModule, PoModalModule, PoPageModule } from '@portinari/portinari-ui';\n\nimport { PoPageCustomizationModule } from '../../services/po-page-customization/po-page-customization.module';\n\nimport { PoAdvancedFilterComponent } from './po-advanced-filter/po-advanced-filter.component';\nimport { PoPageDynamicSearchComponent } from './po-page-dynamic-search.component';\n\n/**\n * @description\n *\n * MÃ³dulo do template do po-page-dynamic-search.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n\n    PoDynamicModule,\n    PoLanguageModule,\n    PoModalModule,\n    PoPageModule,\n    PoPageCustomizationModule\n  ],\n  declarations: [\n    PoAdvancedFilterComponent,\n    PoPageDynamicSearchComponent\n  ],\n  exports: [\n    PoPageDynamicSearchComponent\n  ]\n})\nexport class PoPageDynamicSearchModule { }\n","import { Input } from '@angular/core';\n\nimport { PoBreadcrumb } from '@portinari/portinari-ui';\n\nimport { convertToBoolean } from '../../utils/util';\n\nimport { PoPageDynamicTableField } from './po-page-dynamic-table-field.interface';\n\nexport class PoPageDynamicListBaseComponent {\n\n  private _autoRouter: boolean = false;\n  private _columns: Array<any> = [];\n  private _duplicates: Array<any> = [];\n  private _fields: Array<any> = [];\n  private _filters: Array<any> = [];\n  private _keys: Array<any> = [];\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Cria automaticamente as rotas de ediÃ§Ã£o (novo/duplicate) e detalhes caso sejam definidas aÃ§Ãµes na propriedade `p-actions`\n   *\n   * As rotas criadas serÃ£o baseadas na propriedade `p-actions`.\n   *\n   * > Para o correto funcionamento nÃ£o pode haver nenhuma rota coringa (`**`) especificada.\n   *\n   * @default false\n   */\n  @Input('p-auto-router') set autoRouter(value: boolean) {\n    this._autoRouter = convertToBoolean(value);\n  }\n\n  get autoRouter(): boolean {\n    return this._autoRouter;\n  }\n\n  /** Objeto com propriedades do breadcrumb. */\n  @Input('p-breadcrumb') breadcrumb?: PoBreadcrumb = { items: [] };\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Lista dos campos usados na tabela e busca avanÃ§ada.\n   *\n   *\n   * > Caso nÃ£o seja definido fields a tabela assumirÃ¡ o comportamento padrÃ£o.\n   */\n  @Input('p-fields') set fields(fields: Array<PoPageDynamicTableField>) {\n    this._fields = Array.isArray(fields) ? [...fields] : [];\n\n    this.setFieldsProperties(this.fields);\n  }\n\n  get fields(): Array<PoPageDynamicTableField> {\n    return this._fields;\n  }\n\n  /** Endpoint da API dos recursos que serÃ£o exibidos. */\n  /**\n   * @description\n   *\n   * Endpoint usado pelo template para requisiÃ§Ã£o dos recursos que serÃ£o exibidos.\n   *\n   * Ao realizar requisiÃ§Ãµes de busca, podem ser enviados os parÃ¢metros (caso possuam valor): `page`, `pageSize`, `search` e `order`.\n   *\n   * Caso a coluna estiver ordenada descendentemente serÃ¡ enviada da seguinte forma: `-name`, se for ordenada\n   * ascendentemente serÃ¡ enviada apenas com o nome da coluna, por exemplo: `name`.\n   *\n   * Exemplo de uma requisiÃ§Ã£o de busca:\n   *\n   * > `GET {end-point}/{resource}?page=1&pageSize=10&search=components&order=-name`\n   *\n   * Caso a aÃ§Ã£o `remove` estiver configurada, serÃ¡ feito uma requisiÃ§Ã£o de exclusÃ£o nesse mesmo endpoint passando os campos\n   * setados como `key: true`.\n   *\n   * > `DELETE {end-point}/{keys}`\n   *\n   * ```\n   *  <po-page-dynamic-table\n   *    [p-actions]=\"{ remove: true }\"\n   *    [p-fields]=\"[ { property: 'id', key: true } ]\"\n   *    p-service=\"/api/po-samples/v1/people\"\n   *    ...>\n   *  </po-page-dynamic-table>\n   * ```\n   *\n   * ResquisiÃ§Ã£o disparada, onde a propriedade `id` Ã© igual a 2:\n   *\n   * ```\n   *  DELETE /api/po-samples/v1/people/2 HTTP/1.1\n   *  Host: localhost:4000\n   *  Connection: keep-alive\n   *  Accept: application/json, text/plain\n   *  ...\n   * ```\n   *\n   * Para a aÃ§Ã£o `removeAll`, serÃ¡ feito uma requisiÃ§Ã£o de exclusÃ£o em lote para esse mesmo endpoint passando, uma lista\n   * de objetos com os campos setados como `key: true` via `payload`.\n   *\n   * > `DELETE {end-point}`\n   *\n   * > `Payload: [ {key}, {key} ... {key} ]`\n   *\n   * ```\n   *  <po-page-dynamic-table\n   *    [p-actions]=\"{ removeAll: true }\"\n   *    [p-fields]=\"[ { property: 'id', key: true } ]\"\n   *    p-service=\"/api/po-samples/v1/people\"\n   *    ...>\n   *  </po-page-dynamic-table>\n   * ```\n   *\n   * ResquisiÃ§Ã£o disparada, onde foram selecionados 3 itens para serem removidos:\n   *\n   * ```\n   *  DELETE /api/po-samples/v1/people HTTP/1.1\n   *  Host: localhost:4000\n   *  Connection: keep-alive\n   *  Accept: application/json, text/plain\n   *  ...\n   * ```\n   *\n   * Request payload:\n   *\n   * ```\n   * [{\"id\":2},{\"id\":4},{\"id\":5}]\n   * ```\n   *\n   * > Caso esteja usando metadados com o template, serÃ¡ disparado uma requisiÃ§Ã£o na inicializaÃ§Ã£o do template para buscar\n   * > os metadados da pÃ¡gina passando o tipo do metadado esperado e a versÃ£o cacheada pelo browser.\n   * >\n   * > `GET {end-point}/metadata?type=list&version={version}`\n   */\n  @Input('p-service-api') serviceApi: string;\n\n  /** TÃ­tulo da pÃ¡gina. */\n  @Input('p-title') title: string;\n\n  get columns() {\n    return [...this._columns];\n  }\n\n  get duplicates() {\n    return [...this._duplicates];\n  }\n\n  get filters() {\n    return [...this._filters];\n  }\n\n  get keys() {\n    return [...this._keys];\n  }\n\n  private setFieldsProperties(fields: Array<any>) {\n    this._filters = fields.filter(field => field.filter === true);\n    this._columns = fields.filter(field => field.visible === undefined || field.visible === true);\n    this._keys = fields.filter(field => field.key === true).map(field => field.property);\n    this._duplicates = fields.filter(field => field.duplicate === true).map(field => field.property);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class PoPageDynamicService {\n\n  private endpoint = '/';\n\n  readonly headers: HttpHeaders = new HttpHeaders({\n    'X-PORTINARI-SCREEN-LOCK': 'true'\n  });\n\n  constructor(private http: HttpClient) { }\n\n  configServiceApi(config: { endpoint?: string } = {}) {\n    this.endpoint = config.endpoint;\n  }\n\n  getMetadata(type: string = 'list'): Observable<any> {\n    const key = `${this.endpoint}-${type}-metadata`;\n    const cache = JSON.parse(localStorage.getItem(key)) || {};\n\n    const url = `${this.endpoint}/metadata?type=${type}&version=${cache.version || ''}`;\n\n    return this.http.get(url).pipe(map((response: any) => {\n      if (response.version === cache.version) {\n        return cache;\n      }\n\n      localStorage.setItem(key, JSON.stringify(response));\n\n      return  { ...cache, ...response };\n    }));\n  }\n\n  // Deleta um Ãºnico recurso\n  deleteResource(id): Observable<any> {\n    return this.http.delete(`${this.endpoint}/${id}`, { headers: this.headers });\n  }\n\n  // Deleta recursos em lote\n  deleteResources(ids: Array<any>): Observable<any> {\n    return this.http.request('delete', `${this.endpoint}`, { headers: this.headers, body: ids } );\n  }\n\n  // Busca uma lista de recursos\n  getResources(params: {} = {}): Observable<any> {\n    return this.http.get(this.endpoint, { headers: this.headers, params });\n  }\n\n  // Busca um Ãºnico recurso\n  getResource(id): Observable<any> {\n    return this.http.get(`${this.endpoint}/${id}`, { headers: this.headers });\n  }\n\n  // Cria um recurso\n  createResource(resource): Observable<any> {\n    return this.http.post(`${this.endpoint}`, resource, { headers: this.headers });\n  }\n\n  // Atualiza um recurso\n  updateResource(id, resource): Observable<any> {\n    return this.http.put(`${this.endpoint}/${id}`, resource, { headers: this.headers });\n  }\n}\n","import { ActivatedRoute, Route, Router } from '@angular/router';\nimport { Component, Input, OnInit } from '@angular/core';\n\nimport {\n  PoDialogConfirmOptions,\n  PoDialogService,\n  PoNotificationService,\n  PoPageAction,\n  PoTableAction,\n  PoTableColumnSort,\n  PoTableColumnSortType\n} from '@portinari/portinari-ui';\n\nimport * as util from '../../utils/util';\n\nimport { PoPageDynamicDetailComponent } from '../po-page-dynamic-detail/po-page-dynamic-detail.component';\n// import { PoPageDynamicEditComponent } from '../po-page-dynamic-edit/po-page-dynamic-edit.component';\n\nimport { PoPageDynamicListBaseComponent } from './po-page-dynamic-list-base.component';\nimport { PoPageDynamicService } from './po-page-dynamic.service';\nimport { PoPageDynamicTableActions } from './po-page-dynamic-table-actions.interface';\n\nexport const poPageDynamicTableLiteralsDefault = {\n  en: {\n    pageAction: 'New',\n    pageActionRemoveAll: 'Delete',\n    tableActionView: 'View',\n    tableActionEdit: 'Edit',\n    tableActionDuplicate: 'Duplicate',\n    tableActionDelete: 'Delete',\n    confirmRemoveTitle: 'Confirm delete',\n    confirmRemoveMessage: 'Are you sure you want to delete this record? You can not undo this action.',\n    confirmRemoveAllTitle: 'Confirm batch deletion',\n    confirmRemoveAllMessage: 'Are you sure you want to delete all these records? You can not undo this action.',\n    loadDataErrorNotification: 'Service not found',\n    removeSuccessNotification: 'Item deleted successfully',\n    removeAllSuccessNotification: 'Items deleted successfully'\n  },\n  es: {\n    pageAction: 'Nuevo',\n    pageActionRemoveAll: 'Borrar',\n    tableActionView: 'Visualizar',\n    tableActionEdit: 'Editar',\n    tableActionDuplicate: 'Duplicar',\n    tableActionDelete: 'Borrar',\n    confirmRemoveTitle: 'Confirmar la exclusiÃ³n',\n    confirmRemoveMessage: 'Â¿EstÃ¡ seguro de que desea eliminar este registro? No puede deshacer esta acciÃ³n.',\n    confirmRemoveAllTitle: 'Confirmar la exclusiÃ³n por lotes',\n    confirmRemoveAllMessage: 'Â¿EstÃ¡ seguro de que desea eliminar todos estos registros? No puede deshacer esta acciÃ³n.',\n    loadDataErrorNotification: 'Servicio no informado.',\n    removeSuccessNotification: 'Elemento eliminado con Ã©xito',\n    removeAllSuccessNotification: 'Elementos eliminados con Ã©xito'\n  },\n  pt: {\n    pageAction: 'Novo',\n    pageActionRemoveAll: 'Excluir',\n    tableActionView: 'Visualizar',\n    tableActionEdit: 'Editar',\n    tableActionDuplicate: 'Duplicar',\n    tableActionDelete: 'Excluir',\n    confirmRemoveTitle: 'Confirmar exclusÃ£o',\n    confirmRemoveMessage: 'Tem certeza de que deseja excluir esse registro? VocÃª nÃ£o poderÃ¡ desfazer essa aÃ§Ã£o.',\n    confirmRemoveAllTitle: 'Confirmar exclusÃ£o em lote',\n    confirmRemoveAllMessage: 'Tem certeza de que deseja excluir todos esses registros? VocÃª nÃ£o poderÃ¡ desfazer essa aÃ§Ã£o.',\n    loadDataErrorNotification: 'ServiÃ§o nÃ£o informado.',\n    removeSuccessNotification: 'Item excluido com sucesso',\n    removeAllSuccessNotification: 'Items excluidos com sucesso'\n  }\n};\n\n/**\n * @docsExtends PoPageDynamicListBaseComponent\n *\n * @description\n *\n * O `po-page-dynamic-table` Ã© uma pÃ¡gina que exibe uma lista de registros em uma tabela baseado em uma lista de fields,\n * o mesmo tambÃ©m suporta metadados conforme especificado na documentaÃ§Ã£o.\n *\n * @example\n *\n * <example name=\"po-page-dynamic-table-basic\" title=\"Portinari Page Dynamic Table Basic\">\n *  <file name=\"sample-po-page-dynamic-table-basic/sample-po-page-dynamic-table-basic.component.html\"> </file>\n *  <file name=\"sample-po-page-dynamic-table-basic/sample-po-page-dynamic-table-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-dynamic-table-users\" title=\"Portinari Page Dynamic Table - Users\">\n *  <file name=\"sample-po-page-dynamic-table-users/sample-po-page-dynamic-table-users.component.html\"> </file>\n *  <file name=\"sample-po-page-dynamic-table-users/sample-po-page-dynamic-table-users.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-page-dynamic-table',\n  templateUrl: './po-page-dynamic-table.component.html',\n  providers: [ PoPageDynamicService ]\n})\nexport class PoPageDynamicTableComponent extends PoPageDynamicListBaseComponent implements OnInit {\n\n  private _actions: PoPageDynamicTableActions = {};\n  private _pageActions: Array<PoPageAction> = [];\n  private _tableActions: Array<PoTableAction> = [];\n\n  private page: number = 1;\n  private params = {};\n  private sortedColumn: PoTableColumnSort;\n\n  hasNext = false;\n  items = [];\n  literals = {\n    ...poPageDynamicTableLiteralsDefault[util.poLocaleDefault],\n    ...poPageDynamicTableLiteralsDefault[util.browserLanguage()]\n  };\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * AÃ§Ãµes da pÃ¡gina e da tabela.\n   */\n  @Input('p-actions') set actions(value: PoPageDynamicTableActions) {\n    this._actions = value && typeof value === 'object' && Object.keys(value).length > 0 ? value : {};\n\n    this.setPageActions(this.actions);\n    this.setRemoveAllAction();\n    this.setTableActions(this.actions);\n  }\n\n  get actions(): PoPageDynamicTableActions {\n    return this._actions;\n  }\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private poDialogService: PoDialogService,\n    private poNotification: PoNotificationService,\n    private poPageDynamicService: PoPageDynamicService\n    ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    if (this.activatedRoute.snapshot.data.serviceApi) {\n      this.serviceApi = this.activatedRoute.snapshot.data.serviceApi;\n\n      this.poPageDynamicService.configServiceApi({ endpoint: this.serviceApi });\n\n      this.loadMetadata();\n    } else {\n      this.poPageDynamicService.configServiceApi({ endpoint: this.serviceApi });\n\n      this.loadData();\n    }\n  }\n\n  onAdvancedSearch(filter) {\n    this.loadData({ page: 1, ...filter });\n    this.params = filter;\n  }\n\n  onChangeDisclaimers(disclaimers) {\n    const filter = {};\n\n    disclaimers.forEach(disclaimer => {\n      filter[disclaimer.property] = disclaimer.value;\n    });\n\n    this.onAdvancedSearch(filter);\n  }\n\n  onQuickSearch(filter) {\n    this.loadData(filter ? { page: 1, search: filter } : undefined);\n    this.params = filter ? { search: filter } : {};\n  }\n\n  onSort(sortedColumn: PoTableColumnSort) {\n    this.sortedColumn = sortedColumn;\n  }\n\n  showMore() {\n    this.loadData({ page: ++this.page, ...this.params });\n  }\n\n  get hasActionRemoveAll() {\n    return !!this.actions.removeAll;\n  }\n\n  get pageActions() {\n    return [...this._pageActions];\n  }\n\n  get tableActions() {\n    return this._tableActions;\n  }\n\n  private confirmRemove(item) {\n    const confirmOptions: PoDialogConfirmOptions = {\n      title: this.literals.confirmRemoveTitle,\n      message: this.literals.confirmRemoveMessage,\n      confirm: this.remove.bind(this, item)\n    };\n\n    this.poDialogService.confirm(confirmOptions);\n  }\n\n  private confirmRemoveAll() {\n    const confirmOptions: PoDialogConfirmOptions = {\n      title: this.literals.confirmRemoveAllTitle,\n      message: this.literals.confirmRemoveAllMessage,\n      confirm: this.removeAll.bind(this)\n    };\n\n    this.poDialogService.confirm(confirmOptions);\n  }\n\n  private formatUniqueKey(item) {\n    const keys = util.mapObjectByProperties(item, this.keys);\n\n    return util.valuesFromObject(keys).join('|');\n  }\n\n  private getOrderParam(sortedColumn: PoTableColumnSort = { type: undefined }) {\n    const { column, type } = sortedColumn;\n\n    if (!column) {\n      return {};\n    }\n\n    if (type === PoTableColumnSortType.Descending) {\n      return { order: `-${column.property}` };\n    }\n\n    return { order: `${column.property}` };\n  }\n\n  private loadData(params: { page?: number, search?: string } = {}) {\n    if (!this.serviceApi) {\n      this.poNotification.error(this.literals.loadDataErrorNotification);\n      return;\n    }\n\n    const orderParam = this.getOrderParam(this.sortedColumn);\n    const defaultParams: any = { page: 1, pageSize: 10 };\n    const fullParams: any = { ...defaultParams, ...params, ...orderParam };\n\n    this.poPageDynamicService.getResources(fullParams).toPromise().then((response: any) => {\n      this.items = fullParams.page === 1 ? response.items : [...this.items, ...response.items];\n      this.page = fullParams.page;\n      this.hasNext = response.hasNext;\n    });\n  }\n\n  private loadMetadata() {\n    this.poPageDynamicService.getMetadata().toPromise().then(response => {\n      this.autoRouter = response.autoRouter;\n      this.actions = response.actions || {};\n      this.breadcrumb = response.breadcrumb || { items : [] };\n      this.fields = response.fields || [];\n      this.title = response.title;\n\n      this.loadData();\n    });\n  }\n\n  // @todo Validar rotas na mÃ£o pois se existir uma rota '**' o catch do navigation nÃ£o funciona.\n  private navigateTo(route: {path: string, component?, url?: string, params?: any}, forceStopAutoRouter: boolean = false) {\n    this.router.navigate([route.url || route.path], { queryParams: route.params })\n      .catch(() => {\n        if (forceStopAutoRouter || !this.autoRouter) {\n          return;\n        }\n\n        this.router.config.unshift(<Route>{\n          path: route.path, component: route.component,  data: { serviceApi: this.serviceApi, autoRouter: true }\n        });\n\n        this.navigateTo(route, true);\n      });\n  }\n\n  private openDetail(path: string, item) {\n    const url = this.resolveUrl(item, path);\n\n    this.navigateTo({ path, url, component: PoPageDynamicDetailComponent });\n  }\n\n  private openDuplicate(path: string, item) {\n    const duplicates = util.mapObjectByProperties(item, this.duplicates);\n\n    this.navigateTo({ path, params: { duplicate: JSON.stringify(duplicates) } });\n    // this.navigateTo({ path, params: { duplicate: JSON.stringify(duplicates) } , component: PoPageDynamicEditComponent });\n  }\n\n  private openEdit(path: string, item) {\n    const url = this.resolveUrl(item, path);\n\n    this.navigateTo({ path, url });\n    // this.navigateTo({ path, url, component: PoPageDynamicEditComponent });\n  }\n\n  private openNew(path: string) {\n    this.navigateTo({ path });\n    // this.navigateTo({ path, component: PoPageDynamicEditComponent });\n  }\n\n  /**\n   * Caso exista mais de um identificador, serÃ¡ concatenado com '|'.\n   *\n   * Ex: { id: 1, company: 'portinari' }\n   *\n   * Para o endpoint /resources/:id serÃ¡ executada a url /resources/1|portinari\n   */\n  private remove(item) {\n    const uniqueKey = this.formatUniqueKey(item);\n\n    this.poPageDynamicService.deleteResource(uniqueKey).toPromise().then(() => {\n      this.removeLocalItems([item]);\n\n      this.poNotification.success(this.literals.removeSuccessNotification);\n    });\n  }\n\n  private removeAll() {\n    // TODO: usar propriedade nova pra validar os itens selecionados\n    const selectedItems = this.items.filter(item => item.$selected);\n\n    if (selectedItems.length === 0) {\n      // TODO: usar propriedade nova pra validar os itens selecionados\n      return;\n    }\n\n    const keysSelectedItems = util.mapArrayByProperties(selectedItems, this.keys);\n\n    this.poPageDynamicService.deleteResources(keysSelectedItems).toPromise().then(() => {\n      this.removeLocalItems(selectedItems);\n\n      this.poNotification.success(this.literals.removeAllSuccessNotification);\n    });\n  }\n\n  private removeLocalItems(items = []) {\n    items.forEach(itemRemoved => {\n      const indexItemRemoved = this.items.indexOf(itemRemoved);\n\n      this.items.splice(indexItemRemoved, 1);\n    });\n  }\n\n  private resolveUrl(item: any, path: string) {\n    const uniqueKey = this.formatUniqueKey(item);\n\n    return path.replace(/:id/g, uniqueKey);\n  }\n\n  private setPageActions(actions: PoPageDynamicTableActions) {\n    if (actions) {\n      this._pageActions = [\n        { label: this.literals.pageAction, action: this.openNew.bind(this, actions.new), disabled: !this._actions.new },\n      ];\n    }\n  }\n\n  private setRemoveAllAction() {\n    if (this._actions.removeAll) {\n      this._pageActions.push({\n      label: this.literals.pageActionRemoveAll, action: this.confirmRemoveAll.bind(this),\n        disabled: !this._actions.removeAll\n      });\n    }\n  }\n\n  private setTableActions(actions: PoPageDynamicTableActions) {\n    if (actions) {\n      this._tableActions = [\n        { action: this.openDetail.bind(this, actions.detail), label: this.literals.tableActionView, visible: !!this._actions.detail },\n        { action: this.openEdit.bind(this, actions.edit), label: this.literals.tableActionEdit, visible: !!this._actions.edit },\n        { action: this.openDuplicate.bind(this, actions.duplicate), label: this.literals.tableActionDuplicate,\n          visible: !!this._actions.duplicate\n        },\n        { action: this.confirmRemove.bind(this), label: this.literals.tableActionDelete, separator: true, type: 'danger',\n          visible: !!this._actions.remove\n        }\n      ];\n    }\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoTableModule } from '@portinari/portinari-ui';\n\nimport { PoPageDynamicSearchModule } from '../po-page-dynamic-search/po-page-dynamic-search.module';\n\nimport { PoPageDynamicTableComponent } from './po-page-dynamic-table.component';\n\n/**\n * @description\n *\n * MÃ³dulo do template do po-page-dynamic-search.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n\n    PoTableModule,\n    PoPageDynamicSearchModule\n  ],\n  declarations: [\n    PoPageDynamicTableComponent\n  ],\n  exports: [\n    PoPageDynamicTableComponent\n  ]\n})\nexport class PoPageDynamicTableModule { }\n","import { PoJobSchedulerInternal } from './interfaces/po-job-scheduler-internal.interface';\n\nexport class PoPageJobSchedulerInternal implements PoJobSchedulerInternal {\n\n  periodicity = 'single';\n  firstExecution = new Date();\n  firstExecutionHour = this.getCurrentHour(this.firstExecution);\n  recurrent = true;\n\n  private getCurrentHour(date: Date): string {\n    const hours = date.getHours() < 10 ? '0' + date.getHours() : date.getHours();\n    const minutes = date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes();\n\n    return `${hours}:${minutes}`;\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Input } from '@angular/core';\n\nimport { PoBreadcrumb } from '@portinari/portinari-ui';\n\nimport { PoJobSchedulerInternal } from './interfaces/po-job-scheduler-internal.interface';\nimport { PoPageJobSchedulerInternal } from './po-page-job-scheduler-internal';\nimport { PoPageJobSchedulerService } from './po-page-job-scheduler.service';\n\n/**\n * @description\n *\n * O `po-page-job-scheduler` Ã© uma pÃ¡gina para criaÃ§Ã£o e atualizaÃ§Ã£o do *Job Scheduler* de forma simplificada, apenas informando\n * o serviÃ§o (endpoint) para consumo, sem a necessidade de criar componentes e tratamentos dos dados.\n */\nexport class PoPageJobSchedulerBaseComponent {\n\n  /** Objeto com propriedades do breadcrumb. */\n  @Input('p-breadcrumb') breadcrumb?: PoBreadcrumb = { items: [] };\n\n  /**\n   * Endpoint usado pelo template para requisiÃ§Ã£o do recurso que serÃ¡ utilizado para criaÃ§Ã£o e ediÃ§Ã£o.\n   *\n   * #### Processos\n   *\n   * Em sua inicializaÃ§Ã£o serÃ¡ verificado a existÃªncia do endpoint `{end-point}/processes`.\n   * Caso o endpoint seja vÃ¡lido, serÃ¡ utilizado um componente para selecionar o processo e filtrÃ¡-los.\n   * Caso nÃ£o seja vÃ¡lido, serÃ¡ utilizado um campo de entrada de texto para informar o endpoint.\n   *\n   * Para realizar o filtro de busca do processo, serÃ¡ enviado o conteÃºdo a ser filtrado atravÃ©s da propriedade *search*.\n   * Os processos devem retornar uma lista de objetos que seguem a definiÃ§Ã£o de dados abaixo:\n   *\n   * ```\n   * GET {end-point}/processes?search=ac04\n   * ...\n   * { \"processID\": \"string\", \"description\": \"string\" }\n   * ```\n   *\n   * Para retornar parÃ¢metros dos processos, serÃ¡ realizado um `GET` como exemplificado abaixo.\n   * Os parÃ¢metros devem retornar uma lista de objetos que seguem a interface [PoDynamicFormField](/documentation/po-dynamic-form).\n   *\n   * ```\n   * GET {end-point}/processes/:id/parameters\n   * ...\n   * { items: [{ \"property\": \"server\" }, { \"property\": \"program\" }] }\n   * ```\n   *\n   * #### Salvar e Atualizar\n   *\n   * Para salvar o recurso, serÃ¡ feito uma requisiÃ§Ã£o de criaÃ§Ã£o no mesmo endpoint, passando os valores\n   * preenchidos pelo usuÃ¡rio via *payload*. Abaixo uma requisiÃ§Ã£o `POST` disparada,\n   * onde as propriedades do *Job Scheduler* foram preenchidas:\n   *\n   * ```\n   *  POST /api/po-samples/v1/jobschedulers HTTP/1.1\n   *  Host: localhost:4000\n   *  Connection: keep-alive\n   *  Accept: application/json, text/plain\n   *  ...\n   * ```\n   *\n   * *Request payload*:\n   *\n   * ```\n   * { \"firstExecution\": \"2018-12-07T00:00:01-00:00\", \"recurrent\": true, \"daily\": { \"hour\": 10, \"minute\": 12 }, \"processID\": \"ac0405\" }\n   * ```\n   *\n   * Caso queira que o template carregue um recurso jÃ¡ existente, deve ser incluÃ­do um parÃ¢metro na rota chamado `id`.\n   *\n   * Exemplo de configuraÃ§Ã£o de rota:\n   *\n   * ```\n   *  RouterModule.forRoot([\n   *    ...\n   *    { path: 'edit/:id', component: ExampleJobSchedulerComponent },\n   *    ...\n   *  ],\n   * ```\n   *\n   * Baseado nisso, na inicializaÃ§Ã£o do template serÃ¡ disparado uma requisiÃ§Ã£o para buscar o recurso que serÃ¡ editado.\n   *\n   * ```\n   * GET {end-point}/{id}\n   * ```\n   *\n   * Ao salvar o recurso serÃ¡ disparado um `PUT` com os dados preenchidos. Abaixo uma requisiÃ§Ã£o `PUT` disparada,\n   * onde a propriedade *recurrent* e *daily* foram preenchidas/atualizadas e o `id` da url Ã© 1:\n   *\n   * ```\n   *  PUT /api/po-samples/v1/jobschedulers/1 HTTP/1.1\n   *  Host: localhost:4000\n   *  Connection: keep-alive\n   *  Accept: application/json, text/plain\n   *  ...\n   * ```\n   *\n   * *Request payload*:\n   *\n   * ```\n   * { \"firstExecution\": \"2018-12-07T00:00:01-00:00\", \"recurrent\": false, \"daily\": { \"hour\": 11, \"minute\": 30 }, \"processID\": \"ac0405\" }\n   * ```\n   */\n  @Input('p-service-api') serviceApi: string;\n\n  /** TÃ­tulo da pÃ¡gina. */\n  @Input('p-title') title: string;\n\n  model: PoJobSchedulerInternal = new PoPageJobSchedulerInternal();\n\n  constructor(protected poPageJobSchedulerService: PoPageJobSchedulerService) {}\n\n  protected loadData(id: string | number) {\n    if (!id) {\n      this.model = new PoPageJobSchedulerInternal();\n      return;\n    }\n\n    this.poPageJobSchedulerService.getResource(id).toPromise().then((response: PoJobSchedulerInternal) => {\n      this.model = response;\n    }).catch(() => {\n      this.model = new PoPageJobSchedulerInternal();\n    });\n\n  }\n\n  protected markAsDirtyInvalidControls(controls: { [key: string]: AbstractControl } ) {\n    for (const key in controls) {\n      if (controls.hasOwnProperty(key)) {\n        const control = controls[key];\n\n        if (control.invalid) {\n          control.markAsDirty();\n        }\n      }\n    }\n  }\n\n}\n","export const poPageJobSchedulerLiteralsDefault = {\n  en: {\n    at: 'at',\n    back: 'Back',\n    next: 'Next',\n    periodicity: 'Periodicity',\n    execution: 'Execution',\n    process: 'Process',\n    enterProcess: 'Enter a process',\n    recurrent: 'Recurrent',\n    single: 'Single',\n    daily: 'Daily',\n    weekly: 'Weekly',\n    monthly: 'Monthly',\n    scheduling: 'Scheduling',\n    parameterization: 'Parameterization',\n    conclude: 'Conclude',\n    firstExecution: 'First Execution',\n    hour: 'Hour',\n    day: 'Day',\n    weekDays: 'Week days',\n    sunday: 'Sunday',\n    monday: 'Monday',\n    tuesday: 'Tuesday',\n    wednesday: 'Wednesday',\n    thursday: 'Thursday',\n    friday: 'Friday',\n    saturday: 'Saturday',\n    parameters: 'Parameters',\n    yes: 'Yes',\n    no: 'No',\n    notReported: 'Not reported',\n    periodicityData: 'Periodicity data',\n    confirmation: 'Confirmation',\n    confirmSaveMessage: 'Are you sure you want to complete this schedule?',\n    confirmUpdateMessage: 'Are you sure you want to update this schedule?',\n    saveNotificationSuccessUpdate: 'Successfully updated scheduling',\n    saveNotificationSuccessSave: 'Successfully saved scheduling',\n    parametersNotFound: 'Parameters not found.'\n  },\n  es: {\n    at: 'a las',\n    back: 'Volver',\n    next: 'Avanzar',\n    periodicity: 'Periodicidad',\n    execution: 'EjecuciÃ³n',\n    process: 'Proceso',\n    enterProcess: 'Informe un proceso',\n    recurrent: 'Recurrente',\n    single: 'Ãnica',\n    daily: 'Diaria',\n    weekly: 'Semanal',\n    monthly: 'Mensual',\n    scheduling: 'ProgramaciÃ³n',\n    parameterization: 'ParametrizaciÃ³n',\n    conclude: 'Completar',\n    firstExecution: 'Primera ejecuciÃ³n',\n    hour: 'Horario',\n    day: 'DÃ­a',\n    weekDays: 'Dias de la semana',\n    sunday: 'Domingo',\n    monday: 'Lunes',\n    tuesday: 'Martes',\n    wednesday: 'MiÃ©rcoles',\n    thursday: 'Jueves',\n    friday: 'Viernes',\n    saturday: 'SÃ¡bado',\n    parameters: 'ParÃ¡metros',\n    yes: 'SÃ­',\n    no: 'No',\n    notReported: 'No informado',\n    periodicityData: 'Dados da periodicidade',\n    confirmation: 'ConfirmaciÃ³n',\n    confirmSaveMessage: 'Â¿EstÃ¡ seguro de que desea completar esta programaciÃ³n de proceso?',\n    confirmUpdateMessage: 'Â¿EstÃ¡ seguro de que desea cambiar esta programaciÃ³n de proceso?',\n    saveNotificationSuccessUpdate: 'ProgramaciÃ³n de proceso actualizada con Ã©xito.',\n    saveNotificationSuccessSave: 'ProgramaciÃ³n de proceso salvo con Ã©xito.',\n    parametersNotFound: 'No se encontraron parÃ¡metros.'\n  },\n  pt: {\n    at: 'Ã s',\n    back: 'Voltar',\n    next: 'AvanÃ§ar',\n    periodicity: 'Periodicidade',\n    execution: 'ExecuÃ§Ã£o',\n    process: 'Processo',\n    enterProcess: 'Informe um processo',\n    recurrent: 'Recorrente',\n    single: 'Ãnica',\n    daily: 'DiÃ¡ria',\n    weekly: 'Semanal',\n    monthly: 'Mensal',\n    scheduling: 'Agendamento',\n    parameterization: 'ParametrizaÃ§Ã£o',\n    conclude: 'Concluir',\n    firstExecution: 'Primeira execuÃ§Ã£o',\n    hour: 'HorÃ¡rio',\n    day: 'Dia',\n    weekDays: 'Dias de semana',\n    sunday: 'Domingo',\n    monday: 'Segunda-feira',\n    tuesday: 'TerÃ§a-feira',\n    wednesday: 'Quarta-feira',\n    thursday: 'Quinta-feira',\n    friday: 'Sexta-feira',\n    saturday: 'SÃ¡bado',\n    parameters: 'ParÃ¢metros',\n    yes: 'Sim',\n    no: 'NÃ£o',\n    notReported: 'NÃ£o informado',\n    periodicityData: 'Dados da periodicidade',\n    confirmation: 'ConfirmaÃ§Ã£o',\n    confirmSaveMessage: 'Tem certeza que deseja concluir este agendamento de processo?',\n    confirmUpdateMessage: 'Tem certeza que deseja alterar este agendamento de processo?',\n    saveNotificationSuccessUpdate: 'Agendamento de processo atualizado com sucesso.',\n    saveNotificationSuccessSave: 'Agendamento de processo salvo com sucesso.',\n    parametersNotFound: 'ParÃ¢metros nÃ£o foram encontrados.'\n  }\n};\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { addZero, convertDateToISOExtended } from '../../utils/util';\nimport { PoDynamicFormField } from '@portinari/portinari-ui';\n\nimport { PoJobScheduler } from './interfaces/po-job-scheduler.interface';\nimport { PoJobSchedulerInternal } from './interfaces/po-job-scheduler-internal.interface';\n\n@Injectable()\nexport class PoPageJobSchedulerService {\n\n  private endpoint = '/';\n\n  readonly headers: HttpHeaders = new HttpHeaders({\n    'X-PORTINARI-SCREEN-LOCK': 'true'\n  });\n\n  constructor(private http: HttpClient) { }\n\n  configServiceApi(config: { endpoint?: string } = {}) {\n    this.endpoint = config.endpoint;\n  }\n\n  // Cria um recurso\n  createResource(resource): Observable<any> {\n    const jobScheduler = this.convertToJobScheduler(resource);\n\n    return this.http.post(`${this.endpoint}`, jobScheduler, { headers: this.headers });\n  }\n\n  getHeadProcesses() {\n    const headers = { 'X-Portinari-No-Error': 'true' };\n\n    return this.http.head(`${this.endpoint}/processes`, { headers });\n  }\n\n  // Busca parametros pelo processo id\n  getParametersByProcess(processId: string | number): Observable<any> {\n    return this.http.get(`${this.endpoint}/processes/${processId}/parameters`, { headers: this.headers })\n    .pipe(map((resource: { items: Array<PoDynamicFormField> }) => resource.items));\n  }\n\n  // Busca um Ãºnico recurso\n  getProcess(id: string | number): Observable<any> {\n    return this.http.get(`${this.endpoint}/processes/${id}`, { headers: this.headers });\n  }\n\n  // Busca uma lista de processos\n  getProcesses(params: {} = {}): Observable<any> {\n    return this.http.get(`${this.endpoint}/processes`, { params });\n  }\n\n  // Busca um Ãºnico recurso\n  getResource(id: string | number): Observable<any> {\n    return this.http.get(`${this.endpoint}/${id}`, { headers: this.headers })\n      .pipe(map(resource => this.convertToJobSchedulerInternal(resource)));\n  }\n\n  // Atualiza um recurso\n  updateResource(id, resource): Observable<any> {\n    const jobScheduler = this.convertToJobScheduler(resource);\n\n    return this.http.put(`${this.endpoint}/${id}`, jobScheduler, { headers: this.headers });\n  }\n\n  private convertToJobScheduler(jobSchedulerInternal): PoJobScheduler {\n    const jobScheduler = { ...jobSchedulerInternal };\n\n    if (jobSchedulerInternal.periodicity) {\n\n      if (jobSchedulerInternal.periodicity === 'single') {\n        jobScheduler.recurrent = false;\n      } else {\n        Object.assign(jobScheduler, this.convertToPeriodicity(jobSchedulerInternal));\n      }\n\n    }\n\n    if (jobSchedulerInternal.firstExecutionHour) {\n      jobScheduler.firstExecution =\n        this.replaceHourFirstExecution(jobSchedulerInternal.firstExecution, jobSchedulerInternal.firstExecutionHour);\n    }\n\n    if (!Object.keys(this.returnValidExecutionParameter(jobScheduler.executionParameter)).length) {\n      delete jobScheduler.executionParameter;\n    }\n\n    this.removeInvalidKeys(jobScheduler);\n\n    return jobScheduler;\n  }\n\n  private convertToJobSchedulerInternal(jobScheduler = <any> {}): PoJobSchedulerInternal {\n    const jobSchedulerInternal = { ...jobScheduler };\n\n    if (jobScheduler.firstExecution) {\n      jobSchedulerInternal.firstExecutionHour = this.getHourFirstExecution(jobScheduler.firstExecution);\n    }\n\n    Object.assign(jobSchedulerInternal, this.convertToPeriodicityInternal(jobScheduler));\n\n    this.removeInvalidKeys(jobSchedulerInternal, ['weekly', 'monthly', 'daily']);\n\n    return jobSchedulerInternal;\n  }\n\n  private convertToPeriodicity(value: { periodicity: string , dayOfMonth?: string, daysOfWeek?: number, hour?: string }) {\n    const newValue = {};\n    const valuePeriodicity = value.periodicity;\n\n    if (valuePeriodicity) {\n      newValue[valuePeriodicity] = {};\n\n      if (valuePeriodicity === 'monthly') {\n        newValue[valuePeriodicity].day = value.dayOfMonth ? parseInt(value.dayOfMonth, 10) : 0;\n      } else if (valuePeriodicity === 'weekly') {\n        newValue[valuePeriodicity].daysOfWeek = value.daysOfWeek;\n      }\n\n      newValue[valuePeriodicity].hour = value.hour ? parseInt(value.hour.split(':')[0], 10) : 0;\n      newValue[valuePeriodicity].minute = value.hour ? parseInt(value.hour.split(':')[1], 10) : 0;\n    }\n\n    return newValue;\n  }\n\n  private convertToPeriodicityInternal(value = <any> {}) {\n    if (value.monthly) {\n      return {\n        periodicity: 'monthly',\n        hour: `${addZero(value.monthly.hour)}:${addZero(value.monthly.minute)}`,\n        dayOfMonth: value.monthly.day\n      };\n    } else if (value.daily) {\n      return {\n        periodicity: 'daily',\n        hour: `${addZero(value.daily.hour)}:${addZero(value.daily.minute)}`\n      };\n    } else if (value.weekly) {\n      return {\n        periodicity: 'weekly',\n        hour: `${addZero(value.weekly.hour)}:${addZero(value.weekly.minute)}`,\n        daysOfWeek: [...value.weekly.daysOfWeek]\n      };\n    } else {\n      return {\n        periodicity: 'single'\n      };\n    }\n  }\n\n  private getCurrentHour(date: Date): string {\n    const hours = addZero(date.getHours());\n    const minutes = addZero(date.getMinutes());\n\n    return `${hours}:${minutes}`;\n  }\n\n  private getHourFirstExecution(firstExecutionDate: string): string {\n    return this.getCurrentHour(new Date(firstExecutionDate));\n  }\n\n  private removeInvalidKeys(value: object, keys?: Array<string>) {\n    const invalidKeys = keys || ['periodicity', 'hour', 'minute', 'day', 'daysOfWeek', 'dayOfMonth', 'firstExecutionHour'];\n\n    Object.keys(value).forEach(key => {\n      if (invalidKeys.includes(key)) {\n        delete value[key];\n      }\n    });\n  }\n\n  private replaceHourFirstExecution(date: string, time: string): string {\n    const firstExecutionDate = new Date(date);\n\n    const timeSplited = time.split(':');\n\n    const hours = parseInt(timeSplited[0], 10);\n    const minutes = parseInt(timeSplited[1], 10);\n\n    firstExecutionDate.setHours(hours, minutes);\n\n    return convertDateToISOExtended(firstExecutionDate);\n  }\n\n  private returnValidExecutionParameter(parameter: object) {\n    const newParameter = { ...parameter };\n\n    for (const key in newParameter) {\n      if (newParameter.hasOwnProperty(key) && newParameter[key] === undefined) {\n        delete newParameter[key];\n      }\n    }\n\n    return newParameter;\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { PoLookupFilter } from '@portinari/portinari-ui';\n\nimport { PoPageJobSchedulerService } from './po-page-job-scheduler.service';\n\n@Injectable()\nexport class PoPageJobSchedulerLookupService implements PoLookupFilter {\n\n  constructor(private poPageJobSchedulerService: PoPageJobSchedulerService) { }\n\n  getFilteredData(search: string, page: number, pageSize: number): Observable<any> {\n    const params = { page, pageSize, search };\n\n    return this.poPageJobSchedulerService.getProcesses(params);\n  }\n\n  getObjectByValue(processId: string): Observable<any> {\n    return this.poPageJobSchedulerService.getProcess(processId);\n  }\n\n}\n","import { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { Observable } from 'rxjs';\n\nimport {\n  PoDialogService,\n  PoDynamicFormField,\n  PoNotificationService,\n  PoPageAction,\n  PoStepperItem,\n  PoStepperStatus\n} from '@portinari/portinari-ui';\n\nimport * as util from './../../utils/util';\n\nimport { PoJobSchedulerInternal } from './interfaces/po-job-scheduler-internal.interface';\nimport { PoPageJobSchedulerInternal } from './po-page-job-scheduler-internal';\nimport { PoPageJobSchedulerBaseComponent } from './po-page-job-scheduler-base.component';\nimport { poPageJobSchedulerLiteralsDefault } from './po-page-job-scheduler-literals';\nimport { PoPageJobSchedulerLookupService } from './po-page-job-scheduler-lookup.service';\nimport { PoPageJobSchedulerService } from './po-page-job-scheduler.service';\n\n/**\n * @docsExtends PoPageJobSchedulerBaseComponent\n *\n * @example\n *\n * <example name=\"po-page-job-scheduler-basic\" title=\"Portinari Page Job Scheduler Basic\">\n *  <file name=\"sample-po-page-job-scheduler-basic/sample-po-page-job-scheduler-basic.component.html\"> </file>\n *  <file name=\"sample-po-page-job-scheduler-basic/sample-po-page-job-scheduler-basic.component.ts\"> </file>\n * </example>\n *\n */\n@Component({\n  selector: 'po-page-job-scheduler',\n  templateUrl: './po-page-job-scheduler.component.html',\n  encapsulation: ViewEncapsulation.None,\n  styles: [`\n    po-container .po-container {\n      overflow-y: unset;\n    }\n  `]\n})\nexport class PoPageJobSchedulerComponent extends PoPageJobSchedulerBaseComponent implements OnInit {\n\n  isEdit = false;\n  literals = {\n    ...poPageJobSchedulerLiteralsDefault[util.poLocaleDefault],\n    ...poPageJobSchedulerLiteralsDefault[util.browserLanguage()]\n  };\n  parameters: Array<PoDynamicFormField> = [];\n  saveOperation: Observable<any>;\n  step: number = 1;\n\n  private backPageAction: PoPageAction = {\n    label: this.literals.back,\n    action: this.nextStepOperation.bind(this, 'back'),\n    disabled: this.isDisabledBack.bind(this)\n  };\n\n  private concludePageActions: Array<PoPageAction> = [\n    {\n      label: this.literals.conclude,\n      action: this.confirmJobScheduler.bind(this)\n    },\n    { ...this.backPageAction }\n  ];\n\n  private nextPageActions: Array<PoPageAction> = [\n    {\n      label: this.literals.next,\n      action: this.nextStepOperation.bind(this, 'next'),\n      disabled: this.isDisabledAdvance.bind(this)\n    },\n    { ...this.backPageAction }\n  ];\n\n  jobSchedulerActions: Array<PoPageAction> = [\n    ...this.nextPageActions\n  ];\n\n  readonly steps: Array<PoStepperItem> = [\n    { label: this.literals.scheduling },\n    { label: this.literals.parameterization },\n    { label: this.literals.conclude }\n  ];\n\n  @ViewChild('schedulerExecution', { static: true }) schedulerExecution: { form: NgForm };\n  @ViewChild('schedulerParameters', { static: true }) schedulerParameters: { form: NgForm };\n\n  constructor(\n    public poPageDynamicLookupService: PoPageJobSchedulerLookupService,\n    private activatedRoute: ActivatedRoute,\n    private poDialogService: PoDialogService,\n    private poNotification: PoNotificationService,\n    private router: Router,\n    poPageJobSchedulerService: PoPageJobSchedulerService) {\n      super(poPageJobSchedulerService);\n    }\n\n  get stepperOrientation(): 'horizontal' | 'vertical' {\n    return window.innerWidth > 481 && window.innerWidth < 960 ? 'horizontal' : 'vertical';\n  }\n\n  ngOnInit() {\n    const paramId = this.activatedRoute.snapshot.params['id'];\n\n    this.isEdit = !!paramId;\n\n    this.poPageJobSchedulerService.configServiceApi({ endpoint: this.serviceApi });\n\n    this.loadData(paramId);\n  }\n\n  changePageActionsBySteps(currentStep: number, nextStep: number) {\n    const stepsLength = this.steps.length;\n\n    if (nextStep === stepsLength) {\n    this.jobSchedulerActions = [ ...this.concludePageActions ];\n\n    } else if (currentStep === stepsLength && nextStep < currentStep) {\n\n    this.jobSchedulerActions = [ ...this.nextPageActions ];\n    }\n  }\n\n  nextStep(stepNumber: number) {\n\n    if (stepNumber > 1 && this.schedulerExecution.form.invalid) {\n      this.markAsDirtyInvalidControls(this.schedulerExecution.form.controls);\n      return;\n    }\n\n    if (stepNumber > 2 && (this.schedulerParameters && this.schedulerParameters.form && this.schedulerParameters.form.invalid)) {\n      this.markAsDirtyInvalidControls(this.schedulerParameters.form.controls);\n      return;\n    }\n\n    this.changePageActionsBySteps(this.step, stepNumber);\n\n    const steps = this.steps[this.step - 1];\n    this.step = stepNumber;\n\n    if (steps) {\n      steps.status = PoStepperStatus.Done;\n    }\n  }\n\n  onChangeProcess(process: { processId: string, existAPI: boolean }) {\n    if (process.existAPI && process.processId) {\n      this.getParametersByProcess(process.processId);\n\n      if (!this.isEdit) {\n        this.model.executionParameter = {};\n      }\n\n      return;\n    }\n\n  }\n\n  private confirmJobScheduler() {\n    const paramId = this.activatedRoute.snapshot.params['id'];\n\n    const confirmMessage = paramId ? this.literals.confirmUpdateMessage : this.literals.confirmSaveMessage;\n\n    this.poDialogService.confirm({\n      title: this.literals.confirmation,\n      message: confirmMessage,\n      confirm: () => {\n        const model = Object.assign({}, this.model);\n\n        this.save(model, paramId);\n      }\n    });\n\n  }\n\n  private async emitSuccessMessage(msgSuccess: any, saveOperation: Observable<any>) {\n    await saveOperation.toPromise();\n    this.poNotification.success(msgSuccess);\n    this.resetJobSchedulerForm();\n  }\n\n  private getParametersByProcess(process: any) {\n\n    this.poPageJobSchedulerService.getParametersByProcess(process).subscribe(parameters => {\n      this.parameters = parameters;\n    });\n\n  }\n\n  private isDisabledAdvance(): boolean {\n    return this.schedulerExecution ? this.schedulerExecution.form.invalid : false;\n  }\n\n  private isDisabledBack(): boolean {\n    return this.step === 1;\n  }\n\n  private nextStepOperation(operation?: 'back' | 'next') {\n    const stepNumber = operation === 'back' ? this.step - 1 : this.step + 1;\n\n    this.nextStep(stepNumber);\n  }\n\n  private resetJobSchedulerForm() {\n    this.schedulerExecution.form.reset();\n\n    // radiogroup nÃ£o estava atribuindo novo valor, fica vermelho sem o timetout.\n    setTimeout(() => {\n      this.model = new PoPageJobSchedulerInternal();\n\n      this.step = 1;\n      this.steps.forEach(step => {\n        step.status = PoStepperStatus.Default;\n      });\n\n      this.jobSchedulerActions = [...this.nextPageActions];\n    });\n\n  }\n\n  private save(model: PoJobSchedulerInternal, paramId) {\n    const saveOperation = paramId\n      ? this.poPageJobSchedulerService.updateResource(paramId, model)\n      : this.poPageJobSchedulerService.createResource(model);\n\n    const msgSuccess = paramId ? this.literals.saveNotificationSuccessUpdate : this.literals.saveNotificationSuccessSave;\n\n    this.emitSuccessMessage(msgSuccess, saveOperation);\n  }\n\n}\n","import { AfterViewInit, Component, EventEmitter, Input, OnInit, Output, TemplateRef, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { PoCheckboxGroupOption, PoRadioGroupOption } from '@portinari/portinari-ui';\n\nimport { isTypeof } from '../../../utils/util';\n\nimport { PoPageJobSchedulerLookupService } from '../po-page-job-scheduler-lookup.service';\nimport { PoPageJobSchedulerService } from '../po-page-job-scheduler.service';\n\n@Component({\n  selector: 'po-page-job-scheduler-execution',\n  templateUrl: 'po-page-job-scheduler-execution.component.html'\n})\nexport class PoPageJobSchedulerExecutionComponent implements OnInit, AfterViewInit {\n\n  private _value: any = {};\n\n  dayPattern = '^(3[0-1]|[0-2][0-9]|[1-9]|0[1-9])$';\n  existProcessAPI = true;\n  minDateFirstExecution = new Date();\n  periodicityOptions: Array<PoRadioGroupOption> = [];\n  periodicityTemplates: { daily: TemplateRef<any>, weekly: TemplateRef<any>, monthly: TemplateRef<any> } ;\n  timePattern = '^(2[0-3]|[01][0-9]):?([0-5][0-9])$';\n  weekDays: Array<PoCheckboxGroupOption> = [];\n\n  @ViewChild('formExecution', { static: true }) form: NgForm;\n\n  // templates\n  @ViewChild('dailyTemplate', { static: true }) dailyTemplate;\n  @ViewChild('monthlyTemplate', { static: true }) monthlyTemplate;\n  @ViewChild('weeklyTemplate', { static: true }) weeklyTempalte;\n\n  @Input('p-is-edit') isEdit: boolean = false;\n\n  @Input('p-literals') literals = <any> {};\n\n  @Input('p-value') set value(value: any) {\n    this._value = value && isTypeof(value, 'object') ? value : {};\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  @Output('p-change-process') changeProcess: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(\n    private poPageJobSchedulerService: PoPageJobSchedulerService,\n    public poPageJobSchedulerLookup: PoPageJobSchedulerLookupService) { }\n\n  get startDateFirstExecution() {\n    return this.isEdit ? undefined : this.minDateFirstExecution;\n  }\n\n  ngAfterViewInit() {\n\n    setTimeout(() => {\n      this.subscribeProcessIdValueChanges();\n    });\n\n  }\n\n  ngOnInit() {\n    this.periodicityTemplates = {\n      daily: this.dailyTemplate,\n      monthly: this.monthlyTemplate,\n      weekly: this.weeklyTempalte\n    };\n\n    this.checkExistsProcessesAPI();\n\n    this.periodicityOptions = this.getPeriodicityOptions();\n    this.weekDays = this.getWeekDays();\n  }\n\n  private checkExistsProcessesAPI() {\n    this.poPageJobSchedulerService.getHeadProcesses().subscribe(undefined, error => {\n      this.existProcessAPI = false;\n    });\n  }\n\n  private getPeriodicityOptions() {\n    return [\n      { label: this.literals.single, value: 'single' },\n      { label: this.literals.daily, value: 'daily' },\n      { label: this.literals.weekly, value: 'weekly' },\n      { label: this.literals.monthly, value: 'monthly' }\n    ];\n  }\n\n  private getWeekDays() {\n    return [\n      { label: this.literals.sunday, value: 'Sunday' },\n      { label: this.literals.monday, value: 'Monday' },\n      { label: this.literals.tuesday, value: 'Tuesday' },\n      { label: this.literals.wednesday, value: 'Wednesday' },\n      { label: this.literals.thursday, value: 'Thursday' },\n      { label: this.literals.friday, value: 'Friday' },\n      { label: this.literals.saturday, value: 'Saturday' }\n    ];\n  }\n\n  private subscribeProcessIdValueChanges() {\n    this.form.controls['processID'].valueChanges.subscribe(processId => {\n      this.changeProcess.emit({ processId, existAPI: this.existProcessAPI });\n    });\n  }\n\n}\n","import { AfterViewInit, Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { PoDynamicFormField } from '@portinari/portinari-ui';\n\n@Component({\n  selector: 'po-page-job-scheduler-parameters',\n  templateUrl: 'po-page-job-scheduler-parameters.component.html'\n})\nexport class PoPageJobSchedulerParametersComponent implements AfterViewInit {\n\n  @ViewChild('parametersForm', { static: true }) form: NgForm;\n\n  @Input('p-literals') literals = <any> {};\n\n  @Input('p-parameters') parameters: Array<PoDynamicFormField> = [];\n\n  @Input('p-value') value;\n\n  @Output('p-valueChange') valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n  ngAfterViewInit() {\n    if (this.form) {\n      setTimeout(() => {\n\n        this.form.valueChanges.subscribe(value => {\n          this.valueChange.emit(value);\n        });\n\n      });\n    }\n  }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { DatePipe } from '@angular/common';\n\nimport { PoDynamicViewField, PoInfoOrientation } from '@portinari/portinari-ui';\n\nimport { PoJobSchedulerInternal } from '../interfaces/po-job-scheduler-internal.interface';\n\n@Component({\n  selector: 'po-page-job-scheduler-summary',\n  templateUrl: 'po-page-job-scheduler-summary.component.html'\n})\nexport class PoPageJobSchedulerSummaryComponent implements OnInit {\n\n  executionValue = '';\n  firstExecutionValue = '';\n  infoOrientation = PoInfoOrientation.Horizontal;\n  periodicityValue = '';\n  recurrentValue = '';\n\n  @Input('p-literals') literals = <any> {};\n\n  @Input('p-parameters') parameters: Array<PoDynamicViewField> = [];\n\n  @Input('p-value') value: PoJobSchedulerInternal = <any> {};\n\n  constructor(private datePipe: DatePipe) {}\n\n  ngOnInit() {\n    const { periodicity, hour, dayOfMonth, daysOfWeek, recurrent, firstExecution, firstExecutionHour } = this.value;\n\n    this.periodicityValue = this.getPeriodicityLabel(periodicity);\n    this.executionValue = this.getExecutionValue(periodicity, hour, daysOfWeek, dayOfMonth);\n    this.firstExecutionValue = this.getFirstExecutionLabel(firstExecution, firstExecutionHour);\n    this.recurrentValue = this.getRecurrentValue(recurrent);\n  }\n\n  private getExecutionValue(periodicity: string, hour?: string, daysOfWeek?: Array<string>, dayOfMonth?: number) {\n    switch (periodicity) {\n      case 'daily':\n        return this.getHourLabel(hour);\n      case 'monthly':\n        return this.getMonthlyLabelExecution(dayOfMonth, hour);\n      case 'weekly':\n        return this.getWeeklyLabelExecution(daysOfWeek, hour);\n      default:\n        return this.literals.notReported;\n    }\n  }\n\n  private getFirstExecutionLabel(firstExecution: Date, firstExecutionHour?: string): string {\n    if (firstExecution) {\n      const date = this.datePipe.transform(firstExecution, 'dd/MM/yyyy', '-0200');\n\n      return `${date} ${this.getHourLabel(firstExecutionHour)}`;\n    } else {\n      return this.literals.notReported;\n    }\n  }\n\n  private getHourLabel(hour: string) {\n    return `${this.literals.at} ${hour || '00:00'}h`;\n  }\n\n  private getMonthlyLabelExecution(dayOfMonth: number, hour: string) {\n    const hourLabel = this.getHourLabel(hour);\n\n    return `${this.literals.day} ${dayOfMonth} ${hourLabel}`;\n  }\n\n  private getPeriodicityLabel(periodicity) {\n    switch (periodicity) {\n      case 'daily':\n        return this.literals.daily;\n      case 'monthly':\n        return this.literals.monthly;\n      case 'weekly':\n        return this.literals.weekly;\n      default:\n        return this.literals.single;\n    }\n  }\n\n  private getRecurrentValue(recurrent: boolean): string {\n    return recurrent ? this.literals.yes : this.literals.no;\n  }\n\n  private getSorterWeekDays() {\n    return {\n      'sunday': 0,\n      'monday': 1,\n      'tuesday': 2,\n      'wednesday': 3,\n      'thursday': 4,\n      'friday': 5,\n      'saturday': 6\n    };\n  }\n\n  private getTranslateWeekDay(day: string): string {\n    const days = {\n      Sunday: this.literals.sunday,\n      Monday: this.literals.monday,\n      Tuesday: this.literals.tuesday,\n      Wednesday: this.literals.wednesday,\n      Thursday: this.literals.thursday,\n      Friday: this.literals.friday,\n      Saturday: this.literals.saturday,\n    };\n\n    return days[day] || '';\n  }\n\n  private getWeekDaysLabel(days: Array<string> = []): string {\n    const weekDaysSorted = this.sortWeekDays(days);\n\n    return weekDaysSorted.map(day => this.getTranslateWeekDay(day)).join(', ');\n  }\n\n  private getWeeklyLabelExecution(daysOfWeek: Array<string>, hour: string) {\n    if (daysOfWeek && Array.isArray(daysOfWeek)) {\n      return `${this.getWeekDaysLabel(daysOfWeek)} ${this.getHourLabel(hour)}`;\n    } else {\n      return this.literals.notReported;\n    }\n  }\n\n  private sortWeekDays(days: Array<string> = []) {\n    const sorterWeekDays = this.getSorterWeekDays();\n\n    return days.sort((a: string, b: string) => {\n      const currDay = a.toLowerCase();\n      const nextDay = b.toLowerCase();\n\n      return sorterWeekDays[currDay] > sorterWeekDays[nextDay] ? 1 : -1;\n    });\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport {\n  PoButtonModule,\n  PoContainerModule,\n  PoDialogModule,\n  PoDividerModule,\n  PoDynamicModule,\n  PoFieldModule,\n  PoInfoModule,\n  PoPageModule,\n  PoStepperModule,\n  PoWidgetModule\n} from '@portinari/portinari-ui';\n\nimport { PoPageJobSchedulerComponent } from './po-page-job-scheduler.component';\nimport { PoPageJobSchedulerExecutionComponent } from './po-page-job-scheduler-execution/po-page-job-scheduler-execution.component';\nimport { PoPageJobSchedulerLookupService } from './po-page-job-scheduler-lookup.service';\nimport { PoPageJobSchedulerParametersComponent } from './po-page-job-scheduler-parameters/po-page-job-scheduler-parameters.component';\nimport { PoPageJobSchedulerService } from './po-page-job-scheduler.service';\nimport { PoPageJobSchedulerSummaryComponent } from './po-page-job-scheduler-summary/po-page-job-scheduler-summary.component';\n\n@NgModule({\n  declarations: [\n    PoPageJobSchedulerComponent,\n    PoPageJobSchedulerExecutionComponent,\n    PoPageJobSchedulerParametersComponent,\n    PoPageJobSchedulerSummaryComponent\n  ],\n  exports: [\n    PoPageJobSchedulerComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    PoButtonModule,\n    PoContainerModule,\n    PoDialogModule,\n    PoDividerModule,\n    PoDynamicModule,\n    PoFieldModule,\n    PoInfoModule,\n    PoPageModule,\n    PoStepperModule,\n    PoWidgetModule\n  ],\n  providers: [\n    PoPageJobSchedulerService,\n    PoPageJobSchedulerLookupService\n  ]\n})\nexport class PoPageJobSchedulerModule { }\n","/**\n * @usedBy PoPageLoginComponent\n *\n * @description\n *\n * *Enum* para definiÃ§Ã£o do tipo de autenticaÃ§Ã£o.\n */\nexport enum PoPageLoginAuthenticationType {\n\n  /** AutenticaÃ§Ã£o Basic */\n  Basic = 'Basic',\n\n  /** AutenticaÃ§Ã£o Bearer */\n  Bearer = 'Bearer',\n\n}\n","import { Subscription } from 'rxjs';\nimport { EventEmitter, Input, OnDestroy, Output } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { convertToBoolean, convertToInt, getShortBrowserLanguage, isExternalLink, isTypeof, poLocaleDefault } from './../../utils/util';\n\nimport { PoPageLogin } from './interfaces/po-page-login.interface';\nimport { PoPageLoginAuthenticationType } from './enums/po-page-login-authentication-type.enum';\nimport { PoPageLoginCustomField } from './interfaces/po-page-login-custom-field.interface';\nimport { PoPageLoginLiterals } from './interfaces/po-page-login-literals.interface';\nimport { PoPageLoginRecovery } from './interfaces/po-page-login-recovery.interface';\nimport { PoPageLoginService } from './po-page-login.service';\n\nconst poPageLoginContentMaxLength = 40;\n\nexport const poPageLoginLiteralsDefault = {\n  en: <PoPageLoginLiterals> {\n    title: 'Welcome',\n    loginErrorPattern: 'Invalid Login',\n    loginHint: `Your login user was given to you at your first day.\n    If you don't have this information contact support`,\n    loginPlaceholder: 'Insert your e-mail',\n    passwordErrorPattern: 'Invalid Password',\n    passwordPlaceholder: 'Insert your password',\n    customFieldErrorPattern: 'Invalid value',\n    customFieldPlaceholder: 'Please enter a value',\n    rememberUser: 'Automatic login',\n    rememberUserHint: 'You can disable this option in system configuration',\n    submitLabel: 'Enter',\n    submittedLabel: 'Loading...',\n    forgotPassword: 'Forgot your Password?',\n    highlightInfo: '',\n    registerUrl: 'New register',\n    titlePopover: 'Oops!',\n    forgotYourPassword: 'Forgot your password?',\n    ifYouTryHarder: 'If you try ',\n    attempts: '{0} more time(s) ',\n    yourUserWillBeBlocked: 'without success your user will be blocked and you will be left 24 hours without being able to access :(',\n    createANewPasswordNow: 'Better create a new password now! You will be able to log into the system right away.',\n    iForgotMyPassword: 'I forgot my password'\n  },\n  es: <PoPageLoginLiterals> {\n    title: 'Bienvenido',\n    loginErrorPattern: 'Login invÃ¡lido',\n    loginHint: `Su usuario ha sido entregado para usted en su primer dÃ­a.\n    Si no tiene esta informaciÃ³n, pÃ³ngase en contacto con el soporte tÃ©cnico`,\n    loginPlaceholder: 'Inserte su e-mail',\n    passwordErrorPattern: 'ContraseÃ±a invÃ¡lida',\n    passwordPlaceholder: 'Inserte su contraseÃ±a',\n    customFieldErrorPattern: 'Valor no vÃ¡lido.',\n    customFieldPlaceholder: 'Por favor introduzca un valor',\n    rememberUser: 'Inicio de sesiÃ³n automÃ¡ticamente',\n    rememberUserHint: 'Puede deshabilitar esta opciÃ³n en el menÃº del sistema.',\n    submitLabel: 'Entrar',\n    submittedLabel: 'Cargando...',\n    forgotPassword: 'Olvidaste tu contraseÃ±a?',\n    highlightInfo: '',\n    registerUrl: 'Nuevo registro',\n    titlePopover: 'Opa!',\n    forgotYourPassword: 'Olvidaste tu contraseÃ±a?',\n    ifYouTryHarder: 'Si intenta mÃ¡s ',\n    attempts: '{0} vez/veces ',\n    yourUserWillBeBlocked: 'sin Ã©xito su usuario sera bloqueado y usted vÃ¡s permanecer 24 horas sin poder acceder a :(',\n    createANewPasswordNow: 'Â¡Mejor crear una nueva contraseÃ±a ahora! Usted podrÃ¡ entrar en el sistema inmediatamente despuÃ©s.',\n    iForgotMyPassword: 'Olvide mi contraseÃ±a'\n  },\n  pt: <PoPageLoginLiterals> {\n    title: 'Bem-vindo',\n    loginErrorPattern: 'Login invÃ¡lido',\n    loginHint: `Seu usuÃ¡rio foi entregue a vocÃª no seu primeiro dia.\n    Caso nÃ£o tenha mais essa informaÃ§Ã£o contacte o suporte`,\n    loginPlaceholder: 'Insira seu e-mail',\n    passwordErrorPattern: 'Senha invÃ¡lida',\n    passwordPlaceholder: 'Insira sua senha',\n    customFieldErrorPattern: 'Valor invÃ¡lido.',\n    customFieldPlaceholder: 'Por favor insira um valor',\n    rememberUser: 'Logar automaticamente',\n    rememberUserHint: 'VocÃª pode desabilitar essa opÃ§Ã£o no menu do sistema',\n    submitLabel: 'Entrar',\n    submittedLabel: 'Carregando...',\n    forgotPassword: 'Esqueceu sua senha?',\n    highlightInfo: '',\n    registerUrl: 'Novo registro',\n    titlePopover: 'Opa!',\n    forgotYourPassword: 'Esqueceu sua senha?',\n    ifYouTryHarder: 'Se tentar mais ',\n    attempts: '{0} vez(es) ',\n    yourUserWillBeBlocked: 'sem sucesso seu usuÃ¡rio serÃ¡ bloqueado e vocÃª fica 24 horas sem poder acessar :(',\n    createANewPasswordNow: 'Melhor criar uma senha nova agora! VocÃª vai poder entrar no sistema logo em seguida.',\n    iForgotMyPassword: 'Esqueci minha senha'\n  },\n  ru: <PoPageLoginLiterals> {\n    title: 'ÐÐ¾Ð±ÑÐ¾ Ð¿Ð¾Ð¶Ð°Ð»Ð¾Ð²Ð°ÑÑ!',\n    loginErrorPattern: 'ÐÐµÐ²ÐµÑÐ½ÑÐ¹ Ð»Ð¾Ð³Ð¸Ð½',\n    loginHint: `ÐÐ°Ñ Ð»Ð¾Ð³Ð¸Ð½ Ð±ÑÐ» Ð¿ÑÐµÐ´Ð¾ÑÑÐ°Ð²Ð»ÐµÐ½ Ð²Ð°Ð¼ Ð² Ð¿ÐµÑÐ²ÑÐ¹ Ð´ÐµÐ½Ñ.\n    ÐÑÐ»Ð¸ Ñ Ð²Ð°Ñ Ð½ÐµÑ ÑÑÐ¾Ð¹ Ð¸Ð½ÑÐ¾ÑÐ¼Ð°ÑÐ¸Ð¸, Ð¾Ð±ÑÐ°ÑÐ¸ÑÐµÑÑ Ð² ÑÐ»ÑÐ¶Ð±Ñ Ð¿Ð¾Ð´Ð´ÐµÑÐ¶ÐºÐ¸`,\n    loginPlaceholder: 'ÐÑÑÐ°Ð²ÑÑÐµ ÑÐ²Ð¾Ð¹ Ð°Ð´ÑÐµÑ ÑÐ»ÐµÐºÑÑÐ¾Ð½Ð½Ð¾Ð¹ Ð¿Ð¾ÑÑÑ',\n    passwordErrorPattern: 'ÐÐµÐ²ÐµÑÐ½ÑÐ¹ Ð¿Ð°ÑÐ¾Ð»Ñ',\n    passwordPlaceholder: 'ÐÐ²ÐµÐ´Ð¸ÑÐµ ÑÐ²Ð¾Ð¹ Ð¿Ð°ÑÐ¾Ð»Ñ',\n    customFieldErrorPattern: 'ÐÐµÐ²ÐµÑÐ½Ð¾Ðµ Ð·Ð½Ð°ÑÐµÐ½Ð¸Ðµ.',\n    customFieldPlaceholder: 'ÐÐ¾Ð¶Ð°Ð»ÑÐ¹ÑÑÐ°, Ð²Ð²ÐµÐ´Ð¸ÑÐµ Ð·Ð½Ð°ÑÐµÐ½Ð¸Ðµ',\n    rememberUser: 'ÐÐ²ÑÐ¾Ð¼Ð°ÑÐ¸ÑÐµÑÐºÐ¸Ð¹ Ð²ÑÐ¾Ð´',\n    rememberUserHint: 'ÐÑ Ð¼Ð¾Ð¶ÐµÑÐµ Ð¾ÑÐºÐ»ÑÑÐ¸ÑÑ ÑÑÑ Ð¾Ð¿ÑÐ¸Ñ Ð² ÐºÐ¾Ð½ÑÐ¸Ð³ÑÑÐ°ÑÐ¸Ð¸ ÑÐ¸ÑÑÐµÐ¼Ñ',\n    submitLabel: 'ÐÐ¾Ð¹ÑÐ¸',\n    submittedLabel: '3Ð°Ð³ÑÑÐ·ÐºÐ°...',\n    forgotPassword: 'ÐÐ°Ð±ÑÐ»Ð¸ Ð¿Ð°ÑÐ¾Ð»Ñ?',\n    highlightInfo: '',\n    registerUrl: 'ÐÐ¾Ð²ÑÐ¹ ÑÐµÐ³Ð¸ÑÑÑ',\n    titlePopover: 'ÐÐ¹!',\n    forgotYourPassword: 'ÐÐ°Ð±ÑÐ»Ð¸ Ð¿Ð°ÑÐ¾Ð»Ñ?',\n    ifYouTryHarder: 'ÐÑÐ»Ð¸ Ð²Ñ Ð±ÐµÐ·ÑÑÐ¿ÐµÑÐ½Ð¾ Ð¿Ð¾Ð¿ÑÑÐ°ÐµÑÐµÑÑ Ð²Ð¾Ð¹ÑÐ¸ ÐµÑÐµ ',\n    attempts: '{0} ÑÐ°Ð·(Ð°) ',\n    yourUserWillBeBlocked: 'ÐÐ°Ñ Ð¿Ð¾Ð»ÑÐ·Ð¾Ð²Ð°ÑÐµÐ»Ñ Ð±ÑÐ´ÐµÑ Ð·Ð°Ð±Ð»Ð¾ÐºÐ¸ÑÐ¾Ð²Ð°Ð½, Ð¸ ÐÑ Ð¾ÑÑÐ°Ð½ÐµÑÐµÑÑ Ð½Ð° 24 ÑÐ°ÑÐ° Ð±ÐµÐ· Ð²Ð¾Ð·Ð¼Ð¾Ð¶Ð½Ð¾ÑÑÐ¸ Ð´Ð¾ÑÑÑÐ¿Ð° :(',\n    createANewPasswordNow: 'ÐÑÑÑÐµ ÑÐ¾Ð·Ð´Ð°Ð¹ÑÐµ Ð½Ð¾Ð²ÑÐ¹ Ð¿Ð°ÑÐ¾Ð»Ñ ÑÐµÐ¹ÑÐ°Ñ!Â ÐÑ ÑÐ¼Ð¾Ð¶ÐµÑÐµ ÑÑÐ°Ð·Ñ Ð²Ð¾Ð¹ÑÐ¸ Ð² ÑÐ¸ÑÑÐµÐ¼Ñ.',\n    iForgotMyPassword: 'Ð¯ Ð·Ð°Ð±ÑÐ» ÑÐ²Ð¾Ð¹ Ð¿Ð°ÑÐ¾Ð»Ñ'\n  }\n};\n\nexport const poPageLoginLiteralIn = {\n  en: 'in',\n  es: 'en',\n  pt: 'em',\n  ru: 'Ð²'\n};\n\nexport const poPageLoginLiteralTo = {\n  en: 'to',\n  es: 'al',\n  pt: 'ao',\n  ru: 'Ðº'\n};\n\n/**\n * @description\n *\n * O componente `po-page-login` Ã© utilizado como template para tela de login.\n * Com ele Ã© possÃ­vel definirmos valores para usuÃ¡rio, senha e definir aÃ§Ãµes para recuperaÃ§Ã£o de senha e gravaÃ§Ã£o de dados do usuÃ¡rio.\n * TambÃ©m Ã© possÃ­vel inserir uma imagem em conjunto com um texto de destaque.\n *\n *\n * A propriedade `p-authentication-url` automatiza a rotina do componente e simplifica o processo para autenticaÃ§Ã£o do usuÃ¡rio, bastando\n * definir uma url para requisiÃ§Ã£o da autenticaÃ§Ã£o. A flexibilidade e praticidade podem chegar a um nÃ­vel em que o desenvolvimento\n * da aplicaÃ§Ã£o no *client side* Ã© desprovida de qualquer cÃ³digo-fonte relacionado Ã  rotina de login de usuÃ¡rio.\n * Seu detalhamento para uso pode ser visto logo abaixo em *propriedades*.\n * Caso julgue necessÃ¡rio, pode-se tambÃ©m definir manualmente a rotina do componente.\n *\n *\n * Para que as imagens sejam exibidas corretamente, Ã© necessÃ¡rio incluir o caminho delas ao projeto. Para isso, edite\n * o *assets* no arquivo **angular.json** da aplicaÃ§Ã£o na seguinte ordem:\n * ```\n *   \"assets\": [\n *     \"src/assets\",\n *     \"src/favicon.ico\",\n *     {\n *       \"glob\": \"**\\/*\",\n *       \"input\": \"node_modules/@portinari/style/images\",\n *       \"output\": \"assets/images\"\n *     }\n *   ]\n * ```\n */\nexport abstract class PoPageLoginBaseComponent implements OnDestroy {\n\n  allLoginErrors: Array<string> = [];\n  allPasswordErrors: Array<string> = [];\n  customFieldObject: PoPageLoginCustomField;\n  customFieldType: string;\n  loginSubscription: Subscription;\n  password: string;\n  rememberUser: boolean = false;\n  selectedLanguage: string;\n  showExceededAttemptsWarning = false;\n\n  private _authenticationType: PoPageLoginAuthenticationType = PoPageLoginAuthenticationType.Basic;\n  private _authenticationUrl: string;\n  private _blockedUrl: string;\n  private _contactEmail: string;\n  private _customField: string | PoPageLoginCustomField;\n  private _environment?: string;\n  private _exceededAttemptsWarning?: number;\n  private _hideRememberUser: boolean = false;\n  private _literals: PoPageLoginLiterals;\n  private _loading?: boolean = false;\n  private _login: string;\n  private _loginErrors: Array<string> = [];\n  private _passwordErrors: Array<string> = [];\n  private _productName: string;\n  private _recovery: string | PoPageLoginRecovery | Function;\n  private _registerUrl: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Ao informar um valor do tipo `string`, o mesmo serÃ¡ aplicado como a chave do campo customizado e utilizarÃ¡\n   * os valores padrÃµes contidos na propriedade `literals` como `customFieldErrorPattern` e `customFieldPlaceholder`.\n   *\n   * Existe a possibilidade de informar um objeto que segue a definiÃ§Ã£o da interface `PoPageLoginCustomField`, onde\n   * atravÃ©s dos parÃ¢metros enviados pode gerar um `po-input`, `po-combo` especificamente para serviÃ§os\n   * ou `po-select` para valores fixos.\n   *\n   * Abaixo seguem os exemplos de cada tipo de campo.\n   *\n   * `po-input`:\n   *\n   * ```\n   * {\n   *   property: 'domain',\n   *   value: 'jv01',\n   *   placeholder: 'Enter your domain',\n   *   pattern: '[a-z]',\n   *   errorPattern: 'Invalid value'\n   * }\n   * ```\n   *\n   * `po-combo`:\n   *\n   * ```\n   * {\n   *   property: 'domain',\n   *   value: 'jv01',\n   *   placeholder: 'Enter your domain',\n   *   url: 'https://portinari.io/sample/api/comboOption/domains',\n   *   fieldValue: 'nickname'\n   * }\n   * ```\n   *\n   * `po-select`:\n   *\n   * ```\n   * {\n   *   property: 'domain',\n   *   value: 'jv01',\n   *   placeholder: 'Enter your domain',\n   *   options: [{label: 'Domain 1', value: '1'}, {label: 'Domain 2', value: '2'}]\n   * }\n   * ```\n   *\n   * Caso o customField possua options, url e fieldValue preenchidos, serÃ¡ priorizado o po-select\n   * utilizando o options.\n   *\n   */\n  @Input('p-custom-field') set customField(value: string | PoPageLoginCustomField) {\n    if (value) {\n\n      if (isTypeof(value, 'string')) {\n        this.customFieldType = 'input';\n        this._customField = value;\n        this.customFieldObject = this.getDefaultCustomFieldObject(value);\n        return;\n      }\n\n      if (isTypeof(value, 'object') && !Array.isArray(value) && value['property']) {\n        this._customField = value;\n        this.customFieldObject = <PoPageLoginCustomField> value;\n\n        if (!this.customFieldObject.options && !this.customFieldObject.url) {\n          this.customFieldType = 'input';\n        } else {\n          this.customFieldType = this.customFieldObject.options ? 'select' : 'combo';\n        }\n\n        return;\n      }\n\n    }\n\n    this._customField = undefined;\n    this.customFieldObject = undefined;\n  }\n\n  get customField(): string | PoPageLoginCustomField {\n    return this._customField;\n  }\n\n  /**\n   * O `p-background` permite inserir uma imagem de destaque ao lado direito do formulÃ¡rio de login, caso a propriedade\n   * nÃ£o seja preenchida o formulÃ¡rio serÃ¡ centralizado no espaÃ§o disponÃ­vel.\n   *\n   * A fonte da imagem pode ser de um caminho local ou uma url de um servidor externo.\n   *\n   * AlÃ©m da imagem, Ã© possÃ­vel adicionar um texto informativo por cima da imagem da imagem de destaque, para isso informe\n   * um valor para a literal `highlightInfo`.\n   *\n   * > Veja mais sobre as literais na propriedade `p-literals`.\n   *\n   * Exemplos de valores vÃ¡lidos:\n   * - **local**: `./assets/images/login-background.png`\n   * - **url externa**: `https://portinari.io/assets/images/login-background.png`\n   *\n   * > Essa propriedade Ã© ignorada para aplicaÃ§Ãµes mobile.\n   */\n  @Input('p-background') background?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Personaliza o e-mail que Ã© exibido na mensagem de dica de login padrÃ£o para contato de suporte.\n   */\n  @Input('p-contact-email') set contactEmail(value: string) {\n    this._contactEmail = value;\n  }\n  get contactEmail() {\n    return this._contactEmail;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Valor customizado que sucede o tÃ­tulo de boas-vindas.\n   *\n   * > Esta propriedade Ã© sobreposta se `p-literals` contiver uma definiÃ§Ã£o customizada para a literal `title`.\n   *\n   * > Veja mais sobre as literais na propriedade `p-literals`.\n   *\n   */\n  @Input('p-product-name') set productName(value: string) {\n    this._productName = value;\n  }\n  get productName() {\n    return this._productName;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   * Adiciona uma `tag` abaixo do tÃ­tulo que especifica o ambiente que o usuÃ¡rio estÃ¡ fazendo o login.\n   *\n   * > Essa propriedade limita o texto em 40 caracteres.\n   */\n  @Input('p-environment') set environment(environment: string) {\n    if (environment && environment.length > poPageLoginContentMaxLength) {\n      this._environment = environment.substring(0, poPageLoginContentMaxLength);\n    } else {\n      this._environment = environment;\n    }\n  }\n  get environment() {\n    return this._environment;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   * Exibe um aviso de bloqueio de acordo com a quantidade restante de tentativas.\n   * O aviso serÃ¡ exibido somente se a quantidade for maior que zero.\n   *\n   * > Caso tenha algum valor atribuÃ­do para o atributo `p-authentication-url` e o retorno da requisiÃ§Ã£o estiver atribuindo valor\n   * para o `p-exceeded-attempts-warning`, o valor considerado serÃ¡ o do retorno da requisiÃ§Ã£o.\n   *\n   * @default `0`\n   */\n  @Input('p-exceeded-attempts-warning') set exceededAttemptsWarning(value: number) {\n    this._exceededAttemptsWarning = convertToInt(value);\n    this.showExceededAttemptsWarning = this.exceededAttemptsWarning > 0;\n  }\n\n  get exceededAttemptsWarning(): number {\n    return this._exceededAttemptsWarning;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Esconde a funÃ§Ã£o \"Lembrar usuÃ¡rio\" do formulÃ¡rio de login.\n   *\n   * Quando essa propriedade Ã© setada com `true` a propriedade `rememberUser` enviada no evento `p-login-submit` serÃ¡ sempre\n   * `false`.\n   *\n   * > Veja a propriedade `p-literals` para customizar a literal `rememberUser`.\n   *\n   * @default `false`\n   */\n  @Input('p-hide-remember-user') set hideRememberUser(value: boolean) {\n    this._hideRememberUser = <any>value === '' ? true : convertToBoolean(value);\n\n    if (this._hideRememberUser) {\n      this.rememberUser = false;\n    }\n  }\n  get hideRememberUser(): boolean {\n    return this._hideRememberUser;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com as literais usadas no `po-page-login`.\n   *\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\n   *\n   * ```\n   *  const customLiterals: PoPageLoginLiterals = {\n   *    attempts: '{0} vez(es) ',\n   *    createANewPasswordNow: 'Melhor criar uma senha nova agora! VocÃª vai poder entrar no sistema logo em seguida.',\n   *    forgotPassword: 'Esqueceu sua senha?',\n   *    forgotYourPassword: 'Esqueceu sua senha?',\n   *    highlightInfo: '',\n   *    iForgotMyPassword: 'Esqueci minha senha',\n   *    ifYouTryHarder: 'Se tentar mais ',\n   *    title: 'Seja bem-vindo',\n   *    loginErrorPattern: 'Login obrigatÃ³rio',\n   *    loginHint: 'Caso nÃ£o possua usuÃ¡rio entre em contato com o suporte',\n   *    loginLabel: 'Insira seu usuÃ¡rio',\n   *    loginPlaceholder: 'Insira seu usuÃ¡rio de acesso',\n   *    passwordErrorPattern: 'Senha obrigatÃ³ria',\n   *    passwordLabel: 'Insira sua senha',\n   *    passwordPlaceholder: 'Insira sua senha de acesso',\n   *    customFieldErrorPattern: 'Campo customizado invÃ¡lido',\n   *    customFieldPlaceholder: 'Por favor insira um valor',\n   *    registerUrl: 'Novo registro',\n   *    rememberUser: 'Lembrar usuÃ¡rio',\n   *    rememberUserHint: 'Esta opÃ§Ã£o pode ser desabilitada nas configuraÃ§Ãµes do sistema',\n   *    submitLabel: 'Acessar sistema',\n   *    submittedLabel: 'Carregando...',\n   *    titlePopover: 'Opa!',\n   *    yourUserWillBeBlocked: 'sem sucesso seu usuÃ¡rio serÃ¡ bloqueado e vocÃª fica 24 horas sem poder acessar :('\n   *  };\n   * ```\n   *\n   * Ou passando apenas as literais que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: PoPageLoginLiterals = {\n   *    loginPlaceholder: 'Insira seu usuÃ¡rio de acesso',\n   *    passwordPlaceholder: 'Insira sua senha de acesso',\n   *    submitLabel: 'Acessar sistema'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <po-page-login\n   *   [p-literals]=\"customLiterals\">\n   * </po-page-login>\n   * ```\n   *\n   *  > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do browser (pt, en, es).\n   *  > Ã tambÃ©m possÃ­vel alternar o objeto padrÃ£o de literais atravÃ©s do seletor de idiomas localizado na parte inferior do template,\n   * nesse caso, hÃ¡ tambÃ©m a opÃ§Ã£o do idioma russo.\n   */\n  @Input('p-literals') set literals(value: PoPageLoginLiterals) {\n    this._literals = value;\n  }\n\n  get literals() {\n    return this._literals;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Habilita um estado de carregamento ao botÃ£o de *login*.\n   *\n   * > Ã necessÃ¡rio atribuir `true` Ã  esta propriedade na funÃ§Ã£o definida em `p-login-submit`.\n   *\n   * @default `false`\n   */\n  @Input('p-loading') set loading(value: boolean) {\n    this._loading = convertToBoolean(value);\n  }\n\n  get loading(): boolean {\n    return this._loading;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Valor do modelo do campo de login.\n   */\n  @Input('p-login') set login(value: string) {\n    this._login = value;\n\n    if (!this.authenticationUrl) {\n      this.loginChange.emit(this._login);\n    }\n  }\n\n  get login(): string {\n    return this._login;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caminho para a logomarca localizada na parte superior.\n   *\n   * > Caso seja indefinida o espaÃ§o se mantÃ©m preservado porÃ©m vazio.\n   */\n  @Input('p-logo') logo?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * ExpressÃ£o regular para validar o campo de login, caso a expressÃ£o nÃ£o seja atentida, a literal `loginErrorPattern`\n   * serÃ¡ exibida.\n   *\n   * Exemplos de valores vÃ¡lidos:\n   * - email: `[expressao-regular-email]`\n   * - cpf: `[expressao-regular-cpf]`\n   *\n   * > Veja a propriedade `p-literals` para customizar a literal `loginErrorPattern`.\n   */\n  @Input('p-login-pattern') loginPattern?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Atributo que recebe uma lista de erros e exibe abaixo do campo de login.\n   */\n  @Input('p-login-errors') set loginErrors(value: Array<string>) {\n    this._loginErrors = value || [];\n    this.setLoginErrors(this._loginErrors);\n  }\n  get loginErrors() {\n    return this._loginErrors;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Atributo que recebe uma lista de erros e exibe abaixo do campo de password.\n   */\n  @Input('p-password-errors') set passwordErrors(value: Array<string>) {\n    this._passwordErrors = value || [];\n    this.setPasswordErrors(this._passwordErrors);\n  }\n  get passwordErrors() {\n    return this._passwordErrors;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * ExpressÃ£o regular para validar o campo de password, caso a expressÃ£o nÃ£o seja atentida, a literal `passwordErrorPattern`\n   * serÃ¡ exibida.\n   *\n   * Exemplos de valores vÃ¡lidos:\n   * - Apenas nÃºmeros: `\\d?`\n   * - Letras mÃ­nusculas: `\\z?`\n   *\n   * > Veja a propriedade `p-literals` para customizar a literal `passwordErrorPattern`.\n   */\n  @Input('p-password-pattern') passwordPattern?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Exibe um link abaixo do formulÃ¡rio de login para que os usuÃ¡rios da aplicaÃ§Ã£o faÃ§am a recuperaÃ§Ã£o dos dados de autenticaÃ§Ã£o.\n   *\n   * A propriedade aceita os seguintes tipos:\n   *\n   * - **String**: informe uma url externa ou uma rota vÃ¡lida;\n   * - **Function**: pode-se customizar a aÃ§Ã£o. Para esta possilidade basta atribuir:\n   * ```\n   * <po-page-login>\n   *   [recovery]=\"this.myRecovery.bind(this)\">\n   * </po-page-login>\n   * ```\n   *\n   * - **PoPageLoginRecovery**: cria-se vÃ­nculo automÃ¡tico com o template **po-modal-password-recovery**.\n   *   O objeto deve conter a **url** para requisiÃ§Ã£o dos recursos e pode-se definir o **tipo** de modal para recuperaÃ§Ã£o de senha,\n   *   **email** para contato e **mÃ¡scara** do campo de telefone.\n   */\n  @Input('p-recovery') set recovery(value: string | Function | PoPageLoginRecovery) {\n    this._recovery = value;\n  }\n\n  get recovery() {\n    return this._recovery;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caso a aplicaÃ§Ã£o tenha um link para novos cadastros, informe uma url externa ou uma rota vÃ¡lida, dessa\n   * forma serÃ¡ exibido um link abaixo do formulÃ¡rio de login para os usuÃ¡rios da aplicaÃ§Ã£o.\n   *\n   * Exemplos de valores vÃ¡lidos:\n   * - **local**: `/home`\n   * - **url externa**: `https://portinari.io`\n   *\n   * > Veja a propriedade `p-literals` para customizar a literal `registerUrl`.\n   */\n  @Input('p-register-url') set registerUrl(value: string) {\n    this._registerUrl = isTypeof(value, 'string') ? value : undefined;\n  }\n\n  get registerUrl(): string {\n    return this._registerUrl;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caminho para a logomarca localizada no rodapÃ©.\n   */\n  @Input('p-secondary-logo') secondaryLogo?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Atributo que recebe o tipo de esquema da autenticaÃ§Ã£o, sendo suportados apenas os valores `Basic` e `Bearer`.\n   *\n   * > Caso o tipo definido seja `Basic`, o componente farÃ¡ uma requisiÃ§Ã£o `POST` contendo:\n   *\n   * ```\n   * headers {\n   *  Authorization: Basic base64(login:password)\n   * }\n   *\n   * body {\n   *  rememberUser: rememberUser\n   * }\n   * ```\n   *\n   * > Caso o tipo definido seja `Bearer`, o componente farÃ¡ uma requisiÃ§Ã£o `POST` contendo:\n   *\n   * ```\n   * body {\n   *  login: login,\n   *  password: base64(password),\n   *  rememberUser: rememberUser\n   * }\n   * ```\n   *\n   * @default `PoPageLoginAuthenticationType.Basic`\n   */\n  @Input('p-authentication-type') set authenticationType(value: PoPageLoginAuthenticationType) {\n    this._authenticationType =\n    (<any>Object).values(PoPageLoginAuthenticationType).includes(value) ? value : PoPageLoginAuthenticationType.Basic;\n  }\n\n  get authenticationType(): PoPageLoginAuthenticationType {\n    return this._authenticationType;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Endpoint usado pelo template para requisiÃ§Ã£o do recurso. Quando preenchido, o mÃ©todo `p-login-submit` serÃ¡ ignorado e o\n   * componente adquirirÃ¡ automatizaÃ§Ã£o para o processo de autenticaÃ§Ã£o.\n   *\n   * ### Processos\n   * Ao digitar um valor vÃ¡lido no campo de login/password e pressionar **Enter**, o componente farÃ¡ uma requisiÃ§Ã£o `POST`\n   * na url especificada nesta propriedade passando o objeto contendo o valor definido pelo usuÃ¡rio:\n   *\n   * ```\n   * headers {\n   *  Authorization: Basic base64(login:password)\n   * }\n   *\n   * body {\n   *  rememberUser: rememberUser\n   * }\n   * ```\n   *\n   * Em caso de **sucesso**, o objeto de retorno Ã© armazenado no `sessionStorage` e o usuÃ¡rio Ã© redirecionado para a pÃ¡gina inicial da\n   * aplicaÃ§Ã£o `/`.\n   *\n   * ```\n   * 200:\n   *  {\n   *    user: user\n   *  }\n   * ```\n   *\n   * Em caso de **erro** na autenticaÃ§Ã£o, espera-se o seguinte retorno:\n   *\n   * ```\n   * 400/401\n   *  {\n   *    code: 400/401,\n   *    message: message,\n   *    detailedMessage: detailedMessage,\n   *    helpUrl?: helpUrl\n   *  }\n   * ```\n   *\n   * > Pode-se atribuir uma quantidade mÃ¡xima de tentativas restantes (maxAttemptsRemaining) para o atributo `p-exceeded-attempts-warning`,\n   * assim como os avisos relacionados aos campos login e password (loginWarnings, passwordWarnings) para os atributos `p-login-errors` e\n   * `p-password-errors` conforme retorno abaixo:\n   *\n   * ```\n   * 400\n   *  {\n   *    code: 400/401,\n   *    message: message,\n   *    detailedMessage: detailedMessage,\n   *    helpUrl?: helpUrl,\n   *    maxAttemptsRemaining?: maxAttemptsRemaining,\n   *    loginWarnings?: [loginWarnings],\n   *    passwordWarnings?: [passwordWarnings]\n   *  }\n   * ```\n   *\n   * > Caso o valor atribuÃ­do para `p-exceeded-attempts-warning` seja igual a 0(zero), poderÃ¡ ser passado um valor para o\n   * atributo `p-blocked-url` e o usuÃ¡rio serÃ¡ redirecionado para uma tela de bloqueio.\n   *\n   * *Processo finalizado.*\n   *\n   * _______________\n   *\n   * #### Praticidade\n   * As informaÃ§Ãµes do serviÃ§o de autenticaÃ§Ã£o tambÃ©m podem ser transmitidas diretamente pelas configuraÃ§Ã£os de rota e, desta maneira,\n   * dispensa-se qualquer menÃ§Ã£o e/ou importaÃ§Ã£o do componente `po-page-login` no restante da aplicaÃ§Ã£o. O exemplo abaixo exemplifica\n   * a forma dinÃ¢mica com a qual o template de tela de login pode ser gerado ao navegar para rota `/login`, e tambÃ©m como ele se comunica\n   * com o serviÃ§o para efetuaÃ§Ã£o do processo de autenticaÃ§Ã£o do usuÃ¡rio e solicitaÃ§Ã£o de nova senha.\n   * Basta definir nas configuraÃ§Ãµes de rota:\n   *\n   *\n   * ```\n   *   import { PoPageLoginComponent, PoPageLoginAthenticationType } from '@portinari/portinari-templates';\n   *\n   *   ...\n   *   const routes: Routes = [\n   *     {\n   *       path: 'login', component: PoPageLoginComponent, data: {\n   *         serviceApi: 'https://portinari.io/sample/api/users/authentication',\n   *         environment: 'development',\n   *         recovery: {\n   *           url: 'https://portinari.io/sample/api/users',\n   *           type: PoModalPasswordRecoveryType.All,\n   *           contactMail: 'dev.portinari@portinari.com',\n   *           phoneMask: '9-999-999-9999'\n   *         },\n   *         registerUrl: '/new-password',\n   *         authenticationType: PoPageLoginAthenticationType.Basic\n   *       }\n   *     }\n   *     ...\n   *   ];\n   *\n   *   @NgModule({\n   *     imports: [RouterModule.forRoot(routes)],\n   *     exports: [RouterModule]\n   *   })\n   *   export class AppRoutingModule { }\n   * ```\n   *\n   *\n   * O metadado `serviceApi` deve ser a **url** para requisiÃ§Ã£o dos recursos de autenticaÃ§Ã£o, o `environment` alimenta a propriedade\n   * `p-environment`, `recovery` Ã© a interface `PoPageLoginRecovery` responsÃ¡vel pelas especificaÃ§Ãµes contidas na modal de recuperaÃ§Ã£o de\n   * senha, `registerUrl` alimenta a propriedade `p-register-url` e `authenticationType` que define a propriedade `p-authentication-type`.\n   *\n   * > Ã essencial que siga a nomenclatura dos atributos exemplificados acima para sua efetiva funcionalidade.\n   *\n   */\n  @Input('p-authentication-url') set authenticationUrl(value: string) {\n    this._authenticationUrl = isTypeof(value, 'string') ? value : undefined;\n  }\n\n  get authenticationUrl(): string {\n    return this._authenticationUrl;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caso o valor atribuÃ­do para `p-exceeded-attempts-warning` seja igual a 0(zero) e a aplicaÃ§Ã£o tenha um link de bloqueio de usuÃ¡rio,\n   * informe uma url externa ou uma rota vÃ¡lida, dessa forma em caso de bloqueio o usuÃ¡rio serÃ¡ redirecionado.\n   */\n  @Input('p-blocked-url') set blockedUrl(value: string) {\n    this._blockedUrl = isTypeof(value, 'string') ? value : undefined;\n  }\n\n  get blockedUrl(): string {\n    return this._blockedUrl;\n  }\n\n  /**\n   * Evento disparado quando o usuÃ¡rio alterar o input do campo login.\n   *\n   * Esse evento receberÃ¡ como parÃ¢metro uma variÃ¡vel do tipo `string` com o texto informado no campo.\n   *\n   * > Esta propriedade serÃ¡ ignorada se for definido valor para a propriedade `p-authentication-url`.\n   */\n  @Output('p-login-change') loginChange?: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * Evento disparado ao submeter o formulÃ¡rio de login (apertando `Enter` dentro dos campos ou pressionando o botÃ£o de confirmaÃ§Ã£o).\n   *\n   * Esse evento receberÃ¡ como parÃ¢metro um objeto do tipo `PoPageLogin` com os dados informados no formulÃ¡rio.\n   *\n   * > Esta propriedade serÃ¡ ignorada se for definido valor para a propriedade `p-url-recovery`.\n   *\n   * > Para mais detalhes consulte a documentaÃ§Ã£o sobre a interface `PoPageLogin` mais abaixo.\n   */\n  @Output('p-login-submit') loginSubmit = new EventEmitter<PoPageLogin>();\n\n  /**\n   * Evento disparado quando o usuÃ¡rio alterar o input do campo password.\n   *\n   * Esse evento receberÃ¡ como parÃ¢metro uma variÃ¡vel do tipo `string` com o texto informado no campo.\n   *\n   * > Esta propriedade serÃ¡ ignorada se for definido valor para a propriedade `p-authentication-url`.\n   */\n  @Output('p-password-change') passwordChange?: EventEmitter<string> = new EventEmitter<string>();\n\n  get language(): string {\n    return this.selectedLanguage || getShortBrowserLanguage();\n  }\n\n  get pageLoginLiterals(): PoPageLoginLiterals {\n    const loginHintWithContactEmail = this.contactEmail ? this.concatenateLoginHintWithContactEmail(this.contactEmail) : undefined;\n\n    const titleWithProductName = this.productName ? this.concatenateTitleWithProductName(this.productName) : undefined;\n\n    return {\n      ...poPageLoginLiteralsDefault[poLocaleDefault],\n      ...poPageLoginLiteralsDefault[this.language],\n      ...loginHintWithContactEmail,\n      ...titleWithProductName,\n      ...this.literals\n    };\n  }\n\n  constructor(private loginService: PoPageLoginService, public router: Router) { }\n\n  ngOnDestroy() {\n    if (this.loginSubscription) {\n      this.loginSubscription.unsubscribe();\n    }\n  }\n\n  closePopover() {\n    this.showExceededAttemptsWarning = false;\n  }\n\n  onLoginSubmit(): void {\n    const loginForm: PoPageLogin = {\n      login: this.login,\n      password: this.password,\n      rememberUser: this.rememberUser\n    };\n\n    if (this.customField) {\n      loginForm[this.customFieldObject.property] = this.customFieldObject.value;\n    }\n\n    if (this.authenticationUrl) {\n      this.loginSubscription =\n      this.loginService.onLogin(this.authenticationUrl, this.authenticationType, loginForm)\n      .subscribe(data => {\n        this.setValuesToProperties();\n        sessionStorage.setItem('PO_USER_LOGIN', JSON.stringify(data));\n        this.openInternalLink('/');\n      },\n      error => {\n        if (error.error.code === '400' || error.error.code === '401') {\n          this.setValuesToProperties(error);\n          this.redirectBlockedUrl(this.exceededAttemptsWarning, this.blockedUrl);\n        }\n      });\n    } else {\n      this.loginSubmit.emit(loginForm);\n      this.showExceededAttemptsWarning = this.exceededAttemptsWarning > 0;\n    }\n  }\n\n  private getDefaultCustomFieldObject(property): PoPageLoginCustomField {\n    return { property };\n  }\n\n  private openExternalLink(url: string) {\n    window.open(url, '_blank');\n  }\n\n  private openInternalLink(url: string) {\n    this.router.navigate([url]);\n  }\n\n  private redirectBlockedUrl(attempts: number, blockedUrl: string) {\n    if (attempts === 0 && blockedUrl) {\n      this.showExceededAttemptsWarning = false;\n      isExternalLink(blockedUrl) ? this.openExternalLink(blockedUrl) : this.openInternalLink(blockedUrl);\n    }\n  }\n\n  private setValuesToProperties(result?) {\n    if (result) {\n      this.exceededAttemptsWarning = result.error.maxAttemptsRemaining;\n      this.loginErrors = result.error.loginWarnings;\n      this.passwordErrors = result.error.passwordWarnings;\n      this.blockedUrl = result.error.blockedUrl;\n    } else {\n      this.exceededAttemptsWarning = 0;\n      this.loginErrors = [];\n      this.passwordErrors = [];\n      this.blockedUrl = '';\n    }\n  }\n\n  protected abstract concatenateLoginHintWithContactEmail(contactEmail: string);\n\n  protected abstract concatenateTitleWithProductName(productName: string);\n\n  protected abstract setLoginErrors(value: Array<string>): void;\n\n  protected abstract setPasswordErrors(value: Array<string>): void;\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { PoPageLogin } from './interfaces/po-page-login.interface';\nimport { PoPageLoginAuthenticationType } from './enums/po-page-login-authentication-type.enum';\n\n@Injectable()\nexport class PoPageLoginService {\n\n  constructor(private http: HttpClient) { }\n\n  onLogin(url: string, type: PoPageLoginAuthenticationType, loginForm: PoPageLogin): Observable<Object> {\n\n    if (type === PoPageLoginAuthenticationType.Bearer) {\n      loginForm.password = btoa(loginForm.password);\n      return this.http.post(url, loginForm);\n    } else {\n      const user = `(${loginForm.login}:${loginForm.password})`;\n      const headers = new HttpHeaders({\n        'Authorization': `${type} ` + btoa(user)\n      });\n      delete loginForm.login;\n      delete loginForm.password;\n      return this.http.post(url, loginForm, { headers });\n    }\n\n  }\n\n}\n","import { AbstractControl, NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AfterViewChecked, ChangeDetectorRef, Component, ComponentRef, IterableDiffers, OnInit, ViewChild, ViewContainerRef\n} from '@angular/core';\n\nimport { isExternalLink } from '../../utils/util';\nimport { PoComponentInjectorService } from '@portinari/portinari-ui';\n\nimport { PoModalPasswordRecoveryComponent } from '../po-modal-password-recovery/po-modal-password-recovery.component';\nimport { PoModalPasswordRecoveryType } from '../po-modal-password-recovery/enums/po-modal-password-recovery-type.enum';\nimport { PoPageLoginBaseComponent, poPageLoginLiteralIn, poPageLoginLiteralTo, poPageLoginLiteralsDefault\n} from './po-page-login-base.component';\nimport { PoPageLoginRecovery } from './interfaces/po-page-login-recovery.interface';\nimport { PoPageLoginService } from './po-page-login.service';\n\n/**\n * @docsExtends PoPageLoginBaseComponent\n *\n * @example\n *\n * <example name=\"po-page-login-basic\" title=\"Portinari Page Login Basic\">\n *  <file name=\"sample-po-page-login-basic/sample-po-page-login-basic.component.html\"> </file>\n *  <file name=\"sample-po-page-login-basic/sample-po-page-login-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-login-labs\" title=\"Portinari Page Login Labs\">\n *  <file name=\"sample-po-page-login-labs/sample-po-page-login-labs.component.html\"> </file>\n *  <file name=\"sample-po-page-login-labs/sample-po-page-login-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-login-human-resources\" title=\"Portinari Page Login - Human Resources\">\n *  <file name=\"sample-po-page-login-human-resources/sample-po-page-login-human-resources.component.html\"> </file>\n *  <file name=\"sample-po-page-login-human-resources/sample-po-page-login-human-resources.component.ts\"> </file>\n *  <file name=\"sample-po-page-login-human-resources/sample-po-page-login-human-resources.module.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-login-automatic-service\" title=\"Portinari Page Login - Automatic Service\">\n *  <file name=\"sample-po-page-login-automatic-service/sample-po-page-login-automatic-service.component.html\"> </file>\n *  <file name=\"sample-po-page-login-automatic-service/sample-po-page-login-automatic-service.component.ts\"> </file>\n * </example>\n */\n\n@Component({\n  selector: 'po-page-login',\n  templateUrl: './po-page-login.component.html'\n})\n\nexport class PoPageLoginComponent extends PoPageLoginBaseComponent implements AfterViewChecked, OnInit {\n\n  private componentRef: ComponentRef<any> = null;\n  private differ: any;\n  private readonly customPasswordError = { custom : false };\n\n  @ViewChild('loginForm', { read: NgForm, static: true }) loginForm: NgForm;\n  @ViewChild('pageLogin', { read: ViewContainerRef, static: true }) pageLogin: ViewContainerRef;\n\n  constructor(\n    public changeDetector: ChangeDetectorRef,\n    private activatedRoute: ActivatedRoute,\n    private poComponentInjector: PoComponentInjectorService,\n    differs: IterableDiffers,\n    loginService: PoPageLoginService,\n    router: Router,\n    ) {\n    super(loginService, router);\n    this.differ = differs.find([]).create(null);\n  }\n\n  ngAfterViewChecked() {\n    if (this.differ) {\n      this.validateArrayChanges(this.differ, [\n        { array: this.loginErrors, callback: this.generateLoginError.bind(this) },\n        { array: this.passwordErrors, callback: this.generatePasswordError.bind(this) }\n      ]);\n    }\n  }\n\n  ngOnInit() {\n    this.checkingForRouteMetadata(this.activatedRoute.snapshot.data);\n  }\n\n  changeLoginModel() {\n    if (this.authenticationUrl) {\n      this.loginErrors = [];\n    } else {\n      this.setLoginErrors(this.loginErrors);\n      this.loginChange.emit(this.login);\n    }\n  }\n\n  changePasswordModel() {\n    if (this.authenticationUrl) {\n      this.passwordErrors = [];\n    } else {\n      this.setPasswordErrors(this.passwordErrors);\n      this.passwordChange.emit(this.password);\n    }\n  }\n\n  onSelectedLanguage(language: string) {\n    this.selectedLanguage = language;\n  }\n\n  openUrl(recovery: any): void {\n    switch (typeof recovery) {\n      case 'string': {\n        this.setUrlRedirect(recovery);\n        break;\n      }\n      case 'function': {\n        recovery();\n        break;\n      }\n      case 'object': {\n        this.createModalPasswordRecoveryComponent(recovery);\n        break;\n      }\n    }\n  }\n\n  private checkingForMetadataProperty(object, property) {\n    if (Object.prototype.hasOwnProperty.call(object, property)) {\n      return object[property];\n    }\n  }\n\n  private checkingForRouteMetadata(data) {\n    if (Object.keys(data).length !== 0) {\n      this.authenticationUrl = this.checkingForMetadataProperty(data, 'serviceApi') || this.authenticationUrl;\n      this.authenticationType = this.checkingForMetadataProperty(data, 'authenticationType') || this.authenticationType;\n      this.environment = this.checkingForMetadataProperty(data, 'environment') || this.environment;\n      this.recovery = this.checkingForMetadataProperty(data, 'recovery') || this.recovery;\n      this.registerUrl = this.checkingForMetadataProperty(data, 'registerUrl') || this.registerUrl;\n    }\n  }\n\n  private concatenate(defaultLiteral: string, prefixLiteral: string, value: string) {\n    return `${defaultLiteral} ${prefixLiteral} ${value}`;\n  }\n\n  private concatenateLiteral(value: string, literal: string, defaultLiteral: string, prepositionLiteral: string) {\n    return { [literal]: this.concatenate(defaultLiteral, prepositionLiteral, value) };\n  }\n\n  private createModalPasswordRecoveryComponent(poPageLoginRecovery: PoPageLoginRecovery) {\n    if (this.componentRef) {\n      this.poComponentInjector.destroyComponentInApplication(this.componentRef);\n    }\n\n    this.componentRef = this.poComponentInjector.createComponentInApplication(PoModalPasswordRecoveryComponent);\n    this.componentRef.instance.urlRecovery = poPageLoginRecovery.url;\n    this.componentRef.instance.contactEmail = poPageLoginRecovery.contactMail;\n    this.componentRef.instance.phoneMask = poPageLoginRecovery.phoneMask;\n    this.componentRef.instance.type = poPageLoginRecovery.type || PoModalPasswordRecoveryType.Email;\n    this.componentRef.changeDetectorRef.detectChanges();\n    setTimeout(() => {\n      this.componentRef.instance.open();\n    });\n  }\n\n  private generateLoginError() {\n    if (this.loginErrors && this.loginErrors.length) {\n      this.setLoginErrors(this.loginErrors);\n    } else {\n      const control = this.loginForm.form.controls['login'];\n      if (control) {\n        this.resetControl(control);\n      }\n    }\n  }\n\n  private generatePasswordError() {\n    if (this.passwordErrors && this.passwordErrors.length) {\n      this.setPasswordErrors(this.passwordErrors);\n    } else {\n      const control = this.loginForm.form.controls['password'];\n\n      if (control) {\n        this.resetControl(control);\n      }\n    }\n  }\n\n  private resetControl(control: AbstractControl) {\n    control.markAsPristine();\n    control.markAsUntouched();\n    control.updateValueAndValidity();\n  }\n\n  private setControlErrors(allErrors: string, control: AbstractControl, errors: Array<string>, patternError: string) {\n\n    if (control) {\n\n      this[allErrors] = control.hasError('pattern') ? [...errors, ...[patternError]] : [...errors];\n\n      if (errors && errors.length && (control.valid || control.pristine)) {\n        control.markAsTouched();\n        control.markAsDirty();\n        control.setErrors(this.customPasswordError);\n      }\n    }\n  }\n\n  private setUrlRedirect(url) {\n    isExternalLink(url) ?  window.open(url, '_blank') : this.router.navigate([url]);\n  }\n\n  private validateArrayChanges(differ: any, array: Array<{ array: Array<any>, callback: any }>) {\n\n    array.forEach(element => {\n      const changes = differ.diff(element.array);\n      if (changes) {\n        element.callback();\n        this.changeDetector.detectChanges();\n      }\n    });\n  }\n\n  protected concatenateLoginHintWithContactEmail(contactEmail: string) {\n    const defaultLoginHintLiteral = poPageLoginLiteralsDefault[this.language].loginHint;\n    const prepositionLiteral = poPageLoginLiteralIn[this.language];\n\n    return this.concatenateLiteral(contactEmail, 'loginHint', defaultLoginHintLiteral, prepositionLiteral);\n  }\n\n  protected concatenateTitleWithProductName(productName: string) {\n    const defaultTitleLiteral = poPageLoginLiteralsDefault[this.language].title;\n    const prepositionLiteral = poPageLoginLiteralTo[this.language];\n\n    return this.concatenateLiteral(productName, 'title', defaultTitleLiteral, prepositionLiteral);\n  }\n\n  protected setLoginErrors(errors: Array<string>) {\n    const control = this.loginForm.form.controls['login'];\n    this.setControlErrors('allLoginErrors', control, errors, this.pageLoginLiterals.loginErrorPattern);\n  }\n\n  protected setPasswordErrors(errors: Array<string>) {\n    const control = this.loginForm.form.controls['password'];\n    this.setControlErrors('allPasswordErrors', control, errors, this.pageLoginLiterals.passwordErrorPattern);\n  }\n\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { isExternalLink, isTypeof } from '../../../utils/util';\n\nimport { PoPageLoginLiterals } from '../interfaces/po-page-login-literals.interface';\nimport { PoPageLoginRecovery } from '../interfaces/po-page-login-recovery.interface';\n\n@Component({\n  selector: 'po-page-login-popover',\n  templateUrl: './po-page-login-popover.component.html'\n})\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente para definiÃ§Ã£o da mensagem de aviso de bloqueio do `po-page-login`.\n */\nexport class PoPageLoginPopoverComponent {\n\n  recoveryType: string;\n\n  private _recovery: string | Function | PoPageLoginRecovery;\n\n  @Input('p-literals') literals: PoPageLoginLiterals;\n\n  /** exibe o link de 'esqueci minha senha' e verifica se o valor Ã© um link interno ou externo */\n  @Input('p-recovery') set recovery(value: string | Function | PoPageLoginRecovery) {\n    this._recovery = value;\n\n    if (isTypeof(value, 'string')) {\n      this.recoveryType = isExternalLink(value) ? 'externalLink' : 'internalLink';\n    }\n  }\n\n  get recovery() {\n    return this._recovery;\n  }\n\n  /** define se a mensagem deverÃ¡ ser exibida caso seja maior que 0(zero) */\n  @Input('p-remaining-attempts') remainingAttempts: number;\n\n  /** se 'p-recovery' for do tipo Function ou PoPageLoginRecovery, emite para o mÃ©todo 'openUrl' do componente 'po-page-login' */\n  @Output('p-forgot-password') forgotPassword = new EventEmitter<any>();\n\n  onForgotPasswordClick(recovery) {\n    this.forgotPassword.emit(recovery);\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoModule } from '@portinari/portinari-ui';\n\nimport { PoModalPasswordRecoveryComponent } from '../po-modal-password-recovery/po-modal-password-recovery.component';\nimport { PoPageBackgroundModule } from '../po-page-background/index';\nimport { PoPageLoginComponent } from './po-page-login.component';\nimport { PoPageLoginPopoverComponent } from './po-page-login-popover/po-page-login-popover.component';\nimport { PoPageLoginService } from './po-page-login.service';\n\n/**\n * @description\n *\n * MÃ³dulo do template do po-page-login.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    PoPageBackgroundModule,\n    PoModule\n  ],\n  declarations: [\n    PoPageLoginComponent,\n    PoPageLoginPopoverComponent\n  ],\n  entryComponents: [\n    PoModalPasswordRecoveryComponent\n  ],\n  exports: [\n    PoPageLoginComponent\n  ],\n  providers: [PoPageLoginService]\n})\nexport class PoPageLoginModule { }\n","import { NgModule } from '@angular/core';\n\nimport { PoModalPasswordRecoveryModule } from './po-modal-password-recovery/po-modal-password-recovery.module';\nimport { PoPageBackgroundModule } from './po-page-background/po-page-background.module';\nimport { PoPageBlockedUserModule } from './po-page-blocked-user/po-page-blocked-user.module';\nimport { PoPageChangePasswordModule } from './po-page-change-password/po-page-change-password.module';\nimport { PoPageDynamicDetailModule } from './po-page-dynamic-detail/po-page-dynamic-detail.module';\nimport { PoPageDynamicEditModule } from './po-page-dynamic-edit/po-page-dynamic-edit.module';\nimport { PoPageDynamicSearchModule } from './po-page-dynamic-search/po-page-dynamic-search.module';\nimport { PoPageDynamicTableModule } from './po-page-dynamic-table/po-page-dynamic-table.module';\nimport { PoPageJobSchedulerModule } from './po-page-job-scheduler/po-page-job-scheduler.module';\nimport { PoPageLoginModule } from './po-page-login/po-page-login.module';\n\n@NgModule({\n  imports: [\n    PoModalPasswordRecoveryModule,\n    PoPageBackgroundModule,\n    PoPageBlockedUserModule,\n    PoPageChangePasswordModule,\n    PoPageDynamicDetailModule,\n    PoPageDynamicEditModule,\n    PoPageDynamicSearchModule,\n    PoPageDynamicTableModule,\n    PoPageJobSchedulerModule,\n    PoPageLoginModule\n  ],\n  exports: [\n    PoModalPasswordRecoveryModule,\n    PoPageBackgroundModule,\n    PoPageBlockedUserModule,\n    PoPageChangePasswordModule,\n    PoPageDynamicDetailModule,\n    PoPageDynamicEditModule,\n    PoPageDynamicSearchModule,\n    PoPageDynamicTableModule,\n    PoPageJobSchedulerModule,\n    PoPageLoginModule\n  ]\n})\nexport class PoComponentsModule { }\n","import { NgModule } from '@angular/core';\n\nimport { PoPageCustomizationModule } from './po-page-customization/po-page-customization.module';\n\n@NgModule({\n  imports: [\n    PoPageCustomizationModule\n  ],\n  exports: [\n    PoPageCustomizationModule\n  ]\n})\nexport class PoServicesModule { }\n","import { NgModule } from '@angular/core';\n\nimport { PoComponentsModule } from './components/components.module';\nimport { PoServicesModule } from './services/services.module';\n\n@NgModule({\n  imports: [\n    PoComponentsModule,\n    PoServicesModule\n  ],\n  exports: [\n    PoComponentsModule,\n    PoServicesModule\n  ]\n})\nexport class PoTemplatesModule { }\n"]}