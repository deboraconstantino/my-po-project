{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@portinari/portinari-templates/lib/utils/util.ts","ng://@portinari/portinari-templates/lib/components/po-modal-password-recovery/literals/i18n/po-modal-password-recovery-literals.ts","ng://@portinari/portinari-templates/lib/components/po-modal-password-recovery/enums/po-modal-password-recovery-type.enum.ts","ng://@portinari/portinari-templates/lib/components/po-modal-password-recovery/po-modal-password-recovery-base.component.ts","ng://@portinari/portinari-templates/lib/components/po-modal-password-recovery/enums/po-modal-password-recovery-modal-content.enum.ts","ng://@portinari/portinari-templates/lib/components/po-modal-password-recovery/po-modal-password-recovery.service.ts","ng://@portinari/portinari-templates/lib/components/po-modal-password-recovery/po-modal-password-recovery.component.ts","ng://@portinari/portinari-templates/lib/components/po-modal-password-recovery/po-modal-password-recovery-error-message/po-modal-password-recovery-error-message.component.ts","ng://@portinari/portinari-templates/lib/components/po-modal-password-recovery/po-modal-password-recovery.module.ts","ng://@portinari/portinari-templates/lib/components/po-page-background/po-page-background.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-background/po-page-background.module.ts","ng://@portinari/portinari-templates/lib/components/po-page-blocked-user/enums/po-page-blocked-user-reason.enum.ts","ng://@portinari/portinari-templates/lib/components/po-page-blocked-user/po-page-blocked-user-base.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-blocked-user/po-page-blocked-user.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-blocked-user/po-page-blocked-user-contacts/po-page-blocked-user-contacts.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-blocked-user/literals/i18n/po-page-blocked-user-literals.ts","ng://@portinari/portinari-templates/lib/components/po-page-blocked-user/po-page-blocked-user-reason/po-page-blocked-user-reason.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-blocked-user/po-page-blocked-user.module.ts","ng://@portinari/portinari-templates/lib/components/po-page-change-password/po-page-change-password-base.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-change-password/literals/i18n/po-page-change-password-literals.ts","ng://@portinari/portinari-templates/lib/components/po-page-change-password/po-page-change-password.service.ts","ng://@portinari/portinari-templates/lib/components/po-page-change-password/po-page-change-password.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-change-password/po-page-change-password.module.ts","ng://@portinari/portinari-templates/lib/services/po-page-dynamic/po-page-dynamic.service.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-detail/po-page-dynamic-detail.component.ts","ng://@portinari/portinari-templates/lib/services/po-page-dynamic/po-page-dynamic.module.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-detail/po-page-dynamic-detail.module.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-edit/po-page-dynamic-edit.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-edit/po-page-dynamic-edit.module.ts","ng://@portinari/portinari-templates/lib/services/po-page-customization/po-page-customization.service.ts","ng://@portinari/portinari-templates/lib/services/po-page-customization/po-page-customization.module.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-search/po-advanced-filter/po-advanced-filter-base.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-search/po-advanced-filter/po-advanced-filter.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-search/po-page-dynamic-search-base.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-search/po-page-dynamic-search.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-search/po-page-dynamic-search.module.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-table/po-page-dynamic-list-base.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-table/po-page-dynamic-table.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-table/po-page-dynamic-table.module.ts","ng://@portinari/portinari-templates/lib/components/po-page-job-scheduler/po-page-job-scheduler-internal.ts","ng://@portinari/portinari-templates/lib/components/po-page-job-scheduler/po-page-job-scheduler-base.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-job-scheduler/po-page-job-scheduler-literals.ts","ng://@portinari/portinari-templates/lib/components/po-page-job-scheduler/po-page-job-scheduler.service.ts","ng://@portinari/portinari-templates/lib/components/po-page-job-scheduler/po-page-job-scheduler-lookup.service.ts","ng://@portinari/portinari-templates/lib/components/po-page-job-scheduler/po-page-job-scheduler.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-job-scheduler/po-page-job-scheduler-execution/po-page-job-scheduler-execution.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-job-scheduler/po-page-job-scheduler-parameters/po-page-job-scheduler-parameters.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-job-scheduler/po-page-job-scheduler-summary/po-page-job-scheduler-summary.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-job-scheduler/po-page-job-scheduler.module.ts","ng://@portinari/portinari-templates/lib/components/po-page-login/enums/po-page-login-authentication-type.enum.ts","ng://@portinari/portinari-templates/lib/components/po-page-login/po-page-login-base.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-login/po-page-login.service.ts","ng://@portinari/portinari-templates/lib/components/po-page-login/po-page-login.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-login/po-page-login-popover/po-page-login-popover.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-login/po-page-login.module.ts","ng://@portinari/portinari-templates/lib/components/components.module.ts","ng://@portinari/portinari-templates/lib/services/services.module.ts","ng://@portinari/portinari-templates/lib/po-templates.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__read","o","m","r","ar","error","__spread","concat","poLocales","browserLanguage","getShortBrowserLanguage","getBrowserLanguage","navigator","language","toLowerCase","substring","includes","convertToBoolean","val","trim","isTypeof","object","type","isExternalLink","url","startsWith","mapObjectByProperties","properties","reduce","selectedProperties","property","_a","valuesFromObject","keys","map","addZero","time","poModalPasswordRecoveryLiterals","en","cancelButton","closeButton","continueButton","email","emailErrorMessagePhrase","emailSentConfirmationPhrase","emailSentTitle","forgotPasswordTitle","insertCode","insertEmail","insertPhone","phoneErrorMessagePhrase","prepositionIn","prepositionOr","recoveryPasswordPhrase","resendEmailButton","resendSmsCodePhrase","sendAgainPhrase","sendAgain","sendButton","sentSmsCodePhrase","sms","smsCodeErrorMessagePhrase","supportContact","telephone","typeCodeTitle","es","pt","ru","All","Email","SMS","PoModalPasswordRecoveryTypeDefault","PoModalPasswordRecoveryType","PoModalPasswordRecoveryBaseComponent","_phoneMask","_type","maxLength","minLength","literals","codeSubmit","EventEmitter","submit","defineProperty","_contactEmail","smsCodeErrorMessage","concatenateSMSErrorMessage","values","literalCodeErrorMessage","Input","args","Output","SMSCode","Confirmation","PoModalPasswordRecoveryService","http","post","urlRecovery","item","params","observe","Injectable","HttpClient","PoModalPasswordRecoveryComponent","_super","router","poI18nPipe","poModalPasswordRecoveryService","_this","chosenTypeFormOption","codeMask","emailModal","emailModalPhrases","firstPhrase","secondPhrase","endpoint","invalidCode","invalidEmail","modalType","PoModalPasswordRecoveryModalContent","submittedCodeValue","submittedContactValue","primaryAction","undefined","action","secondaryAction","typeFormOptions","tslib_1.__extends","ngOnDestroy","passwordRecoverySubscription","unsubscribe","smsCodeSubscription","completed","cancelAction","formModelChangesCheck","form","invalidForm","invalid","dirty","disabled","codeError","showCustomCodeError","pristine","getInputType","pipeModalPhrases","setTimeout","control","emailForm","controls","resetFormFields","open","checkFormType","setEmailModalPhrasesAndActions","recoveryModalElement","openConfirmation","modalTitle","setActions","submitAction","openSmsCode","submitSmsCodeAction","smsCodeForm","resendSmsCode","incrementRetryAttempts","submitActionRequest","emit","assignSmsResponse","responseObj","smsBodyResponse","hash","urlValidationCode","modalPasswordRecoveryTypeAll","close","formReset","markAsPristine","markAsUntouched","updateValueAndValidity","getEmitValue","phone","retry","openExternalLink","queryParam","window","openInternalLink","navigate","queryParams","token","setPipeArguments","redirectToChangePassword","recoveryToken","urlChangePassword","smsCode","primarylabel","secondaryLabel","setRequestEndpoint","literalAttr","arg","transform","data","subscribe","response","status","code","submitSmsCodeRequest","message","Component","selector","template","Router","PoI18nPipe","ViewChild","static","PoModalPasswordRecoveryErrorMessageComponent","PoModalPasswordRecoveryModule","NgModule","imports","CommonModule","FormsModule","PoFieldModule","PoModalModule","declarations","exports","providers","PoPageBackgroundComponent","_showSelectLanguage","selectLanguageOptions","selectedLanguage","_logo","_secondaryLogo","showSelectLanguage","ngOnInit","selectedLanguageOption","onChangeLanguage","PoPageBackgroundModule","RouterModule","PoDividerModule","None","ExceededAttempts","ExpiredPassword","PoPageBlockedUserReasonDefault","PoPageBlockedUserReason","PoPageBlockedUserParamsDefault","attempts","days","hours","PoPageBlockedUserBaseComponent","_params","_reason","_urlBack","newParams_1","forEach","key","poPageBlockedUserButtonLiterals","primaryButton","PoPageBlockedUserComponent","activatedRoute","checkingForRouteMetadata","snapshot","navigateTo","checkingForMetadataProperty","contactEmail","contactPhone","reason","urlBack","ActivatedRoute","PoPageBlockedUserContactsComponent","changeDetector","overflowItem","ngAfterViewInit","checkContactItemWidth","ngOnChanges","changes","phoneWidth","phoneItem","nativeElement","offsetWidth","mailWidth","mailItem","contactGroupHalfWidth","contactGroup","detectChanges","ChangeDetectorRef","poPageBlockedUserLiterals","none","title","exceededAttempts","thirdPhrase","expiredPassword","PoPageBlockedUserReasonComponent","getLiterals","getImageByReasonType","reasonImage","getParams","literalParams","PoPageBlockedUserModule","PoModule","PoPageChangePasswordBaseComponent","_hideCurrentPassword","_requirements","_urlHome","_recovery","recoveryUrlType","showRequirements","modalAction","bind","urlHome","poPageChangePasswordLiterals","backButton","confirmPassword","createNewPassword","createNewPasswordPhrase","currentPassword","enterSystemButton","forgotPassword","newPassword","passwordSuccessfullyCreated","passwordSuccessfullyUpdated","requirements","safetyTips","safetyTipsFirst","safetyTipsPhrase","safetyTipsSecond","safetyTipsThird","saveButton","PoPageChangePasswordService","PoPageChangePasswordComponent","route","service","poComponentInjector","viewRef","componentRef","parentRef","urlNewPassword","subscribeToTokenParameter","newPasswordSubscription","onForgotPasswordClick","recovery","createModalPasswordRecoveryComponent","onLoginSubmit","getLoginForm","postUrlNewPassword","observers","emitSubmit","modal","validatePassword","passwordForm","controlConfirmPassword","controlNewPassword","setFormErrors","equalPassword","required","find","requirement","validateRequirement","hideCurrentPassword","destroyComponentInApplication","createComponentInApplication","instance","contactMail","phoneMask","changeDetectorRef","setErrors","PoComponentInjectorService","ViewContainerRef","PoModalComponent","read","NgForm","PoPageChangePasswordModule","entryComponents","PoPageDynamicService","headers","HttpHeaders","X-PORTINARI-SCREEN-LOCK","configServiceApi","config","metadata","getMetadata","cache","JSON","parse","localStorage","getItem","version","get","pipe","setItem","stringify","deleteResource","id","delete","deleteResources","ids","request","getResources","getResource","createResource","resource","updateResource","put","providedIn","poPageDynamicDetailLiteralsDefault","pageActionEdit","pageActionRemove","pageActionBack","confirmRemoveTitle","confirmRemoveMessage","removeNotificationSuccess","registerNotFound","PoPageDynamicDetailComponent","poNotification","poDialogService","poPageDynamicService","_actions","_autoRouter","_duplicates","_fields","_keys","_pageActions","util.browserLanguage","model","breadcrumb","items","isObject","getPageActions","util.convertToBoolean","isArray","getKeysByFields","fields","getDuplicatesByFields","paramId","serviceApi","loadMetadata","loadData","confirmRemove","path","confirmOptions","confirm","remove","formatUniqueKey","util.valuesFromObject","util.mapObjectByProperties","join","goBack","history","back","toPromise","catch","actions","autoRouter","forceStopAutoRouter","unshift","component","openEdit","resolveUrl","uniqueKey","success","replace","pageActions","edit","filter","field","duplicate","PoNotificationService","PoDialogService","PoPageDynamicModule","HttpClientModule","PoPageDynamicDetailModule","PoDynamicModule","PoPageModule","PoWidgetModule","poPageDynamicEditLiteralsDefault","cancelConfirmMessage","detailActionNew","pageActionCancel","pageActionSave","pageActionSaveNew","saveNewNotificationSuccessSave","saveNewNotificationSuccessUpdate","saveNewNotificationWarning","saveNotificationSuccessSave","saveNotificationSuccessUpdate","saveNotificationWarning","PoPageDynamicEditComponent","_controlFields","_detailFields","detailActions","getControlFields","getDetailFields","serviceMetadataApi","gridDetail","insertRow","cancel","dynamicForm","typeMetadata","save","warning","saveOperation","msgSucess","saveNew","reset","PoPageDynamicEditModule","PoButtonModule","PoGridModule","PoPageCustomizationService","getCustomOptions","origin","originalOption","optionSchema","createObservable","newPageOptions","mergePageOptions","changeOriginalOptionsToNewOptions","objectToChange","newOptions","from","schema","objWithNewProp","prop","nameProp","createNewProp","merge","mergeOptions","keyForMerge","originalOptions","filterProp","mergeOptionsArray","deduplicateNewOptions","newItem","originalItem","newOptionsItem","PoPageCustomizationModule","poAdvancedFiltersLiteralsDefault","cancelLabel","confirmLabel","PoAdvancedFilterBaseComponent","languageService","_filters","models","getValuesFromForm","searchEvent","poModal","getShortLanguage","filters","_literals","PoAdvancedFilterComponent","PoLanguageService","PoDynamicFormComponent","poPageDynamicSearchLiteralsDefault","disclaimerGroupTitle","filterTitle","filterCancelLabel","filterConfirmLabel","quickSearchLabel","searchPlaceholder","PoPageDynamicSearchBaseComponent","advancedSearch","changeDisclaimers","quickSearch","setAdvancedFilterLiterals","advancedFilterLiterals","PoPageDynamicSearchComponent","poPageCustomizationService","_disclaimerGroup","change","onChangeDisclaimerGroup","disclaimers","_filterSettings","advancedAction","ngModel","placeholder","changeDisclaimersEnabled","onLoad","loadOptionsOnInitialize","loadSubscription","onAction","quickFilter","onAdvancedAction","poAdvancedFilter","onAdvancedSearch","setDisclaimers","applyDisclaimerLabelValue","filterValue","filteredField","options","option","formatDate","date","year","parseInt","substr","month","day","Date","toLocaleDateString","getFieldByProperty","fieldName","getFilterValueToDisclaimer","PoDynamicFieldType","text","charAt","toUpperCase","slice","getPoDynamicPageOptions","responsePoOption","PoPageDynamicSearchModule","PoLanguageModule","PoPageDynamicListBaseComponent","_columns","setFieldsProperties","visible","poPageDynamicTableLiteralsDefault","pageAction","pageActionRemoveAll","tableActionView","tableActionEdit","tableActionDuplicate","tableActionDelete","confirmRemoveAllTitle","confirmRemoveAllMessage","loadDataErrorNotification","removeSuccessNotification","removeAllSuccessNotification","PoPageDynamicTableComponent","_tableActions","page","subscriptions","hasNext","setPageActions","setRemoveAllAction","setTableActions","loadDataFromAPI","subscription","onChangeDisclaimers","disclaimer","onQuickSearch","search","onSort","sortedColumn","showMore","removeAll","confirmRemoveAll","getOrderParam","column","PoTableColumnSortType","Descending","order","throwError","orderParam","fullParams","pageSize","tap","EMPTY","openDetail","openDuplicate","duplicates","openNew","removeLocalItems","selectedItems","$selected","keysSelectedItems","itemRemoved","indexItemRemoved","indexOf","splice","new","detail","separator","metadata$","data$","customOption$","PoPageDynamicTableModule","PoTableModule","PoPageJobSchedulerInternal","periodicity","firstExecution","firstExecutionHour","getCurrentHour","recurrent","getHours","getMinutes","PoPageJobSchedulerBaseComponent","poPageJobSchedulerService","markAsDirtyInvalidControls","markAsDirty","poPageJobSchedulerLiteralsDefault","at","execution","process","enterProcess","single","daily","weekly","monthly","scheduling","parameterization","conclude","hour","weekDays","sunday","monday","tuesday","wednesday","thursday","friday","saturday","parameters","yes","no","notReported","periodicityData","confirmation","confirmSaveMessage","confirmUpdateMessage","parametersNotFound","PoPageJobSchedulerService","jobScheduler","convertToJobScheduler","getHeadProcesses","head","X-Portinari-No-Error","getParametersByProcess","processId","getProcess","getProcesses","convertToJobSchedulerInternal","jobSchedulerInternal","convertToPeriodicity","replaceHourFirstExecution","returnValidExecutionParameter","executionParameter","removeInvalidKeys","getHourFirstExecution","convertToPeriodicityInternal","newValue","valuePeriodicity","dayOfMonth","daysOfWeek","split","minute","firstExecutionDate","invalidKeys","timeSplited","minutes","setHours","getMonth","getDate","toString","formatYear","getFullYear","dateString","convertDateToISOExtended","parameter","newParameter","PoPageJobSchedulerLookupService","getFilteredData","getObjectByValue","PoPageJobSchedulerComponent","poPageDynamicLookupService","isEdit","backPageAction","nextStepOperation","isDisabledBack","concludePageActions","confirmJobScheduler","nextPageActions","isDisabledAdvance","jobSchedulerActions","steps","innerWidth","changePageActionsBySteps","currentStep","nextStep","stepsLength","stepNumber","schedulerExecution","schedulerParameters","PoStepperStatus","Done","onChangeProcess","existAPI","confirmMessage","emitSuccessMessage","msgSuccess","resetJobSchedulerForm","operation","Default","encapsulation","ViewEncapsulation","PoPageJobSchedulerExecutionComponent","poPageJobSchedulerLookup","_value","dayPattern","existProcessAPI","minDateFirstExecution","periodicityOptions","timePattern","changeProcess","subscribeProcessIdValueChanges","periodicityTemplates","dailyTemplate","monthlyTemplate","weeklyTempalte","checkExistsProcessesAPI","getPeriodicityOptions","getWeekDays","valueChanges","PoPageJobSchedulerParametersComponent","valueChange","PoPageJobSchedulerSummaryComponent","datePipe","executionValue","firstExecutionValue","infoOrientation","PoInfoOrientation","Horizontal","periodicityValue","recurrentValue","getPeriodicityLabel","getExecutionValue","getFirstExecutionLabel","getRecurrentValue","getHourLabel","getMonthlyLabelExecution","getWeeklyLabelExecution","hourLabel","getSorterWeekDays","getTranslateWeekDay","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","getWeekDaysLabel","sortWeekDays","sorterWeekDays","sort","a","currDay","nextDay","DatePipe","PoPageJobSchedulerModule","PoContainerModule","PoDialogModule","PoInfoModule","PoStepperModule","Basic","Bearer","poPageLoginLiteralsDefault","loginErrorPattern","loginHint","loginPlaceholder","passwordErrorPattern","passwordPlaceholder","customFieldErrorPattern","customFieldPlaceholder","rememberUser","rememberUserHint","submitLabel","submittedLabel","highlightInfo","registerUrl","titlePopover","forgotYourPassword","ifYouTryHarder","yourUserWillBeBlocked","createANewPasswordNow","iForgotMyPassword","poPageLoginLiteralIn","poPageLoginLiteralTo","PoPageLoginBaseComponent","loginService","allLoginErrors","allPasswordErrors","showExceededAttemptsWarning","_authenticationType","PoPageLoginAuthenticationType","_hideRememberUser","_loading","_loginErrors","_passwordErrors","loginChange","loginSubmit","passwordChange","_customField","customFieldType","customFieldObject","getDefaultCustomFieldObject","_productName","_environment","environment","_exceededAttemptsWarning","valueDefault","validNumber","validDefaultValue","convertToInt","exceededAttemptsWarning","_login","authenticationUrl","setLoginErrors","setPasswordErrors","_registerUrl","_authenticationUrl","_blockedUrl","loginHintWithContactEmail","concatenateLoginHintWithContactEmail","titleWithProductName","productName","concatenateTitleWithProductName","loginSubscription","closePopover","loginForm","login","password","customField","onLogin","authenticationType","setValuesToProperties","sessionStorage","redirectBlockedUrl","blockedUrl","maxAttemptsRemaining","loginErrors","loginWarnings","passwordErrors","passwordWarnings","PoPageLoginService","btoa","user","Authorization","PoPageLoginComponent","differs","customPasswordError","custom","differ","ngAfterViewChecked","validateArrayChanges","array","callback","generateLoginError","generatePasswordError","changeLoginModel","changePasswordModel","onSelectedLanguage","openUrl","setUrlRedirect","concatenate","defaultLiteral","prefixLiteral","concatenateLiteral","literal","prepositionLiteral","poPageLoginRecovery","resetControl","setControlErrors","allErrors","errors","patternError","hasError","valid","markAsTouched","element","diff","defaultLoginHintLiteral","defaultTitleLiteral","pageLoginLiterals","IterableDiffers","PoPageLoginPopoverComponent","recoveryType","PoPageLoginModule","PoComponentsModule","PoServicesModule","PoTemplatesModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","// Idiomas suportados pelas pÃ¡ginas\nexport const poLocales = ['pt', 'en', 'es', 'ru'];\n// Idioma padrÃ£o\nexport const poLocaleDefault = 'pt';\n\n/**\n * @deprecated\n * Utilize o mÃ©todo `getShortBrowserLanguage`.\n *\n * @description\n * Retorna idioma do browser ou o idioma padrÃ£o.\n */\nexport function browserLanguage() {\n  return getShortBrowserLanguage();\n}\n\n/**\n * Retorna o idioma atual do navegador\n */\nexport function getBrowserLanguage(): string {\n  // navigator.userLanguage is the value for IE10\n  return navigator.language || navigator['userLanguage'];\n}\n\n/**\n * Retorna o idioma do navegador, com somente as duas primeiras letras. Por exemplo: \"pt\" ou \"es\".\n *\n * Caso o valor retornado pelo navegador nÃ£o estiver dentro dos idiomas suportados pelo PO,\n * serÃ¡ retornado a linguagem padrÃ£o (poLocaleDefault).\n */\nexport function getShortBrowserLanguage(): string {\n  const language = (getBrowserLanguage() || poLocaleDefault).toLowerCase().substring(0, 2);\n\n  if (!poLocales.includes(language)) {\n    return poLocaleDefault;\n  }\n\n  return language;\n}\n\nexport function convertToBoolean(val: any): boolean {\n  if (typeof val === 'string') {\n    val = val.toLowerCase().trim();\n    return (val === 'true' || val === 'on' || val === '');\n  }\n\n  if (typeof val === 'number') {\n    return val === 1;\n  }\n\n  return !!val;\n}\n\nexport function convertToInt(value: any, valueDefault?: any): number {\n  const validNumber = parseInt(value, 10);\n  const validDefaultValue = parseInt(valueDefault, 10);\n  const defaultValue = validDefaultValue || validDefaultValue === 0 ? validDefaultValue : undefined;\n\n  return validNumber || validNumber === 0 ? validNumber : defaultValue;\n}\n\nexport function isTypeof(object: any, type: any) {\n  return typeof object === type;\n}\n\n/**\n *\n * @param fn FunÃ§Ã£o que serÃ¡ executada dentro do contexto. Podendo ser o nome da funÃ§Ã£o\n * ou a referÃªncia da mesma.\n *\n * @param context Contexto do qual a funÃ§Ã£o serÃ¡ executada.\n */\nexport function callFunction(fn: any, context: any, param?): void {\n  if (isTypeof(fn, 'function')) {\n    fn.call(context, param);\n  } else {\n    context[fn](param);\n  }\n}\n\nexport function convertIsoToDate(value: string , start: boolean, end: boolean) {\n  if (value) {\n    const day = parseInt(value.substring(8, 10), 10);\n    const month = parseInt(value.substring(5, 7), 10);\n    const year = parseInt(value.substring(0, 4), 10);\n    if (start) {\n      const date = new Date(year, month - 1, day, 0, 0, 0);\n\n      setYearFrom0To100(date, year);\n\n      return date;\n    } else if (end) {\n      const date = new Date(year, month - 1, day, 23, 59, 59);\n\n      setYearFrom0To100(date, year);\n\n      return date;\n    } else {\n      const milliseconds = Date.parse(value);\n      const timezone = new Date().getTimezoneOffset() * 60000;\n      return new Date(milliseconds + timezone);\n    }\n  }\n}\n\nexport function convertDateToISOExtended(date: Date, time?: string) {\n  if (date) {\n\n    const getMonth = date.getMonth() + 1;\n    const day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();\n    const month = getMonth < 10 ? '0' + getMonth : getMonth;\n    const year = formatYear(date.getFullYear());\n\n    const dateString = date.toString();\n\n    if (time) {\n      return year + '-' + month + '-' + day + time;\n    } else {\n      return year + '-' + month + '-' + day + 'T' + dateString.substring(16, 24) +\n          dateString.substring(28, 31) + ':' + dateString.substring(31, 33);\n    }\n  } else {\n    return null;\n  }\n}\n\n/**\n * Transforma o ano em uma string no formato yyyy e caso o ano seja menor que 1000 preenche com zeros a esquerda.\n * @param year Ano\n */\nexport function formatYear(year: number) {\n\n  if (year >= 1000) {\n    return year.toString();\n  }\n\n  if (year > 99 && year < 1000) {\n    return `0${year}`;\n  }\n\n  if (year > 9 && year < 100) {\n    return `00${year}`;\n  }\n\n  if (year >= 0 && year < 10) {\n    return `000${year}`;\n  }\n\n}\n\nexport function isEquals(value, comparedValue) {\n  return JSON.stringify(value) === JSON.stringify(comparedValue);\n}\n\n/**\n * Caso o ano original da data seja entre 0 e 100 atribui esse valor ao ano, pois o `new Date` do javascript transforma o ano para 190X.\n * @param date Data\n * @param year Ano original\n */\nexport function setYearFrom0To100(date: Date, year: number) {\n  if (year >= 0 && year < 100 ) {\n    date.setFullYear(year);\n  }\n}\n\nexport function sortOptionsByProperty(options: Array<any>, property: string) {\n  options.sort((optionA, optionB) => {\n    optionA = optionA[property].toString().toLowerCase();\n    optionB = optionB[property].toString().toLowerCase();\n\n    if (optionA < optionB) {\n      return -1;\n    }\n    if (optionA > optionB) {\n      return 1;\n    }\n    return 0;\n  });\n}\n\nexport function removeDuplicatedOptions(list: Array<any>) {\n  for (let i = 0; i < list.length; i++) {\n    if (i === 0) { continue; }\n\n    if (list.findIndex(op => op.value === list[i].value) !== i) {\n      list.splice(i, 1);\n      i--;\n    }\n  }\n}\n\nexport function removeUndefinedAndNullOptions(list: Array<any>) {\n  for (let i = 0; i < list.length; i++) {\n    if (list[i].value === undefined || list[i].value === null ) {\n      list.splice(i, 1);\n      i--;\n    }\n  }\n}\n\nexport function validValue(value: any) {\n  return (value !== null && value !== undefined && value !== '') || value === false;\n}\n\nexport function isExternalLink(url): boolean {\n  return url ? url.startsWith('http') : false;\n}\n\nexport function openExternalLink(url): void {\n  window.open(url, '_blank');\n}\n\nexport function  getFormattedLink(link: string): string {\n  let formattedLink = '';\n  // Retira todos os pontos no comeÃ§o da URL.\n  if (link) {\n    formattedLink = link.replace(/^(\\.)+/g, '');\n  }\n  // Verifica se foi utilizado uma rota que nÃ£o comece com barra.\n  if (!formattedLink.startsWith('/')) {\n    formattedLink = '/'.concat(formattedLink);\n  }\n  return formattedLink;\n}\n\n/**\n * MÃ©todo responsÃ¡vel por ordenar dois valores.\n *\n * @param leftSide Primeiro valor a ser comparado.\n * @param rightSide Segundo valor a ser comparado.\n * @param ascending Determina se serÃ¡ em ordem ascendente ou descendente.\n */\nexport function sortValues(leftSide: string, rightSide: string, ascending: boolean = true): number {\n  if (ascending) {\n    if (leftSide < rightSide) {\n      return -1;\n    } else if (leftSide > rightSide) {\n      return 1;\n    }\n  } else if (ascending === false) {\n    if (leftSide < rightSide) {\n      return 1;\n    } else if (leftSide > rightSide) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nexport function validateDateRange(date: Date, dateStart: Date, dateEnd: Date) {\n  if (dateStart && dateEnd) {\n    return (date >= dateStart && date <= dateEnd);\n  } else if (dateStart && !dateEnd) {\n    return (date >= dateStart);\n  } else if (!dateStart && dateEnd) {\n    return (date <= dateEnd);\n  } else {\n    return true;\n  }\n}\n\nexport function capitalizeFirstLetter(text: string): string {\n  return `${text.charAt(0).toUpperCase()}${text.slice(1)}`;\n}\n\n/**\n * Mapeia um novo array apenas com as propriedades definidas pelo desenvolvedor baseado em um array de\n * origem.\n *\n * Exemplo:\n *\n * ```\n * const people = [\n *  { id: 1, name: 'Fulano', birthdate: '1980-11-01', genre: 'Male', city: 'SÃ£o Paulo', dependents: 2 },\n *  { id: 2, name: 'Beltrano', birthdate: '1997-01-21', genre: 'Female', city: 'Joinville', dependents: 0 },\n *  { id: 3, name: 'Siclano', birthdate: '1995-07-15', genre: 'Male', city: 'Joinville', dependents: 0 }\n * ];\n *\n * const properties = ['id', 'name'];\n *\n * const idAndName = mapArrayByProperties(people, properties);\n *\n * console.log(idAndName); // [{ id: 1, name: 'Fulano' }, { id: 2, name: 'Beltrano' }, { id: 3, name: 'Siclano' }]\n * ```\n *\n * Um outro uso para o mÃ©todo Ã© \"parear\" todos os objetos do array com as mesmas propriedades.\n *\n * ```\n * const customers = [\n *  { id: 1, name: 'Fulano', city: 'SÃ£o Paulo', dependents: 2 }, // sem genre\n *  { id: 2, name: 'Beltrano', genre: 'Female', city: 'Joinville' }, // sem dependents\n *  { id: 3, name: 'Siclano', genre: 'Male', city: 'Joinville', dependents: 0 }\n * ];\n * const properties = ['id', 'name', 'city', 'genre', 'dependents'];\n *\n * const pattern = mapArrayByProperties(customers, properties);\n * console.log(pattern);\n *\n * // [\n * //   { id: 1, name: 'Fulano', city: 'SÃ£o Paulo', genre: undefined, dependents: 2 },\n * //   { id: 2, name: 'Beltrano', city: 'Joinville', genre: 'Female', dependents: undefined },\n * //   { id: 3, name: 'Siclano', city: 'Joinville', genre: 'Male', dependents: 0 }\n * // ]\n * ```\n *\n * @param items {Array<any>} Array de items original.\n * @param properties {Array<string>} Array de string com a lista de propriedades que devem ser retornadas.\n *\n * @returns Array<any>\n */\nexport function mapArrayByProperties(items: Array<any> = [], properties: Array<string> = []): Array<any> {\n  return items.map(item => mapObjectByProperties(item, properties));\n}\n\n/**\n * Mapeia um novo objeto apenas com as propriedades definidas pelo desenvolvedor.\n *\n * Exemplo:\n *\n * ```\n * const person = { id: 1, name: 'Fulano', birthdate: '1980-11-01', genre: 'Male', city: 'SÃ£o Paulo', dependents: 2 };\n *\n * const properties = ['id', 'name'];\n *\n * const idAndName = mapObjectByProperties(person, properties);\n *\n * console.log(idAndName); // { id: 1, name: 'Fulano' }\n * ```\n *\n * @param object {Array<any>} Array de items original.\n * @param properties {Array<string>} Array de string com a lista de propriedades que devem ser retornadas.\n *\n * @returns Array<any>\n */\nexport function mapObjectByProperties(object: any = {}, properties: Array<string> = []) {\n  const getSelectedProperties = (selectedProperties, property) => ({ ...selectedProperties, [property]: object[property] });\n\n  return properties.reduce(getSelectedProperties, {});\n}\n\n/**\n * Retorna os valores de um objeto dentro de um array.\n *\n * > Simula o Object.values(obj), o mesmo deve ser removido assim que a versÃ£o typescrit for atualizada.\n *\n * @param object Objeto de onde serÃ¡ pego os valores.\n */\nexport function valuesFromObject(object: any = {}): Array<any> {\n  return Object.keys(object).map(property => object[property]);\n}\n\n/**\n * adiciona 0 no tempo informado, caso menor q 10\n *\n * @param time\n */\nexport function addZero(time: number) {\n  if (!time) {\n    return '00';\n  }\n\n  if (time < 10) {\n    return `0${time}`;\n  }\n\n  return time;\n}\n","export const poModalPasswordRecoveryLiterals = {\n  en: <any>{\n    cancelButton: 'Cancel',\n    closeButton: 'Close',\n    continueButton: 'Continue',\n    email: 'e-mail',\n    emailErrorMessagePhrase: 'Invalid e-mail format',\n    emailSentConfirmationPhrase: `We have sent the instructions and new password creation link to your e-mail.\n    If you did not receive it after a few minutes, check your spam box or click Resend.`,\n    emailSentTitle: 'E-mail sent',\n    forgotPasswordTitle: 'Forgot your password?',\n    insertCode: 'Type the code',\n    insertEmail: 'Enter your e-mail',\n    insertPhone: 'Enter your mobile number',\n    phoneErrorMessagePhrase: 'Invalid phone number',\n    prepositionIn: 'in',\n    prepositionOr: 'or',\n    recoveryPasswordPhrase: 'To recover your password we will send you a {0} with instructions.',\n    resendEmailButton: 'Resend',\n    resendSmsCodePhrase: 'If the code does not arrive within a few minutes, please send it again.',\n    sendAgainPhrase: 'If the code does not arrive within a few minutes',\n    sendAgain: 'send again.',\n    sendButton: 'Submit',\n    sentSmsCodePhrase: 'We sent a code for your mobile phone.',\n    sms: 'SMS',\n    smsCodeErrorMessagePhrase: 'Invalid code. Please re-enter or contact support',\n    supportContact: 'If you do not have access to {0} contact support',\n    telephone: 'telephone',\n    typeCodeTitle: 'Enter sent code'\n  },\n  es: <any>{\n    cancelButton: 'Cancelar',\n    closeButton: 'Cerrar',\n    continueButton: 'Continuar',\n    email: 'e-mail',\n    emailErrorMessagePhrase: 'Formato de correo electrÃ³nico no vÃ¡lido',\n    emailSentConfirmationPhrase: `Enviamos las instrucciones y enlace de creaciÃ³n de nueva contraseÃ±a para su correo electrÃ³nico.\n    Si no ha recibido despuÃ©s de unos minutos, compruebe su caja de spam o haga clic en Reenviar`,\n    emailSentTitle: 'E-mail enviado',\n    forgotPasswordTitle: 'Olvidaste tu contraseÃ±a?',\n    insertCode: 'Introduzca el cÃ³digo',\n    insertEmail: 'Introduce tu e-mail',\n    insertPhone: 'Introduce tu nÃºmero de celular',\n    phoneErrorMessagePhrase: 'NÃºmero de telÃ©fono no vÃ¡lido',\n    prepositionIn: 'en',\n    prepositionOr: 'u',\n    recoveryPasswordPhrase: 'Para recuperar su contraseÃ±a vamos a enviar un {0} con instrucciones.',\n    resendEmailButton: 'Reenviar',\n    resendSmsCodePhrase: 'Si el cÃ³digo no llega dentro de unos minutos, vuelva a enviar.',\n    sendAgain: 'envÃ­e de nuevo.',\n    sendAgainPhrase: 'Si el cÃ³digo no llega dentro de unos minutos',\n    sendButton: 'Enviar',\n    sentSmsCodePhrase: 'Enviamos un cÃ³digo para su celular.',\n    sms: 'SMS',\n    smsCodeErrorMessagePhrase: 'CÃ³digo no vÃ¡lido. Escriba de nuevo o pÃ³ngase en contacto con el soporte',\n    supportContact: 'Si no tiene acceso a {0} pÃ³ngase en contacto con el soporte',\n    telephone: 'telÃ©fono',\n    typeCodeTitle: 'Escribir cÃ³digo enviado'\n  },\n  pt: <any>{\n    cancelButton: 'Cancelar',\n    closeButton: 'Fechar',\n    continueButton: 'Continuar',\n    email: 'e-mail',\n    emailErrorMessagePhrase: 'Formato de e-mail invÃ¡lido',\n    emailSentConfirmationPhrase: `Enviamos as instruÃ§Ãµes e link de criaÃ§Ã£o de nova senha para o seu e-mail.\n    Caso nÃ£o tenha recebido apÃ³s alguns minutos, verifique sua caixa de spam ou clique em Reenviar.`,\n    emailSentTitle: 'E-mail enviado',\n    forgotPasswordTitle: 'Esqueceu sua senha?',\n    insertCode: 'Digite o cÃ³digo',\n    insertEmail: 'Insira seu e-mail',\n    insertPhone: 'Insira seu nÃºmero de celular',\n    phoneErrorMessagePhrase: 'NÃºmero de telefone invÃ¡lido',\n    prepositionIn: 'em',\n    prepositionOr: 'ou',\n    recoveryPasswordPhrase: 'Para recuperar sua senha vamos enviar um {0} com instruÃ§Ãµes.',\n    resendEmailButton: 'Reenviar',\n    resendSmsCodePhrase: 'Se o cÃ³digo nÃ£o chegar dentro de alguns minutos envie novamente',\n    sendAgain: 'envie novamente.',\n    sendAgainPhrase: 'Se o cÃ³digo nÃ£o chegar dentro de alguns minutos',\n    sendButton: 'Enviar',\n    sentSmsCodePhrase: 'Enviamos um cÃ³digo para seu celular cadastrado.',\n    sms: 'SMS',\n    smsCodeErrorMessagePhrase: 'CÃ³digo invÃ¡lido. Digite novamente ou contacte o suporte',\n    supportContact: 'Se nÃ£o tiver acesso ao {0} contacte o suporte',\n    telephone: 'telefone',\n    typeCodeTitle: 'Digitar cÃ³digo enviado'\n  },\n  ru: <any>{\n    cancelButton: 'Ð¾ÑÐ¼ÐµÐ½Ð¸ÑÑ',\n    closeButton: 'Ð±Ð»Ð¸Ð·ÐºÐ¾',\n    continueButton: 'Ð±Ð»Ð¸Ð·ÐºÐ¾',\n    email: 'Ð¿Ð¾ ÑÐ»ÐµÐºÑÑÐ¾Ð½Ð½Ð¾Ð¹ Ð¿Ð¾ÑÑÐµ',\n    emailErrorMessagePhrase: 'ÐÐµÐ²ÐµÑÐ½ÑÐ¹ ÑÐ¾ÑÐ¼Ð°Ñ ÑÐ»ÐµÐºÑÑÐ¾Ð½Ð½Ð¾Ð¹ Ð¿Ð¾ÑÑÑ',\n    emailSentConfirmationPhrase: `ÐÑ Ð¾ÑÐ¿ÑÐ°Ð²Ð¸Ð»Ð¸ Ð¸Ð½ÑÑÑÑÐºÑÐ¸Ð¸ Ð¸ Ð½Ð¾Ð²ÑÑ ÑÑÑÐ»ÐºÑ Ð´Ð»Ñ ÑÐ¾Ð·Ð´Ð°Ð½Ð¸Ñ Ð¿Ð°ÑÐ¾Ð»Ñ Ð´Ð»Ñ Ð²Ð°ÑÐµÐ¹ ÑÐ»ÐµÐºÑÑÐ¾Ð½Ð½Ð¾Ð¹ Ð¿Ð¾ÑÑÑ.\nÐÑÐ»Ð¸ Ð²Ñ Ð½Ðµ Ð¿Ð¾Ð»ÑÑÐ¸Ð»Ð¸ ÐµÐ³Ð¾ Ð² ÑÐµÑÐµÐ½Ð¸Ðµ Ð½ÐµÑÐºÐ¾Ð»ÑÐºÐ¸Ñ Ð¼Ð¸Ð½ÑÑ, ÑÑÑÐ°Ð½Ð¾Ð²Ð¸ÑÐµ ÑÐ»Ð°Ð¶Ð¾Ðº Ð¡Ð¿Ð°Ð¼ Ð¸Ð»Ð¸ Ð½Ð°Ð¶Ð¼Ð¸ÑÐµ ÐÐ°Ð»ÐµÐµ.`,\n    emailSentTitle: 'ÐÐ¸ÑÑÐ¼Ð¾ Ð¾ÑÐ¿ÑÐ°Ð²Ð»ÐµÐ½Ð¾',\n    forgotPasswordTitle: 'ÐÐ°Ð±ÑÐ»Ð¸ Ð¿Ð°ÑÐ¾Ð»Ñ?',\n    insertCode: 'ÐÐ²ÐµÐ´Ð¸ÑÐµ ÐºÐ¾Ð´',\n    insertEmail: 'ÐÐ²ÐµÐ´Ð¸ÑÐµ Ð°Ð´ÑÐµÑ ÑÐ»ÐµÐºÑÑÐ¾Ð½Ð½Ð¾Ð¹ Ð¿Ð¾ÑÑÑ',\n    insertPhone: 'ÐÐ²ÐµÐ´Ð¸ÑÐµ Ð½Ð¾Ð¼ÐµÑ Ð²Ð°ÑÐµÐ³Ð¾ Ð¼Ð¾Ð±Ð¸Ð»ÑÐ½Ð¾Ð³Ð¾ ÑÐµÐ»ÐµÑÐ¾Ð½Ð°',\n    phoneErrorMessagePhrase: 'ÐÐµÐ²ÐµÑÐ½ÑÐ¹ Ð½Ð¾Ð¼ÐµÑ ÑÐµÐ»ÐµÑÐ¾Ð½Ð°',\n    prepositionIn: 'Ð²',\n    prepositionOr: 'Ð¸Ð»Ð¸',\n    recoveryPasswordPhrase: 'ÐÐ»Ñ Ð²Ð¾ÑÑÑÐ°Ð½Ð¾Ð²Ð»ÐµÐ½Ð¸Ñ Ð²Ð°ÑÐµÐ³Ð¾ Ð¿Ð°ÑÐ¾Ð»Ñ Ð¼Ñ Ð²ÑÑÐ»ÐµÐ¼ {0} Ñ Ð¸Ð½ÑÑÑÑÐºÑÐ¸ÑÐ¼Ð¸.',\n    resendEmailButton: 'ÐÑÐ¿ÑÐ°Ð²Ð¸ÑÑ ÐµÑÐµ ÑÐ°Ð·',\n    resendSmsCodePhrase: 'ÐÑÐ»Ð¸ ÐºÐ¾Ð´ Ð½Ðµ Ð¿ÑÐ¸ÑÐ¾Ð´Ð¸Ñ ÑÐµÑÐµÐ· Ð½ÐµÑÐºÐ¾Ð»ÑÐºÐ¾ Ð¼Ð¸Ð½ÑÑ, Ð¿Ð¾Ð¿ÑÐ¾Ð±ÑÐ¹ÑÐµ ÐµÑÐµ ÑÐ°Ð·.',\n    sendAgain: 'Ð¾ÑÐ¿ÑÐ°Ð²Ð¸ÑÑ ÑÐ½Ð¾Ð²Ð°.',\n    sendAgainPhrase: 'ÐÑÐ»Ð¸ ÐºÐ¾Ð´ Ð½Ðµ Ð¿ÑÐ¸ÑÐ¾Ð´Ð¸Ñ ÑÐµÑÐµÐ· Ð½ÐµÑÐºÐ¾Ð»ÑÐºÐ¾ Ð¼Ð¸Ð½ÑÑ',\n    sendButton: 'Ð¿Ð¾ÑÐ»Ð°ÑÑ',\n    sentSmsCodePhrase: 'ÐÑ Ð¾ÑÐ¿ÑÐ°Ð²Ð»ÑÐµÐ¼ ÐºÐ¾Ð´ Ð½Ð° Ð²Ð°Ñ Ð·Ð°ÑÐµÐ³Ð¸ÑÑÑÐ¸ÑÐ¾Ð²Ð°Ð½Ð½ÑÐ¹ Ð¼Ð¾Ð±Ð¸Ð»ÑÐ½ÑÐ¹ ÑÐµÐ»ÐµÑÐ¾Ð½.',\n    sms: 'SMS',\n    smsCodeErrorMessagePhrase: 'ÐÐµÐ²ÐµÑÐ½ÑÐ¹ ÐºÐ¾Ð´. ÐÐ¾Ð²ÑÐ¾ÑÐ¸ÑÐµ Ð¸Ð»Ð¸ Ð¾Ð±ÑÐ°ÑÐ¸ÑÐµÑÑ Ð² ÑÐ»ÑÐ¶Ð±Ñ Ð¿Ð¾Ð´Ð´ÐµÑÐ¶ÐºÐ¸',\n    supportContact: 'ÐÑÐ»Ð¸ Ñ Ð²Ð°Ñ Ð½ÐµÑ Ð´Ð¾ÑÑÑÐ¿Ð° Ðº {0}, Ð¾Ð±ÑÐ°ÑÐ¸ÑÐµÑÑ Ð² ÑÐ»ÑÐ¶Ð±Ñ Ð¿Ð¾Ð´Ð´ÐµÑÐ¶ÐºÐ¸',\n    telephone: 'ÑÐµÐ»ÐµÑÐ¾Ð½',\n    typeCodeTitle: 'ÐÐ²ÐµÐ´Ð¸ÑÐµ Ð¾ÑÐ¿ÑÐ°Ð²Ð»ÐµÐ½Ð½ÑÐ¹ ÐºÐ¾Ð´'\n  }\n};\n","/**\n * @usedBy PoModalPasswordRecoveryComponent\n *\n * @description\n *\n * *Enum* para especificaÃ§Ã£o do tipo de recuperaÃ§Ã£o de senha.\n */\nexport enum PoModalPasswordRecoveryType {\n  /** Possibilita ao usuÃ¡rio optar por envio via email ou SMS */\n  All = 'all',\n\n  /** DefiniÃ§Ã£o para recuperaÃ§Ã£o apenas por email */\n  Email = 'email',\n\n  /** DefiniÃ§Ã£o para recuperaÃ§Ã£o apenas por SMS */\n  SMS = 'sms'\n\n}\n","import { EventEmitter, Input, Output } from '@angular/core';\n\nimport { browserLanguage, poLocaleDefault } from '../../utils/util';\n\nimport { poModalPasswordRecoveryLiterals } from './literals/i18n/po-modal-password-recovery-literals';\nimport { PoModalPasswordRecoveryType } from './enums/po-modal-password-recovery-type.enum';\n\nconst PoModalPasswordRecoveryDefaultMaxLength = 15;\nconst PoModalPasswordRecoveryDefaultMinLength = 15;\nconst PoModalPasswordRecoveryDefaultPhone = '(99) 99999-9999';\nconst PoModalPasswordRecoveryTypeDefault: PoModalPasswordRecoveryType = PoModalPasswordRecoveryType.Email;\n\n/**\n * @description\n *\n * O componente `po-modal-password-recovery` Ã© utilizado como template para solicitaÃ§Ã£o de troca de senha.\n *\n * Ã composto por uma modal que possui trÃªs telas, cada uma com as seguintes caracterÃ­sticas:\n *\n * - A primeira possui campos para preenchimento de email ou nÃºmero de telefone;\n * - Tela com campo para preenchimento de cÃ³digo SMS enviado para o nÃºmero de telefone enviado;\n * - A terceira se trata de uma confirmaÃ§Ã£o de envio de link para a caixa de email do usuÃ¡rio.\n *\n *\n * A propriedade `p-url-recovery` automatiza a rotina do componente e simplifica o processo\n * para recuperaÃ§Ã£o de senha, bastando definir uma url para requisiÃ§Ã£o dos recursos.\n * Seu detalhamento para uso pode ser visto logo abaixo em *propriedades*.\n * Caso julgue necessÃ¡rio, pode-se tambÃ©m definir manualmente a rotina do componente.\n *\n *\n * Para a modal de digitaÃ§Ã£o de cÃ³digo SMS, Ã© possÃ­vel definir uma mensagem de erro\n * customizada com a propriedade `p-code-error` e hÃ¡ um link para\n * reenvio de cÃ³digo por SMS. Ao reenviar, o evento `p-code-submit` envia um objeto com o telefone do usuÃ¡rio e a quantidade\n * de vezes em que o usuÃ¡rio fez a solicitaÃ§Ã£o de reenvio.\n *\n * > Ã indicada a utilizaÃ§Ã£o da tela de digitaÃ§Ã£o para envio de cÃ³digo SMS apenas\n * se a opÃ§Ã£o por envio SMS for disponibilizada para o usuÃ¡rio.\n *\n *\n * A modal de confirmaÃ§Ã£o contÃ©m uma aÃ§Ã£o de reenvio e o evento `p-submit`\n * Ã© quem passa o objeto contendo o email em conjunto com a quantidade de tentativas de reenvio.\n *\n * > A tela de confirmaÃ§Ã£o Ã© indicada para quando o usuÃ¡rio solicitar a troca atravÃ©s do email.\n *\n * > Os textos das modals sÃ£o prÃ©-definidos, imutÃ¡veis e sÃ£o traduzidos de acordo com o idioma do *browser* (pt, en e es)\n *\n * Para que as imagens sejam exibidas corretamente, Ã© necessÃ¡rio incluir o caminho delas ao projeto. Para isso, edite\n * o *assets* no arquivo **angular.json** da aplicaÃ§Ã£o na seguinte ordem:\n * ```\n *   \"assets\": [\n *     \"src/assets\",\n *     \"src/favicon.ico\",\n *     {\n *       \"glob\": \"**\\/*\",\n *       \"input\": \"node_modules/@portinari/style/images\",\n *       \"output\": \"assets/images\"\n *     }\n *   ]\n * ```\n */\nexport abstract class PoModalPasswordRecoveryBaseComponent {\n\n  private _contactEmail: string;\n  private _phoneMask = PoModalPasswordRecoveryDefaultPhone;\n  private _type: PoModalPasswordRecoveryType = PoModalPasswordRecoveryTypeDefault;\n\n  email: string;\n  maxLength = PoModalPasswordRecoveryDefaultMaxLength;\n  minLength = PoModalPasswordRecoveryDefaultMinLength;\n  modalPasswordRecoveryTypeAll: boolean;\n  phone: string;\n  smsCode: string;\n  smsCodeErrorMessage: string;\n\n  literals: { cancelButton: string, closeButton: string, continueButton: string, email: string, emailErrorMessagePhrase: string,\n    emailSentConfirmationPhrase: string, emailSentTitle: string, forgotPasswordTitle: string,\n    insertCode: string, insertEmail: string, insertPhone: string, phoneErrorMessagePhrase: string,\n    prepositionIn: string, prepositionOr: string, recoveryPasswordPhrase: string, resendEmailButton: string,\n    resendSmsCodePhrase: string, sendAgain: string, sendAgainPhrase: string, sendButton: string, sms: string, smsCode: string,\n    smsCodeErrorMessagePhrase: string, sentSmsCodePhrase: string, supportContact: string, telephone: string, typeCodeTitle: string } =\n    {\n      ...poModalPasswordRecoveryLiterals[poLocaleDefault],\n      ...poModalPasswordRecoveryLiterals[browserLanguage()],\n    };\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * DefiniÃ§Ã£o do e-mail que Ã© exibido na mensagem para contato de suporte.\n   */\n  @Input('p-contact-email') set contactEmail(value: string) {\n    this._contactEmail = value;\n\n    this.smsCodeErrorMessage = this.concatenateSMSErrorMessage(value);\n  }\n\n  get contactEmail() {\n    return this._contactEmail;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * DefiniÃ§Ã£o de mensagem de erro customizada para quando o usuÃ¡rio passar um cÃ³digo SMS invÃ¡lido ou errado.\n   */\n  @Input('p-code-error') codeError: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * DefiniÃ§Ã£o da mascara do campo de telefone.\n   *\n   * @default `(99) 99999-9999`\n   */\n  @Input('p-phone-mask') set phoneMask(value: string) {\n    this._phoneMask = value || PoModalPasswordRecoveryDefaultPhone;\n    this.minLength = this.maxLength = this._phoneMask.length;\n  }\n\n  get phoneMask() {\n    return this._phoneMask;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o tipo de recuperaÃ§Ã£o de senha que serÃ¡ exibido.\n   *\n   * @default `PoModalPasswordRecoveryType.Email`\n   *\n   */\n  @Input('p-type') set type(value: PoModalPasswordRecoveryType) {\n    this._type = (<any>Object).values(PoModalPasswordRecoveryType).includes(value) ? value : PoModalPasswordRecoveryTypeDefault;\n  }\n\n  get type() {\n    return this._type;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Endpoint usado pelo template para requisiÃ§Ã£o do recurso. Quando preenchido,\n   * o mÃ©todos `p-submit` e `p-submit-code` serÃ£o ignorados e o componente adquirirÃ¡ automatizaÃ§Ã£o\n   * para o processo de solicitaÃ§Ã£o de troca de senha.\n   *\n   * ### Processos\n   * Ao digitar um valor vÃ¡lido no campo de email/telefone e pressionar **enviar**,\n   * o componente farÃ¡ uma requisiÃ§Ã£o `POST` na url especificada nesta propriedade passando o objeto contendo o valor definido pelo usuÃ¡rio.\n   *\n   * ```\n   * body {\n   *  email: email,\n   *  retry?: retry\n   * }\n   * ```\n   *\n   *\n   * #### RecuperaÃ§Ã£o por email\n   * Para a recuperaÃ§Ã£o de senha por **email**, o cÃ³digo de resposta HTTP de status esperado Ã© `204`.\n   *\n   * Em caso de **sucesso**, serÃ¡ exibida a modal de confirmaÃ§Ã£o de e-mail para o usuÃ¡rio.\n   *\n   *\n   * > A aÃ§Ã£o **Reenviar** na tela de confirmaÃ§Ã£o efetua uma nova requisiÃ§Ã£o\n   * passando-se o objeto com incremento para o valor da propriedade **retry**.\n   *\n   * *Processo finalizado.*\n   *\n   *\n   * #### RecuperaÃ§Ã£o por SMS\n   * Se a opÃ§Ã£o de recuperaÃ§Ã£o for por **SMS**, o cÃ³digo de status de sucesso deve ser `200`.\n   * Em caso de **sucesso**, abre-se a modal de digitaÃ§Ã£o de cÃ³digo SMS e a resposta\n   * desta requisiÃ§Ã£o deve retornar uma definiÃ§Ã£o de dados abaixo:\n   *\n   * ```\n   * 200:\n   *  {\n   *    hash: hash,\n   *    urlValidationCode?: url\n   *  }\n   * ```\n   *\n   *\n   * - O **hash** serÃ¡ o cÃ³digo de validaÃ§Ã£o da solicitaÃ§Ã£o do SMS para ser enviado juntamente com o cÃ³digo de verificaÃ§Ã£o do SMS;\n   * - **urlValidationCode** Ã© a url usada para validaÃ§Ã£o do cÃ³digo enviado por SMS.\n   *\n   *\n   * > Caso nÃ£o seja passado urlValidationCode, o endpoint usado para validaÃ§Ã£o do cÃ³digo serÃ¡ `<p-url-recovery>/validation`.\n   *\n   *\n   * #### ValidaÃ§Ã£o do cÃ³digo SMS\n   * Ao digitar um valor vÃ¡lido no campo de cÃ³digo SMS e pressionar **continuar**, o componente farÃ¡ uma requisiÃ§Ã£o `POST` contendo:\n   *\n   * ```\n   * POST /<p-url-recovery>/validation OU /<urlValidationCode>\n   * Body {\n   *  hash: hash,\n   *  code: code\n   * }\n   * ```\n   *\n   *\n   * O cÃ³digo de resposta HTTP de status esperado Ã© `200`.\n   *\n   * Em caso de **erro** na validaÃ§Ã£o do cÃ³digo SMS, a modal se mantÃ©m com o campo para digitaÃ§Ã£o\n   * de cÃ³digo SMS\n   *\n   *\n   * > Pode-se atribuir a mensagem de erro (message) para o atributo `p-code-error` conforme retorno abaixo:\n   *\n   * ```\n   * 400\n   *  {\n   *    error {\n   *      message: 'Error Message'\n   *    }\n   *  }\n   * ```\n   *\n   *\n   * Em caso de **sucesso**, espera-se a resposta desta requisiÃ§Ã£o retornando a seguinte definiÃ§Ã£o:\n   *\n   * ```\n   * 200:\n   *  {\n   *    token: token,\n   *    urlChangePassword?: url\n   *  }\n   * ```\n   *\n   *\n   * - **token**: Token de alteraÃ§Ã£o de senha;\n   * - **urlChangePassword**: url para o formulÃ¡rio de alteraÃ§Ã£o de senha.\n   *\n   *\n   * O componente estÃ¡ configurado para redirecionar para a url estabelecida em `urlChangePassword`.\n   *\n   * > Caso nÃ£o seja passado valor para urlChangePassword,\n   * a url usada para validaÃ§Ã£o serÃ¡ a `<p-url-recovery>/changePassword?token=<token>`.\n   *\n   * *Processo finalizado.*\n   */\n  @Input('p-url-recovery') urlRecovery?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * AÃ§Ã£o contendo como parÃ¢metro o cÃ³digo enviado por SMS e digitado pelo usuÃ¡rio.\n   *\n   * > Esta propriedade serÃ¡ ignorada se for definido valor para a propriedade `p-url-recovery`.\n   */\n  @Output('p-code-submit') codeSubmit = new EventEmitter<any>();\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * AÃ§Ã£o contendo o email como parÃ¢metro e que Ã© executada quando o usuÃ¡rio clica sobres os botÃµes de 'enviar' e 'reenviar' e-mail.\n   *\n   * > Esta propriedade serÃ¡ ignorada se for definido valor para a propriedade `p-url-recovery`.\n   */\n  @Output('p-submit') submit = new EventEmitter<any>();\n\n  /**\n   * AcÃ£o para conclusÃ£o de processo e fechamento da modal. Indica-se sua utilizaÃ§Ã£o\n   * para apÃ³s o envio e validaÃ§Ã£o do cÃ³digo SMS enviado pelo usuÃ¡rio.\n   *\n   * > Nas modals em que hÃ¡ a aÃ§Ã£o de 'cancelar' dispensa-se o uso desta aÃ§Ã£o pois o componente jÃ¡ trata o fechamento da modal.\n   */\n  abstract completed(): void;\n\n  /**\n   * Abre a modal de preenchimento de email ou nÃºmero de telefone para solicitaÃ§Ã£o de troca de senha.\n   */\n  abstract open(): void;\n\n  /**\n   * Abre a modal de confirmaÃ§Ã£o de envio de email.\n   */\n  abstract openConfirmation(): void;\n\n  /**\n   * Abre a modal de preenchimento do cÃ³digo SMS enviado ao usuÃ¡rio.\n   */\n  abstract openSmsCode(): void;\n\n  private concatenateSMSErrorMessage(value: string) {\n    const literalCodeErrorMessage = this.literals.smsCodeErrorMessagePhrase;\n\n    return value && value !== '' ? `${literalCodeErrorMessage} ${this.literals.prepositionIn} ${value}.` : literalCodeErrorMessage;\n  }\n\n}\n","/**\n * @docsPrivate\n *\n * @description\n *\n * Enum para definiÃ§Ã£o do tipo de conteÃºdo exibido na modal.\n */\nexport enum PoModalPasswordRecoveryModalContent {\n\n  /** ExibiÃ§Ã£o de modal contendo campo para preenchimento de email ou nÃºmero de telefone */\n  Email = 'email',\n\n  /** ExibiÃ§Ã£o de modal contendo campo para inserÃ§Ã£o de cÃ³digo enviado por SMS */\n  SMSCode = 'smsCode',\n\n  /** ExibiÃ§Ã£o de modal de confirmaÃ§Ã£o de envio */\n  Confirmation = 'confirmation'\n\n}\n","import { HttpClient, HttpParams, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { PoModalPasswordRecovery } from './interfaces/po-modal-password-recovery.interface';\n\n@Injectable()\nexport class PoModalPasswordRecoveryService {\n\n  constructor(private http: HttpClient) { }\n\n  post(\n    urlRecovery: string,\n    item: PoModalPasswordRecovery,\n    params?: HttpParams | { [param: string]: string | Array<string>; }\n    ): Observable<HttpResponse<Object>> {\n    return this.http.post<any>(urlRecovery, item, { observe: 'response', params: params });\n  }\n\n}\n","import { Component, OnDestroy, ViewChild } from '@angular/core';\nimport { AbstractControl, NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { isExternalLink } from '../../utils/util';\nimport { PoI18nPipe, PoModalAction, PoModalComponent, PoRadioGroupOption } from '@portinari/portinari-ui';\n\nimport { PoModalPasswordRecovery } from './interfaces/po-modal-password-recovery.interface';\nimport { PoModalPasswordRecoveryBaseComponent } from './po-modal-password-recovery-base.component';\nimport { PoModalPasswordRecoveryModalContent } from './enums/po-modal-password-recovery-modal-content.enum';\nimport { PoModalPasswordRecoveryService } from './po-modal-password-recovery.service';\nimport { PoModalPasswordRecoveryType } from './enums/po-modal-password-recovery-type.enum';\n\n/**\n * @docsExtends PoModalPasswordRecoveryBaseComponent\n *\n * @example\n *\n * <example name=\"po-modal-password-recovery-basic\" title=\"Portinari Modal Password Recovery Basic\">\n *  <file name=\"sample-po-modal-password-recovery-basic/sample-po-modal-password-recovery-basic.component.html\"> </file>\n *  <file name=\"sample-po-modal-password-recovery-basic/sample-po-modal-password-recovery-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-modal-password-recovery-labs\" title=\"Portinari Modal Password Recovery Labs\">\n *  <file name=\"sample-po-modal-password-recovery-labs/sample-po-modal-password-recovery-labs.component.html\"> </file>\n *  <file name=\"sample-po-modal-password-recovery-labs/sample-po-modal-password-recovery-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-modal-password-recovery-request\" title=\"Portinari Modal Password Recovery Request\">\n *  <file name=\"sample-po-modal-password-recovery-request/sample-po-modal-password-recovery-request.component.html\"> </file>\n *  <file name=\"sample-po-modal-password-recovery-request/sample-po-modal-password-recovery-request.component.ts\"> </file>\n * </example>\n */\n\n@Component({\n  selector: 'po-modal-password-recovery',\n  templateUrl: './po-modal-password-recovery.component.html'\n})\n\nexport class PoModalPasswordRecoveryComponent extends PoModalPasswordRecoveryBaseComponent implements OnDestroy {\n\n  chosenTypeFormOption: string = PoModalPasswordRecoveryType.Email;\n  codeMask: string = '9 9 9 9 9 9';\n  control: AbstractControl;\n  emailModal: boolean = true;\n  emailModalPhrases = { firstPhrase: null as string, secondPhrase: null as string };\n  endpoint: string = '.';\n  invalidCode: boolean = false;\n  invalidEmail: boolean = false;\n  modalTitle: string;\n  modalType: PoModalPasswordRecoveryModalContent = PoModalPasswordRecoveryModalContent.Email;\n  showCustomCodeError: boolean;\n  smsCodeErrorMessagePhrase: string;\n  submittedCodeValue = {} as PoModalPasswordRecovery;\n  submittedContactValue = {} as PoModalPasswordRecovery;\n\n  private passwordRecoverySubscription: Subscription;\n  private smsBodyResponse;\n  private smsCodeSubscription: Subscription;\n\n  @ViewChild('emailForm', { static: false }) emailForm: NgForm;\n\n  @ViewChild('recoveryModal', { static: true }) recoveryModalElement: PoModalComponent;\n\n  @ViewChild('smsCodeForm', { static: false }) smsCodeForm: NgForm;\n\n  primaryAction: PoModalAction = { label: undefined, action: () => { } };\n\n  secondaryAction: PoModalAction = { label: undefined, action: () => { } };\n\n  typeFormOptions: Array<PoRadioGroupOption> = [\n    { label: 'e-mail', value: PoModalPasswordRecoveryType.Email },\n    { label: 'SMS', value: PoModalPasswordRecoveryType.SMS }\n  ];\n\n  constructor(\n    private router: Router,\n    private poI18nPipe: PoI18nPipe,\n    private poModalPasswordRecoveryService: PoModalPasswordRecoveryService\n    ) {\n    super();\n  }\n\n  ngOnDestroy() {\n    if (this.passwordRecoverySubscription) {\n      this.passwordRecoverySubscription.unsubscribe();\n    }\n\n    if (this.smsCodeSubscription) {\n      this.smsCodeSubscription.unsubscribe();\n    }\n  }\n\n  completed() {\n    this.cancelAction();\n  }\n\n  formModelChangesCheck(form: NgForm) {\n    const invalidForm = form.invalid;\n    this.invalidEmail = invalidForm && form.dirty;\n    this.primaryAction.disabled = invalidForm;\n\n    if (this.modalType === PoModalPasswordRecoveryModalContent.SMSCode) {\n      const codeError: boolean = this.codeError !== undefined && this.codeError !== '';\n      this.showCustomCodeError = codeError && form.pristine;\n    }\n  }\n\n  getInputType(type) {\n    this.type = type;\n    this.pipeModalPhrases();\n    setTimeout(() => {\n      this.control = this.emailForm.controls[type];\n      this.formModelChangesCheck(this.emailForm);\n      this.resetFormFields(this.control);\n    });\n  }\n\n  open() {\n    const control = this.checkFormType(this.type);\n    this.control = this.emailForm.controls[control];\n    this.setEmailModalPhrasesAndActions();\n    this.formModelChangesCheck(this.emailForm);\n    this.recoveryModalElement.open();\n  }\n\n  openConfirmation() {\n    this.modalTitle = this.literals.emailSentTitle;\n    this.modalType = PoModalPasswordRecoveryModalContent.Confirmation;\n    this.setActions(this.cancelAction, this.literals.closeButton, this.submitAction, this.literals.resendEmailButton, false);\n  }\n\n  openSmsCode() {\n    this.modalTitle = this.literals.typeCodeTitle;\n    this.modalType = PoModalPasswordRecoveryModalContent.SMSCode;\n    this.setActions(this.submitSmsCodeAction, this.literals.continueButton, this.cancelAction, this.literals.cancelButton, true);\n\n    setTimeout(() => {\n      this.control = this.smsCodeForm.controls['sms'];\n      this.formModelChangesCheck(this.smsCodeForm);\n    });\n  }\n\n  resendSmsCode() {\n    this.incrementRetryAttempts();\n    if (this.urlRecovery) {\n      this.submitActionRequest(this.submittedContactValue, this.type);\n    } else {\n      this.submit.emit(this.submittedContactValue);\n    }\n  }\n\n  private assignSmsResponse(responseObj) {\n    this.smsBodyResponse = Object.assign({}, {hash: responseObj.hash});\n    if (responseObj.urlValidationCode) {\n      this.smsBodyResponse = Object.assign(this.smsBodyResponse, {urlValidationCode: responseObj.urlValidationCode});\n    }\n  }\n\n  private cancelAction() {\n    this.resetFormFields(this.control);\n    this.submittedContactValue = {};\n\n    this.chosenTypeFormOption = PoModalPasswordRecoveryType.Email;\n    this.modalType = PoModalPasswordRecoveryModalContent.Email;\n    this.type = this.modalPasswordRecoveryTypeAll ? PoModalPasswordRecoveryType.All : this.type;\n    this.recoveryModalElement.close();\n  }\n\n  private checkFormType(type: PoModalPasswordRecoveryType) {\n    return type !== PoModalPasswordRecoveryType.All ? type : PoModalPasswordRecoveryType.Email;\n  }\n\n  private formReset(control: AbstractControl) {\n    control.markAsPristine();\n    control.markAsUntouched();\n    control.updateValueAndValidity();\n  }\n\n  private getEmitValue(type: PoModalPasswordRecoveryType) {\n    return type === PoModalPasswordRecoveryType.SMS ? this.phone : this.email;\n  }\n\n  private incrementRetryAttempts() {\n    this.submittedContactValue.retry = (this.submittedContactValue.retry + 1 || 1);\n  }\n\n  private openExternalLink(url, queryParam) {\n    window.open(`${url}?token=${queryParam}`, '_self');\n  }\n\n  private openInternalLink(url, endpoint, queryParam) {\n    this.router.navigate([`${url}/${endpoint}`], { queryParams: { token: queryParam } });\n  }\n\n  private pipeModalPhrases() {\n    if (this.type === PoModalPasswordRecoveryType.SMS) {\n      this.emailModalPhrases.firstPhrase = this.setPipeArguments(this.literals.recoveryPasswordPhrase, this.literals.sms);\n      this.emailModalPhrases.secondPhrase = this.setPipeArguments(this.literals.supportContact, this.literals.telephone);\n    } else {\n      this.emailModalPhrases.firstPhrase = this.setPipeArguments(this.literals.recoveryPasswordPhrase, this.literals.email);\n      this.emailModalPhrases.secondPhrase = this.setPipeArguments(this.literals.supportContact, this.literals.email);\n    }\n  }\n\n  private redirectToChangePassword(recoveryToken: PoModalPasswordRecovery) {\n    const urlChangePassword = recoveryToken.urlChangePassword;\n    if (urlChangePassword) {\n      isExternalLink(urlChangePassword) ?\n      this.openExternalLink(urlChangePassword, recoveryToken.token) :\n      this.openInternalLink(this.urlRecovery, urlChangePassword, recoveryToken.token);\n    } else {\n      const changePasswordEndpoint = 'changePassword';\n      this.openInternalLink(this.urlRecovery, changePasswordEndpoint, recoveryToken.token);\n    }\n  }\n\n  private resetFormFields(control) {\n    this.formReset(control);\n    this.email = undefined;\n    this.phone = undefined;\n    this.smsCode = undefined;\n  }\n\n  private setActions(primaryAction, primarylabel, secondaryAction, secondaryLabel, disabled) {\n    this.primaryAction.action = () => primaryAction.call(this);\n    this.primaryAction.label = primarylabel;\n    this.secondaryAction.action = () => secondaryAction.call(this);\n    this.secondaryAction.label = secondaryLabel;\n    this.primaryAction.disabled = disabled;\n  }\n\n  private setEmailModalPhrasesAndActions() {\n    this.modalTitle = this.literals.forgotPasswordTitle;\n    this.pipeModalPhrases();\n    this.modalPasswordRecoveryTypeAll = this.type === PoModalPasswordRecoveryType.All;\n    this.setActions(this.submitAction, this.literals.sendButton, this.cancelAction, this.literals.cancelButton, true);\n  }\n\n  private setRequestEndpoint(urlValidationCode?: string) {\n    const endpoint = urlValidationCode || 'validation';\n\n    return `${this.urlRecovery}/${endpoint}`;\n  }\n\n  private setPipeArguments(literalAttr: string, arg: string) {\n    return this.poI18nPipe.transform(literalAttr, arg);\n  }\n\n  private submitAction() {\n    this.modalType === PoModalPasswordRecoveryModalContent.Confirmation ? this.incrementRetryAttempts() : this.formReset(this.control);\n    this.submittedContactValue[this.checkFormType(this.type)] = this.getEmitValue(this.type);\n    if (this.urlRecovery) {\n      this.submitActionRequest(this.submittedContactValue, this.type);\n    } else {\n      this.submit.emit(this.submittedContactValue);\n    }\n  }\n\n  private submitActionRequest(data: PoModalPasswordRecovery, modalType: PoModalPasswordRecoveryType) {\n    const params = modalType === PoModalPasswordRecoveryType.SMS ? { type: 'sms' } : undefined;\n\n    this.passwordRecoverySubscription =\n    this.poModalPasswordRecoveryService.post(this.urlRecovery, data, params)\n    .subscribe(response => {\n      if ((modalType === PoModalPasswordRecoveryType.Email || modalType === PoModalPasswordRecoveryType.All) && response.status === 204) {\n        this.openConfirmation();\n      } else if (modalType === PoModalPasswordRecoveryType.SMS && response.status === 200) {\n        this.assignSmsResponse(response.body);\n        this.openSmsCode();\n      }\n    });\n  }\n\n  private submitSmsCodeAction() {\n    this.submittedCodeValue.code = this.smsCode;\n\n    if (this.urlRecovery) {\n      this.submittedCodeValue = Object.assign(this.submittedCodeValue, {hash: this.smsBodyResponse.hash});\n      this.submitSmsCodeRequest(this.submittedCodeValue);\n\n    } else {\n      this.codeSubmit.emit(this.submittedCodeValue);\n    }\n    this.resetFormFields(this.control);\n  }\n\n  private submitSmsCodeRequest(data: PoModalPasswordRecovery) {\n    this.smsCodeSubscription = this.poModalPasswordRecoveryService\n    .post(this.setRequestEndpoint(this.smsBodyResponse.urlValidationCode), data)\n    .subscribe(\n      response => {\n        const successStatus = response.status === 200;\n        if (successStatus) {\n          this.completed();\n          this.redirectToChangePassword(response.body);\n        }\n      },\n      error => {\n        this.codeError = error.error.message;\n        this.openSmsCode();\n      }\n    );\n  }\n\n}\n","import { Component, Input } from '@angular/core';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente utilizado para exibiÃ§Ã£o da mensagem customizada de erro em um campo de formulÃ¡rio.\n */\n@Component({\n  selector: 'po-modal-password-recovery-error-message',\n  templateUrl: './po-modal-password-recovery-error-message.component.html'\n})\n\nexport class PoModalPasswordRecoveryErrorMessageComponent {\n\n  /** Texto exibido na mensagem de erro. */\n  @Input('p-text') text: string;\n\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { PoFieldModule, PoI18nPipe, PoModalModule } from '@portinari/portinari-ui';\n\nimport { PoModalPasswordRecoveryComponent } from './po-modal-password-recovery.component';\nimport { PoModalPasswordRecoveryErrorMessageComponent\n} from './po-modal-password-recovery-error-message/po-modal-password-recovery-error-message.component';\nimport { PoModalPasswordRecoveryService } from './po-modal-password-recovery.service';\n\n/**\n * @description\n *\n * MÃ³dulo do template do po-modal-password-recovery.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n\n    PoFieldModule,\n    PoModalModule\n  ],\n  declarations: [\n    PoModalPasswordRecoveryComponent,\n    PoModalPasswordRecoveryErrorMessageComponent\n  ],\n  exports: [\n    PoModalPasswordRecoveryComponent,\n    PoModalPasswordRecoveryErrorMessageComponent\n  ],\n  providers: [PoI18nPipe, PoModalPasswordRecoveryService]\n})\nexport class PoModalPasswordRecoveryModule { }\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nimport { browserLanguage, convertToBoolean, isTypeof } from './../../utils/util';\nimport { PoSelectOption } from '@portinari/portinari-ui';\n\n@Component({\n  selector: 'po-page-background',\n  templateUrl: './po-page-background.component.html'\n})\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente para definiÃ§Ã£o de cor de fundo e dos logotipos primÃ¡rio e secundÃ¡rio para os templates\n * de `po-page-login` e demais templates de login.\n */\nexport class PoPageBackgroundComponent implements OnInit {\n\n  private _logo?: string;\n  private _secondaryLogo?: string;\n  private _showSelectLanguage?: boolean = false;\n\n  selectedLanguageOption: string;\n\n  selectLanguageOptions: Array<PoSelectOption> = [\n    { label: 'English', value: 'en' },\n    { label: 'EspaÃ±ol', value: 'es' },\n    { label: 'PortuguÃªs', value: 'pt' },\n    { label: 'PÑÑÑÐºÐ¸Ð¹', value: 'ru' }\n  ];\n\n  /** Insere uma imagem de destaque ao lado direito do container. */\n  @Input('p-background') background?: string;\n\n  /** Designa se o logotipo deve desaparecer em resoluÃ§Ãµes menores. */\n  @Input('p-hide-logo') hideLogo?: boolean;\n\n  /** Texto de destaque sobreposto Ã  imagem de destaque. Essa opÃ§Ã£o Ã© utilizada em conjunto com o atributo `p-background`. */\n  @Input('p-highlight-info') highlightInfo?: string;\n\n  /** Caminho para a logomarca localizada na parte superior. */\n  @Input('p-logo') set logo(value: any) {\n    this._logo = isTypeof(value, 'string') && value.trim() ? value : undefined;\n  }\n\n  get logo() {\n    return this._logo;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caminho para a logomarca localizada no rodapÃ©.\n   */\n  @Input('p-secondary-logo') set secondaryLogo(value: any) {\n    this._secondaryLogo = isTypeof(value, 'string') && value.trim() ? value : undefined;\n  }\n\n  get secondaryLogo() {\n    return this._secondaryLogo;\n  }\n\n  /** Define se o seletor de idiomas deve ser exibido. */\n  @Input('p-show-select-language') set showSelectLanguage(showSelectLanguage: boolean) {\n    this._showSelectLanguage = convertToBoolean(showSelectLanguage);\n  }\n  get showSelectLanguage() {\n    return this._showSelectLanguage;\n  }\n\n  /**\n   * Evento disparado ao selecionar alguma opÃ§Ã£o no seletor de idiomas.\n   * Para este evento serÃ¡ passado como parÃ¢metro o valor de idioma selecionado.\n   */\n  @Output('p-selected-language') selectedLanguage?: EventEmitter<any> = new EventEmitter<any>();\n\n  ngOnInit() {\n    this.selectedLanguageOption = browserLanguage();\n  }\n\n  onChangeLanguage() {\n    this.selectedLanguage.emit(this.selectedLanguageOption);\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoDividerModule, PoFieldModule } from '@portinari/portinari-ui';\n\nimport { PoPageBackgroundComponent } from './po-page-background.component';\n\n/**\n * @description\n *\n * MÃ³dulo do template do po-page-background.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    PoDividerModule,\n    PoFieldModule,\n  ],\n  declarations: [\n    PoPageBackgroundComponent\n  ],\n  exports: [\n    PoPageBackgroundComponent\n  ]\n})\nexport class PoPageBackgroundModule { }\n","/**\n * @usedBy PoPageBlockedUserComponent\n *\n * @description\n *\n * *Enum* para os tipos de motivo de bloqueio de usuÃ¡rio. As informaÃ§Ãµes modificam conforme o motivo selecionado pelo desenvolvedor.\n */\nexport enum PoPageBlockedUserReason {\n\n  /** Sem definiÃ§Ã£o; a tela exibirÃ¡ conteÃºdo de bloqueio genÃ©rico. */\n  None = 'none',\n\n  /** DefiniÃ§Ã£o para tentativas de acesso esgotadas. */\n  ExceededAttempts = 'exceededAttempts',\n\n  /** DefiniÃ§Ã£o para senha expirada. */\n  ExpiredPassword = 'expiredPassword',\n\n}\n","import { Input, OnInit } from '@angular/core';\n\nimport { PoPageBlockedUserReason } from './enums/po-page-blocked-user-reason.enum';\nimport { PoPageBlockedUserReasonParams } from './interfaces/po-page-blocked-user-reason-params.interface';\n\nconst PoPageBlockedUserReasonDefault: PoPageBlockedUserReason = PoPageBlockedUserReason.None;\nconst PoPageBlockedUserParamsDefault: PoPageBlockedUserReasonParams = { attempts: 5, days: 90, hours: 24 };\n\n/**\n * @description\n *\n * O componente `po-page-blocked-user` Ã© utilizado como template para tela de bloqueio de usuÃ¡rio.\n * Ã possÃ­vel definir entre trÃªs tipos de telas para alertar o usuÃ¡rio sobre um eventual bloqueio de login.\n *\n * Cada modelo de bloqueio possui uma imagem e texto adequados Ã  situaÃ§Ã£o.\n * Os textos das telas sÃ£o prÃ©-definidos e imutÃ¡veis, porÃ©m,\n * Ã© possÃ­vel estipular parÃ¢metros como dias, horas e tentativas de acesso esgotadas.\n *\n * Por fim, hÃ¡ propriedades para adiÃ§Ã£o de telefone e/ou email para contato e tambÃ©m a definiÃ§Ã£o para a url de retorno.\n *\n * Para que as imagens sejam exibidas corretamente, Ã© necessÃ¡rio incluir o caminho delas ao projeto. Para isso, edite\n * o *assets* no arquivo **angular.json** da aplicaÃ§Ã£o na seguinte ordem:\n * ```\n *   \"assets\": [\n *     \"src/assets\",\n *     \"src/favicon.ico\",\n *     {\n *       \"glob\": \"**\\/*\",\n *       \"input\": \"node_modules/@portinari/style/images\",\n *       \"output\": \"assets/images\"\n *     }\n *   ]\n * ```\n *\n * _______________\n *\n * #### Praticidade\n * O `po-page-blocked-user`, assim como suas propriedades, pode tambÃ©m ser transmitido diretamente pelas configuraÃ§Ã£os de rota e,\n * desta maneira, dispensa-se qualquer menÃ§Ã£o e/ou importaÃ§Ã£o no restante da aplicaÃ§Ã£o. O exemplo abaixo exemplifica\n * a forma dinÃ¢mica com a qual o template pode ser gerado se navegasse para uma rota denominada como `/access-denied`:\n *\n *\n * ```\n *   import { PoPageBlockedUserComponent, PoPageBlockedUserReason } from '@portinari/portinari-templates';\n *\n *   ...\n *   const routes: Routes = [\n *     {\n *       path: 'access-denied', component: PoPageBlockedUserComponent, data: {\n *         contactEmail: 'dev.portinari@portinari.com',\n *         contactPhone: '0800 1234 000',\n *         reason: PoPageBlockedUserReason.ExpiredPassword,\n *         urlBack: '/home'\n *       }\n *     }\n *     ...\n *   ];\n *\n *   @NgModule({\n *     imports: [RouterModule.forRoot(routes)],\n *     exports: [RouterModule]\n *   })\n *   export class AppRoutingModule { }\n * ```\n *\n * > Ã essencial que siga a nomenclatura dos atributos exemplificados acima para sua efetiva funcionalidade.\n *\n */\nexport class PoPageBlockedUserBaseComponent {\n\n  private _params: PoPageBlockedUserReasonParams = {...PoPageBlockedUserParamsDefault};\n  private _reason: PoPageBlockedUserReason = PoPageBlockedUserReason.None;\n  private _urlBack: string = '/';\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Valor para o email de contato que deve ser exibido. A aÃ§Ã£o estÃ¡ de acordo com o protocolo MAILTO e Ã© possÃ­vel definir\n   * tanto rotas internas quanto externas.\n   */\n  @Input('p-contact-email') contactEmail: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Valor para o telefone de contato que deve ser exibido. A aÃ§Ã£o estÃ¡ de acordo com o protocolo TEL.\n   *\n   * > A propriedade nÃ£o contem tratamento de mÃ¡scara, fica a critÃ©rio do desenvolvedor defini-la.\n   */\n  @Input('p-contact-phone') contactPhone: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * DesignaÃ§Ã£o de valores usados para a customizaÃ§Ã£o da mensagem de bloqueio.\n   * Confira abaixo os valores prÃ©-definidos.\n   *\n   * ```\n   *  const customLiterals: PoPageBlockedUserReasonParams = {\n   *    attempts: 5,\n   *    days: 90,\n   *    hours: 24\n   *  };\n   * ```\n   *\n   * > Salientamos a importÃ¢ncia e atenÃ§Ã£o para configuraÃ§Ã£o desses valores conforme definidos no projeto.\n   *\n   * > Veja os parÃ¢metros customizÃ¡veis na interface `PoPageBlockedUserReasonParams`.\n   *\n   */\n  @Input('p-params') set params(value: PoPageBlockedUserReasonParams) {\n    if (value instanceof Object) {\n      const keys = Object.keys(value);\n      const newParams = {...PoPageBlockedUserParamsDefault};\n\n      keys.forEach(key => {\n        newParams[key] = value[key];\n      });\n\n      this._params = newParams;\n    } else {\n      this._params = {...PoPageBlockedUserParamsDefault};\n    }\n  }\n\n  get params() {\n    return this._params;\n  }\n\n  /** Caminho para a logomarca localizada na parte superior, caso nÃ£o seja definida ou seja invÃ¡lida assume a logo padrÃ£o da PORTINARI. */\n  @Input('p-logo') logo?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * DefiniÃ§Ã£o de motivo de bloqueio de usuÃ¡rio. As informaÃ§Ãµes modificam conforme o motivo selecionado.\n   *\n   * > Veja os valores vÃ¡lidos no *enum* `PoPageBlockedUserReason`.\n   *\n   * @default `PoPageBlockedUserReason.None`\n   */\n  @Input('p-reason') set reason(value: PoPageBlockedUserReason) {\n    this._reason = (<any>Object).values(PoPageBlockedUserReason).includes(value) ? value : PoPageBlockedUserReasonDefault;\n  }\n\n  get reason() {\n    return this._reason;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caminho para a logomarca localizada no rodapÃ©.\n   */\n  @Input('p-secondary-logo') secondaryLogo?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * URL para a aÃ§Ã£o de retorno da pÃ¡gina.\n   *\n   * @default `/`\n   */\n  @Input('p-url-back') set urlBack(url: string) {\n    this._urlBack = url;\n  }\n\n  get urlBack() {\n    return this._urlBack;\n  }\n\n}\n","import { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\nimport { browserLanguage, isExternalLink, poLocaleDefault } from '../../utils/util';\n\nimport { PoPageBlockedUserBaseComponent } from './po-page-blocked-user-base.component';\n\nexport const poPageBlockedUserButtonLiterals: Object = {\n  en: <any> {\n    primaryButton: 'Back to home screen',\n  },\n  es: <any> {\n    primaryButton: 'Volver al inicio',\n  },\n  pt: <any> {\n    primaryButton: 'Voltar para o inÃ­cio',\n  },\n  ru: <any> {\n    primaryButton: 'ÐÐµÑÐµÐ¹ÑÐ¸ Ðº Ð½Ð°ÑÐ°Ð»Ñ ÑÑÑÐ°Ð½Ð¸ÑÑ',\n  }\n};\n\n/**\n * @docsExtends PoPageBlockedUserBaseComponent\n *\n * @example\n *\n * <example name=\"po-page-blocked-user-basic\" title=\"Portinari Page Blocked User Basic\">\n *  <file name=\"sample-po-page-blocked-user-basic/sample-po-page-blocked-user-basic.component.html\"> </file>\n *  <file name=\"sample-po-page-blocked-user-basic/sample-po-page-blocked-user-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-blocked-user-labs\" title=\"Portinari Page Blocked User Labs\">\n *  <file name=\"sample-po-page-blocked-user-labs/sample-po-page-blocked-user-labs.component.html\"> </file>\n *  <file name=\"sample-po-page-blocked-user-labs/sample-po-page-blocked-user-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-blocked-user-exceeded-attempts\" title=\"Portinari Page Blocked User Exceeded Attempts\">\n *  <file name=\"sample-po-page-blocked-user-exceeded-attempts/sample-po-page-blocked-user-exceeded-attempts.component.html\"> </file>\n *  <file name=\"sample-po-page-blocked-user-exceeded-attempts/sample-po-page-blocked-user-exceeded-attempts.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-blocked-user-expired-password\" title=\"Portinari Page Blocked User Expired Password\">\n *  <file name=\"sample-po-page-blocked-user-expired-password/sample-po-page-blocked-user-expired-password.component.html\"> </file>\n *  <file name=\"sample-po-page-blocked-user-expired-password/sample-po-page-blocked-user-expired-password.component.ts\"> </file>\n * </example>\n */\n\n@Component({\n  selector: 'po-page-blocked-user',\n  templateUrl: './po-page-blocked-user.component.html'\n})\n\nexport class PoPageBlockedUserComponent extends PoPageBlockedUserBaseComponent implements OnInit {\n\n  literals = {\n    ...poPageBlockedUserButtonLiterals[poLocaleDefault],\n    ...poPageBlockedUserButtonLiterals[browserLanguage()],\n  };\n\n  constructor(private activatedRoute: ActivatedRoute, private router: Router) {\n    super();\n  }\n\n  ngOnInit() {\n    this.checkingForRouteMetadata(this.activatedRoute.snapshot.data);\n  }\n\n  navigateTo(url: string) {\n    isExternalLink(url) ?  window.open(url) : this.router.navigate([url || '/']);\n  }\n\n  private checkingForMetadataProperty(object, property) {\n    if (Object.prototype.hasOwnProperty.call(object, property)) {\n      return object[property];\n    }\n  }\n\n  private checkingForRouteMetadata(data) {\n    if (Object.keys(data).length !== 0) {\n      this.contactEmail = this.checkingForMetadataProperty(data, 'contactEmail') || this.contactEmail;\n      this.contactPhone = this.checkingForMetadataProperty(data, 'contactPhone') || this.contactPhone;\n      this.reason = this.checkingForMetadataProperty(data, 'reason') || this.reason;\n      this.urlBack = this.checkingForMetadataProperty(data, 'urlBack') || this.urlBack;\n    }\n  }\n\n}\n","import { AfterViewInit, ChangeDetectorRef, Component, ElementRef, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\n\nconst poPageBlockedUserContactItemMargin = 16;\n\n@Component({\n  selector: 'po-page-blocked-user-contacts',\n  templateUrl: './po-page-blocked-user-contacts.component.html'\n})\nexport class PoPageBlockedUserContactsComponent implements AfterViewInit, OnChanges {\n\n  literals: Object;\n  overflowItem: boolean = false;\n\n  private mailText: string;\n  private phoneText: string;\n\n  @Input('p-email') email: string;\n\n  @Input('p-phone') phone: string;\n\n  @ViewChild('contactGroup', { static: true }) contactGroup: ElementRef;\n\n  @ViewChild('mailItem', { static: true }) mailItem: ElementRef;\n\n  @ViewChild('phoneItem', { static: true }) phoneItem: ElementRef;\n\n  constructor(private changeDetector: ChangeDetectorRef) {}\n\n  ngAfterViewInit() {\n    this.checkContactItemWidth();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.email || changes.phone) {\n      this.checkContactItemWidth();\n    }\n  }\n\n  private checkContactItemWidth() {\n    if ( !this.email || !this.phone ) {\n      this.overflowItem = true;\n      return;\n    } else {\n      setTimeout(() => {\n        const phoneWidth = this.phoneItem.nativeElement.offsetWidth;\n        const mailWidth = this.mailItem.nativeElement.offsetWidth;\n        const contactGroupHalfWidth = this.contactGroup.nativeElement.offsetWidth / 2;\n\n        this.overflowItem = phoneWidth > contactGroupHalfWidth || mailWidth > contactGroupHalfWidth - poPageBlockedUserContactItemMargin;\n      });\n    }\n    this.changeDetector.detectChanges();\n  }\n\n}\n","export const poPageBlockedUserLiterals = {\n  none: {\n    pt: {\n      title: 'Opa!',\n      firstPhrase: 'Tivemos que bloquear essa tela temporariamente.',\n      secondPhrase: 'Mas nÃ£o se preocupe! Basta fazer seu login novamente.'\n    },\n    en: {\n      title: 'Oops!',\n      firstPhrase: 'We had to temporarily block this screen.',\n      secondPhrase: 'But do not worry! Just sign in again.'\n    },\n    es: {\n      title: 'Opa!',\n      firstPhrase: 'Tuvimos que bloquear esta pantalla temporalmente.',\n      secondPhrase: 'Â¡Pero no se preocupe! SÃ³lo tienes que iniciar sesiÃ³n de nuevo.'\n    },\n  },\n  exceededAttempts: {\n    pt: {\n      title:\n        'Opa!',\n      firstPhrase:\n        `Para sua seguranÃ§a, apÃ³s {0} tentativa(s) de senha seu usuÃ¡rio fica bloqueado e nÃ£o pode ser acessado em {1} hora(s) :( `,\n      secondPhrase:\n        'Isso Ã© para evitar que hackers invadam sua conta.',\n      thirdPhrase:\n        'Mas nÃ£o se preocupe! Se vocÃª for o dono da conta e apenas esqueceu sua senha, basta entrar em contato com o suporte.'\n    },\n    en: {\n      title:\n        'Oops!',\n      firstPhrase:\n        `For your security, after {0} attempt(s) of password\n        your user gets blocked and can not be accessed in {1} hour(s) :(`,\n      secondPhrase:\n        'This is to prevent hackers from hacking into your account.',\n      thirdPhrase:\n        'But do not worry! If you are the owner of the account and just forgot your password, just contact support.'\n    },\n    es: {\n      title:\n        'Opa!',\n      firstPhrase:\n        `Para su seguridad, despuÃ©s de {0} intento(s) de contraseÃ±a\n        su usuario queda bloqueado y no puede ser accedido en {1} hora(s) :(`,\n      secondPhrase:\n        'Esto es para evitar que los hackers invadan su cuenta.',\n      thirdPhrase:\n        `Â¡Pero no se preocupe! Si usted es el dueÃ±o de la cuenta\n        y acaba de olvidar su contraseÃ±a, simplemente pÃ³ngase en contacto con el soporte.`\n    }\n  },\n  expiredPassword: {\n    pt: {\n      title:\n        'Opa! Sua senha expirou',\n      firstPhrase:\n        `A cada {0} dia(s) Ã© preciso criar uma nova senha por questÃ£o de seguranÃ§a. ApÃ³s esses {0} dia(s) seu acesso Ã© bloqueado :(`,\n      secondPhrase:\n        'Mas nÃ£o se preocupe! Basta entrar em contato com o administrador do sistema.'\n    },\n    en: {\n      title:\n        'Oops! Your Password has expired',\n      firstPhrase:\n        `Every {0} day(s) you need to create a new password for security reasons.\n        After these {0} day(s) your access is blocked :(`,\n      secondPhrase:\n        'But do not worry! Just contact your system administrator.'\n    },\n    es: {\n      title:\n        'Opa! Su contraseÃ±a ha caducado',\n      firstPhrase:\n        `Cada {0} dÃ­a(s) es necesario crear una nueva contraseÃ±a por razones de seguridad.\n        DespuÃ©s de estos {0} dÃ­a(s) su acceso estÃ¡ bloqueado :(`,\n      secondPhrase:\n        'Â¡Pero no se preocupe! SÃ³lo tienes que ponerse en contacto con el administrador del sistema.'\n    }\n  }\n};\n","import { ChangeDetectorRef, Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\n\nimport { browserLanguage, poLocaleDefault } from '../../../utils/util';\n\nimport { poPageBlockedUserLiterals } from './../literals/i18n/po-page-blocked-user-literals';\nimport { PoPageBlockedUserReason } from '../enums/po-page-blocked-user-reason.enum';\nimport { PoPageBlockedUserReasonParams } from '../interfaces/po-page-blocked-user-reason-params.interface';\n\n@Component({\n  selector: 'po-page-blocked-user-reason',\n  templateUrl: './po-page-blocked-user-reason.component.html'\n})\nexport class PoPageBlockedUserReasonComponent implements OnChanges, OnInit {\n\n  literalParams;\n  literals: {title: string, firstPhrase: string, secondPhrase: string, thirdPhrase: string};\n\n  @Input('p-params') params: PoPageBlockedUserReasonParams;\n\n  @Input('p-reason') reason: PoPageBlockedUserReason;\n\n  constructor(private changeDetector: ChangeDetectorRef) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.reason || changes.params) {\n      this.getLiterals();\n    }\n  }\n\n  ngOnInit() {\n    this.getLiterals();\n  }\n\n  getImageByReasonType() {\n    let reasonImage;\n\n    switch (this.reason) {\n      case 'none': {\n        reasonImage = 'big-lock';\n        break;\n      }\n      case 'exceededAttempts': {\n        reasonImage = 'blocked-user';\n        break;\n      }\n      case 'expiredPassword': {\n        reasonImage = 'expired';\n        break;\n      }\n    }\n    return `./assets/images/${reasonImage}.svg`;\n  }\n\n  getParams() {\n    this.literalParams =\n      this.reason === 'expiredPassword' ? [this.params.days, this.params.days] : [this.params.attempts, this.params.hours];\n  }\n\n  private getLiterals() {\n    this.getParams();\n\n    this.literals = {\n      ...poPageBlockedUserLiterals[this.reason][poLocaleDefault],\n      ...poPageBlockedUserLiterals[this.reason][browserLanguage()],\n    };\n\n    this.changeDetector.detectChanges();\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoModule } from '@portinari/portinari-ui';\n\nimport { PoPageBackgroundModule } from '../po-page-background/index';\nimport { PoPageBlockedUserComponent } from './po-page-blocked-user.component';\nimport { PoPageBlockedUserContactsComponent } from './po-page-blocked-user-contacts/po-page-blocked-user-contacts.component';\nimport { PoPageBlockedUserReasonComponent } from './po-page-blocked-user-reason/po-page-blocked-user-reason.component';\n\n/**\n * @description\n *\n * MÃ³dulo do template do po-page-blocked-user.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n\n    PoModule,\n    PoPageBackgroundModule,\n  ],\n  declarations: [\n    PoPageBlockedUserComponent,\n    PoPageBlockedUserContactsComponent,\n    PoPageBlockedUserReasonComponent,\n  ],\n  exports: [\n    PoPageBlockedUserComponent,\n    PoPageBlockedUserContactsComponent,\n    PoPageBlockedUserReasonComponent,\n  ]\n})\nexport class PoPageBlockedUserModule { }\n","import { EventEmitter, Input, Output } from '@angular/core';\n\nimport { PoModalAction } from '@portinari/portinari-ui';\n\nimport { convertToBoolean, isExternalLink, isTypeof } from '../../utils/util';\n\nimport { PoPageChangePasswordRecovery } from './interfaces/po-page-change-password-recovery.interface';\nimport { PoPageChangePasswordRequirement } from './interfaces/po-page-change-password-requirement.interface';\n\n/**\n * @description\n *\n * O componente `po-page-change-password` Ã© utilizado como template para tela de cadastro ou alteraÃ§Ã£o de senha.\n *\n * Apresenta dicas e regras para senhas mais seguras e tambÃ©m possibilidade de personalizar o redirecionamento para as telas\n * 'esqueceu a senha', 'voltar' e 'entrar no sistema'. Os textos das telas sÃ£o prÃ©-definidos e imutÃ¡veis.\n *\n * A propriedade `p-url-new-password` automatiza a rotina do template e simplifica o processo de cadastro/alteraÃ§Ã£o de senha, bastando\n * definir uma url para POST das informaÃ§Ãµes digitadas pelo usuÃ¡rio.  A flexibilidade e praticidade podem chegar a um nÃ­vel em que o\n * desenvolvimento da aplicaÃ§Ã£o no *client side* Ã© desprovida de qualquer cÃ³digo-fonte relacionado Ã  rotina de cadastro/alteraÃ§Ã£o de senha.\n * Seu detalhamento para uso pode ser visto logo abaixo em *propriedades*.\n * Caso julgue necessÃ¡rio, pode-se tambÃ©m definir manualmente a rotina do componente.\n *\n * Para que as imagens sejam exibidas corretamente, Ã© necessÃ¡rio incluir o caminho delas ao projeto. Para isso, edite\n * o *assets* no arquivo **angular.json** da aplicaÃ§Ã£o na seguinte ordem:\n * ```\n *   \"assets\": [\n *     \"src/assets\",\n *     \"src/favicon.ico\",\n *     {\n *       \"glob\": \"**\\/*\",\n *       \"input\": \"node_modules/@portinari/style/images\",\n *       \"output\": \"assets/images\"\n *     }\n *   ]\n * ```\n */\nexport abstract class PoPageChangePasswordBaseComponent {\n\n  private _hideCurrentPassword: boolean = false;\n  private _recovery: string | PoPageChangePasswordRecovery | Function;\n  private _requirements: Array<PoPageChangePasswordRequirement> = [];\n  private _urlHome: string = '/';\n  protected validatorChange: any;\n\n  confirmPassword: string;\n  currentPassword: string;\n  modalAction: PoModalAction;\n  newPassword: string;\n  recoveryUrlType: string;\n  showRequirements: boolean;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Esconde o campo `Senha atual` para que o template seja para criaÃ§Ã£o de senha.\n   *\n   * @default `false`\n   */\n  @Input('p-hide-current-password') set hideCurrentPassword(value: boolean) {\n    this._hideCurrentPassword = convertToBoolean(value);\n  }\n\n  get hideCurrentPassword(): boolean {\n    return this._hideCurrentPassword;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caminho para a logomarca localizada na parte superior.\n   *\n   * > Caso seja indefinida o espaÃ§o se mantÃ©m preservado porÃ©m vazio.\n   */\n  @Input('p-logo') logo?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * URL para a aÃ§Ã£o do link `Esqueceu a senha`.\n   *\n   * A propriedade aceita os seguintes tipos:\n   *\n   * - **String**: informe uma url externa ou uma rota vÃ¡lida;\n   * - **Function**: pode-se customizar a aÃ§Ã£o. Para esta possilidade basta atribuir:\n   * ```\n   * <po-page-change-password>\n   *      [recovery]=\"this.myFunc.bind(this)\";\n   * </po-page-change-password>\n   * ```\n   *\n   * - **PoPageChangePasswordRecovery**: cria-se vÃ­nculo automÃ¡tico com o template **po-modal-password-recovery**.\n   *   O objeto deve conter a **url** para requisiÃ§Ã£o dos recursos e pode-se definir o **tipo** de modal para recuperaÃ§Ã£o de senha,\n   *   **email** para contato e **mÃ¡scara** do campo de telefone.\n   *\n   * > Caso nÃ£o tenha valor o link `Esqueceu a senha` desaparece.\n   */\n  @Input('p-recovery') set recovery(value: string | Function | PoPageChangePasswordRecovery) {\n    this._recovery = value;\n\n    if (isTypeof(value, 'string')) {\n      this.recoveryUrlType = isExternalLink(value) ? 'externalLink' : 'internalLink';\n    }\n  }\n\n  get recovery() {\n    return this._recovery;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Lista de regras para criaÃ§Ã£o e alteraÃ§Ã£o de senha.\n   */\n  @Input('p-requirements') set requirements(value: Array<PoPageChangePasswordRequirement>) {\n    this._requirements = value || [];\n    this.showRequirements = this._requirements.length > 0;\n  }\n  get requirements() {\n    return this._requirements;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caminho para a logomarca localizada no rodapÃ©.\n   */\n  @Input('p-secondary-logo') secondaryLogo?: string;\n\n  /**\n   * Token para solicitaÃ§Ã£o de troca/recuperaÃ§Ã£o de senha.\n   *\n   * > Esta propriedade serÃ¡ ignorada caso exista um token como parÃ¢metro na URL inicial do template.\n   */\n  @Input('p-token') token?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * URL para a aÃ§Ã£o de retorno da pÃ¡gina.\n   *\n   * > O botÃ£o `Voltar` aparece apenas para telas de alteraÃ§Ã£o de senha, ou seja, sÃ³ aparece se a propriedade `p-hide-current-password` for\n   * falsa.\n   *\n   * @default `/`\n   */\n  @Input('p-url-back') urlBack: string = '/';\n\n  /**\n   * Endpoint usado pelo template para realizar um POST. Quando preenchido, o mÃ©todo `p-submit` serÃ¡ ignorado e o componente adquirirÃ¡\n   * automatizaÃ§Ã£o para o processo de cadastro/troca de senha.\n   *\n   * ### Processo\n   * Ao digitar um valor vÃ¡lido nos campos de senha e pressionar **salvar**,\n   * o componente farÃ¡ uma requisiÃ§Ã£o `POST` na url especificada nesta propriedade passando o objeto contendo os valores definidos pelo\n   * usuÃ¡rio.\n   *\n   * ```\n   * body {\n   *  token?: token,\n   *  oldPassword?: oldPassword,\n   *  newPassword: newPassword\n   * }\n   * ```\n   *\n   * O cÃ³digo de resposta HTTP de status esperado Ã© `204`.\n   *\n   * Em caso de **sucesso**, serÃ¡ exibida a modal de confirmaÃ§Ã£o de senha alterada.\n   *\n   * > O token serÃ¡ informado pela propriedade `p-token`do componente ou por um *query parameter* na URL do template.\n   *\n   * *Processo finalizado.*\n   *\n   * _______________\n   *\n   * #### Praticidade\n   * As informaÃ§Ãµes do serviÃ§o de autenticaÃ§Ã£o tambÃ©m podem ser transmitidas diretamente pelas configuraÃ§Ã£os de rota e, desta maneira,\n   * dispensa-se qualquer menÃ§Ã£o e/ou importaÃ§Ã£o do componente `po-page-change-password` no restante da aplicaÃ§Ã£o. O exemplo abaixo\n   * exemplifica a forma dinÃ¢mica com a qual o template de tela de troca de senha pode ser gerado ao navegar para rota `/change-password`, e\n   * tambÃ©m como ele se comunica com o serviÃ§o para efetuaÃ§Ã£o do processo de troca de senha do usuÃ¡rio e solicitaÃ§Ã£o de nova senha.\n   * Basta definir nas configuraÃ§Ãµes de rota:\n   *\n   *\n   * ```\n   *   import { PoModalPasswordRecoveryType, PoPageChangePasswordComponent } from '@portinari/portinari-templates';\n   *\n   *   ...\n   *   const routes: Routes = [\n   *     {\n   *       path: 'change-password', component: PoPageChangePasswordComponent, data: {\n   *         serviceApi: 'https://portinari.io/sample/api/new-password',\n   *         recovery: {\n   *           url: 'https://portinari.io/sample/api/users',\n   *           type: PoModalPasswordRecoveryType.All,\n   *           contactMail: 'dev.portinari@portinari.com',\n   *           phoneMask: '9-999-999-9999'\n   *         }\n   *       }\n   *     }\n   *     ...\n   *   ];\n   *\n   *   @NgModule({\n   *     imports: [RouterModule.forRoot(routes)],\n   *     exports: [RouterModule]\n   *   })\n   *   export class AppRoutingModule { }\n   * ```\n   *\n   *\n   * O metadado `serviceApi` deve ser a **url** para requisiÃ§Ã£o dos recursos de troca de senha. E `recovery` Ã© a interface\n   * `PoPageChangePasswordRecovery` responsÃ¡vel pelas especificaÃ§Ãµes contidas na modal de recuperaÃ§Ã£o de senha.\n   *\n   * > Ã essencial que siga a nomenclatura dos atributos exemplificados acima para sua efetiva funcionalidade.\n   *\n   */\n  @Input('p-url-new-password') urlNewPassword?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * URL para a aÃ§Ã£o do botÃ£o `Entrar no sistema` da modal de confirmaÃ§Ã£o que aparece apÃ³s salvar a senha ou se chamada pelo mÃ©todo\n   * `openConfirmation`.\n   *\n   * @default `/`\n   */\n  @Input('p-url-home') set urlHome(value: string) {\n    this._urlHome = value;\n    this.modalAction.action = this.navigateTo.bind(this, this.urlHome);\n  }\n  get urlHome() {\n    return this._urlHome;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * FunÃ§Ã£o executada ao submeter o form pelo botÃ£o salvar.\n   *\n   * Caso definida essa funÃ§Ã£o, a modal de confirmaÃ§Ã£o nÃ£o aparece, mas pode ser chamada pelo\n   * mÃ©todo `openConfirmation`. Exemplo:\n   *\n   * ```\n   * @ViewChild(PoPageChangePasswordComponent) changePassword: PoPageChangePasswordComponent;\n   *\n   * onSubmit() {\n   *  this.changePassword.openConfirmation();\n   * }\n   *\n   * ```\n   * > Esta propriedade serÃ¡ ignorada se for definido valor para a propriedade `p-url-new-password`.\n   */\n  @Output('p-submit') submit: EventEmitter<any> = new EventEmitter();\n\n  abstract navigateTo(url: string): void;\n\n}\n","export const poPageChangePasswordLiterals = {\n  en: <any> {\n    backButton: 'Back',\n    confirmPassword: 'Confirm password',\n    createNewPassword: 'Create new password',\n    createNewPasswordPhrase: 'Protect your account with a personal password created by you',\n    currentPassword: 'Current password',\n    enterSystemButton: 'Enter the system',\n    forgotPassword: 'Forgot your password?',\n    newPassword: 'New password',\n    passwordSuccessfullyCreated: 'Password successfully created!',\n    passwordSuccessfullyUpdated: 'Password successfully updated!',\n    requirements: 'Password requirements',\n    safetyTips: 'Safety tips!',\n    safetyTipsFirst: 'is used in other accounts;',\n    safetyTipsPhrase: 'Avoid a password that:',\n    safetyTipsSecond: 'has personal information like your name, nickname or family names;',\n    safetyTipsThird: 'that uses obvious sequences like \"123\" or obvious words like \"password\";',\n    saveButton: 'Save',\n  },\n  es: <any> {\n    backButton: 'Volver',\n    confirmPassword: 'Confirmar seÃ±a',\n    createNewPassword: 'Crear nueva contraseÃ±a',\n    createNewPasswordPhrase: 'Proteger su cuenta con una contraseÃ±a personal creada por usted',\n    currentPassword: 'ContraseÃ±a actual',\n    enterSystemButton: 'Entrar en el sistema',\n    forgotPassword: 'Â¿Olvidaste tu contraseÃ±a?',\n    newPassword: 'Nueva contraseÃ±a',\n    passwordSuccessfullyCreated: 'ContraseÃ±a creada correctamente!',\n    passwordSuccessfullyUpdated: 'ContraseÃ±a correctamente actualizada!',\n    requirements: 'Requisitos de contraseÃ±a',\n    safetyTips: 'Consejos de seguridad!',\n    safetyTipsFirst: 'se utilice en otras cuentas;',\n    safetyTipsPhrase: 'Evite una contraseÃ±a que:',\n    safetyTipsSecond: 'utiliza informaciÃ³n personal como su nombre, apellido o nombre de familia;',\n    safetyTipsThird: 'utilice secuencias muy obvias como \"1234\" o \"abcd\" o palabras obvias como \"contraseÃ±a\";',\n    saveButton: 'Guardar',\n  },\n  pt: <any> {\n    backButton: 'Voltar',\n    confirmPassword: 'Confirmar senha',\n    createNewPassword: 'Criar nova senha',\n    createNewPasswordPhrase: 'Proteja sua conta com uma senha pessoal criada por vocÃª',\n    currentPassword: 'Senha atual',\n    enterSystemButton: 'Entrar no sistema',\n    forgotPassword: 'Esqueceu sua senha?',\n    newPassword: 'Nova senha',\n    passwordSuccessfullyCreated: 'Senha criada com sucesso!',\n    passwordSuccessfullyUpdated: 'Senha alterada com sucesso!',\n    requirements: 'Requisitos de senha',\n    safetyTips: 'Dicas de seguranÃ§a!',\n    safetyTipsFirst: 'seja usada em outras contas;',\n    safetyTipsPhrase: 'Evite uma senha que:',\n    safetyTipsSecond: 'usa informaÃ§Ãµes pessoais como seu nome, apelido ou nome de familiares;',\n    safetyTipsThird: 'use sequÃªncias muito Ã³bvias como \"1234\" ou \"abcd\" ou palavras Ã³bvias como âsenhaâ;',\n    saveButton: 'Salvar',\n  },\n  ru: <any> {\n    backButton: 'Ð²Ð¾Ð·Ð²ÑÐ°ÑÐµÐ½Ð¸Ðµ',\n    confirmPassword: 'ÐÐ¾Ð´ÑÐ²ÐµÑÐ´Ð¸ÑÐµ Ð¿Ð°ÑÐ¾Ð»Ñ',\n    createNewPassword: 'Ð¡Ð¾Ð·Ð´Ð°ÑÑ Ð½Ð¾Ð²ÑÐ¹ Ð¿Ð°ÑÐ¾Ð»Ñ',\n    createNewPasswordPhrase: 'ÐÐ°ÑÐ¸ÑÐ¸ÑÐµ ÑÐ²Ð¾Ð¹ Ð°ÐºÐºÐ°ÑÐ½Ñ Ñ Ð¿Ð¾Ð¼Ð¾ÑÑÑ Ð»Ð¸ÑÐ½Ð¾Ð³Ð¾ Ð¿Ð°ÑÐ¾Ð»Ñ.',\n    currentPassword: 'Ð¢ÐµÐºÑÑÐ¸Ð¹ Ð¿Ð°ÑÐ¾Ð»Ñ',\n    enterSystemButton: 'ÐÑÐ¾Ð´ Ð² ÑÐ¸ÑÑÐµÐ¼Ñ',\n    forgotPassword: 'ÐÐ°Ð±ÑÐ»Ð¸ Ð¿Ð°ÑÐ¾Ð»Ñ?',\n    newPassword: 'ÐÐ¾Ð²ÑÐ¹ Ð¿Ð°ÑÐ¾Ð»Ñ',\n    passwordSuccessfullyCreated: 'ÐÐ°ÑÐ¾Ð»Ñ ÑÑÐ¿ÐµÑÐ½Ð¾ ÑÐ¾Ð·Ð´Ð°Ð½!',\n    passwordSuccessfullyUpdated: 'ÐÐ°ÑÐ¾Ð»Ñ ÑÑÐ¿ÐµÑÐ½Ð¾ Ð¸Ð·Ð¼ÐµÐ½ÐµÐ½!',\n    requirements: 'Ð¢ÑÐµÐ±Ð¾Ð²Ð°Ð½Ð¸Ñ Ðº Ð¿Ð°ÑÐ¾Ð»Ñ',\n    safetyTips: 'Ð¡Ð¾Ð²ÐµÑÑ Ð¿Ð¾ Ð±ÐµÐ·Ð¾Ð¿Ð°ÑÐ½Ð¾ÑÑÐ¸!',\n    safetyTipsFirst: 'Ð¸ÑÐ¿Ð¾Ð»ÑÐ·Ð¾Ð²Ð°ÑÑÑÑ Ð½Ð° Ð´ÑÑÐ³Ð¸Ñ ÑÑÐµÑÐ°Ñ;',\n    safetyTipsPhrase: 'ÐÐ·Ð±ÐµÐ³Ð°Ð¹ÑÐµ Ð¿Ð°ÑÐ¾Ð»Ñ, ÐºÐ¾ÑÐ¾ÑÑÐ¹:',\n    safetyTipsSecond: 'Ð¸ÑÐ¿Ð¾Ð»ÑÐ·ÑÐµÑ Ð»Ð¸ÑÐ½ÑÑ Ð¸Ð½ÑÐ¾ÑÐ¼Ð°ÑÐ¸Ñ, ÑÐ°ÐºÑÑ ââÐºÐ°Ðº Ð²Ð°ÑÐµ Ð¸Ð¼Ñ, ÑÐ°Ð¼Ð¸Ð»Ð¸Ñ Ð¸Ð»Ð¸ ÑÐ°Ð¼Ð¸Ð»Ð¸Ñ;',\n    safetyTipsThird: 'Ð¸ÑÐ¿Ð¾Ð»ÑÐ·ÑÐ¹ÑÐµ Ð¾ÑÐµÐ½Ñ Ð¾ÑÐµÐ²Ð¸Ð´Ð½ÑÐµ ÑÑÑÐ¾ÐºÐ¸, ÑÐ°ÐºÐ¸Ðµ ÐºÐ°Ðº \"1234\" Ð¸Ð»Ð¸ \"abcd\", Ð¸Ð»Ð¸ ÑÐ°ÐºÐ¸Ðµ Ð¾ÑÐµÐ²Ð¸Ð´Ð½ÑÐµ ÑÐ»Ð¾Ð²Ð°, ÐºÐ°Ðº \"Ð¿Ð°ÑÐ¾Ð»Ñ\";',\n    saveButton: 'ÑÐºÐ¾Ð½Ð¾Ð¼Ð¸ÑÑ',\n  }\n};\n","import { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { HttpClient, HttpResponse } from '@angular/common/http';\n\n@Injectable()\nexport class PoPageChangePasswordService {\n\n  constructor(private http: HttpClient) {}\n\n  post(url: string, item: any): Observable<HttpResponse<Object>> {\n    return this.http.post<any>(url, item, { observe: 'response' });\n  }\n}\n","import { AfterViewInit, Component, ComponentRef, OnDestroy, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { Subscription } from 'rxjs';\n\nimport { PoComponentInjectorService, PoModalAction, PoModalComponent } from '@portinari/portinari-ui';\n\nimport { browserLanguage, isExternalLink, isTypeof, poLocaleDefault } from '../../utils/util';\n\nimport { PoModalPasswordRecoveryComponent } from '../po-modal-password-recovery/po-modal-password-recovery.component';\nimport { PoModalPasswordRecoveryType } from '../po-modal-password-recovery/enums/po-modal-password-recovery-type.enum';\nimport { PoPageChangePassword } from './interfaces/po-page-change-password.interface';\nimport { PoPageChangePasswordBaseComponent } from './po-page-change-password-base.component';\nimport { poPageChangePasswordLiterals } from './literals/i18n/po-page-change-password-literals';\nimport { PoPageChangePasswordRecovery } from './interfaces/po-page-change-password-recovery.interface';\nimport { PoPageChangePasswordRequirement } from './interfaces/po-page-change-password-requirement.interface';\nimport { PoPageChangePasswordService } from './po-page-change-password.service';\n\n/**\n * @docsExtends PoPageChangePasswordBaseComponent\n *\n * @example\n *\n * <example name=\"po-page-change-password-basic\" title=\"Portinari Page Change Password Basic\">\n *  <file name=\"sample-po-page-change-password-basic/sample-po-page-change-password-basic.component.html\"> </file>\n *  <file name=\"sample-po-page-change-password-basic/sample-po-page-change-password-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-change-password-labs\" title=\"Portinari Page Change Password Labs\">\n *  <file name=\"sample-po-page-change-password-labs/sample-po-page-change-password-labs.component.html\"> </file>\n *  <file name=\"sample-po-page-change-password-labs/sample-po-page-change-password-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-change-password-modify\" title=\"Portinari Page Change Password Modify\">\n *  <file name=\"sample-po-page-change-password-modify/sample-po-page-change-password-modify.component.html\"> </file>\n *  <file name=\"sample-po-page-change-password-modify/sample-po-page-change-password-modify.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-change-password-create\" title=\"Portinari Page Change Password Create\">\n *  <file name=\"sample-po-page-change-password-create/sample-po-page-change-password-create.component.html\"> </file>\n *  <file name=\"sample-po-page-change-password-create/sample-po-page-change-password-create.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-change-password-request\" title=\"Portinari Page Change Password Request\">\n *  <file name=\"sample-po-page-change-password-request/sample-po-page-change-password-request.component.html\"> </file>\n *  <file name=\"sample-po-page-change-password-request/sample-po-page-change-password-request.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-page-change-password',\n  templateUrl: './po-page-change-password.component.html'\n})\n\nexport class PoPageChangePasswordComponent extends PoPageChangePasswordBaseComponent implements AfterViewInit, OnDestroy, OnInit {\n\n  private newPasswordSubscription: Subscription;\n\n  readonly literals: { backButton: string, confirmPassword: string, createNewPassword: string, createNewPasswordPhrase: string,\n    currentPassword: string, enterSystemButton: string, forgotPassword: string, newPassword: string, passwordSuccessfullyCreated: string,\n    passwordSuccessfullyUpdated: string, requirements: string, safetyTips: string, safetyTipsPhrase: string, safetyTipsFirst: string,\n    safetyTipsSecond: string, safetyTipsThird: string, saveButton: string } =\n    {\n      ...poPageChangePasswordLiterals[poLocaleDefault],\n      ...poPageChangePasswordLiterals[browserLanguage()],\n    };\n\n  private componentRef: ComponentRef<any> = null;\n\n  modalAction: PoModalAction = {\n    action: this.navigateTo.bind(this, this.urlHome),\n    label: this.literals.enterSystemButton\n  };\n\n  parentRef: any;\n\n  @ViewChild(PoModalComponent, { static: true }) modal: PoModalComponent;\n  @ViewChild('pageChangePassword', { read: ViewContainerRef, static: true }) pageChangePassword: ViewContainerRef;\n  @ViewChild('passwordForm', { read: NgForm, static: true }) passwordForm: NgForm;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private route: ActivatedRoute,\n    private router: Router,\n    private service: PoPageChangePasswordService,\n    private poComponentInjector: PoComponentInjectorService,\n    viewRef: ViewContainerRef) {\n      super();\n      this.parentRef = viewRef['_view']['component'];\n  }\n\n  ngAfterViewInit() {\n    if (this.urlNewPassword) {\n      this.subscribeToTokenParameter();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.newPasswordSubscription) {\n      this.newPasswordSubscription.unsubscribe();\n    }\n  }\n\n  ngOnInit() {\n    this.checkingForRouteMetadata(this.activatedRoute.snapshot.data);\n  }\n\n  navigateTo(url: string) {\n    isExternalLink(url) ?  window.open(url) : this.router.navigate([url || '/']);\n  }\n\n  onForgotPasswordClick(recovery): void {\n    if (isTypeof(recovery, 'function')) {\n      recovery();\n    } else {\n      this.createModalPasswordRecoveryComponent(recovery);\n    }\n  }\n\n  onLoginSubmit(): void {\n\n    const form = this.getLoginForm();\n\n    if (this.urlNewPassword) {\n      this.postUrlNewPassword(form);\n    } else if (this.submit && this.submit.observers.length) {\n      this.emitSubmit(form);\n    }\n  }\n\n  /**\n   * Abre uma modal de confirmaÃ§Ã£o com texto, imagem e botÃ£o que redireciona para o link definido na propriedade `p-url-home`\u001c\n   */\n  openConfirmation() {\n    this.modal.open();\n  }\n\n  validatePassword() {\n    const controls =  this.passwordForm.form.controls;\n    const controlConfirmPassword = controls['confirmPassword'];\n    const controlNewPassword = controls['newPassword'];\n\n    if (!this.newPassword) {\n      this.setFormErrors({'required': true}, [controlNewPassword]);\n    } else if (!this.confirmPassword) {\n      this.setFormErrors({'required': true}, [controlConfirmPassword]);\n    } else if (this.newPassword && this.confirmPassword && this.newPassword !== this.confirmPassword) {\n      this.setFormErrors({'equalPassword': true}, [controlNewPassword, controlConfirmPassword]);\n    }  else {\n      this.setFormErrors(null, [controlConfirmPassword, controlNewPassword]);\n    }\n\n    if (this.requirements.length && this.requirements.find(requirement =>  this.validateRequirement(requirement) === false)) {\n      this.setFormErrors({'requirement': true}, [controlNewPassword]);\n    }\n  }\n\n  validateRequirement(requirement: PoPageChangePasswordRequirement) {\n    return typeof requirement.status === 'function' ? requirement.status.call(this.parentRef, this.newPassword) : requirement.status;\n  }\n\n  private checkingForMetadataProperty(object, property) {\n    if (Object.prototype.hasOwnProperty.call(object, property)) {\n      return object[property];\n    }\n  }\n\n  private checkingForRouteMetadata(data) {\n    if (Object.keys(data).length !== 0) {\n      this.urlNewPassword = this.checkingForMetadataProperty(data, 'serviceApi') || this.urlNewPassword;\n      this.recovery = this.checkingForMetadataProperty(data, 'recovery') || this.recovery;\n      this.hideCurrentPassword = this.checkingForMetadataProperty(data, 'hideCurrentPassword') || this.hideCurrentPassword;\n    }\n  }\n\n  private createModalPasswordRecoveryComponent(recovery: PoPageChangePasswordRecovery) {\n    if (this.componentRef) {\n      this.poComponentInjector.destroyComponentInApplication(this.componentRef);\n    }\n\n    this.componentRef = this.poComponentInjector.createComponentInApplication(PoModalPasswordRecoveryComponent);\n    this.componentRef.instance.recovery = recovery.url;\n    this.componentRef.instance.contactEmail = recovery.contactMail;\n    this.componentRef.instance.phoneMask = recovery.phoneMask;\n    this.componentRef.instance.type = recovery.type || PoModalPasswordRecoveryType.Email;\n    this.componentRef.changeDetectorRef.detectChanges();\n    setTimeout(() => {\n      this.componentRef.instance.open();\n    });\n  }\n\n  private emitSubmit(form: PoPageChangePassword) {\n    this.submit.emit(form);\n  }\n\n  private getLoginForm(): PoPageChangePassword {\n    return {\n      currentPassword: this.currentPassword,\n      newPassword: this.newPassword\n    };\n  }\n\n  private postUrlNewPassword(form: PoPageChangePassword) {\n\n    form['token'] = this.token;\n\n    this.service.post(this.urlNewPassword, form).subscribe(response => {\n      if (response.status === 204) {\n        this.openConfirmation();\n      }\n    });\n  }\n\n  private setFormErrors(error: any, controls?: Array<any>) {\n    controls.forEach(control => {\n      control.setErrors(error);\n    });\n  }\n\n  private subscribeToTokenParameter() {\n    this.route.queryParams.subscribe(params => {\n      const token = params['token'];\n\n      if (token) {\n        this.token = token;\n      }\n    });\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoModule } from '@portinari/portinari-ui';\n\nimport { PoModalPasswordRecoveryComponent } from '../po-modal-password-recovery/po-modal-password-recovery.component';\nimport { PoPageBackgroundModule } from '../po-page-background/index';\nimport { PoPageChangePasswordComponent } from './po-page-change-password.component';\nimport { PoPageChangePasswordService } from './po-page-change-password.service';\n\n/**\n * @description\n *\n * MÃ³dulo do template do po-page-change-password.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n\n    PoModule,\n    PoPageBackgroundModule\n  ],\n  declarations: [\n    PoPageChangePasswordComponent\n  ],\n  entryComponents: [\n    PoModalPasswordRecoveryComponent\n  ],\n  providers: [\n    PoPageChangePasswordService\n  ],\n  exports: [\n    PoPageChangePasswordComponent\n  ]\n})\nexport class PoPageChangePasswordModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PoPageDynamicService {\n\n  private endpoint = '/';\n  private metadata: string;\n\n  readonly headers: HttpHeaders = new HttpHeaders({\n    'X-PORTINARI-SCREEN-LOCK': 'true'\n  });\n\n  constructor(private http: HttpClient) { }\n\n  configServiceApi(config: { endpoint?: string, metadata?: string } = {}) {\n    this.endpoint = config.endpoint;\n    this.metadata = config.metadata || this.metadata;\n  }\n\n  getMetadata<T>(type: string = 'list'): Observable<T> {\n    const key = `${this.endpoint}-${type}-metadata`;\n    const cache = JSON.parse(localStorage.getItem(key)) || {};\n    const metadataUrlBase = this.metadata || `${this.endpoint}/metadata`;\n\n    const url = `${metadataUrlBase}?type=${type}&version=${cache.version || ''}`;\n\n    return this.http.get<T>(url).pipe(map((response: any) => {\n      if (response.version === cache.version) {\n        return cache;\n      }\n\n      localStorage.setItem(key, JSON.stringify(response));\n\n      return  { ...cache, ...response };\n    }));\n  }\n\n  // Deleta um Ãºnico recurso\n  deleteResource(id): Observable<any> {\n    return this.http.delete(`${this.endpoint}/${id}`, { headers: this.headers });\n  }\n\n  // Deleta recursos em lote\n  deleteResources(ids: Array<any>): Observable<any> {\n    return this.http.request('delete', `${this.endpoint}`, { headers: this.headers, body: ids } );\n  }\n\n  // Busca uma lista de recursos\n  getResources(params?: HttpParams): Observable<any> {\n    return this.http.get(this.endpoint, { headers: this.headers, params });\n  }\n\n  // Busca um Ãºnico recurso\n  getResource(id): Observable<any> {\n    return this.http.get(`${this.endpoint}/${id}`, { headers: this.headers });\n  }\n\n  // Cria um recurso\n  createResource(resource): Observable<any> {\n    return this.http.post(`${this.endpoint}`, resource, { headers: this.headers });\n  }\n\n  // Atualiza um recurso\n  updateResource(id, resource): Observable<any> {\n    return this.http.put(`${this.endpoint}/${id}`, resource, { headers: this.headers });\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Route, Router, ActivatedRoute } from '@angular/router';\n\nimport * as util from '../../utils/util';\n\nimport { PoBreadcrumb, PoPageAction, PoDialogService, PoDialogConfirmOptions, PoNotificationService } from '@portinari/portinari-ui';\n\nimport { PoPageDynamicDetailActions } from './po-page-dynamic-detail-actions.interface';\nimport { PoPageDynamicDetailField } from './po-page-dynamic-detail-field.interface';\nimport { PoPageDynamicService } from '../../services/po-page-dynamic/po-page-dynamic.service';\n\nexport const poPageDynamicDetailLiteralsDefault = {\n  en: {\n    pageActionEdit: 'Edit',\n    pageActionRemove: 'Delete',\n    pageActionBack: 'Back',\n    confirmRemoveTitle: 'Confirm delete',\n    confirmRemoveMessage: 'Are you sure you want to delete this record? You can not undo this action.',\n    removeNotificationSuccess: 'Item deleted successfully.',\n    registerNotFound: 'Register not found.'\n  },\n  es: {\n    pageActionEdit: 'Editar',\n    pageActionRemove: 'Borrar',\n    pageActionBack: 'Regreso',\n    confirmRemoveTitle: 'Confirmar la exclusiÃ³n',\n    confirmRemoveMessage: 'Â¿EstÃ¡ seguro de que desea eliminar este registro? No puede deshacer esta acciÃ³n.',\n    removeNotificationSuccess: 'Elemento eliminado con Ã©xito.',\n    registerNotFound: 'Registro no encontrado.'\n  },\n  pt: {\n    pageActionEdit: 'Editar',\n    pageActionRemove: 'Excluir',\n    pageActionBack: 'Voltar',\n    confirmRemoveTitle: 'Confirmar exclusÃ£o',\n    confirmRemoveMessage: 'Tem certeza de que deseja excluir esse registro? VocÃª nÃ£o poderÃ¡ desfazer essa aÃ§Ã£o.',\n    removeNotificationSuccess: 'Item excluÃ­do com sucesso.',\n    registerNotFound: 'Registro nÃ£o encontrado.'\n  }\n};\n\n/**\n * @description\n *\n * O `po-page-dynamic-detail` Ã© uma pÃ¡gina que serve para exibir registros em detalhes,\n * o mesmo tambÃ©m suporta metadados conforme especificado na documentaÃ§Ã£o.\n *\n * @example\n *\n * <example name=\"po-page-dynamic-detail-basic\" title=\"Portinari Page Dynamic Detail Basic\">\n *  <file name=\"sample-po-page-dynamic-detail-basic/sample-po-page-dynamic-detail-basic.component.html\"> </file>\n *  <file name=\"sample-po-page-dynamic-detail-basic/sample-po-page-dynamic-detail-basic.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-page-dynamic-detail',\n  templateUrl: './po-page-dynamic-detail.component.html',\n  providers: [ PoPageDynamicService ]\n})\nexport class PoPageDynamicDetailComponent implements OnInit {\n\n  private _actions: PoPageDynamicDetailActions = {};\n  private _autoRouter: boolean = false;\n  private _duplicates: Array<any> = [];\n  private _fields: Array<any> = [];\n  private _keys: Array<any> = [];\n  private _pageActions: Array<PoPageAction> = [];\n\n  literals = {\n    ...poPageDynamicDetailLiteralsDefault[util.poLocaleDefault],\n    ...poPageDynamicDetailLiteralsDefault[util.browserLanguage()]\n  };\n  model: any = {};\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define as aÃ§Ãµes da pÃ¡gina de acordo com a interface `PoPageDynamicDetailActions`.\n   */\n  @Input('p-actions') set actions(value: PoPageDynamicDetailActions) {\n    this._actions = this.isObject(value) ? value : {};\n\n    this._pageActions = this.getPageActions(this._actions);\n  }\n\n  /**\n   * @todo Validar rotas na mÃ£o pois se existir uma rota '**' o catch do navigation nÃ£o funciona.\n   *\n   * @optional\n   *\n   * @description\n   *\n   * Cria automaticamente as rotas de ediÃ§Ã£o (novo/duplicate) e detalhes caso as aÃ§Ãµes\n   * estejam definidas nas aÃ§Ãµes.\n   *\n   * > Para o correto funcionamento nÃ£o pode haver nenhum rota coringa (`**`) especificada.\n   *\n   * @default false\n   */\n  @Input('p-auto-router') set autoRouter(value: boolean) {\n    this._autoRouter = util.convertToBoolean(value);\n  }\n\n  get autoRouter(): boolean {\n    return this._autoRouter;\n  }\n\n  /** Objeto com propriedades do breadcrumb. */\n  @Input('p-breadcrumb') breadcrumb?: PoBreadcrumb = { items: [] };\n\n  /** Lista dos campos exibidos na pÃ¡gina. */\n  @Input('p-fields') set fields(value: Array<PoPageDynamicDetailField>) {\n    this._fields = Array.isArray(value) ? [...value] : [];\n\n    this._keys = this.getKeysByFields(this.fields);\n    this._duplicates = this.getDuplicatesByFields(this.fields);\n  }\n\n  get fields(): Array<PoPageDynamicDetailField> {\n    return this._fields;\n  }\n\n  /** TÃ­tulo da pÃ¡gina. */\n  @Input('p-title') title: string;\n\n  /**\n   * @description\n   *\n   * Endpoint usado pelo template para requisiÃ§Ã£o do recurso que serÃ£o exibido.\n   *\n   * Caso a aÃ§Ã£o `remove` estiver configurada, serÃ¡ feito uma requisiÃ§Ã£o de exclusÃ£o nesse mesmo endpoint passando os campos\n   * setados como `key: true`.\n   *\n   * > `DELETE {end-point}/{keys}`\n   *\n   * ```\n   *  <po-page-dynamic-detail\n   *    [p-actions]=\"{ remove: '/' }\"\n   *    [p-fields]=\"[ { property: 'id', key: true } ]\"\n   *    p-service=\"/api/po-samples/v1/people\"\n   *    ...>\n   *  </po-page-dynamic-detail>\n   * ```\n   *\n   * ResquisiÃ§Ã£o disparada, onde a propriedade `id` Ã© igual a 2:\n   *\n   * ```\n   *  DELETE /api/po-samples/v1/people/2 HTTP/1.1\n   *  Host: localhost:4000\n   *  Connection: keep-alive\n   *  Accept: application/json, text/plain\n   *  ...\n   * ```\n   *\n   * > Caso esteja usando metadados com o template, serÃ¡ disparado uma requisiÃ§Ã£o na inicializaÃ§Ã£o do template para buscar\n   * > os metadados da pÃ¡gina passando o tipo do metadado esperado e a versÃ£o cacheada pelo browser.\n   * >\n   * > `GET {end-point}/metadata?type=detail&version={version}`\n   */\n  @Input('p-service-api') serviceApi: string;\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private poNotification: PoNotificationService,\n    private poDialogService: PoDialogService,\n    private poPageDynamicService: PoPageDynamicService) {\n  }\n\n  ngOnInit(): void {\n    const paramId = this.activatedRoute.snapshot.params['id'];\n\n    if (this.activatedRoute.snapshot.data.serviceApi) {\n      this.serviceApi = this.activatedRoute.snapshot.data.serviceApi;\n\n      this.poPageDynamicService.configServiceApi({ endpoint: this.serviceApi });\n\n      this.loadMetadata(paramId);\n    } else {\n      this.poPageDynamicService.configServiceApi({ endpoint: this.serviceApi });\n\n      this.loadData(paramId);\n    }\n  }\n\n  get duplicates() {\n    return [...this._duplicates];\n  }\n\n  get keys() {\n    return [...this._keys];\n  }\n\n  get pageActions() {\n    return [...this._pageActions];\n  }\n\n  private confirmRemove(path) {\n    const confirmOptions: PoDialogConfirmOptions = {\n      title: this.literals.confirmRemoveTitle,\n      message: this.literals.confirmRemoveMessage,\n      confirm: this.remove.bind(this, path)\n    };\n\n    this.poDialogService.confirm(confirmOptions);\n  }\n\n  private formatUniqueKey(item) {\n    const keys = util.mapObjectByProperties(item, this.keys);\n\n    return util.valuesFromObject(keys).join('|');\n  }\n\n  private goBack(/*path*/) {\n    window.history.back();\n    // if (path) {\n    //   this.navigateTo({ path, component: PoPageDynamicEditComponent });\n    // } else {\n    //   window.history.back();\n    // }\n  }\n\n  private loadData(id) {\n    this.poPageDynamicService.getResource(id).toPromise().then(response => {\n      this.model = response;\n    }).catch(() => {\n      this.model = undefined;\n      this.actions = undefined;\n    });\n  }\n\n  private loadMetadata(id) {\n    this.poPageDynamicService.getMetadata<any>('detail').toPromise().then(response => {\n      this.autoRouter = response.autoRouter;\n      this.actions = response.actions || {};\n      this.breadcrumb = response.breadcrumb || { items : [] };\n      this.fields = response.fields || [];\n      this.title = response.title;\n\n      this.loadData(id);\n    });\n  }\n\n  // @todo Validar rotas na mÃ£o pois se existir uma rota '**' o catch do navigation nÃ£o funciona.\n  private navigateTo(route: { path: string, component?, url?: string, params?: any }, forceStopAutoRouter: boolean = false) {\n    this.router.navigate([route.url || route.path], { queryParams: route.params })\n      .catch(() => {\n        if (forceStopAutoRouter || !this.autoRouter) {\n          return;\n        }\n\n        this.router.config.unshift(<Route>{\n          path: route.path, component: route.component, data: { serviceApi: this.serviceApi, autoRouter: true }\n        });\n\n        this.navigateTo(route, true);\n      });\n  }\n\n  private openEdit(path) {\n    const url = this.resolveUrl(this.model, path);\n\n    // this.navigateTo({ path, url, component: PoPageDynamicEditComponent });\n    this.navigateTo({ path, url });\n  }\n\n  private remove(path) {\n    const uniqueKey = this.formatUniqueKey(this.model);\n\n    this.poPageDynamicService.deleteResource(uniqueKey).toPromise().then(() => {\n      this.poNotification.success(this.literals.removeNotificationSuccess);\n\n      this.navigateTo({ path: path });\n      // this.navigateTo({ path: path, component: PoPageDynamicTableComponent });\n    });\n  }\n\n  private resolveUrl(item: any, path: string) {\n    const uniqueKey = this.formatUniqueKey(item);\n\n    return path.replace(/:id/g, uniqueKey);\n  }\n\n  private getPageActions(actions: PoPageDynamicDetailActions = {}): Array<PoPageAction> {\n    const pageActions = [];\n\n    if (actions.edit) {\n      pageActions.push({ label: this.literals.pageActionEdit, action: this.openEdit.bind(this, actions.edit) });\n    }\n\n    if (actions.remove) {\n      pageActions.push({ label: this.literals.pageActionRemove, action: this.confirmRemove.bind(this, actions.remove) });\n    }\n\n    if (actions.back === undefined || actions.back) {\n      pageActions.push({ label: this.literals.pageActionBack, action: this.goBack.bind(this, actions.back) });\n    }\n\n    return pageActions;\n  }\n\n  private getKeysByFields(fields: Array<any> = []) {\n    return fields.filter(field => field.key === true).map(field => field.property);\n  }\n\n  private getDuplicatesByFields(fields: Array<any> = []) {\n    return fields.filter(field => field.duplicate === true).map(field => field.property);\n  }\n\n  private isObject(value: any): boolean {\n    return !!value && typeof value === 'object' && !Array.isArray(value);\n  }\n\n}\n","import { HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoPageDynamicService } from './po-page-dynamic.service';\n/**\n * @description\n *\n * MÃ³dulo do serviÃ§o do po-page-dynamic-service.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  providers: [\n    PoPageDynamicService\n  ]\n})\nexport class PoPageDynamicModule { }\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoDynamicModule, PoModalModule, PoPageModule, PoWidgetModule } from '@portinari/portinari-ui';\n\nimport { PoPageDynamicDetailComponent } from './po-page-dynamic-detail.component';\nimport { PoPageDynamicModule } from '../../services/po-page-dynamic/po-page-dynamic.module';\n\n/**\n * @description\n *\n * MÃ³dulo do template do po-page-dynamic-detail.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n\n    PoDynamicModule,\n    PoModalModule,\n    PoPageModule,\n    PoWidgetModule,\n    PoPageDynamicModule\n  ],\n  declarations: [\n    PoPageDynamicDetailComponent\n  ],\n  exports: [\n    PoPageDynamicDetailComponent\n  ]\n})\nexport class PoPageDynamicDetailModule { }\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { Observable } from 'rxjs';\n\nimport {\n  PoBreadcrumb,\n  PoDialogService,\n  PoDynamicFormComponent,\n  PoGridComponent,\n  PoGridRowActions,\n  PoNotificationService,\n  PoPageAction } from '@portinari/portinari-ui';\n\nimport * as util from './../../utils/util';\n\nimport { PoPageDynamicEditActions } from './interfaces/po-page-dynamic-edit-actions.interface';\nimport { PoPageDynamicEditField } from './interfaces/po-page-dynamic-edit-field.interface';\nimport { PoPageDynamicService } from '../../services/po-page-dynamic/po-page-dynamic.service';\n\nexport const poPageDynamicEditLiteralsDefault = {\n  en: {\n    cancelConfirmMessage: 'Are you sure you want to cancel this operation?',\n    detailActionNew: 'New',\n    pageActionCancel: 'Cancel',\n    pageActionSave: 'Save',\n    pageActionSaveNew: 'Save and new',\n    registerNotFound: 'Register not found.',\n    saveNewNotificationSuccessSave: 'Resource successfully saved.',\n    saveNewNotificationSuccessUpdate: 'Resource successfully updated.',\n    saveNewNotificationWarning: 'Form must be filled out correctly.',\n    saveNotificationSuccessSave: 'Resource successfully saved.',\n    saveNotificationSuccessUpdate: 'Resource successfully updated.',\n    saveNotificationWarning: 'Form must be filled out correctly.',\n  },\n  es: {\n    cancelConfirmMessage: 'EstÃ¡ seguro de que desea cancelar esta operaciÃ³n?',\n    detailActionNew: 'Nuevo',\n    pageActionCancel: 'Cancelar',\n    pageActionSave: 'Guardar',\n    pageActionSaveNew: 'Guardar y nuevo',\n    registerNotFound: 'Registro no encontrado.',\n    saveNewNotificationSuccessSave: 'Recurso salvo con Ã©xito.',\n    saveNewNotificationSuccessUpdate: 'Recurso actualizado con Ã©xito.',\n    saveNewNotificationWarning: 'El formulario debe llenarse correctamente.',\n    saveNotificationSuccessSave: 'Recurso salvo con Ã©xito.',\n    saveNotificationSuccessUpdate: 'Recurso actualizado con Ã©xito.',\n    saveNotificationWarning: 'El formulario debe llenarse correctamente.',\n  },\n  pt: {\n    cancelConfirmMessage: 'Tem certeza que deseja cancelar esta operaÃ§Ã£o?',\n    detailActionNew: 'Novo',\n    pageActionCancel: 'Cancelar',\n    pageActionSave: 'Salvar',\n    pageActionSaveNew: 'Salvar e novo',\n    registerNotFound: 'Registro nÃ£o encontrado.',\n    saveNewNotificationSuccessSave: 'Recurso salvo com sucesso.',\n    saveNewNotificationSuccessUpdate: 'Recurso atualizado com sucesso.',\n    saveNewNotificationWarning: 'FormulÃ¡rio precisa ser preenchido corretamente.',\n    saveNotificationSuccessSave: 'Recurso salvo com sucesso.',\n    saveNotificationSuccessUpdate: 'Recurso atualizado com sucesso.',\n    saveNotificationWarning: 'FormulÃ¡rio precisa ser preenchido corretamente.',\n  }\n};\n\n/**\n * @description\n *\n * O `po-page-dynamic-edit` Ã© uma pÃ¡gina que pode servir para editar ou criar novos registros,\n * o mesmo tambÃ©m suporta metadados conforme especificado na documentaÃ§Ã£o.\n *\n * ### UtilizaÃ§Ã£o via rota\n *\n * Ao utilizar as rotas para carregar o template, o `page-dynamic-edit` disponibiliza propriedades para\n * poder especificar o endpoint dos dados e dos metadados. Exemplo de utilizaÃ§Ã£o:\n *\n * ```\n * {\n *   path: 'people',\n *   component: PoPageDynamicEditComponent,\n *   data: {\n *     serviceApi: 'http://localhost:3000/v1/people', // endpoint dos dados\n *     serviceMetadataApi: 'http://localhost:3000/v1/metadata' // endpoint dos metadados\n *   }\n * }\n * ```\n *\n * Para carregar com um recurso jÃ¡ existente, deve-se ser incluÃ­do um parÃ¢metro na rota chamado `id`:\n *\n * ```\n * {\n *   path: 'people/:id',\n *   component: PoPageDynamicEditComponent,\n *   data: {\n *     serviceApi: 'http://localhost:3000/v1/people', // endpoint dos dados\n *     serviceMetadataApi: 'http://localhost:3000/v1/metadata' // endpoint dos metadados\n *   }\n * }\n * ```\n *\n * A requisiÃ§Ã£o dos metadados Ã© feita na inicializaÃ§Ã£o do template para buscar os metadados da pÃ¡gina passando o\n * tipo do metadado esperado e a versÃ£o cacheada pelo browser.\n *\n * O formato esperado na resposta da requisiÃ§Ã£o estÃ¡ especificado na interface\n * [PoPageDynamicEditMetadata](/documentation/po-page-dynamic-edit#po-page-dynamic-edit-metadata). Por exemplo:\n *\n * ```\n *  {\n *   version: 1,\n *   title: 'Person edit',\n *   fields: [\n *     { property: 'id', key: true, disabled: true },\n *     { property: 'status' },\n *     { property: 'name' },\n *     { property: 'nickname' },\n *     { property: 'birthdate', label: 'Birth date' },\n *     { property: 'genre' },\n *     { property: 'city' },\n *     { property: 'country' }\n *   ]\n * }\n * ```\n *\n * > Caso o endpoint dos metadados nÃ£o seja especificado, serÃ¡ feito uma requisiÃ§Ã£o utilizando o `serviceApi` da seguinte forma:\n * ```\n * GET {end-point}/metadata?type=edit&version={version}\n * ```\n *\n * @example\n *\n * <example name=\"po-page-dynamic-edit-basic\" title=\"Portinari Page Dynamic Edit Basic\">\n *  <file name=\"sample-po-page-dynamic-edit-basic/sample-po-page-dynamic-edit-basic.component.html\"> </file>\n *  <file name=\"sample-po-page-dynamic-edit-basic/sample-po-page-dynamic-edit-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-dynamic-edit-user\" title=\"Portinari Page Dynamic Edit - User\">\n *  <file name=\"sample-po-page-dynamic-edit-user/sample-po-page-dynamic-edit-user.component.html\"> </file>\n *  <file name=\"sample-po-page-dynamic-edit-user/sample-po-page-dynamic-edit-user.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-dynamic-edit-master-detail\" title=\"Portinari Page Dynamic Edit - Master Detail\">\n *  <file name=\"sample-po-page-dynamic-edit-master-detail/sample-po-page-dynamic-edit-master-detail.component.html\"> </file>\n *  <file name=\"sample-po-page-dynamic-edit-master-detail/sample-po-page-dynamic-edit-master-detail.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-page-dynamic-edit',\n  templateUrl: './po-page-dynamic-edit.component.html',\n  providers: [ PoPageDynamicService ]\n})\nexport class PoPageDynamicEditComponent implements OnInit {\n\n  private _actions: PoPageDynamicEditActions = {};\n  private _autoRouter: boolean = false;\n  private _controlFields: Array<any> = [];\n  private _detailFields: Array<any> = [];\n  private _duplicates: Array<any> = [];\n  private _fields: Array<any> = [];\n  private _keys: Array<any> = [];\n  private _pageActions: Array<PoPageAction> = [];\n\n  literals = {\n    ...poPageDynamicEditLiteralsDefault[util.poLocaleDefault],\n    ...poPageDynamicEditLiteralsDefault[util.browserLanguage()]\n  };\n  model: any = {};\n\n  // beforeSave: return boolean\n  // afterSave\n  // beforeRemove: return boolean\n  // afterRemove\n  // beforeInsert: : return boolean\n  readonly detailActions: PoGridRowActions = { };\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * AÃ§Ãµes da pÃ¡gina.\n   */\n  @Input('p-actions') set actions(value: PoPageDynamicEditActions) {\n    this._actions = this.isObject(value) ? value : {};\n\n    this._pageActions = this.getPageActions(this._actions);\n  }\n\n  /**\n   * @todo Validar rotas na mÃ£o pois se existir uma rota '**' o catch do navigation nÃ£o funciona.\n   *\n   * @optional\n   *\n   * @description\n   *\n   * Cria automaticamente as rotas de ediÃ§Ã£o (novo/duplicate) e detalhes caso as aÃ§Ãµes\n   * estejam definidas nas aÃ§Ãµes.\n   *\n   * > Para o correto funcionamento nÃ£o pode haver nenhum rota coringa (`**`) especificada.\n   *\n   * @default false\n   */\n  @Input('p-auto-router') set autoRouter(value: boolean) {\n    this._autoRouter = util.convertToBoolean(value);\n  }\n\n  get autoRouter(): boolean {\n    return this._autoRouter;\n  }\n\n  /** Objeto com propriedades do breadcrumb. */\n  @Input('p-breadcrumb') breadcrumb?: PoBreadcrumb = { items: [] };\n\n  /** Lista dos campos usados na tabela e busca avanÃ§ada. */\n  @Input('p-fields') set fields(value: Array<PoPageDynamicEditField>) {\n    this._fields = Array.isArray(value) ? [...value] : [];\n\n    this._keys = this.getKeysByFields(this._fields);\n    this._duplicates = this.getDuplicatesByFields(this._fields);\n\n    this._controlFields = this.getControlFields(this._fields);\n    this._detailFields = this.getDetailFields(this._fields);\n  }\n\n  get fields(): Array<PoPageDynamicEditField> {\n    return this._fields;\n  }\n\n  /**\n   * @description\n   *\n   * Endpoint usado pelo template para requisiÃ§Ã£o do recurso que serÃ¡ exibido para ediÃ§Ã£o.\n   *\n   * Para as aÃ§Ãµes de `save` e `saveNew`, serÃ¡ feito uma requisiÃ§Ã£o de criaÃ§Ã£o nesse mesmo endpoint passando os valores\n   * preenchidos pelo usuÃ¡rio via payload.\n   *\n   * > `POST {end-point}`\n   *\n   * ```\n   *  <po-page-dynamic-edit\n   *    [p-actions]=\"{ save: '/', saveNew: 'new' }\"\n   *    [p-fields]=\"[ { property: 'name' }, { property: 'city' } ]\"\n   *    p-service=\"/api/po-samples/v1/people\"\n   *    ...>\n   *  </po-page-dynamic-edit>\n   * ```\n   *\n   * ResquisiÃ§Ã£o disparada, onde a propriedade `name` e `city` foram preenchidas:\n   *\n   * ```\n   *  POST /api/po-samples/v1/people HTTP/1.1\n   *  Host: localhost:4000\n   *  Connection: keep-alive\n   *  Accept: application/json, text/plain\n   *  ...\n   * ```\n   *\n   * Request payload:\n   *\n   * ```\n   * { \"name\": \"Fulano\", \"city\": \"Smallville\" }\n   * ```\n   *\n   * Caso queira que o template carregue um recurso jÃ¡ existente, deve-se ser incluÃ­do um parametro na rota chamado `id`.\n   *\n   * Exemplo de configuraÃ§Ã£o de rota:\n   *\n   * ```\n   *  RouterModule.forRoot([\n   *    ...\n   *    { path: 'edit/:id', component: PersonEditComponent },\n   *    ...\n   *  ],\n   * ```\n   *\n   * Baseado nisso, na inicializaÃ§Ã£o do template, serÃ¡ disparado uma requisiÃ§Ã£o para buscar o recurso que serÃ¡ editado.\n   *\n   * > `GET {end-point}/{id}`\n   *\n   * Nos mÃ©todos de `save` e `saveNew`, ao invÃ©s de um `POST`, serÃ¡ disparado um `PUT`.\n   *\n   * ResquisiÃ§Ã£o disparada, onde a propriedade `name` e `city` foram preenchidas / atualizadas, e o `id` da url Ã© 2:\n   *\n   * ```\n   *  PUT /api/po-samples/v1/people/2 HTTP/1.1\n   *  Host: localhost:4000\n   *  Connection: keep-alive\n   *  Accept: application/json, text/plain\n   *  ...\n   * ```\n   *\n   * Request payload:\n   *\n   * ```\n   * { \"name\": \"Fulano\", \"city\": \"Metropolis\" }\n   * ```\n   */\n  @Input('p-service-api') serviceApi: string;\n\n  /** TÃ­tulo da pÃ¡gina. */\n  @Input('p-title') title: string;\n\n  @ViewChild('dynamicForm', { static: false }) dynamicForm: PoDynamicFormComponent;\n  @ViewChild('gridDetail', { static: false }) gridDetail: PoGridComponent;\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private poNotification: PoNotificationService,\n    private poDialogService: PoDialogService,\n    private poPageDynamicService: PoPageDynamicService) {\n  }\n\n  ngOnInit(): void {\n    const paramId = this.activatedRoute.snapshot.params['id'];\n    const duplicate = this.activatedRoute.snapshot.queryParams['duplicate'];\n\n    const { serviceApi, serviceMetadataApi } = this.activatedRoute.snapshot.data;\n    this.serviceApi = serviceApi || this.serviceApi;\n    this.poPageDynamicService.configServiceApi({ endpoint: this.serviceApi, metadata: serviceMetadataApi });\n\n    if (serviceApi) {\n      this.loadMetadata(paramId, duplicate);\n    } else {\n      this.loadData(paramId, duplicate);\n    }\n  }\n\n  get duplicates() {\n    return [...this._duplicates];\n  }\n\n  get keys() {\n    return [...this._keys];\n  }\n\n  get pageActions() {\n    return [...this._pageActions];\n  }\n\n  get controlFields() {\n    return this._controlFields;\n  }\n\n  get detailFields() {\n    return this._detailFields;\n  }\n\n  detailActionNew() {\n    this.gridDetail.insertRow();\n  }\n\n  private cancel(path) {\n    if (this.dynamicForm && this.dynamicForm.form.dirty) {\n      this.poDialogService.confirm({\n        message: this.literals.cancelConfirmMessage,\n        title: this.literals.pageActionCancel,\n        confirm: this.goBack.bind(this, path)\n      });\n    } else {\n      this.goBack(path);\n    }\n  }\n\n  private formatUniqueKey(item) {\n    const keys = util.mapObjectByProperties(item, this.keys);\n\n    return util.valuesFromObject(keys).join('|');\n  }\n\n  private goBack(path) {\n    if (path) {\n      this.router.navigate([path]);\n    } else {\n      window.history.back();\n    }\n  }\n\n  private loadData(id, duplicate?) {\n    if (!id) {\n      try {\n        this.model = JSON.parse(duplicate) || {};\n      } catch {\n        this.model = {};\n      }\n\n      return;\n    }\n\n    this.poPageDynamicService.getResource(id).toPromise().then(response => {\n      this.model = response;\n    }).catch(() => {\n      this.model = undefined;\n      this.actions = undefined;\n      this._pageActions = [];\n    });\n  }\n\n  private loadMetadata(paramId: string | number, duplicate: string) {\n    const typeMetadata = paramId ? 'edit' : 'create';\n\n    this.poPageDynamicService.getMetadata<any>(typeMetadata).toPromise().then(response => {\n      this.autoRouter = response.autoRouter;\n      this.actions = response.actions || {};\n      this.breadcrumb = response.breadcrumb || { items : [] };\n      this.fields = response.fields || [];\n      this.title = response.title;\n\n      this.loadData(paramId, duplicate);\n    });\n  }\n\n  private navigateTo(path: string) {\n    if (path) {\n      const url = this.resolveUrl(this.model, path);\n\n      this.router.navigate([url]);\n    } else {\n      window.history.back();\n    }\n  }\n\n  private resolveUrl(item: any, path: string) {\n    const uniqueKey = this.formatUniqueKey(item);\n\n    return path.replace(/:id/g, uniqueKey);\n  }\n\n  private save(path) {\n    if (this.dynamicForm.form.invalid) {\n      this.poNotification.warning(this.literals.saveNotificationWarning);\n      return;\n    }\n\n    const paramId = this.activatedRoute.snapshot.params['id'];\n\n    const saveOperation: Observable<any> = paramId\n      ? this.poPageDynamicService.updateResource(paramId, this.model)\n      : this.poPageDynamicService.createResource(this.model);\n\n    const msgSucess = paramId ? this.literals.saveNotificationSuccessUpdate : this.literals.saveNotificationSuccessSave;\n\n    saveOperation.toPromise().then(() => {\n      this.poNotification.success(msgSucess);\n\n      this.navigateTo(path);\n    });\n  }\n\n  private saveNew(path) {\n    if (this.dynamicForm.form.invalid) {\n      this.poNotification.warning(this.literals.saveNewNotificationWarning);\n      return;\n    }\n\n    const paramId = this.activatedRoute.snapshot.params['id'];\n\n    if (paramId) {\n      this.poPageDynamicService.updateResource(paramId, this.model)\n        .toPromise().then(() => {\n          this.poNotification.success(this.literals.saveNewNotificationSuccessUpdate);\n\n          this.navigateTo(path);\n        });\n    } else {\n      this.poPageDynamicService.createResource(this.model)\n        .toPromise().then(() => {\n          this.poNotification.success(this.literals.saveNewNotificationSuccessSave);\n\n          this.model = {};\n          this.dynamicForm.form.reset();\n        });\n    }\n  }\n\n  private getKeysByFields(fields: Array<any> = []) {\n    return fields.filter(field => field.key === true).map(field => field.property);\n  }\n\n  private getControlFields(fields: Array<any> = []) {\n    return fields.filter(field => field.type !== 'detail');\n  }\n\n  private getDetailFields(fields: Array<any> = []) {\n    return fields.filter(field => field.type === 'detail');\n  }\n\n  private getDuplicatesByFields(fields: Array<any> = []) {\n    return fields.filter(field => field.duplicate === true).map(field => field.property);\n  }\n\n  private getPageActions(actions: PoPageDynamicEditActions = {}): Array<PoPageAction> {\n    const pageActions = [{ label: this.literals.pageActionSave, action: this.save.bind(this, actions.save) }];\n\n    if (actions.saveNew) {\n      pageActions.push({ label: this.literals.pageActionSaveNew, action: this.saveNew.bind(this, actions.saveNew) });\n    }\n\n    if (actions.cancel === undefined || actions.cancel) {\n      pageActions.push({ label: this.literals.pageActionCancel, action: this.cancel.bind(this, actions.cancel) });\n    }\n\n    return pageActions;\n  }\n\n  private isObject(value: any): boolean {\n    return !!value && typeof value === 'object' && !Array.isArray(value);\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport {\n  PoButtonModule,\n  PoDividerModule,\n  PoDynamicModule,\n  PoGridModule,\n  PoPageModule,\n  PoWidgetModule\n} from '@portinari/portinari-ui';\n\nimport { PoPageDynamicEditComponent } from './po-page-dynamic-edit.component';\nimport { PoPageDynamicModule } from '../../services/po-page-dynamic/po-page-dynamic.module';\n\n/**\n * @description\n *\n * MÃ³dulo do template do po-page-dynamic-detail.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n\n    PoButtonModule,\n    PoDividerModule,\n    PoDynamicModule,\n    PoGridModule,\n    PoPageModule,\n    PoWidgetModule,\n    PoPageDynamicModule\n  ],\n  declarations: [\n    PoPageDynamicEditComponent\n  ],\n  exports: [\n    PoPageDynamicEditComponent\n  ]\n})\nexport class PoPageDynamicEditModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable, from } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { PoPageDynamicOptionsSchema, PoPageDynamicOptionsProp } from './po-page-dynamic-options.interface';\n\ntype urlOrFunction = string | Function ;\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class PoPageCustomizationService {\n\n  constructor(private http: HttpClient) { }\n\n  getCustomOptions<T>(origin: urlOrFunction, originalOption: T, optionSchema: PoPageDynamicOptionsSchema<T>): Observable<T> {\n    return this.createObservable<T>(origin).pipe(\n      map(newPageOptions => this.mergePageOptions<T>(originalOption, newPageOptions, optionSchema))\n    );\n  }\n\n  changeOriginalOptionsToNewOptions<T, K>(objectToChange: T, newOptions: K) {\n    Object.keys(newOptions).forEach(key => {\n      const value = newOptions[key];\n      if (objectToChange[key]) {\n        if (Array.isArray(value)) {\n          objectToChange[key] = [...value];\n          return;\n        }\n        if ((typeof (value) === 'number' || typeof (value) === 'string')) {\n          objectToChange[key] = value;\n          return;\n        }\n        if (typeof (value) === 'object') {\n          objectToChange[key] = { ...value };\n        }\n      }\n    });\n  }\n\n  private createObservable<T>(origin: urlOrFunction): Observable<T> {\n    if (typeof origin === 'string') {\n      return this.http.post<T>(origin, {});\n    }\n    return from(Promise.resolve(origin()));\n  }\n\n  private mergePageOptions<T>(originalOption: T, newPageOptions: T, optionSchema: PoPageDynamicOptionsSchema<T>) {\n\n    const mergePageOptions: T = optionSchema.schema.reduce(\n      (objWithNewProp, prop) =>\n      ({...objWithNewProp, [prop.nameProp]: this.createNewProp(prop, originalOption, newPageOptions)})\n      , {} as T);\n\n    Object.keys(mergePageOptions).forEach(key => !mergePageOptions[key] && delete mergePageOptions[key]);\n\n    return mergePageOptions;\n  }\n\n  private createNewProp<T>(prop: PoPageDynamicOptionsProp<T>, originalOption: T, newPageOptions: T) {\n    if (prop.merge) {\n        return this.mergeOptions(originalOption[prop.nameProp], newPageOptions[prop.nameProp], prop.keyForMerge  );\n    } else {\n      return newPageOptions[prop.nameProp] || originalOption[prop.nameProp];\n    }\n  }\n\n  private mergeOptions<T>(originalOptions: (Array<T> | T) , newOptions: (Array<T> | T) , filterProp?: keyof T) {\n\n    if (!originalOptions && !newOptions) {\n      return;\n    }\n    if (!newOptions) {\n      return originalOptions;\n    }\n    if (!originalOptions) {\n      return newOptions;\n    }\n\n    if (originalOptions instanceof Array && newOptions instanceof Array ) {\n      return this.mergeOptionsArray(originalOptions, newOptions, filterProp);\n    }\n\n    return {...originalOptions, ...newOptions};\n\n  }\n\n  private mergeOptionsArray<T>(originalOptions: Array<T>, newOptions: Array<T>, filterProp: keyof T) {\n    const deduplicateNewOptions = newOptions.filter(\n      newItem => !originalOptions.find(originalItem => originalItem[filterProp] === newItem[filterProp]));\n    const mergedOriginalOptions = originalOptions.map(originalItem => {\n        const newItem = newOptions.find(newOptionsItem => originalItem[filterProp] === newOptionsItem[filterProp]) || originalItem;\n        return {...originalItem, ...newItem};\n      }\n    );\n    return [...mergedOriginalOptions, ...deduplicateNewOptions];\n  }\n}\n","import { HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoPageCustomizationService } from './po-page-customization.service';\n\n/**\n * @description\n *\n * MÃ³dulo do serviÃ§o do po-page-customization-service.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  providers: [\n    PoPageCustomizationService\n  ]\n})\nexport class PoPageCustomizationModule { }\n","import { EventEmitter, Input, Output, ViewChild } from '@angular/core';\n\nimport { PoDynamicFormField, PoLanguageService, PoModalAction, PoModalComponent } from '@portinari/portinari-ui';\n\nimport { poLocaleDefault } from '../../../utils/util';\n\nimport { PoAdvancedFilterLiterals } from './po-advanced-filter-literals.interface';\n\nexport const poAdvancedFiltersLiteralsDefault = {\n  en: <PoAdvancedFilterLiterals> {\n    title: 'Advanced search',\n    cancelLabel: 'Cancel',\n    confirmLabel: 'Apply filters'\n  },\n  es: <PoAdvancedFilterLiterals> {\n    title: 'BÃºsqueda avanzada',\n    cancelLabel: 'Cancelar',\n    confirmLabel: 'Aplicar filtros'\n  },\n  pt: <PoAdvancedFilterLiterals> {\n    title: 'Busca avanÃ§ada',\n    cancelLabel: 'Cancelar',\n    confirmLabel: 'Aplicar filtros'\n  },\n  ru: <PoAdvancedFilterLiterals> {\n    title: 'Ð Ð°ÑÑÐ¸ÑÐµÐ½Ð½ÑÐ¹ Ð¿Ð¾Ð¸ÑÐº',\n    cancelLabel: 'Ð¾ÑÐ¼ÐµÐ½Ð¸ÑÑ',\n    confirmLabel: 'ÐÑÐ¸Ð¼ÐµÐ½Ð¸ÑÑ ÑÐ¸Ð»ÑÑÑÑ'\n  }\n};\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Filtro de busca avanÃ§ada criado a partir de um formulÃ¡rio dinÃ¢mico.\n * Componente de uso interno.\n */\nexport class PoAdvancedFilterBaseComponent {\n\n  @ViewChild(PoModalComponent, { static: true }) poModal: PoModalComponent;\n\n  private _filters: Array<PoDynamicFormField> = [];\n  private _literals: PoAdvancedFilterLiterals;\n\n  filter = {};\n  language: string = poLocaleDefault;\n\n  primaryAction: PoModalAction = {\n    action: () => {\n      const models = this.getValuesFromForm();\n\n      this.searchEvent.emit(models);\n      this.poModal.close();\n    },\n    label: this.literals.confirmLabel\n  };\n\n  secondaryAction: PoModalAction = {\n    action: () => {\n      this.poModal.close();\n    },\n    label: this.literals.cancelLabel\n  };\n\n  /**\n   * ColeÃ§Ã£o de objetos que implementam a interface PoDynamicFormField, para definiÃ§Ã£o dos campos que serÃ£o criados\n   * dinamicamente.\n   */\n  @Input('p-filters') set filters(filters: Array<PoDynamicFormField>) {\n    this._filters = Array.isArray(filters) ? [...filters] : [];\n  }\n\n  get filters() {\n    return this._filters;\n  }\n\n  /** Objeto com as literais usadas no `po-advanced-filter`. */\n  @Input('p-literals') set literals(value: PoAdvancedFilterLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...poAdvancedFiltersLiteralsDefault[poLocaleDefault],\n        ...poAdvancedFiltersLiteralsDefault[this.language],\n        ...value\n      };\n    } else {\n      this._literals = poAdvancedFiltersLiteralsDefault[this.language];\n    }\n\n    this.primaryAction.label = this.literals.confirmLabel;\n    this.secondaryAction.label = this.literals.cancelLabel;\n  }\n\n  get literals() {\n    return this._literals || poAdvancedFiltersLiteralsDefault[this.language];\n  }\n\n  /** FunÃ§Ã£o que serÃ¡ disparada e receberÃ¡ os valores do formulÃ¡rio ao ser clicado no botÃ£o buscar. */\n  @Output('p-search-event') searchEvent = new EventEmitter<any>();\n\n  constructor(languageService: PoLanguageService) {\n    this.language = languageService.getShortLanguage();\n  }\n\n    // Retorna os models dos campos preenchidos\n  private getValuesFromForm() {\n    Object.keys(this.filter).forEach(property => {\n      if (this.filter[property] === undefined || this.filter[property] === '') {\n        delete this.filter[property];\n      }\n    });\n\n    return this.filter;\n  }\n\n}\n","import { Component, ViewChild } from '@angular/core';\n\nimport { PoDynamicFormComponent, PoLanguageService } from '@portinari/portinari-ui';\n\nimport { PoAdvancedFilterBaseComponent } from './po-advanced-filter-base.component';\n\n/**\n * @docsPrivate\n *\n * @docsExtends PoAdvancedFilterBaseComponent\n *\n * @examplePrivate\n *\n * <example-private name=\"po-advanced-filter\" title=\"Portinari Busca AvanÃ§ada\">\n *   <file name=\"sample-po-advanced-filter.component.html\"> </file>\n *   <file name=\"sample-po-advanced-filter.component.ts\"> </file>\n * </example-private>\n */\n@Component({\n  selector: 'po-advanced-filter',\n  templateUrl: './po-advanced-filter.component.html'\n})\nexport class PoAdvancedFilterComponent extends PoAdvancedFilterBaseComponent {\n\n  @ViewChild(PoDynamicFormComponent, { static: true }) poDynamicForm: PoDynamicFormComponent;\n\n  constructor(languageService: PoLanguageService) {\n    super(languageService);\n  }\n\n  open() {\n    this.filter = {};\n    this.poModal.open();\n  }\n\n}\n","import { EventEmitter, Input, Output } from '@angular/core';\n\nimport { PoBreadcrumb, PoDynamicFormField, PoLanguageService, PoPageAction } from '@portinari/portinari-ui';\n\nimport { poLocaleDefault } from '../../utils/util';\n\nimport { PoPageDynamicSearchLiterals } from './po-page-dynamic-search-literals.interface';\nimport { poAdvancedFiltersLiteralsDefault } from './po-advanced-filter/po-advanced-filter-base.component';\nimport { PoAdvancedFilterLiterals } from './po-advanced-filter/po-advanced-filter-literals.interface';\nimport { PoPageDynamicSearchOptions } from './po-page-dynamic-search-options.interface';\n\nexport const poPageDynamicSearchLiteralsDefault = {\n  en: <PoPageDynamicSearchLiterals> {\n    disclaimerGroupTitle: 'Displaying results filtered by:',\n    filterTitle: poAdvancedFiltersLiteralsDefault.en.title,\n    filterCancelLabel: poAdvancedFiltersLiteralsDefault.en.cancelLabel,\n    filterConfirmLabel: poAdvancedFiltersLiteralsDefault.en.confirmLabel,\n    quickSearchLabel: 'Quick search:',\n    searchPlaceholder: 'Search'\n  },\n  es: <PoPageDynamicSearchLiterals> {\n    disclaimerGroupTitle: 'Presentando resultados filtrados por:',\n    filterTitle: poAdvancedFiltersLiteralsDefault.es.title,\n    filterCancelLabel: poAdvancedFiltersLiteralsDefault.es.cancelLabel,\n    filterConfirmLabel: poAdvancedFiltersLiteralsDefault.es.confirmLabel,\n    quickSearchLabel: 'BÃºsqueda rÃ¡pida:',\n    searchPlaceholder: 'Buscar',\n  },\n  pt: <PoPageDynamicSearchLiterals> {\n    disclaimerGroupTitle: 'Apresentando resultados filtrados por:',\n    filterTitle: poAdvancedFiltersLiteralsDefault.pt.title,\n    filterCancelLabel: poAdvancedFiltersLiteralsDefault.pt.cancelLabel,\n    filterConfirmLabel: poAdvancedFiltersLiteralsDefault.pt.confirmLabel,\n    quickSearchLabel: 'Pesquisa rÃ¡pida:',\n    searchPlaceholder: 'Pesquisar'\n  },\n  ru: <PoPageDynamicSearchLiterals> {\n    disclaimerGroupTitle: 'ÐÑÐ¾Ð±ÑÐ°Ð¶ÐµÐ½Ð¸Ðµ ÑÐµÐ·ÑÐ»ÑÑÐ°ÑÐ¾Ð², Ð¾ÑÑÐ¸Ð»ÑÑÑÐ¾Ð²Ð°Ð½Ð½ÑÑ Ð¿Ð¾:',\n    filterTitle: poAdvancedFiltersLiteralsDefault.ru.title,\n    filterCancelLabel: poAdvancedFiltersLiteralsDefault.ru.cancelLabel,\n    filterConfirmLabel: poAdvancedFiltersLiteralsDefault.ru.confirmLabel,\n    quickSearchLabel: 'ÐÑÑÑÑÑÐ¹ Ð¿Ð¾Ð¸ÑÐº:',\n    searchPlaceholder: 'Ð¸ÑÑÐ»ÐµÐ´Ð¾Ð²Ð°Ð½Ð¸Ðµ'\n  },\n};\n\n/**\n * @description\n *\n * Componente com as aÃ§Ãµes de pesquisa jÃ¡ definidas, bastando que o desenvolvedor implemente apenas a chamada para as APIs\n * e exiba as informaÃ§Ãµes.\n */\nexport class PoPageDynamicSearchBaseComponent {\n\n  private _filters: Array<PoDynamicFormField> = [];\n  private _literals: PoPageDynamicSearchLiterals;\n\n  advancedFilterLiterals: PoAdvancedFilterLiterals;\n\n  private language: string;\n\n  /** Nesta propriedade deve ser definido um array de objetos que implementam a interface `PoPageAction`. */\n  @Input('p-actions') actions?: Array<PoPageAction> = [];\n\n  /** Objeto com propriedades do breadcrumb. */\n  @Input('p-breadcrumb') breadcrumb?: PoBreadcrumb = { items: [] };\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com as literais usadas no `po-page-dynamic-search`.\n   *\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\n   *\n   * ```\n   *  const customLiterals: PoPageDynamicSearchLiterals = {\n   *    disclaimerGroupTitle: 'Filtros aplicados:',\n   *    filterTitle: 'Filtro avanÃ§ado',\n   *    filterCancelLabel: 'Fechar',\n   *    filterConfirmLabel: 'Aplicar',\n   *    quickSearchLabel: 'Valor pesquisado:',\n   *    searchPlaceholder: 'Pesquise aqui'\n   *  };\n   * ```\n   *\n   * Ou passando apenas as literais que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: PoPageDynamicSearchLiterals = {\n   *    filterTitle: 'Filtro avanÃ§ado'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <po-page-dynamic-search\n   *   [p-literals]=\"customLiterals\">\n   * </po-page-dynamic-search>\n   * ```\n   *\n   * > O valor padrÃ£o serÃ¡ traduzido de acordo com o idioma configurado no [`PoI18nService`](/documentation/po-i18n) ou *browser*.\n   */\n  @Input('p-literals') set literals(value: PoPageDynamicSearchLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...poPageDynamicSearchLiteralsDefault[poLocaleDefault],\n        ...poPageDynamicSearchLiteralsDefault[this.language],\n        ...value\n      };\n    } else {\n      this._literals = poPageDynamicSearchLiteralsDefault[this.language];\n    }\n\n    this.setAdvancedFilterLiterals(this.literals);\n  }\n\n  get literals() {\n    return this._literals || poPageDynamicSearchLiteralsDefault[this.language];\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Lista dos campos usados na busca avanÃ§ada. Caso o mesmo nÃ£o seja passado a busca avanÃ§ada nÃ£o serÃ¡ exibida.\n   */\n  @Input('p-filters') set filters(filters: Array<PoDynamicFormField>) {\n    this._filters = Array.isArray(filters) ? [...filters] : [];\n  }\n\n  get filters(): Array<PoDynamicFormField> {\n    return this._filters;\n  }\n\n  /**\n   * FunÃ§Ã£o ou serviÃ§o que serÃ¡ executado na inicializaÃ§Ã£o do componente.\n   *\n   * A propriedade aceita os seguintes tipos:\n   * - `string`: *Endpoint* usado pelo componente para requisiÃ§Ã£o via `POST`.\n   * - `function`: MÃ©todo que serÃ¡ executado.\n   *\n   * O retorno desta funÃ§Ã£o deve ser do tipo `PoPageDynamicSearchOptions`,\n   * onde o usuÃ¡rio poderÃ¡ customizar novos filtros, breadcrumb, title e actions\n   *\n   * Por exemplo:\n   *\n   * ```\n   * getPageOptions(): PoPageDynamicSearchOptions {\n   * return {\n   *   actions: [\n   *     { label: 'Find on Google' },\n   *   ],\n   *   filters: [\n   *     { property: 'idCard', gridColumns: 6 }\n   *   ]\n   * };\n   * }\n   *\n   * ```\n   * Para referenciar a sua funÃ§Ã£o utilize a propriedade `bind`, por exemplo:\n   * ```\n   *  [p-load]=\"onLoadOptions.bind(this)\"\n   * ```\n   */\n  @Input('p-load') onLoad: string | (() => PoPageDynamicSearchOptions);\n\n  /** TÃ­tulo da pÃ¡gina. */\n  @Input('p-title') title: string;\n\n  /**\n   * @description\n   *\n   * Evento disparado ao executar a pesquisa avanÃ§ada, o mesmo irÃ¡ repassar um objeto com os valores preenchidos no modal de pesquisa.\n   *\n   * > Campos nÃ£o preenchidos nÃ£o irÃ£o aparecer no objeto passado por parÃ¢metro.\n   */\n  @Output('p-advanced-search') advancedSearch?: EventEmitter<any> = new EventEmitter();\n\n  /** Evento disparado ao remover um ou todos os disclaimers pelo usuÃ¡rio. */\n  @Output('p-change-disclaimers') changeDisclaimers?: EventEmitter<any> = new EventEmitter();\n\n  /** Evento disparado ao realizar uma busca pelo campo de pesquisa rÃ¡pida, o mesmo serÃ¡ chamado repassando o valor digitado. */\n  @Output('p-quick-search') quickSearch?: EventEmitter<string> = new EventEmitter();\n\n  constructor(languageService: PoLanguageService) {\n    this.language = languageService.getShortLanguage();\n  }\n\n  protected setAdvancedFilterLiterals(literals: PoPageDynamicSearchLiterals) {\n    this.advancedFilterLiterals = {\n      cancelLabel: literals.filterCancelLabel,\n      confirmLabel: literals.filterConfirmLabel,\n      title: literals.filterTitle\n    };\n  }\n}\n","import { Component, ViewChild, OnInit, OnDestroy } from '@angular/core';\n\nimport { Observable, Subscription } from 'rxjs';\nimport { PoDisclaimerGroup, PoDynamicFieldType, PoDynamicFormField, PoLanguageService, PoPageFilter } from '@portinari/portinari-ui';\n\nimport { capitalizeFirstLetter, getBrowserLanguage } from '../../utils/util';\nimport { PoPageCustomizationService } from '../../services/po-page-customization/po-page-customization.service';\n\nimport { PoAdvancedFilterComponent } from './po-advanced-filter/po-advanced-filter.component';\nimport { PoPageDynamicSearchBaseComponent } from './po-page-dynamic-search-base.component';\nimport { PoPageDynamicSearchOptions } from './po-page-dynamic-search-options.interface';\nimport { PoPageDynamicOptionsSchema } from '../../services';\n\ntype UrlOrPoCustomizationFunction = string | (() => PoPageDynamicSearchOptions );\n\n/**\n * @docsExtends PoPageDynamicSearchBaseComponent\n *\n * @example\n *\n * <example name=\"po-page-dynamic-search-basic\" title=\"Portinari Page Dynamic Search Basic\">\n *  <file name=\"sample-po-page-dynamic-search-basic/sample-po-page-dynamic-search-basic.component.html\"> </file>\n *  <file name=\"sample-po-page-dynamic-search-basic/sample-po-page-dynamic-search-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-dynamic-search-hiring-processes\" title=\"Portinari Page Dynamic Search - Hiring processes\">\n *  <file name=\"sample-po-page-dynamic-search-hiring-processes/sample-po-page-dynamic-search-hiring-processes.component.html\"> </file>\n *  <file name=\"sample-po-page-dynamic-search-hiring-processes/sample-po-page-dynamic-search-hiring-processes.component.ts\"> </file>\n *  <file name=\"sample-po-page-dynamic-search-hiring-processes/sample-po-page-dynamic-search-hiring-processes.service.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-page-dynamic-search',\n  templateUrl: './po-page-dynamic-search.component.html'\n})\nexport class PoPageDynamicSearchComponent extends PoPageDynamicSearchBaseComponent implements OnInit, OnDestroy {\n\n  private loadSubscription: Subscription;\n\n  private readonly _disclaimerGroup: PoDisclaimerGroup = {\n    change: this.onChangeDisclaimerGroup.bind(this),\n    disclaimers: [],\n    title: this.literals.disclaimerGroupTitle\n  };\n\n  private readonly _filterSettings: PoPageFilter = {\n    action: 'onAction',\n    advancedAction: 'onAdvancedAction',\n    ngModel: 'quickFilter',\n    placeholder: this.literals.searchPlaceholder\n  };\n\n  // Flag to control when changeDisclaimerGroup should be called\n  private changeDisclaimersEnabled: boolean = false;\n\n  private quickFilter;\n\n  @ViewChild(PoAdvancedFilterComponent, { static: true }) poAdvancedFilter: PoAdvancedFilterComponent;\n\n  constructor(languageService: PoLanguageService, private poPageCustomizationService: PoPageCustomizationService) {\n    super(languageService);\n  }\n\n  get disclaimerGroup() {\n    return Object.assign({}, this._disclaimerGroup, { title: this.literals.disclaimerGroupTitle });\n  }\n\n  get filterSettings() {\n    this._filterSettings.advancedAction = this.filters.length === 0 ? undefined : 'onAdvancedAction';\n\n    return Object.assign({}, this._filterSettings, { placeholder: this.literals.searchPlaceholder });\n  }\n\n  ngOnInit() {\n    this.setAdvancedFilterLiterals(this.literals);\n    if (this.onLoad) {\n      this.loadOptionsOnInitialize(this.onLoad);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.loadSubscription) {\n      this.loadSubscription.unsubscribe();\n    }\n  }\n\n  onAction() {\n    this.changeDisclaimersEnabled = false;\n    this._disclaimerGroup.disclaimers = [\n      { property: 'search', label: `${this.literals.quickSearchLabel} ${this.quickFilter}`, value: this.quickFilter }\n    ];\n\n    if (this.quickSearch.observers && this.quickSearch.observers.length > 0) {\n      this.quickSearch.emit(this.quickFilter);\n    }\n\n    this.quickFilter = undefined;\n  }\n\n  onAdvancedAction() {\n    this.poAdvancedFilter.open();\n  }\n\n  onAdvancedSearch(filters) {\n    this.changeDisclaimersEnabled = false;\n    this._disclaimerGroup.disclaimers = this.setDisclaimers(filters);\n\n    this.advancedSearch.emit(filters);\n  }\n\n  private applyDisclaimerLabelValue(field: any, filterValue: any) {\n    const values = Array.isArray(filterValue) ? filterValue : [ filterValue ];\n\n    const labels = values.map(value => {\n      const filteredField = field.options.find(option => option.value === value);\n\n      return filteredField.label || filteredField.value;\n    });\n\n    return labels.join(', ');\n  }\n\n  private formatDate(date: string) {\n    const year = parseInt(date.substr(0, 4), 10);\n    const month = parseInt(date.substr(5, 2), 10);\n    const day = parseInt(date.substr(8, 2), 10);\n\n    return new Date(year, month - 1, day).toLocaleDateString(getBrowserLanguage());\n  }\n\n  private getFieldByProperty(fields: Array<PoDynamicFormField>, fieldName: string) {\n    return fields.find((field: PoDynamicFormField) => field.property === fieldName);\n  }\n\n  private getFilterValueToDisclaimer(field: any, value: any) {\n\n    if (field.type === PoDynamicFieldType.Date) {\n      return this.formatDate(value);\n    }\n\n    if (field.options) {\n      return this.applyDisclaimerLabelValue(field, value);\n    }\n\n    return value;\n  }\n\n  private onChangeDisclaimerGroup(disclaimers) {\n    this.changeDisclaimersEnabled ? this.changeDisclaimers.emit(disclaimers) : this.changeDisclaimersEnabled = true;\n  }\n\n  private setDisclaimers(filters) {\n    const disclaimers = [];\n    const properties = Object.keys(filters);\n\n    properties.forEach(property => {\n      const field = this.getFieldByProperty(this.filters, property);\n      const label = field.label || capitalizeFirstLetter(field.property);\n      const value = filters[property];\n\n      disclaimers.push({\n        label: `${label}: ${this.getFilterValueToDisclaimer(field, value)}`,\n        property,\n        value\n      });\n    });\n\n    return disclaimers;\n  }\n\n  private loadOptionsOnInitialize(onLoad: UrlOrPoCustomizationFunction) {\n\n    this.loadSubscription = this.getPoDynamicPageOptions(onLoad).subscribe(responsePoOption =>\n        this.poPageCustomizationService.changeOriginalOptionsToNewOptions(this, responsePoOption));\n  }\n\n  private getPoDynamicPageOptions(onLoad: UrlOrPoCustomizationFunction): Observable<PoPageDynamicSearchOptions> {\n    const originalOption: PoPageDynamicSearchOptions = {\n      title: this.title,\n      actions: this.actions,\n      breadcrumb: this.breadcrumb,\n      filters: this.filters\n    };\n\n    const pageOptionSchema: PoPageDynamicOptionsSchema<PoPageDynamicSearchOptions> = {\n      schema: [\n        {\n          nameProp: 'filters',\n          merge: true,\n          keyForMerge: 'property'\n        },\n        {\n          nameProp: 'actions',\n          merge: true,\n          keyForMerge: 'label'\n        },\n        {\n          nameProp: 'breadcrumb'\n        },\n        {\n          nameProp: 'title'\n        }\n      ]\n    };\n\n    return this.poPageCustomizationService.getCustomOptions(onLoad, originalOption, pageOptionSchema);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoDynamicModule, PoLanguageModule, PoModalModule, PoPageModule } from '@portinari/portinari-ui';\n\nimport { PoPageCustomizationModule } from '../../services/po-page-customization/po-page-customization.module';\n\nimport { PoAdvancedFilterComponent } from './po-advanced-filter/po-advanced-filter.component';\nimport { PoPageDynamicSearchComponent } from './po-page-dynamic-search.component';\n\n/**\n * @description\n *\n * MÃ³dulo do template do po-page-dynamic-search.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n\n    PoDynamicModule,\n    PoLanguageModule,\n    PoModalModule,\n    PoPageModule,\n    PoPageCustomizationModule\n  ],\n  declarations: [\n    PoAdvancedFilterComponent,\n    PoPageDynamicSearchComponent\n  ],\n  exports: [\n    PoPageDynamicSearchComponent\n  ]\n})\nexport class PoPageDynamicSearchModule { }\n","import { Input } from '@angular/core';\n\nimport { PoBreadcrumb } from '@portinari/portinari-ui';\n\nimport { convertToBoolean } from '../../utils/util';\n\nimport { PoPageDynamicTableField } from './interfaces/po-page-dynamic-table-field.interface';\n\nexport class PoPageDynamicListBaseComponent {\n\n  private _autoRouter: boolean = false;\n  private _columns: Array<any> = [];\n  private _duplicates: Array<any> = [];\n  private _fields: Array<any> = [];\n  private _filters: Array<any> = [];\n  private _keys: Array<any> = [];\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Cria automaticamente as rotas de ediÃ§Ã£o (novo/duplicate) e detalhes caso sejam definidas aÃ§Ãµes na propriedade `p-actions`\n   *\n   * As rotas criadas serÃ£o baseadas na propriedade `p-actions`.\n   *\n   * > Para o correto funcionamento nÃ£o pode haver nenhuma rota coringa (`**`) especificada.\n   *\n   * @default false\n   */\n  @Input('p-auto-router') set autoRouter(value: boolean) {\n    this._autoRouter = convertToBoolean(value);\n  }\n\n  get autoRouter(): boolean {\n    return this._autoRouter;\n  }\n\n  /** Objeto com propriedades do breadcrumb. */\n  @Input('p-breadcrumb') breadcrumb?: PoBreadcrumb = { items: [] };\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Lista dos campos usados na tabela e busca avanÃ§ada.\n   *\n   *\n   * > Caso nÃ£o seja definido fields a tabela assumirÃ¡ o comportamento padrÃ£o.\n   */\n  @Input('p-fields') set fields(fields: Array<PoPageDynamicTableField>) {\n    this._fields = Array.isArray(fields) ? [...fields] : [];\n\n    this.setFieldsProperties(this.fields);\n  }\n\n  get fields(): Array<PoPageDynamicTableField> {\n    return this._fields;\n  }\n\n  /** Endpoint da API dos recursos que serÃ£o exibidos. */\n  /**\n   * @description\n   *\n   * Endpoint usado pelo template para requisiÃ§Ã£o dos recursos que serÃ£o exibidos.\n   *\n   * Ao realizar requisiÃ§Ãµes de busca, podem ser enviados os parÃ¢metros (caso possuam valor): `page`, `pageSize`, `search` e `order`.\n   *\n   * Caso a coluna estiver ordenada descendentemente serÃ¡ enviada da seguinte forma: `-name`, se for ordenada\n   * ascendentemente serÃ¡ enviada apenas com o nome da coluna, por exemplo: `name`.\n   *\n   * Exemplo de uma requisiÃ§Ã£o de busca:\n   *\n   * > `GET {end-point}/{resource}?page=1&pageSize=10&search=components&order=-name`\n   *\n   * Caso a aÃ§Ã£o `remove` estiver configurada, serÃ¡ feito uma requisiÃ§Ã£o de exclusÃ£o nesse mesmo endpoint passando os campos\n   * setados como `key: true`.\n   *\n   * > `DELETE {end-point}/{keys}`\n   *\n   * ```\n   *  <po-page-dynamic-table\n   *    [p-actions]=\"{ remove: true }\"\n   *    [p-fields]=\"[ { property: 'id', key: true } ]\"\n   *    p-service=\"/api/po-samples/v1/people\"\n   *    ...>\n   *  </po-page-dynamic-table>\n   * ```\n   *\n   * ResquisiÃ§Ã£o disparada, onde a propriedade `id` Ã© igual a 2:\n   *\n   * ```\n   *  DELETE /api/po-samples/v1/people/2 HTTP/1.1\n   *  Host: localhost:4000\n   *  Connection: keep-alive\n   *  Accept: application/json, text/plain\n   *  ...\n   * ```\n   *\n   * Para a aÃ§Ã£o `removeAll`, serÃ¡ feito uma requisiÃ§Ã£o de exclusÃ£o em lote para esse mesmo endpoint passando, uma lista\n   * de objetos com os campos setados como `key: true` via `payload`.\n   *\n   * > `DELETE {end-point}`\n   *\n   * > `Payload: [ {key}, {key} ... {key} ]`\n   *\n   * ```\n   *  <po-page-dynamic-table\n   *    [p-actions]=\"{ removeAll: true }\"\n   *    [p-fields]=\"[ { property: 'id', key: true } ]\"\n   *    p-service=\"/api/po-samples/v1/people\"\n   *    ...>\n   *  </po-page-dynamic-table>\n   * ```\n   *\n   * ResquisiÃ§Ã£o disparada, onde foram selecionados 3 itens para serem removidos:\n   *\n   * ```\n   *  DELETE /api/po-samples/v1/people HTTP/1.1\n   *  Host: localhost:4000\n   *  Connection: keep-alive\n   *  Accept: application/json, text/plain\n   *  ...\n   * ```\n   *\n   * Request payload:\n   *\n   * ```\n   * [{\"id\":2},{\"id\":4},{\"id\":5}]\n   * ```\n   *\n   * > Caso esteja usando metadados com o template, serÃ¡ disparado uma requisiÃ§Ã£o na inicializaÃ§Ã£o do template para buscar\n   * > os metadados da pÃ¡gina passando o tipo do metadado esperado e a versÃ£o cacheada pelo browser.\n   * >\n   * > `GET {end-point}/metadata?type=list&version={version}`\n   */\n  @Input('p-service-api') serviceApi: string;\n\n  /** TÃ­tulo da pÃ¡gina. */\n  @Input('p-title') title: string;\n\n  get columns() {\n    return [...this._columns];\n  }\n\n  get duplicates() {\n    return [...this._duplicates];\n  }\n\n  get filters() {\n    return [...this._filters];\n  }\n\n  get keys() {\n    return [...this._keys];\n  }\n\n  private setFieldsProperties(fields: Array<any>) {\n    this._filters = fields.filter(field => field.filter === true);\n    this._columns = fields.filter(field => field.visible === undefined || field.visible === true);\n    this._keys = fields.filter(field => field.key === true).map(field => field.property);\n    this._duplicates = fields.filter(field => field.duplicate === true).map(field => field.property);\n  }\n\n}\n","import { ActivatedRoute, Route, Router } from '@angular/router';\nimport { Component, Input, OnInit, OnDestroy } from '@angular/core';\n\nimport { Subscription, Observable, EMPTY, throwError, concat } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport {\n  PoDialogConfirmOptions,\n  PoDialogService,\n  PoNotificationService,\n  PoPageAction,\n  PoTableAction,\n  PoTableColumnSort,\n  PoTableColumnSortType\n} from '@portinari/portinari-ui';\n\nimport * as util from '../../utils/util';\n\nimport { PoPageDynamicDetailComponent } from '../po-page-dynamic-detail/po-page-dynamic-detail.component';\n\nimport { PoPageDynamicListBaseComponent } from './po-page-dynamic-list-base.component';\nimport { PoPageDynamicService } from '../../services/po-page-dynamic/po-page-dynamic.service';\nimport { PoPageDynamicTableActions } from './interfaces/po-page-dynamic-table-actions.interface';\nimport { PoPageDynamicTableOptions } from './interfaces/po-page-dynamic-table-options.interface';\nimport { PoPageCustomizationService } from './../../services/po-page-customization/po-page-customization.service';\nimport { PoPageDynamicOptionsSchema } from './../../services/po-page-customization/po-page-dynamic-options.interface';\nimport { PoPageDynamicTableMetaData } from './interfaces/po-page-dynamic-table-metadata.interface';\n\ntype UrlOrPoCustomizationFunction = string | (() => PoPageDynamicTableOptions );\n\nexport const poPageDynamicTableLiteralsDefault = {\n  en: {\n    pageAction: 'New',\n    pageActionRemoveAll: 'Delete',\n    tableActionView: 'View',\n    tableActionEdit: 'Edit',\n    tableActionDuplicate: 'Duplicate',\n    tableActionDelete: 'Delete',\n    confirmRemoveTitle: 'Confirm delete',\n    confirmRemoveMessage: 'Are you sure you want to delete this record? You can not undo this action.',\n    confirmRemoveAllTitle: 'Confirm batch deletion',\n    confirmRemoveAllMessage: 'Are you sure you want to delete all these records? You can not undo this action.',\n    loadDataErrorNotification: 'Service not found',\n    removeSuccessNotification: 'Item deleted successfully',\n    removeAllSuccessNotification: 'Items deleted successfully'\n  },\n  es: {\n    pageAction: 'Nuevo',\n    pageActionRemoveAll: 'Borrar',\n    tableActionView: 'Visualizar',\n    tableActionEdit: 'Editar',\n    tableActionDuplicate: 'Duplicar',\n    tableActionDelete: 'Borrar',\n    confirmRemoveTitle: 'Confirmar la exclusiÃ³n',\n    confirmRemoveMessage: 'Â¿EstÃ¡ seguro de que desea eliminar este registro? No puede deshacer esta acciÃ³n.',\n    confirmRemoveAllTitle: 'Confirmar la exclusiÃ³n por lotes',\n    confirmRemoveAllMessage: 'Â¿EstÃ¡ seguro de que desea eliminar todos estos registros? No puede deshacer esta acciÃ³n.',\n    loadDataErrorNotification: 'Servicio no informado.',\n    removeSuccessNotification: 'Elemento eliminado con Ã©xito',\n    removeAllSuccessNotification: 'Elementos eliminados con Ã©xito'\n  },\n  pt: {\n    pageAction: 'Novo',\n    pageActionRemoveAll: 'Excluir',\n    tableActionView: 'Visualizar',\n    tableActionEdit: 'Editar',\n    tableActionDuplicate: 'Duplicar',\n    tableActionDelete: 'Excluir',\n    confirmRemoveTitle: 'Confirmar exclusÃ£o',\n    confirmRemoveMessage: 'Tem certeza de que deseja excluir esse registro? VocÃª nÃ£o poderÃ¡ desfazer essa aÃ§Ã£o.',\n    confirmRemoveAllTitle: 'Confirmar exclusÃ£o em lote',\n    confirmRemoveAllMessage: 'Tem certeza de que deseja excluir todos esses registros? VocÃª nÃ£o poderÃ¡ desfazer essa aÃ§Ã£o.',\n    loadDataErrorNotification: 'ServiÃ§o nÃ£o informado.',\n    removeSuccessNotification: 'Item excluido com sucesso',\n    removeAllSuccessNotification: 'Items excluidos com sucesso'\n  }\n};\n\n/**\n * @docsExtends PoPageDynamicListBaseComponent\n *\n * @description\n *\n * O `po-page-dynamic-table` Ã© uma pÃ¡gina que exibe uma lista de registros em uma tabela baseado em uma lista de fields,\n * o mesmo tambÃ©m suporta metadados conforme especificado na documentaÃ§Ã£o.\n *\n * ### UtilizaÃ§Ã£o via rota\n *\n * Ao utilizar as rotas para carregar o template, o `page-dynamic-table` disponibiliza propriedades para\n * poder especificar o endpoint dos dados e dos metadados. Exemplo de utilizaÃ§Ã£o:\n *\n * ```\n * {\n *   path: 'people',\n *   component: PoPageDynamicTableComponent,\n *   data: {\n *     serviceApi: 'http://localhost:3000/v1/people', // endpoint dos dados\n *     serviceMetadataApi: 'http://localhost:3000/v1/metadata' // endpoint dos metadados\n *   }\n * }\n * ```\n *\n * Para carregar com um recurso jÃ¡ existente, deve ser incluÃ­do um parÃ¢metro na rota chamado `id`:\n *\n * ```\n * {\n *   path: 'people/:id',\n *   component: PoPageDynamicTableComponent,\n *   data: {\n *     serviceApi: 'http://localhost:3000/v1/people', // endpoint dos dados\n *     serviceMetadataApi: 'http://localhost:3000/v1/metadata' // endpoint dos metadados\n *   }\n * }\n * ```\n *\n * A requisiÃ§Ã£o dos metadados Ã© feita na inicializaÃ§Ã£o do template para buscar os metadados da pÃ¡gina passando o\n * tipo do metadado esperado e a versÃ£o cacheada pelo browser.\n *\n * O formato esperado na resposta da requisiÃ§Ã£o estÃ¡ especificado na interface\n * [PoPageDynamicTableMetadata](/documentation/po-page-dynamic-table#po-page-dynamic-table-metadata). Por exemplo:\n *\n * ```\n *  {\n *   version: 1,\n *   title: 'Person Table',\n *   fields: [\n *     { property: 'id', key: true, disabled: true },\n *     { property: 'status' },\n *     { property: 'name' },\n *     { property: 'nickname' },\n *     { property: 'birthdate', label: 'Birth date' },\n *     { property: 'genre' },\n *     { property: 'city' },\n *     { property: 'country' }\n *   ]\n * }\n * ```\n *\n * > Caso o endpoint dos metadados nÃ£o seja especificado, serÃ¡ feito uma requisiÃ§Ã£o utilizando o `serviceApi` da seguinte forma:\n * ```\n * GET {end-point}/metadata?type=list&version={version}\n * ```\n *\n * @example\n *\n * <example name=\"po-page-dynamic-table-basic\" title=\"Portinari Page Dynamic Table Basic\">\n *  <file name=\"sample-po-page-dynamic-table-basic/sample-po-page-dynamic-table-basic.component.html\"> </file>\n *  <file name=\"sample-po-page-dynamic-table-basic/sample-po-page-dynamic-table-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-dynamic-table-users\" title=\"Portinari Page Dynamic Table - Users\">\n *  <file name=\"sample-po-page-dynamic-table-users/sample-po-page-dynamic-table-users.component.html\"> </file>\n *  <file name=\"sample-po-page-dynamic-table-users/sample-po-page-dynamic-table-users.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-page-dynamic-table',\n  templateUrl: './po-page-dynamic-table.component.html',\n  providers: [ PoPageDynamicService ]\n})\nexport class PoPageDynamicTableComponent extends PoPageDynamicListBaseComponent implements OnInit, OnDestroy {\n\n  private _actions: PoPageDynamicTableActions = {};\n  private _pageActions: Array<PoPageAction> = [];\n  private _tableActions: Array<PoTableAction> = [];\n\n  private page: number = 1;\n  private params = {};\n  private sortedColumn: PoTableColumnSort;\n  private subscriptions: Array<Subscription> = [];\n\n  hasNext = false;\n  items = [];\n  literals = {\n    ...poPageDynamicTableLiteralsDefault[util.poLocaleDefault],\n    ...poPageDynamicTableLiteralsDefault[util.browserLanguage()]\n  };\n\n  /**\n   * FunÃ§Ã£o ou serviÃ§o que serÃ¡ executado na inicializaÃ§Ã£o do componente.\n   *\n   * A propriedade aceita os seguintes tipos:\n   * - `string`: *Endpoint* usado pelo componente para requisiÃ§Ã£o via `POST`.\n   * - `function`: MÃ©todo que serÃ¡ executado.\n   *\n   * O retorno desta funÃ§Ã£o deve ser do tipo `PoPageDynamicTableOptions`,\n   * onde o usuÃ¡rio poderÃ¡ customizar novos campos, breadcrumb, title e actions\n   *\n   * Por exemplo:\n   *\n   * ```\n   * getPageOptions(): PoPageDynamicTableOptions {\n   * return {\n   *   actions:\n   *     { new: 'new', edit: 'edit/:id', remove: true },\n   *   fields: [\n   *     { property: 'idCard', gridColumns: 6 }\n   *   ]\n   * };\n   * }\n   *\n   * ```\n   * Para referenciar a sua funÃ§Ã£o utilize a propriedade `bind`, por exemplo:\n   * ```\n   *  [p-load]=\"onLoadOptions.bind(this)\"\n   * ```\n   */\n  @Input('p-load') onLoad: string | (() => PoPageDynamicTableOptions );\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * AÃ§Ãµes da pÃ¡gina e da tabela.\n   */\n  @Input('p-actions') set actions(value: PoPageDynamicTableActions) {\n    this._actions = value && typeof value === 'object' && Object.keys(value).length > 0 ? value : {};\n\n    this.setPageActions(this.actions);\n    this.setRemoveAllAction();\n    this.setTableActions(this.actions);\n  }\n\n  get actions(): PoPageDynamicTableActions {\n    return this._actions;\n  }\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private poDialogService: PoDialogService,\n    private poNotification: PoNotificationService,\n    private poPageDynamicService: PoPageDynamicService,\n    private poPageCustomizationService: PoPageCustomizationService\n    ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.loadDataFromAPI();\n  }\n\n  ngOnDestroy() {\n    if (this.subscriptions) {\n      this.subscriptions.forEach(subscription => {\n        subscription.unsubscribe();\n      });\n    }\n  }\n  onAdvancedSearch(filter) {\n    this.subscriptions.push(this.loadData({ page: 1, ...filter }).subscribe());\n    this.params = filter;\n  }\n\n  onChangeDisclaimers(disclaimers) {\n    const filter = {};\n\n    disclaimers.forEach(disclaimer => {\n      filter[disclaimer.property] = disclaimer.value;\n    });\n\n    this.onAdvancedSearch(filter);\n  }\n\n  onQuickSearch(filter) {\n    this.subscriptions.push(this.loadData(filter ? { page: 1, search: filter } : undefined).subscribe());\n    this.params = filter ? { search: filter } : {};\n  }\n\n  onSort(sortedColumn: PoTableColumnSort) {\n    this.sortedColumn = sortedColumn;\n  }\n\n  showMore() {\n    this.subscriptions.push(this.loadData({ page: ++this.page, ...this.params }).subscribe());\n  }\n\n  get hasActionRemoveAll() {\n    return !!this.actions.removeAll;\n  }\n\n  get pageActions() {\n    return [...this._pageActions];\n  }\n\n  get tableActions() {\n    return this._tableActions;\n  }\n\n  private confirmRemove(item) {\n    const confirmOptions: PoDialogConfirmOptions = {\n      title: this.literals.confirmRemoveTitle,\n      message: this.literals.confirmRemoveMessage,\n      confirm: this.remove.bind(this, item)\n    };\n\n    this.poDialogService.confirm(confirmOptions);\n  }\n\n  private confirmRemoveAll() {\n    const confirmOptions: PoDialogConfirmOptions = {\n      title: this.literals.confirmRemoveAllTitle,\n      message: this.literals.confirmRemoveAllMessage,\n      confirm: this.removeAll.bind(this)\n    };\n\n    this.poDialogService.confirm(confirmOptions);\n  }\n\n  private formatUniqueKey(item) {\n    const keys = util.mapObjectByProperties(item, this.keys);\n\n    return util.valuesFromObject(keys).join('|');\n  }\n\n  private getOrderParam(sortedColumn: PoTableColumnSort = { type: undefined }) {\n    const { column, type } = sortedColumn;\n\n    if (!column) {\n      return {};\n    }\n\n    if (type === PoTableColumnSortType.Descending) {\n      return { order: `-${column.property}` };\n    }\n\n    return { order: `${column.property}` };\n  }\n\n  private loadData(params: { page?: number, search?: string } = {}) {\n    if (!this.serviceApi) {\n      this.poNotification.error(this.literals.loadDataErrorNotification);\n      return throwError(this.literals.loadDataErrorNotification);\n    }\n\n    const orderParam = this.getOrderParam(this.sortedColumn);\n    const defaultParams: any = { page: 1, pageSize: 10 };\n    const fullParams: any = { ...defaultParams, ...params, ...orderParam };\n\n    return this.poPageDynamicService.getResources(fullParams).pipe(\n     tap(response => {\n      this.items = fullParams.page === 1 ? response.items : [...this.items, ...response.items];\n      this.page = fullParams.page;\n      this.hasNext = response.hasNext;\n     })\n   );\n  }\n\n  private getMetadata(serviceApi: string): Observable<PoPageDynamicTableMetaData> {\n    if (serviceApi) {\n      return this.poPageDynamicService.getMetadata<PoPageDynamicTableMetaData>().pipe(\n       tap(response => {\n         this.autoRouter = response.autoRouter || this.autoRouter;\n         this.actions = response.actions || this.actions;\n         this.breadcrumb = response.breadcrumb || this.breadcrumb;\n         this.fields = response.fields || this.fields;\n         this.title = response.title || this.title;\n       })\n     );\n    }\n\n    return EMPTY;\n  }\n\n  // @todo Validar rotas na mÃ£o pois se existir uma rota '**' o catch do navigation nÃ£o funciona.\n  private navigateTo(route: {path: string, component?, url?: string, params?: any}, forceStopAutoRouter: boolean = false) {\n    this.router.navigate([route.url || route.path], { queryParams: route.params })\n      .catch(() => {\n        if (forceStopAutoRouter || !this.autoRouter) {\n          return;\n        }\n\n        this.router.config.unshift(<Route>{\n          path: route.path, component: route.component,  data: { serviceApi: this.serviceApi, autoRouter: true }\n        });\n\n        this.navigateTo(route, true);\n      });\n  }\n\n  private openDetail(path: string, item) {\n    const url = this.resolveUrl(item, path);\n\n    this.navigateTo({ path, url, component: PoPageDynamicDetailComponent });\n  }\n\n  private openDuplicate(path: string, item) {\n    const duplicates = util.mapObjectByProperties(item, this.duplicates);\n\n    this.navigateTo({ path, params: { duplicate: JSON.stringify(duplicates) } });\n  }\n\n  private openEdit(path: string, item) {\n    const url = this.resolveUrl(item, path);\n\n    this.navigateTo({ path, url });\n  }\n\n  private openNew(path: string) {\n    this.navigateTo({ path });\n  }\n\n  /**\n   * Caso exista mais de um identificador, serÃ¡ concatenado com '|'.\n   *\n   * Ex: { id: 1, company: 'portinari' }\n   *\n   * Para o endpoint /resources/:id serÃ¡ executada a url /resources/1|portinari\n   */\n  private remove(item) {\n    const uniqueKey = this.formatUniqueKey(item);\n\n    this.poPageDynamicService.deleteResource(uniqueKey).toPromise().then(() => {\n      this.removeLocalItems([item]);\n\n      this.poNotification.success(this.literals.removeSuccessNotification);\n    });\n  }\n\n  private removeAll() {\n    // TODO: usar propriedade nova pra validar os itens selecionados\n    const selectedItems = this.items.filter(item => item.$selected);\n\n    if (selectedItems.length === 0) {\n      // TODO: usar propriedade nova pra validar os itens selecionados\n      return;\n    }\n\n    const keysSelectedItems = util.mapArrayByProperties(selectedItems, this.keys);\n\n    this.poPageDynamicService.deleteResources(keysSelectedItems).toPromise().then(() => {\n      this.removeLocalItems(selectedItems);\n\n      this.poNotification.success(this.literals.removeAllSuccessNotification);\n    });\n  }\n\n  private removeLocalItems(items = []) {\n    items.forEach(itemRemoved => {\n      const indexItemRemoved = this.items.indexOf(itemRemoved);\n\n      this.items.splice(indexItemRemoved, 1);\n    });\n  }\n\n  private resolveUrl(item: any, path: string) {\n    const uniqueKey = this.formatUniqueKey(item);\n\n    return path.replace(/:id/g, uniqueKey);\n  }\n\n  private setPageActions(actions: PoPageDynamicTableActions) {\n    if (actions) {\n      this._pageActions = [\n        { label: this.literals.pageAction, action: this.openNew.bind(this, actions.new), disabled: !this._actions.new },\n      ];\n    }\n  }\n\n  private setRemoveAllAction() {\n    if (this._actions.removeAll) {\n      this._pageActions.push({\n      label: this.literals.pageActionRemoveAll, action: this.confirmRemoveAll.bind(this),\n        disabled: !this._actions.removeAll\n      });\n    }\n  }\n\n  private setTableActions(actions: PoPageDynamicTableActions) {\n    if (actions) {\n      this._tableActions = [\n        { action: this.openDetail.bind(this, actions.detail), label: this.literals.tableActionView, visible: !!this._actions.detail },\n        { action: this.openEdit.bind(this, actions.edit), label: this.literals.tableActionEdit, visible: !!this._actions.edit },\n        { action: this.openDuplicate.bind(this, actions.duplicate), label: this.literals.tableActionDuplicate,\n          visible: !!this._actions.duplicate\n        },\n        { action: this.confirmRemove.bind(this), label: this.literals.tableActionDelete, separator: true, type: 'danger',\n          visible: !!this._actions.remove\n        }\n      ];\n    }\n  }\n\n  private loadDataFromAPI() {\n    const { serviceApi, serviceMetadataApi } = this.activatedRoute.snapshot.data;\n    this.serviceApi = serviceApi || this.serviceApi;\n    this.poPageDynamicService.configServiceApi({ endpoint: this.serviceApi, metadata: serviceMetadataApi });\n    const metadata$ = this.getMetadata(serviceApi);\n    const data$ = this.loadData();\n    const customOption$ = this.loadOptionsOnInitialize(this.onLoad);\n    this.subscriptions.push(concat(metadata$, data$, customOption$).subscribe());\n  }\n\n  private loadOptionsOnInitialize(onLoad: UrlOrPoCustomizationFunction) {\n\n    if (onLoad) {\n      return this.getPoDynamicPageOptions(onLoad).pipe(\n        tap(responsePoOption => this.poPageCustomizationService.changeOriginalOptionsToNewOptions(this, responsePoOption)));\n    }\n\n    return EMPTY;\n  }\n\n  private getPoDynamicPageOptions(onLoad: UrlOrPoCustomizationFunction): Observable<PoPageDynamicTableOptions> {\n    const originalOption: PoPageDynamicTableOptions = {\n      fields: this.fields,\n      actions: this.actions,\n      breadcrumb: this.breadcrumb,\n      title: this.title\n    };\n\n    const pageOptionSchema: PoPageDynamicOptionsSchema<PoPageDynamicTableOptions> = {\n      schema: [\n        {\n          nameProp: 'fields',\n          merge: true,\n          keyForMerge: 'property'\n        },\n        {\n          nameProp: 'actions',\n          merge: true\n        },\n        {\n          nameProp: 'breadcrumb'\n        },\n        {\n          nameProp: 'title'\n        }\n      ]\n    };\n\n    return this.poPageCustomizationService.getCustomOptions(onLoad, originalOption, pageOptionSchema);\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoTableModule } from '@portinari/portinari-ui';\n\nimport { PoPageDynamicSearchModule } from '../po-page-dynamic-search/po-page-dynamic-search.module';\n\nimport { PoPageDynamicTableComponent } from './po-page-dynamic-table.component';\nimport { PoPageCustomizationModule } from '../../services/po-page-customization/po-page-customization.module';\nimport { PoPageDynamicModule } from '../../services/po-page-dynamic/po-page-dynamic.module';\n\n/**\n * @description\n *\n * MÃ³dulo do template do po-page-dynamic-search.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n\n    PoTableModule,\n    PoPageDynamicSearchModule,\n    PoPageCustomizationModule,\n    PoPageDynamicModule\n  ],\n  declarations: [\n    PoPageDynamicTableComponent\n  ],\n  exports: [\n    PoPageDynamicTableComponent\n  ]\n})\nexport class PoPageDynamicTableModule { }\n","import { PoJobSchedulerInternal } from './interfaces/po-job-scheduler-internal.interface';\n\nexport class PoPageJobSchedulerInternal implements PoJobSchedulerInternal {\n\n  periodicity = 'single';\n  firstExecution = new Date();\n  firstExecutionHour = this.getCurrentHour(this.firstExecution);\n  recurrent = true;\n\n  private getCurrentHour(date: Date): string {\n    const hours = date.getHours() < 10 ? '0' + date.getHours() : date.getHours();\n    const minutes = date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes();\n\n    return `${hours}:${minutes}`;\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Input } from '@angular/core';\n\nimport { PoBreadcrumb } from '@portinari/portinari-ui';\n\nimport { PoJobSchedulerInternal } from './interfaces/po-job-scheduler-internal.interface';\nimport { PoPageJobSchedulerInternal } from './po-page-job-scheduler-internal';\nimport { PoPageJobSchedulerService } from './po-page-job-scheduler.service';\n\n/**\n * @description\n *\n * O `po-page-job-scheduler` Ã© uma pÃ¡gina para criaÃ§Ã£o e atualizaÃ§Ã£o do *Job Scheduler* de forma simplificada, apenas informando\n * o serviÃ§o (endpoint) para consumo, sem a necessidade de criar componentes e tratamentos dos dados.\n */\nexport class PoPageJobSchedulerBaseComponent {\n\n  /** Objeto com propriedades do breadcrumb. */\n  @Input('p-breadcrumb') breadcrumb?: PoBreadcrumb = { items: [] };\n\n  /**\n   * Endpoint usado pelo template para requisiÃ§Ã£o do recurso que serÃ¡ utilizado para criaÃ§Ã£o e ediÃ§Ã£o.\n   *\n   * #### Processos\n   *\n   * Em sua inicializaÃ§Ã£o serÃ¡ verificado a existÃªncia do endpoint `{end-point}/processes`.\n   * Caso o endpoint seja vÃ¡lido, serÃ¡ utilizado um componente para selecionar o processo e filtrÃ¡-los.\n   * Caso nÃ£o seja vÃ¡lido, serÃ¡ utilizado um campo de entrada de texto para informar o endpoint.\n   *\n   * Para realizar o filtro de busca do processo, serÃ¡ enviado o conteÃºdo a ser filtrado atravÃ©s da propriedade *search*.\n   * Os processos devem retornar uma lista de objetos que seguem a definiÃ§Ã£o de dados abaixo:\n   *\n   * ```\n   * GET {end-point}/processes?search=ac04\n   * ...\n   * { \"processID\": \"string\", \"description\": \"string\" }\n   * ```\n   *\n   * Para retornar parÃ¢metros dos processos, serÃ¡ realizado um `GET` como exemplificado abaixo.\n   * Os parÃ¢metros devem retornar uma lista de objetos que seguem a interface [PoDynamicFormField](/documentation/po-dynamic-form).\n   *\n   * ```\n   * GET {end-point}/processes/:id/parameters\n   * ...\n   * { items: [{ \"property\": \"server\" }, { \"property\": \"program\" }] }\n   * ```\n   *\n   * #### Salvar e Atualizar\n   *\n   * Para salvar o recurso, serÃ¡ feito uma requisiÃ§Ã£o de criaÃ§Ã£o no mesmo endpoint, passando os valores\n   * preenchidos pelo usuÃ¡rio via *payload*. Abaixo uma requisiÃ§Ã£o `POST` disparada,\n   * onde as propriedades do *Job Scheduler* foram preenchidas:\n   *\n   * ```\n   *  POST /api/po-samples/v1/jobschedulers HTTP/1.1\n   *  Host: localhost:4000\n   *  Connection: keep-alive\n   *  Accept: application/json, text/plain\n   *  ...\n   * ```\n   *\n   * *Request payload*:\n   *\n   * ```\n   * { \"firstExecution\": \"2018-12-07T00:00:01-00:00\", \"recurrent\": true, \"daily\": { \"hour\": 10, \"minute\": 12 }, \"processID\": \"ac0405\" }\n   * ```\n   *\n   * Caso queira que o template carregue um recurso jÃ¡ existente, deve ser incluÃ­do um parÃ¢metro na rota chamado `id`.\n   *\n   * Exemplo de configuraÃ§Ã£o de rota:\n   *\n   * ```\n   *  RouterModule.forRoot([\n   *    ...\n   *    { path: 'edit/:id', component: ExampleJobSchedulerComponent },\n   *    ...\n   *  ],\n   * ```\n   *\n   * Baseado nisso, na inicializaÃ§Ã£o do template serÃ¡ disparado uma requisiÃ§Ã£o para buscar o recurso que serÃ¡ editado.\n   *\n   * ```\n   * GET {end-point}/{id}\n   * ```\n   *\n   * Ao salvar o recurso serÃ¡ disparado um `PUT` com os dados preenchidos. Abaixo uma requisiÃ§Ã£o `PUT` disparada,\n   * onde a propriedade *recurrent* e *daily* foram preenchidas/atualizadas e o `id` da url Ã© 1:\n   *\n   * ```\n   *  PUT /api/po-samples/v1/jobschedulers/1 HTTP/1.1\n   *  Host: localhost:4000\n   *  Connection: keep-alive\n   *  Accept: application/json, text/plain\n   *  ...\n   * ```\n   *\n   * *Request payload*:\n   *\n   * ```\n   * { \"firstExecution\": \"2018-12-07T00:00:01-00:00\", \"recurrent\": false, \"daily\": { \"hour\": 11, \"minute\": 30 }, \"processID\": \"ac0405\" }\n   * ```\n   */\n  @Input('p-service-api') serviceApi: string;\n\n  /** TÃ­tulo da pÃ¡gina. */\n  @Input('p-title') title: string;\n\n  model: PoJobSchedulerInternal = new PoPageJobSchedulerInternal();\n\n  constructor(protected poPageJobSchedulerService: PoPageJobSchedulerService) {}\n\n  protected loadData(id: string | number) {\n    if (!id) {\n      this.model = new PoPageJobSchedulerInternal();\n      return;\n    }\n\n    this.poPageJobSchedulerService.getResource(id).toPromise().then((response: PoJobSchedulerInternal) => {\n      this.model = response;\n    }).catch(() => {\n      this.model = new PoPageJobSchedulerInternal();\n    });\n\n  }\n\n  protected markAsDirtyInvalidControls(controls: { [key: string]: AbstractControl } ) {\n    for (const key in controls) {\n      if (controls.hasOwnProperty(key)) {\n        const control = controls[key];\n\n        if (control.invalid) {\n          control.markAsDirty();\n        }\n      }\n    }\n  }\n\n}\n","export const poPageJobSchedulerLiteralsDefault = {\n  en: {\n    at: 'at',\n    back: 'Back',\n    next: 'Next',\n    periodicity: 'Periodicity',\n    execution: 'Execution',\n    process: 'Process',\n    enterProcess: 'Enter a process',\n    recurrent: 'Recurrent',\n    single: 'Single',\n    daily: 'Daily',\n    weekly: 'Weekly',\n    monthly: 'Monthly',\n    scheduling: 'Scheduling',\n    parameterization: 'Parameterization',\n    conclude: 'Conclude',\n    firstExecution: 'First Execution',\n    hour: 'Hour',\n    day: 'Day',\n    weekDays: 'Week days',\n    sunday: 'Sunday',\n    monday: 'Monday',\n    tuesday: 'Tuesday',\n    wednesday: 'Wednesday',\n    thursday: 'Thursday',\n    friday: 'Friday',\n    saturday: 'Saturday',\n    parameters: 'Parameters',\n    yes: 'Yes',\n    no: 'No',\n    notReported: 'Not reported',\n    periodicityData: 'Periodicity data',\n    confirmation: 'Confirmation',\n    confirmSaveMessage: 'Are you sure you want to complete this schedule?',\n    confirmUpdateMessage: 'Are you sure you want to update this schedule?',\n    saveNotificationSuccessUpdate: 'Successfully updated scheduling',\n    saveNotificationSuccessSave: 'Successfully saved scheduling',\n    parametersNotFound: 'Parameters not found.'\n  },\n  es: {\n    at: 'a las',\n    back: 'Volver',\n    next: 'Avanzar',\n    periodicity: 'Periodicidad',\n    execution: 'EjecuciÃ³n',\n    process: 'Proceso',\n    enterProcess: 'Informe un proceso',\n    recurrent: 'Recurrente',\n    single: 'Ãnica',\n    daily: 'Diaria',\n    weekly: 'Semanal',\n    monthly: 'Mensual',\n    scheduling: 'ProgramaciÃ³n',\n    parameterization: 'ParametrizaciÃ³n',\n    conclude: 'Completar',\n    firstExecution: 'Primera ejecuciÃ³n',\n    hour: 'Horario',\n    day: 'DÃ­a',\n    weekDays: 'Dias de la semana',\n    sunday: 'Domingo',\n    monday: 'Lunes',\n    tuesday: 'Martes',\n    wednesday: 'MiÃ©rcoles',\n    thursday: 'Jueves',\n    friday: 'Viernes',\n    saturday: 'SÃ¡bado',\n    parameters: 'ParÃ¡metros',\n    yes: 'SÃ­',\n    no: 'No',\n    notReported: 'No informado',\n    periodicityData: 'Dados da periodicidade',\n    confirmation: 'ConfirmaciÃ³n',\n    confirmSaveMessage: 'Â¿EstÃ¡ seguro de que desea completar esta programaciÃ³n de proceso?',\n    confirmUpdateMessage: 'Â¿EstÃ¡ seguro de que desea cambiar esta programaciÃ³n de proceso?',\n    saveNotificationSuccessUpdate: 'ProgramaciÃ³n de proceso actualizada con Ã©xito.',\n    saveNotificationSuccessSave: 'ProgramaciÃ³n de proceso salvo con Ã©xito.',\n    parametersNotFound: 'No se encontraron parÃ¡metros.'\n  },\n  pt: {\n    at: 'Ã s',\n    back: 'Voltar',\n    next: 'AvanÃ§ar',\n    periodicity: 'Periodicidade',\n    execution: 'ExecuÃ§Ã£o',\n    process: 'Processo',\n    enterProcess: 'Informe um processo',\n    recurrent: 'Recorrente',\n    single: 'Ãnica',\n    daily: 'DiÃ¡ria',\n    weekly: 'Semanal',\n    monthly: 'Mensal',\n    scheduling: 'Agendamento',\n    parameterization: 'ParametrizaÃ§Ã£o',\n    conclude: 'Concluir',\n    firstExecution: 'Primeira execuÃ§Ã£o',\n    hour: 'HorÃ¡rio',\n    day: 'Dia',\n    weekDays: 'Dias de semana',\n    sunday: 'Domingo',\n    monday: 'Segunda-feira',\n    tuesday: 'TerÃ§a-feira',\n    wednesday: 'Quarta-feira',\n    thursday: 'Quinta-feira',\n    friday: 'Sexta-feira',\n    saturday: 'SÃ¡bado',\n    parameters: 'ParÃ¢metros',\n    yes: 'Sim',\n    no: 'NÃ£o',\n    notReported: 'NÃ£o informado',\n    periodicityData: 'Dados da periodicidade',\n    confirmation: 'ConfirmaÃ§Ã£o',\n    confirmSaveMessage: 'Tem certeza que deseja concluir este agendamento de processo?',\n    confirmUpdateMessage: 'Tem certeza que deseja alterar este agendamento de processo?',\n    saveNotificationSuccessUpdate: 'Agendamento de processo atualizado com sucesso.',\n    saveNotificationSuccessSave: 'Agendamento de processo salvo com sucesso.',\n    parametersNotFound: 'ParÃ¢metros nÃ£o foram encontrados.'\n  }\n};\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { addZero, convertDateToISOExtended } from '../../utils/util';\nimport { PoDynamicFormField } from '@portinari/portinari-ui';\n\nimport { PoJobScheduler } from './interfaces/po-job-scheduler.interface';\nimport { PoJobSchedulerInternal } from './interfaces/po-job-scheduler-internal.interface';\n\n@Injectable()\nexport class PoPageJobSchedulerService {\n\n  private endpoint = '/';\n\n  readonly headers: HttpHeaders = new HttpHeaders({\n    'X-PORTINARI-SCREEN-LOCK': 'true'\n  });\n\n  constructor(private http: HttpClient) { }\n\n  configServiceApi(config: { endpoint?: string } = {}) {\n    this.endpoint = config.endpoint;\n  }\n\n  // Cria um recurso\n  createResource(resource): Observable<any> {\n    const jobScheduler = this.convertToJobScheduler(resource);\n\n    return this.http.post(`${this.endpoint}`, jobScheduler, { headers: this.headers });\n  }\n\n  getHeadProcesses() {\n    const headers = { 'X-Portinari-No-Error': 'true' };\n\n    return this.http.head(`${this.endpoint}/processes`, { headers });\n  }\n\n  // Busca parametros pelo processo id\n  getParametersByProcess(processId: string | number): Observable<any> {\n    return this.http.get(`${this.endpoint}/processes/${processId}/parameters`, { headers: this.headers })\n    .pipe(map((resource: { items: Array<PoDynamicFormField> }) => resource.items));\n  }\n\n  // Busca um Ãºnico recurso\n  getProcess(id: string | number): Observable<any> {\n    return this.http.get(`${this.endpoint}/processes/${id}`, { headers: this.headers });\n  }\n\n  // Busca uma lista de processos\n  getProcesses(params: {} = {}): Observable<any> {\n    return this.http.get(`${this.endpoint}/processes`, { params });\n  }\n\n  // Busca um Ãºnico recurso\n  getResource(id: string | number): Observable<any> {\n    return this.http.get(`${this.endpoint}/${id}`, { headers: this.headers })\n      .pipe(map(resource => this.convertToJobSchedulerInternal(resource)));\n  }\n\n  // Atualiza um recurso\n  updateResource(id, resource): Observable<any> {\n    const jobScheduler = this.convertToJobScheduler(resource);\n\n    return this.http.put(`${this.endpoint}/${id}`, jobScheduler, { headers: this.headers });\n  }\n\n  private convertToJobScheduler(jobSchedulerInternal): PoJobScheduler {\n    const jobScheduler = { ...jobSchedulerInternal };\n\n    if (jobSchedulerInternal.periodicity) {\n\n      if (jobSchedulerInternal.periodicity === 'single') {\n        jobScheduler.recurrent = false;\n      } else {\n        Object.assign(jobScheduler, this.convertToPeriodicity(jobSchedulerInternal));\n      }\n\n    }\n\n    if (jobSchedulerInternal.firstExecutionHour) {\n      jobScheduler.firstExecution =\n        this.replaceHourFirstExecution(jobSchedulerInternal.firstExecution, jobSchedulerInternal.firstExecutionHour);\n    }\n\n    if (!Object.keys(this.returnValidExecutionParameter(jobScheduler.executionParameter)).length) {\n      delete jobScheduler.executionParameter;\n    }\n\n    this.removeInvalidKeys(jobScheduler);\n\n    return jobScheduler;\n  }\n\n  private convertToJobSchedulerInternal(jobScheduler = <any> {}): PoJobSchedulerInternal {\n    const jobSchedulerInternal = { ...jobScheduler };\n\n    if (jobScheduler.firstExecution) {\n      jobSchedulerInternal.firstExecutionHour = this.getHourFirstExecution(jobScheduler.firstExecution);\n    }\n\n    Object.assign(jobSchedulerInternal, this.convertToPeriodicityInternal(jobScheduler));\n\n    this.removeInvalidKeys(jobSchedulerInternal, ['weekly', 'monthly', 'daily']);\n\n    return jobSchedulerInternal;\n  }\n\n  private convertToPeriodicity(value: { periodicity: string , dayOfMonth?: string, daysOfWeek?: number, hour?: string }) {\n    const newValue = {};\n    const valuePeriodicity = value.periodicity;\n\n    if (valuePeriodicity) {\n      newValue[valuePeriodicity] = {};\n\n      if (valuePeriodicity === 'monthly') {\n        newValue[valuePeriodicity].day = value.dayOfMonth ? parseInt(value.dayOfMonth, 10) : 0;\n      } else if (valuePeriodicity === 'weekly') {\n        newValue[valuePeriodicity].daysOfWeek = value.daysOfWeek;\n      }\n\n      newValue[valuePeriodicity].hour = value.hour ? parseInt(value.hour.split(':')[0], 10) : 0;\n      newValue[valuePeriodicity].minute = value.hour ? parseInt(value.hour.split(':')[1], 10) : 0;\n    }\n\n    return newValue;\n  }\n\n  private convertToPeriodicityInternal(value = <any> {}) {\n    if (value.monthly) {\n      return {\n        periodicity: 'monthly',\n        hour: `${addZero(value.monthly.hour)}:${addZero(value.monthly.minute)}`,\n        dayOfMonth: value.monthly.day\n      };\n    } else if (value.daily) {\n      return {\n        periodicity: 'daily',\n        hour: `${addZero(value.daily.hour)}:${addZero(value.daily.minute)}`\n      };\n    } else if (value.weekly) {\n      return {\n        periodicity: 'weekly',\n        hour: `${addZero(value.weekly.hour)}:${addZero(value.weekly.minute)}`,\n        daysOfWeek: [...value.weekly.daysOfWeek]\n      };\n    } else {\n      return {\n        periodicity: 'single'\n      };\n    }\n  }\n\n  private getCurrentHour(date: Date): string {\n    const hours = addZero(date.getHours());\n    const minutes = addZero(date.getMinutes());\n\n    return `${hours}:${minutes}`;\n  }\n\n  private getHourFirstExecution(firstExecutionDate: string): string {\n    return this.getCurrentHour(new Date(firstExecutionDate));\n  }\n\n  private removeInvalidKeys(value: object, keys?: Array<string>) {\n    const invalidKeys = keys || ['periodicity', 'hour', 'minute', 'day', 'daysOfWeek', 'dayOfMonth', 'firstExecutionHour'];\n\n    Object.keys(value).forEach(key => {\n      if (invalidKeys.includes(key)) {\n        delete value[key];\n      }\n    });\n  }\n\n  private replaceHourFirstExecution(date: string, time: string): string {\n    const firstExecutionDate = new Date(date);\n\n    const timeSplited = time.split(':');\n\n    const hours = parseInt(timeSplited[0], 10);\n    const minutes = parseInt(timeSplited[1], 10);\n\n    firstExecutionDate.setHours(hours, minutes);\n\n    return convertDateToISOExtended(firstExecutionDate);\n  }\n\n  private returnValidExecutionParameter(parameter: object) {\n    const newParameter = { ...parameter };\n\n    for (const key in newParameter) {\n      if (newParameter.hasOwnProperty(key) && newParameter[key] === undefined) {\n        delete newParameter[key];\n      }\n    }\n\n    return newParameter;\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { PoLookupFilter } from '@portinari/portinari-ui';\n\nimport { PoPageJobSchedulerService } from './po-page-job-scheduler.service';\n\n@Injectable()\nexport class PoPageJobSchedulerLookupService implements PoLookupFilter {\n\n  constructor(private poPageJobSchedulerService: PoPageJobSchedulerService) { }\n\n  getFilteredData(search: string, page: number, pageSize: number): Observable<any> {\n    const params = { page, pageSize, search };\n\n    return this.poPageJobSchedulerService.getProcesses(params);\n  }\n\n  getObjectByValue(processId: string): Observable<any> {\n    return this.poPageJobSchedulerService.getProcess(processId);\n  }\n\n}\n","import { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { Observable } from 'rxjs';\n\nimport {\n  PoDialogService,\n  PoDynamicFormField,\n  PoNotificationService,\n  PoPageAction,\n  PoStepperItem,\n  PoStepperStatus\n} from '@portinari/portinari-ui';\n\nimport * as util from './../../utils/util';\n\nimport { PoJobSchedulerInternal } from './interfaces/po-job-scheduler-internal.interface';\nimport { PoPageJobSchedulerInternal } from './po-page-job-scheduler-internal';\nimport { PoPageJobSchedulerBaseComponent } from './po-page-job-scheduler-base.component';\nimport { poPageJobSchedulerLiteralsDefault } from './po-page-job-scheduler-literals';\nimport { PoPageJobSchedulerLookupService } from './po-page-job-scheduler-lookup.service';\nimport { PoPageJobSchedulerService } from './po-page-job-scheduler.service';\n\n/**\n * @docsExtends PoPageJobSchedulerBaseComponent\n *\n * @example\n *\n * <example name=\"po-page-job-scheduler-basic\" title=\"Portinari Page Job Scheduler Basic\">\n *  <file name=\"sample-po-page-job-scheduler-basic/sample-po-page-job-scheduler-basic.component.html\"> </file>\n *  <file name=\"sample-po-page-job-scheduler-basic/sample-po-page-job-scheduler-basic.component.ts\"> </file>\n * </example>\n *\n */\n@Component({\n  selector: 'po-page-job-scheduler',\n  templateUrl: './po-page-job-scheduler.component.html',\n  encapsulation: ViewEncapsulation.None,\n  styles: [`\n    po-container .po-container {\n      overflow-y: unset;\n    }\n  `]\n})\nexport class PoPageJobSchedulerComponent extends PoPageJobSchedulerBaseComponent implements OnInit {\n\n  isEdit = false;\n  literals = {\n    ...poPageJobSchedulerLiteralsDefault[util.poLocaleDefault],\n    ...poPageJobSchedulerLiteralsDefault[util.browserLanguage()]\n  };\n  parameters: Array<PoDynamicFormField> = [];\n  saveOperation: Observable<any>;\n  step: number = 1;\n\n  private backPageAction: PoPageAction = {\n    label: this.literals.back,\n    action: this.nextStepOperation.bind(this, 'back'),\n    disabled: this.isDisabledBack.bind(this)\n  };\n\n  private concludePageActions: Array<PoPageAction> = [\n    {\n      label: this.literals.conclude,\n      action: this.confirmJobScheduler.bind(this)\n    },\n    { ...this.backPageAction }\n  ];\n\n  private nextPageActions: Array<PoPageAction> = [\n    {\n      label: this.literals.next,\n      action: this.nextStepOperation.bind(this, 'next'),\n      disabled: this.isDisabledAdvance.bind(this)\n    },\n    { ...this.backPageAction }\n  ];\n\n  jobSchedulerActions: Array<PoPageAction> = [\n    ...this.nextPageActions\n  ];\n\n  readonly steps: Array<PoStepperItem> = [\n    { label: this.literals.scheduling },\n    { label: this.literals.parameterization },\n    { label: this.literals.conclude }\n  ];\n\n  @ViewChild('schedulerExecution', { static: true }) schedulerExecution: { form: NgForm };\n  @ViewChild('schedulerParameters', { static: true }) schedulerParameters: { form: NgForm };\n\n  constructor(\n    public poPageDynamicLookupService: PoPageJobSchedulerLookupService,\n    private activatedRoute: ActivatedRoute,\n    private poDialogService: PoDialogService,\n    private poNotification: PoNotificationService,\n    private router: Router,\n    poPageJobSchedulerService: PoPageJobSchedulerService) {\n      super(poPageJobSchedulerService);\n    }\n\n  get stepperOrientation(): 'horizontal' | 'vertical' {\n    return window.innerWidth > 481 && window.innerWidth < 960 ? 'horizontal' : 'vertical';\n  }\n\n  ngOnInit() {\n    const paramId = this.activatedRoute.snapshot.params['id'];\n\n    this.isEdit = !!paramId;\n\n    this.poPageJobSchedulerService.configServiceApi({ endpoint: this.serviceApi });\n\n    this.loadData(paramId);\n  }\n\n  changePageActionsBySteps(currentStep: number, nextStep: number) {\n    const stepsLength = this.steps.length;\n\n    if (nextStep === stepsLength) {\n    this.jobSchedulerActions = [ ...this.concludePageActions ];\n\n    } else if (currentStep === stepsLength && nextStep < currentStep) {\n\n    this.jobSchedulerActions = [ ...this.nextPageActions ];\n    }\n  }\n\n  nextStep(stepNumber: number) {\n\n    if (stepNumber > 1 && this.schedulerExecution.form.invalid) {\n      this.markAsDirtyInvalidControls(this.schedulerExecution.form.controls);\n      return;\n    }\n\n    if (stepNumber > 2 && (this.schedulerParameters && this.schedulerParameters.form && this.schedulerParameters.form.invalid)) {\n      this.markAsDirtyInvalidControls(this.schedulerParameters.form.controls);\n      return;\n    }\n\n    this.changePageActionsBySteps(this.step, stepNumber);\n\n    const steps = this.steps[this.step - 1];\n    this.step = stepNumber;\n\n    if (steps) {\n      steps.status = PoStepperStatus.Done;\n    }\n  }\n\n  onChangeProcess(process: { processId: string, existAPI: boolean }) {\n    if (process.existAPI && process.processId) {\n      this.getParametersByProcess(process.processId);\n\n      if (!this.isEdit) {\n        this.model.executionParameter = {};\n      }\n\n      return;\n    }\n\n  }\n\n  private confirmJobScheduler() {\n    const paramId = this.activatedRoute.snapshot.params['id'];\n\n    const confirmMessage = paramId ? this.literals.confirmUpdateMessage : this.literals.confirmSaveMessage;\n\n    this.poDialogService.confirm({\n      title: this.literals.confirmation,\n      message: confirmMessage,\n      confirm: () => {\n        const model = Object.assign({}, this.model);\n\n        this.save(model, paramId);\n      }\n    });\n\n  }\n\n  private async emitSuccessMessage(msgSuccess: any, saveOperation: Observable<any>) {\n    await saveOperation.toPromise();\n    this.poNotification.success(msgSuccess);\n    this.resetJobSchedulerForm();\n  }\n\n  private getParametersByProcess(process: any) {\n\n    this.poPageJobSchedulerService.getParametersByProcess(process).subscribe(parameters => {\n      this.parameters = parameters;\n    });\n\n  }\n\n  private isDisabledAdvance(): boolean {\n    return this.schedulerExecution ? this.schedulerExecution.form.invalid : false;\n  }\n\n  private isDisabledBack(): boolean {\n    return this.step === 1;\n  }\n\n  private nextStepOperation(operation?: 'back' | 'next') {\n    const stepNumber = operation === 'back' ? this.step - 1 : this.step + 1;\n\n    this.nextStep(stepNumber);\n  }\n\n  private resetJobSchedulerForm() {\n    this.schedulerExecution.form.reset();\n\n    // radiogroup nÃ£o estava atribuindo novo valor, fica vermelho sem o timetout.\n    setTimeout(() => {\n      this.model = new PoPageJobSchedulerInternal();\n\n      this.step = 1;\n      this.steps.forEach(step => {\n        step.status = PoStepperStatus.Default;\n      });\n\n      this.jobSchedulerActions = [...this.nextPageActions];\n    });\n\n  }\n\n  private save(model: PoJobSchedulerInternal, paramId) {\n    const saveOperation = paramId\n      ? this.poPageJobSchedulerService.updateResource(paramId, model)\n      : this.poPageJobSchedulerService.createResource(model);\n\n    const msgSuccess = paramId ? this.literals.saveNotificationSuccessUpdate : this.literals.saveNotificationSuccessSave;\n\n    this.emitSuccessMessage(msgSuccess, saveOperation);\n  }\n\n}\n","import { AfterViewInit, Component, EventEmitter, Input, OnInit, Output, TemplateRef, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { PoCheckboxGroupOption, PoRadioGroupOption } from '@portinari/portinari-ui';\n\nimport { isTypeof } from '../../../utils/util';\n\nimport { PoPageJobSchedulerLookupService } from '../po-page-job-scheduler-lookup.service';\nimport { PoPageJobSchedulerService } from '../po-page-job-scheduler.service';\n\n@Component({\n  selector: 'po-page-job-scheduler-execution',\n  templateUrl: 'po-page-job-scheduler-execution.component.html'\n})\nexport class PoPageJobSchedulerExecutionComponent implements OnInit, AfterViewInit {\n\n  private _value: any = {};\n\n  dayPattern = '^(3[0-1]|[0-2][0-9]|[1-9]|0[1-9])$';\n  existProcessAPI = true;\n  minDateFirstExecution = new Date();\n  periodicityOptions: Array<PoRadioGroupOption> = [];\n  periodicityTemplates: { daily: TemplateRef<any>, weekly: TemplateRef<any>, monthly: TemplateRef<any> } ;\n  timePattern = '^(2[0-3]|[01][0-9]):?([0-5][0-9])$';\n  weekDays: Array<PoCheckboxGroupOption> = [];\n\n  @ViewChild('formExecution', { static: true }) form: NgForm;\n\n  // templates\n  @ViewChild('dailyTemplate', { static: true }) dailyTemplate;\n  @ViewChild('monthlyTemplate', { static: true }) monthlyTemplate;\n  @ViewChild('weeklyTemplate', { static: true }) weeklyTempalte;\n\n  @Input('p-is-edit') isEdit: boolean = false;\n\n  @Input('p-literals') literals = <any> {};\n\n  @Input('p-value') set value(value: any) {\n    this._value = value && isTypeof(value, 'object') ? value : {};\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  @Output('p-change-process') changeProcess: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(\n    private poPageJobSchedulerService: PoPageJobSchedulerService,\n    public poPageJobSchedulerLookup: PoPageJobSchedulerLookupService) { }\n\n  get startDateFirstExecution() {\n    return this.isEdit ? undefined : this.minDateFirstExecution;\n  }\n\n  ngAfterViewInit() {\n\n    setTimeout(() => {\n      this.subscribeProcessIdValueChanges();\n    });\n\n  }\n\n  ngOnInit() {\n    this.periodicityTemplates = {\n      daily: this.dailyTemplate,\n      monthly: this.monthlyTemplate,\n      weekly: this.weeklyTempalte\n    };\n\n    this.checkExistsProcessesAPI();\n\n    this.periodicityOptions = this.getPeriodicityOptions();\n    this.weekDays = this.getWeekDays();\n  }\n\n  private checkExistsProcessesAPI() {\n    this.poPageJobSchedulerService.getHeadProcesses().subscribe(undefined, error => {\n      this.existProcessAPI = false;\n    });\n  }\n\n  private getPeriodicityOptions() {\n    return [\n      { label: this.literals.single, value: 'single' },\n      { label: this.literals.daily, value: 'daily' },\n      { label: this.literals.weekly, value: 'weekly' },\n      { label: this.literals.monthly, value: 'monthly' }\n    ];\n  }\n\n  private getWeekDays() {\n    return [\n      { label: this.literals.sunday, value: 'Sunday' },\n      { label: this.literals.monday, value: 'Monday' },\n      { label: this.literals.tuesday, value: 'Tuesday' },\n      { label: this.literals.wednesday, value: 'Wednesday' },\n      { label: this.literals.thursday, value: 'Thursday' },\n      { label: this.literals.friday, value: 'Friday' },\n      { label: this.literals.saturday, value: 'Saturday' }\n    ];\n  }\n\n  private subscribeProcessIdValueChanges() {\n    this.form.controls['processID'].valueChanges.subscribe(processId => {\n      this.changeProcess.emit({ processId, existAPI: this.existProcessAPI });\n    });\n  }\n\n}\n","import { AfterViewInit, Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { PoDynamicFormField } from '@portinari/portinari-ui';\n\n@Component({\n  selector: 'po-page-job-scheduler-parameters',\n  templateUrl: 'po-page-job-scheduler-parameters.component.html'\n})\nexport class PoPageJobSchedulerParametersComponent implements AfterViewInit {\n\n  @ViewChild('parametersForm', { static: true }) form: NgForm;\n\n  @Input('p-literals') literals = <any> {};\n\n  @Input('p-parameters') parameters: Array<PoDynamicFormField> = [];\n\n  @Input('p-value') value;\n\n  @Output('p-valueChange') valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n  ngAfterViewInit() {\n    if (this.form) {\n      setTimeout(() => {\n\n        this.form.valueChanges.subscribe(value => {\n          this.valueChange.emit(value);\n        });\n\n      });\n    }\n  }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { DatePipe } from '@angular/common';\n\nimport { PoDynamicViewField, PoInfoOrientation } from '@portinari/portinari-ui';\n\nimport { PoJobSchedulerInternal } from '../interfaces/po-job-scheduler-internal.interface';\n\n@Component({\n  selector: 'po-page-job-scheduler-summary',\n  templateUrl: 'po-page-job-scheduler-summary.component.html'\n})\nexport class PoPageJobSchedulerSummaryComponent implements OnInit {\n\n  executionValue = '';\n  firstExecutionValue = '';\n  infoOrientation = PoInfoOrientation.Horizontal;\n  periodicityValue = '';\n  recurrentValue = '';\n\n  @Input('p-literals') literals = <any> {};\n\n  @Input('p-parameters') parameters: Array<PoDynamicViewField> = [];\n\n  @Input('p-value') value: PoJobSchedulerInternal = <any> {};\n\n  constructor(private datePipe: DatePipe) {}\n\n  ngOnInit() {\n    const { periodicity, hour, dayOfMonth, daysOfWeek, recurrent, firstExecution, firstExecutionHour } = this.value;\n\n    this.periodicityValue = this.getPeriodicityLabel(periodicity);\n    this.executionValue = this.getExecutionValue(periodicity, hour, daysOfWeek, dayOfMonth);\n    this.firstExecutionValue = this.getFirstExecutionLabel(firstExecution, firstExecutionHour);\n    this.recurrentValue = this.getRecurrentValue(recurrent);\n  }\n\n  private getExecutionValue(periodicity: string, hour?: string, daysOfWeek?: Array<string>, dayOfMonth?: number) {\n    switch (periodicity) {\n      case 'daily':\n        return this.getHourLabel(hour);\n      case 'monthly':\n        return this.getMonthlyLabelExecution(dayOfMonth, hour);\n      case 'weekly':\n        return this.getWeeklyLabelExecution(daysOfWeek, hour);\n      default:\n        return this.literals.notReported;\n    }\n  }\n\n  private getFirstExecutionLabel(firstExecution: Date, firstExecutionHour?: string): string {\n    if (firstExecution) {\n      const date = this.datePipe.transform(firstExecution, 'dd/MM/yyyy', '-0200');\n\n      return `${date} ${this.getHourLabel(firstExecutionHour)}`;\n    } else {\n      return this.literals.notReported;\n    }\n  }\n\n  private getHourLabel(hour: string) {\n    return `${this.literals.at} ${hour || '00:00'}h`;\n  }\n\n  private getMonthlyLabelExecution(dayOfMonth: number, hour: string) {\n    const hourLabel = this.getHourLabel(hour);\n\n    return `${this.literals.day} ${dayOfMonth} ${hourLabel}`;\n  }\n\n  private getPeriodicityLabel(periodicity) {\n    switch (periodicity) {\n      case 'daily':\n        return this.literals.daily;\n      case 'monthly':\n        return this.literals.monthly;\n      case 'weekly':\n        return this.literals.weekly;\n      default:\n        return this.literals.single;\n    }\n  }\n\n  private getRecurrentValue(recurrent: boolean): string {\n    return recurrent ? this.literals.yes : this.literals.no;\n  }\n\n  private getSorterWeekDays() {\n    return {\n      'sunday': 0,\n      'monday': 1,\n      'tuesday': 2,\n      'wednesday': 3,\n      'thursday': 4,\n      'friday': 5,\n      'saturday': 6\n    };\n  }\n\n  private getTranslateWeekDay(day: string): string {\n    const days = {\n      Sunday: this.literals.sunday,\n      Monday: this.literals.monday,\n      Tuesday: this.literals.tuesday,\n      Wednesday: this.literals.wednesday,\n      Thursday: this.literals.thursday,\n      Friday: this.literals.friday,\n      Saturday: this.literals.saturday,\n    };\n\n    return days[day] || '';\n  }\n\n  private getWeekDaysLabel(days: Array<string> = []): string {\n    const weekDaysSorted = this.sortWeekDays(days);\n\n    return weekDaysSorted.map(day => this.getTranslateWeekDay(day)).join(', ');\n  }\n\n  private getWeeklyLabelExecution(daysOfWeek: Array<string>, hour: string) {\n    if (daysOfWeek && Array.isArray(daysOfWeek)) {\n      return `${this.getWeekDaysLabel(daysOfWeek)} ${this.getHourLabel(hour)}`;\n    } else {\n      return this.literals.notReported;\n    }\n  }\n\n  private sortWeekDays(days: Array<string> = []) {\n    const sorterWeekDays = this.getSorterWeekDays();\n\n    return days.sort((a: string, b: string) => {\n      const currDay = a.toLowerCase();\n      const nextDay = b.toLowerCase();\n\n      return sorterWeekDays[currDay] > sorterWeekDays[nextDay] ? 1 : -1;\n    });\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport {\n  PoButtonModule,\n  PoContainerModule,\n  PoDialogModule,\n  PoDividerModule,\n  PoDynamicModule,\n  PoFieldModule,\n  PoInfoModule,\n  PoPageModule,\n  PoStepperModule,\n  PoWidgetModule\n} from '@portinari/portinari-ui';\n\nimport { PoPageJobSchedulerComponent } from './po-page-job-scheduler.component';\nimport { PoPageJobSchedulerExecutionComponent } from './po-page-job-scheduler-execution/po-page-job-scheduler-execution.component';\nimport { PoPageJobSchedulerLookupService } from './po-page-job-scheduler-lookup.service';\nimport { PoPageJobSchedulerParametersComponent } from './po-page-job-scheduler-parameters/po-page-job-scheduler-parameters.component';\nimport { PoPageJobSchedulerService } from './po-page-job-scheduler.service';\nimport { PoPageJobSchedulerSummaryComponent } from './po-page-job-scheduler-summary/po-page-job-scheduler-summary.component';\n\n@NgModule({\n  declarations: [\n    PoPageJobSchedulerComponent,\n    PoPageJobSchedulerExecutionComponent,\n    PoPageJobSchedulerParametersComponent,\n    PoPageJobSchedulerSummaryComponent\n  ],\n  exports: [\n    PoPageJobSchedulerComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    PoButtonModule,\n    PoContainerModule,\n    PoDialogModule,\n    PoDividerModule,\n    PoDynamicModule,\n    PoFieldModule,\n    PoInfoModule,\n    PoPageModule,\n    PoStepperModule,\n    PoWidgetModule\n  ],\n  providers: [\n    PoPageJobSchedulerService,\n    PoPageJobSchedulerLookupService\n  ]\n})\nexport class PoPageJobSchedulerModule { }\n","/**\n * @usedBy PoPageLoginComponent\n *\n * @description\n *\n * *Enum* para definiÃ§Ã£o do tipo de autenticaÃ§Ã£o.\n */\nexport enum PoPageLoginAuthenticationType {\n\n  /** AutenticaÃ§Ã£o Basic */\n  Basic = 'Basic',\n\n  /** AutenticaÃ§Ã£o Bearer */\n  Bearer = 'Bearer',\n\n}\n","import { Subscription } from 'rxjs';\nimport { EventEmitter, Input, OnDestroy, Output } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { convertToBoolean, convertToInt, getShortBrowserLanguage, isExternalLink, isTypeof, poLocaleDefault } from './../../utils/util';\n\nimport { PoPageLogin } from './interfaces/po-page-login.interface';\nimport { PoPageLoginAuthenticationType } from './enums/po-page-login-authentication-type.enum';\nimport { PoPageLoginCustomField } from './interfaces/po-page-login-custom-field.interface';\nimport { PoPageLoginLiterals } from './interfaces/po-page-login-literals.interface';\nimport { PoPageLoginRecovery } from './interfaces/po-page-login-recovery.interface';\nimport { PoPageLoginService } from './po-page-login.service';\n\nconst poPageLoginContentMaxLength = 40;\n\nexport const poPageLoginLiteralsDefault = {\n  en: <PoPageLoginLiterals> {\n    title: 'Welcome',\n    loginErrorPattern: 'Invalid Login',\n    loginHint: `Your login user was given to you at your first day.\n    If you don't have this information contact support`,\n    loginPlaceholder: 'Insert your e-mail',\n    passwordErrorPattern: 'Invalid Password',\n    passwordPlaceholder: 'Insert your password',\n    customFieldErrorPattern: 'Invalid value',\n    customFieldPlaceholder: 'Please enter a value',\n    rememberUser: 'Automatic login',\n    rememberUserHint: 'You can disable this option in system configuration',\n    submitLabel: 'Enter',\n    submittedLabel: 'Loading...',\n    forgotPassword: 'Forgot your Password?',\n    highlightInfo: '',\n    registerUrl: 'New register',\n    titlePopover: 'Oops!',\n    forgotYourPassword: 'Forgot your password?',\n    ifYouTryHarder: 'If you try ',\n    attempts: '{0} more time(s) ',\n    yourUserWillBeBlocked: 'without success your user will be blocked and you will be left 24 hours without being able to access :(',\n    createANewPasswordNow: 'Better create a new password now! You will be able to log into the system right away.',\n    iForgotMyPassword: 'I forgot my password'\n  },\n  es: <PoPageLoginLiterals> {\n    title: 'Bienvenido',\n    loginErrorPattern: 'Login invÃ¡lido',\n    loginHint: `Su usuario ha sido entregado para usted en su primer dÃ­a.\n    Si no tiene esta informaciÃ³n, pÃ³ngase en contacto con el soporte tÃ©cnico`,\n    loginPlaceholder: 'Inserte su e-mail',\n    passwordErrorPattern: 'ContraseÃ±a invÃ¡lida',\n    passwordPlaceholder: 'Inserte su contraseÃ±a',\n    customFieldErrorPattern: 'Valor no vÃ¡lido.',\n    customFieldPlaceholder: 'Por favor introduzca un valor',\n    rememberUser: 'Inicio de sesiÃ³n automÃ¡ticamente',\n    rememberUserHint: 'Puede deshabilitar esta opciÃ³n en el menÃº del sistema.',\n    submitLabel: 'Entrar',\n    submittedLabel: 'Cargando...',\n    forgotPassword: 'Olvidaste tu contraseÃ±a?',\n    highlightInfo: '',\n    registerUrl: 'Nuevo registro',\n    titlePopover: 'Opa!',\n    forgotYourPassword: 'Olvidaste tu contraseÃ±a?',\n    ifYouTryHarder: 'Si intenta mÃ¡s ',\n    attempts: '{0} vez/veces ',\n    yourUserWillBeBlocked: 'sin Ã©xito su usuario sera bloqueado y usted vÃ¡s permanecer 24 horas sin poder acceder a :(',\n    createANewPasswordNow: 'Â¡Mejor crear una nueva contraseÃ±a ahora! Usted podrÃ¡ entrar en el sistema inmediatamente despuÃ©s.',\n    iForgotMyPassword: 'Olvide mi contraseÃ±a'\n  },\n  pt: <PoPageLoginLiterals> {\n    title: 'Bem-vindo',\n    loginErrorPattern: 'Login invÃ¡lido',\n    loginHint: `Seu usuÃ¡rio foi entregue a vocÃª no seu primeiro dia.\n    Caso nÃ£o tenha mais essa informaÃ§Ã£o contacte o suporte`,\n    loginPlaceholder: 'Insira seu e-mail',\n    passwordErrorPattern: 'Senha invÃ¡lida',\n    passwordPlaceholder: 'Insira sua senha',\n    customFieldErrorPattern: 'Valor invÃ¡lido.',\n    customFieldPlaceholder: 'Por favor insira um valor',\n    rememberUser: 'Logar automaticamente',\n    rememberUserHint: 'VocÃª pode desabilitar essa opÃ§Ã£o no menu do sistema',\n    submitLabel: 'Entrar',\n    submittedLabel: 'Carregando...',\n    forgotPassword: 'Esqueceu sua senha?',\n    highlightInfo: '',\n    registerUrl: 'Novo registro',\n    titlePopover: 'Opa!',\n    forgotYourPassword: 'Esqueceu sua senha?',\n    ifYouTryHarder: 'Se tentar mais ',\n    attempts: '{0} vez(es) ',\n    yourUserWillBeBlocked: 'sem sucesso seu usuÃ¡rio serÃ¡ bloqueado e vocÃª fica 24 horas sem poder acessar :(',\n    createANewPasswordNow: 'Melhor criar uma senha nova agora! VocÃª vai poder entrar no sistema logo em seguida.',\n    iForgotMyPassword: 'Esqueci minha senha'\n  },\n  ru: <PoPageLoginLiterals> {\n    title: 'ÐÐ¾Ð±ÑÐ¾ Ð¿Ð¾Ð¶Ð°Ð»Ð¾Ð²Ð°ÑÑ!',\n    loginErrorPattern: 'ÐÐµÐ²ÐµÑÐ½ÑÐ¹ Ð»Ð¾Ð³Ð¸Ð½',\n    loginHint: `ÐÐ°Ñ Ð»Ð¾Ð³Ð¸Ð½ Ð±ÑÐ» Ð¿ÑÐµÐ´Ð¾ÑÑÐ°Ð²Ð»ÐµÐ½ Ð²Ð°Ð¼ Ð² Ð¿ÐµÑÐ²ÑÐ¹ Ð´ÐµÐ½Ñ.\n    ÐÑÐ»Ð¸ Ñ Ð²Ð°Ñ Ð½ÐµÑ ÑÑÐ¾Ð¹ Ð¸Ð½ÑÐ¾ÑÐ¼Ð°ÑÐ¸Ð¸, Ð¾Ð±ÑÐ°ÑÐ¸ÑÐµÑÑ Ð² ÑÐ»ÑÐ¶Ð±Ñ Ð¿Ð¾Ð´Ð´ÐµÑÐ¶ÐºÐ¸`,\n    loginPlaceholder: 'ÐÑÑÐ°Ð²ÑÑÐµ ÑÐ²Ð¾Ð¹ Ð°Ð´ÑÐµÑ ÑÐ»ÐµÐºÑÑÐ¾Ð½Ð½Ð¾Ð¹ Ð¿Ð¾ÑÑÑ',\n    passwordErrorPattern: 'ÐÐµÐ²ÐµÑÐ½ÑÐ¹ Ð¿Ð°ÑÐ¾Ð»Ñ',\n    passwordPlaceholder: 'ÐÐ²ÐµÐ´Ð¸ÑÐµ ÑÐ²Ð¾Ð¹ Ð¿Ð°ÑÐ¾Ð»Ñ',\n    customFieldErrorPattern: 'ÐÐµÐ²ÐµÑÐ½Ð¾Ðµ Ð·Ð½Ð°ÑÐµÐ½Ð¸Ðµ.',\n    customFieldPlaceholder: 'ÐÐ¾Ð¶Ð°Ð»ÑÐ¹ÑÑÐ°, Ð²Ð²ÐµÐ´Ð¸ÑÐµ Ð·Ð½Ð°ÑÐµÐ½Ð¸Ðµ',\n    rememberUser: 'ÐÐ²ÑÐ¾Ð¼Ð°ÑÐ¸ÑÐµÑÐºÐ¸Ð¹ Ð²ÑÐ¾Ð´',\n    rememberUserHint: 'ÐÑ Ð¼Ð¾Ð¶ÐµÑÐµ Ð¾ÑÐºÐ»ÑÑÐ¸ÑÑ ÑÑÑ Ð¾Ð¿ÑÐ¸Ñ Ð² ÐºÐ¾Ð½ÑÐ¸Ð³ÑÑÐ°ÑÐ¸Ð¸ ÑÐ¸ÑÑÐµÐ¼Ñ',\n    submitLabel: 'ÐÐ¾Ð¹ÑÐ¸',\n    submittedLabel: '3Ð°Ð³ÑÑÐ·ÐºÐ°...',\n    forgotPassword: 'ÐÐ°Ð±ÑÐ»Ð¸ Ð¿Ð°ÑÐ¾Ð»Ñ?',\n    highlightInfo: '',\n    registerUrl: 'ÐÐ¾Ð²ÑÐ¹ ÑÐµÐ³Ð¸ÑÑÑ',\n    titlePopover: 'ÐÐ¹!',\n    forgotYourPassword: 'ÐÐ°Ð±ÑÐ»Ð¸ Ð¿Ð°ÑÐ¾Ð»Ñ?',\n    ifYouTryHarder: 'ÐÑÐ»Ð¸ Ð²Ñ Ð±ÐµÐ·ÑÑÐ¿ÐµÑÐ½Ð¾ Ð¿Ð¾Ð¿ÑÑÐ°ÐµÑÐµÑÑ Ð²Ð¾Ð¹ÑÐ¸ ÐµÑÐµ ',\n    attempts: '{0} ÑÐ°Ð·(Ð°) ',\n    yourUserWillBeBlocked: 'ÐÐ°Ñ Ð¿Ð¾Ð»ÑÐ·Ð¾Ð²Ð°ÑÐµÐ»Ñ Ð±ÑÐ´ÐµÑ Ð·Ð°Ð±Ð»Ð¾ÐºÐ¸ÑÐ¾Ð²Ð°Ð½, Ð¸ ÐÑ Ð¾ÑÑÐ°Ð½ÐµÑÐµÑÑ Ð½Ð° 24 ÑÐ°ÑÐ° Ð±ÐµÐ· Ð²Ð¾Ð·Ð¼Ð¾Ð¶Ð½Ð¾ÑÑÐ¸ Ð´Ð¾ÑÑÑÐ¿Ð° :(',\n    createANewPasswordNow: 'ÐÑÑÑÐµ ÑÐ¾Ð·Ð´Ð°Ð¹ÑÐµ Ð½Ð¾Ð²ÑÐ¹ Ð¿Ð°ÑÐ¾Ð»Ñ ÑÐµÐ¹ÑÐ°Ñ!Â ÐÑ ÑÐ¼Ð¾Ð¶ÐµÑÐµ ÑÑÐ°Ð·Ñ Ð²Ð¾Ð¹ÑÐ¸ Ð² ÑÐ¸ÑÑÐµÐ¼Ñ.',\n    iForgotMyPassword: 'Ð¯ Ð·Ð°Ð±ÑÐ» ÑÐ²Ð¾Ð¹ Ð¿Ð°ÑÐ¾Ð»Ñ'\n  }\n};\n\nexport const poPageLoginLiteralIn = {\n  en: 'in',\n  es: 'en',\n  pt: 'em',\n  ru: 'Ð²'\n};\n\nexport const poPageLoginLiteralTo = {\n  en: 'to',\n  es: 'al',\n  pt: 'ao',\n  ru: 'Ðº'\n};\n\n/**\n * @description\n *\n * O componente `po-page-login` Ã© utilizado como template para tela de login.\n * Com ele Ã© possÃ­vel definirmos valores para usuÃ¡rio, senha e definir aÃ§Ãµes para recuperaÃ§Ã£o de senha e gravaÃ§Ã£o de dados do usuÃ¡rio.\n * TambÃ©m Ã© possÃ­vel inserir uma imagem em conjunto com um texto de destaque.\n *\n *\n * A propriedade `p-authentication-url` automatiza a rotina do componente e simplifica o processo para autenticaÃ§Ã£o do usuÃ¡rio, bastando\n * definir uma url para requisiÃ§Ã£o da autenticaÃ§Ã£o. A flexibilidade e praticidade podem chegar a um nÃ­vel em que o desenvolvimento\n * da aplicaÃ§Ã£o no *client side* Ã© desprovida de qualquer cÃ³digo-fonte relacionado Ã  rotina de login de usuÃ¡rio.\n * Seu detalhamento para uso pode ser visto logo abaixo em *propriedades*.\n * Caso julgue necessÃ¡rio, pode-se tambÃ©m definir manualmente a rotina do componente.\n *\n *\n * Para que as imagens sejam exibidas corretamente, Ã© necessÃ¡rio incluir o caminho delas ao projeto. Para isso, edite\n * o *assets* no arquivo **angular.json** da aplicaÃ§Ã£o na seguinte ordem:\n * ```\n *   \"assets\": [\n *     \"src/assets\",\n *     \"src/favicon.ico\",\n *     {\n *       \"glob\": \"**\\/*\",\n *       \"input\": \"node_modules/@portinari/style/images\",\n *       \"output\": \"assets/images\"\n *     }\n *   ]\n * ```\n */\nexport abstract class PoPageLoginBaseComponent implements OnDestroy {\n\n  allLoginErrors: Array<string> = [];\n  allPasswordErrors: Array<string> = [];\n  customFieldObject: PoPageLoginCustomField;\n  customFieldType: string;\n  loginSubscription: Subscription;\n  password: string;\n  rememberUser: boolean = false;\n  selectedLanguage: string;\n  showExceededAttemptsWarning = false;\n\n  private _authenticationType: PoPageLoginAuthenticationType = PoPageLoginAuthenticationType.Basic;\n  private _authenticationUrl: string;\n  private _blockedUrl: string;\n  private _contactEmail: string;\n  private _customField: string | PoPageLoginCustomField;\n  private _environment?: string;\n  private _exceededAttemptsWarning?: number;\n  private _hideRememberUser: boolean = false;\n  private _literals: PoPageLoginLiterals;\n  private _loading?: boolean = false;\n  private _login: string;\n  private _loginErrors: Array<string> = [];\n  private _passwordErrors: Array<string> = [];\n  private _productName: string;\n  private _recovery: string | PoPageLoginRecovery | Function;\n  private _registerUrl: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Ao informar um valor do tipo `string`, o mesmo serÃ¡ aplicado como a chave do campo customizado e utilizarÃ¡\n   * os valores padrÃµes contidos na propriedade `literals` como `customFieldErrorPattern` e `customFieldPlaceholder`.\n   *\n   * Existe a possibilidade de informar um objeto que segue a definiÃ§Ã£o da interface `PoPageLoginCustomField`, onde\n   * atravÃ©s dos parÃ¢metros enviados pode gerar um `po-input`, `po-combo` especificamente para serviÃ§os\n   * ou `po-select` para valores fixos.\n   *\n   * Abaixo seguem os exemplos de cada tipo de campo.\n   *\n   * `po-input`:\n   *\n   * ```\n   * {\n   *   property: 'domain',\n   *   value: 'jv01',\n   *   placeholder: 'Enter your domain',\n   *   pattern: '[a-z]',\n   *   errorPattern: 'Invalid value'\n   * }\n   * ```\n   *\n   * `po-combo`:\n   *\n   * ```\n   * {\n   *   property: 'domain',\n   *   value: 'jv01',\n   *   placeholder: 'Enter your domain',\n   *   url: 'https://portinari.io/sample/api/comboOption/domains',\n   *   fieldValue: 'nickname'\n   * }\n   * ```\n   *\n   * `po-select`:\n   *\n   * ```\n   * {\n   *   property: 'domain',\n   *   value: 'jv01',\n   *   placeholder: 'Enter your domain',\n   *   options: [{label: 'Domain 1', value: '1'}, {label: 'Domain 2', value: '2'}]\n   * }\n   * ```\n   *\n   * Caso o customField possua options, url e fieldValue preenchidos, serÃ¡ priorizado o po-select\n   * utilizando o options.\n   *\n   */\n  @Input('p-custom-field') set customField(value: string | PoPageLoginCustomField) {\n    if (value) {\n\n      if (isTypeof(value, 'string')) {\n        this.customFieldType = 'input';\n        this._customField = value;\n        this.customFieldObject = this.getDefaultCustomFieldObject(value);\n        return;\n      }\n\n      if (isTypeof(value, 'object') && !Array.isArray(value) && value['property']) {\n        this._customField = value;\n        this.customFieldObject = <PoPageLoginCustomField> value;\n\n        if (!this.customFieldObject.options && !this.customFieldObject.url) {\n          this.customFieldType = 'input';\n        } else {\n          this.customFieldType = this.customFieldObject.options ? 'select' : 'combo';\n        }\n\n        return;\n      }\n\n    }\n\n    this._customField = undefined;\n    this.customFieldObject = undefined;\n  }\n\n  get customField(): string | PoPageLoginCustomField {\n    return this._customField;\n  }\n\n  /**\n   * O `p-background` permite inserir uma imagem de destaque ao lado direito do formulÃ¡rio de login, caso a propriedade\n   * nÃ£o seja preenchida o formulÃ¡rio serÃ¡ centralizado no espaÃ§o disponÃ­vel.\n   *\n   * A fonte da imagem pode ser de um caminho local ou uma url de um servidor externo.\n   *\n   * AlÃ©m da imagem, Ã© possÃ­vel adicionar um texto informativo por cima da imagem da imagem de destaque, para isso informe\n   * um valor para a literal `highlightInfo`.\n   *\n   * > Veja mais sobre as literais na propriedade `p-literals`.\n   *\n   * Exemplos de valores vÃ¡lidos:\n   * - **local**: `./assets/images/login-background.png`\n   * - **url externa**: `https://portinari.io/assets/images/login-background.png`\n   *\n   * > Essa propriedade Ã© ignorada para aplicaÃ§Ãµes mobile.\n   */\n  @Input('p-background') background?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Personaliza o e-mail que Ã© exibido na mensagem de dica de login padrÃ£o para contato de suporte.\n   */\n  @Input('p-contact-email') set contactEmail(value: string) {\n    this._contactEmail = value;\n  }\n  get contactEmail() {\n    return this._contactEmail;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Valor customizado que sucede o tÃ­tulo de boas-vindas.\n   *\n   * > Esta propriedade Ã© sobreposta se `p-literals` contiver uma definiÃ§Ã£o customizada para a literal `title`.\n   *\n   * > Veja mais sobre as literais na propriedade `p-literals`.\n   *\n   */\n  @Input('p-product-name') set productName(value: string) {\n    this._productName = value;\n  }\n  get productName() {\n    return this._productName;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   * Adiciona uma `tag` abaixo do tÃ­tulo que especifica o ambiente que o usuÃ¡rio estÃ¡ fazendo o login.\n   *\n   * > Essa propriedade limita o texto em 40 caracteres.\n   */\n  @Input('p-environment') set environment(environment: string) {\n    if (environment && environment.length > poPageLoginContentMaxLength) {\n      this._environment = environment.substring(0, poPageLoginContentMaxLength);\n    } else {\n      this._environment = environment;\n    }\n  }\n  get environment() {\n    return this._environment;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   * Exibe um aviso de bloqueio de acordo com a quantidade restante de tentativas.\n   * O aviso serÃ¡ exibido somente se a quantidade for maior que zero.\n   *\n   * > Caso tenha algum valor atribuÃ­do para o atributo `p-authentication-url` e o retorno da requisiÃ§Ã£o estiver atribuindo valor\n   * para o `p-exceeded-attempts-warning`, o valor considerado serÃ¡ o do retorno da requisiÃ§Ã£o.\n   *\n   * @default `0`\n   */\n  @Input('p-exceeded-attempts-warning') set exceededAttemptsWarning(value: number) {\n    this._exceededAttemptsWarning = convertToInt(value);\n    this.showExceededAttemptsWarning = this.exceededAttemptsWarning > 0;\n  }\n\n  get exceededAttemptsWarning(): number {\n    return this._exceededAttemptsWarning;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Esconde a funÃ§Ã£o \"Lembrar usuÃ¡rio\" do formulÃ¡rio de login.\n   *\n   * Quando essa propriedade Ã© setada com `true` a propriedade `rememberUser` enviada no evento `p-login-submit` serÃ¡ sempre\n   * `false`.\n   *\n   * > Veja a propriedade `p-literals` para customizar a literal `rememberUser`.\n   *\n   * @default `false`\n   */\n  @Input('p-hide-remember-user') set hideRememberUser(value: boolean) {\n    this._hideRememberUser = <any>value === '' ? true : convertToBoolean(value);\n\n    if (this._hideRememberUser) {\n      this.rememberUser = false;\n    }\n  }\n  get hideRememberUser(): boolean {\n    return this._hideRememberUser;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com as literais usadas no `po-page-login`.\n   *\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\n   *\n   * ```\n   *  const customLiterals: PoPageLoginLiterals = {\n   *    attempts: '{0} vez(es) ',\n   *    createANewPasswordNow: 'Melhor criar uma senha nova agora! VocÃª vai poder entrar no sistema logo em seguida.',\n   *    forgotPassword: 'Esqueceu sua senha?',\n   *    forgotYourPassword: 'Esqueceu sua senha?',\n   *    highlightInfo: '',\n   *    iForgotMyPassword: 'Esqueci minha senha',\n   *    ifYouTryHarder: 'Se tentar mais ',\n   *    title: 'Seja bem-vindo',\n   *    loginErrorPattern: 'Login obrigatÃ³rio',\n   *    loginHint: 'Caso nÃ£o possua usuÃ¡rio entre em contato com o suporte',\n   *    loginLabel: 'Insira seu usuÃ¡rio',\n   *    loginPlaceholder: 'Insira seu usuÃ¡rio de acesso',\n   *    passwordErrorPattern: 'Senha obrigatÃ³ria',\n   *    passwordLabel: 'Insira sua senha',\n   *    passwordPlaceholder: 'Insira sua senha de acesso',\n   *    customFieldErrorPattern: 'Campo customizado invÃ¡lido',\n   *    customFieldPlaceholder: 'Por favor insira um valor',\n   *    registerUrl: 'Novo registro',\n   *    rememberUser: 'Lembrar usuÃ¡rio',\n   *    rememberUserHint: 'Esta opÃ§Ã£o pode ser desabilitada nas configuraÃ§Ãµes do sistema',\n   *    submitLabel: 'Acessar sistema',\n   *    submittedLabel: 'Carregando...',\n   *    titlePopover: 'Opa!',\n   *    yourUserWillBeBlocked: 'sem sucesso seu usuÃ¡rio serÃ¡ bloqueado e vocÃª fica 24 horas sem poder acessar :('\n   *  };\n   * ```\n   *\n   * Ou passando apenas as literais que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: PoPageLoginLiterals = {\n   *    loginPlaceholder: 'Insira seu usuÃ¡rio de acesso',\n   *    passwordPlaceholder: 'Insira sua senha de acesso',\n   *    submitLabel: 'Acessar sistema'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <po-page-login\n   *   [p-literals]=\"customLiterals\">\n   * </po-page-login>\n   * ```\n   *\n   *  > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do browser (pt, en, es).\n   *  > Ã tambÃ©m possÃ­vel alternar o objeto padrÃ£o de literais atravÃ©s do seletor de idiomas localizado na parte inferior do template,\n   * nesse caso, hÃ¡ tambÃ©m a opÃ§Ã£o do idioma russo.\n   */\n  @Input('p-literals') set literals(value: PoPageLoginLiterals) {\n    this._literals = value;\n  }\n\n  get literals() {\n    return this._literals;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Habilita um estado de carregamento ao botÃ£o de *login*.\n   *\n   * > Ã necessÃ¡rio atribuir `true` Ã  esta propriedade na funÃ§Ã£o definida em `p-login-submit`.\n   *\n   * @default `false`\n   */\n  @Input('p-loading') set loading(value: boolean) {\n    this._loading = convertToBoolean(value);\n  }\n\n  get loading(): boolean {\n    return this._loading;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Valor do modelo do campo de login.\n   */\n  @Input('p-login') set login(value: string) {\n    this._login = value;\n\n    if (!this.authenticationUrl) {\n      this.loginChange.emit(this._login);\n    }\n  }\n\n  get login(): string {\n    return this._login;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caminho para a logomarca localizada na parte superior.\n   *\n   * > Caso seja indefinida o espaÃ§o se mantÃ©m preservado porÃ©m vazio.\n   */\n  @Input('p-logo') logo?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * ExpressÃ£o regular para validar o campo de login, caso a expressÃ£o nÃ£o seja atentida, a literal `loginErrorPattern`\n   * serÃ¡ exibida.\n   *\n   * Exemplos de valores vÃ¡lidos:\n   * - email: `[expressao-regular-email]`\n   * - cpf: `[expressao-regular-cpf]`\n   *\n   * > Veja a propriedade `p-literals` para customizar a literal `loginErrorPattern`.\n   */\n  @Input('p-login-pattern') loginPattern?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Atributo que recebe uma lista de erros e exibe abaixo do campo de login.\n   */\n  @Input('p-login-errors') set loginErrors(value: Array<string>) {\n    this._loginErrors = value || [];\n    this.setLoginErrors(this._loginErrors);\n  }\n  get loginErrors() {\n    return this._loginErrors;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Atributo que recebe uma lista de erros e exibe abaixo do campo de password.\n   */\n  @Input('p-password-errors') set passwordErrors(value: Array<string>) {\n    this._passwordErrors = value || [];\n    this.setPasswordErrors(this._passwordErrors);\n  }\n  get passwordErrors() {\n    return this._passwordErrors;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * ExpressÃ£o regular para validar o campo de password, caso a expressÃ£o nÃ£o seja atentida, a literal `passwordErrorPattern`\n   * serÃ¡ exibida.\n   *\n   * Exemplos de valores vÃ¡lidos:\n   * - Apenas nÃºmeros: `\\d?`\n   * - Letras mÃ­nusculas: `\\z?`\n   *\n   * > Veja a propriedade `p-literals` para customizar a literal `passwordErrorPattern`.\n   */\n  @Input('p-password-pattern') passwordPattern?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Exibe um link abaixo do formulÃ¡rio de login para que os usuÃ¡rios da aplicaÃ§Ã£o faÃ§am a recuperaÃ§Ã£o dos dados de autenticaÃ§Ã£o.\n   *\n   * A propriedade aceita os seguintes tipos:\n   *\n   * - **String**: informe uma url externa ou uma rota vÃ¡lida;\n   * - **Function**: pode-se customizar a aÃ§Ã£o. Para esta possilidade basta atribuir:\n   * ```\n   * <po-page-login>\n   *   [recovery]=\"this.myRecovery.bind(this)\">\n   * </po-page-login>\n   * ```\n   *\n   * - **PoPageLoginRecovery**: cria-se vÃ­nculo automÃ¡tico com o template **po-modal-password-recovery**.\n   *   O objeto deve conter a **url** para requisiÃ§Ã£o dos recursos e pode-se definir o **tipo** de modal para recuperaÃ§Ã£o de senha,\n   *   **email** para contato e **mÃ¡scara** do campo de telefone.\n   */\n  @Input('p-recovery') set recovery(value: string | Function | PoPageLoginRecovery) {\n    this._recovery = value;\n  }\n\n  get recovery() {\n    return this._recovery;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caso a aplicaÃ§Ã£o tenha um link para novos cadastros, informe uma url externa ou uma rota vÃ¡lida, dessa\n   * forma serÃ¡ exibido um link abaixo do formulÃ¡rio de login para os usuÃ¡rios da aplicaÃ§Ã£o.\n   *\n   * Exemplos de valores vÃ¡lidos:\n   * - **local**: `/home`\n   * - **url externa**: `https://portinari.io`\n   *\n   * > Veja a propriedade `p-literals` para customizar a literal `registerUrl`.\n   */\n  @Input('p-register-url') set registerUrl(value: string) {\n    this._registerUrl = isTypeof(value, 'string') ? value : undefined;\n  }\n\n  get registerUrl(): string {\n    return this._registerUrl;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caminho para a logomarca localizada no rodapÃ©.\n   */\n  @Input('p-secondary-logo') secondaryLogo?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Atributo que recebe o tipo de esquema da autenticaÃ§Ã£o, sendo suportados apenas os valores `Basic` e `Bearer`.\n   *\n   * > Caso o tipo definido seja `Basic`, o componente farÃ¡ uma requisiÃ§Ã£o `POST` contendo:\n   *\n   * ```\n   * headers {\n   *  Authorization: Basic base64(login:password)\n   * }\n   *\n   * body {\n   *  rememberUser: rememberUser\n   * }\n   * ```\n   *\n   * > Caso o tipo definido seja `Bearer`, o componente farÃ¡ uma requisiÃ§Ã£o `POST` contendo:\n   *\n   * ```\n   * body {\n   *  login: login,\n   *  password: base64(password),\n   *  rememberUser: rememberUser\n   * }\n   * ```\n   *\n   * @default `PoPageLoginAuthenticationType.Basic`\n   */\n  @Input('p-authentication-type') set authenticationType(value: PoPageLoginAuthenticationType) {\n    this._authenticationType =\n    (<any>Object).values(PoPageLoginAuthenticationType).includes(value) ? value : PoPageLoginAuthenticationType.Basic;\n  }\n\n  get authenticationType(): PoPageLoginAuthenticationType {\n    return this._authenticationType;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Endpoint usado pelo template para requisiÃ§Ã£o do recurso. Quando preenchido, o mÃ©todo `p-login-submit` serÃ¡ ignorado e o\n   * componente adquirirÃ¡ automatizaÃ§Ã£o para o processo de autenticaÃ§Ã£o.\n   *\n   * ### Processos\n   * Ao digitar um valor vÃ¡lido no campo de login/password e pressionar **Enter**, o componente farÃ¡ uma requisiÃ§Ã£o `POST`\n   * na url especificada nesta propriedade passando o objeto contendo o valor definido pelo usuÃ¡rio:\n   *\n   * ```\n   * headers {\n   *  Authorization: Basic base64(login:password)\n   * }\n   *\n   * body {\n   *  rememberUser: rememberUser\n   * }\n   * ```\n   *\n   * Em caso de **sucesso**, o objeto de retorno Ã© armazenado no `sessionStorage` e o usuÃ¡rio Ã© redirecionado para a pÃ¡gina inicial da\n   * aplicaÃ§Ã£o `/`.\n   *\n   * ```\n   * 200:\n   *  {\n   *    user: user\n   *  }\n   * ```\n   *\n   * Em caso de **erro** na autenticaÃ§Ã£o, espera-se o seguinte retorno:\n   *\n   * ```\n   * 400/401\n   *  {\n   *    code: 400/401,\n   *    message: message,\n   *    detailedMessage: detailedMessage,\n   *    helpUrl?: helpUrl\n   *  }\n   * ```\n   *\n   * > Pode-se atribuir uma quantidade mÃ¡xima de tentativas restantes (maxAttemptsRemaining) para o atributo `p-exceeded-attempts-warning`,\n   * assim como os avisos relacionados aos campos login e password (loginWarnings, passwordWarnings) para os atributos `p-login-errors` e\n   * `p-password-errors` conforme retorno abaixo:\n   *\n   * ```\n   * 400\n   *  {\n   *    code: 400/401,\n   *    message: message,\n   *    detailedMessage: detailedMessage,\n   *    helpUrl?: helpUrl,\n   *    maxAttemptsRemaining?: maxAttemptsRemaining,\n   *    loginWarnings?: [loginWarnings],\n   *    passwordWarnings?: [passwordWarnings]\n   *  }\n   * ```\n   *\n   * > Caso o valor atribuÃ­do para `p-exceeded-attempts-warning` seja igual a 0(zero), poderÃ¡ ser passado um valor para o\n   * atributo `p-blocked-url` e o usuÃ¡rio serÃ¡ redirecionado para uma tela de bloqueio.\n   *\n   * *Processo finalizado.*\n   *\n   * _______________\n   *\n   * #### Praticidade\n   * As informaÃ§Ãµes do serviÃ§o de autenticaÃ§Ã£o tambÃ©m podem ser transmitidas diretamente pelas configuraÃ§Ã£os de rota e, desta maneira,\n   * dispensa-se qualquer menÃ§Ã£o e/ou importaÃ§Ã£o do componente `po-page-login` no restante da aplicaÃ§Ã£o. O exemplo abaixo exemplifica\n   * a forma dinÃ¢mica com a qual o template de tela de login pode ser gerado ao navegar para rota `/login`, e tambÃ©m como ele se comunica\n   * com o serviÃ§o para efetuaÃ§Ã£o do processo de autenticaÃ§Ã£o do usuÃ¡rio e solicitaÃ§Ã£o de nova senha.\n   * Basta definir nas configuraÃ§Ãµes de rota:\n   *\n   *\n   * ```\n   *   import { PoPageLoginComponent, PoPageLoginAthenticationType } from '@portinari/portinari-templates';\n   *\n   *   ...\n   *   const routes: Routes = [\n   *     {\n   *       path: 'login', component: PoPageLoginComponent, data: {\n   *         serviceApi: 'https://portinari.io/sample/api/users/authentication',\n   *         environment: 'development',\n   *         recovery: {\n   *           url: 'https://portinari.io/sample/api/users',\n   *           type: PoModalPasswordRecoveryType.All,\n   *           contactMail: 'dev.portinari@portinari.com',\n   *           phoneMask: '9-999-999-9999'\n   *         },\n   *         registerUrl: '/new-password',\n   *         authenticationType: PoPageLoginAthenticationType.Basic\n   *       }\n   *     }\n   *     ...\n   *   ];\n   *\n   *   @NgModule({\n   *     imports: [RouterModule.forRoot(routes)],\n   *     exports: [RouterModule]\n   *   })\n   *   export class AppRoutingModule { }\n   * ```\n   *\n   *\n   * O metadado `serviceApi` deve ser a **url** para requisiÃ§Ã£o dos recursos de autenticaÃ§Ã£o, o `environment` alimenta a propriedade\n   * `p-environment`, `recovery` Ã© a interface `PoPageLoginRecovery` responsÃ¡vel pelas especificaÃ§Ãµes contidas na modal de recuperaÃ§Ã£o de\n   * senha, `registerUrl` alimenta a propriedade `p-register-url` e `authenticationType` que define a propriedade `p-authentication-type`.\n   *\n   * > Ã essencial que siga a nomenclatura dos atributos exemplificados acima para sua efetiva funcionalidade.\n   *\n   */\n  @Input('p-authentication-url') set authenticationUrl(value: string) {\n    this._authenticationUrl = isTypeof(value, 'string') ? value : undefined;\n  }\n\n  get authenticationUrl(): string {\n    return this._authenticationUrl;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caso o valor atribuÃ­do para `p-exceeded-attempts-warning` seja igual a 0(zero) e a aplicaÃ§Ã£o tenha um link de bloqueio de usuÃ¡rio,\n   * informe uma url externa ou uma rota vÃ¡lida, dessa forma em caso de bloqueio o usuÃ¡rio serÃ¡ redirecionado.\n   */\n  @Input('p-blocked-url') set blockedUrl(value: string) {\n    this._blockedUrl = isTypeof(value, 'string') ? value : undefined;\n  }\n\n  get blockedUrl(): string {\n    return this._blockedUrl;\n  }\n\n  /**\n   * Evento disparado quando o usuÃ¡rio alterar o input do campo login.\n   *\n   * Esse evento receberÃ¡ como parÃ¢metro uma variÃ¡vel do tipo `string` com o texto informado no campo.\n   *\n   * > Esta propriedade serÃ¡ ignorada se for definido valor para a propriedade `p-authentication-url`.\n   */\n  @Output('p-login-change') loginChange?: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * Evento disparado ao submeter o formulÃ¡rio de login (apertando `Enter` dentro dos campos ou pressionando o botÃ£o de confirmaÃ§Ã£o).\n   *\n   * Esse evento receberÃ¡ como parÃ¢metro um objeto do tipo `PoPageLogin` com os dados informados no formulÃ¡rio.\n   *\n   * > Esta propriedade serÃ¡ ignorada se for definido valor para a propriedade `p-url-recovery`.\n   *\n   * > Para mais detalhes consulte a documentaÃ§Ã£o sobre a interface `PoPageLogin` mais abaixo.\n   */\n  @Output('p-login-submit') loginSubmit = new EventEmitter<PoPageLogin>();\n\n  /**\n   * Evento disparado quando o usuÃ¡rio alterar o input do campo password.\n   *\n   * Esse evento receberÃ¡ como parÃ¢metro uma variÃ¡vel do tipo `string` com o texto informado no campo.\n   *\n   * > Esta propriedade serÃ¡ ignorada se for definido valor para a propriedade `p-authentication-url`.\n   */\n  @Output('p-password-change') passwordChange?: EventEmitter<string> = new EventEmitter<string>();\n\n  get language(): string {\n    return this.selectedLanguage || getShortBrowserLanguage();\n  }\n\n  get pageLoginLiterals(): PoPageLoginLiterals {\n    const loginHintWithContactEmail = this.contactEmail ? this.concatenateLoginHintWithContactEmail(this.contactEmail) : undefined;\n\n    const titleWithProductName = this.productName ? this.concatenateTitleWithProductName(this.productName) : undefined;\n\n    return {\n      ...poPageLoginLiteralsDefault[poLocaleDefault],\n      ...poPageLoginLiteralsDefault[this.language],\n      ...loginHintWithContactEmail,\n      ...titleWithProductName,\n      ...this.literals\n    };\n  }\n\n  constructor(private loginService: PoPageLoginService, public router: Router) { }\n\n  ngOnDestroy() {\n    if (this.loginSubscription) {\n      this.loginSubscription.unsubscribe();\n    }\n  }\n\n  closePopover() {\n    this.showExceededAttemptsWarning = false;\n  }\n\n  onLoginSubmit(): void {\n    const loginForm: PoPageLogin = {\n      login: this.login,\n      password: this.password,\n      rememberUser: this.rememberUser\n    };\n\n    if (this.customField) {\n      loginForm[this.customFieldObject.property] = this.customFieldObject.value;\n    }\n\n    if (this.authenticationUrl) {\n      this.loginSubscription =\n      this.loginService.onLogin(this.authenticationUrl, this.authenticationType, loginForm)\n      .subscribe(data => {\n        this.setValuesToProperties();\n        sessionStorage.setItem('PO_USER_LOGIN', JSON.stringify(data));\n        this.openInternalLink('/');\n      },\n      error => {\n        if (error.error.code === '400' || error.error.code === '401') {\n          this.setValuesToProperties(error);\n          this.redirectBlockedUrl(this.exceededAttemptsWarning, this.blockedUrl);\n        }\n      });\n    } else {\n      this.loginSubmit.emit(loginForm);\n      this.showExceededAttemptsWarning = this.exceededAttemptsWarning > 0;\n    }\n  }\n\n  private getDefaultCustomFieldObject(property): PoPageLoginCustomField {\n    return { property };\n  }\n\n  private openExternalLink(url: string) {\n    window.open(url, '_blank');\n  }\n\n  private openInternalLink(url: string) {\n    this.router.navigate([url]);\n  }\n\n  private redirectBlockedUrl(attempts: number, blockedUrl: string) {\n    if (attempts === 0 && blockedUrl) {\n      this.showExceededAttemptsWarning = false;\n      isExternalLink(blockedUrl) ? this.openExternalLink(blockedUrl) : this.openInternalLink(blockedUrl);\n    }\n  }\n\n  private setValuesToProperties(result?) {\n    if (result) {\n      this.exceededAttemptsWarning = result.error.maxAttemptsRemaining;\n      this.loginErrors = result.error.loginWarnings;\n      this.passwordErrors = result.error.passwordWarnings;\n      this.blockedUrl = result.error.blockedUrl;\n    } else {\n      this.exceededAttemptsWarning = 0;\n      this.loginErrors = [];\n      this.passwordErrors = [];\n      this.blockedUrl = '';\n    }\n  }\n\n  protected abstract concatenateLoginHintWithContactEmail(contactEmail: string);\n\n  protected abstract concatenateTitleWithProductName(productName: string);\n\n  protected abstract setLoginErrors(value: Array<string>): void;\n\n  protected abstract setPasswordErrors(value: Array<string>): void;\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { PoPageLogin } from './interfaces/po-page-login.interface';\nimport { PoPageLoginAuthenticationType } from './enums/po-page-login-authentication-type.enum';\n\n@Injectable()\nexport class PoPageLoginService {\n\n  constructor(private http: HttpClient) { }\n\n  onLogin(url: string, type: PoPageLoginAuthenticationType, loginForm: PoPageLogin): Observable<Object> {\n\n    if (type === PoPageLoginAuthenticationType.Bearer) {\n      loginForm.password = btoa(loginForm.password);\n      return this.http.post(url, loginForm);\n    } else {\n      const user = `(${loginForm.login}:${loginForm.password})`;\n      const headers = new HttpHeaders({\n        'Authorization': `${type} ` + btoa(user)\n      });\n      delete loginForm.login;\n      delete loginForm.password;\n      return this.http.post(url, loginForm, { headers });\n    }\n\n  }\n\n}\n","import { AbstractControl, NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AfterViewChecked, ChangeDetectorRef, Component, ComponentRef, IterableDiffers, OnInit, ViewChild, ViewContainerRef\n} from '@angular/core';\n\nimport { isExternalLink } from '../../utils/util';\nimport { PoComponentInjectorService } from '@portinari/portinari-ui';\n\nimport { PoModalPasswordRecoveryComponent } from '../po-modal-password-recovery/po-modal-password-recovery.component';\nimport { PoModalPasswordRecoveryType } from '../po-modal-password-recovery/enums/po-modal-password-recovery-type.enum';\nimport { PoPageLoginBaseComponent, poPageLoginLiteralIn, poPageLoginLiteralTo, poPageLoginLiteralsDefault\n} from './po-page-login-base.component';\nimport { PoPageLoginRecovery } from './interfaces/po-page-login-recovery.interface';\nimport { PoPageLoginService } from './po-page-login.service';\n\n/**\n * @docsExtends PoPageLoginBaseComponent\n *\n * @example\n *\n * <example name=\"po-page-login-basic\" title=\"Portinari Page Login Basic\">\n *  <file name=\"sample-po-page-login-basic/sample-po-page-login-basic.component.html\"> </file>\n *  <file name=\"sample-po-page-login-basic/sample-po-page-login-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-login-labs\" title=\"Portinari Page Login Labs\">\n *  <file name=\"sample-po-page-login-labs/sample-po-page-login-labs.component.html\"> </file>\n *  <file name=\"sample-po-page-login-labs/sample-po-page-login-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-login-human-resources\" title=\"Portinari Page Login - Human Resources\">\n *  <file name=\"sample-po-page-login-human-resources/sample-po-page-login-human-resources.component.html\"> </file>\n *  <file name=\"sample-po-page-login-human-resources/sample-po-page-login-human-resources.component.ts\"> </file>\n *  <file name=\"sample-po-page-login-human-resources/sample-po-page-login-human-resources.module.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-login-automatic-service\" title=\"Portinari Page Login - Automatic Service\">\n *  <file name=\"sample-po-page-login-automatic-service/sample-po-page-login-automatic-service.component.html\"> </file>\n *  <file name=\"sample-po-page-login-automatic-service/sample-po-page-login-automatic-service.component.ts\"> </file>\n * </example>\n */\n\n@Component({\n  selector: 'po-page-login',\n  templateUrl: './po-page-login.component.html'\n})\n\nexport class PoPageLoginComponent extends PoPageLoginBaseComponent implements AfterViewChecked, OnInit {\n\n  private componentRef: ComponentRef<any> = null;\n  private differ: any;\n  private readonly customPasswordError = { custom : false };\n\n  @ViewChild('loginForm', { read: NgForm, static: true }) loginForm: NgForm;\n  @ViewChild('pageLogin', { read: ViewContainerRef, static: true }) pageLogin: ViewContainerRef;\n\n  constructor(\n    public changeDetector: ChangeDetectorRef,\n    private activatedRoute: ActivatedRoute,\n    private poComponentInjector: PoComponentInjectorService,\n    differs: IterableDiffers,\n    loginService: PoPageLoginService,\n    router: Router,\n    ) {\n    super(loginService, router);\n    this.differ = differs.find([]).create(null);\n  }\n\n  ngAfterViewChecked() {\n    if (this.differ) {\n      this.validateArrayChanges(this.differ, [\n        { array: this.loginErrors, callback: this.generateLoginError.bind(this) },\n        { array: this.passwordErrors, callback: this.generatePasswordError.bind(this) }\n      ]);\n    }\n  }\n\n  ngOnInit() {\n    this.checkingForRouteMetadata(this.activatedRoute.snapshot.data);\n  }\n\n  changeLoginModel() {\n    if (this.authenticationUrl) {\n      this.loginErrors = [];\n    } else {\n      this.setLoginErrors(this.loginErrors);\n      this.loginChange.emit(this.login);\n    }\n  }\n\n  changePasswordModel() {\n    if (this.authenticationUrl) {\n      this.passwordErrors = [];\n    } else {\n      this.setPasswordErrors(this.passwordErrors);\n      this.passwordChange.emit(this.password);\n    }\n  }\n\n  onSelectedLanguage(language: string) {\n    this.selectedLanguage = language;\n  }\n\n  openUrl(recovery: any): void {\n    switch (typeof recovery) {\n      case 'string': {\n        this.setUrlRedirect(recovery);\n        break;\n      }\n      case 'function': {\n        recovery();\n        break;\n      }\n      case 'object': {\n        this.createModalPasswordRecoveryComponent(recovery);\n        break;\n      }\n    }\n  }\n\n  private checkingForMetadataProperty(object, property) {\n    if (Object.prototype.hasOwnProperty.call(object, property)) {\n      return object[property];\n    }\n  }\n\n  private checkingForRouteMetadata(data) {\n    if (Object.keys(data).length !== 0) {\n      this.authenticationUrl = this.checkingForMetadataProperty(data, 'serviceApi') || this.authenticationUrl;\n      this.authenticationType = this.checkingForMetadataProperty(data, 'authenticationType') || this.authenticationType;\n      this.environment = this.checkingForMetadataProperty(data, 'environment') || this.environment;\n      this.recovery = this.checkingForMetadataProperty(data, 'recovery') || this.recovery;\n      this.registerUrl = this.checkingForMetadataProperty(data, 'registerUrl') || this.registerUrl;\n    }\n  }\n\n  private concatenate(defaultLiteral: string, prefixLiteral: string, value: string) {\n    return `${defaultLiteral} ${prefixLiteral} ${value}`;\n  }\n\n  private concatenateLiteral(value: string, literal: string, defaultLiteral: string, prepositionLiteral: string) {\n    return { [literal]: this.concatenate(defaultLiteral, prepositionLiteral, value) };\n  }\n\n  private createModalPasswordRecoveryComponent(poPageLoginRecovery: PoPageLoginRecovery) {\n    if (this.componentRef) {\n      this.poComponentInjector.destroyComponentInApplication(this.componentRef);\n    }\n\n    this.componentRef = this.poComponentInjector.createComponentInApplication(PoModalPasswordRecoveryComponent);\n    this.componentRef.instance.urlRecovery = poPageLoginRecovery.url;\n    this.componentRef.instance.contactEmail = poPageLoginRecovery.contactMail;\n    this.componentRef.instance.phoneMask = poPageLoginRecovery.phoneMask;\n    this.componentRef.instance.type = poPageLoginRecovery.type || PoModalPasswordRecoveryType.Email;\n    this.componentRef.changeDetectorRef.detectChanges();\n    setTimeout(() => {\n      this.componentRef.instance.open();\n    });\n  }\n\n  private generateLoginError() {\n    if (this.loginErrors && this.loginErrors.length) {\n      this.setLoginErrors(this.loginErrors);\n    } else {\n      const control = this.loginForm.form.controls['login'];\n      if (control) {\n        this.resetControl(control);\n      }\n    }\n  }\n\n  private generatePasswordError() {\n    if (this.passwordErrors && this.passwordErrors.length) {\n      this.setPasswordErrors(this.passwordErrors);\n    } else {\n      const control = this.loginForm.form.controls['password'];\n\n      if (control) {\n        this.resetControl(control);\n      }\n    }\n  }\n\n  private resetControl(control: AbstractControl) {\n    control.markAsPristine();\n    control.markAsUntouched();\n    control.updateValueAndValidity();\n  }\n\n  private setControlErrors(allErrors: string, control: AbstractControl, errors: Array<string>, patternError: string) {\n\n    if (control) {\n\n      this[allErrors] = control.hasError('pattern') ? [...errors, ...[patternError]] : [...errors];\n\n      if (errors && errors.length && (control.valid || control.pristine)) {\n        control.markAsTouched();\n        control.markAsDirty();\n        control.setErrors(this.customPasswordError);\n      }\n    }\n  }\n\n  private setUrlRedirect(url) {\n    isExternalLink(url) ?  window.open(url, '_blank') : this.router.navigate([url]);\n  }\n\n  private validateArrayChanges(differ: any, array: Array<{ array: Array<any>, callback: any }>) {\n\n    array.forEach(element => {\n      const changes = differ.diff(element.array);\n      if (changes) {\n        element.callback();\n        this.changeDetector.detectChanges();\n      }\n    });\n  }\n\n  protected concatenateLoginHintWithContactEmail(contactEmail: string) {\n    const defaultLoginHintLiteral = poPageLoginLiteralsDefault[this.language].loginHint;\n    const prepositionLiteral = poPageLoginLiteralIn[this.language];\n\n    return this.concatenateLiteral(contactEmail, 'loginHint', defaultLoginHintLiteral, prepositionLiteral);\n  }\n\n  protected concatenateTitleWithProductName(productName: string) {\n    const defaultTitleLiteral = poPageLoginLiteralsDefault[this.language].title;\n    const prepositionLiteral = poPageLoginLiteralTo[this.language];\n\n    return this.concatenateLiteral(productName, 'title', defaultTitleLiteral, prepositionLiteral);\n  }\n\n  protected setLoginErrors(errors: Array<string>) {\n    const control = this.loginForm.form.controls['login'];\n    this.setControlErrors('allLoginErrors', control, errors, this.pageLoginLiterals.loginErrorPattern);\n  }\n\n  protected setPasswordErrors(errors: Array<string>) {\n    const control = this.loginForm.form.controls['password'];\n    this.setControlErrors('allPasswordErrors', control, errors, this.pageLoginLiterals.passwordErrorPattern);\n  }\n\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { isExternalLink, isTypeof } from '../../../utils/util';\n\nimport { PoPageLoginLiterals } from '../interfaces/po-page-login-literals.interface';\nimport { PoPageLoginRecovery } from '../interfaces/po-page-login-recovery.interface';\n\n@Component({\n  selector: 'po-page-login-popover',\n  templateUrl: './po-page-login-popover.component.html'\n})\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente para definiÃ§Ã£o da mensagem de aviso de bloqueio do `po-page-login`.\n */\nexport class PoPageLoginPopoverComponent {\n\n  recoveryType: string;\n\n  private _recovery: string | Function | PoPageLoginRecovery;\n\n  @Input('p-literals') literals: PoPageLoginLiterals;\n\n  /** exibe o link de 'esqueci minha senha' e verifica se o valor Ã© um link interno ou externo */\n  @Input('p-recovery') set recovery(value: string | Function | PoPageLoginRecovery) {\n    this._recovery = value;\n\n    if (isTypeof(value, 'string')) {\n      this.recoveryType = isExternalLink(value) ? 'externalLink' : 'internalLink';\n    }\n  }\n\n  get recovery() {\n    return this._recovery;\n  }\n\n  /** define se a mensagem deverÃ¡ ser exibida caso seja maior que 0(zero) */\n  @Input('p-remaining-attempts') remainingAttempts: number;\n\n  /** se 'p-recovery' for do tipo Function ou PoPageLoginRecovery, emite para o mÃ©todo 'openUrl' do componente 'po-page-login' */\n  @Output('p-forgot-password') forgotPassword = new EventEmitter<any>();\n\n  onForgotPasswordClick(recovery) {\n    this.forgotPassword.emit(recovery);\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoModule } from '@portinari/portinari-ui';\n\nimport { PoModalPasswordRecoveryComponent } from '../po-modal-password-recovery/po-modal-password-recovery.component';\nimport { PoPageBackgroundModule } from '../po-page-background/index';\nimport { PoPageLoginComponent } from './po-page-login.component';\nimport { PoPageLoginPopoverComponent } from './po-page-login-popover/po-page-login-popover.component';\nimport { PoPageLoginService } from './po-page-login.service';\n\n/**\n * @description\n *\n * MÃ³dulo do template do po-page-login.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    PoPageBackgroundModule,\n    PoModule\n  ],\n  declarations: [\n    PoPageLoginComponent,\n    PoPageLoginPopoverComponent\n  ],\n  entryComponents: [\n    PoModalPasswordRecoveryComponent\n  ],\n  exports: [\n    PoPageLoginComponent\n  ],\n  providers: [PoPageLoginService]\n})\nexport class PoPageLoginModule { }\n","import { NgModule } from '@angular/core';\n\nimport { PoModalPasswordRecoveryModule } from './po-modal-password-recovery/po-modal-password-recovery.module';\nimport { PoPageBackgroundModule } from './po-page-background/po-page-background.module';\nimport { PoPageBlockedUserModule } from './po-page-blocked-user/po-page-blocked-user.module';\nimport { PoPageChangePasswordModule } from './po-page-change-password/po-page-change-password.module';\nimport { PoPageDynamicDetailModule } from './po-page-dynamic-detail/po-page-dynamic-detail.module';\nimport { PoPageDynamicEditModule } from './po-page-dynamic-edit/po-page-dynamic-edit.module';\nimport { PoPageDynamicSearchModule } from './po-page-dynamic-search/po-page-dynamic-search.module';\nimport { PoPageDynamicTableModule } from './po-page-dynamic-table/po-page-dynamic-table.module';\nimport { PoPageJobSchedulerModule } from './po-page-job-scheduler/po-page-job-scheduler.module';\nimport { PoPageLoginModule } from './po-page-login/po-page-login.module';\n\n@NgModule({\n  imports: [\n    PoModalPasswordRecoveryModule,\n    PoPageBackgroundModule,\n    PoPageBlockedUserModule,\n    PoPageChangePasswordModule,\n    PoPageDynamicDetailModule,\n    PoPageDynamicEditModule,\n    PoPageDynamicSearchModule,\n    PoPageDynamicTableModule,\n    PoPageJobSchedulerModule,\n    PoPageLoginModule\n  ],\n  exports: [\n    PoModalPasswordRecoveryModule,\n    PoPageBackgroundModule,\n    PoPageBlockedUserModule,\n    PoPageChangePasswordModule,\n    PoPageDynamicDetailModule,\n    PoPageDynamicEditModule,\n    PoPageDynamicSearchModule,\n    PoPageDynamicTableModule,\n    PoPageJobSchedulerModule,\n    PoPageLoginModule\n  ]\n})\nexport class PoComponentsModule { }\n","import { NgModule } from '@angular/core';\n\nimport { PoPageCustomizationModule } from './po-page-customization/po-page-customization.module';\nimport { PoPageDynamicModule } from './po-page-dynamic/po-page-dynamic.module';\n\n@NgModule({\n  imports: [\n    PoPageCustomizationModule,\n    PoPageDynamicModule\n  ],\n  exports: [\n    PoPageCustomizationModule,\n    PoPageDynamicModule\n  ]\n})\nexport class PoServicesModule { }\n","import { NgModule } from '@angular/core';\n\nimport { PoComponentsModule } from './components/components.module';\nimport { PoServicesModule } from './services/services.module';\n\n@NgModule({\n  imports: [\n    PoComponentsModule,\n    PoServicesModule\n  ],\n  exports: [\n    PoComponentsModule,\n    PoServicesModule\n  ]\n})\nexport class PoTemplatesModule { }\n"]}