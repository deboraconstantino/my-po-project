{"version":3,"file":"portinari-portinari-templates.js","sources":["ng://@portinari/portinari-templates/lib/utils/util.ts","ng://@portinari/portinari-templates/lib/components/po-modal-password-recovery/literals/i18n/po-modal-password-recovery-literals.ts","ng://@portinari/portinari-templates/lib/components/po-modal-password-recovery/enums/po-modal-password-recovery-type.enum.ts","ng://@portinari/portinari-templates/lib/components/po-modal-password-recovery/po-modal-password-recovery-base.component.ts","ng://@portinari/portinari-templates/lib/components/po-modal-password-recovery/enums/po-modal-password-recovery-modal-content.enum.ts","ng://@portinari/portinari-templates/lib/components/po-modal-password-recovery/po-modal-password-recovery.service.ts","ng://@portinari/portinari-templates/lib/components/po-modal-password-recovery/po-modal-password-recovery.component.ts","ng://@portinari/portinari-templates/lib/components/po-modal-password-recovery/po-modal-password-recovery-error-message/po-modal-password-recovery-error-message.component.ts","ng://@portinari/portinari-templates/lib/components/po-modal-password-recovery/po-modal-password-recovery.module.ts","ng://@portinari/portinari-templates/lib/components/po-page-background/po-page-background.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-background/po-page-background.module.ts","ng://@portinari/portinari-templates/lib/components/po-page-blocked-user/enums/po-page-blocked-user-reason.enum.ts","ng://@portinari/portinari-templates/lib/components/po-page-blocked-user/po-page-blocked-user-base.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-blocked-user/po-page-blocked-user.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-blocked-user/po-page-blocked-user-contacts/po-page-blocked-user-contacts.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-blocked-user/literals/i18n/po-page-blocked-user-literals.ts","ng://@portinari/portinari-templates/lib/components/po-page-blocked-user/po-page-blocked-user-reason/po-page-blocked-user-reason.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-blocked-user/po-page-blocked-user.module.ts","ng://@portinari/portinari-templates/lib/components/po-page-change-password/po-page-change-password-base.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-change-password/literals/i18n/po-page-change-password-literals.ts","ng://@portinari/portinari-templates/lib/components/po-page-change-password/po-page-change-password.service.ts","ng://@portinari/portinari-templates/lib/components/po-page-change-password/po-page-change-password.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-change-password/po-page-change-password.module.ts","ng://@portinari/portinari-templates/lib/services/po-page-dynamic/po-page-dynamic.service.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-detail/po-page-dynamic-detail.component.ts","ng://@portinari/portinari-templates/lib/services/po-page-dynamic/po-page-dynamic.module.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-detail/po-page-dynamic-detail.module.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-edit/po-page-dynamic-edit.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-edit/po-page-dynamic-edit.module.ts","ng://@portinari/portinari-templates/lib/services/po-page-customization/po-page-customization.service.ts","ng://@portinari/portinari-templates/lib/services/po-page-customization/po-page-customization.module.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-search/po-advanced-filter/po-advanced-filter-base.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-search/po-advanced-filter/po-advanced-filter.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-search/po-page-dynamic-search-base.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-search/po-page-dynamic-search.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-search/po-page-dynamic-search.module.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-table/po-page-dynamic-list-base.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-table/po-page-dynamic-table.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-table/po-page-dynamic-table.module.ts","ng://@portinari/portinari-templates/lib/components/po-page-job-scheduler/po-page-job-scheduler-internal.ts","ng://@portinari/portinari-templates/lib/components/po-page-job-scheduler/po-page-job-scheduler-base.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-job-scheduler/po-page-job-scheduler-literals.ts","ng://@portinari/portinari-templates/lib/components/po-page-job-scheduler/po-page-job-scheduler.service.ts","ng://@portinari/portinari-templates/lib/components/po-page-job-scheduler/po-page-job-scheduler-lookup.service.ts","ng://@portinari/portinari-templates/lib/components/po-page-job-scheduler/po-page-job-scheduler.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-job-scheduler/po-page-job-scheduler-execution/po-page-job-scheduler-execution.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-job-scheduler/po-page-job-scheduler-parameters/po-page-job-scheduler-parameters.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-job-scheduler/po-page-job-scheduler-summary/po-page-job-scheduler-summary.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-job-scheduler/po-page-job-scheduler.module.ts","ng://@portinari/portinari-templates/lib/components/po-page-login/enums/po-page-login-authentication-type.enum.ts","ng://@portinari/portinari-templates/lib/components/po-page-login/po-page-login-base.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-login/po-page-login.service.ts","ng://@portinari/portinari-templates/lib/components/po-page-login/po-page-login.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-login/po-page-login-popover/po-page-login-popover.component.ts","ng://@portinari/portinari-templates/lib/components/po-page-login/po-page-login.module.ts","ng://@portinari/portinari-templates/lib/components/components.module.ts","ng://@portinari/portinari-templates/lib/services/services.module.ts","ng://@portinari/portinari-templates/lib/po-templates.module.ts","ng://@portinari/portinari-templates/lib/components/po-modal-password-recovery/interfaces/po-modal-password-recovery.interface.ts","ng://@portinari/portinari-templates/lib/components/po-page-blocked-user/interfaces/po-page-blocked-user-reason-params.interface.ts","ng://@portinari/portinari-templates/lib/components/po-page-change-password/interfaces/po-page-change-password.interface.ts","ng://@portinari/portinari-templates/lib/components/po-page-change-password/interfaces/po-page-change-password-recovery.interface.ts","ng://@portinari/portinari-templates/lib/components/po-page-change-password/interfaces/po-page-change-password-requirement.interface.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-detail/po-page-dynamic-detail-actions.interface.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-detail/po-page-dynamic-detail-field.interface.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-edit/interfaces/po-page-dynamic-edit-actions.interface.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-edit/interfaces/po-page-dynamic-edit-field.interface.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-search/po-page-dynamic-search.interface.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-search/po-page-dynamic-search-literals.interface.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-search/po-page-dynamic-search-options.interface.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-table/interfaces/po-page-dynamic-table-actions.interface.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-table/interfaces/po-page-dynamic-table-field.interface.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-table/interfaces/po-page-dynamic-table-options.interface.ts","ng://@portinari/portinari-templates/lib/components/po-page-dynamic-table/interfaces/po-page-dynamic-table-metadata.interface.ts","ng://@portinari/portinari-templates/lib/components/po-page-login/interfaces/po-page-login.interface.ts","ng://@portinari/portinari-templates/lib/components/po-page-login/interfaces/po-page-login-custom-field.interface.ts","ng://@portinari/portinari-templates/lib/components/po-page-login/interfaces/po-page-login-literals.interface.ts","ng://@portinari/portinari-templates/lib/components/po-page-login/interfaces/po-page-login-recovery.interface.ts","ng://@portinari/portinari-templates/lib/services/po-page-customization/po-page-dynamic-options.interface.ts"],"sourcesContent":["// Idiomas suportados pelas pÃ¡ginas\nexport const poLocales = ['pt', 'en', 'es', 'ru'];\n// Idioma padrÃ£o\nexport const poLocaleDefault = 'pt';\n\n/**\n * @deprecated\n * Utilize o mÃ©todo `getShortBrowserLanguage`.\n *\n * @description\n * Retorna idioma do browser ou o idioma padrÃ£o.\n */\nexport function browserLanguage() {\n  return getShortBrowserLanguage();\n}\n\n/**\n * Retorna o idioma atual do navegador\n */\nexport function getBrowserLanguage(): string {\n  // navigator.userLanguage is the value for IE10\n  return navigator.language || navigator['userLanguage'];\n}\n\n/**\n * Retorna o idioma do navegador, com somente as duas primeiras letras. Por exemplo: \"pt\" ou \"es\".\n *\n * Caso o valor retornado pelo navegador nÃ£o estiver dentro dos idiomas suportados pelo PO,\n * serÃ¡ retornado a linguagem padrÃ£o (poLocaleDefault).\n */\nexport function getShortBrowserLanguage(): string {\n  const language = (getBrowserLanguage() || poLocaleDefault).toLowerCase().substring(0, 2);\n\n  if (!poLocales.includes(language)) {\n    return poLocaleDefault;\n  }\n\n  return language;\n}\n\nexport function convertToBoolean(val: any): boolean {\n  if (typeof val === 'string') {\n    val = val.toLowerCase().trim();\n    return (val === 'true' || val === 'on' || val === '');\n  }\n\n  if (typeof val === 'number') {\n    return val === 1;\n  }\n\n  return !!val;\n}\n\nexport function convertToInt(value: any, valueDefault?: any): number {\n  const validNumber = parseInt(value, 10);\n  const validDefaultValue = parseInt(valueDefault, 10);\n  const defaultValue = validDefaultValue || validDefaultValue === 0 ? validDefaultValue : undefined;\n\n  return validNumber || validNumber === 0 ? validNumber : defaultValue;\n}\n\nexport function isTypeof(object: any, type: any) {\n  return typeof object === type;\n}\n\n/**\n *\n * @param fn FunÃ§Ã£o que serÃ¡ executada dentro do contexto. Podendo ser o nome da funÃ§Ã£o\n * ou a referÃªncia da mesma.\n *\n * @param context Contexto do qual a funÃ§Ã£o serÃ¡ executada.\n */\nexport function callFunction(fn: any, context: any, param?): void {\n  if (isTypeof(fn, 'function')) {\n    fn.call(context, param);\n  } else {\n    context[fn](param);\n  }\n}\n\nexport function convertIsoToDate(value: string , start: boolean, end: boolean) {\n  if (value) {\n    const day = parseInt(value.substring(8, 10), 10);\n    const month = parseInt(value.substring(5, 7), 10);\n    const year = parseInt(value.substring(0, 4), 10);\n    if (start) {\n      const date = new Date(year, month - 1, day, 0, 0, 0);\n\n      setYearFrom0To100(date, year);\n\n      return date;\n    } else if (end) {\n      const date = new Date(year, month - 1, day, 23, 59, 59);\n\n      setYearFrom0To100(date, year);\n\n      return date;\n    } else {\n      const milliseconds = Date.parse(value);\n      const timezone = new Date().getTimezoneOffset() * 60000;\n      return new Date(milliseconds + timezone);\n    }\n  }\n}\n\nexport function convertDateToISOExtended(date: Date, time?: string) {\n  if (date) {\n\n    const getMonth = date.getMonth() + 1;\n    const day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();\n    const month = getMonth < 10 ? '0' + getMonth : getMonth;\n    const year = formatYear(date.getFullYear());\n\n    const dateString = date.toString();\n\n    if (time) {\n      return year + '-' + month + '-' + day + time;\n    } else {\n      return year + '-' + month + '-' + day + 'T' + dateString.substring(16, 24) +\n          dateString.substring(28, 31) + ':' + dateString.substring(31, 33);\n    }\n  } else {\n    return null;\n  }\n}\n\n/**\n * Transforma o ano em uma string no formato yyyy e caso o ano seja menor que 1000 preenche com zeros a esquerda.\n * @param year Ano\n */\nexport function formatYear(year: number) {\n\n  if (year >= 1000) {\n    return year.toString();\n  }\n\n  if (year > 99 && year < 1000) {\n    return `0${year}`;\n  }\n\n  if (year > 9 && year < 100) {\n    return `00${year}`;\n  }\n\n  if (year >= 0 && year < 10) {\n    return `000${year}`;\n  }\n\n}\n\nexport function isEquals(value, comparedValue) {\n  return JSON.stringify(value) === JSON.stringify(comparedValue);\n}\n\n/**\n * Caso o ano original da data seja entre 0 e 100 atribui esse valor ao ano, pois o `new Date` do javascript transforma o ano para 190X.\n * @param date Data\n * @param year Ano original\n */\nexport function setYearFrom0To100(date: Date, year: number) {\n  if (year >= 0 && year < 100 ) {\n    date.setFullYear(year);\n  }\n}\n\nexport function sortOptionsByProperty(options: Array<any>, property: string) {\n  options.sort((optionA, optionB) => {\n    optionA = optionA[property].toString().toLowerCase();\n    optionB = optionB[property].toString().toLowerCase();\n\n    if (optionA < optionB) {\n      return -1;\n    }\n    if (optionA > optionB) {\n      return 1;\n    }\n    return 0;\n  });\n}\n\nexport function removeDuplicatedOptions(list: Array<any>) {\n  for (let i = 0; i < list.length; i++) {\n    if (i === 0) { continue; }\n\n    if (list.findIndex(op => op.value === list[i].value) !== i) {\n      list.splice(i, 1);\n      i--;\n    }\n  }\n}\n\nexport function removeUndefinedAndNullOptions(list: Array<any>) {\n  for (let i = 0; i < list.length; i++) {\n    if (list[i].value === undefined || list[i].value === null ) {\n      list.splice(i, 1);\n      i--;\n    }\n  }\n}\n\nexport function validValue(value: any) {\n  return (value !== null && value !== undefined && value !== '') || value === false;\n}\n\nexport function isExternalLink(url): boolean {\n  return url ? url.startsWith('http') : false;\n}\n\nexport function openExternalLink(url): void {\n  window.open(url, '_blank');\n}\n\nexport function  getFormattedLink(link: string): string {\n  let formattedLink = '';\n  // Retira todos os pontos no comeÃ§o da URL.\n  if (link) {\n    formattedLink = link.replace(/^(\\.)+/g, '');\n  }\n  // Verifica se foi utilizado uma rota que nÃ£o comece com barra.\n  if (!formattedLink.startsWith('/')) {\n    formattedLink = '/'.concat(formattedLink);\n  }\n  return formattedLink;\n}\n\n/**\n * MÃ©todo responsÃ¡vel por ordenar dois valores.\n *\n * @param leftSide Primeiro valor a ser comparado.\n * @param rightSide Segundo valor a ser comparado.\n * @param ascending Determina se serÃ¡ em ordem ascendente ou descendente.\n */\nexport function sortValues(leftSide: string, rightSide: string, ascending: boolean = true): number {\n  if (ascending) {\n    if (leftSide < rightSide) {\n      return -1;\n    } else if (leftSide > rightSide) {\n      return 1;\n    }\n  } else if (ascending === false) {\n    if (leftSide < rightSide) {\n      return 1;\n    } else if (leftSide > rightSide) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nexport function validateDateRange(date: Date, dateStart: Date, dateEnd: Date) {\n  if (dateStart && dateEnd) {\n    return (date >= dateStart && date <= dateEnd);\n  } else if (dateStart && !dateEnd) {\n    return (date >= dateStart);\n  } else if (!dateStart && dateEnd) {\n    return (date <= dateEnd);\n  } else {\n    return true;\n  }\n}\n\nexport function capitalizeFirstLetter(text: string): string {\n  return `${text.charAt(0).toUpperCase()}${text.slice(1)}`;\n}\n\n/**\n * Mapeia um novo array apenas com as propriedades definidas pelo desenvolvedor baseado em um array de\n * origem.\n *\n * Exemplo:\n *\n * ```\n * const people = [\n *  { id: 1, name: 'Fulano', birthdate: '1980-11-01', genre: 'Male', city: 'SÃ£o Paulo', dependents: 2 },\n *  { id: 2, name: 'Beltrano', birthdate: '1997-01-21', genre: 'Female', city: 'Joinville', dependents: 0 },\n *  { id: 3, name: 'Siclano', birthdate: '1995-07-15', genre: 'Male', city: 'Joinville', dependents: 0 }\n * ];\n *\n * const properties = ['id', 'name'];\n *\n * const idAndName = mapArrayByProperties(people, properties);\n *\n * console.log(idAndName); // [{ id: 1, name: 'Fulano' }, { id: 2, name: 'Beltrano' }, { id: 3, name: 'Siclano' }]\n * ```\n *\n * Um outro uso para o mÃ©todo Ã© \"parear\" todos os objetos do array com as mesmas propriedades.\n *\n * ```\n * const customers = [\n *  { id: 1, name: 'Fulano', city: 'SÃ£o Paulo', dependents: 2 }, // sem genre\n *  { id: 2, name: 'Beltrano', genre: 'Female', city: 'Joinville' }, // sem dependents\n *  { id: 3, name: 'Siclano', genre: 'Male', city: 'Joinville', dependents: 0 }\n * ];\n * const properties = ['id', 'name', 'city', 'genre', 'dependents'];\n *\n * const pattern = mapArrayByProperties(customers, properties);\n * console.log(pattern);\n *\n * // [\n * //   { id: 1, name: 'Fulano', city: 'SÃ£o Paulo', genre: undefined, dependents: 2 },\n * //   { id: 2, name: 'Beltrano', city: 'Joinville', genre: 'Female', dependents: undefined },\n * //   { id: 3, name: 'Siclano', city: 'Joinville', genre: 'Male', dependents: 0 }\n * // ]\n * ```\n *\n * @param items {Array<any>} Array de items original.\n * @param properties {Array<string>} Array de string com a lista de propriedades que devem ser retornadas.\n *\n * @returns Array<any>\n */\nexport function mapArrayByProperties(items: Array<any> = [], properties: Array<string> = []): Array<any> {\n  return items.map(item => mapObjectByProperties(item, properties));\n}\n\n/**\n * Mapeia um novo objeto apenas com as propriedades definidas pelo desenvolvedor.\n *\n * Exemplo:\n *\n * ```\n * const person = { id: 1, name: 'Fulano', birthdate: '1980-11-01', genre: 'Male', city: 'SÃ£o Paulo', dependents: 2 };\n *\n * const properties = ['id', 'name'];\n *\n * const idAndName = mapObjectByProperties(person, properties);\n *\n * console.log(idAndName); // { id: 1, name: 'Fulano' }\n * ```\n *\n * @param object {Array<any>} Array de items original.\n * @param properties {Array<string>} Array de string com a lista de propriedades que devem ser retornadas.\n *\n * @returns Array<any>\n */\nexport function mapObjectByProperties(object: any = {}, properties: Array<string> = []) {\n  const getSelectedProperties = (selectedProperties, property) => ({ ...selectedProperties, [property]: object[property] });\n\n  return properties.reduce(getSelectedProperties, {});\n}\n\n/**\n * Retorna os valores de um objeto dentro de um array.\n *\n * > Simula o Object.values(obj), o mesmo deve ser removido assim que a versÃ£o typescrit for atualizada.\n *\n * @param object Objeto de onde serÃ¡ pego os valores.\n */\nexport function valuesFromObject(object: any = {}): Array<any> {\n  return Object.keys(object).map(property => object[property]);\n}\n\n/**\n * adiciona 0 no tempo informado, caso menor q 10\n *\n * @param time\n */\nexport function addZero(time: number) {\n  if (!time) {\n    return '00';\n  }\n\n  if (time < 10) {\n    return `0${time}`;\n  }\n\n  return time;\n}\n","export const poModalPasswordRecoveryLiterals = {\n  en: <any>{\n    cancelButton: 'Cancel',\n    closeButton: 'Close',\n    continueButton: 'Continue',\n    email: 'e-mail',\n    emailErrorMessagePhrase: 'Invalid e-mail format',\n    emailSentConfirmationPhrase: `We have sent the instructions and new password creation link to your e-mail.\n    If you did not receive it after a few minutes, check your spam box or click Resend.`,\n    emailSentTitle: 'E-mail sent',\n    forgotPasswordTitle: 'Forgot your password?',\n    insertCode: 'Type the code',\n    insertEmail: 'Enter your e-mail',\n    insertPhone: 'Enter your mobile number',\n    phoneErrorMessagePhrase: 'Invalid phone number',\n    prepositionIn: 'in',\n    prepositionOr: 'or',\n    recoveryPasswordPhrase: 'To recover your password we will send you a {0} with instructions.',\n    resendEmailButton: 'Resend',\n    resendSmsCodePhrase: 'If the code does not arrive within a few minutes, please send it again.',\n    sendAgainPhrase: 'If the code does not arrive within a few minutes',\n    sendAgain: 'send again.',\n    sendButton: 'Submit',\n    sentSmsCodePhrase: 'We sent a code for your mobile phone.',\n    sms: 'SMS',\n    smsCodeErrorMessagePhrase: 'Invalid code. Please re-enter or contact support',\n    supportContact: 'If you do not have access to {0} contact support',\n    telephone: 'telephone',\n    typeCodeTitle: 'Enter sent code'\n  },\n  es: <any>{\n    cancelButton: 'Cancelar',\n    closeButton: 'Cerrar',\n    continueButton: 'Continuar',\n    email: 'e-mail',\n    emailErrorMessagePhrase: 'Formato de correo electrÃ³nico no vÃ¡lido',\n    emailSentConfirmationPhrase: `Enviamos las instrucciones y enlace de creaciÃ³n de nueva contraseÃ±a para su correo electrÃ³nico.\n    Si no ha recibido despuÃ©s de unos minutos, compruebe su caja de spam o haga clic en Reenviar`,\n    emailSentTitle: 'E-mail enviado',\n    forgotPasswordTitle: 'Olvidaste tu contraseÃ±a?',\n    insertCode: 'Introduzca el cÃ³digo',\n    insertEmail: 'Introduce tu e-mail',\n    insertPhone: 'Introduce tu nÃºmero de celular',\n    phoneErrorMessagePhrase: 'NÃºmero de telÃ©fono no vÃ¡lido',\n    prepositionIn: 'en',\n    prepositionOr: 'u',\n    recoveryPasswordPhrase: 'Para recuperar su contraseÃ±a vamos a enviar un {0} con instrucciones.',\n    resendEmailButton: 'Reenviar',\n    resendSmsCodePhrase: 'Si el cÃ³digo no llega dentro de unos minutos, vuelva a enviar.',\n    sendAgain: 'envÃ­e de nuevo.',\n    sendAgainPhrase: 'Si el cÃ³digo no llega dentro de unos minutos',\n    sendButton: 'Enviar',\n    sentSmsCodePhrase: 'Enviamos un cÃ³digo para su celular.',\n    sms: 'SMS',\n    smsCodeErrorMessagePhrase: 'CÃ³digo no vÃ¡lido. Escriba de nuevo o pÃ³ngase en contacto con el soporte',\n    supportContact: 'Si no tiene acceso a {0} pÃ³ngase en contacto con el soporte',\n    telephone: 'telÃ©fono',\n    typeCodeTitle: 'Escribir cÃ³digo enviado'\n  },\n  pt: <any>{\n    cancelButton: 'Cancelar',\n    closeButton: 'Fechar',\n    continueButton: 'Continuar',\n    email: 'e-mail',\n    emailErrorMessagePhrase: 'Formato de e-mail invÃ¡lido',\n    emailSentConfirmationPhrase: `Enviamos as instruÃ§Ãµes e link de criaÃ§Ã£o de nova senha para o seu e-mail.\n    Caso nÃ£o tenha recebido apÃ³s alguns minutos, verifique sua caixa de spam ou clique em Reenviar.`,\n    emailSentTitle: 'E-mail enviado',\n    forgotPasswordTitle: 'Esqueceu sua senha?',\n    insertCode: 'Digite o cÃ³digo',\n    insertEmail: 'Insira seu e-mail',\n    insertPhone: 'Insira seu nÃºmero de celular',\n    phoneErrorMessagePhrase: 'NÃºmero de telefone invÃ¡lido',\n    prepositionIn: 'em',\n    prepositionOr: 'ou',\n    recoveryPasswordPhrase: 'Para recuperar sua senha vamos enviar um {0} com instruÃ§Ãµes.',\n    resendEmailButton: 'Reenviar',\n    resendSmsCodePhrase: 'Se o cÃ³digo nÃ£o chegar dentro de alguns minutos envie novamente',\n    sendAgain: 'envie novamente.',\n    sendAgainPhrase: 'Se o cÃ³digo nÃ£o chegar dentro de alguns minutos',\n    sendButton: 'Enviar',\n    sentSmsCodePhrase: 'Enviamos um cÃ³digo para seu celular cadastrado.',\n    sms: 'SMS',\n    smsCodeErrorMessagePhrase: 'CÃ³digo invÃ¡lido. Digite novamente ou contacte o suporte',\n    supportContact: 'Se nÃ£o tiver acesso ao {0} contacte o suporte',\n    telephone: 'telefone',\n    typeCodeTitle: 'Digitar cÃ³digo enviado'\n  },\n  ru: <any>{\n    cancelButton: 'Ð¾ÑÐ¼ÐµÐ½Ð¸ÑÑ',\n    closeButton: 'Ð±Ð»Ð¸Ð·ÐºÐ¾',\n    continueButton: 'Ð±Ð»Ð¸Ð·ÐºÐ¾',\n    email: 'Ð¿Ð¾ ÑÐ»ÐµÐºÑÑÐ¾Ð½Ð½Ð¾Ð¹ Ð¿Ð¾ÑÑÐµ',\n    emailErrorMessagePhrase: 'ÐÐµÐ²ÐµÑÐ½ÑÐ¹ ÑÐ¾ÑÐ¼Ð°Ñ ÑÐ»ÐµÐºÑÑÐ¾Ð½Ð½Ð¾Ð¹ Ð¿Ð¾ÑÑÑ',\n    emailSentConfirmationPhrase: `ÐÑ Ð¾ÑÐ¿ÑÐ°Ð²Ð¸Ð»Ð¸ Ð¸Ð½ÑÑÑÑÐºÑÐ¸Ð¸ Ð¸ Ð½Ð¾Ð²ÑÑ ÑÑÑÐ»ÐºÑ Ð´Ð»Ñ ÑÐ¾Ð·Ð´Ð°Ð½Ð¸Ñ Ð¿Ð°ÑÐ¾Ð»Ñ Ð´Ð»Ñ Ð²Ð°ÑÐµÐ¹ ÑÐ»ÐµÐºÑÑÐ¾Ð½Ð½Ð¾Ð¹ Ð¿Ð¾ÑÑÑ.\nÐÑÐ»Ð¸ Ð²Ñ Ð½Ðµ Ð¿Ð¾Ð»ÑÑÐ¸Ð»Ð¸ ÐµÐ³Ð¾ Ð² ÑÐµÑÐµÐ½Ð¸Ðµ Ð½ÐµÑÐºÐ¾Ð»ÑÐºÐ¸Ñ Ð¼Ð¸Ð½ÑÑ, ÑÑÑÐ°Ð½Ð¾Ð²Ð¸ÑÐµ ÑÐ»Ð°Ð¶Ð¾Ðº Ð¡Ð¿Ð°Ð¼ Ð¸Ð»Ð¸ Ð½Ð°Ð¶Ð¼Ð¸ÑÐµ ÐÐ°Ð»ÐµÐµ.`,\n    emailSentTitle: 'ÐÐ¸ÑÑÐ¼Ð¾ Ð¾ÑÐ¿ÑÐ°Ð²Ð»ÐµÐ½Ð¾',\n    forgotPasswordTitle: 'ÐÐ°Ð±ÑÐ»Ð¸ Ð¿Ð°ÑÐ¾Ð»Ñ?',\n    insertCode: 'ÐÐ²ÐµÐ´Ð¸ÑÐµ ÐºÐ¾Ð´',\n    insertEmail: 'ÐÐ²ÐµÐ´Ð¸ÑÐµ Ð°Ð´ÑÐµÑ ÑÐ»ÐµÐºÑÑÐ¾Ð½Ð½Ð¾Ð¹ Ð¿Ð¾ÑÑÑ',\n    insertPhone: 'ÐÐ²ÐµÐ´Ð¸ÑÐµ Ð½Ð¾Ð¼ÐµÑ Ð²Ð°ÑÐµÐ³Ð¾ Ð¼Ð¾Ð±Ð¸Ð»ÑÐ½Ð¾Ð³Ð¾ ÑÐµÐ»ÐµÑÐ¾Ð½Ð°',\n    phoneErrorMessagePhrase: 'ÐÐµÐ²ÐµÑÐ½ÑÐ¹ Ð½Ð¾Ð¼ÐµÑ ÑÐµÐ»ÐµÑÐ¾Ð½Ð°',\n    prepositionIn: 'Ð²',\n    prepositionOr: 'Ð¸Ð»Ð¸',\n    recoveryPasswordPhrase: 'ÐÐ»Ñ Ð²Ð¾ÑÑÑÐ°Ð½Ð¾Ð²Ð»ÐµÐ½Ð¸Ñ Ð²Ð°ÑÐµÐ³Ð¾ Ð¿Ð°ÑÐ¾Ð»Ñ Ð¼Ñ Ð²ÑÑÐ»ÐµÐ¼ {0} Ñ Ð¸Ð½ÑÑÑÑÐºÑÐ¸ÑÐ¼Ð¸.',\n    resendEmailButton: 'ÐÑÐ¿ÑÐ°Ð²Ð¸ÑÑ ÐµÑÐµ ÑÐ°Ð·',\n    resendSmsCodePhrase: 'ÐÑÐ»Ð¸ ÐºÐ¾Ð´ Ð½Ðµ Ð¿ÑÐ¸ÑÐ¾Ð´Ð¸Ñ ÑÐµÑÐµÐ· Ð½ÐµÑÐºÐ¾Ð»ÑÐºÐ¾ Ð¼Ð¸Ð½ÑÑ, Ð¿Ð¾Ð¿ÑÐ¾Ð±ÑÐ¹ÑÐµ ÐµÑÐµ ÑÐ°Ð·.',\n    sendAgain: 'Ð¾ÑÐ¿ÑÐ°Ð²Ð¸ÑÑ ÑÐ½Ð¾Ð²Ð°.',\n    sendAgainPhrase: 'ÐÑÐ»Ð¸ ÐºÐ¾Ð´ Ð½Ðµ Ð¿ÑÐ¸ÑÐ¾Ð´Ð¸Ñ ÑÐµÑÐµÐ· Ð½ÐµÑÐºÐ¾Ð»ÑÐºÐ¾ Ð¼Ð¸Ð½ÑÑ',\n    sendButton: 'Ð¿Ð¾ÑÐ»Ð°ÑÑ',\n    sentSmsCodePhrase: 'ÐÑ Ð¾ÑÐ¿ÑÐ°Ð²Ð»ÑÐµÐ¼ ÐºÐ¾Ð´ Ð½Ð° Ð²Ð°Ñ Ð·Ð°ÑÐµÐ³Ð¸ÑÑÑÐ¸ÑÐ¾Ð²Ð°Ð½Ð½ÑÐ¹ Ð¼Ð¾Ð±Ð¸Ð»ÑÐ½ÑÐ¹ ÑÐµÐ»ÐµÑÐ¾Ð½.',\n    sms: 'SMS',\n    smsCodeErrorMessagePhrase: 'ÐÐµÐ²ÐµÑÐ½ÑÐ¹ ÐºÐ¾Ð´. ÐÐ¾Ð²ÑÐ¾ÑÐ¸ÑÐµ Ð¸Ð»Ð¸ Ð¾Ð±ÑÐ°ÑÐ¸ÑÐµÑÑ Ð² ÑÐ»ÑÐ¶Ð±Ñ Ð¿Ð¾Ð´Ð´ÐµÑÐ¶ÐºÐ¸',\n    supportContact: 'ÐÑÐ»Ð¸ Ñ Ð²Ð°Ñ Ð½ÐµÑ Ð´Ð¾ÑÑÑÐ¿Ð° Ðº {0}, Ð¾Ð±ÑÐ°ÑÐ¸ÑÐµÑÑ Ð² ÑÐ»ÑÐ¶Ð±Ñ Ð¿Ð¾Ð´Ð´ÐµÑÐ¶ÐºÐ¸',\n    telephone: 'ÑÐµÐ»ÐµÑÐ¾Ð½',\n    typeCodeTitle: 'ÐÐ²ÐµÐ´Ð¸ÑÐµ Ð¾ÑÐ¿ÑÐ°Ð²Ð»ÐµÐ½Ð½ÑÐ¹ ÐºÐ¾Ð´'\n  }\n};\n","/**\n * @usedBy PoModalPasswordRecoveryComponent\n *\n * @description\n *\n * *Enum* para especificaÃ§Ã£o do tipo de recuperaÃ§Ã£o de senha.\n */\nexport enum PoModalPasswordRecoveryType {\n  /** Possibilita ao usuÃ¡rio optar por envio via email ou SMS */\n  All = 'all',\n\n  /** DefiniÃ§Ã£o para recuperaÃ§Ã£o apenas por email */\n  Email = 'email',\n\n  /** DefiniÃ§Ã£o para recuperaÃ§Ã£o apenas por SMS */\n  SMS = 'sms'\n\n}\n","import { EventEmitter, Input, Output } from '@angular/core';\n\nimport { browserLanguage, poLocaleDefault } from '../../utils/util';\n\nimport { poModalPasswordRecoveryLiterals } from './literals/i18n/po-modal-password-recovery-literals';\nimport { PoModalPasswordRecoveryType } from './enums/po-modal-password-recovery-type.enum';\n\nconst PoModalPasswordRecoveryDefaultMaxLength = 15;\nconst PoModalPasswordRecoveryDefaultMinLength = 15;\nconst PoModalPasswordRecoveryDefaultPhone = '(99) 99999-9999';\nconst PoModalPasswordRecoveryTypeDefault: PoModalPasswordRecoveryType = PoModalPasswordRecoveryType.Email;\n\n/**\n * @description\n *\n * O componente `po-modal-password-recovery` Ã© utilizado como template para solicitaÃ§Ã£o de troca de senha.\n *\n * Ã composto por uma modal que possui trÃªs telas, cada uma com as seguintes caracterÃ­sticas:\n *\n * - A primeira possui campos para preenchimento de email ou nÃºmero de telefone;\n * - Tela com campo para preenchimento de cÃ³digo SMS enviado para o nÃºmero de telefone enviado;\n * - A terceira se trata de uma confirmaÃ§Ã£o de envio de link para a caixa de email do usuÃ¡rio.\n *\n *\n * A propriedade `p-url-recovery` automatiza a rotina do componente e simplifica o processo\n * para recuperaÃ§Ã£o de senha, bastando definir uma url para requisiÃ§Ã£o dos recursos.\n * Seu detalhamento para uso pode ser visto logo abaixo em *propriedades*.\n * Caso julgue necessÃ¡rio, pode-se tambÃ©m definir manualmente a rotina do componente.\n *\n *\n * Para a modal de digitaÃ§Ã£o de cÃ³digo SMS, Ã© possÃ­vel definir uma mensagem de erro\n * customizada com a propriedade `p-code-error` e hÃ¡ um link para\n * reenvio de cÃ³digo por SMS. Ao reenviar, o evento `p-code-submit` envia um objeto com o telefone do usuÃ¡rio e a quantidade\n * de vezes em que o usuÃ¡rio fez a solicitaÃ§Ã£o de reenvio.\n *\n * > Ã indicada a utilizaÃ§Ã£o da tela de digitaÃ§Ã£o para envio de cÃ³digo SMS apenas\n * se a opÃ§Ã£o por envio SMS for disponibilizada para o usuÃ¡rio.\n *\n *\n * A modal de confirmaÃ§Ã£o contÃ©m uma aÃ§Ã£o de reenvio e o evento `p-submit`\n * Ã© quem passa o objeto contendo o email em conjunto com a quantidade de tentativas de reenvio.\n *\n * > A tela de confirmaÃ§Ã£o Ã© indicada para quando o usuÃ¡rio solicitar a troca atravÃ©s do email.\n *\n * > Os textos das modals sÃ£o prÃ©-definidos, imutÃ¡veis e sÃ£o traduzidos de acordo com o idioma do *browser* (pt, en e es)\n *\n * Para que as imagens sejam exibidas corretamente, Ã© necessÃ¡rio incluir o caminho delas ao projeto. Para isso, edite\n * o *assets* no arquivo **angular.json** da aplicaÃ§Ã£o na seguinte ordem:\n * ```\n *   \"assets\": [\n *     \"src/assets\",\n *     \"src/favicon.ico\",\n *     {\n *       \"glob\": \"**\\/*\",\n *       \"input\": \"node_modules/@portinari/style/images\",\n *       \"output\": \"assets/images\"\n *     }\n *   ]\n * ```\n */\nexport abstract class PoModalPasswordRecoveryBaseComponent {\n\n  private _contactEmail: string;\n  private _phoneMask = PoModalPasswordRecoveryDefaultPhone;\n  private _type: PoModalPasswordRecoveryType = PoModalPasswordRecoveryTypeDefault;\n\n  email: string;\n  maxLength = PoModalPasswordRecoveryDefaultMaxLength;\n  minLength = PoModalPasswordRecoveryDefaultMinLength;\n  modalPasswordRecoveryTypeAll: boolean;\n  phone: string;\n  smsCode: string;\n  smsCodeErrorMessage: string;\n\n  literals: { cancelButton: string, closeButton: string, continueButton: string, email: string, emailErrorMessagePhrase: string,\n    emailSentConfirmationPhrase: string, emailSentTitle: string, forgotPasswordTitle: string,\n    insertCode: string, insertEmail: string, insertPhone: string, phoneErrorMessagePhrase: string,\n    prepositionIn: string, prepositionOr: string, recoveryPasswordPhrase: string, resendEmailButton: string,\n    resendSmsCodePhrase: string, sendAgain: string, sendAgainPhrase: string, sendButton: string, sms: string, smsCode: string,\n    smsCodeErrorMessagePhrase: string, sentSmsCodePhrase: string, supportContact: string, telephone: string, typeCodeTitle: string } =\n    {\n      ...poModalPasswordRecoveryLiterals[poLocaleDefault],\n      ...poModalPasswordRecoveryLiterals[browserLanguage()],\n    };\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * DefiniÃ§Ã£o do e-mail que Ã© exibido na mensagem para contato de suporte.\n   */\n  @Input('p-contact-email') set contactEmail(value: string) {\n    this._contactEmail = value;\n\n    this.smsCodeErrorMessage = this.concatenateSMSErrorMessage(value);\n  }\n\n  get contactEmail() {\n    return this._contactEmail;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * DefiniÃ§Ã£o de mensagem de erro customizada para quando o usuÃ¡rio passar um cÃ³digo SMS invÃ¡lido ou errado.\n   */\n  @Input('p-code-error') codeError: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * DefiniÃ§Ã£o da mascara do campo de telefone.\n   *\n   * @default `(99) 99999-9999`\n   */\n  @Input('p-phone-mask') set phoneMask(value: string) {\n    this._phoneMask = value || PoModalPasswordRecoveryDefaultPhone;\n    this.minLength = this.maxLength = this._phoneMask.length;\n  }\n\n  get phoneMask() {\n    return this._phoneMask;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define o tipo de recuperaÃ§Ã£o de senha que serÃ¡ exibido.\n   *\n   * @default `PoModalPasswordRecoveryType.Email`\n   *\n   */\n  @Input('p-type') set type(value: PoModalPasswordRecoveryType) {\n    this._type = (<any>Object).values(PoModalPasswordRecoveryType).includes(value) ? value : PoModalPasswordRecoveryTypeDefault;\n  }\n\n  get type() {\n    return this._type;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Endpoint usado pelo template para requisiÃ§Ã£o do recurso. Quando preenchido,\n   * o mÃ©todos `p-submit` e `p-submit-code` serÃ£o ignorados e o componente adquirirÃ¡ automatizaÃ§Ã£o\n   * para o processo de solicitaÃ§Ã£o de troca de senha.\n   *\n   * ### Processos\n   * Ao digitar um valor vÃ¡lido no campo de email/telefone e pressionar **enviar**,\n   * o componente farÃ¡ uma requisiÃ§Ã£o `POST` na url especificada nesta propriedade passando o objeto contendo o valor definido pelo usuÃ¡rio.\n   *\n   * ```\n   * body {\n   *  email: email,\n   *  retry?: retry\n   * }\n   * ```\n   *\n   *\n   * #### RecuperaÃ§Ã£o por email\n   * Para a recuperaÃ§Ã£o de senha por **email**, o cÃ³digo de resposta HTTP de status esperado Ã© `204`.\n   *\n   * Em caso de **sucesso**, serÃ¡ exibida a modal de confirmaÃ§Ã£o de e-mail para o usuÃ¡rio.\n   *\n   *\n   * > A aÃ§Ã£o **Reenviar** na tela de confirmaÃ§Ã£o efetua uma nova requisiÃ§Ã£o\n   * passando-se o objeto com incremento para o valor da propriedade **retry**.\n   *\n   * *Processo finalizado.*\n   *\n   *\n   * #### RecuperaÃ§Ã£o por SMS\n   * Se a opÃ§Ã£o de recuperaÃ§Ã£o for por **SMS**, o cÃ³digo de status de sucesso deve ser `200`.\n   * Em caso de **sucesso**, abre-se a modal de digitaÃ§Ã£o de cÃ³digo SMS e a resposta\n   * desta requisiÃ§Ã£o deve retornar uma definiÃ§Ã£o de dados abaixo:\n   *\n   * ```\n   * 200:\n   *  {\n   *    hash: hash,\n   *    urlValidationCode?: url\n   *  }\n   * ```\n   *\n   *\n   * - O **hash** serÃ¡ o cÃ³digo de validaÃ§Ã£o da solicitaÃ§Ã£o do SMS para ser enviado juntamente com o cÃ³digo de verificaÃ§Ã£o do SMS;\n   * - **urlValidationCode** Ã© a url usada para validaÃ§Ã£o do cÃ³digo enviado por SMS.\n   *\n   *\n   * > Caso nÃ£o seja passado urlValidationCode, o endpoint usado para validaÃ§Ã£o do cÃ³digo serÃ¡ `<p-url-recovery>/validation`.\n   *\n   *\n   * #### ValidaÃ§Ã£o do cÃ³digo SMS\n   * Ao digitar um valor vÃ¡lido no campo de cÃ³digo SMS e pressionar **continuar**, o componente farÃ¡ uma requisiÃ§Ã£o `POST` contendo:\n   *\n   * ```\n   * POST /<p-url-recovery>/validation OU /<urlValidationCode>\n   * Body {\n   *  hash: hash,\n   *  code: code\n   * }\n   * ```\n   *\n   *\n   * O cÃ³digo de resposta HTTP de status esperado Ã© `200`.\n   *\n   * Em caso de **erro** na validaÃ§Ã£o do cÃ³digo SMS, a modal se mantÃ©m com o campo para digitaÃ§Ã£o\n   * de cÃ³digo SMS\n   *\n   *\n   * > Pode-se atribuir a mensagem de erro (message) para o atributo `p-code-error` conforme retorno abaixo:\n   *\n   * ```\n   * 400\n   *  {\n   *    error {\n   *      message: 'Error Message'\n   *    }\n   *  }\n   * ```\n   *\n   *\n   * Em caso de **sucesso**, espera-se a resposta desta requisiÃ§Ã£o retornando a seguinte definiÃ§Ã£o:\n   *\n   * ```\n   * 200:\n   *  {\n   *    token: token,\n   *    urlChangePassword?: url\n   *  }\n   * ```\n   *\n   *\n   * - **token**: Token de alteraÃ§Ã£o de senha;\n   * - **urlChangePassword**: url para o formulÃ¡rio de alteraÃ§Ã£o de senha.\n   *\n   *\n   * O componente estÃ¡ configurado para redirecionar para a url estabelecida em `urlChangePassword`.\n   *\n   * > Caso nÃ£o seja passado valor para urlChangePassword,\n   * a url usada para validaÃ§Ã£o serÃ¡ a `<p-url-recovery>/changePassword?token=<token>`.\n   *\n   * *Processo finalizado.*\n   */\n  @Input('p-url-recovery') urlRecovery?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * AÃ§Ã£o contendo como parÃ¢metro o cÃ³digo enviado por SMS e digitado pelo usuÃ¡rio.\n   *\n   * > Esta propriedade serÃ¡ ignorada se for definido valor para a propriedade `p-url-recovery`.\n   */\n  @Output('p-code-submit') codeSubmit = new EventEmitter<any>();\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * AÃ§Ã£o contendo o email como parÃ¢metro e que Ã© executada quando o usuÃ¡rio clica sobres os botÃµes de 'enviar' e 'reenviar' e-mail.\n   *\n   * > Esta propriedade serÃ¡ ignorada se for definido valor para a propriedade `p-url-recovery`.\n   */\n  @Output('p-submit') submit = new EventEmitter<any>();\n\n  /**\n   * AcÃ£o para conclusÃ£o de processo e fechamento da modal. Indica-se sua utilizaÃ§Ã£o\n   * para apÃ³s o envio e validaÃ§Ã£o do cÃ³digo SMS enviado pelo usuÃ¡rio.\n   *\n   * > Nas modals em que hÃ¡ a aÃ§Ã£o de 'cancelar' dispensa-se o uso desta aÃ§Ã£o pois o componente jÃ¡ trata o fechamento da modal.\n   */\n  abstract completed(): void;\n\n  /**\n   * Abre a modal de preenchimento de email ou nÃºmero de telefone para solicitaÃ§Ã£o de troca de senha.\n   */\n  abstract open(): void;\n\n  /**\n   * Abre a modal de confirmaÃ§Ã£o de envio de email.\n   */\n  abstract openConfirmation(): void;\n\n  /**\n   * Abre a modal de preenchimento do cÃ³digo SMS enviado ao usuÃ¡rio.\n   */\n  abstract openSmsCode(): void;\n\n  private concatenateSMSErrorMessage(value: string) {\n    const literalCodeErrorMessage = this.literals.smsCodeErrorMessagePhrase;\n\n    return value && value !== '' ? `${literalCodeErrorMessage} ${this.literals.prepositionIn} ${value}.` : literalCodeErrorMessage;\n  }\n\n}\n","/**\n * @docsPrivate\n *\n * @description\n *\n * Enum para definiÃ§Ã£o do tipo de conteÃºdo exibido na modal.\n */\nexport enum PoModalPasswordRecoveryModalContent {\n\n  /** ExibiÃ§Ã£o de modal contendo campo para preenchimento de email ou nÃºmero de telefone */\n  Email = 'email',\n\n  /** ExibiÃ§Ã£o de modal contendo campo para inserÃ§Ã£o de cÃ³digo enviado por SMS */\n  SMSCode = 'smsCode',\n\n  /** ExibiÃ§Ã£o de modal de confirmaÃ§Ã£o de envio */\n  Confirmation = 'confirmation'\n\n}\n","import { HttpClient, HttpParams, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { PoModalPasswordRecovery } from './interfaces/po-modal-password-recovery.interface';\n\n@Injectable()\nexport class PoModalPasswordRecoveryService {\n\n  constructor(private http: HttpClient) { }\n\n  post(\n    urlRecovery: string,\n    item: PoModalPasswordRecovery,\n    params?: HttpParams | { [param: string]: string | Array<string>; }\n    ): Observable<HttpResponse<Object>> {\n    return this.http.post<any>(urlRecovery, item, { observe: 'response', params: params });\n  }\n\n}\n","import { Component, OnDestroy, ViewChild } from '@angular/core';\nimport { AbstractControl, NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { isExternalLink } from '../../utils/util';\nimport { PoI18nPipe, PoModalAction, PoModalComponent, PoRadioGroupOption } from '@portinari/portinari-ui';\n\nimport { PoModalPasswordRecovery } from './interfaces/po-modal-password-recovery.interface';\nimport { PoModalPasswordRecoveryBaseComponent } from './po-modal-password-recovery-base.component';\nimport { PoModalPasswordRecoveryModalContent } from './enums/po-modal-password-recovery-modal-content.enum';\nimport { PoModalPasswordRecoveryService } from './po-modal-password-recovery.service';\nimport { PoModalPasswordRecoveryType } from './enums/po-modal-password-recovery-type.enum';\n\n/**\n * @docsExtends PoModalPasswordRecoveryBaseComponent\n *\n * @example\n *\n * <example name=\"po-modal-password-recovery-basic\" title=\"Portinari Modal Password Recovery Basic\">\n *  <file name=\"sample-po-modal-password-recovery-basic/sample-po-modal-password-recovery-basic.component.html\"> </file>\n *  <file name=\"sample-po-modal-password-recovery-basic/sample-po-modal-password-recovery-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-modal-password-recovery-labs\" title=\"Portinari Modal Password Recovery Labs\">\n *  <file name=\"sample-po-modal-password-recovery-labs/sample-po-modal-password-recovery-labs.component.html\"> </file>\n *  <file name=\"sample-po-modal-password-recovery-labs/sample-po-modal-password-recovery-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-modal-password-recovery-request\" title=\"Portinari Modal Password Recovery Request\">\n *  <file name=\"sample-po-modal-password-recovery-request/sample-po-modal-password-recovery-request.component.html\"> </file>\n *  <file name=\"sample-po-modal-password-recovery-request/sample-po-modal-password-recovery-request.component.ts\"> </file>\n * </example>\n */\n\n@Component({\n  selector: 'po-modal-password-recovery',\n  templateUrl: './po-modal-password-recovery.component.html'\n})\n\nexport class PoModalPasswordRecoveryComponent extends PoModalPasswordRecoveryBaseComponent implements OnDestroy {\n\n  chosenTypeFormOption: string = PoModalPasswordRecoveryType.Email;\n  codeMask: string = '9 9 9 9 9 9';\n  control: AbstractControl;\n  emailModal: boolean = true;\n  emailModalPhrases = { firstPhrase: null as string, secondPhrase: null as string };\n  endpoint: string = '.';\n  invalidCode: boolean = false;\n  invalidEmail: boolean = false;\n  modalTitle: string;\n  modalType: PoModalPasswordRecoveryModalContent = PoModalPasswordRecoveryModalContent.Email;\n  showCustomCodeError: boolean;\n  smsCodeErrorMessagePhrase: string;\n  submittedCodeValue = {} as PoModalPasswordRecovery;\n  submittedContactValue = {} as PoModalPasswordRecovery;\n\n  private passwordRecoverySubscription: Subscription;\n  private smsBodyResponse;\n  private smsCodeSubscription: Subscription;\n\n  @ViewChild('emailForm', { static: false }) emailForm: NgForm;\n\n  @ViewChild('recoveryModal', { static: true }) recoveryModalElement: PoModalComponent;\n\n  @ViewChild('smsCodeForm', { static: false }) smsCodeForm: NgForm;\n\n  primaryAction: PoModalAction = { label: undefined, action: () => { } };\n\n  secondaryAction: PoModalAction = { label: undefined, action: () => { } };\n\n  typeFormOptions: Array<PoRadioGroupOption> = [\n    { label: 'e-mail', value: PoModalPasswordRecoveryType.Email },\n    { label: 'SMS', value: PoModalPasswordRecoveryType.SMS }\n  ];\n\n  constructor(\n    private router: Router,\n    private poI18nPipe: PoI18nPipe,\n    private poModalPasswordRecoveryService: PoModalPasswordRecoveryService\n    ) {\n    super();\n  }\n\n  ngOnDestroy() {\n    if (this.passwordRecoverySubscription) {\n      this.passwordRecoverySubscription.unsubscribe();\n    }\n\n    if (this.smsCodeSubscription) {\n      this.smsCodeSubscription.unsubscribe();\n    }\n  }\n\n  completed() {\n    this.cancelAction();\n  }\n\n  formModelChangesCheck(form: NgForm) {\n    const invalidForm = form.invalid;\n    this.invalidEmail = invalidForm && form.dirty;\n    this.primaryAction.disabled = invalidForm;\n\n    if (this.modalType === PoModalPasswordRecoveryModalContent.SMSCode) {\n      const codeError: boolean = this.codeError !== undefined && this.codeError !== '';\n      this.showCustomCodeError = codeError && form.pristine;\n    }\n  }\n\n  getInputType(type) {\n    this.type = type;\n    this.pipeModalPhrases();\n    setTimeout(() => {\n      this.control = this.emailForm.controls[type];\n      this.formModelChangesCheck(this.emailForm);\n      this.resetFormFields(this.control);\n    });\n  }\n\n  open() {\n    const control = this.checkFormType(this.type);\n    this.control = this.emailForm.controls[control];\n    this.setEmailModalPhrasesAndActions();\n    this.formModelChangesCheck(this.emailForm);\n    this.recoveryModalElement.open();\n  }\n\n  openConfirmation() {\n    this.modalTitle = this.literals.emailSentTitle;\n    this.modalType = PoModalPasswordRecoveryModalContent.Confirmation;\n    this.setActions(this.cancelAction, this.literals.closeButton, this.submitAction, this.literals.resendEmailButton, false);\n  }\n\n  openSmsCode() {\n    this.modalTitle = this.literals.typeCodeTitle;\n    this.modalType = PoModalPasswordRecoveryModalContent.SMSCode;\n    this.setActions(this.submitSmsCodeAction, this.literals.continueButton, this.cancelAction, this.literals.cancelButton, true);\n\n    setTimeout(() => {\n      this.control = this.smsCodeForm.controls['sms'];\n      this.formModelChangesCheck(this.smsCodeForm);\n    });\n  }\n\n  resendSmsCode() {\n    this.incrementRetryAttempts();\n    if (this.urlRecovery) {\n      this.submitActionRequest(this.submittedContactValue, this.type);\n    } else {\n      this.submit.emit(this.submittedContactValue);\n    }\n  }\n\n  private assignSmsResponse(responseObj) {\n    this.smsBodyResponse = Object.assign({}, {hash: responseObj.hash});\n    if (responseObj.urlValidationCode) {\n      this.smsBodyResponse = Object.assign(this.smsBodyResponse, {urlValidationCode: responseObj.urlValidationCode});\n    }\n  }\n\n  private cancelAction() {\n    this.resetFormFields(this.control);\n    this.submittedContactValue = {};\n\n    this.chosenTypeFormOption = PoModalPasswordRecoveryType.Email;\n    this.modalType = PoModalPasswordRecoveryModalContent.Email;\n    this.type = this.modalPasswordRecoveryTypeAll ? PoModalPasswordRecoveryType.All : this.type;\n    this.recoveryModalElement.close();\n  }\n\n  private checkFormType(type: PoModalPasswordRecoveryType) {\n    return type !== PoModalPasswordRecoveryType.All ? type : PoModalPasswordRecoveryType.Email;\n  }\n\n  private formReset(control: AbstractControl) {\n    control.markAsPristine();\n    control.markAsUntouched();\n    control.updateValueAndValidity();\n  }\n\n  private getEmitValue(type: PoModalPasswordRecoveryType) {\n    return type === PoModalPasswordRecoveryType.SMS ? this.phone : this.email;\n  }\n\n  private incrementRetryAttempts() {\n    this.submittedContactValue.retry = (this.submittedContactValue.retry + 1 || 1);\n  }\n\n  private openExternalLink(url, queryParam) {\n    window.open(`${url}?token=${queryParam}`, '_self');\n  }\n\n  private openInternalLink(url, endpoint, queryParam) {\n    this.router.navigate([`${url}/${endpoint}`], { queryParams: { token: queryParam } });\n  }\n\n  private pipeModalPhrases() {\n    if (this.type === PoModalPasswordRecoveryType.SMS) {\n      this.emailModalPhrases.firstPhrase = this.setPipeArguments(this.literals.recoveryPasswordPhrase, this.literals.sms);\n      this.emailModalPhrases.secondPhrase = this.setPipeArguments(this.literals.supportContact, this.literals.telephone);\n    } else {\n      this.emailModalPhrases.firstPhrase = this.setPipeArguments(this.literals.recoveryPasswordPhrase, this.literals.email);\n      this.emailModalPhrases.secondPhrase = this.setPipeArguments(this.literals.supportContact, this.literals.email);\n    }\n  }\n\n  private redirectToChangePassword(recoveryToken: PoModalPasswordRecovery) {\n    const urlChangePassword = recoveryToken.urlChangePassword;\n    if (urlChangePassword) {\n      isExternalLink(urlChangePassword) ?\n      this.openExternalLink(urlChangePassword, recoveryToken.token) :\n      this.openInternalLink(this.urlRecovery, urlChangePassword, recoveryToken.token);\n    } else {\n      const changePasswordEndpoint = 'changePassword';\n      this.openInternalLink(this.urlRecovery, changePasswordEndpoint, recoveryToken.token);\n    }\n  }\n\n  private resetFormFields(control) {\n    this.formReset(control);\n    this.email = undefined;\n    this.phone = undefined;\n    this.smsCode = undefined;\n  }\n\n  private setActions(primaryAction, primarylabel, secondaryAction, secondaryLabel, disabled) {\n    this.primaryAction.action = () => primaryAction.call(this);\n    this.primaryAction.label = primarylabel;\n    this.secondaryAction.action = () => secondaryAction.call(this);\n    this.secondaryAction.label = secondaryLabel;\n    this.primaryAction.disabled = disabled;\n  }\n\n  private setEmailModalPhrasesAndActions() {\n    this.modalTitle = this.literals.forgotPasswordTitle;\n    this.pipeModalPhrases();\n    this.modalPasswordRecoveryTypeAll = this.type === PoModalPasswordRecoveryType.All;\n    this.setActions(this.submitAction, this.literals.sendButton, this.cancelAction, this.literals.cancelButton, true);\n  }\n\n  private setRequestEndpoint(urlValidationCode?: string) {\n    const endpoint = urlValidationCode || 'validation';\n\n    return `${this.urlRecovery}/${endpoint}`;\n  }\n\n  private setPipeArguments(literalAttr: string, arg: string) {\n    return this.poI18nPipe.transform(literalAttr, arg);\n  }\n\n  private submitAction() {\n    this.modalType === PoModalPasswordRecoveryModalContent.Confirmation ? this.incrementRetryAttempts() : this.formReset(this.control);\n    this.submittedContactValue[this.checkFormType(this.type)] = this.getEmitValue(this.type);\n    if (this.urlRecovery) {\n      this.submitActionRequest(this.submittedContactValue, this.type);\n    } else {\n      this.submit.emit(this.submittedContactValue);\n    }\n  }\n\n  private submitActionRequest(data: PoModalPasswordRecovery, modalType: PoModalPasswordRecoveryType) {\n    const params = modalType === PoModalPasswordRecoveryType.SMS ? { type: 'sms' } : undefined;\n\n    this.passwordRecoverySubscription =\n    this.poModalPasswordRecoveryService.post(this.urlRecovery, data, params)\n    .subscribe(response => {\n      if ((modalType === PoModalPasswordRecoveryType.Email || modalType === PoModalPasswordRecoveryType.All) && response.status === 204) {\n        this.openConfirmation();\n      } else if (modalType === PoModalPasswordRecoveryType.SMS && response.status === 200) {\n        this.assignSmsResponse(response.body);\n        this.openSmsCode();\n      }\n    });\n  }\n\n  private submitSmsCodeAction() {\n    this.submittedCodeValue.code = this.smsCode;\n\n    if (this.urlRecovery) {\n      this.submittedCodeValue = Object.assign(this.submittedCodeValue, {hash: this.smsBodyResponse.hash});\n      this.submitSmsCodeRequest(this.submittedCodeValue);\n\n    } else {\n      this.codeSubmit.emit(this.submittedCodeValue);\n    }\n    this.resetFormFields(this.control);\n  }\n\n  private submitSmsCodeRequest(data: PoModalPasswordRecovery) {\n    this.smsCodeSubscription = this.poModalPasswordRecoveryService\n    .post(this.setRequestEndpoint(this.smsBodyResponse.urlValidationCode), data)\n    .subscribe(\n      response => {\n        const successStatus = response.status === 200;\n        if (successStatus) {\n          this.completed();\n          this.redirectToChangePassword(response.body);\n        }\n      },\n      error => {\n        this.codeError = error.error.message;\n        this.openSmsCode();\n      }\n    );\n  }\n\n}\n","import { Component, Input } from '@angular/core';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente utilizado para exibiÃ§Ã£o da mensagem customizada de erro em um campo de formulÃ¡rio.\n */\n@Component({\n  selector: 'po-modal-password-recovery-error-message',\n  templateUrl: './po-modal-password-recovery-error-message.component.html'\n})\n\nexport class PoModalPasswordRecoveryErrorMessageComponent {\n\n  /** Texto exibido na mensagem de erro. */\n  @Input('p-text') text: string;\n\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { PoFieldModule, PoI18nPipe, PoModalModule } from '@portinari/portinari-ui';\n\nimport { PoModalPasswordRecoveryComponent } from './po-modal-password-recovery.component';\nimport { PoModalPasswordRecoveryErrorMessageComponent\n} from './po-modal-password-recovery-error-message/po-modal-password-recovery-error-message.component';\nimport { PoModalPasswordRecoveryService } from './po-modal-password-recovery.service';\n\n/**\n * @description\n *\n * MÃ³dulo do template do po-modal-password-recovery.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n\n    PoFieldModule,\n    PoModalModule\n  ],\n  declarations: [\n    PoModalPasswordRecoveryComponent,\n    PoModalPasswordRecoveryErrorMessageComponent\n  ],\n  exports: [\n    PoModalPasswordRecoveryComponent,\n    PoModalPasswordRecoveryErrorMessageComponent\n  ],\n  providers: [PoI18nPipe, PoModalPasswordRecoveryService]\n})\nexport class PoModalPasswordRecoveryModule { }\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nimport { browserLanguage, convertToBoolean, isTypeof } from './../../utils/util';\nimport { PoSelectOption } from '@portinari/portinari-ui';\n\n@Component({\n  selector: 'po-page-background',\n  templateUrl: './po-page-background.component.html'\n})\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente para definiÃ§Ã£o de cor de fundo e dos logotipos primÃ¡rio e secundÃ¡rio para os templates\n * de `po-page-login` e demais templates de login.\n */\nexport class PoPageBackgroundComponent implements OnInit {\n\n  private _logo?: string;\n  private _secondaryLogo?: string;\n  private _showSelectLanguage?: boolean = false;\n\n  selectedLanguageOption: string;\n\n  selectLanguageOptions: Array<PoSelectOption> = [\n    { label: 'English', value: 'en' },\n    { label: 'EspaÃ±ol', value: 'es' },\n    { label: 'PortuguÃªs', value: 'pt' },\n    { label: 'PÑÑÑÐºÐ¸Ð¹', value: 'ru' }\n  ];\n\n  /** Insere uma imagem de destaque ao lado direito do container. */\n  @Input('p-background') background?: string;\n\n  /** Designa se o logotipo deve desaparecer em resoluÃ§Ãµes menores. */\n  @Input('p-hide-logo') hideLogo?: boolean;\n\n  /** Texto de destaque sobreposto Ã  imagem de destaque. Essa opÃ§Ã£o Ã© utilizada em conjunto com o atributo `p-background`. */\n  @Input('p-highlight-info') highlightInfo?: string;\n\n  /** Caminho para a logomarca localizada na parte superior. */\n  @Input('p-logo') set logo(value: any) {\n    this._logo = isTypeof(value, 'string') && value.trim() ? value : undefined;\n  }\n\n  get logo() {\n    return this._logo;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caminho para a logomarca localizada no rodapÃ©.\n   */\n  @Input('p-secondary-logo') set secondaryLogo(value: any) {\n    this._secondaryLogo = isTypeof(value, 'string') && value.trim() ? value : undefined;\n  }\n\n  get secondaryLogo() {\n    return this._secondaryLogo;\n  }\n\n  /** Define se o seletor de idiomas deve ser exibido. */\n  @Input('p-show-select-language') set showSelectLanguage(showSelectLanguage: boolean) {\n    this._showSelectLanguage = convertToBoolean(showSelectLanguage);\n  }\n  get showSelectLanguage() {\n    return this._showSelectLanguage;\n  }\n\n  /**\n   * Evento disparado ao selecionar alguma opÃ§Ã£o no seletor de idiomas.\n   * Para este evento serÃ¡ passado como parÃ¢metro o valor de idioma selecionado.\n   */\n  @Output('p-selected-language') selectedLanguage?: EventEmitter<any> = new EventEmitter<any>();\n\n  ngOnInit() {\n    this.selectedLanguageOption = browserLanguage();\n  }\n\n  onChangeLanguage() {\n    this.selectedLanguage.emit(this.selectedLanguageOption);\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoDividerModule, PoFieldModule } from '@portinari/portinari-ui';\n\nimport { PoPageBackgroundComponent } from './po-page-background.component';\n\n/**\n * @description\n *\n * MÃ³dulo do template do po-page-background.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    PoDividerModule,\n    PoFieldModule,\n  ],\n  declarations: [\n    PoPageBackgroundComponent\n  ],\n  exports: [\n    PoPageBackgroundComponent\n  ]\n})\nexport class PoPageBackgroundModule { }\n","/**\n * @usedBy PoPageBlockedUserComponent\n *\n * @description\n *\n * *Enum* para os tipos de motivo de bloqueio de usuÃ¡rio. As informaÃ§Ãµes modificam conforme o motivo selecionado pelo desenvolvedor.\n */\nexport enum PoPageBlockedUserReason {\n\n  /** Sem definiÃ§Ã£o; a tela exibirÃ¡ conteÃºdo de bloqueio genÃ©rico. */\n  None = 'none',\n\n  /** DefiniÃ§Ã£o para tentativas de acesso esgotadas. */\n  ExceededAttempts = 'exceededAttempts',\n\n  /** DefiniÃ§Ã£o para senha expirada. */\n  ExpiredPassword = 'expiredPassword',\n\n}\n","import { Input, OnInit } from '@angular/core';\n\nimport { PoPageBlockedUserReason } from './enums/po-page-blocked-user-reason.enum';\nimport { PoPageBlockedUserReasonParams } from './interfaces/po-page-blocked-user-reason-params.interface';\n\nconst PoPageBlockedUserReasonDefault: PoPageBlockedUserReason = PoPageBlockedUserReason.None;\nconst PoPageBlockedUserParamsDefault: PoPageBlockedUserReasonParams = { attempts: 5, days: 90, hours: 24 };\n\n/**\n * @description\n *\n * O componente `po-page-blocked-user` Ã© utilizado como template para tela de bloqueio de usuÃ¡rio.\n * Ã possÃ­vel definir entre trÃªs tipos de telas para alertar o usuÃ¡rio sobre um eventual bloqueio de login.\n *\n * Cada modelo de bloqueio possui uma imagem e texto adequados Ã  situaÃ§Ã£o.\n * Os textos das telas sÃ£o prÃ©-definidos e imutÃ¡veis, porÃ©m,\n * Ã© possÃ­vel estipular parÃ¢metros como dias, horas e tentativas de acesso esgotadas.\n *\n * Por fim, hÃ¡ propriedades para adiÃ§Ã£o de telefone e/ou email para contato e tambÃ©m a definiÃ§Ã£o para a url de retorno.\n *\n * Para que as imagens sejam exibidas corretamente, Ã© necessÃ¡rio incluir o caminho delas ao projeto. Para isso, edite\n * o *assets* no arquivo **angular.json** da aplicaÃ§Ã£o na seguinte ordem:\n * ```\n *   \"assets\": [\n *     \"src/assets\",\n *     \"src/favicon.ico\",\n *     {\n *       \"glob\": \"**\\/*\",\n *       \"input\": \"node_modules/@portinari/style/images\",\n *       \"output\": \"assets/images\"\n *     }\n *   ]\n * ```\n *\n * _______________\n *\n * #### Praticidade\n * O `po-page-blocked-user`, assim como suas propriedades, pode tambÃ©m ser transmitido diretamente pelas configuraÃ§Ã£os de rota e,\n * desta maneira, dispensa-se qualquer menÃ§Ã£o e/ou importaÃ§Ã£o no restante da aplicaÃ§Ã£o. O exemplo abaixo exemplifica\n * a forma dinÃ¢mica com a qual o template pode ser gerado se navegasse para uma rota denominada como `/access-denied`:\n *\n *\n * ```\n *   import { PoPageBlockedUserComponent, PoPageBlockedUserReason } from '@portinari/portinari-templates';\n *\n *   ...\n *   const routes: Routes = [\n *     {\n *       path: 'access-denied', component: PoPageBlockedUserComponent, data: {\n *         contactEmail: 'dev.portinari@portinari.com',\n *         contactPhone: '0800 1234 000',\n *         reason: PoPageBlockedUserReason.ExpiredPassword,\n *         urlBack: '/home'\n *       }\n *     }\n *     ...\n *   ];\n *\n *   @NgModule({\n *     imports: [RouterModule.forRoot(routes)],\n *     exports: [RouterModule]\n *   })\n *   export class AppRoutingModule { }\n * ```\n *\n * > Ã essencial que siga a nomenclatura dos atributos exemplificados acima para sua efetiva funcionalidade.\n *\n */\nexport class PoPageBlockedUserBaseComponent {\n\n  private _params: PoPageBlockedUserReasonParams = {...PoPageBlockedUserParamsDefault};\n  private _reason: PoPageBlockedUserReason = PoPageBlockedUserReason.None;\n  private _urlBack: string = '/';\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Valor para o email de contato que deve ser exibido. A aÃ§Ã£o estÃ¡ de acordo com o protocolo MAILTO e Ã© possÃ­vel definir\n   * tanto rotas internas quanto externas.\n   */\n  @Input('p-contact-email') contactEmail: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Valor para o telefone de contato que deve ser exibido. A aÃ§Ã£o estÃ¡ de acordo com o protocolo TEL.\n   *\n   * > A propriedade nÃ£o contem tratamento de mÃ¡scara, fica a critÃ©rio do desenvolvedor defini-la.\n   */\n  @Input('p-contact-phone') contactPhone: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * DesignaÃ§Ã£o de valores usados para a customizaÃ§Ã£o da mensagem de bloqueio.\n   * Confira abaixo os valores prÃ©-definidos.\n   *\n   * ```\n   *  const customLiterals: PoPageBlockedUserReasonParams = {\n   *    attempts: 5,\n   *    days: 90,\n   *    hours: 24\n   *  };\n   * ```\n   *\n   * > Salientamos a importÃ¢ncia e atenÃ§Ã£o para configuraÃ§Ã£o desses valores conforme definidos no projeto.\n   *\n   * > Veja os parÃ¢metros customizÃ¡veis na interface `PoPageBlockedUserReasonParams`.\n   *\n   */\n  @Input('p-params') set params(value: PoPageBlockedUserReasonParams) {\n    if (value instanceof Object) {\n      const keys = Object.keys(value);\n      const newParams = {...PoPageBlockedUserParamsDefault};\n\n      keys.forEach(key => {\n        newParams[key] = value[key];\n      });\n\n      this._params = newParams;\n    } else {\n      this._params = {...PoPageBlockedUserParamsDefault};\n    }\n  }\n\n  get params() {\n    return this._params;\n  }\n\n  /** Caminho para a logomarca localizada na parte superior, caso nÃ£o seja definida ou seja invÃ¡lida assume a logo padrÃ£o da PORTINARI. */\n  @Input('p-logo') logo?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * DefiniÃ§Ã£o de motivo de bloqueio de usuÃ¡rio. As informaÃ§Ãµes modificam conforme o motivo selecionado.\n   *\n   * > Veja os valores vÃ¡lidos no *enum* `PoPageBlockedUserReason`.\n   *\n   * @default `PoPageBlockedUserReason.None`\n   */\n  @Input('p-reason') set reason(value: PoPageBlockedUserReason) {\n    this._reason = (<any>Object).values(PoPageBlockedUserReason).includes(value) ? value : PoPageBlockedUserReasonDefault;\n  }\n\n  get reason() {\n    return this._reason;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caminho para a logomarca localizada no rodapÃ©.\n   */\n  @Input('p-secondary-logo') secondaryLogo?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * URL para a aÃ§Ã£o de retorno da pÃ¡gina.\n   *\n   * @default `/`\n   */\n  @Input('p-url-back') set urlBack(url: string) {\n    this._urlBack = url;\n  }\n\n  get urlBack() {\n    return this._urlBack;\n  }\n\n}\n","import { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\nimport { browserLanguage, isExternalLink, poLocaleDefault } from '../../utils/util';\n\nimport { PoPageBlockedUserBaseComponent } from './po-page-blocked-user-base.component';\n\nexport const poPageBlockedUserButtonLiterals: Object = {\n  en: <any> {\n    primaryButton: 'Back to home screen',\n  },\n  es: <any> {\n    primaryButton: 'Volver al inicio',\n  },\n  pt: <any> {\n    primaryButton: 'Voltar para o inÃ­cio',\n  },\n  ru: <any> {\n    primaryButton: 'ÐÐµÑÐµÐ¹ÑÐ¸ Ðº Ð½Ð°ÑÐ°Ð»Ñ ÑÑÑÐ°Ð½Ð¸ÑÑ',\n  }\n};\n\n/**\n * @docsExtends PoPageBlockedUserBaseComponent\n *\n * @example\n *\n * <example name=\"po-page-blocked-user-basic\" title=\"Portinari Page Blocked User Basic\">\n *  <file name=\"sample-po-page-blocked-user-basic/sample-po-page-blocked-user-basic.component.html\"> </file>\n *  <file name=\"sample-po-page-blocked-user-basic/sample-po-page-blocked-user-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-blocked-user-labs\" title=\"Portinari Page Blocked User Labs\">\n *  <file name=\"sample-po-page-blocked-user-labs/sample-po-page-blocked-user-labs.component.html\"> </file>\n *  <file name=\"sample-po-page-blocked-user-labs/sample-po-page-blocked-user-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-blocked-user-exceeded-attempts\" title=\"Portinari Page Blocked User Exceeded Attempts\">\n *  <file name=\"sample-po-page-blocked-user-exceeded-attempts/sample-po-page-blocked-user-exceeded-attempts.component.html\"> </file>\n *  <file name=\"sample-po-page-blocked-user-exceeded-attempts/sample-po-page-blocked-user-exceeded-attempts.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-blocked-user-expired-password\" title=\"Portinari Page Blocked User Expired Password\">\n *  <file name=\"sample-po-page-blocked-user-expired-password/sample-po-page-blocked-user-expired-password.component.html\"> </file>\n *  <file name=\"sample-po-page-blocked-user-expired-password/sample-po-page-blocked-user-expired-password.component.ts\"> </file>\n * </example>\n */\n\n@Component({\n  selector: 'po-page-blocked-user',\n  templateUrl: './po-page-blocked-user.component.html'\n})\n\nexport class PoPageBlockedUserComponent extends PoPageBlockedUserBaseComponent implements OnInit {\n\n  literals = {\n    ...poPageBlockedUserButtonLiterals[poLocaleDefault],\n    ...poPageBlockedUserButtonLiterals[browserLanguage()],\n  };\n\n  constructor(private activatedRoute: ActivatedRoute, private router: Router) {\n    super();\n  }\n\n  ngOnInit() {\n    this.checkingForRouteMetadata(this.activatedRoute.snapshot.data);\n  }\n\n  navigateTo(url: string) {\n    isExternalLink(url) ?  window.open(url) : this.router.navigate([url || '/']);\n  }\n\n  private checkingForMetadataProperty(object, property) {\n    if (Object.prototype.hasOwnProperty.call(object, property)) {\n      return object[property];\n    }\n  }\n\n  private checkingForRouteMetadata(data) {\n    if (Object.keys(data).length !== 0) {\n      this.contactEmail = this.checkingForMetadataProperty(data, 'contactEmail') || this.contactEmail;\n      this.contactPhone = this.checkingForMetadataProperty(data, 'contactPhone') || this.contactPhone;\n      this.reason = this.checkingForMetadataProperty(data, 'reason') || this.reason;\n      this.urlBack = this.checkingForMetadataProperty(data, 'urlBack') || this.urlBack;\n    }\n  }\n\n}\n","import { AfterViewInit, ChangeDetectorRef, Component, ElementRef, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\n\nconst poPageBlockedUserContactItemMargin = 16;\n\n@Component({\n  selector: 'po-page-blocked-user-contacts',\n  templateUrl: './po-page-blocked-user-contacts.component.html'\n})\nexport class PoPageBlockedUserContactsComponent implements AfterViewInit, OnChanges {\n\n  literals: Object;\n  overflowItem: boolean = false;\n\n  private mailText: string;\n  private phoneText: string;\n\n  @Input('p-email') email: string;\n\n  @Input('p-phone') phone: string;\n\n  @ViewChild('contactGroup', { static: true }) contactGroup: ElementRef;\n\n  @ViewChild('mailItem', { static: true }) mailItem: ElementRef;\n\n  @ViewChild('phoneItem', { static: true }) phoneItem: ElementRef;\n\n  constructor(private changeDetector: ChangeDetectorRef) {}\n\n  ngAfterViewInit() {\n    this.checkContactItemWidth();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.email || changes.phone) {\n      this.checkContactItemWidth();\n    }\n  }\n\n  private checkContactItemWidth() {\n    if ( !this.email || !this.phone ) {\n      this.overflowItem = true;\n      return;\n    } else {\n      setTimeout(() => {\n        const phoneWidth = this.phoneItem.nativeElement.offsetWidth;\n        const mailWidth = this.mailItem.nativeElement.offsetWidth;\n        const contactGroupHalfWidth = this.contactGroup.nativeElement.offsetWidth / 2;\n\n        this.overflowItem = phoneWidth > contactGroupHalfWidth || mailWidth > contactGroupHalfWidth - poPageBlockedUserContactItemMargin;\n      });\n    }\n    this.changeDetector.detectChanges();\n  }\n\n}\n","export const poPageBlockedUserLiterals = {\n  none: {\n    pt: {\n      title: 'Opa!',\n      firstPhrase: 'Tivemos que bloquear essa tela temporariamente.',\n      secondPhrase: 'Mas nÃ£o se preocupe! Basta fazer seu login novamente.'\n    },\n    en: {\n      title: 'Oops!',\n      firstPhrase: 'We had to temporarily block this screen.',\n      secondPhrase: 'But do not worry! Just sign in again.'\n    },\n    es: {\n      title: 'Opa!',\n      firstPhrase: 'Tuvimos que bloquear esta pantalla temporalmente.',\n      secondPhrase: 'Â¡Pero no se preocupe! SÃ³lo tienes que iniciar sesiÃ³n de nuevo.'\n    },\n  },\n  exceededAttempts: {\n    pt: {\n      title:\n        'Opa!',\n      firstPhrase:\n        `Para sua seguranÃ§a, apÃ³s {0} tentativa(s) de senha seu usuÃ¡rio fica bloqueado e nÃ£o pode ser acessado em {1} hora(s) :( `,\n      secondPhrase:\n        'Isso Ã© para evitar que hackers invadam sua conta.',\n      thirdPhrase:\n        'Mas nÃ£o se preocupe! Se vocÃª for o dono da conta e apenas esqueceu sua senha, basta entrar em contato com o suporte.'\n    },\n    en: {\n      title:\n        'Oops!',\n      firstPhrase:\n        `For your security, after {0} attempt(s) of password\n        your user gets blocked and can not be accessed in {1} hour(s) :(`,\n      secondPhrase:\n        'This is to prevent hackers from hacking into your account.',\n      thirdPhrase:\n        'But do not worry! If you are the owner of the account and just forgot your password, just contact support.'\n    },\n    es: {\n      title:\n        'Opa!',\n      firstPhrase:\n        `Para su seguridad, despuÃ©s de {0} intento(s) de contraseÃ±a\n        su usuario queda bloqueado y no puede ser accedido en {1} hora(s) :(`,\n      secondPhrase:\n        'Esto es para evitar que los hackers invadan su cuenta.',\n      thirdPhrase:\n        `Â¡Pero no se preocupe! Si usted es el dueÃ±o de la cuenta\n        y acaba de olvidar su contraseÃ±a, simplemente pÃ³ngase en contacto con el soporte.`\n    }\n  },\n  expiredPassword: {\n    pt: {\n      title:\n        'Opa! Sua senha expirou',\n      firstPhrase:\n        `A cada {0} dia(s) Ã© preciso criar uma nova senha por questÃ£o de seguranÃ§a. ApÃ³s esses {0} dia(s) seu acesso Ã© bloqueado :(`,\n      secondPhrase:\n        'Mas nÃ£o se preocupe! Basta entrar em contato com o administrador do sistema.'\n    },\n    en: {\n      title:\n        'Oops! Your Password has expired',\n      firstPhrase:\n        `Every {0} day(s) you need to create a new password for security reasons.\n        After these {0} day(s) your access is blocked :(`,\n      secondPhrase:\n        'But do not worry! Just contact your system administrator.'\n    },\n    es: {\n      title:\n        'Opa! Su contraseÃ±a ha caducado',\n      firstPhrase:\n        `Cada {0} dÃ­a(s) es necesario crear una nueva contraseÃ±a por razones de seguridad.\n        DespuÃ©s de estos {0} dÃ­a(s) su acceso estÃ¡ bloqueado :(`,\n      secondPhrase:\n        'Â¡Pero no se preocupe! SÃ³lo tienes que ponerse en contacto con el administrador del sistema.'\n    }\n  }\n};\n","import { ChangeDetectorRef, Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\n\nimport { browserLanguage, poLocaleDefault } from '../../../utils/util';\n\nimport { poPageBlockedUserLiterals } from './../literals/i18n/po-page-blocked-user-literals';\nimport { PoPageBlockedUserReason } from '../enums/po-page-blocked-user-reason.enum';\nimport { PoPageBlockedUserReasonParams } from '../interfaces/po-page-blocked-user-reason-params.interface';\n\n@Component({\n  selector: 'po-page-blocked-user-reason',\n  templateUrl: './po-page-blocked-user-reason.component.html'\n})\nexport class PoPageBlockedUserReasonComponent implements OnChanges, OnInit {\n\n  literalParams;\n  literals: {title: string, firstPhrase: string, secondPhrase: string, thirdPhrase: string};\n\n  @Input('p-params') params: PoPageBlockedUserReasonParams;\n\n  @Input('p-reason') reason: PoPageBlockedUserReason;\n\n  constructor(private changeDetector: ChangeDetectorRef) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.reason || changes.params) {\n      this.getLiterals();\n    }\n  }\n\n  ngOnInit() {\n    this.getLiterals();\n  }\n\n  getImageByReasonType() {\n    let reasonImage;\n\n    switch (this.reason) {\n      case 'none': {\n        reasonImage = 'big-lock';\n        break;\n      }\n      case 'exceededAttempts': {\n        reasonImage = 'blocked-user';\n        break;\n      }\n      case 'expiredPassword': {\n        reasonImage = 'expired';\n        break;\n      }\n    }\n    return `./assets/images/${reasonImage}.svg`;\n  }\n\n  getParams() {\n    this.literalParams =\n      this.reason === 'expiredPassword' ? [this.params.days, this.params.days] : [this.params.attempts, this.params.hours];\n  }\n\n  private getLiterals() {\n    this.getParams();\n\n    this.literals = {\n      ...poPageBlockedUserLiterals[this.reason][poLocaleDefault],\n      ...poPageBlockedUserLiterals[this.reason][browserLanguage()],\n    };\n\n    this.changeDetector.detectChanges();\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoModule } from '@portinari/portinari-ui';\n\nimport { PoPageBackgroundModule } from '../po-page-background/index';\nimport { PoPageBlockedUserComponent } from './po-page-blocked-user.component';\nimport { PoPageBlockedUserContactsComponent } from './po-page-blocked-user-contacts/po-page-blocked-user-contacts.component';\nimport { PoPageBlockedUserReasonComponent } from './po-page-blocked-user-reason/po-page-blocked-user-reason.component';\n\n/**\n * @description\n *\n * MÃ³dulo do template do po-page-blocked-user.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n\n    PoModule,\n    PoPageBackgroundModule,\n  ],\n  declarations: [\n    PoPageBlockedUserComponent,\n    PoPageBlockedUserContactsComponent,\n    PoPageBlockedUserReasonComponent,\n  ],\n  exports: [\n    PoPageBlockedUserComponent,\n    PoPageBlockedUserContactsComponent,\n    PoPageBlockedUserReasonComponent,\n  ]\n})\nexport class PoPageBlockedUserModule { }\n","import { EventEmitter, Input, Output } from '@angular/core';\n\nimport { PoModalAction } from '@portinari/portinari-ui';\n\nimport { convertToBoolean, isExternalLink, isTypeof } from '../../utils/util';\n\nimport { PoPageChangePasswordRecovery } from './interfaces/po-page-change-password-recovery.interface';\nimport { PoPageChangePasswordRequirement } from './interfaces/po-page-change-password-requirement.interface';\n\n/**\n * @description\n *\n * O componente `po-page-change-password` Ã© utilizado como template para tela de cadastro ou alteraÃ§Ã£o de senha.\n *\n * Apresenta dicas e regras para senhas mais seguras e tambÃ©m possibilidade de personalizar o redirecionamento para as telas\n * 'esqueceu a senha', 'voltar' e 'entrar no sistema'. Os textos das telas sÃ£o prÃ©-definidos e imutÃ¡veis.\n *\n * A propriedade `p-url-new-password` automatiza a rotina do template e simplifica o processo de cadastro/alteraÃ§Ã£o de senha, bastando\n * definir uma url para POST das informaÃ§Ãµes digitadas pelo usuÃ¡rio.  A flexibilidade e praticidade podem chegar a um nÃ­vel em que o\n * desenvolvimento da aplicaÃ§Ã£o no *client side* Ã© desprovida de qualquer cÃ³digo-fonte relacionado Ã  rotina de cadastro/alteraÃ§Ã£o de senha.\n * Seu detalhamento para uso pode ser visto logo abaixo em *propriedades*.\n * Caso julgue necessÃ¡rio, pode-se tambÃ©m definir manualmente a rotina do componente.\n *\n * Para que as imagens sejam exibidas corretamente, Ã© necessÃ¡rio incluir o caminho delas ao projeto. Para isso, edite\n * o *assets* no arquivo **angular.json** da aplicaÃ§Ã£o na seguinte ordem:\n * ```\n *   \"assets\": [\n *     \"src/assets\",\n *     \"src/favicon.ico\",\n *     {\n *       \"glob\": \"**\\/*\",\n *       \"input\": \"node_modules/@portinari/style/images\",\n *       \"output\": \"assets/images\"\n *     }\n *   ]\n * ```\n */\nexport abstract class PoPageChangePasswordBaseComponent {\n\n  private _hideCurrentPassword: boolean = false;\n  private _recovery: string | PoPageChangePasswordRecovery | Function;\n  private _requirements: Array<PoPageChangePasswordRequirement> = [];\n  private _urlHome: string = '/';\n  protected validatorChange: any;\n\n  confirmPassword: string;\n  currentPassword: string;\n  modalAction: PoModalAction;\n  newPassword: string;\n  recoveryUrlType: string;\n  showRequirements: boolean;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Esconde o campo `Senha atual` para que o template seja para criaÃ§Ã£o de senha.\n   *\n   * @default `false`\n   */\n  @Input('p-hide-current-password') set hideCurrentPassword(value: boolean) {\n    this._hideCurrentPassword = convertToBoolean(value);\n  }\n\n  get hideCurrentPassword(): boolean {\n    return this._hideCurrentPassword;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caminho para a logomarca localizada na parte superior.\n   *\n   * > Caso seja indefinida o espaÃ§o se mantÃ©m preservado porÃ©m vazio.\n   */\n  @Input('p-logo') logo?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * URL para a aÃ§Ã£o do link `Esqueceu a senha`.\n   *\n   * A propriedade aceita os seguintes tipos:\n   *\n   * - **String**: informe uma url externa ou uma rota vÃ¡lida;\n   * - **Function**: pode-se customizar a aÃ§Ã£o. Para esta possilidade basta atribuir:\n   * ```\n   * <po-page-change-password>\n   *      [recovery]=\"this.myFunc.bind(this)\";\n   * </po-page-change-password>\n   * ```\n   *\n   * - **PoPageChangePasswordRecovery**: cria-se vÃ­nculo automÃ¡tico com o template **po-modal-password-recovery**.\n   *   O objeto deve conter a **url** para requisiÃ§Ã£o dos recursos e pode-se definir o **tipo** de modal para recuperaÃ§Ã£o de senha,\n   *   **email** para contato e **mÃ¡scara** do campo de telefone.\n   *\n   * > Caso nÃ£o tenha valor o link `Esqueceu a senha` desaparece.\n   */\n  @Input('p-recovery') set recovery(value: string | Function | PoPageChangePasswordRecovery) {\n    this._recovery = value;\n\n    if (isTypeof(value, 'string')) {\n      this.recoveryUrlType = isExternalLink(value) ? 'externalLink' : 'internalLink';\n    }\n  }\n\n  get recovery() {\n    return this._recovery;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Lista de regras para criaÃ§Ã£o e alteraÃ§Ã£o de senha.\n   */\n  @Input('p-requirements') set requirements(value: Array<PoPageChangePasswordRequirement>) {\n    this._requirements = value || [];\n    this.showRequirements = this._requirements.length > 0;\n  }\n  get requirements() {\n    return this._requirements;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caminho para a logomarca localizada no rodapÃ©.\n   */\n  @Input('p-secondary-logo') secondaryLogo?: string;\n\n  /**\n   * Token para solicitaÃ§Ã£o de troca/recuperaÃ§Ã£o de senha.\n   *\n   * > Esta propriedade serÃ¡ ignorada caso exista um token como parÃ¢metro na URL inicial do template.\n   */\n  @Input('p-token') token?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * URL para a aÃ§Ã£o de retorno da pÃ¡gina.\n   *\n   * > O botÃ£o `Voltar` aparece apenas para telas de alteraÃ§Ã£o de senha, ou seja, sÃ³ aparece se a propriedade `p-hide-current-password` for\n   * falsa.\n   *\n   * @default `/`\n   */\n  @Input('p-url-back') urlBack: string = '/';\n\n  /**\n   * Endpoint usado pelo template para realizar um POST. Quando preenchido, o mÃ©todo `p-submit` serÃ¡ ignorado e o componente adquirirÃ¡\n   * automatizaÃ§Ã£o para o processo de cadastro/troca de senha.\n   *\n   * ### Processo\n   * Ao digitar um valor vÃ¡lido nos campos de senha e pressionar **salvar**,\n   * o componente farÃ¡ uma requisiÃ§Ã£o `POST` na url especificada nesta propriedade passando o objeto contendo os valores definidos pelo\n   * usuÃ¡rio.\n   *\n   * ```\n   * body {\n   *  token?: token,\n   *  oldPassword?: oldPassword,\n   *  newPassword: newPassword\n   * }\n   * ```\n   *\n   * O cÃ³digo de resposta HTTP de status esperado Ã© `204`.\n   *\n   * Em caso de **sucesso**, serÃ¡ exibida a modal de confirmaÃ§Ã£o de senha alterada.\n   *\n   * > O token serÃ¡ informado pela propriedade `p-token`do componente ou por um *query parameter* na URL do template.\n   *\n   * *Processo finalizado.*\n   *\n   * _______________\n   *\n   * #### Praticidade\n   * As informaÃ§Ãµes do serviÃ§o de autenticaÃ§Ã£o tambÃ©m podem ser transmitidas diretamente pelas configuraÃ§Ã£os de rota e, desta maneira,\n   * dispensa-se qualquer menÃ§Ã£o e/ou importaÃ§Ã£o do componente `po-page-change-password` no restante da aplicaÃ§Ã£o. O exemplo abaixo\n   * exemplifica a forma dinÃ¢mica com a qual o template de tela de troca de senha pode ser gerado ao navegar para rota `/change-password`, e\n   * tambÃ©m como ele se comunica com o serviÃ§o para efetuaÃ§Ã£o do processo de troca de senha do usuÃ¡rio e solicitaÃ§Ã£o de nova senha.\n   * Basta definir nas configuraÃ§Ãµes de rota:\n   *\n   *\n   * ```\n   *   import { PoModalPasswordRecoveryType, PoPageChangePasswordComponent } from '@portinari/portinari-templates';\n   *\n   *   ...\n   *   const routes: Routes = [\n   *     {\n   *       path: 'change-password', component: PoPageChangePasswordComponent, data: {\n   *         serviceApi: 'https://portinari.io/sample/api/new-password',\n   *         recovery: {\n   *           url: 'https://portinari.io/sample/api/users',\n   *           type: PoModalPasswordRecoveryType.All,\n   *           contactMail: 'dev.portinari@portinari.com',\n   *           phoneMask: '9-999-999-9999'\n   *         }\n   *       }\n   *     }\n   *     ...\n   *   ];\n   *\n   *   @NgModule({\n   *     imports: [RouterModule.forRoot(routes)],\n   *     exports: [RouterModule]\n   *   })\n   *   export class AppRoutingModule { }\n   * ```\n   *\n   *\n   * O metadado `serviceApi` deve ser a **url** para requisiÃ§Ã£o dos recursos de troca de senha. E `recovery` Ã© a interface\n   * `PoPageChangePasswordRecovery` responsÃ¡vel pelas especificaÃ§Ãµes contidas na modal de recuperaÃ§Ã£o de senha.\n   *\n   * > Ã essencial que siga a nomenclatura dos atributos exemplificados acima para sua efetiva funcionalidade.\n   *\n   */\n  @Input('p-url-new-password') urlNewPassword?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * URL para a aÃ§Ã£o do botÃ£o `Entrar no sistema` da modal de confirmaÃ§Ã£o que aparece apÃ³s salvar a senha ou se chamada pelo mÃ©todo\n   * `openConfirmation`.\n   *\n   * @default `/`\n   */\n  @Input('p-url-home') set urlHome(value: string) {\n    this._urlHome = value;\n    this.modalAction.action = this.navigateTo.bind(this, this.urlHome);\n  }\n  get urlHome() {\n    return this._urlHome;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * FunÃ§Ã£o executada ao submeter o form pelo botÃ£o salvar.\n   *\n   * Caso definida essa funÃ§Ã£o, a modal de confirmaÃ§Ã£o nÃ£o aparece, mas pode ser chamada pelo\n   * mÃ©todo `openConfirmation`. Exemplo:\n   *\n   * ```\n   * @ViewChild(PoPageChangePasswordComponent) changePassword: PoPageChangePasswordComponent;\n   *\n   * onSubmit() {\n   *  this.changePassword.openConfirmation();\n   * }\n   *\n   * ```\n   * > Esta propriedade serÃ¡ ignorada se for definido valor para a propriedade `p-url-new-password`.\n   */\n  @Output('p-submit') submit: EventEmitter<any> = new EventEmitter();\n\n  abstract navigateTo(url: string): void;\n\n}\n","export const poPageChangePasswordLiterals = {\n  en: <any> {\n    backButton: 'Back',\n    confirmPassword: 'Confirm password',\n    createNewPassword: 'Create new password',\n    createNewPasswordPhrase: 'Protect your account with a personal password created by you',\n    currentPassword: 'Current password',\n    enterSystemButton: 'Enter the system',\n    forgotPassword: 'Forgot your password?',\n    newPassword: 'New password',\n    passwordSuccessfullyCreated: 'Password successfully created!',\n    passwordSuccessfullyUpdated: 'Password successfully updated!',\n    requirements: 'Password requirements',\n    safetyTips: 'Safety tips!',\n    safetyTipsFirst: 'is used in other accounts;',\n    safetyTipsPhrase: 'Avoid a password that:',\n    safetyTipsSecond: 'has personal information like your name, nickname or family names;',\n    safetyTipsThird: 'that uses obvious sequences like \"123\" or obvious words like \"password\";',\n    saveButton: 'Save',\n  },\n  es: <any> {\n    backButton: 'Volver',\n    confirmPassword: 'Confirmar seÃ±a',\n    createNewPassword: 'Crear nueva contraseÃ±a',\n    createNewPasswordPhrase: 'Proteger su cuenta con una contraseÃ±a personal creada por usted',\n    currentPassword: 'ContraseÃ±a actual',\n    enterSystemButton: 'Entrar en el sistema',\n    forgotPassword: 'Â¿Olvidaste tu contraseÃ±a?',\n    newPassword: 'Nueva contraseÃ±a',\n    passwordSuccessfullyCreated: 'ContraseÃ±a creada correctamente!',\n    passwordSuccessfullyUpdated: 'ContraseÃ±a correctamente actualizada!',\n    requirements: 'Requisitos de contraseÃ±a',\n    safetyTips: 'Consejos de seguridad!',\n    safetyTipsFirst: 'se utilice en otras cuentas;',\n    safetyTipsPhrase: 'Evite una contraseÃ±a que:',\n    safetyTipsSecond: 'utiliza informaciÃ³n personal como su nombre, apellido o nombre de familia;',\n    safetyTipsThird: 'utilice secuencias muy obvias como \"1234\" o \"abcd\" o palabras obvias como \"contraseÃ±a\";',\n    saveButton: 'Guardar',\n  },\n  pt: <any> {\n    backButton: 'Voltar',\n    confirmPassword: 'Confirmar senha',\n    createNewPassword: 'Criar nova senha',\n    createNewPasswordPhrase: 'Proteja sua conta com uma senha pessoal criada por vocÃª',\n    currentPassword: 'Senha atual',\n    enterSystemButton: 'Entrar no sistema',\n    forgotPassword: 'Esqueceu sua senha?',\n    newPassword: 'Nova senha',\n    passwordSuccessfullyCreated: 'Senha criada com sucesso!',\n    passwordSuccessfullyUpdated: 'Senha alterada com sucesso!',\n    requirements: 'Requisitos de senha',\n    safetyTips: 'Dicas de seguranÃ§a!',\n    safetyTipsFirst: 'seja usada em outras contas;',\n    safetyTipsPhrase: 'Evite uma senha que:',\n    safetyTipsSecond: 'usa informaÃ§Ãµes pessoais como seu nome, apelido ou nome de familiares;',\n    safetyTipsThird: 'use sequÃªncias muito Ã³bvias como \"1234\" ou \"abcd\" ou palavras Ã³bvias como âsenhaâ;',\n    saveButton: 'Salvar',\n  },\n  ru: <any> {\n    backButton: 'Ð²Ð¾Ð·Ð²ÑÐ°ÑÐµÐ½Ð¸Ðµ',\n    confirmPassword: 'ÐÐ¾Ð´ÑÐ²ÐµÑÐ´Ð¸ÑÐµ Ð¿Ð°ÑÐ¾Ð»Ñ',\n    createNewPassword: 'Ð¡Ð¾Ð·Ð´Ð°ÑÑ Ð½Ð¾Ð²ÑÐ¹ Ð¿Ð°ÑÐ¾Ð»Ñ',\n    createNewPasswordPhrase: 'ÐÐ°ÑÐ¸ÑÐ¸ÑÐµ ÑÐ²Ð¾Ð¹ Ð°ÐºÐºÐ°ÑÐ½Ñ Ñ Ð¿Ð¾Ð¼Ð¾ÑÑÑ Ð»Ð¸ÑÐ½Ð¾Ð³Ð¾ Ð¿Ð°ÑÐ¾Ð»Ñ.',\n    currentPassword: 'Ð¢ÐµÐºÑÑÐ¸Ð¹ Ð¿Ð°ÑÐ¾Ð»Ñ',\n    enterSystemButton: 'ÐÑÐ¾Ð´ Ð² ÑÐ¸ÑÑÐµÐ¼Ñ',\n    forgotPassword: 'ÐÐ°Ð±ÑÐ»Ð¸ Ð¿Ð°ÑÐ¾Ð»Ñ?',\n    newPassword: 'ÐÐ¾Ð²ÑÐ¹ Ð¿Ð°ÑÐ¾Ð»Ñ',\n    passwordSuccessfullyCreated: 'ÐÐ°ÑÐ¾Ð»Ñ ÑÑÐ¿ÐµÑÐ½Ð¾ ÑÐ¾Ð·Ð´Ð°Ð½!',\n    passwordSuccessfullyUpdated: 'ÐÐ°ÑÐ¾Ð»Ñ ÑÑÐ¿ÐµÑÐ½Ð¾ Ð¸Ð·Ð¼ÐµÐ½ÐµÐ½!',\n    requirements: 'Ð¢ÑÐµÐ±Ð¾Ð²Ð°Ð½Ð¸Ñ Ðº Ð¿Ð°ÑÐ¾Ð»Ñ',\n    safetyTips: 'Ð¡Ð¾Ð²ÐµÑÑ Ð¿Ð¾ Ð±ÐµÐ·Ð¾Ð¿Ð°ÑÐ½Ð¾ÑÑÐ¸!',\n    safetyTipsFirst: 'Ð¸ÑÐ¿Ð¾Ð»ÑÐ·Ð¾Ð²Ð°ÑÑÑÑ Ð½Ð° Ð´ÑÑÐ³Ð¸Ñ ÑÑÐµÑÐ°Ñ;',\n    safetyTipsPhrase: 'ÐÐ·Ð±ÐµÐ³Ð°Ð¹ÑÐµ Ð¿Ð°ÑÐ¾Ð»Ñ, ÐºÐ¾ÑÐ¾ÑÑÐ¹:',\n    safetyTipsSecond: 'Ð¸ÑÐ¿Ð¾Ð»ÑÐ·ÑÐµÑ Ð»Ð¸ÑÐ½ÑÑ Ð¸Ð½ÑÐ¾ÑÐ¼Ð°ÑÐ¸Ñ, ÑÐ°ÐºÑÑ ââÐºÐ°Ðº Ð²Ð°ÑÐµ Ð¸Ð¼Ñ, ÑÐ°Ð¼Ð¸Ð»Ð¸Ñ Ð¸Ð»Ð¸ ÑÐ°Ð¼Ð¸Ð»Ð¸Ñ;',\n    safetyTipsThird: 'Ð¸ÑÐ¿Ð¾Ð»ÑÐ·ÑÐ¹ÑÐµ Ð¾ÑÐµÐ½Ñ Ð¾ÑÐµÐ²Ð¸Ð´Ð½ÑÐµ ÑÑÑÐ¾ÐºÐ¸, ÑÐ°ÐºÐ¸Ðµ ÐºÐ°Ðº \"1234\" Ð¸Ð»Ð¸ \"abcd\", Ð¸Ð»Ð¸ ÑÐ°ÐºÐ¸Ðµ Ð¾ÑÐµÐ²Ð¸Ð´Ð½ÑÐµ ÑÐ»Ð¾Ð²Ð°, ÐºÐ°Ðº \"Ð¿Ð°ÑÐ¾Ð»Ñ\";',\n    saveButton: 'ÑÐºÐ¾Ð½Ð¾Ð¼Ð¸ÑÑ',\n  }\n};\n","import { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { HttpClient, HttpResponse } from '@angular/common/http';\n\n@Injectable()\nexport class PoPageChangePasswordService {\n\n  constructor(private http: HttpClient) {}\n\n  post(url: string, item: any): Observable<HttpResponse<Object>> {\n    return this.http.post<any>(url, item, { observe: 'response' });\n  }\n}\n","import { AfterViewInit, Component, ComponentRef, OnDestroy, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { Subscription } from 'rxjs';\n\nimport { PoComponentInjectorService, PoModalAction, PoModalComponent } from '@portinari/portinari-ui';\n\nimport { browserLanguage, isExternalLink, isTypeof, poLocaleDefault } from '../../utils/util';\n\nimport { PoModalPasswordRecoveryComponent } from '../po-modal-password-recovery/po-modal-password-recovery.component';\nimport { PoModalPasswordRecoveryType } from '../po-modal-password-recovery/enums/po-modal-password-recovery-type.enum';\nimport { PoPageChangePassword } from './interfaces/po-page-change-password.interface';\nimport { PoPageChangePasswordBaseComponent } from './po-page-change-password-base.component';\nimport { poPageChangePasswordLiterals } from './literals/i18n/po-page-change-password-literals';\nimport { PoPageChangePasswordRecovery } from './interfaces/po-page-change-password-recovery.interface';\nimport { PoPageChangePasswordRequirement } from './interfaces/po-page-change-password-requirement.interface';\nimport { PoPageChangePasswordService } from './po-page-change-password.service';\n\n/**\n * @docsExtends PoPageChangePasswordBaseComponent\n *\n * @example\n *\n * <example name=\"po-page-change-password-basic\" title=\"Portinari Page Change Password Basic\">\n *  <file name=\"sample-po-page-change-password-basic/sample-po-page-change-password-basic.component.html\"> </file>\n *  <file name=\"sample-po-page-change-password-basic/sample-po-page-change-password-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-change-password-labs\" title=\"Portinari Page Change Password Labs\">\n *  <file name=\"sample-po-page-change-password-labs/sample-po-page-change-password-labs.component.html\"> </file>\n *  <file name=\"sample-po-page-change-password-labs/sample-po-page-change-password-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-change-password-modify\" title=\"Portinari Page Change Password Modify\">\n *  <file name=\"sample-po-page-change-password-modify/sample-po-page-change-password-modify.component.html\"> </file>\n *  <file name=\"sample-po-page-change-password-modify/sample-po-page-change-password-modify.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-change-password-create\" title=\"Portinari Page Change Password Create\">\n *  <file name=\"sample-po-page-change-password-create/sample-po-page-change-password-create.component.html\"> </file>\n *  <file name=\"sample-po-page-change-password-create/sample-po-page-change-password-create.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-change-password-request\" title=\"Portinari Page Change Password Request\">\n *  <file name=\"sample-po-page-change-password-request/sample-po-page-change-password-request.component.html\"> </file>\n *  <file name=\"sample-po-page-change-password-request/sample-po-page-change-password-request.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-page-change-password',\n  templateUrl: './po-page-change-password.component.html'\n})\n\nexport class PoPageChangePasswordComponent extends PoPageChangePasswordBaseComponent implements AfterViewInit, OnDestroy, OnInit {\n\n  private newPasswordSubscription: Subscription;\n\n  readonly literals: { backButton: string, confirmPassword: string, createNewPassword: string, createNewPasswordPhrase: string,\n    currentPassword: string, enterSystemButton: string, forgotPassword: string, newPassword: string, passwordSuccessfullyCreated: string,\n    passwordSuccessfullyUpdated: string, requirements: string, safetyTips: string, safetyTipsPhrase: string, safetyTipsFirst: string,\n    safetyTipsSecond: string, safetyTipsThird: string, saveButton: string } =\n    {\n      ...poPageChangePasswordLiterals[poLocaleDefault],\n      ...poPageChangePasswordLiterals[browserLanguage()],\n    };\n\n  private componentRef: ComponentRef<any> = null;\n\n  modalAction: PoModalAction = {\n    action: this.navigateTo.bind(this, this.urlHome),\n    label: this.literals.enterSystemButton\n  };\n\n  parentRef: any;\n\n  @ViewChild(PoModalComponent, { static: true }) modal: PoModalComponent;\n  @ViewChild('pageChangePassword', { read: ViewContainerRef, static: true }) pageChangePassword: ViewContainerRef;\n  @ViewChild('passwordForm', { read: NgForm, static: true }) passwordForm: NgForm;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private route: ActivatedRoute,\n    private router: Router,\n    private service: PoPageChangePasswordService,\n    private poComponentInjector: PoComponentInjectorService,\n    viewRef: ViewContainerRef) {\n      super();\n      this.parentRef = viewRef['_view']['component'];\n  }\n\n  ngAfterViewInit() {\n    if (this.urlNewPassword) {\n      this.subscribeToTokenParameter();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.newPasswordSubscription) {\n      this.newPasswordSubscription.unsubscribe();\n    }\n  }\n\n  ngOnInit() {\n    this.checkingForRouteMetadata(this.activatedRoute.snapshot.data);\n  }\n\n  navigateTo(url: string) {\n    isExternalLink(url) ?  window.open(url) : this.router.navigate([url || '/']);\n  }\n\n  onForgotPasswordClick(recovery): void {\n    if (isTypeof(recovery, 'function')) {\n      recovery();\n    } else {\n      this.createModalPasswordRecoveryComponent(recovery);\n    }\n  }\n\n  onLoginSubmit(): void {\n\n    const form = this.getLoginForm();\n\n    if (this.urlNewPassword) {\n      this.postUrlNewPassword(form);\n    } else if (this.submit && this.submit.observers.length) {\n      this.emitSubmit(form);\n    }\n  }\n\n  /**\n   * Abre uma modal de confirmaÃ§Ã£o com texto, imagem e botÃ£o que redireciona para o link definido na propriedade `p-url-home`\u001c\n   */\n  openConfirmation() {\n    this.modal.open();\n  }\n\n  validatePassword() {\n    const controls =  this.passwordForm.form.controls;\n    const controlConfirmPassword = controls['confirmPassword'];\n    const controlNewPassword = controls['newPassword'];\n\n    if (!this.newPassword) {\n      this.setFormErrors({'required': true}, [controlNewPassword]);\n    } else if (!this.confirmPassword) {\n      this.setFormErrors({'required': true}, [controlConfirmPassword]);\n    } else if (this.newPassword && this.confirmPassword && this.newPassword !== this.confirmPassword) {\n      this.setFormErrors({'equalPassword': true}, [controlNewPassword, controlConfirmPassword]);\n    }  else {\n      this.setFormErrors(null, [controlConfirmPassword, controlNewPassword]);\n    }\n\n    if (this.requirements.length && this.requirements.find(requirement =>  this.validateRequirement(requirement) === false)) {\n      this.setFormErrors({'requirement': true}, [controlNewPassword]);\n    }\n  }\n\n  validateRequirement(requirement: PoPageChangePasswordRequirement) {\n    return typeof requirement.status === 'function' ? requirement.status.call(this.parentRef, this.newPassword) : requirement.status;\n  }\n\n  private checkingForMetadataProperty(object, property) {\n    if (Object.prototype.hasOwnProperty.call(object, property)) {\n      return object[property];\n    }\n  }\n\n  private checkingForRouteMetadata(data) {\n    if (Object.keys(data).length !== 0) {\n      this.urlNewPassword = this.checkingForMetadataProperty(data, 'serviceApi') || this.urlNewPassword;\n      this.recovery = this.checkingForMetadataProperty(data, 'recovery') || this.recovery;\n      this.hideCurrentPassword = this.checkingForMetadataProperty(data, 'hideCurrentPassword') || this.hideCurrentPassword;\n    }\n  }\n\n  private createModalPasswordRecoveryComponent(recovery: PoPageChangePasswordRecovery) {\n    if (this.componentRef) {\n      this.poComponentInjector.destroyComponentInApplication(this.componentRef);\n    }\n\n    this.componentRef = this.poComponentInjector.createComponentInApplication(PoModalPasswordRecoveryComponent);\n    this.componentRef.instance.recovery = recovery.url;\n    this.componentRef.instance.contactEmail = recovery.contactMail;\n    this.componentRef.instance.phoneMask = recovery.phoneMask;\n    this.componentRef.instance.type = recovery.type || PoModalPasswordRecoveryType.Email;\n    this.componentRef.changeDetectorRef.detectChanges();\n    setTimeout(() => {\n      this.componentRef.instance.open();\n    });\n  }\n\n  private emitSubmit(form: PoPageChangePassword) {\n    this.submit.emit(form);\n  }\n\n  private getLoginForm(): PoPageChangePassword {\n    return {\n      currentPassword: this.currentPassword,\n      newPassword: this.newPassword\n    };\n  }\n\n  private postUrlNewPassword(form: PoPageChangePassword) {\n\n    form['token'] = this.token;\n\n    this.service.post(this.urlNewPassword, form).subscribe(response => {\n      if (response.status === 204) {\n        this.openConfirmation();\n      }\n    });\n  }\n\n  private setFormErrors(error: any, controls?: Array<any>) {\n    controls.forEach(control => {\n      control.setErrors(error);\n    });\n  }\n\n  private subscribeToTokenParameter() {\n    this.route.queryParams.subscribe(params => {\n      const token = params['token'];\n\n      if (token) {\n        this.token = token;\n      }\n    });\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoModule } from '@portinari/portinari-ui';\n\nimport { PoModalPasswordRecoveryComponent } from '../po-modal-password-recovery/po-modal-password-recovery.component';\nimport { PoPageBackgroundModule } from '../po-page-background/index';\nimport { PoPageChangePasswordComponent } from './po-page-change-password.component';\nimport { PoPageChangePasswordService } from './po-page-change-password.service';\n\n/**\n * @description\n *\n * MÃ³dulo do template do po-page-change-password.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n\n    PoModule,\n    PoPageBackgroundModule\n  ],\n  declarations: [\n    PoPageChangePasswordComponent\n  ],\n  entryComponents: [\n    PoModalPasswordRecoveryComponent\n  ],\n  providers: [\n    PoPageChangePasswordService\n  ],\n  exports: [\n    PoPageChangePasswordComponent\n  ]\n})\nexport class PoPageChangePasswordModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PoPageDynamicService {\n\n  private endpoint = '/';\n  private metadata: string;\n\n  readonly headers: HttpHeaders = new HttpHeaders({\n    'X-PORTINARI-SCREEN-LOCK': 'true'\n  });\n\n  constructor(private http: HttpClient) { }\n\n  configServiceApi(config: { endpoint?: string, metadata?: string } = {}) {\n    this.endpoint = config.endpoint;\n    this.metadata = config.metadata || this.metadata;\n  }\n\n  getMetadata<T>(type: string = 'list'): Observable<T> {\n    const key = `${this.endpoint}-${type}-metadata`;\n    const cache = JSON.parse(localStorage.getItem(key)) || {};\n    const metadataUrlBase = this.metadata || `${this.endpoint}/metadata`;\n\n    const url = `${metadataUrlBase}?type=${type}&version=${cache.version || ''}`;\n\n    return this.http.get<T>(url).pipe(map((response: any) => {\n      if (response.version === cache.version) {\n        return cache;\n      }\n\n      localStorage.setItem(key, JSON.stringify(response));\n\n      return  { ...cache, ...response };\n    }));\n  }\n\n  // Deleta um Ãºnico recurso\n  deleteResource(id): Observable<any> {\n    return this.http.delete(`${this.endpoint}/${id}`, { headers: this.headers });\n  }\n\n  // Deleta recursos em lote\n  deleteResources(ids: Array<any>): Observable<any> {\n    return this.http.request('delete', `${this.endpoint}`, { headers: this.headers, body: ids } );\n  }\n\n  // Busca uma lista de recursos\n  getResources(params?: HttpParams): Observable<any> {\n    return this.http.get(this.endpoint, { headers: this.headers, params });\n  }\n\n  // Busca um Ãºnico recurso\n  getResource(id): Observable<any> {\n    return this.http.get(`${this.endpoint}/${id}`, { headers: this.headers });\n  }\n\n  // Cria um recurso\n  createResource(resource): Observable<any> {\n    return this.http.post(`${this.endpoint}`, resource, { headers: this.headers });\n  }\n\n  // Atualiza um recurso\n  updateResource(id, resource): Observable<any> {\n    return this.http.put(`${this.endpoint}/${id}`, resource, { headers: this.headers });\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Route, Router, ActivatedRoute } from '@angular/router';\n\nimport * as util from '../../utils/util';\n\nimport { PoBreadcrumb, PoPageAction, PoDialogService, PoDialogConfirmOptions, PoNotificationService } from '@portinari/portinari-ui';\n\nimport { PoPageDynamicDetailActions } from './po-page-dynamic-detail-actions.interface';\nimport { PoPageDynamicDetailField } from './po-page-dynamic-detail-field.interface';\nimport { PoPageDynamicService } from '../../services/po-page-dynamic/po-page-dynamic.service';\n\nexport const poPageDynamicDetailLiteralsDefault = {\n  en: {\n    pageActionEdit: 'Edit',\n    pageActionRemove: 'Delete',\n    pageActionBack: 'Back',\n    confirmRemoveTitle: 'Confirm delete',\n    confirmRemoveMessage: 'Are you sure you want to delete this record? You can not undo this action.',\n    removeNotificationSuccess: 'Item deleted successfully.',\n    registerNotFound: 'Register not found.'\n  },\n  es: {\n    pageActionEdit: 'Editar',\n    pageActionRemove: 'Borrar',\n    pageActionBack: 'Regreso',\n    confirmRemoveTitle: 'Confirmar la exclusiÃ³n',\n    confirmRemoveMessage: 'Â¿EstÃ¡ seguro de que desea eliminar este registro? No puede deshacer esta acciÃ³n.',\n    removeNotificationSuccess: 'Elemento eliminado con Ã©xito.',\n    registerNotFound: 'Registro no encontrado.'\n  },\n  pt: {\n    pageActionEdit: 'Editar',\n    pageActionRemove: 'Excluir',\n    pageActionBack: 'Voltar',\n    confirmRemoveTitle: 'Confirmar exclusÃ£o',\n    confirmRemoveMessage: 'Tem certeza de que deseja excluir esse registro? VocÃª nÃ£o poderÃ¡ desfazer essa aÃ§Ã£o.',\n    removeNotificationSuccess: 'Item excluÃ­do com sucesso.',\n    registerNotFound: 'Registro nÃ£o encontrado.'\n  }\n};\n\n/**\n * @description\n *\n * O `po-page-dynamic-detail` Ã© uma pÃ¡gina que serve para exibir registros em detalhes,\n * o mesmo tambÃ©m suporta metadados conforme especificado na documentaÃ§Ã£o.\n *\n * @example\n *\n * <example name=\"po-page-dynamic-detail-basic\" title=\"Portinari Page Dynamic Detail Basic\">\n *  <file name=\"sample-po-page-dynamic-detail-basic/sample-po-page-dynamic-detail-basic.component.html\"> </file>\n *  <file name=\"sample-po-page-dynamic-detail-basic/sample-po-page-dynamic-detail-basic.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-page-dynamic-detail',\n  templateUrl: './po-page-dynamic-detail.component.html',\n  providers: [ PoPageDynamicService ]\n})\nexport class PoPageDynamicDetailComponent implements OnInit {\n\n  private _actions: PoPageDynamicDetailActions = {};\n  private _autoRouter: boolean = false;\n  private _duplicates: Array<any> = [];\n  private _fields: Array<any> = [];\n  private _keys: Array<any> = [];\n  private _pageActions: Array<PoPageAction> = [];\n\n  literals = {\n    ...poPageDynamicDetailLiteralsDefault[util.poLocaleDefault],\n    ...poPageDynamicDetailLiteralsDefault[util.browserLanguage()]\n  };\n  model: any = {};\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Define as aÃ§Ãµes da pÃ¡gina de acordo com a interface `PoPageDynamicDetailActions`.\n   */\n  @Input('p-actions') set actions(value: PoPageDynamicDetailActions) {\n    this._actions = this.isObject(value) ? value : {};\n\n    this._pageActions = this.getPageActions(this._actions);\n  }\n\n  /**\n   * @todo Validar rotas na mÃ£o pois se existir uma rota '**' o catch do navigation nÃ£o funciona.\n   *\n   * @optional\n   *\n   * @description\n   *\n   * Cria automaticamente as rotas de ediÃ§Ã£o (novo/duplicate) e detalhes caso as aÃ§Ãµes\n   * estejam definidas nas aÃ§Ãµes.\n   *\n   * > Para o correto funcionamento nÃ£o pode haver nenhum rota coringa (`**`) especificada.\n   *\n   * @default false\n   */\n  @Input('p-auto-router') set autoRouter(value: boolean) {\n    this._autoRouter = util.convertToBoolean(value);\n  }\n\n  get autoRouter(): boolean {\n    return this._autoRouter;\n  }\n\n  /** Objeto com propriedades do breadcrumb. */\n  @Input('p-breadcrumb') breadcrumb?: PoBreadcrumb = { items: [] };\n\n  /** Lista dos campos exibidos na pÃ¡gina. */\n  @Input('p-fields') set fields(value: Array<PoPageDynamicDetailField>) {\n    this._fields = Array.isArray(value) ? [...value] : [];\n\n    this._keys = this.getKeysByFields(this.fields);\n    this._duplicates = this.getDuplicatesByFields(this.fields);\n  }\n\n  get fields(): Array<PoPageDynamicDetailField> {\n    return this._fields;\n  }\n\n  /** TÃ­tulo da pÃ¡gina. */\n  @Input('p-title') title: string;\n\n  /**\n   * @description\n   *\n   * Endpoint usado pelo template para requisiÃ§Ã£o do recurso que serÃ£o exibido.\n   *\n   * Caso a aÃ§Ã£o `remove` estiver configurada, serÃ¡ feito uma requisiÃ§Ã£o de exclusÃ£o nesse mesmo endpoint passando os campos\n   * setados como `key: true`.\n   *\n   * > `DELETE {end-point}/{keys}`\n   *\n   * ```\n   *  <po-page-dynamic-detail\n   *    [p-actions]=\"{ remove: '/' }\"\n   *    [p-fields]=\"[ { property: 'id', key: true } ]\"\n   *    p-service=\"/api/po-samples/v1/people\"\n   *    ...>\n   *  </po-page-dynamic-detail>\n   * ```\n   *\n   * ResquisiÃ§Ã£o disparada, onde a propriedade `id` Ã© igual a 2:\n   *\n   * ```\n   *  DELETE /api/po-samples/v1/people/2 HTTP/1.1\n   *  Host: localhost:4000\n   *  Connection: keep-alive\n   *  Accept: application/json, text/plain\n   *  ...\n   * ```\n   *\n   * > Caso esteja usando metadados com o template, serÃ¡ disparado uma requisiÃ§Ã£o na inicializaÃ§Ã£o do template para buscar\n   * > os metadados da pÃ¡gina passando o tipo do metadado esperado e a versÃ£o cacheada pelo browser.\n   * >\n   * > `GET {end-point}/metadata?type=detail&version={version}`\n   */\n  @Input('p-service-api') serviceApi: string;\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private poNotification: PoNotificationService,\n    private poDialogService: PoDialogService,\n    private poPageDynamicService: PoPageDynamicService) {\n  }\n\n  ngOnInit(): void {\n    const paramId = this.activatedRoute.snapshot.params['id'];\n\n    if (this.activatedRoute.snapshot.data.serviceApi) {\n      this.serviceApi = this.activatedRoute.snapshot.data.serviceApi;\n\n      this.poPageDynamicService.configServiceApi({ endpoint: this.serviceApi });\n\n      this.loadMetadata(paramId);\n    } else {\n      this.poPageDynamicService.configServiceApi({ endpoint: this.serviceApi });\n\n      this.loadData(paramId);\n    }\n  }\n\n  get duplicates() {\n    return [...this._duplicates];\n  }\n\n  get keys() {\n    return [...this._keys];\n  }\n\n  get pageActions() {\n    return [...this._pageActions];\n  }\n\n  private confirmRemove(path) {\n    const confirmOptions: PoDialogConfirmOptions = {\n      title: this.literals.confirmRemoveTitle,\n      message: this.literals.confirmRemoveMessage,\n      confirm: this.remove.bind(this, path)\n    };\n\n    this.poDialogService.confirm(confirmOptions);\n  }\n\n  private formatUniqueKey(item) {\n    const keys = util.mapObjectByProperties(item, this.keys);\n\n    return util.valuesFromObject(keys).join('|');\n  }\n\n  private goBack(/*path*/) {\n    window.history.back();\n    // if (path) {\n    //   this.navigateTo({ path, component: PoPageDynamicEditComponent });\n    // } else {\n    //   window.history.back();\n    // }\n  }\n\n  private loadData(id) {\n    this.poPageDynamicService.getResource(id).toPromise().then(response => {\n      this.model = response;\n    }).catch(() => {\n      this.model = undefined;\n      this.actions = undefined;\n    });\n  }\n\n  private loadMetadata(id) {\n    this.poPageDynamicService.getMetadata<any>('detail').toPromise().then(response => {\n      this.autoRouter = response.autoRouter;\n      this.actions = response.actions || {};\n      this.breadcrumb = response.breadcrumb || { items : [] };\n      this.fields = response.fields || [];\n      this.title = response.title;\n\n      this.loadData(id);\n    });\n  }\n\n  // @todo Validar rotas na mÃ£o pois se existir uma rota '**' o catch do navigation nÃ£o funciona.\n  private navigateTo(route: { path: string, component?, url?: string, params?: any }, forceStopAutoRouter: boolean = false) {\n    this.router.navigate([route.url || route.path], { queryParams: route.params })\n      .catch(() => {\n        if (forceStopAutoRouter || !this.autoRouter) {\n          return;\n        }\n\n        this.router.config.unshift(<Route>{\n          path: route.path, component: route.component, data: { serviceApi: this.serviceApi, autoRouter: true }\n        });\n\n        this.navigateTo(route, true);\n      });\n  }\n\n  private openEdit(path) {\n    const url = this.resolveUrl(this.model, path);\n\n    // this.navigateTo({ path, url, component: PoPageDynamicEditComponent });\n    this.navigateTo({ path, url });\n  }\n\n  private remove(path) {\n    const uniqueKey = this.formatUniqueKey(this.model);\n\n    this.poPageDynamicService.deleteResource(uniqueKey).toPromise().then(() => {\n      this.poNotification.success(this.literals.removeNotificationSuccess);\n\n      this.navigateTo({ path: path });\n      // this.navigateTo({ path: path, component: PoPageDynamicTableComponent });\n    });\n  }\n\n  private resolveUrl(item: any, path: string) {\n    const uniqueKey = this.formatUniqueKey(item);\n\n    return path.replace(/:id/g, uniqueKey);\n  }\n\n  private getPageActions(actions: PoPageDynamicDetailActions = {}): Array<PoPageAction> {\n    const pageActions = [];\n\n    if (actions.edit) {\n      pageActions.push({ label: this.literals.pageActionEdit, action: this.openEdit.bind(this, actions.edit) });\n    }\n\n    if (actions.remove) {\n      pageActions.push({ label: this.literals.pageActionRemove, action: this.confirmRemove.bind(this, actions.remove) });\n    }\n\n    if (actions.back === undefined || actions.back) {\n      pageActions.push({ label: this.literals.pageActionBack, action: this.goBack.bind(this, actions.back) });\n    }\n\n    return pageActions;\n  }\n\n  private getKeysByFields(fields: Array<any> = []) {\n    return fields.filter(field => field.key === true).map(field => field.property);\n  }\n\n  private getDuplicatesByFields(fields: Array<any> = []) {\n    return fields.filter(field => field.duplicate === true).map(field => field.property);\n  }\n\n  private isObject(value: any): boolean {\n    return !!value && typeof value === 'object' && !Array.isArray(value);\n  }\n\n}\n","import { HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoPageDynamicService } from './po-page-dynamic.service';\n/**\n * @description\n *\n * MÃ³dulo do serviÃ§o do po-page-dynamic-service.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  providers: [\n    PoPageDynamicService\n  ]\n})\nexport class PoPageDynamicModule { }\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoDynamicModule, PoModalModule, PoPageModule, PoWidgetModule } from '@portinari/portinari-ui';\n\nimport { PoPageDynamicDetailComponent } from './po-page-dynamic-detail.component';\nimport { PoPageDynamicModule } from '../../services/po-page-dynamic/po-page-dynamic.module';\n\n/**\n * @description\n *\n * MÃ³dulo do template do po-page-dynamic-detail.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n\n    PoDynamicModule,\n    PoModalModule,\n    PoPageModule,\n    PoWidgetModule,\n    PoPageDynamicModule\n  ],\n  declarations: [\n    PoPageDynamicDetailComponent\n  ],\n  exports: [\n    PoPageDynamicDetailComponent\n  ]\n})\nexport class PoPageDynamicDetailModule { }\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { Observable } from 'rxjs';\n\nimport {\n  PoBreadcrumb,\n  PoDialogService,\n  PoDynamicFormComponent,\n  PoGridComponent,\n  PoGridRowActions,\n  PoNotificationService,\n  PoPageAction } from '@portinari/portinari-ui';\n\nimport * as util from './../../utils/util';\n\nimport { PoPageDynamicEditActions } from './interfaces/po-page-dynamic-edit-actions.interface';\nimport { PoPageDynamicEditField } from './interfaces/po-page-dynamic-edit-field.interface';\nimport { PoPageDynamicService } from '../../services/po-page-dynamic/po-page-dynamic.service';\n\nexport const poPageDynamicEditLiteralsDefault = {\n  en: {\n    cancelConfirmMessage: 'Are you sure you want to cancel this operation?',\n    detailActionNew: 'New',\n    pageActionCancel: 'Cancel',\n    pageActionSave: 'Save',\n    pageActionSaveNew: 'Save and new',\n    registerNotFound: 'Register not found.',\n    saveNewNotificationSuccessSave: 'Resource successfully saved.',\n    saveNewNotificationSuccessUpdate: 'Resource successfully updated.',\n    saveNewNotificationWarning: 'Form must be filled out correctly.',\n    saveNotificationSuccessSave: 'Resource successfully saved.',\n    saveNotificationSuccessUpdate: 'Resource successfully updated.',\n    saveNotificationWarning: 'Form must be filled out correctly.',\n  },\n  es: {\n    cancelConfirmMessage: 'EstÃ¡ seguro de que desea cancelar esta operaciÃ³n?',\n    detailActionNew: 'Nuevo',\n    pageActionCancel: 'Cancelar',\n    pageActionSave: 'Guardar',\n    pageActionSaveNew: 'Guardar y nuevo',\n    registerNotFound: 'Registro no encontrado.',\n    saveNewNotificationSuccessSave: 'Recurso salvo con Ã©xito.',\n    saveNewNotificationSuccessUpdate: 'Recurso actualizado con Ã©xito.',\n    saveNewNotificationWarning: 'El formulario debe llenarse correctamente.',\n    saveNotificationSuccessSave: 'Recurso salvo con Ã©xito.',\n    saveNotificationSuccessUpdate: 'Recurso actualizado con Ã©xito.',\n    saveNotificationWarning: 'El formulario debe llenarse correctamente.',\n  },\n  pt: {\n    cancelConfirmMessage: 'Tem certeza que deseja cancelar esta operaÃ§Ã£o?',\n    detailActionNew: 'Novo',\n    pageActionCancel: 'Cancelar',\n    pageActionSave: 'Salvar',\n    pageActionSaveNew: 'Salvar e novo',\n    registerNotFound: 'Registro nÃ£o encontrado.',\n    saveNewNotificationSuccessSave: 'Recurso salvo com sucesso.',\n    saveNewNotificationSuccessUpdate: 'Recurso atualizado com sucesso.',\n    saveNewNotificationWarning: 'FormulÃ¡rio precisa ser preenchido corretamente.',\n    saveNotificationSuccessSave: 'Recurso salvo com sucesso.',\n    saveNotificationSuccessUpdate: 'Recurso atualizado com sucesso.',\n    saveNotificationWarning: 'FormulÃ¡rio precisa ser preenchido corretamente.',\n  }\n};\n\n/**\n * @description\n *\n * O `po-page-dynamic-edit` Ã© uma pÃ¡gina que pode servir para editar ou criar novos registros,\n * o mesmo tambÃ©m suporta metadados conforme especificado na documentaÃ§Ã£o.\n *\n * ### UtilizaÃ§Ã£o via rota\n *\n * Ao utilizar as rotas para carregar o template, o `page-dynamic-edit` disponibiliza propriedades para\n * poder especificar o endpoint dos dados e dos metadados. Exemplo de utilizaÃ§Ã£o:\n *\n * ```\n * {\n *   path: 'people',\n *   component: PoPageDynamicEditComponent,\n *   data: {\n *     serviceApi: 'http://localhost:3000/v1/people', // endpoint dos dados\n *     serviceMetadataApi: 'http://localhost:3000/v1/metadata' // endpoint dos metadados\n *   }\n * }\n * ```\n *\n * Para carregar com um recurso jÃ¡ existente, deve-se ser incluÃ­do um parÃ¢metro na rota chamado `id`:\n *\n * ```\n * {\n *   path: 'people/:id',\n *   component: PoPageDynamicEditComponent,\n *   data: {\n *     serviceApi: 'http://localhost:3000/v1/people', // endpoint dos dados\n *     serviceMetadataApi: 'http://localhost:3000/v1/metadata' // endpoint dos metadados\n *   }\n * }\n * ```\n *\n * A requisiÃ§Ã£o dos metadados Ã© feita na inicializaÃ§Ã£o do template para buscar os metadados da pÃ¡gina passando o\n * tipo do metadado esperado e a versÃ£o cacheada pelo browser.\n *\n * O formato esperado na resposta da requisiÃ§Ã£o estÃ¡ especificado na interface\n * [PoPageDynamicEditMetadata](/documentation/po-page-dynamic-edit#po-page-dynamic-edit-metadata). Por exemplo:\n *\n * ```\n *  {\n *   version: 1,\n *   title: 'Person edit',\n *   fields: [\n *     { property: 'id', key: true, disabled: true },\n *     { property: 'status' },\n *     { property: 'name' },\n *     { property: 'nickname' },\n *     { property: 'birthdate', label: 'Birth date' },\n *     { property: 'genre' },\n *     { property: 'city' },\n *     { property: 'country' }\n *   ]\n * }\n * ```\n *\n * > Caso o endpoint dos metadados nÃ£o seja especificado, serÃ¡ feito uma requisiÃ§Ã£o utilizando o `serviceApi` da seguinte forma:\n * ```\n * GET {end-point}/metadata?type=edit&version={version}\n * ```\n *\n * @example\n *\n * <example name=\"po-page-dynamic-edit-basic\" title=\"Portinari Page Dynamic Edit Basic\">\n *  <file name=\"sample-po-page-dynamic-edit-basic/sample-po-page-dynamic-edit-basic.component.html\"> </file>\n *  <file name=\"sample-po-page-dynamic-edit-basic/sample-po-page-dynamic-edit-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-dynamic-edit-user\" title=\"Portinari Page Dynamic Edit - User\">\n *  <file name=\"sample-po-page-dynamic-edit-user/sample-po-page-dynamic-edit-user.component.html\"> </file>\n *  <file name=\"sample-po-page-dynamic-edit-user/sample-po-page-dynamic-edit-user.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-dynamic-edit-master-detail\" title=\"Portinari Page Dynamic Edit - Master Detail\">\n *  <file name=\"sample-po-page-dynamic-edit-master-detail/sample-po-page-dynamic-edit-master-detail.component.html\"> </file>\n *  <file name=\"sample-po-page-dynamic-edit-master-detail/sample-po-page-dynamic-edit-master-detail.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-page-dynamic-edit',\n  templateUrl: './po-page-dynamic-edit.component.html',\n  providers: [ PoPageDynamicService ]\n})\nexport class PoPageDynamicEditComponent implements OnInit {\n\n  private _actions: PoPageDynamicEditActions = {};\n  private _autoRouter: boolean = false;\n  private _controlFields: Array<any> = [];\n  private _detailFields: Array<any> = [];\n  private _duplicates: Array<any> = [];\n  private _fields: Array<any> = [];\n  private _keys: Array<any> = [];\n  private _pageActions: Array<PoPageAction> = [];\n\n  literals = {\n    ...poPageDynamicEditLiteralsDefault[util.poLocaleDefault],\n    ...poPageDynamicEditLiteralsDefault[util.browserLanguage()]\n  };\n  model: any = {};\n\n  // beforeSave: return boolean\n  // afterSave\n  // beforeRemove: return boolean\n  // afterRemove\n  // beforeInsert: : return boolean\n  readonly detailActions: PoGridRowActions = { };\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * AÃ§Ãµes da pÃ¡gina.\n   */\n  @Input('p-actions') set actions(value: PoPageDynamicEditActions) {\n    this._actions = this.isObject(value) ? value : {};\n\n    this._pageActions = this.getPageActions(this._actions);\n  }\n\n  /**\n   * @todo Validar rotas na mÃ£o pois se existir uma rota '**' o catch do navigation nÃ£o funciona.\n   *\n   * @optional\n   *\n   * @description\n   *\n   * Cria automaticamente as rotas de ediÃ§Ã£o (novo/duplicate) e detalhes caso as aÃ§Ãµes\n   * estejam definidas nas aÃ§Ãµes.\n   *\n   * > Para o correto funcionamento nÃ£o pode haver nenhum rota coringa (`**`) especificada.\n   *\n   * @default false\n   */\n  @Input('p-auto-router') set autoRouter(value: boolean) {\n    this._autoRouter = util.convertToBoolean(value);\n  }\n\n  get autoRouter(): boolean {\n    return this._autoRouter;\n  }\n\n  /** Objeto com propriedades do breadcrumb. */\n  @Input('p-breadcrumb') breadcrumb?: PoBreadcrumb = { items: [] };\n\n  /** Lista dos campos usados na tabela e busca avanÃ§ada. */\n  @Input('p-fields') set fields(value: Array<PoPageDynamicEditField>) {\n    this._fields = Array.isArray(value) ? [...value] : [];\n\n    this._keys = this.getKeysByFields(this._fields);\n    this._duplicates = this.getDuplicatesByFields(this._fields);\n\n    this._controlFields = this.getControlFields(this._fields);\n    this._detailFields = this.getDetailFields(this._fields);\n  }\n\n  get fields(): Array<PoPageDynamicEditField> {\n    return this._fields;\n  }\n\n  /**\n   * @description\n   *\n   * Endpoint usado pelo template para requisiÃ§Ã£o do recurso que serÃ¡ exibido para ediÃ§Ã£o.\n   *\n   * Para as aÃ§Ãµes de `save` e `saveNew`, serÃ¡ feito uma requisiÃ§Ã£o de criaÃ§Ã£o nesse mesmo endpoint passando os valores\n   * preenchidos pelo usuÃ¡rio via payload.\n   *\n   * > `POST {end-point}`\n   *\n   * ```\n   *  <po-page-dynamic-edit\n   *    [p-actions]=\"{ save: '/', saveNew: 'new' }\"\n   *    [p-fields]=\"[ { property: 'name' }, { property: 'city' } ]\"\n   *    p-service=\"/api/po-samples/v1/people\"\n   *    ...>\n   *  </po-page-dynamic-edit>\n   * ```\n   *\n   * ResquisiÃ§Ã£o disparada, onde a propriedade `name` e `city` foram preenchidas:\n   *\n   * ```\n   *  POST /api/po-samples/v1/people HTTP/1.1\n   *  Host: localhost:4000\n   *  Connection: keep-alive\n   *  Accept: application/json, text/plain\n   *  ...\n   * ```\n   *\n   * Request payload:\n   *\n   * ```\n   * { \"name\": \"Fulano\", \"city\": \"Smallville\" }\n   * ```\n   *\n   * Caso queira que o template carregue um recurso jÃ¡ existente, deve-se ser incluÃ­do um parametro na rota chamado `id`.\n   *\n   * Exemplo de configuraÃ§Ã£o de rota:\n   *\n   * ```\n   *  RouterModule.forRoot([\n   *    ...\n   *    { path: 'edit/:id', component: PersonEditComponent },\n   *    ...\n   *  ],\n   * ```\n   *\n   * Baseado nisso, na inicializaÃ§Ã£o do template, serÃ¡ disparado uma requisiÃ§Ã£o para buscar o recurso que serÃ¡ editado.\n   *\n   * > `GET {end-point}/{id}`\n   *\n   * Nos mÃ©todos de `save` e `saveNew`, ao invÃ©s de um `POST`, serÃ¡ disparado um `PUT`.\n   *\n   * ResquisiÃ§Ã£o disparada, onde a propriedade `name` e `city` foram preenchidas / atualizadas, e o `id` da url Ã© 2:\n   *\n   * ```\n   *  PUT /api/po-samples/v1/people/2 HTTP/1.1\n   *  Host: localhost:4000\n   *  Connection: keep-alive\n   *  Accept: application/json, text/plain\n   *  ...\n   * ```\n   *\n   * Request payload:\n   *\n   * ```\n   * { \"name\": \"Fulano\", \"city\": \"Metropolis\" }\n   * ```\n   */\n  @Input('p-service-api') serviceApi: string;\n\n  /** TÃ­tulo da pÃ¡gina. */\n  @Input('p-title') title: string;\n\n  @ViewChild('dynamicForm', { static: false }) dynamicForm: PoDynamicFormComponent;\n  @ViewChild('gridDetail', { static: false }) gridDetail: PoGridComponent;\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private poNotification: PoNotificationService,\n    private poDialogService: PoDialogService,\n    private poPageDynamicService: PoPageDynamicService) {\n  }\n\n  ngOnInit(): void {\n    const paramId = this.activatedRoute.snapshot.params['id'];\n    const duplicate = this.activatedRoute.snapshot.queryParams['duplicate'];\n\n    const { serviceApi, serviceMetadataApi } = this.activatedRoute.snapshot.data;\n    this.serviceApi = serviceApi || this.serviceApi;\n    this.poPageDynamicService.configServiceApi({ endpoint: this.serviceApi, metadata: serviceMetadataApi });\n\n    if (serviceApi) {\n      this.loadMetadata(paramId, duplicate);\n    } else {\n      this.loadData(paramId, duplicate);\n    }\n  }\n\n  get duplicates() {\n    return [...this._duplicates];\n  }\n\n  get keys() {\n    return [...this._keys];\n  }\n\n  get pageActions() {\n    return [...this._pageActions];\n  }\n\n  get controlFields() {\n    return this._controlFields;\n  }\n\n  get detailFields() {\n    return this._detailFields;\n  }\n\n  detailActionNew() {\n    this.gridDetail.insertRow();\n  }\n\n  private cancel(path) {\n    if (this.dynamicForm && this.dynamicForm.form.dirty) {\n      this.poDialogService.confirm({\n        message: this.literals.cancelConfirmMessage,\n        title: this.literals.pageActionCancel,\n        confirm: this.goBack.bind(this, path)\n      });\n    } else {\n      this.goBack(path);\n    }\n  }\n\n  private formatUniqueKey(item) {\n    const keys = util.mapObjectByProperties(item, this.keys);\n\n    return util.valuesFromObject(keys).join('|');\n  }\n\n  private goBack(path) {\n    if (path) {\n      this.router.navigate([path]);\n    } else {\n      window.history.back();\n    }\n  }\n\n  private loadData(id, duplicate?) {\n    if (!id) {\n      try {\n        this.model = JSON.parse(duplicate) || {};\n      } catch {\n        this.model = {};\n      }\n\n      return;\n    }\n\n    this.poPageDynamicService.getResource(id).toPromise().then(response => {\n      this.model = response;\n    }).catch(() => {\n      this.model = undefined;\n      this.actions = undefined;\n      this._pageActions = [];\n    });\n  }\n\n  private loadMetadata(paramId: string | number, duplicate: string) {\n    const typeMetadata = paramId ? 'edit' : 'create';\n\n    this.poPageDynamicService.getMetadata<any>(typeMetadata).toPromise().then(response => {\n      this.autoRouter = response.autoRouter;\n      this.actions = response.actions || {};\n      this.breadcrumb = response.breadcrumb || { items : [] };\n      this.fields = response.fields || [];\n      this.title = response.title;\n\n      this.loadData(paramId, duplicate);\n    });\n  }\n\n  private navigateTo(path: string) {\n    if (path) {\n      const url = this.resolveUrl(this.model, path);\n\n      this.router.navigate([url]);\n    } else {\n      window.history.back();\n    }\n  }\n\n  private resolveUrl(item: any, path: string) {\n    const uniqueKey = this.formatUniqueKey(item);\n\n    return path.replace(/:id/g, uniqueKey);\n  }\n\n  private save(path) {\n    if (this.dynamicForm.form.invalid) {\n      this.poNotification.warning(this.literals.saveNotificationWarning);\n      return;\n    }\n\n    const paramId = this.activatedRoute.snapshot.params['id'];\n\n    const saveOperation: Observable<any> = paramId\n      ? this.poPageDynamicService.updateResource(paramId, this.model)\n      : this.poPageDynamicService.createResource(this.model);\n\n    const msgSucess = paramId ? this.literals.saveNotificationSuccessUpdate : this.literals.saveNotificationSuccessSave;\n\n    saveOperation.toPromise().then(() => {\n      this.poNotification.success(msgSucess);\n\n      this.navigateTo(path);\n    });\n  }\n\n  private saveNew(path) {\n    if (this.dynamicForm.form.invalid) {\n      this.poNotification.warning(this.literals.saveNewNotificationWarning);\n      return;\n    }\n\n    const paramId = this.activatedRoute.snapshot.params['id'];\n\n    if (paramId) {\n      this.poPageDynamicService.updateResource(paramId, this.model)\n        .toPromise().then(() => {\n          this.poNotification.success(this.literals.saveNewNotificationSuccessUpdate);\n\n          this.navigateTo(path);\n        });\n    } else {\n      this.poPageDynamicService.createResource(this.model)\n        .toPromise().then(() => {\n          this.poNotification.success(this.literals.saveNewNotificationSuccessSave);\n\n          this.model = {};\n          this.dynamicForm.form.reset();\n        });\n    }\n  }\n\n  private getKeysByFields(fields: Array<any> = []) {\n    return fields.filter(field => field.key === true).map(field => field.property);\n  }\n\n  private getControlFields(fields: Array<any> = []) {\n    return fields.filter(field => field.type !== 'detail');\n  }\n\n  private getDetailFields(fields: Array<any> = []) {\n    return fields.filter(field => field.type === 'detail');\n  }\n\n  private getDuplicatesByFields(fields: Array<any> = []) {\n    return fields.filter(field => field.duplicate === true).map(field => field.property);\n  }\n\n  private getPageActions(actions: PoPageDynamicEditActions = {}): Array<PoPageAction> {\n    const pageActions = [{ label: this.literals.pageActionSave, action: this.save.bind(this, actions.save) }];\n\n    if (actions.saveNew) {\n      pageActions.push({ label: this.literals.pageActionSaveNew, action: this.saveNew.bind(this, actions.saveNew) });\n    }\n\n    if (actions.cancel === undefined || actions.cancel) {\n      pageActions.push({ label: this.literals.pageActionCancel, action: this.cancel.bind(this, actions.cancel) });\n    }\n\n    return pageActions;\n  }\n\n  private isObject(value: any): boolean {\n    return !!value && typeof value === 'object' && !Array.isArray(value);\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport {\n  PoButtonModule,\n  PoDividerModule,\n  PoDynamicModule,\n  PoGridModule,\n  PoPageModule,\n  PoWidgetModule\n} from '@portinari/portinari-ui';\n\nimport { PoPageDynamicEditComponent } from './po-page-dynamic-edit.component';\nimport { PoPageDynamicModule } from '../../services/po-page-dynamic/po-page-dynamic.module';\n\n/**\n * @description\n *\n * MÃ³dulo do template do po-page-dynamic-detail.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n\n    PoButtonModule,\n    PoDividerModule,\n    PoDynamicModule,\n    PoGridModule,\n    PoPageModule,\n    PoWidgetModule,\n    PoPageDynamicModule\n  ],\n  declarations: [\n    PoPageDynamicEditComponent\n  ],\n  exports: [\n    PoPageDynamicEditComponent\n  ]\n})\nexport class PoPageDynamicEditModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable, from } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { PoPageDynamicOptionsSchema, PoPageDynamicOptionsProp } from './po-page-dynamic-options.interface';\n\ntype urlOrFunction = string | Function ;\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class PoPageCustomizationService {\n\n  constructor(private http: HttpClient) { }\n\n  getCustomOptions<T>(origin: urlOrFunction, originalOption: T, optionSchema: PoPageDynamicOptionsSchema<T>): Observable<T> {\n    return this.createObservable<T>(origin).pipe(\n      map(newPageOptions => this.mergePageOptions<T>(originalOption, newPageOptions, optionSchema))\n    );\n  }\n\n  changeOriginalOptionsToNewOptions<T, K>(objectToChange: T, newOptions: K) {\n    Object.keys(newOptions).forEach(key => {\n      const value = newOptions[key];\n      if (objectToChange[key]) {\n        if (Array.isArray(value)) {\n          objectToChange[key] = [...value];\n          return;\n        }\n        if ((typeof (value) === 'number' || typeof (value) === 'string')) {\n          objectToChange[key] = value;\n          return;\n        }\n        if (typeof (value) === 'object') {\n          objectToChange[key] = { ...value };\n        }\n      }\n    });\n  }\n\n  private createObservable<T>(origin: urlOrFunction): Observable<T> {\n    if (typeof origin === 'string') {\n      return this.http.post<T>(origin, {});\n    }\n    return from(Promise.resolve(origin()));\n  }\n\n  private mergePageOptions<T>(originalOption: T, newPageOptions: T, optionSchema: PoPageDynamicOptionsSchema<T>) {\n\n    const mergePageOptions: T = optionSchema.schema.reduce(\n      (objWithNewProp, prop) =>\n      ({...objWithNewProp, [prop.nameProp]: this.createNewProp(prop, originalOption, newPageOptions)})\n      , {} as T);\n\n    Object.keys(mergePageOptions).forEach(key => !mergePageOptions[key] && delete mergePageOptions[key]);\n\n    return mergePageOptions;\n  }\n\n  private createNewProp<T>(prop: PoPageDynamicOptionsProp<T>, originalOption: T, newPageOptions: T) {\n    if (prop.merge) {\n        return this.mergeOptions(originalOption[prop.nameProp], newPageOptions[prop.nameProp], prop.keyForMerge  );\n    } else {\n      return newPageOptions[prop.nameProp] || originalOption[prop.nameProp];\n    }\n  }\n\n  private mergeOptions<T>(originalOptions: (Array<T> | T) , newOptions: (Array<T> | T) , filterProp?: keyof T) {\n\n    if (!originalOptions && !newOptions) {\n      return;\n    }\n    if (!newOptions) {\n      return originalOptions;\n    }\n    if (!originalOptions) {\n      return newOptions;\n    }\n\n    if (originalOptions instanceof Array && newOptions instanceof Array ) {\n      return this.mergeOptionsArray(originalOptions, newOptions, filterProp);\n    }\n\n    return {...originalOptions, ...newOptions};\n\n  }\n\n  private mergeOptionsArray<T>(originalOptions: Array<T>, newOptions: Array<T>, filterProp: keyof T) {\n    const deduplicateNewOptions = newOptions.filter(\n      newItem => !originalOptions.find(originalItem => originalItem[filterProp] === newItem[filterProp]));\n    const mergedOriginalOptions = originalOptions.map(originalItem => {\n        const newItem = newOptions.find(newOptionsItem => originalItem[filterProp] === newOptionsItem[filterProp]) || originalItem;\n        return {...originalItem, ...newItem};\n      }\n    );\n    return [...mergedOriginalOptions, ...deduplicateNewOptions];\n  }\n}\n","import { HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PoPageCustomizationService } from './po-page-customization.service';\n\n/**\n * @description\n *\n * MÃ³dulo do serviÃ§o do po-page-customization-service.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  providers: [\n    PoPageCustomizationService\n  ]\n})\nexport class PoPageCustomizationModule { }\n","import { EventEmitter, Input, Output, ViewChild } from '@angular/core';\n\nimport { PoDynamicFormField, PoLanguageService, PoModalAction, PoModalComponent } from '@portinari/portinari-ui';\n\nimport { poLocaleDefault } from '../../../utils/util';\n\nimport { PoAdvancedFilterLiterals } from './po-advanced-filter-literals.interface';\n\nexport const poAdvancedFiltersLiteralsDefault = {\n  en: <PoAdvancedFilterLiterals> {\n    title: 'Advanced search',\n    cancelLabel: 'Cancel',\n    confirmLabel: 'Apply filters'\n  },\n  es: <PoAdvancedFilterLiterals> {\n    title: 'BÃºsqueda avanzada',\n    cancelLabel: 'Cancelar',\n    confirmLabel: 'Aplicar filtros'\n  },\n  pt: <PoAdvancedFilterLiterals> {\n    title: 'Busca avanÃ§ada',\n    cancelLabel: 'Cancelar',\n    confirmLabel: 'Aplicar filtros'\n  },\n  ru: <PoAdvancedFilterLiterals> {\n    title: 'Ð Ð°ÑÑÐ¸ÑÐµÐ½Ð½ÑÐ¹ Ð¿Ð¾Ð¸ÑÐº',\n    cancelLabel: 'Ð¾ÑÐ¼ÐµÐ½Ð¸ÑÑ',\n    confirmLabel: 'ÐÑÐ¸Ð¼ÐµÐ½Ð¸ÑÑ ÑÐ¸Ð»ÑÑÑÑ'\n  }\n};\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Filtro de busca avanÃ§ada criado a partir de um formulÃ¡rio dinÃ¢mico.\n * Componente de uso interno.\n */\nexport class PoAdvancedFilterBaseComponent {\n\n  @ViewChild(PoModalComponent, { static: true }) poModal: PoModalComponent;\n\n  private _filters: Array<PoDynamicFormField> = [];\n  private _literals: PoAdvancedFilterLiterals;\n\n  filter = {};\n  language: string = poLocaleDefault;\n\n  primaryAction: PoModalAction = {\n    action: () => {\n      const models = this.getValuesFromForm();\n\n      this.searchEvent.emit(models);\n      this.poModal.close();\n    },\n    label: this.literals.confirmLabel\n  };\n\n  secondaryAction: PoModalAction = {\n    action: () => {\n      this.poModal.close();\n    },\n    label: this.literals.cancelLabel\n  };\n\n  /**\n   * ColeÃ§Ã£o de objetos que implementam a interface PoDynamicFormField, para definiÃ§Ã£o dos campos que serÃ£o criados\n   * dinamicamente.\n   */\n  @Input('p-filters') set filters(filters: Array<PoDynamicFormField>) {\n    this._filters = Array.isArray(filters) ? [...filters] : [];\n  }\n\n  get filters() {\n    return this._filters;\n  }\n\n  /** Objeto com as literais usadas no `po-advanced-filter`. */\n  @Input('p-literals') set literals(value: PoAdvancedFilterLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...poAdvancedFiltersLiteralsDefault[poLocaleDefault],\n        ...poAdvancedFiltersLiteralsDefault[this.language],\n        ...value\n      };\n    } else {\n      this._literals = poAdvancedFiltersLiteralsDefault[this.language];\n    }\n\n    this.primaryAction.label = this.literals.confirmLabel;\n    this.secondaryAction.label = this.literals.cancelLabel;\n  }\n\n  get literals() {\n    return this._literals || poAdvancedFiltersLiteralsDefault[this.language];\n  }\n\n  /** FunÃ§Ã£o que serÃ¡ disparada e receberÃ¡ os valores do formulÃ¡rio ao ser clicado no botÃ£o buscar. */\n  @Output('p-search-event') searchEvent = new EventEmitter<any>();\n\n  constructor(languageService: PoLanguageService) {\n    this.language = languageService.getShortLanguage();\n  }\n\n    // Retorna os models dos campos preenchidos\n  private getValuesFromForm() {\n    Object.keys(this.filter).forEach(property => {\n      if (this.filter[property] === undefined || this.filter[property] === '') {\n        delete this.filter[property];\n      }\n    });\n\n    return this.filter;\n  }\n\n}\n","import { Component, ViewChild } from '@angular/core';\n\nimport { PoDynamicFormComponent, PoLanguageService } from '@portinari/portinari-ui';\n\nimport { PoAdvancedFilterBaseComponent } from './po-advanced-filter-base.component';\n\n/**\n * @docsPrivate\n *\n * @docsExtends PoAdvancedFilterBaseComponent\n *\n * @examplePrivate\n *\n * <example-private name=\"po-advanced-filter\" title=\"Portinari Busca AvanÃ§ada\">\n *   <file name=\"sample-po-advanced-filter.component.html\"> </file>\n *   <file name=\"sample-po-advanced-filter.component.ts\"> </file>\n * </example-private>\n */\n@Component({\n  selector: 'po-advanced-filter',\n  templateUrl: './po-advanced-filter.component.html'\n})\nexport class PoAdvancedFilterComponent extends PoAdvancedFilterBaseComponent {\n\n  @ViewChild(PoDynamicFormComponent, { static: true }) poDynamicForm: PoDynamicFormComponent;\n\n  constructor(languageService: PoLanguageService) {\n    super(languageService);\n  }\n\n  open() {\n    this.filter = {};\n    this.poModal.open();\n  }\n\n}\n","import { EventEmitter, Input, Output } from '@angular/core';\n\nimport { PoBreadcrumb, PoDynamicFormField, PoLanguageService, PoPageAction } from '@portinari/portinari-ui';\n\nimport { poLocaleDefault } from '../../utils/util';\n\nimport { PoPageDynamicSearchLiterals } from './po-page-dynamic-search-literals.interface';\nimport { poAdvancedFiltersLiteralsDefault } from './po-advanced-filter/po-advanced-filter-base.component';\nimport { PoAdvancedFilterLiterals } from './po-advanced-filter/po-advanced-filter-literals.interface';\nimport { PoPageDynamicSearchOptions } from './po-page-dynamic-search-options.interface';\n\nexport const poPageDynamicSearchLiteralsDefault = {\n  en: <PoPageDynamicSearchLiterals> {\n    disclaimerGroupTitle: 'Displaying results filtered by:',\n    filterTitle: poAdvancedFiltersLiteralsDefault.en.title,\n    filterCancelLabel: poAdvancedFiltersLiteralsDefault.en.cancelLabel,\n    filterConfirmLabel: poAdvancedFiltersLiteralsDefault.en.confirmLabel,\n    quickSearchLabel: 'Quick search:',\n    searchPlaceholder: 'Search'\n  },\n  es: <PoPageDynamicSearchLiterals> {\n    disclaimerGroupTitle: 'Presentando resultados filtrados por:',\n    filterTitle: poAdvancedFiltersLiteralsDefault.es.title,\n    filterCancelLabel: poAdvancedFiltersLiteralsDefault.es.cancelLabel,\n    filterConfirmLabel: poAdvancedFiltersLiteralsDefault.es.confirmLabel,\n    quickSearchLabel: 'BÃºsqueda rÃ¡pida:',\n    searchPlaceholder: 'Buscar',\n  },\n  pt: <PoPageDynamicSearchLiterals> {\n    disclaimerGroupTitle: 'Apresentando resultados filtrados por:',\n    filterTitle: poAdvancedFiltersLiteralsDefault.pt.title,\n    filterCancelLabel: poAdvancedFiltersLiteralsDefault.pt.cancelLabel,\n    filterConfirmLabel: poAdvancedFiltersLiteralsDefault.pt.confirmLabel,\n    quickSearchLabel: 'Pesquisa rÃ¡pida:',\n    searchPlaceholder: 'Pesquisar'\n  },\n  ru: <PoPageDynamicSearchLiterals> {\n    disclaimerGroupTitle: 'ÐÑÐ¾Ð±ÑÐ°Ð¶ÐµÐ½Ð¸Ðµ ÑÐµÐ·ÑÐ»ÑÑÐ°ÑÐ¾Ð², Ð¾ÑÑÐ¸Ð»ÑÑÑÐ¾Ð²Ð°Ð½Ð½ÑÑ Ð¿Ð¾:',\n    filterTitle: poAdvancedFiltersLiteralsDefault.ru.title,\n    filterCancelLabel: poAdvancedFiltersLiteralsDefault.ru.cancelLabel,\n    filterConfirmLabel: poAdvancedFiltersLiteralsDefault.ru.confirmLabel,\n    quickSearchLabel: 'ÐÑÑÑÑÑÐ¹ Ð¿Ð¾Ð¸ÑÐº:',\n    searchPlaceholder: 'Ð¸ÑÑÐ»ÐµÐ´Ð¾Ð²Ð°Ð½Ð¸Ðµ'\n  },\n};\n\n/**\n * @description\n *\n * Componente com as aÃ§Ãµes de pesquisa jÃ¡ definidas, bastando que o desenvolvedor implemente apenas a chamada para as APIs\n * e exiba as informaÃ§Ãµes.\n */\nexport class PoPageDynamicSearchBaseComponent {\n\n  private _filters: Array<PoDynamicFormField> = [];\n  private _literals: PoPageDynamicSearchLiterals;\n\n  advancedFilterLiterals: PoAdvancedFilterLiterals;\n\n  private language: string;\n\n  /** Nesta propriedade deve ser definido um array de objetos que implementam a interface `PoPageAction`. */\n  @Input('p-actions') actions?: Array<PoPageAction> = [];\n\n  /** Objeto com propriedades do breadcrumb. */\n  @Input('p-breadcrumb') breadcrumb?: PoBreadcrumb = { items: [] };\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com as literais usadas no `po-page-dynamic-search`.\n   *\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\n   *\n   * ```\n   *  const customLiterals: PoPageDynamicSearchLiterals = {\n   *    disclaimerGroupTitle: 'Filtros aplicados:',\n   *    filterTitle: 'Filtro avanÃ§ado',\n   *    filterCancelLabel: 'Fechar',\n   *    filterConfirmLabel: 'Aplicar',\n   *    quickSearchLabel: 'Valor pesquisado:',\n   *    searchPlaceholder: 'Pesquise aqui'\n   *  };\n   * ```\n   *\n   * Ou passando apenas as literais que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: PoPageDynamicSearchLiterals = {\n   *    filterTitle: 'Filtro avanÃ§ado'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <po-page-dynamic-search\n   *   [p-literals]=\"customLiterals\">\n   * </po-page-dynamic-search>\n   * ```\n   *\n   * > O valor padrÃ£o serÃ¡ traduzido de acordo com o idioma configurado no [`PoI18nService`](/documentation/po-i18n) ou *browser*.\n   */\n  @Input('p-literals') set literals(value: PoPageDynamicSearchLiterals) {\n    if (value instanceof Object && !(value instanceof Array)) {\n      this._literals = {\n        ...poPageDynamicSearchLiteralsDefault[poLocaleDefault],\n        ...poPageDynamicSearchLiteralsDefault[this.language],\n        ...value\n      };\n    } else {\n      this._literals = poPageDynamicSearchLiteralsDefault[this.language];\n    }\n\n    this.setAdvancedFilterLiterals(this.literals);\n  }\n\n  get literals() {\n    return this._literals || poPageDynamicSearchLiteralsDefault[this.language];\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Lista dos campos usados na busca avanÃ§ada. Caso o mesmo nÃ£o seja passado a busca avanÃ§ada nÃ£o serÃ¡ exibida.\n   */\n  @Input('p-filters') set filters(filters: Array<PoDynamicFormField>) {\n    this._filters = Array.isArray(filters) ? [...filters] : [];\n  }\n\n  get filters(): Array<PoDynamicFormField> {\n    return this._filters;\n  }\n\n  /**\n   * FunÃ§Ã£o ou serviÃ§o que serÃ¡ executado na inicializaÃ§Ã£o do componente.\n   *\n   * A propriedade aceita os seguintes tipos:\n   * - `string`: *Endpoint* usado pelo componente para requisiÃ§Ã£o via `POST`.\n   * - `function`: MÃ©todo que serÃ¡ executado.\n   *\n   * O retorno desta funÃ§Ã£o deve ser do tipo `PoPageDynamicSearchOptions`,\n   * onde o usuÃ¡rio poderÃ¡ customizar novos filtros, breadcrumb, title e actions\n   *\n   * Por exemplo:\n   *\n   * ```\n   * getPageOptions(): PoPageDynamicSearchOptions {\n   * return {\n   *   actions: [\n   *     { label: 'Find on Google' },\n   *   ],\n   *   filters: [\n   *     { property: 'idCard', gridColumns: 6 }\n   *   ]\n   * };\n   * }\n   *\n   * ```\n   * Para referenciar a sua funÃ§Ã£o utilize a propriedade `bind`, por exemplo:\n   * ```\n   *  [p-load]=\"onLoadOptions.bind(this)\"\n   * ```\n   */\n  @Input('p-load') onLoad: string | (() => PoPageDynamicSearchOptions);\n\n  /** TÃ­tulo da pÃ¡gina. */\n  @Input('p-title') title: string;\n\n  /**\n   * @description\n   *\n   * Evento disparado ao executar a pesquisa avanÃ§ada, o mesmo irÃ¡ repassar um objeto com os valores preenchidos no modal de pesquisa.\n   *\n   * > Campos nÃ£o preenchidos nÃ£o irÃ£o aparecer no objeto passado por parÃ¢metro.\n   */\n  @Output('p-advanced-search') advancedSearch?: EventEmitter<any> = new EventEmitter();\n\n  /** Evento disparado ao remover um ou todos os disclaimers pelo usuÃ¡rio. */\n  @Output('p-change-disclaimers') changeDisclaimers?: EventEmitter<any> = new EventEmitter();\n\n  /** Evento disparado ao realizar uma busca pelo campo de pesquisa rÃ¡pida, o mesmo serÃ¡ chamado repassando o valor digitado. */\n  @Output('p-quick-search') quickSearch?: EventEmitter<string> = new EventEmitter();\n\n  constructor(languageService: PoLanguageService) {\n    this.language = languageService.getShortLanguage();\n  }\n\n  protected setAdvancedFilterLiterals(literals: PoPageDynamicSearchLiterals) {\n    this.advancedFilterLiterals = {\n      cancelLabel: literals.filterCancelLabel,\n      confirmLabel: literals.filterConfirmLabel,\n      title: literals.filterTitle\n    };\n  }\n}\n","import { Component, ViewChild, OnInit, OnDestroy } from '@angular/core';\n\nimport { Observable, Subscription } from 'rxjs';\nimport { PoDisclaimerGroup, PoDynamicFieldType, PoDynamicFormField, PoLanguageService, PoPageFilter } from '@portinari/portinari-ui';\n\nimport { capitalizeFirstLetter, getBrowserLanguage } from '../../utils/util';\nimport { PoPageCustomizationService } from '../../services/po-page-customization/po-page-customization.service';\n\nimport { PoAdvancedFilterComponent } from './po-advanced-filter/po-advanced-filter.component';\nimport { PoPageDynamicSearchBaseComponent } from './po-page-dynamic-search-base.component';\nimport { PoPageDynamicSearchOptions } from './po-page-dynamic-search-options.interface';\nimport { PoPageDynamicOptionsSchema } from '../../services';\n\ntype UrlOrPoCustomizationFunction = string | (() => PoPageDynamicSearchOptions );\n\n/**\n * @docsExtends PoPageDynamicSearchBaseComponent\n *\n * @example\n *\n * <example name=\"po-page-dynamic-search-basic\" title=\"Portinari Page Dynamic Search Basic\">\n *  <file name=\"sample-po-page-dynamic-search-basic/sample-po-page-dynamic-search-basic.component.html\"> </file>\n *  <file name=\"sample-po-page-dynamic-search-basic/sample-po-page-dynamic-search-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-dynamic-search-hiring-processes\" title=\"Portinari Page Dynamic Search - Hiring processes\">\n *  <file name=\"sample-po-page-dynamic-search-hiring-processes/sample-po-page-dynamic-search-hiring-processes.component.html\"> </file>\n *  <file name=\"sample-po-page-dynamic-search-hiring-processes/sample-po-page-dynamic-search-hiring-processes.component.ts\"> </file>\n *  <file name=\"sample-po-page-dynamic-search-hiring-processes/sample-po-page-dynamic-search-hiring-processes.service.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-page-dynamic-search',\n  templateUrl: './po-page-dynamic-search.component.html'\n})\nexport class PoPageDynamicSearchComponent extends PoPageDynamicSearchBaseComponent implements OnInit, OnDestroy {\n\n  private loadSubscription: Subscription;\n\n  private readonly _disclaimerGroup: PoDisclaimerGroup = {\n    change: this.onChangeDisclaimerGroup.bind(this),\n    disclaimers: [],\n    title: this.literals.disclaimerGroupTitle\n  };\n\n  private readonly _filterSettings: PoPageFilter = {\n    action: 'onAction',\n    advancedAction: 'onAdvancedAction',\n    ngModel: 'quickFilter',\n    placeholder: this.literals.searchPlaceholder\n  };\n\n  // Flag to control when changeDisclaimerGroup should be called\n  private changeDisclaimersEnabled: boolean = false;\n\n  private quickFilter;\n\n  @ViewChild(PoAdvancedFilterComponent, { static: true }) poAdvancedFilter: PoAdvancedFilterComponent;\n\n  constructor(languageService: PoLanguageService, private poPageCustomizationService: PoPageCustomizationService) {\n    super(languageService);\n  }\n\n  get disclaimerGroup() {\n    return Object.assign({}, this._disclaimerGroup, { title: this.literals.disclaimerGroupTitle });\n  }\n\n  get filterSettings() {\n    this._filterSettings.advancedAction = this.filters.length === 0 ? undefined : 'onAdvancedAction';\n\n    return Object.assign({}, this._filterSettings, { placeholder: this.literals.searchPlaceholder });\n  }\n\n  ngOnInit() {\n    this.setAdvancedFilterLiterals(this.literals);\n    if (this.onLoad) {\n      this.loadOptionsOnInitialize(this.onLoad);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.loadSubscription) {\n      this.loadSubscription.unsubscribe();\n    }\n  }\n\n  onAction() {\n    this.changeDisclaimersEnabled = false;\n    this._disclaimerGroup.disclaimers = [\n      { property: 'search', label: `${this.literals.quickSearchLabel} ${this.quickFilter}`, value: this.quickFilter }\n    ];\n\n    if (this.quickSearch.observers && this.quickSearch.observers.length > 0) {\n      this.quickSearch.emit(this.quickFilter);\n    }\n\n    this.quickFilter = undefined;\n  }\n\n  onAdvancedAction() {\n    this.poAdvancedFilter.open();\n  }\n\n  onAdvancedSearch(filters) {\n    this.changeDisclaimersEnabled = false;\n    this._disclaimerGroup.disclaimers = this.setDisclaimers(filters);\n\n    this.advancedSearch.emit(filters);\n  }\n\n  private applyDisclaimerLabelValue(field: any, filterValue: any) {\n    const values = Array.isArray(filterValue) ? filterValue : [ filterValue ];\n\n    const labels = values.map(value => {\n      const filteredField = field.options.find(option => option.value === value);\n\n      return filteredField.label || filteredField.value;\n    });\n\n    return labels.join(', ');\n  }\n\n  private formatDate(date: string) {\n    const year = parseInt(date.substr(0, 4), 10);\n    const month = parseInt(date.substr(5, 2), 10);\n    const day = parseInt(date.substr(8, 2), 10);\n\n    return new Date(year, month - 1, day).toLocaleDateString(getBrowserLanguage());\n  }\n\n  private getFieldByProperty(fields: Array<PoDynamicFormField>, fieldName: string) {\n    return fields.find((field: PoDynamicFormField) => field.property === fieldName);\n  }\n\n  private getFilterValueToDisclaimer(field: any, value: any) {\n\n    if (field.type === PoDynamicFieldType.Date) {\n      return this.formatDate(value);\n    }\n\n    if (field.options) {\n      return this.applyDisclaimerLabelValue(field, value);\n    }\n\n    return value;\n  }\n\n  private onChangeDisclaimerGroup(disclaimers) {\n    this.changeDisclaimersEnabled ? this.changeDisclaimers.emit(disclaimers) : this.changeDisclaimersEnabled = true;\n  }\n\n  private setDisclaimers(filters) {\n    const disclaimers = [];\n    const properties = Object.keys(filters);\n\n    properties.forEach(property => {\n      const field = this.getFieldByProperty(this.filters, property);\n      const label = field.label || capitalizeFirstLetter(field.property);\n      const value = filters[property];\n\n      disclaimers.push({\n        label: `${label}: ${this.getFilterValueToDisclaimer(field, value)}`,\n        property,\n        value\n      });\n    });\n\n    return disclaimers;\n  }\n\n  private loadOptionsOnInitialize(onLoad: UrlOrPoCustomizationFunction) {\n\n    this.loadSubscription = this.getPoDynamicPageOptions(onLoad).subscribe(responsePoOption =>\n        this.poPageCustomizationService.changeOriginalOptionsToNewOptions(this, responsePoOption));\n  }\n\n  private getPoDynamicPageOptions(onLoad: UrlOrPoCustomizationFunction): Observable<PoPageDynamicSearchOptions> {\n    const originalOption: PoPageDynamicSearchOptions = {\n      title: this.title,\n      actions: this.actions,\n      breadcrumb: this.breadcrumb,\n      filters: this.filters\n    };\n\n    const pageOptionSchema: PoPageDynamicOptionsSchema<PoPageDynamicSearchOptions> = {\n      schema: [\n        {\n          nameProp: 'filters',\n          merge: true,\n          keyForMerge: 'property'\n        },\n        {\n          nameProp: 'actions',\n          merge: true,\n          keyForMerge: 'label'\n        },\n        {\n          nameProp: 'breadcrumb'\n        },\n        {\n          nameProp: 'title'\n        }\n      ]\n    };\n\n    return this.poPageCustomizationService.getCustomOptions(onLoad, originalOption, pageOptionSchema);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoDynamicModule, PoLanguageModule, PoModalModule, PoPageModule } from '@portinari/portinari-ui';\n\nimport { PoPageCustomizationModule } from '../../services/po-page-customization/po-page-customization.module';\n\nimport { PoAdvancedFilterComponent } from './po-advanced-filter/po-advanced-filter.component';\nimport { PoPageDynamicSearchComponent } from './po-page-dynamic-search.component';\n\n/**\n * @description\n *\n * MÃ³dulo do template do po-page-dynamic-search.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n\n    PoDynamicModule,\n    PoLanguageModule,\n    PoModalModule,\n    PoPageModule,\n    PoPageCustomizationModule\n  ],\n  declarations: [\n    PoAdvancedFilterComponent,\n    PoPageDynamicSearchComponent\n  ],\n  exports: [\n    PoPageDynamicSearchComponent\n  ]\n})\nexport class PoPageDynamicSearchModule { }\n","import { Input } from '@angular/core';\n\nimport { PoBreadcrumb } from '@portinari/portinari-ui';\n\nimport { convertToBoolean } from '../../utils/util';\n\nimport { PoPageDynamicTableField } from './interfaces/po-page-dynamic-table-field.interface';\n\nexport class PoPageDynamicListBaseComponent {\n\n  private _autoRouter: boolean = false;\n  private _columns: Array<any> = [];\n  private _duplicates: Array<any> = [];\n  private _fields: Array<any> = [];\n  private _filters: Array<any> = [];\n  private _keys: Array<any> = [];\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Cria automaticamente as rotas de ediÃ§Ã£o (novo/duplicate) e detalhes caso sejam definidas aÃ§Ãµes na propriedade `p-actions`\n   *\n   * As rotas criadas serÃ£o baseadas na propriedade `p-actions`.\n   *\n   * > Para o correto funcionamento nÃ£o pode haver nenhuma rota coringa (`**`) especificada.\n   *\n   * @default false\n   */\n  @Input('p-auto-router') set autoRouter(value: boolean) {\n    this._autoRouter = convertToBoolean(value);\n  }\n\n  get autoRouter(): boolean {\n    return this._autoRouter;\n  }\n\n  /** Objeto com propriedades do breadcrumb. */\n  @Input('p-breadcrumb') breadcrumb?: PoBreadcrumb = { items: [] };\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Lista dos campos usados na tabela e busca avanÃ§ada.\n   *\n   *\n   * > Caso nÃ£o seja definido fields a tabela assumirÃ¡ o comportamento padrÃ£o.\n   */\n  @Input('p-fields') set fields(fields: Array<PoPageDynamicTableField>) {\n    this._fields = Array.isArray(fields) ? [...fields] : [];\n\n    this.setFieldsProperties(this.fields);\n  }\n\n  get fields(): Array<PoPageDynamicTableField> {\n    return this._fields;\n  }\n\n  /** Endpoint da API dos recursos que serÃ£o exibidos. */\n  /**\n   * @description\n   *\n   * Endpoint usado pelo template para requisiÃ§Ã£o dos recursos que serÃ£o exibidos.\n   *\n   * Ao realizar requisiÃ§Ãµes de busca, podem ser enviados os parÃ¢metros (caso possuam valor): `page`, `pageSize`, `search` e `order`.\n   *\n   * Caso a coluna estiver ordenada descendentemente serÃ¡ enviada da seguinte forma: `-name`, se for ordenada\n   * ascendentemente serÃ¡ enviada apenas com o nome da coluna, por exemplo: `name`.\n   *\n   * Exemplo de uma requisiÃ§Ã£o de busca:\n   *\n   * > `GET {end-point}/{resource}?page=1&pageSize=10&search=components&order=-name`\n   *\n   * Caso a aÃ§Ã£o `remove` estiver configurada, serÃ¡ feito uma requisiÃ§Ã£o de exclusÃ£o nesse mesmo endpoint passando os campos\n   * setados como `key: true`.\n   *\n   * > `DELETE {end-point}/{keys}`\n   *\n   * ```\n   *  <po-page-dynamic-table\n   *    [p-actions]=\"{ remove: true }\"\n   *    [p-fields]=\"[ { property: 'id', key: true } ]\"\n   *    p-service=\"/api/po-samples/v1/people\"\n   *    ...>\n   *  </po-page-dynamic-table>\n   * ```\n   *\n   * ResquisiÃ§Ã£o disparada, onde a propriedade `id` Ã© igual a 2:\n   *\n   * ```\n   *  DELETE /api/po-samples/v1/people/2 HTTP/1.1\n   *  Host: localhost:4000\n   *  Connection: keep-alive\n   *  Accept: application/json, text/plain\n   *  ...\n   * ```\n   *\n   * Para a aÃ§Ã£o `removeAll`, serÃ¡ feito uma requisiÃ§Ã£o de exclusÃ£o em lote para esse mesmo endpoint passando, uma lista\n   * de objetos com os campos setados como `key: true` via `payload`.\n   *\n   * > `DELETE {end-point}`\n   *\n   * > `Payload: [ {key}, {key} ... {key} ]`\n   *\n   * ```\n   *  <po-page-dynamic-table\n   *    [p-actions]=\"{ removeAll: true }\"\n   *    [p-fields]=\"[ { property: 'id', key: true } ]\"\n   *    p-service=\"/api/po-samples/v1/people\"\n   *    ...>\n   *  </po-page-dynamic-table>\n   * ```\n   *\n   * ResquisiÃ§Ã£o disparada, onde foram selecionados 3 itens para serem removidos:\n   *\n   * ```\n   *  DELETE /api/po-samples/v1/people HTTP/1.1\n   *  Host: localhost:4000\n   *  Connection: keep-alive\n   *  Accept: application/json, text/plain\n   *  ...\n   * ```\n   *\n   * Request payload:\n   *\n   * ```\n   * [{\"id\":2},{\"id\":4},{\"id\":5}]\n   * ```\n   *\n   * > Caso esteja usando metadados com o template, serÃ¡ disparado uma requisiÃ§Ã£o na inicializaÃ§Ã£o do template para buscar\n   * > os metadados da pÃ¡gina passando o tipo do metadado esperado e a versÃ£o cacheada pelo browser.\n   * >\n   * > `GET {end-point}/metadata?type=list&version={version}`\n   */\n  @Input('p-service-api') serviceApi: string;\n\n  /** TÃ­tulo da pÃ¡gina. */\n  @Input('p-title') title: string;\n\n  get columns() {\n    return [...this._columns];\n  }\n\n  get duplicates() {\n    return [...this._duplicates];\n  }\n\n  get filters() {\n    return [...this._filters];\n  }\n\n  get keys() {\n    return [...this._keys];\n  }\n\n  private setFieldsProperties(fields: Array<any>) {\n    this._filters = fields.filter(field => field.filter === true);\n    this._columns = fields.filter(field => field.visible === undefined || field.visible === true);\n    this._keys = fields.filter(field => field.key === true).map(field => field.property);\n    this._duplicates = fields.filter(field => field.duplicate === true).map(field => field.property);\n  }\n\n}\n","import { ActivatedRoute, Route, Router } from '@angular/router';\nimport { Component, Input, OnInit, OnDestroy } from '@angular/core';\n\nimport { Subscription, Observable, EMPTY, throwError, concat } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport {\n  PoDialogConfirmOptions,\n  PoDialogService,\n  PoNotificationService,\n  PoPageAction,\n  PoTableAction,\n  PoTableColumnSort,\n  PoTableColumnSortType\n} from '@portinari/portinari-ui';\n\nimport * as util from '../../utils/util';\n\nimport { PoPageDynamicDetailComponent } from '../po-page-dynamic-detail/po-page-dynamic-detail.component';\n\nimport { PoPageDynamicListBaseComponent } from './po-page-dynamic-list-base.component';\nimport { PoPageDynamicService } from '../../services/po-page-dynamic/po-page-dynamic.service';\nimport { PoPageDynamicTableActions } from './interfaces/po-page-dynamic-table-actions.interface';\nimport { PoPageDynamicTableOptions } from './interfaces/po-page-dynamic-table-options.interface';\nimport { PoPageCustomizationService } from './../../services/po-page-customization/po-page-customization.service';\nimport { PoPageDynamicOptionsSchema } from './../../services/po-page-customization/po-page-dynamic-options.interface';\nimport { PoPageDynamicTableMetaData } from './interfaces/po-page-dynamic-table-metadata.interface';\n\ntype UrlOrPoCustomizationFunction = string | (() => PoPageDynamicTableOptions );\n\nexport const poPageDynamicTableLiteralsDefault = {\n  en: {\n    pageAction: 'New',\n    pageActionRemoveAll: 'Delete',\n    tableActionView: 'View',\n    tableActionEdit: 'Edit',\n    tableActionDuplicate: 'Duplicate',\n    tableActionDelete: 'Delete',\n    confirmRemoveTitle: 'Confirm delete',\n    confirmRemoveMessage: 'Are you sure you want to delete this record? You can not undo this action.',\n    confirmRemoveAllTitle: 'Confirm batch deletion',\n    confirmRemoveAllMessage: 'Are you sure you want to delete all these records? You can not undo this action.',\n    loadDataErrorNotification: 'Service not found',\n    removeSuccessNotification: 'Item deleted successfully',\n    removeAllSuccessNotification: 'Items deleted successfully'\n  },\n  es: {\n    pageAction: 'Nuevo',\n    pageActionRemoveAll: 'Borrar',\n    tableActionView: 'Visualizar',\n    tableActionEdit: 'Editar',\n    tableActionDuplicate: 'Duplicar',\n    tableActionDelete: 'Borrar',\n    confirmRemoveTitle: 'Confirmar la exclusiÃ³n',\n    confirmRemoveMessage: 'Â¿EstÃ¡ seguro de que desea eliminar este registro? No puede deshacer esta acciÃ³n.',\n    confirmRemoveAllTitle: 'Confirmar la exclusiÃ³n por lotes',\n    confirmRemoveAllMessage: 'Â¿EstÃ¡ seguro de que desea eliminar todos estos registros? No puede deshacer esta acciÃ³n.',\n    loadDataErrorNotification: 'Servicio no informado.',\n    removeSuccessNotification: 'Elemento eliminado con Ã©xito',\n    removeAllSuccessNotification: 'Elementos eliminados con Ã©xito'\n  },\n  pt: {\n    pageAction: 'Novo',\n    pageActionRemoveAll: 'Excluir',\n    tableActionView: 'Visualizar',\n    tableActionEdit: 'Editar',\n    tableActionDuplicate: 'Duplicar',\n    tableActionDelete: 'Excluir',\n    confirmRemoveTitle: 'Confirmar exclusÃ£o',\n    confirmRemoveMessage: 'Tem certeza de que deseja excluir esse registro? VocÃª nÃ£o poderÃ¡ desfazer essa aÃ§Ã£o.',\n    confirmRemoveAllTitle: 'Confirmar exclusÃ£o em lote',\n    confirmRemoveAllMessage: 'Tem certeza de que deseja excluir todos esses registros? VocÃª nÃ£o poderÃ¡ desfazer essa aÃ§Ã£o.',\n    loadDataErrorNotification: 'ServiÃ§o nÃ£o informado.',\n    removeSuccessNotification: 'Item excluido com sucesso',\n    removeAllSuccessNotification: 'Items excluidos com sucesso'\n  }\n};\n\n/**\n * @docsExtends PoPageDynamicListBaseComponent\n *\n * @description\n *\n * O `po-page-dynamic-table` Ã© uma pÃ¡gina que exibe uma lista de registros em uma tabela baseado em uma lista de fields,\n * o mesmo tambÃ©m suporta metadados conforme especificado na documentaÃ§Ã£o.\n *\n * ### UtilizaÃ§Ã£o via rota\n *\n * Ao utilizar as rotas para carregar o template, o `page-dynamic-table` disponibiliza propriedades para\n * poder especificar o endpoint dos dados e dos metadados. Exemplo de utilizaÃ§Ã£o:\n *\n * ```\n * {\n *   path: 'people',\n *   component: PoPageDynamicTableComponent,\n *   data: {\n *     serviceApi: 'http://localhost:3000/v1/people', // endpoint dos dados\n *     serviceMetadataApi: 'http://localhost:3000/v1/metadata' // endpoint dos metadados\n *   }\n * }\n * ```\n *\n * Para carregar com um recurso jÃ¡ existente, deve ser incluÃ­do um parÃ¢metro na rota chamado `id`:\n *\n * ```\n * {\n *   path: 'people/:id',\n *   component: PoPageDynamicTableComponent,\n *   data: {\n *     serviceApi: 'http://localhost:3000/v1/people', // endpoint dos dados\n *     serviceMetadataApi: 'http://localhost:3000/v1/metadata' // endpoint dos metadados\n *   }\n * }\n * ```\n *\n * A requisiÃ§Ã£o dos metadados Ã© feita na inicializaÃ§Ã£o do template para buscar os metadados da pÃ¡gina passando o\n * tipo do metadado esperado e a versÃ£o cacheada pelo browser.\n *\n * O formato esperado na resposta da requisiÃ§Ã£o estÃ¡ especificado na interface\n * [PoPageDynamicTableMetadata](/documentation/po-page-dynamic-table#po-page-dynamic-table-metadata). Por exemplo:\n *\n * ```\n *  {\n *   version: 1,\n *   title: 'Person Table',\n *   fields: [\n *     { property: 'id', key: true, disabled: true },\n *     { property: 'status' },\n *     { property: 'name' },\n *     { property: 'nickname' },\n *     { property: 'birthdate', label: 'Birth date' },\n *     { property: 'genre' },\n *     { property: 'city' },\n *     { property: 'country' }\n *   ]\n * }\n * ```\n *\n * > Caso o endpoint dos metadados nÃ£o seja especificado, serÃ¡ feito uma requisiÃ§Ã£o utilizando o `serviceApi` da seguinte forma:\n * ```\n * GET {end-point}/metadata?type=list&version={version}\n * ```\n *\n * @example\n *\n * <example name=\"po-page-dynamic-table-basic\" title=\"Portinari Page Dynamic Table Basic\">\n *  <file name=\"sample-po-page-dynamic-table-basic/sample-po-page-dynamic-table-basic.component.html\"> </file>\n *  <file name=\"sample-po-page-dynamic-table-basic/sample-po-page-dynamic-table-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-dynamic-table-users\" title=\"Portinari Page Dynamic Table - Users\">\n *  <file name=\"sample-po-page-dynamic-table-users/sample-po-page-dynamic-table-users.component.html\"> </file>\n *  <file name=\"sample-po-page-dynamic-table-users/sample-po-page-dynamic-table-users.component.ts\"> </file>\n * </example>\n */\n@Component({\n  selector: 'po-page-dynamic-table',\n  templateUrl: './po-page-dynamic-table.component.html',\n  providers: [ PoPageDynamicService ]\n})\nexport class PoPageDynamicTableComponent extends PoPageDynamicListBaseComponent implements OnInit, OnDestroy {\n\n  private _actions: PoPageDynamicTableActions = {};\n  private _pageActions: Array<PoPageAction> = [];\n  private _tableActions: Array<PoTableAction> = [];\n\n  private page: number = 1;\n  private params = {};\n  private sortedColumn: PoTableColumnSort;\n  private subscriptions: Array<Subscription> = [];\n\n  hasNext = false;\n  items = [];\n  literals = {\n    ...poPageDynamicTableLiteralsDefault[util.poLocaleDefault],\n    ...poPageDynamicTableLiteralsDefault[util.browserLanguage()]\n  };\n\n  /**\n   * FunÃ§Ã£o ou serviÃ§o que serÃ¡ executado na inicializaÃ§Ã£o do componente.\n   *\n   * A propriedade aceita os seguintes tipos:\n   * - `string`: *Endpoint* usado pelo componente para requisiÃ§Ã£o via `POST`.\n   * - `function`: MÃ©todo que serÃ¡ executado.\n   *\n   * O retorno desta funÃ§Ã£o deve ser do tipo `PoPageDynamicTableOptions`,\n   * onde o usuÃ¡rio poderÃ¡ customizar novos campos, breadcrumb, title e actions\n   *\n   * Por exemplo:\n   *\n   * ```\n   * getPageOptions(): PoPageDynamicTableOptions {\n   * return {\n   *   actions:\n   *     { new: 'new', edit: 'edit/:id', remove: true },\n   *   fields: [\n   *     { property: 'idCard', gridColumns: 6 }\n   *   ]\n   * };\n   * }\n   *\n   * ```\n   * Para referenciar a sua funÃ§Ã£o utilize a propriedade `bind`, por exemplo:\n   * ```\n   *  [p-load]=\"onLoadOptions.bind(this)\"\n   * ```\n   */\n  @Input('p-load') onLoad: string | (() => PoPageDynamicTableOptions );\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * AÃ§Ãµes da pÃ¡gina e da tabela.\n   */\n  @Input('p-actions') set actions(value: PoPageDynamicTableActions) {\n    this._actions = value && typeof value === 'object' && Object.keys(value).length > 0 ? value : {};\n\n    this.setPageActions(this.actions);\n    this.setRemoveAllAction();\n    this.setTableActions(this.actions);\n  }\n\n  get actions(): PoPageDynamicTableActions {\n    return this._actions;\n  }\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private poDialogService: PoDialogService,\n    private poNotification: PoNotificationService,\n    private poPageDynamicService: PoPageDynamicService,\n    private poPageCustomizationService: PoPageCustomizationService\n    ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.loadDataFromAPI();\n  }\n\n  ngOnDestroy() {\n    if (this.subscriptions) {\n      this.subscriptions.forEach(subscription => {\n        subscription.unsubscribe();\n      });\n    }\n  }\n  onAdvancedSearch(filter) {\n    this.subscriptions.push(this.loadData({ page: 1, ...filter }).subscribe());\n    this.params = filter;\n  }\n\n  onChangeDisclaimers(disclaimers) {\n    const filter = {};\n\n    disclaimers.forEach(disclaimer => {\n      filter[disclaimer.property] = disclaimer.value;\n    });\n\n    this.onAdvancedSearch(filter);\n  }\n\n  onQuickSearch(filter) {\n    this.subscriptions.push(this.loadData(filter ? { page: 1, search: filter } : undefined).subscribe());\n    this.params = filter ? { search: filter } : {};\n  }\n\n  onSort(sortedColumn: PoTableColumnSort) {\n    this.sortedColumn = sortedColumn;\n  }\n\n  showMore() {\n    this.subscriptions.push(this.loadData({ page: ++this.page, ...this.params }).subscribe());\n  }\n\n  get hasActionRemoveAll() {\n    return !!this.actions.removeAll;\n  }\n\n  get pageActions() {\n    return [...this._pageActions];\n  }\n\n  get tableActions() {\n    return this._tableActions;\n  }\n\n  private confirmRemove(item) {\n    const confirmOptions: PoDialogConfirmOptions = {\n      title: this.literals.confirmRemoveTitle,\n      message: this.literals.confirmRemoveMessage,\n      confirm: this.remove.bind(this, item)\n    };\n\n    this.poDialogService.confirm(confirmOptions);\n  }\n\n  private confirmRemoveAll() {\n    const confirmOptions: PoDialogConfirmOptions = {\n      title: this.literals.confirmRemoveAllTitle,\n      message: this.literals.confirmRemoveAllMessage,\n      confirm: this.removeAll.bind(this)\n    };\n\n    this.poDialogService.confirm(confirmOptions);\n  }\n\n  private formatUniqueKey(item) {\n    const keys = util.mapObjectByProperties(item, this.keys);\n\n    return util.valuesFromObject(keys).join('|');\n  }\n\n  private getOrderParam(sortedColumn: PoTableColumnSort = { type: undefined }) {\n    const { column, type } = sortedColumn;\n\n    if (!column) {\n      return {};\n    }\n\n    if (type === PoTableColumnSortType.Descending) {\n      return { order: `-${column.property}` };\n    }\n\n    return { order: `${column.property}` };\n  }\n\n  private loadData(params: { page?: number, search?: string } = {}) {\n    if (!this.serviceApi) {\n      this.poNotification.error(this.literals.loadDataErrorNotification);\n      return throwError(this.literals.loadDataErrorNotification);\n    }\n\n    const orderParam = this.getOrderParam(this.sortedColumn);\n    const defaultParams: any = { page: 1, pageSize: 10 };\n    const fullParams: any = { ...defaultParams, ...params, ...orderParam };\n\n    return this.poPageDynamicService.getResources(fullParams).pipe(\n     tap(response => {\n      this.items = fullParams.page === 1 ? response.items : [...this.items, ...response.items];\n      this.page = fullParams.page;\n      this.hasNext = response.hasNext;\n     })\n   );\n  }\n\n  private getMetadata(serviceApi: string): Observable<PoPageDynamicTableMetaData> {\n    if (serviceApi) {\n      return this.poPageDynamicService.getMetadata<PoPageDynamicTableMetaData>().pipe(\n       tap(response => {\n         this.autoRouter = response.autoRouter || this.autoRouter;\n         this.actions = response.actions || this.actions;\n         this.breadcrumb = response.breadcrumb || this.breadcrumb;\n         this.fields = response.fields || this.fields;\n         this.title = response.title || this.title;\n       })\n     );\n    }\n\n    return EMPTY;\n  }\n\n  // @todo Validar rotas na mÃ£o pois se existir uma rota '**' o catch do navigation nÃ£o funciona.\n  private navigateTo(route: {path: string, component?, url?: string, params?: any}, forceStopAutoRouter: boolean = false) {\n    this.router.navigate([route.url || route.path], { queryParams: route.params })\n      .catch(() => {\n        if (forceStopAutoRouter || !this.autoRouter) {\n          return;\n        }\n\n        this.router.config.unshift(<Route>{\n          path: route.path, component: route.component,  data: { serviceApi: this.serviceApi, autoRouter: true }\n        });\n\n        this.navigateTo(route, true);\n      });\n  }\n\n  private openDetail(path: string, item) {\n    const url = this.resolveUrl(item, path);\n\n    this.navigateTo({ path, url, component: PoPageDynamicDetailComponent });\n  }\n\n  private openDuplicate(path: string, item) {\n    const duplicates = util.mapObjectByProperties(item, this.duplicates);\n\n    this.navigateTo({ path, params: { duplicate: JSON.stringify(duplicates) } });\n  }\n\n  private openEdit(path: string, item) {\n    const url = this.resolveUrl(item, path);\n\n    this.navigateTo({ path, url });\n  }\n\n  private openNew(path: string) {\n    this.navigateTo({ path });\n  }\n\n  /**\n   * Caso exista mais de um identificador, serÃ¡ concatenado com '|'.\n   *\n   * Ex: { id: 1, company: 'portinari' }\n   *\n   * Para o endpoint /resources/:id serÃ¡ executada a url /resources/1|portinari\n   */\n  private remove(item) {\n    const uniqueKey = this.formatUniqueKey(item);\n\n    this.poPageDynamicService.deleteResource(uniqueKey).toPromise().then(() => {\n      this.removeLocalItems([item]);\n\n      this.poNotification.success(this.literals.removeSuccessNotification);\n    });\n  }\n\n  private removeAll() {\n    // TODO: usar propriedade nova pra validar os itens selecionados\n    const selectedItems = this.items.filter(item => item.$selected);\n\n    if (selectedItems.length === 0) {\n      // TODO: usar propriedade nova pra validar os itens selecionados\n      return;\n    }\n\n    const keysSelectedItems = util.mapArrayByProperties(selectedItems, this.keys);\n\n    this.poPageDynamicService.deleteResources(keysSelectedItems).toPromise().then(() => {\n      this.removeLocalItems(selectedItems);\n\n      this.poNotification.success(this.literals.removeAllSuccessNotification);\n    });\n  }\n\n  private removeLocalItems(items = []) {\n    items.forEach(itemRemoved => {\n      const indexItemRemoved = this.items.indexOf(itemRemoved);\n\n      this.items.splice(indexItemRemoved, 1);\n    });\n  }\n\n  private resolveUrl(item: any, path: string) {\n    const uniqueKey = this.formatUniqueKey(item);\n\n    return path.replace(/:id/g, uniqueKey);\n  }\n\n  private setPageActions(actions: PoPageDynamicTableActions) {\n    if (actions) {\n      this._pageActions = [\n        { label: this.literals.pageAction, action: this.openNew.bind(this, actions.new), disabled: !this._actions.new },\n      ];\n    }\n  }\n\n  private setRemoveAllAction() {\n    if (this._actions.removeAll) {\n      this._pageActions.push({\n      label: this.literals.pageActionRemoveAll, action: this.confirmRemoveAll.bind(this),\n        disabled: !this._actions.removeAll\n      });\n    }\n  }\n\n  private setTableActions(actions: PoPageDynamicTableActions) {\n    if (actions) {\n      this._tableActions = [\n        { action: this.openDetail.bind(this, actions.detail), label: this.literals.tableActionView, visible: !!this._actions.detail },\n        { action: this.openEdit.bind(this, actions.edit), label: this.literals.tableActionEdit, visible: !!this._actions.edit },\n        { action: this.openDuplicate.bind(this, actions.duplicate), label: this.literals.tableActionDuplicate,\n          visible: !!this._actions.duplicate\n        },\n        { action: this.confirmRemove.bind(this), label: this.literals.tableActionDelete, separator: true, type: 'danger',\n          visible: !!this._actions.remove\n        }\n      ];\n    }\n  }\n\n  private loadDataFromAPI() {\n    const { serviceApi, serviceMetadataApi } = this.activatedRoute.snapshot.data;\n    this.serviceApi = serviceApi || this.serviceApi;\n    this.poPageDynamicService.configServiceApi({ endpoint: this.serviceApi, metadata: serviceMetadataApi });\n    const metadata$ = this.getMetadata(serviceApi);\n    const data$ = this.loadData();\n    const customOption$ = this.loadOptionsOnInitialize(this.onLoad);\n    this.subscriptions.push(concat(metadata$, data$, customOption$).subscribe());\n  }\n\n  private loadOptionsOnInitialize(onLoad: UrlOrPoCustomizationFunction) {\n\n    if (onLoad) {\n      return this.getPoDynamicPageOptions(onLoad).pipe(\n        tap(responsePoOption => this.poPageCustomizationService.changeOriginalOptionsToNewOptions(this, responsePoOption)));\n    }\n\n    return EMPTY;\n  }\n\n  private getPoDynamicPageOptions(onLoad: UrlOrPoCustomizationFunction): Observable<PoPageDynamicTableOptions> {\n    const originalOption: PoPageDynamicTableOptions = {\n      fields: this.fields,\n      actions: this.actions,\n      breadcrumb: this.breadcrumb,\n      title: this.title\n    };\n\n    const pageOptionSchema: PoPageDynamicOptionsSchema<PoPageDynamicTableOptions> = {\n      schema: [\n        {\n          nameProp: 'fields',\n          merge: true,\n          keyForMerge: 'property'\n        },\n        {\n          nameProp: 'actions',\n          merge: true\n        },\n        {\n          nameProp: 'breadcrumb'\n        },\n        {\n          nameProp: 'title'\n        }\n      ]\n    };\n\n    return this.poPageCustomizationService.getCustomOptions(onLoad, originalOption, pageOptionSchema);\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoTableModule } from '@portinari/portinari-ui';\n\nimport { PoPageDynamicSearchModule } from '../po-page-dynamic-search/po-page-dynamic-search.module';\n\nimport { PoPageDynamicTableComponent } from './po-page-dynamic-table.component';\nimport { PoPageCustomizationModule } from '../../services/po-page-customization/po-page-customization.module';\nimport { PoPageDynamicModule } from '../../services/po-page-dynamic/po-page-dynamic.module';\n\n/**\n * @description\n *\n * MÃ³dulo do template do po-page-dynamic-search.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n\n    PoTableModule,\n    PoPageDynamicSearchModule,\n    PoPageCustomizationModule,\n    PoPageDynamicModule\n  ],\n  declarations: [\n    PoPageDynamicTableComponent\n  ],\n  exports: [\n    PoPageDynamicTableComponent\n  ]\n})\nexport class PoPageDynamicTableModule { }\n","import { PoJobSchedulerInternal } from './interfaces/po-job-scheduler-internal.interface';\n\nexport class PoPageJobSchedulerInternal implements PoJobSchedulerInternal {\n\n  periodicity = 'single';\n  firstExecution = new Date();\n  firstExecutionHour = this.getCurrentHour(this.firstExecution);\n  recurrent = true;\n\n  private getCurrentHour(date: Date): string {\n    const hours = date.getHours() < 10 ? '0' + date.getHours() : date.getHours();\n    const minutes = date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes();\n\n    return `${hours}:${minutes}`;\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Input } from '@angular/core';\n\nimport { PoBreadcrumb } from '@portinari/portinari-ui';\n\nimport { PoJobSchedulerInternal } from './interfaces/po-job-scheduler-internal.interface';\nimport { PoPageJobSchedulerInternal } from './po-page-job-scheduler-internal';\nimport { PoPageJobSchedulerService } from './po-page-job-scheduler.service';\n\n/**\n * @description\n *\n * O `po-page-job-scheduler` Ã© uma pÃ¡gina para criaÃ§Ã£o e atualizaÃ§Ã£o do *Job Scheduler* de forma simplificada, apenas informando\n * o serviÃ§o (endpoint) para consumo, sem a necessidade de criar componentes e tratamentos dos dados.\n */\nexport class PoPageJobSchedulerBaseComponent {\n\n  /** Objeto com propriedades do breadcrumb. */\n  @Input('p-breadcrumb') breadcrumb?: PoBreadcrumb = { items: [] };\n\n  /**\n   * Endpoint usado pelo template para requisiÃ§Ã£o do recurso que serÃ¡ utilizado para criaÃ§Ã£o e ediÃ§Ã£o.\n   *\n   * #### Processos\n   *\n   * Em sua inicializaÃ§Ã£o serÃ¡ verificado a existÃªncia do endpoint `{end-point}/processes`.\n   * Caso o endpoint seja vÃ¡lido, serÃ¡ utilizado um componente para selecionar o processo e filtrÃ¡-los.\n   * Caso nÃ£o seja vÃ¡lido, serÃ¡ utilizado um campo de entrada de texto para informar o endpoint.\n   *\n   * Para realizar o filtro de busca do processo, serÃ¡ enviado o conteÃºdo a ser filtrado atravÃ©s da propriedade *search*.\n   * Os processos devem retornar uma lista de objetos que seguem a definiÃ§Ã£o de dados abaixo:\n   *\n   * ```\n   * GET {end-point}/processes?search=ac04\n   * ...\n   * { \"processID\": \"string\", \"description\": \"string\" }\n   * ```\n   *\n   * Para retornar parÃ¢metros dos processos, serÃ¡ realizado um `GET` como exemplificado abaixo.\n   * Os parÃ¢metros devem retornar uma lista de objetos que seguem a interface [PoDynamicFormField](/documentation/po-dynamic-form).\n   *\n   * ```\n   * GET {end-point}/processes/:id/parameters\n   * ...\n   * { items: [{ \"property\": \"server\" }, { \"property\": \"program\" }] }\n   * ```\n   *\n   * #### Salvar e Atualizar\n   *\n   * Para salvar o recurso, serÃ¡ feito uma requisiÃ§Ã£o de criaÃ§Ã£o no mesmo endpoint, passando os valores\n   * preenchidos pelo usuÃ¡rio via *payload*. Abaixo uma requisiÃ§Ã£o `POST` disparada,\n   * onde as propriedades do *Job Scheduler* foram preenchidas:\n   *\n   * ```\n   *  POST /api/po-samples/v1/jobschedulers HTTP/1.1\n   *  Host: localhost:4000\n   *  Connection: keep-alive\n   *  Accept: application/json, text/plain\n   *  ...\n   * ```\n   *\n   * *Request payload*:\n   *\n   * ```\n   * { \"firstExecution\": \"2018-12-07T00:00:01-00:00\", \"recurrent\": true, \"daily\": { \"hour\": 10, \"minute\": 12 }, \"processID\": \"ac0405\" }\n   * ```\n   *\n   * Caso queira que o template carregue um recurso jÃ¡ existente, deve ser incluÃ­do um parÃ¢metro na rota chamado `id`.\n   *\n   * Exemplo de configuraÃ§Ã£o de rota:\n   *\n   * ```\n   *  RouterModule.forRoot([\n   *    ...\n   *    { path: 'edit/:id', component: ExampleJobSchedulerComponent },\n   *    ...\n   *  ],\n   * ```\n   *\n   * Baseado nisso, na inicializaÃ§Ã£o do template serÃ¡ disparado uma requisiÃ§Ã£o para buscar o recurso que serÃ¡ editado.\n   *\n   * ```\n   * GET {end-point}/{id}\n   * ```\n   *\n   * Ao salvar o recurso serÃ¡ disparado um `PUT` com os dados preenchidos. Abaixo uma requisiÃ§Ã£o `PUT` disparada,\n   * onde a propriedade *recurrent* e *daily* foram preenchidas/atualizadas e o `id` da url Ã© 1:\n   *\n   * ```\n   *  PUT /api/po-samples/v1/jobschedulers/1 HTTP/1.1\n   *  Host: localhost:4000\n   *  Connection: keep-alive\n   *  Accept: application/json, text/plain\n   *  ...\n   * ```\n   *\n   * *Request payload*:\n   *\n   * ```\n   * { \"firstExecution\": \"2018-12-07T00:00:01-00:00\", \"recurrent\": false, \"daily\": { \"hour\": 11, \"minute\": 30 }, \"processID\": \"ac0405\" }\n   * ```\n   */\n  @Input('p-service-api') serviceApi: string;\n\n  /** TÃ­tulo da pÃ¡gina. */\n  @Input('p-title') title: string;\n\n  model: PoJobSchedulerInternal = new PoPageJobSchedulerInternal();\n\n  constructor(protected poPageJobSchedulerService: PoPageJobSchedulerService) {}\n\n  protected loadData(id: string | number) {\n    if (!id) {\n      this.model = new PoPageJobSchedulerInternal();\n      return;\n    }\n\n    this.poPageJobSchedulerService.getResource(id).toPromise().then((response: PoJobSchedulerInternal) => {\n      this.model = response;\n    }).catch(() => {\n      this.model = new PoPageJobSchedulerInternal();\n    });\n\n  }\n\n  protected markAsDirtyInvalidControls(controls: { [key: string]: AbstractControl } ) {\n    for (const key in controls) {\n      if (controls.hasOwnProperty(key)) {\n        const control = controls[key];\n\n        if (control.invalid) {\n          control.markAsDirty();\n        }\n      }\n    }\n  }\n\n}\n","export const poPageJobSchedulerLiteralsDefault = {\n  en: {\n    at: 'at',\n    back: 'Back',\n    next: 'Next',\n    periodicity: 'Periodicity',\n    execution: 'Execution',\n    process: 'Process',\n    enterProcess: 'Enter a process',\n    recurrent: 'Recurrent',\n    single: 'Single',\n    daily: 'Daily',\n    weekly: 'Weekly',\n    monthly: 'Monthly',\n    scheduling: 'Scheduling',\n    parameterization: 'Parameterization',\n    conclude: 'Conclude',\n    firstExecution: 'First Execution',\n    hour: 'Hour',\n    day: 'Day',\n    weekDays: 'Week days',\n    sunday: 'Sunday',\n    monday: 'Monday',\n    tuesday: 'Tuesday',\n    wednesday: 'Wednesday',\n    thursday: 'Thursday',\n    friday: 'Friday',\n    saturday: 'Saturday',\n    parameters: 'Parameters',\n    yes: 'Yes',\n    no: 'No',\n    notReported: 'Not reported',\n    periodicityData: 'Periodicity data',\n    confirmation: 'Confirmation',\n    confirmSaveMessage: 'Are you sure you want to complete this schedule?',\n    confirmUpdateMessage: 'Are you sure you want to update this schedule?',\n    saveNotificationSuccessUpdate: 'Successfully updated scheduling',\n    saveNotificationSuccessSave: 'Successfully saved scheduling',\n    parametersNotFound: 'Parameters not found.'\n  },\n  es: {\n    at: 'a las',\n    back: 'Volver',\n    next: 'Avanzar',\n    periodicity: 'Periodicidad',\n    execution: 'EjecuciÃ³n',\n    process: 'Proceso',\n    enterProcess: 'Informe un proceso',\n    recurrent: 'Recurrente',\n    single: 'Ãnica',\n    daily: 'Diaria',\n    weekly: 'Semanal',\n    monthly: 'Mensual',\n    scheduling: 'ProgramaciÃ³n',\n    parameterization: 'ParametrizaciÃ³n',\n    conclude: 'Completar',\n    firstExecution: 'Primera ejecuciÃ³n',\n    hour: 'Horario',\n    day: 'DÃ­a',\n    weekDays: 'Dias de la semana',\n    sunday: 'Domingo',\n    monday: 'Lunes',\n    tuesday: 'Martes',\n    wednesday: 'MiÃ©rcoles',\n    thursday: 'Jueves',\n    friday: 'Viernes',\n    saturday: 'SÃ¡bado',\n    parameters: 'ParÃ¡metros',\n    yes: 'SÃ­',\n    no: 'No',\n    notReported: 'No informado',\n    periodicityData: 'Dados da periodicidade',\n    confirmation: 'ConfirmaciÃ³n',\n    confirmSaveMessage: 'Â¿EstÃ¡ seguro de que desea completar esta programaciÃ³n de proceso?',\n    confirmUpdateMessage: 'Â¿EstÃ¡ seguro de que desea cambiar esta programaciÃ³n de proceso?',\n    saveNotificationSuccessUpdate: 'ProgramaciÃ³n de proceso actualizada con Ã©xito.',\n    saveNotificationSuccessSave: 'ProgramaciÃ³n de proceso salvo con Ã©xito.',\n    parametersNotFound: 'No se encontraron parÃ¡metros.'\n  },\n  pt: {\n    at: 'Ã s',\n    back: 'Voltar',\n    next: 'AvanÃ§ar',\n    periodicity: 'Periodicidade',\n    execution: 'ExecuÃ§Ã£o',\n    process: 'Processo',\n    enterProcess: 'Informe um processo',\n    recurrent: 'Recorrente',\n    single: 'Ãnica',\n    daily: 'DiÃ¡ria',\n    weekly: 'Semanal',\n    monthly: 'Mensal',\n    scheduling: 'Agendamento',\n    parameterization: 'ParametrizaÃ§Ã£o',\n    conclude: 'Concluir',\n    firstExecution: 'Primeira execuÃ§Ã£o',\n    hour: 'HorÃ¡rio',\n    day: 'Dia',\n    weekDays: 'Dias de semana',\n    sunday: 'Domingo',\n    monday: 'Segunda-feira',\n    tuesday: 'TerÃ§a-feira',\n    wednesday: 'Quarta-feira',\n    thursday: 'Quinta-feira',\n    friday: 'Sexta-feira',\n    saturday: 'SÃ¡bado',\n    parameters: 'ParÃ¢metros',\n    yes: 'Sim',\n    no: 'NÃ£o',\n    notReported: 'NÃ£o informado',\n    periodicityData: 'Dados da periodicidade',\n    confirmation: 'ConfirmaÃ§Ã£o',\n    confirmSaveMessage: 'Tem certeza que deseja concluir este agendamento de processo?',\n    confirmUpdateMessage: 'Tem certeza que deseja alterar este agendamento de processo?',\n    saveNotificationSuccessUpdate: 'Agendamento de processo atualizado com sucesso.',\n    saveNotificationSuccessSave: 'Agendamento de processo salvo com sucesso.',\n    parametersNotFound: 'ParÃ¢metros nÃ£o foram encontrados.'\n  }\n};\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { addZero, convertDateToISOExtended } from '../../utils/util';\nimport { PoDynamicFormField } from '@portinari/portinari-ui';\n\nimport { PoJobScheduler } from './interfaces/po-job-scheduler.interface';\nimport { PoJobSchedulerInternal } from './interfaces/po-job-scheduler-internal.interface';\n\n@Injectable()\nexport class PoPageJobSchedulerService {\n\n  private endpoint = '/';\n\n  readonly headers: HttpHeaders = new HttpHeaders({\n    'X-PORTINARI-SCREEN-LOCK': 'true'\n  });\n\n  constructor(private http: HttpClient) { }\n\n  configServiceApi(config: { endpoint?: string } = {}) {\n    this.endpoint = config.endpoint;\n  }\n\n  // Cria um recurso\n  createResource(resource): Observable<any> {\n    const jobScheduler = this.convertToJobScheduler(resource);\n\n    return this.http.post(`${this.endpoint}`, jobScheduler, { headers: this.headers });\n  }\n\n  getHeadProcesses() {\n    const headers = { 'X-Portinari-No-Error': 'true' };\n\n    return this.http.head(`${this.endpoint}/processes`, { headers });\n  }\n\n  // Busca parametros pelo processo id\n  getParametersByProcess(processId: string | number): Observable<any> {\n    return this.http.get(`${this.endpoint}/processes/${processId}/parameters`, { headers: this.headers })\n    .pipe(map((resource: { items: Array<PoDynamicFormField> }) => resource.items));\n  }\n\n  // Busca um Ãºnico recurso\n  getProcess(id: string | number): Observable<any> {\n    return this.http.get(`${this.endpoint}/processes/${id}`, { headers: this.headers });\n  }\n\n  // Busca uma lista de processos\n  getProcesses(params: {} = {}): Observable<any> {\n    return this.http.get(`${this.endpoint}/processes`, { params });\n  }\n\n  // Busca um Ãºnico recurso\n  getResource(id: string | number): Observable<any> {\n    return this.http.get(`${this.endpoint}/${id}`, { headers: this.headers })\n      .pipe(map(resource => this.convertToJobSchedulerInternal(resource)));\n  }\n\n  // Atualiza um recurso\n  updateResource(id, resource): Observable<any> {\n    const jobScheduler = this.convertToJobScheduler(resource);\n\n    return this.http.put(`${this.endpoint}/${id}`, jobScheduler, { headers: this.headers });\n  }\n\n  private convertToJobScheduler(jobSchedulerInternal): PoJobScheduler {\n    const jobScheduler = { ...jobSchedulerInternal };\n\n    if (jobSchedulerInternal.periodicity) {\n\n      if (jobSchedulerInternal.periodicity === 'single') {\n        jobScheduler.recurrent = false;\n      } else {\n        Object.assign(jobScheduler, this.convertToPeriodicity(jobSchedulerInternal));\n      }\n\n    }\n\n    if (jobSchedulerInternal.firstExecutionHour) {\n      jobScheduler.firstExecution =\n        this.replaceHourFirstExecution(jobSchedulerInternal.firstExecution, jobSchedulerInternal.firstExecutionHour);\n    }\n\n    if (!Object.keys(this.returnValidExecutionParameter(jobScheduler.executionParameter)).length) {\n      delete jobScheduler.executionParameter;\n    }\n\n    this.removeInvalidKeys(jobScheduler);\n\n    return jobScheduler;\n  }\n\n  private convertToJobSchedulerInternal(jobScheduler = <any> {}): PoJobSchedulerInternal {\n    const jobSchedulerInternal = { ...jobScheduler };\n\n    if (jobScheduler.firstExecution) {\n      jobSchedulerInternal.firstExecutionHour = this.getHourFirstExecution(jobScheduler.firstExecution);\n    }\n\n    Object.assign(jobSchedulerInternal, this.convertToPeriodicityInternal(jobScheduler));\n\n    this.removeInvalidKeys(jobSchedulerInternal, ['weekly', 'monthly', 'daily']);\n\n    return jobSchedulerInternal;\n  }\n\n  private convertToPeriodicity(value: { periodicity: string , dayOfMonth?: string, daysOfWeek?: number, hour?: string }) {\n    const newValue = {};\n    const valuePeriodicity = value.periodicity;\n\n    if (valuePeriodicity) {\n      newValue[valuePeriodicity] = {};\n\n      if (valuePeriodicity === 'monthly') {\n        newValue[valuePeriodicity].day = value.dayOfMonth ? parseInt(value.dayOfMonth, 10) : 0;\n      } else if (valuePeriodicity === 'weekly') {\n        newValue[valuePeriodicity].daysOfWeek = value.daysOfWeek;\n      }\n\n      newValue[valuePeriodicity].hour = value.hour ? parseInt(value.hour.split(':')[0], 10) : 0;\n      newValue[valuePeriodicity].minute = value.hour ? parseInt(value.hour.split(':')[1], 10) : 0;\n    }\n\n    return newValue;\n  }\n\n  private convertToPeriodicityInternal(value = <any> {}) {\n    if (value.monthly) {\n      return {\n        periodicity: 'monthly',\n        hour: `${addZero(value.monthly.hour)}:${addZero(value.monthly.minute)}`,\n        dayOfMonth: value.monthly.day\n      };\n    } else if (value.daily) {\n      return {\n        periodicity: 'daily',\n        hour: `${addZero(value.daily.hour)}:${addZero(value.daily.minute)}`\n      };\n    } else if (value.weekly) {\n      return {\n        periodicity: 'weekly',\n        hour: `${addZero(value.weekly.hour)}:${addZero(value.weekly.minute)}`,\n        daysOfWeek: [...value.weekly.daysOfWeek]\n      };\n    } else {\n      return {\n        periodicity: 'single'\n      };\n    }\n  }\n\n  private getCurrentHour(date: Date): string {\n    const hours = addZero(date.getHours());\n    const minutes = addZero(date.getMinutes());\n\n    return `${hours}:${minutes}`;\n  }\n\n  private getHourFirstExecution(firstExecutionDate: string): string {\n    return this.getCurrentHour(new Date(firstExecutionDate));\n  }\n\n  private removeInvalidKeys(value: object, keys?: Array<string>) {\n    const invalidKeys = keys || ['periodicity', 'hour', 'minute', 'day', 'daysOfWeek', 'dayOfMonth', 'firstExecutionHour'];\n\n    Object.keys(value).forEach(key => {\n      if (invalidKeys.includes(key)) {\n        delete value[key];\n      }\n    });\n  }\n\n  private replaceHourFirstExecution(date: string, time: string): string {\n    const firstExecutionDate = new Date(date);\n\n    const timeSplited = time.split(':');\n\n    const hours = parseInt(timeSplited[0], 10);\n    const minutes = parseInt(timeSplited[1], 10);\n\n    firstExecutionDate.setHours(hours, minutes);\n\n    return convertDateToISOExtended(firstExecutionDate);\n  }\n\n  private returnValidExecutionParameter(parameter: object) {\n    const newParameter = { ...parameter };\n\n    for (const key in newParameter) {\n      if (newParameter.hasOwnProperty(key) && newParameter[key] === undefined) {\n        delete newParameter[key];\n      }\n    }\n\n    return newParameter;\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { PoLookupFilter } from '@portinari/portinari-ui';\n\nimport { PoPageJobSchedulerService } from './po-page-job-scheduler.service';\n\n@Injectable()\nexport class PoPageJobSchedulerLookupService implements PoLookupFilter {\n\n  constructor(private poPageJobSchedulerService: PoPageJobSchedulerService) { }\n\n  getFilteredData(search: string, page: number, pageSize: number): Observable<any> {\n    const params = { page, pageSize, search };\n\n    return this.poPageJobSchedulerService.getProcesses(params);\n  }\n\n  getObjectByValue(processId: string): Observable<any> {\n    return this.poPageJobSchedulerService.getProcess(processId);\n  }\n\n}\n","import { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { Observable } from 'rxjs';\n\nimport {\n  PoDialogService,\n  PoDynamicFormField,\n  PoNotificationService,\n  PoPageAction,\n  PoStepperItem,\n  PoStepperStatus\n} from '@portinari/portinari-ui';\n\nimport * as util from './../../utils/util';\n\nimport { PoJobSchedulerInternal } from './interfaces/po-job-scheduler-internal.interface';\nimport { PoPageJobSchedulerInternal } from './po-page-job-scheduler-internal';\nimport { PoPageJobSchedulerBaseComponent } from './po-page-job-scheduler-base.component';\nimport { poPageJobSchedulerLiteralsDefault } from './po-page-job-scheduler-literals';\nimport { PoPageJobSchedulerLookupService } from './po-page-job-scheduler-lookup.service';\nimport { PoPageJobSchedulerService } from './po-page-job-scheduler.service';\n\n/**\n * @docsExtends PoPageJobSchedulerBaseComponent\n *\n * @example\n *\n * <example name=\"po-page-job-scheduler-basic\" title=\"Portinari Page Job Scheduler Basic\">\n *  <file name=\"sample-po-page-job-scheduler-basic/sample-po-page-job-scheduler-basic.component.html\"> </file>\n *  <file name=\"sample-po-page-job-scheduler-basic/sample-po-page-job-scheduler-basic.component.ts\"> </file>\n * </example>\n *\n */\n@Component({\n  selector: 'po-page-job-scheduler',\n  templateUrl: './po-page-job-scheduler.component.html',\n  encapsulation: ViewEncapsulation.None,\n  styles: [`\n    po-container .po-container {\n      overflow-y: unset;\n    }\n  `]\n})\nexport class PoPageJobSchedulerComponent extends PoPageJobSchedulerBaseComponent implements OnInit {\n\n  isEdit = false;\n  literals = {\n    ...poPageJobSchedulerLiteralsDefault[util.poLocaleDefault],\n    ...poPageJobSchedulerLiteralsDefault[util.browserLanguage()]\n  };\n  parameters: Array<PoDynamicFormField> = [];\n  saveOperation: Observable<any>;\n  step: number = 1;\n\n  private backPageAction: PoPageAction = {\n    label: this.literals.back,\n    action: this.nextStepOperation.bind(this, 'back'),\n    disabled: this.isDisabledBack.bind(this)\n  };\n\n  private concludePageActions: Array<PoPageAction> = [\n    {\n      label: this.literals.conclude,\n      action: this.confirmJobScheduler.bind(this)\n    },\n    { ...this.backPageAction }\n  ];\n\n  private nextPageActions: Array<PoPageAction> = [\n    {\n      label: this.literals.next,\n      action: this.nextStepOperation.bind(this, 'next'),\n      disabled: this.isDisabledAdvance.bind(this)\n    },\n    { ...this.backPageAction }\n  ];\n\n  jobSchedulerActions: Array<PoPageAction> = [\n    ...this.nextPageActions\n  ];\n\n  readonly steps: Array<PoStepperItem> = [\n    { label: this.literals.scheduling },\n    { label: this.literals.parameterization },\n    { label: this.literals.conclude }\n  ];\n\n  @ViewChild('schedulerExecution', { static: true }) schedulerExecution: { form: NgForm };\n  @ViewChild('schedulerParameters', { static: true }) schedulerParameters: { form: NgForm };\n\n  constructor(\n    public poPageDynamicLookupService: PoPageJobSchedulerLookupService,\n    private activatedRoute: ActivatedRoute,\n    private poDialogService: PoDialogService,\n    private poNotification: PoNotificationService,\n    private router: Router,\n    poPageJobSchedulerService: PoPageJobSchedulerService) {\n      super(poPageJobSchedulerService);\n    }\n\n  get stepperOrientation(): 'horizontal' | 'vertical' {\n    return window.innerWidth > 481 && window.innerWidth < 960 ? 'horizontal' : 'vertical';\n  }\n\n  ngOnInit() {\n    const paramId = this.activatedRoute.snapshot.params['id'];\n\n    this.isEdit = !!paramId;\n\n    this.poPageJobSchedulerService.configServiceApi({ endpoint: this.serviceApi });\n\n    this.loadData(paramId);\n  }\n\n  changePageActionsBySteps(currentStep: number, nextStep: number) {\n    const stepsLength = this.steps.length;\n\n    if (nextStep === stepsLength) {\n    this.jobSchedulerActions = [ ...this.concludePageActions ];\n\n    } else if (currentStep === stepsLength && nextStep < currentStep) {\n\n    this.jobSchedulerActions = [ ...this.nextPageActions ];\n    }\n  }\n\n  nextStep(stepNumber: number) {\n\n    if (stepNumber > 1 && this.schedulerExecution.form.invalid) {\n      this.markAsDirtyInvalidControls(this.schedulerExecution.form.controls);\n      return;\n    }\n\n    if (stepNumber > 2 && (this.schedulerParameters && this.schedulerParameters.form && this.schedulerParameters.form.invalid)) {\n      this.markAsDirtyInvalidControls(this.schedulerParameters.form.controls);\n      return;\n    }\n\n    this.changePageActionsBySteps(this.step, stepNumber);\n\n    const steps = this.steps[this.step - 1];\n    this.step = stepNumber;\n\n    if (steps) {\n      steps.status = PoStepperStatus.Done;\n    }\n  }\n\n  onChangeProcess(process: { processId: string, existAPI: boolean }) {\n    if (process.existAPI && process.processId) {\n      this.getParametersByProcess(process.processId);\n\n      if (!this.isEdit) {\n        this.model.executionParameter = {};\n      }\n\n      return;\n    }\n\n  }\n\n  private confirmJobScheduler() {\n    const paramId = this.activatedRoute.snapshot.params['id'];\n\n    const confirmMessage = paramId ? this.literals.confirmUpdateMessage : this.literals.confirmSaveMessage;\n\n    this.poDialogService.confirm({\n      title: this.literals.confirmation,\n      message: confirmMessage,\n      confirm: () => {\n        const model = Object.assign({}, this.model);\n\n        this.save(model, paramId);\n      }\n    });\n\n  }\n\n  private async emitSuccessMessage(msgSuccess: any, saveOperation: Observable<any>) {\n    await saveOperation.toPromise();\n    this.poNotification.success(msgSuccess);\n    this.resetJobSchedulerForm();\n  }\n\n  private getParametersByProcess(process: any) {\n\n    this.poPageJobSchedulerService.getParametersByProcess(process).subscribe(parameters => {\n      this.parameters = parameters;\n    });\n\n  }\n\n  private isDisabledAdvance(): boolean {\n    return this.schedulerExecution ? this.schedulerExecution.form.invalid : false;\n  }\n\n  private isDisabledBack(): boolean {\n    return this.step === 1;\n  }\n\n  private nextStepOperation(operation?: 'back' | 'next') {\n    const stepNumber = operation === 'back' ? this.step - 1 : this.step + 1;\n\n    this.nextStep(stepNumber);\n  }\n\n  private resetJobSchedulerForm() {\n    this.schedulerExecution.form.reset();\n\n    // radiogroup nÃ£o estava atribuindo novo valor, fica vermelho sem o timetout.\n    setTimeout(() => {\n      this.model = new PoPageJobSchedulerInternal();\n\n      this.step = 1;\n      this.steps.forEach(step => {\n        step.status = PoStepperStatus.Default;\n      });\n\n      this.jobSchedulerActions = [...this.nextPageActions];\n    });\n\n  }\n\n  private save(model: PoJobSchedulerInternal, paramId) {\n    const saveOperation = paramId\n      ? this.poPageJobSchedulerService.updateResource(paramId, model)\n      : this.poPageJobSchedulerService.createResource(model);\n\n    const msgSuccess = paramId ? this.literals.saveNotificationSuccessUpdate : this.literals.saveNotificationSuccessSave;\n\n    this.emitSuccessMessage(msgSuccess, saveOperation);\n  }\n\n}\n","import { AfterViewInit, Component, EventEmitter, Input, OnInit, Output, TemplateRef, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { PoCheckboxGroupOption, PoRadioGroupOption } from '@portinari/portinari-ui';\n\nimport { isTypeof } from '../../../utils/util';\n\nimport { PoPageJobSchedulerLookupService } from '../po-page-job-scheduler-lookup.service';\nimport { PoPageJobSchedulerService } from '../po-page-job-scheduler.service';\n\n@Component({\n  selector: 'po-page-job-scheduler-execution',\n  templateUrl: 'po-page-job-scheduler-execution.component.html'\n})\nexport class PoPageJobSchedulerExecutionComponent implements OnInit, AfterViewInit {\n\n  private _value: any = {};\n\n  dayPattern = '^(3[0-1]|[0-2][0-9]|[1-9]|0[1-9])$';\n  existProcessAPI = true;\n  minDateFirstExecution = new Date();\n  periodicityOptions: Array<PoRadioGroupOption> = [];\n  periodicityTemplates: { daily: TemplateRef<any>, weekly: TemplateRef<any>, monthly: TemplateRef<any> } ;\n  timePattern = '^(2[0-3]|[01][0-9]):?([0-5][0-9])$';\n  weekDays: Array<PoCheckboxGroupOption> = [];\n\n  @ViewChild('formExecution', { static: true }) form: NgForm;\n\n  // templates\n  @ViewChild('dailyTemplate', { static: true }) dailyTemplate;\n  @ViewChild('monthlyTemplate', { static: true }) monthlyTemplate;\n  @ViewChild('weeklyTemplate', { static: true }) weeklyTempalte;\n\n  @Input('p-is-edit') isEdit: boolean = false;\n\n  @Input('p-literals') literals = <any> {};\n\n  @Input('p-value') set value(value: any) {\n    this._value = value && isTypeof(value, 'object') ? value : {};\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  @Output('p-change-process') changeProcess: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(\n    private poPageJobSchedulerService: PoPageJobSchedulerService,\n    public poPageJobSchedulerLookup: PoPageJobSchedulerLookupService) { }\n\n  get startDateFirstExecution() {\n    return this.isEdit ? undefined : this.minDateFirstExecution;\n  }\n\n  ngAfterViewInit() {\n\n    setTimeout(() => {\n      this.subscribeProcessIdValueChanges();\n    });\n\n  }\n\n  ngOnInit() {\n    this.periodicityTemplates = {\n      daily: this.dailyTemplate,\n      monthly: this.monthlyTemplate,\n      weekly: this.weeklyTempalte\n    };\n\n    this.checkExistsProcessesAPI();\n\n    this.periodicityOptions = this.getPeriodicityOptions();\n    this.weekDays = this.getWeekDays();\n  }\n\n  private checkExistsProcessesAPI() {\n    this.poPageJobSchedulerService.getHeadProcesses().subscribe(undefined, error => {\n      this.existProcessAPI = false;\n    });\n  }\n\n  private getPeriodicityOptions() {\n    return [\n      { label: this.literals.single, value: 'single' },\n      { label: this.literals.daily, value: 'daily' },\n      { label: this.literals.weekly, value: 'weekly' },\n      { label: this.literals.monthly, value: 'monthly' }\n    ];\n  }\n\n  private getWeekDays() {\n    return [\n      { label: this.literals.sunday, value: 'Sunday' },\n      { label: this.literals.monday, value: 'Monday' },\n      { label: this.literals.tuesday, value: 'Tuesday' },\n      { label: this.literals.wednesday, value: 'Wednesday' },\n      { label: this.literals.thursday, value: 'Thursday' },\n      { label: this.literals.friday, value: 'Friday' },\n      { label: this.literals.saturday, value: 'Saturday' }\n    ];\n  }\n\n  private subscribeProcessIdValueChanges() {\n    this.form.controls['processID'].valueChanges.subscribe(processId => {\n      this.changeProcess.emit({ processId, existAPI: this.existProcessAPI });\n    });\n  }\n\n}\n","import { AfterViewInit, Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { PoDynamicFormField } from '@portinari/portinari-ui';\n\n@Component({\n  selector: 'po-page-job-scheduler-parameters',\n  templateUrl: 'po-page-job-scheduler-parameters.component.html'\n})\nexport class PoPageJobSchedulerParametersComponent implements AfterViewInit {\n\n  @ViewChild('parametersForm', { static: true }) form: NgForm;\n\n  @Input('p-literals') literals = <any> {};\n\n  @Input('p-parameters') parameters: Array<PoDynamicFormField> = [];\n\n  @Input('p-value') value;\n\n  @Output('p-valueChange') valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n  ngAfterViewInit() {\n    if (this.form) {\n      setTimeout(() => {\n\n        this.form.valueChanges.subscribe(value => {\n          this.valueChange.emit(value);\n        });\n\n      });\n    }\n  }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { DatePipe } from '@angular/common';\n\nimport { PoDynamicViewField, PoInfoOrientation } from '@portinari/portinari-ui';\n\nimport { PoJobSchedulerInternal } from '../interfaces/po-job-scheduler-internal.interface';\n\n@Component({\n  selector: 'po-page-job-scheduler-summary',\n  templateUrl: 'po-page-job-scheduler-summary.component.html'\n})\nexport class PoPageJobSchedulerSummaryComponent implements OnInit {\n\n  executionValue = '';\n  firstExecutionValue = '';\n  infoOrientation = PoInfoOrientation.Horizontal;\n  periodicityValue = '';\n  recurrentValue = '';\n\n  @Input('p-literals') literals = <any> {};\n\n  @Input('p-parameters') parameters: Array<PoDynamicViewField> = [];\n\n  @Input('p-value') value: PoJobSchedulerInternal = <any> {};\n\n  constructor(private datePipe: DatePipe) {}\n\n  ngOnInit() {\n    const { periodicity, hour, dayOfMonth, daysOfWeek, recurrent, firstExecution, firstExecutionHour } = this.value;\n\n    this.periodicityValue = this.getPeriodicityLabel(periodicity);\n    this.executionValue = this.getExecutionValue(periodicity, hour, daysOfWeek, dayOfMonth);\n    this.firstExecutionValue = this.getFirstExecutionLabel(firstExecution, firstExecutionHour);\n    this.recurrentValue = this.getRecurrentValue(recurrent);\n  }\n\n  private getExecutionValue(periodicity: string, hour?: string, daysOfWeek?: Array<string>, dayOfMonth?: number) {\n    switch (periodicity) {\n      case 'daily':\n        return this.getHourLabel(hour);\n      case 'monthly':\n        return this.getMonthlyLabelExecution(dayOfMonth, hour);\n      case 'weekly':\n        return this.getWeeklyLabelExecution(daysOfWeek, hour);\n      default:\n        return this.literals.notReported;\n    }\n  }\n\n  private getFirstExecutionLabel(firstExecution: Date, firstExecutionHour?: string): string {\n    if (firstExecution) {\n      const date = this.datePipe.transform(firstExecution, 'dd/MM/yyyy', '-0200');\n\n      return `${date} ${this.getHourLabel(firstExecutionHour)}`;\n    } else {\n      return this.literals.notReported;\n    }\n  }\n\n  private getHourLabel(hour: string) {\n    return `${this.literals.at} ${hour || '00:00'}h`;\n  }\n\n  private getMonthlyLabelExecution(dayOfMonth: number, hour: string) {\n    const hourLabel = this.getHourLabel(hour);\n\n    return `${this.literals.day} ${dayOfMonth} ${hourLabel}`;\n  }\n\n  private getPeriodicityLabel(periodicity) {\n    switch (periodicity) {\n      case 'daily':\n        return this.literals.daily;\n      case 'monthly':\n        return this.literals.monthly;\n      case 'weekly':\n        return this.literals.weekly;\n      default:\n        return this.literals.single;\n    }\n  }\n\n  private getRecurrentValue(recurrent: boolean): string {\n    return recurrent ? this.literals.yes : this.literals.no;\n  }\n\n  private getSorterWeekDays() {\n    return {\n      'sunday': 0,\n      'monday': 1,\n      'tuesday': 2,\n      'wednesday': 3,\n      'thursday': 4,\n      'friday': 5,\n      'saturday': 6\n    };\n  }\n\n  private getTranslateWeekDay(day: string): string {\n    const days = {\n      Sunday: this.literals.sunday,\n      Monday: this.literals.monday,\n      Tuesday: this.literals.tuesday,\n      Wednesday: this.literals.wednesday,\n      Thursday: this.literals.thursday,\n      Friday: this.literals.friday,\n      Saturday: this.literals.saturday,\n    };\n\n    return days[day] || '';\n  }\n\n  private getWeekDaysLabel(days: Array<string> = []): string {\n    const weekDaysSorted = this.sortWeekDays(days);\n\n    return weekDaysSorted.map(day => this.getTranslateWeekDay(day)).join(', ');\n  }\n\n  private getWeeklyLabelExecution(daysOfWeek: Array<string>, hour: string) {\n    if (daysOfWeek && Array.isArray(daysOfWeek)) {\n      return `${this.getWeekDaysLabel(daysOfWeek)} ${this.getHourLabel(hour)}`;\n    } else {\n      return this.literals.notReported;\n    }\n  }\n\n  private sortWeekDays(days: Array<string> = []) {\n    const sorterWeekDays = this.getSorterWeekDays();\n\n    return days.sort((a: string, b: string) => {\n      const currDay = a.toLowerCase();\n      const nextDay = b.toLowerCase();\n\n      return sorterWeekDays[currDay] > sorterWeekDays[nextDay] ? 1 : -1;\n    });\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport {\n  PoButtonModule,\n  PoContainerModule,\n  PoDialogModule,\n  PoDividerModule,\n  PoDynamicModule,\n  PoFieldModule,\n  PoInfoModule,\n  PoPageModule,\n  PoStepperModule,\n  PoWidgetModule\n} from '@portinari/portinari-ui';\n\nimport { PoPageJobSchedulerComponent } from './po-page-job-scheduler.component';\nimport { PoPageJobSchedulerExecutionComponent } from './po-page-job-scheduler-execution/po-page-job-scheduler-execution.component';\nimport { PoPageJobSchedulerLookupService } from './po-page-job-scheduler-lookup.service';\nimport { PoPageJobSchedulerParametersComponent } from './po-page-job-scheduler-parameters/po-page-job-scheduler-parameters.component';\nimport { PoPageJobSchedulerService } from './po-page-job-scheduler.service';\nimport { PoPageJobSchedulerSummaryComponent } from './po-page-job-scheduler-summary/po-page-job-scheduler-summary.component';\n\n@NgModule({\n  declarations: [\n    PoPageJobSchedulerComponent,\n    PoPageJobSchedulerExecutionComponent,\n    PoPageJobSchedulerParametersComponent,\n    PoPageJobSchedulerSummaryComponent\n  ],\n  exports: [\n    PoPageJobSchedulerComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    PoButtonModule,\n    PoContainerModule,\n    PoDialogModule,\n    PoDividerModule,\n    PoDynamicModule,\n    PoFieldModule,\n    PoInfoModule,\n    PoPageModule,\n    PoStepperModule,\n    PoWidgetModule\n  ],\n  providers: [\n    PoPageJobSchedulerService,\n    PoPageJobSchedulerLookupService\n  ]\n})\nexport class PoPageJobSchedulerModule { }\n","/**\n * @usedBy PoPageLoginComponent\n *\n * @description\n *\n * *Enum* para definiÃ§Ã£o do tipo de autenticaÃ§Ã£o.\n */\nexport enum PoPageLoginAuthenticationType {\n\n  /** AutenticaÃ§Ã£o Basic */\n  Basic = 'Basic',\n\n  /** AutenticaÃ§Ã£o Bearer */\n  Bearer = 'Bearer',\n\n}\n","import { Subscription } from 'rxjs';\nimport { EventEmitter, Input, OnDestroy, Output } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { convertToBoolean, convertToInt, getShortBrowserLanguage, isExternalLink, isTypeof, poLocaleDefault } from './../../utils/util';\n\nimport { PoPageLogin } from './interfaces/po-page-login.interface';\nimport { PoPageLoginAuthenticationType } from './enums/po-page-login-authentication-type.enum';\nimport { PoPageLoginCustomField } from './interfaces/po-page-login-custom-field.interface';\nimport { PoPageLoginLiterals } from './interfaces/po-page-login-literals.interface';\nimport { PoPageLoginRecovery } from './interfaces/po-page-login-recovery.interface';\nimport { PoPageLoginService } from './po-page-login.service';\n\nconst poPageLoginContentMaxLength = 40;\n\nexport const poPageLoginLiteralsDefault = {\n  en: <PoPageLoginLiterals> {\n    title: 'Welcome',\n    loginErrorPattern: 'Invalid Login',\n    loginHint: `Your login user was given to you at your first day.\n    If you don't have this information contact support`,\n    loginPlaceholder: 'Insert your e-mail',\n    passwordErrorPattern: 'Invalid Password',\n    passwordPlaceholder: 'Insert your password',\n    customFieldErrorPattern: 'Invalid value',\n    customFieldPlaceholder: 'Please enter a value',\n    rememberUser: 'Automatic login',\n    rememberUserHint: 'You can disable this option in system configuration',\n    submitLabel: 'Enter',\n    submittedLabel: 'Loading...',\n    forgotPassword: 'Forgot your Password?',\n    highlightInfo: '',\n    registerUrl: 'New register',\n    titlePopover: 'Oops!',\n    forgotYourPassword: 'Forgot your password?',\n    ifYouTryHarder: 'If you try ',\n    attempts: '{0} more time(s) ',\n    yourUserWillBeBlocked: 'without success your user will be blocked and you will be left 24 hours without being able to access :(',\n    createANewPasswordNow: 'Better create a new password now! You will be able to log into the system right away.',\n    iForgotMyPassword: 'I forgot my password'\n  },\n  es: <PoPageLoginLiterals> {\n    title: 'Bienvenido',\n    loginErrorPattern: 'Login invÃ¡lido',\n    loginHint: `Su usuario ha sido entregado para usted en su primer dÃ­a.\n    Si no tiene esta informaciÃ³n, pÃ³ngase en contacto con el soporte tÃ©cnico`,\n    loginPlaceholder: 'Inserte su e-mail',\n    passwordErrorPattern: 'ContraseÃ±a invÃ¡lida',\n    passwordPlaceholder: 'Inserte su contraseÃ±a',\n    customFieldErrorPattern: 'Valor no vÃ¡lido.',\n    customFieldPlaceholder: 'Por favor introduzca un valor',\n    rememberUser: 'Inicio de sesiÃ³n automÃ¡ticamente',\n    rememberUserHint: 'Puede deshabilitar esta opciÃ³n en el menÃº del sistema.',\n    submitLabel: 'Entrar',\n    submittedLabel: 'Cargando...',\n    forgotPassword: 'Olvidaste tu contraseÃ±a?',\n    highlightInfo: '',\n    registerUrl: 'Nuevo registro',\n    titlePopover: 'Opa!',\n    forgotYourPassword: 'Olvidaste tu contraseÃ±a?',\n    ifYouTryHarder: 'Si intenta mÃ¡s ',\n    attempts: '{0} vez/veces ',\n    yourUserWillBeBlocked: 'sin Ã©xito su usuario sera bloqueado y usted vÃ¡s permanecer 24 horas sin poder acceder a :(',\n    createANewPasswordNow: 'Â¡Mejor crear una nueva contraseÃ±a ahora! Usted podrÃ¡ entrar en el sistema inmediatamente despuÃ©s.',\n    iForgotMyPassword: 'Olvide mi contraseÃ±a'\n  },\n  pt: <PoPageLoginLiterals> {\n    title: 'Bem-vindo',\n    loginErrorPattern: 'Login invÃ¡lido',\n    loginHint: `Seu usuÃ¡rio foi entregue a vocÃª no seu primeiro dia.\n    Caso nÃ£o tenha mais essa informaÃ§Ã£o contacte o suporte`,\n    loginPlaceholder: 'Insira seu e-mail',\n    passwordErrorPattern: 'Senha invÃ¡lida',\n    passwordPlaceholder: 'Insira sua senha',\n    customFieldErrorPattern: 'Valor invÃ¡lido.',\n    customFieldPlaceholder: 'Por favor insira um valor',\n    rememberUser: 'Logar automaticamente',\n    rememberUserHint: 'VocÃª pode desabilitar essa opÃ§Ã£o no menu do sistema',\n    submitLabel: 'Entrar',\n    submittedLabel: 'Carregando...',\n    forgotPassword: 'Esqueceu sua senha?',\n    highlightInfo: '',\n    registerUrl: 'Novo registro',\n    titlePopover: 'Opa!',\n    forgotYourPassword: 'Esqueceu sua senha?',\n    ifYouTryHarder: 'Se tentar mais ',\n    attempts: '{0} vez(es) ',\n    yourUserWillBeBlocked: 'sem sucesso seu usuÃ¡rio serÃ¡ bloqueado e vocÃª fica 24 horas sem poder acessar :(',\n    createANewPasswordNow: 'Melhor criar uma senha nova agora! VocÃª vai poder entrar no sistema logo em seguida.',\n    iForgotMyPassword: 'Esqueci minha senha'\n  },\n  ru: <PoPageLoginLiterals> {\n    title: 'ÐÐ¾Ð±ÑÐ¾ Ð¿Ð¾Ð¶Ð°Ð»Ð¾Ð²Ð°ÑÑ!',\n    loginErrorPattern: 'ÐÐµÐ²ÐµÑÐ½ÑÐ¹ Ð»Ð¾Ð³Ð¸Ð½',\n    loginHint: `ÐÐ°Ñ Ð»Ð¾Ð³Ð¸Ð½ Ð±ÑÐ» Ð¿ÑÐµÐ´Ð¾ÑÑÐ°Ð²Ð»ÐµÐ½ Ð²Ð°Ð¼ Ð² Ð¿ÐµÑÐ²ÑÐ¹ Ð´ÐµÐ½Ñ.\n    ÐÑÐ»Ð¸ Ñ Ð²Ð°Ñ Ð½ÐµÑ ÑÑÐ¾Ð¹ Ð¸Ð½ÑÐ¾ÑÐ¼Ð°ÑÐ¸Ð¸, Ð¾Ð±ÑÐ°ÑÐ¸ÑÐµÑÑ Ð² ÑÐ»ÑÐ¶Ð±Ñ Ð¿Ð¾Ð´Ð´ÐµÑÐ¶ÐºÐ¸`,\n    loginPlaceholder: 'ÐÑÑÐ°Ð²ÑÑÐµ ÑÐ²Ð¾Ð¹ Ð°Ð´ÑÐµÑ ÑÐ»ÐµÐºÑÑÐ¾Ð½Ð½Ð¾Ð¹ Ð¿Ð¾ÑÑÑ',\n    passwordErrorPattern: 'ÐÐµÐ²ÐµÑÐ½ÑÐ¹ Ð¿Ð°ÑÐ¾Ð»Ñ',\n    passwordPlaceholder: 'ÐÐ²ÐµÐ´Ð¸ÑÐµ ÑÐ²Ð¾Ð¹ Ð¿Ð°ÑÐ¾Ð»Ñ',\n    customFieldErrorPattern: 'ÐÐµÐ²ÐµÑÐ½Ð¾Ðµ Ð·Ð½Ð°ÑÐµÐ½Ð¸Ðµ.',\n    customFieldPlaceholder: 'ÐÐ¾Ð¶Ð°Ð»ÑÐ¹ÑÑÐ°, Ð²Ð²ÐµÐ´Ð¸ÑÐµ Ð·Ð½Ð°ÑÐµÐ½Ð¸Ðµ',\n    rememberUser: 'ÐÐ²ÑÐ¾Ð¼Ð°ÑÐ¸ÑÐµÑÐºÐ¸Ð¹ Ð²ÑÐ¾Ð´',\n    rememberUserHint: 'ÐÑ Ð¼Ð¾Ð¶ÐµÑÐµ Ð¾ÑÐºÐ»ÑÑÐ¸ÑÑ ÑÑÑ Ð¾Ð¿ÑÐ¸Ñ Ð² ÐºÐ¾Ð½ÑÐ¸Ð³ÑÑÐ°ÑÐ¸Ð¸ ÑÐ¸ÑÑÐµÐ¼Ñ',\n    submitLabel: 'ÐÐ¾Ð¹ÑÐ¸',\n    submittedLabel: '3Ð°Ð³ÑÑÐ·ÐºÐ°...',\n    forgotPassword: 'ÐÐ°Ð±ÑÐ»Ð¸ Ð¿Ð°ÑÐ¾Ð»Ñ?',\n    highlightInfo: '',\n    registerUrl: 'ÐÐ¾Ð²ÑÐ¹ ÑÐµÐ³Ð¸ÑÑÑ',\n    titlePopover: 'ÐÐ¹!',\n    forgotYourPassword: 'ÐÐ°Ð±ÑÐ»Ð¸ Ð¿Ð°ÑÐ¾Ð»Ñ?',\n    ifYouTryHarder: 'ÐÑÐ»Ð¸ Ð²Ñ Ð±ÐµÐ·ÑÑÐ¿ÐµÑÐ½Ð¾ Ð¿Ð¾Ð¿ÑÑÐ°ÐµÑÐµÑÑ Ð²Ð¾Ð¹ÑÐ¸ ÐµÑÐµ ',\n    attempts: '{0} ÑÐ°Ð·(Ð°) ',\n    yourUserWillBeBlocked: 'ÐÐ°Ñ Ð¿Ð¾Ð»ÑÐ·Ð¾Ð²Ð°ÑÐµÐ»Ñ Ð±ÑÐ´ÐµÑ Ð·Ð°Ð±Ð»Ð¾ÐºÐ¸ÑÐ¾Ð²Ð°Ð½, Ð¸ ÐÑ Ð¾ÑÑÐ°Ð½ÐµÑÐµÑÑ Ð½Ð° 24 ÑÐ°ÑÐ° Ð±ÐµÐ· Ð²Ð¾Ð·Ð¼Ð¾Ð¶Ð½Ð¾ÑÑÐ¸ Ð´Ð¾ÑÑÑÐ¿Ð° :(',\n    createANewPasswordNow: 'ÐÑÑÑÐµ ÑÐ¾Ð·Ð´Ð°Ð¹ÑÐµ Ð½Ð¾Ð²ÑÐ¹ Ð¿Ð°ÑÐ¾Ð»Ñ ÑÐµÐ¹ÑÐ°Ñ!Â ÐÑ ÑÐ¼Ð¾Ð¶ÐµÑÐµ ÑÑÐ°Ð·Ñ Ð²Ð¾Ð¹ÑÐ¸ Ð² ÑÐ¸ÑÑÐµÐ¼Ñ.',\n    iForgotMyPassword: 'Ð¯ Ð·Ð°Ð±ÑÐ» ÑÐ²Ð¾Ð¹ Ð¿Ð°ÑÐ¾Ð»Ñ'\n  }\n};\n\nexport const poPageLoginLiteralIn = {\n  en: 'in',\n  es: 'en',\n  pt: 'em',\n  ru: 'Ð²'\n};\n\nexport const poPageLoginLiteralTo = {\n  en: 'to',\n  es: 'al',\n  pt: 'ao',\n  ru: 'Ðº'\n};\n\n/**\n * @description\n *\n * O componente `po-page-login` Ã© utilizado como template para tela de login.\n * Com ele Ã© possÃ­vel definirmos valores para usuÃ¡rio, senha e definir aÃ§Ãµes para recuperaÃ§Ã£o de senha e gravaÃ§Ã£o de dados do usuÃ¡rio.\n * TambÃ©m Ã© possÃ­vel inserir uma imagem em conjunto com um texto de destaque.\n *\n *\n * A propriedade `p-authentication-url` automatiza a rotina do componente e simplifica o processo para autenticaÃ§Ã£o do usuÃ¡rio, bastando\n * definir uma url para requisiÃ§Ã£o da autenticaÃ§Ã£o. A flexibilidade e praticidade podem chegar a um nÃ­vel em que o desenvolvimento\n * da aplicaÃ§Ã£o no *client side* Ã© desprovida de qualquer cÃ³digo-fonte relacionado Ã  rotina de login de usuÃ¡rio.\n * Seu detalhamento para uso pode ser visto logo abaixo em *propriedades*.\n * Caso julgue necessÃ¡rio, pode-se tambÃ©m definir manualmente a rotina do componente.\n *\n *\n * Para que as imagens sejam exibidas corretamente, Ã© necessÃ¡rio incluir o caminho delas ao projeto. Para isso, edite\n * o *assets* no arquivo **angular.json** da aplicaÃ§Ã£o na seguinte ordem:\n * ```\n *   \"assets\": [\n *     \"src/assets\",\n *     \"src/favicon.ico\",\n *     {\n *       \"glob\": \"**\\/*\",\n *       \"input\": \"node_modules/@portinari/style/images\",\n *       \"output\": \"assets/images\"\n *     }\n *   ]\n * ```\n */\nexport abstract class PoPageLoginBaseComponent implements OnDestroy {\n\n  allLoginErrors: Array<string> = [];\n  allPasswordErrors: Array<string> = [];\n  customFieldObject: PoPageLoginCustomField;\n  customFieldType: string;\n  loginSubscription: Subscription;\n  password: string;\n  rememberUser: boolean = false;\n  selectedLanguage: string;\n  showExceededAttemptsWarning = false;\n\n  private _authenticationType: PoPageLoginAuthenticationType = PoPageLoginAuthenticationType.Basic;\n  private _authenticationUrl: string;\n  private _blockedUrl: string;\n  private _contactEmail: string;\n  private _customField: string | PoPageLoginCustomField;\n  private _environment?: string;\n  private _exceededAttemptsWarning?: number;\n  private _hideRememberUser: boolean = false;\n  private _literals: PoPageLoginLiterals;\n  private _loading?: boolean = false;\n  private _login: string;\n  private _loginErrors: Array<string> = [];\n  private _passwordErrors: Array<string> = [];\n  private _productName: string;\n  private _recovery: string | PoPageLoginRecovery | Function;\n  private _registerUrl: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Ao informar um valor do tipo `string`, o mesmo serÃ¡ aplicado como a chave do campo customizado e utilizarÃ¡\n   * os valores padrÃµes contidos na propriedade `literals` como `customFieldErrorPattern` e `customFieldPlaceholder`.\n   *\n   * Existe a possibilidade de informar um objeto que segue a definiÃ§Ã£o da interface `PoPageLoginCustomField`, onde\n   * atravÃ©s dos parÃ¢metros enviados pode gerar um `po-input`, `po-combo` especificamente para serviÃ§os\n   * ou `po-select` para valores fixos.\n   *\n   * Abaixo seguem os exemplos de cada tipo de campo.\n   *\n   * `po-input`:\n   *\n   * ```\n   * {\n   *   property: 'domain',\n   *   value: 'jv01',\n   *   placeholder: 'Enter your domain',\n   *   pattern: '[a-z]',\n   *   errorPattern: 'Invalid value'\n   * }\n   * ```\n   *\n   * `po-combo`:\n   *\n   * ```\n   * {\n   *   property: 'domain',\n   *   value: 'jv01',\n   *   placeholder: 'Enter your domain',\n   *   url: 'https://portinari.io/sample/api/comboOption/domains',\n   *   fieldValue: 'nickname'\n   * }\n   * ```\n   *\n   * `po-select`:\n   *\n   * ```\n   * {\n   *   property: 'domain',\n   *   value: 'jv01',\n   *   placeholder: 'Enter your domain',\n   *   options: [{label: 'Domain 1', value: '1'}, {label: 'Domain 2', value: '2'}]\n   * }\n   * ```\n   *\n   * Caso o customField possua options, url e fieldValue preenchidos, serÃ¡ priorizado o po-select\n   * utilizando o options.\n   *\n   */\n  @Input('p-custom-field') set customField(value: string | PoPageLoginCustomField) {\n    if (value) {\n\n      if (isTypeof(value, 'string')) {\n        this.customFieldType = 'input';\n        this._customField = value;\n        this.customFieldObject = this.getDefaultCustomFieldObject(value);\n        return;\n      }\n\n      if (isTypeof(value, 'object') && !Array.isArray(value) && value['property']) {\n        this._customField = value;\n        this.customFieldObject = <PoPageLoginCustomField> value;\n\n        if (!this.customFieldObject.options && !this.customFieldObject.url) {\n          this.customFieldType = 'input';\n        } else {\n          this.customFieldType = this.customFieldObject.options ? 'select' : 'combo';\n        }\n\n        return;\n      }\n\n    }\n\n    this._customField = undefined;\n    this.customFieldObject = undefined;\n  }\n\n  get customField(): string | PoPageLoginCustomField {\n    return this._customField;\n  }\n\n  /**\n   * O `p-background` permite inserir uma imagem de destaque ao lado direito do formulÃ¡rio de login, caso a propriedade\n   * nÃ£o seja preenchida o formulÃ¡rio serÃ¡ centralizado no espaÃ§o disponÃ­vel.\n   *\n   * A fonte da imagem pode ser de um caminho local ou uma url de um servidor externo.\n   *\n   * AlÃ©m da imagem, Ã© possÃ­vel adicionar um texto informativo por cima da imagem da imagem de destaque, para isso informe\n   * um valor para a literal `highlightInfo`.\n   *\n   * > Veja mais sobre as literais na propriedade `p-literals`.\n   *\n   * Exemplos de valores vÃ¡lidos:\n   * - **local**: `./assets/images/login-background.png`\n   * - **url externa**: `https://portinari.io/assets/images/login-background.png`\n   *\n   * > Essa propriedade Ã© ignorada para aplicaÃ§Ãµes mobile.\n   */\n  @Input('p-background') background?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Personaliza o e-mail que Ã© exibido na mensagem de dica de login padrÃ£o para contato de suporte.\n   */\n  @Input('p-contact-email') set contactEmail(value: string) {\n    this._contactEmail = value;\n  }\n  get contactEmail() {\n    return this._contactEmail;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Valor customizado que sucede o tÃ­tulo de boas-vindas.\n   *\n   * > Esta propriedade Ã© sobreposta se `p-literals` contiver uma definiÃ§Ã£o customizada para a literal `title`.\n   *\n   * > Veja mais sobre as literais na propriedade `p-literals`.\n   *\n   */\n  @Input('p-product-name') set productName(value: string) {\n    this._productName = value;\n  }\n  get productName() {\n    return this._productName;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   * Adiciona uma `tag` abaixo do tÃ­tulo que especifica o ambiente que o usuÃ¡rio estÃ¡ fazendo o login.\n   *\n   * > Essa propriedade limita o texto em 40 caracteres.\n   */\n  @Input('p-environment') set environment(environment: string) {\n    if (environment && environment.length > poPageLoginContentMaxLength) {\n      this._environment = environment.substring(0, poPageLoginContentMaxLength);\n    } else {\n      this._environment = environment;\n    }\n  }\n  get environment() {\n    return this._environment;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   * Exibe um aviso de bloqueio de acordo com a quantidade restante de tentativas.\n   * O aviso serÃ¡ exibido somente se a quantidade for maior que zero.\n   *\n   * > Caso tenha algum valor atribuÃ­do para o atributo `p-authentication-url` e o retorno da requisiÃ§Ã£o estiver atribuindo valor\n   * para o `p-exceeded-attempts-warning`, o valor considerado serÃ¡ o do retorno da requisiÃ§Ã£o.\n   *\n   * @default `0`\n   */\n  @Input('p-exceeded-attempts-warning') set exceededAttemptsWarning(value: number) {\n    this._exceededAttemptsWarning = convertToInt(value);\n    this.showExceededAttemptsWarning = this.exceededAttemptsWarning > 0;\n  }\n\n  get exceededAttemptsWarning(): number {\n    return this._exceededAttemptsWarning;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Esconde a funÃ§Ã£o \"Lembrar usuÃ¡rio\" do formulÃ¡rio de login.\n   *\n   * Quando essa propriedade Ã© setada com `true` a propriedade `rememberUser` enviada no evento `p-login-submit` serÃ¡ sempre\n   * `false`.\n   *\n   * > Veja a propriedade `p-literals` para customizar a literal `rememberUser`.\n   *\n   * @default `false`\n   */\n  @Input('p-hide-remember-user') set hideRememberUser(value: boolean) {\n    this._hideRememberUser = <any>value === '' ? true : convertToBoolean(value);\n\n    if (this._hideRememberUser) {\n      this.rememberUser = false;\n    }\n  }\n  get hideRememberUser(): boolean {\n    return this._hideRememberUser;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Objeto com as literais usadas no `po-page-login`.\n   *\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponÃ­veis:\n   *\n   * ```\n   *  const customLiterals: PoPageLoginLiterals = {\n   *    attempts: '{0} vez(es) ',\n   *    createANewPasswordNow: 'Melhor criar uma senha nova agora! VocÃª vai poder entrar no sistema logo em seguida.',\n   *    forgotPassword: 'Esqueceu sua senha?',\n   *    forgotYourPassword: 'Esqueceu sua senha?',\n   *    highlightInfo: '',\n   *    iForgotMyPassword: 'Esqueci minha senha',\n   *    ifYouTryHarder: 'Se tentar mais ',\n   *    title: 'Seja bem-vindo',\n   *    loginErrorPattern: 'Login obrigatÃ³rio',\n   *    loginHint: 'Caso nÃ£o possua usuÃ¡rio entre em contato com o suporte',\n   *    loginLabel: 'Insira seu usuÃ¡rio',\n   *    loginPlaceholder: 'Insira seu usuÃ¡rio de acesso',\n   *    passwordErrorPattern: 'Senha obrigatÃ³ria',\n   *    passwordLabel: 'Insira sua senha',\n   *    passwordPlaceholder: 'Insira sua senha de acesso',\n   *    customFieldErrorPattern: 'Campo customizado invÃ¡lido',\n   *    customFieldPlaceholder: 'Por favor insira um valor',\n   *    registerUrl: 'Novo registro',\n   *    rememberUser: 'Lembrar usuÃ¡rio',\n   *    rememberUserHint: 'Esta opÃ§Ã£o pode ser desabilitada nas configuraÃ§Ãµes do sistema',\n   *    submitLabel: 'Acessar sistema',\n   *    submittedLabel: 'Carregando...',\n   *    titlePopover: 'Opa!',\n   *    yourUserWillBeBlocked: 'sem sucesso seu usuÃ¡rio serÃ¡ bloqueado e vocÃª fica 24 horas sem poder acessar :('\n   *  };\n   * ```\n   *\n   * Ou passando apenas as literais que deseja customizar:\n   *\n   * ```\n   *  const customLiterals: PoPageLoginLiterals = {\n   *    loginPlaceholder: 'Insira seu usuÃ¡rio de acesso',\n   *    passwordPlaceholder: 'Insira sua senha de acesso',\n   *    submitLabel: 'Acessar sistema'\n   *  };\n   * ```\n   *\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\n   *\n   * ```\n   * <po-page-login\n   *   [p-literals]=\"customLiterals\">\n   * </po-page-login>\n   * ```\n   *\n   *  > O objeto padrÃ£o de literais serÃ¡ traduzido de acordo com o idioma do browser (pt, en, es).\n   *  > Ã tambÃ©m possÃ­vel alternar o objeto padrÃ£o de literais atravÃ©s do seletor de idiomas localizado na parte inferior do template,\n   * nesse caso, hÃ¡ tambÃ©m a opÃ§Ã£o do idioma russo.\n   */\n  @Input('p-literals') set literals(value: PoPageLoginLiterals) {\n    this._literals = value;\n  }\n\n  get literals() {\n    return this._literals;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Habilita um estado de carregamento ao botÃ£o de *login*.\n   *\n   * > Ã necessÃ¡rio atribuir `true` Ã  esta propriedade na funÃ§Ã£o definida em `p-login-submit`.\n   *\n   * @default `false`\n   */\n  @Input('p-loading') set loading(value: boolean) {\n    this._loading = convertToBoolean(value);\n  }\n\n  get loading(): boolean {\n    return this._loading;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Valor do modelo do campo de login.\n   */\n  @Input('p-login') set login(value: string) {\n    this._login = value;\n\n    if (!this.authenticationUrl) {\n      this.loginChange.emit(this._login);\n    }\n  }\n\n  get login(): string {\n    return this._login;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caminho para a logomarca localizada na parte superior.\n   *\n   * > Caso seja indefinida o espaÃ§o se mantÃ©m preservado porÃ©m vazio.\n   */\n  @Input('p-logo') logo?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * ExpressÃ£o regular para validar o campo de login, caso a expressÃ£o nÃ£o seja atentida, a literal `loginErrorPattern`\n   * serÃ¡ exibida.\n   *\n   * Exemplos de valores vÃ¡lidos:\n   * - email: `[expressao-regular-email]`\n   * - cpf: `[expressao-regular-cpf]`\n   *\n   * > Veja a propriedade `p-literals` para customizar a literal `loginErrorPattern`.\n   */\n  @Input('p-login-pattern') loginPattern?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Atributo que recebe uma lista de erros e exibe abaixo do campo de login.\n   */\n  @Input('p-login-errors') set loginErrors(value: Array<string>) {\n    this._loginErrors = value || [];\n    this.setLoginErrors(this._loginErrors);\n  }\n  get loginErrors() {\n    return this._loginErrors;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Atributo que recebe uma lista de erros e exibe abaixo do campo de password.\n   */\n  @Input('p-password-errors') set passwordErrors(value: Array<string>) {\n    this._passwordErrors = value || [];\n    this.setPasswordErrors(this._passwordErrors);\n  }\n  get passwordErrors() {\n    return this._passwordErrors;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * ExpressÃ£o regular para validar o campo de password, caso a expressÃ£o nÃ£o seja atentida, a literal `passwordErrorPattern`\n   * serÃ¡ exibida.\n   *\n   * Exemplos de valores vÃ¡lidos:\n   * - Apenas nÃºmeros: `\\d?`\n   * - Letras mÃ­nusculas: `\\z?`\n   *\n   * > Veja a propriedade `p-literals` para customizar a literal `passwordErrorPattern`.\n   */\n  @Input('p-password-pattern') passwordPattern?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Exibe um link abaixo do formulÃ¡rio de login para que os usuÃ¡rios da aplicaÃ§Ã£o faÃ§am a recuperaÃ§Ã£o dos dados de autenticaÃ§Ã£o.\n   *\n   * A propriedade aceita os seguintes tipos:\n   *\n   * - **String**: informe uma url externa ou uma rota vÃ¡lida;\n   * - **Function**: pode-se customizar a aÃ§Ã£o. Para esta possilidade basta atribuir:\n   * ```\n   * <po-page-login>\n   *   [recovery]=\"this.myRecovery.bind(this)\">\n   * </po-page-login>\n   * ```\n   *\n   * - **PoPageLoginRecovery**: cria-se vÃ­nculo automÃ¡tico com o template **po-modal-password-recovery**.\n   *   O objeto deve conter a **url** para requisiÃ§Ã£o dos recursos e pode-se definir o **tipo** de modal para recuperaÃ§Ã£o de senha,\n   *   **email** para contato e **mÃ¡scara** do campo de telefone.\n   */\n  @Input('p-recovery') set recovery(value: string | Function | PoPageLoginRecovery) {\n    this._recovery = value;\n  }\n\n  get recovery() {\n    return this._recovery;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caso a aplicaÃ§Ã£o tenha um link para novos cadastros, informe uma url externa ou uma rota vÃ¡lida, dessa\n   * forma serÃ¡ exibido um link abaixo do formulÃ¡rio de login para os usuÃ¡rios da aplicaÃ§Ã£o.\n   *\n   * Exemplos de valores vÃ¡lidos:\n   * - **local**: `/home`\n   * - **url externa**: `https://portinari.io`\n   *\n   * > Veja a propriedade `p-literals` para customizar a literal `registerUrl`.\n   */\n  @Input('p-register-url') set registerUrl(value: string) {\n    this._registerUrl = isTypeof(value, 'string') ? value : undefined;\n  }\n\n  get registerUrl(): string {\n    return this._registerUrl;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caminho para a logomarca localizada no rodapÃ©.\n   */\n  @Input('p-secondary-logo') secondaryLogo?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Atributo que recebe o tipo de esquema da autenticaÃ§Ã£o, sendo suportados apenas os valores `Basic` e `Bearer`.\n   *\n   * > Caso o tipo definido seja `Basic`, o componente farÃ¡ uma requisiÃ§Ã£o `POST` contendo:\n   *\n   * ```\n   * headers {\n   *  Authorization: Basic base64(login:password)\n   * }\n   *\n   * body {\n   *  rememberUser: rememberUser\n   * }\n   * ```\n   *\n   * > Caso o tipo definido seja `Bearer`, o componente farÃ¡ uma requisiÃ§Ã£o `POST` contendo:\n   *\n   * ```\n   * body {\n   *  login: login,\n   *  password: base64(password),\n   *  rememberUser: rememberUser\n   * }\n   * ```\n   *\n   * @default `PoPageLoginAuthenticationType.Basic`\n   */\n  @Input('p-authentication-type') set authenticationType(value: PoPageLoginAuthenticationType) {\n    this._authenticationType =\n    (<any>Object).values(PoPageLoginAuthenticationType).includes(value) ? value : PoPageLoginAuthenticationType.Basic;\n  }\n\n  get authenticationType(): PoPageLoginAuthenticationType {\n    return this._authenticationType;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Endpoint usado pelo template para requisiÃ§Ã£o do recurso. Quando preenchido, o mÃ©todo `p-login-submit` serÃ¡ ignorado e o\n   * componente adquirirÃ¡ automatizaÃ§Ã£o para o processo de autenticaÃ§Ã£o.\n   *\n   * ### Processos\n   * Ao digitar um valor vÃ¡lido no campo de login/password e pressionar **Enter**, o componente farÃ¡ uma requisiÃ§Ã£o `POST`\n   * na url especificada nesta propriedade passando o objeto contendo o valor definido pelo usuÃ¡rio:\n   *\n   * ```\n   * headers {\n   *  Authorization: Basic base64(login:password)\n   * }\n   *\n   * body {\n   *  rememberUser: rememberUser\n   * }\n   * ```\n   *\n   * Em caso de **sucesso**, o objeto de retorno Ã© armazenado no `sessionStorage` e o usuÃ¡rio Ã© redirecionado para a pÃ¡gina inicial da\n   * aplicaÃ§Ã£o `/`.\n   *\n   * ```\n   * 200:\n   *  {\n   *    user: user\n   *  }\n   * ```\n   *\n   * Em caso de **erro** na autenticaÃ§Ã£o, espera-se o seguinte retorno:\n   *\n   * ```\n   * 400/401\n   *  {\n   *    code: 400/401,\n   *    message: message,\n   *    detailedMessage: detailedMessage,\n   *    helpUrl?: helpUrl\n   *  }\n   * ```\n   *\n   * > Pode-se atribuir uma quantidade mÃ¡xima de tentativas restantes (maxAttemptsRemaining) para o atributo `p-exceeded-attempts-warning`,\n   * assim como os avisos relacionados aos campos login e password (loginWarnings, passwordWarnings) para os atributos `p-login-errors` e\n   * `p-password-errors` conforme retorno abaixo:\n   *\n   * ```\n   * 400\n   *  {\n   *    code: 400/401,\n   *    message: message,\n   *    detailedMessage: detailedMessage,\n   *    helpUrl?: helpUrl,\n   *    maxAttemptsRemaining?: maxAttemptsRemaining,\n   *    loginWarnings?: [loginWarnings],\n   *    passwordWarnings?: [passwordWarnings]\n   *  }\n   * ```\n   *\n   * > Caso o valor atribuÃ­do para `p-exceeded-attempts-warning` seja igual a 0(zero), poderÃ¡ ser passado um valor para o\n   * atributo `p-blocked-url` e o usuÃ¡rio serÃ¡ redirecionado para uma tela de bloqueio.\n   *\n   * *Processo finalizado.*\n   *\n   * _______________\n   *\n   * #### Praticidade\n   * As informaÃ§Ãµes do serviÃ§o de autenticaÃ§Ã£o tambÃ©m podem ser transmitidas diretamente pelas configuraÃ§Ã£os de rota e, desta maneira,\n   * dispensa-se qualquer menÃ§Ã£o e/ou importaÃ§Ã£o do componente `po-page-login` no restante da aplicaÃ§Ã£o. O exemplo abaixo exemplifica\n   * a forma dinÃ¢mica com a qual o template de tela de login pode ser gerado ao navegar para rota `/login`, e tambÃ©m como ele se comunica\n   * com o serviÃ§o para efetuaÃ§Ã£o do processo de autenticaÃ§Ã£o do usuÃ¡rio e solicitaÃ§Ã£o de nova senha.\n   * Basta definir nas configuraÃ§Ãµes de rota:\n   *\n   *\n   * ```\n   *   import { PoPageLoginComponent, PoPageLoginAthenticationType } from '@portinari/portinari-templates';\n   *\n   *   ...\n   *   const routes: Routes = [\n   *     {\n   *       path: 'login', component: PoPageLoginComponent, data: {\n   *         serviceApi: 'https://portinari.io/sample/api/users/authentication',\n   *         environment: 'development',\n   *         recovery: {\n   *           url: 'https://portinari.io/sample/api/users',\n   *           type: PoModalPasswordRecoveryType.All,\n   *           contactMail: 'dev.portinari@portinari.com',\n   *           phoneMask: '9-999-999-9999'\n   *         },\n   *         registerUrl: '/new-password',\n   *         authenticationType: PoPageLoginAthenticationType.Basic\n   *       }\n   *     }\n   *     ...\n   *   ];\n   *\n   *   @NgModule({\n   *     imports: [RouterModule.forRoot(routes)],\n   *     exports: [RouterModule]\n   *   })\n   *   export class AppRoutingModule { }\n   * ```\n   *\n   *\n   * O metadado `serviceApi` deve ser a **url** para requisiÃ§Ã£o dos recursos de autenticaÃ§Ã£o, o `environment` alimenta a propriedade\n   * `p-environment`, `recovery` Ã© a interface `PoPageLoginRecovery` responsÃ¡vel pelas especificaÃ§Ãµes contidas na modal de recuperaÃ§Ã£o de\n   * senha, `registerUrl` alimenta a propriedade `p-register-url` e `authenticationType` que define a propriedade `p-authentication-type`.\n   *\n   * > Ã essencial que siga a nomenclatura dos atributos exemplificados acima para sua efetiva funcionalidade.\n   *\n   */\n  @Input('p-authentication-url') set authenticationUrl(value: string) {\n    this._authenticationUrl = isTypeof(value, 'string') ? value : undefined;\n  }\n\n  get authenticationUrl(): string {\n    return this._authenticationUrl;\n  }\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Caso o valor atribuÃ­do para `p-exceeded-attempts-warning` seja igual a 0(zero) e a aplicaÃ§Ã£o tenha um link de bloqueio de usuÃ¡rio,\n   * informe uma url externa ou uma rota vÃ¡lida, dessa forma em caso de bloqueio o usuÃ¡rio serÃ¡ redirecionado.\n   */\n  @Input('p-blocked-url') set blockedUrl(value: string) {\n    this._blockedUrl = isTypeof(value, 'string') ? value : undefined;\n  }\n\n  get blockedUrl(): string {\n    return this._blockedUrl;\n  }\n\n  /**\n   * Evento disparado quando o usuÃ¡rio alterar o input do campo login.\n   *\n   * Esse evento receberÃ¡ como parÃ¢metro uma variÃ¡vel do tipo `string` com o texto informado no campo.\n   *\n   * > Esta propriedade serÃ¡ ignorada se for definido valor para a propriedade `p-authentication-url`.\n   */\n  @Output('p-login-change') loginChange?: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * Evento disparado ao submeter o formulÃ¡rio de login (apertando `Enter` dentro dos campos ou pressionando o botÃ£o de confirmaÃ§Ã£o).\n   *\n   * Esse evento receberÃ¡ como parÃ¢metro um objeto do tipo `PoPageLogin` com os dados informados no formulÃ¡rio.\n   *\n   * > Esta propriedade serÃ¡ ignorada se for definido valor para a propriedade `p-url-recovery`.\n   *\n   * > Para mais detalhes consulte a documentaÃ§Ã£o sobre a interface `PoPageLogin` mais abaixo.\n   */\n  @Output('p-login-submit') loginSubmit = new EventEmitter<PoPageLogin>();\n\n  /**\n   * Evento disparado quando o usuÃ¡rio alterar o input do campo password.\n   *\n   * Esse evento receberÃ¡ como parÃ¢metro uma variÃ¡vel do tipo `string` com o texto informado no campo.\n   *\n   * > Esta propriedade serÃ¡ ignorada se for definido valor para a propriedade `p-authentication-url`.\n   */\n  @Output('p-password-change') passwordChange?: EventEmitter<string> = new EventEmitter<string>();\n\n  get language(): string {\n    return this.selectedLanguage || getShortBrowserLanguage();\n  }\n\n  get pageLoginLiterals(): PoPageLoginLiterals {\n    const loginHintWithContactEmail = this.contactEmail ? this.concatenateLoginHintWithContactEmail(this.contactEmail) : undefined;\n\n    const titleWithProductName = this.productName ? this.concatenateTitleWithProductName(this.productName) : undefined;\n\n    return {\n      ...poPageLoginLiteralsDefault[poLocaleDefault],\n      ...poPageLoginLiteralsDefault[this.language],\n      ...loginHintWithContactEmail,\n      ...titleWithProductName,\n      ...this.literals\n    };\n  }\n\n  constructor(private loginService: PoPageLoginService, public router: Router) { }\n\n  ngOnDestroy() {\n    if (this.loginSubscription) {\n      this.loginSubscription.unsubscribe();\n    }\n  }\n\n  closePopover() {\n    this.showExceededAttemptsWarning = false;\n  }\n\n  onLoginSubmit(): void {\n    const loginForm: PoPageLogin = {\n      login: this.login,\n      password: this.password,\n      rememberUser: this.rememberUser\n    };\n\n    if (this.customField) {\n      loginForm[this.customFieldObject.property] = this.customFieldObject.value;\n    }\n\n    if (this.authenticationUrl) {\n      this.loginSubscription =\n      this.loginService.onLogin(this.authenticationUrl, this.authenticationType, loginForm)\n      .subscribe(data => {\n        this.setValuesToProperties();\n        sessionStorage.setItem('PO_USER_LOGIN', JSON.stringify(data));\n        this.openInternalLink('/');\n      },\n      error => {\n        if (error.error.code === '400' || error.error.code === '401') {\n          this.setValuesToProperties(error);\n          this.redirectBlockedUrl(this.exceededAttemptsWarning, this.blockedUrl);\n        }\n      });\n    } else {\n      this.loginSubmit.emit(loginForm);\n      this.showExceededAttemptsWarning = this.exceededAttemptsWarning > 0;\n    }\n  }\n\n  private getDefaultCustomFieldObject(property): PoPageLoginCustomField {\n    return { property };\n  }\n\n  private openExternalLink(url: string) {\n    window.open(url, '_blank');\n  }\n\n  private openInternalLink(url: string) {\n    this.router.navigate([url]);\n  }\n\n  private redirectBlockedUrl(attempts: number, blockedUrl: string) {\n    if (attempts === 0 && blockedUrl) {\n      this.showExceededAttemptsWarning = false;\n      isExternalLink(blockedUrl) ? this.openExternalLink(blockedUrl) : this.openInternalLink(blockedUrl);\n    }\n  }\n\n  private setValuesToProperties(result?) {\n    if (result) {\n      this.exceededAttemptsWarning = result.error.maxAttemptsRemaining;\n      this.loginErrors = result.error.loginWarnings;\n      this.passwordErrors = result.error.passwordWarnings;\n      this.blockedUrl = result.error.blockedUrl;\n    } else {\n      this.exceededAttemptsWarning = 0;\n      this.loginErrors = [];\n      this.passwordErrors = [];\n      this.blockedUrl = '';\n    }\n  }\n\n  protected abstract concatenateLoginHintWithContactEmail(contactEmail: string);\n\n  protected abstract concatenateTitleWithProductName(productName: string);\n\n  protected abstract setLoginErrors(value: Array<string>): void;\n\n  protected abstract setPasswordErrors(value: Array<string>): void;\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { PoPageLogin } from './interfaces/po-page-login.interface';\nimport { PoPageLoginAuthenticationType } from './enums/po-page-login-authentication-type.enum';\n\n@Injectable()\nexport class PoPageLoginService {\n\n  constructor(private http: HttpClient) { }\n\n  onLogin(url: string, type: PoPageLoginAuthenticationType, loginForm: PoPageLogin): Observable<Object> {\n\n    if (type === PoPageLoginAuthenticationType.Bearer) {\n      loginForm.password = btoa(loginForm.password);\n      return this.http.post(url, loginForm);\n    } else {\n      const user = `(${loginForm.login}:${loginForm.password})`;\n      const headers = new HttpHeaders({\n        'Authorization': `${type} ` + btoa(user)\n      });\n      delete loginForm.login;\n      delete loginForm.password;\n      return this.http.post(url, loginForm, { headers });\n    }\n\n  }\n\n}\n","import { AbstractControl, NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AfterViewChecked, ChangeDetectorRef, Component, ComponentRef, IterableDiffers, OnInit, ViewChild, ViewContainerRef\n} from '@angular/core';\n\nimport { isExternalLink } from '../../utils/util';\nimport { PoComponentInjectorService } from '@portinari/portinari-ui';\n\nimport { PoModalPasswordRecoveryComponent } from '../po-modal-password-recovery/po-modal-password-recovery.component';\nimport { PoModalPasswordRecoveryType } from '../po-modal-password-recovery/enums/po-modal-password-recovery-type.enum';\nimport { PoPageLoginBaseComponent, poPageLoginLiteralIn, poPageLoginLiteralTo, poPageLoginLiteralsDefault\n} from './po-page-login-base.component';\nimport { PoPageLoginRecovery } from './interfaces/po-page-login-recovery.interface';\nimport { PoPageLoginService } from './po-page-login.service';\n\n/**\n * @docsExtends PoPageLoginBaseComponent\n *\n * @example\n *\n * <example name=\"po-page-login-basic\" title=\"Portinari Page Login Basic\">\n *  <file name=\"sample-po-page-login-basic/sample-po-page-login-basic.component.html\"> </file>\n *  <file name=\"sample-po-page-login-basic/sample-po-page-login-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-login-labs\" title=\"Portinari Page Login Labs\">\n *  <file name=\"sample-po-page-login-labs/sample-po-page-login-labs.component.html\"> </file>\n *  <file name=\"sample-po-page-login-labs/sample-po-page-login-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-login-human-resources\" title=\"Portinari Page Login - Human Resources\">\n *  <file name=\"sample-po-page-login-human-resources/sample-po-page-login-human-resources.component.html\"> </file>\n *  <file name=\"sample-po-page-login-human-resources/sample-po-page-login-human-resources.component.ts\"> </file>\n *  <file name=\"sample-po-page-login-human-resources/sample-po-page-login-human-resources.module.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-login-automatic-service\" title=\"Portinari Page Login - Automatic Service\">\n *  <file name=\"sample-po-page-login-automatic-service/sample-po-page-login-automatic-service.component.html\"> </file>\n *  <file name=\"sample-po-page-login-automatic-service/sample-po-page-login-automatic-service.component.ts\"> </file>\n * </example>\n */\n\n@Component({\n  selector: 'po-page-login',\n  templateUrl: './po-page-login.component.html'\n})\n\nexport class PoPageLoginComponent extends PoPageLoginBaseComponent implements AfterViewChecked, OnInit {\n\n  private componentRef: ComponentRef<any> = null;\n  private differ: any;\n  private readonly customPasswordError = { custom : false };\n\n  @ViewChild('loginForm', { read: NgForm, static: true }) loginForm: NgForm;\n  @ViewChild('pageLogin', { read: ViewContainerRef, static: true }) pageLogin: ViewContainerRef;\n\n  constructor(\n    public changeDetector: ChangeDetectorRef,\n    private activatedRoute: ActivatedRoute,\n    private poComponentInjector: PoComponentInjectorService,\n    differs: IterableDiffers,\n    loginService: PoPageLoginService,\n    router: Router,\n    ) {\n    super(loginService, router);\n    this.differ = differs.find([]).create(null);\n  }\n\n  ngAfterViewChecked() {\n    if (this.differ) {\n      this.validateArrayChanges(this.differ, [\n        { array: this.loginErrors, callback: this.generateLoginError.bind(this) },\n        { array: this.passwordErrors, callback: this.generatePasswordError.bind(this) }\n      ]);\n    }\n  }\n\n  ngOnInit() {\n    this.checkingForRouteMetadata(this.activatedRoute.snapshot.data);\n  }\n\n  changeLoginModel() {\n    if (this.authenticationUrl) {\n      this.loginErrors = [];\n    } else {\n      this.setLoginErrors(this.loginErrors);\n      this.loginChange.emit(this.login);\n    }\n  }\n\n  changePasswordModel() {\n    if (this.authenticationUrl) {\n      this.passwordErrors = [];\n    } else {\n      this.setPasswordErrors(this.passwordErrors);\n      this.passwordChange.emit(this.password);\n    }\n  }\n\n  onSelectedLanguage(language: string) {\n    this.selectedLanguage = language;\n  }\n\n  openUrl(recovery: any): void {\n    switch (typeof recovery) {\n      case 'string': {\n        this.setUrlRedirect(recovery);\n        break;\n      }\n      case 'function': {\n        recovery();\n        break;\n      }\n      case 'object': {\n        this.createModalPasswordRecoveryComponent(recovery);\n        break;\n      }\n    }\n  }\n\n  private checkingForMetadataProperty(object, property) {\n    if (Object.prototype.hasOwnProperty.call(object, property)) {\n      return object[property];\n    }\n  }\n\n  private checkingForRouteMetadata(data) {\n    if (Object.keys(data).length !== 0) {\n      this.authenticationUrl = this.checkingForMetadataProperty(data, 'serviceApi') || this.authenticationUrl;\n      this.authenticationType = this.checkingForMetadataProperty(data, 'authenticationType') || this.authenticationType;\n      this.environment = this.checkingForMetadataProperty(data, 'environment') || this.environment;\n      this.recovery = this.checkingForMetadataProperty(data, 'recovery') || this.recovery;\n      this.registerUrl = this.checkingForMetadataProperty(data, 'registerUrl') || this.registerUrl;\n    }\n  }\n\n  private concatenate(defaultLiteral: string, prefixLiteral: string, value: string) {\n    return `${defaultLiteral} ${prefixLiteral} ${value}`;\n  }\n\n  private concatenateLiteral(value: string, literal: string, defaultLiteral: string, prepositionLiteral: string) {\n    return { [literal]: this.concatenate(defaultLiteral, prepositionLiteral, value) };\n  }\n\n  private createModalPasswordRecoveryComponent(poPageLoginRecovery: PoPageLoginRecovery) {\n    if (this.componentRef) {\n      this.poComponentInjector.destroyComponentInApplication(this.componentRef);\n    }\n\n    this.componentRef = this.poComponentInjector.createComponentInApplication(PoModalPasswordRecoveryComponent);\n    this.componentRef.instance.urlRecovery = poPageLoginRecovery.url;\n    this.componentRef.instance.contactEmail = poPageLoginRecovery.contactMail;\n    this.componentRef.instance.phoneMask = poPageLoginRecovery.phoneMask;\n    this.componentRef.instance.type = poPageLoginRecovery.type || PoModalPasswordRecoveryType.Email;\n    this.componentRef.changeDetectorRef.detectChanges();\n    setTimeout(() => {\n      this.componentRef.instance.open();\n    });\n  }\n\n  private generateLoginError() {\n    if (this.loginErrors && this.loginErrors.length) {\n      this.setLoginErrors(this.loginErrors);\n    } else {\n      const control = this.loginForm.form.controls['login'];\n      if (control) {\n        this.resetControl(control);\n      }\n    }\n  }\n\n  private generatePasswordError() {\n    if (this.passwordErrors && this.passwordErrors.length) {\n      this.setPasswordErrors(this.passwordErrors);\n    } else {\n      const control = this.loginForm.form.controls['password'];\n\n      if (control) {\n        this.resetControl(control);\n      }\n    }\n  }\n\n  private resetControl(control: AbstractControl) {\n    control.markAsPristine();\n    control.markAsUntouched();\n    control.updateValueAndValidity();\n  }\n\n  private setControlErrors(allErrors: string, control: AbstractControl, errors: Array<string>, patternError: string) {\n\n    if (control) {\n\n      this[allErrors] = control.hasError('pattern') ? [...errors, ...[patternError]] : [...errors];\n\n      if (errors && errors.length && (control.valid || control.pristine)) {\n        control.markAsTouched();\n        control.markAsDirty();\n        control.setErrors(this.customPasswordError);\n      }\n    }\n  }\n\n  private setUrlRedirect(url) {\n    isExternalLink(url) ?  window.open(url, '_blank') : this.router.navigate([url]);\n  }\n\n  private validateArrayChanges(differ: any, array: Array<{ array: Array<any>, callback: any }>) {\n\n    array.forEach(element => {\n      const changes = differ.diff(element.array);\n      if (changes) {\n        element.callback();\n        this.changeDetector.detectChanges();\n      }\n    });\n  }\n\n  protected concatenateLoginHintWithContactEmail(contactEmail: string) {\n    const defaultLoginHintLiteral = poPageLoginLiteralsDefault[this.language].loginHint;\n    const prepositionLiteral = poPageLoginLiteralIn[this.language];\n\n    return this.concatenateLiteral(contactEmail, 'loginHint', defaultLoginHintLiteral, prepositionLiteral);\n  }\n\n  protected concatenateTitleWithProductName(productName: string) {\n    const defaultTitleLiteral = poPageLoginLiteralsDefault[this.language].title;\n    const prepositionLiteral = poPageLoginLiteralTo[this.language];\n\n    return this.concatenateLiteral(productName, 'title', defaultTitleLiteral, prepositionLiteral);\n  }\n\n  protected setLoginErrors(errors: Array<string>) {\n    const control = this.loginForm.form.controls['login'];\n    this.setControlErrors('allLoginErrors', control, errors, this.pageLoginLiterals.loginErrorPattern);\n  }\n\n  protected setPasswordErrors(errors: Array<string>) {\n    const control = this.loginForm.form.controls['password'];\n    this.setControlErrors('allPasswordErrors', control, errors, this.pageLoginLiterals.passwordErrorPattern);\n  }\n\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { isExternalLink, isTypeof } from '../../../utils/util';\n\nimport { PoPageLoginLiterals } from '../interfaces/po-page-login-literals.interface';\nimport { PoPageLoginRecovery } from '../interfaces/po-page-login-recovery.interface';\n\n@Component({\n  selector: 'po-page-login-popover',\n  templateUrl: './po-page-login-popover.component.html'\n})\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente para definiÃ§Ã£o da mensagem de aviso de bloqueio do `po-page-login`.\n */\nexport class PoPageLoginPopoverComponent {\n\n  recoveryType: string;\n\n  private _recovery: string | Function | PoPageLoginRecovery;\n\n  @Input('p-literals') literals: PoPageLoginLiterals;\n\n  /** exibe o link de 'esqueci minha senha' e verifica se o valor Ã© um link interno ou externo */\n  @Input('p-recovery') set recovery(value: string | Function | PoPageLoginRecovery) {\n    this._recovery = value;\n\n    if (isTypeof(value, 'string')) {\n      this.recoveryType = isExternalLink(value) ? 'externalLink' : 'internalLink';\n    }\n  }\n\n  get recovery() {\n    return this._recovery;\n  }\n\n  /** define se a mensagem deverÃ¡ ser exibida caso seja maior que 0(zero) */\n  @Input('p-remaining-attempts') remainingAttempts: number;\n\n  /** se 'p-recovery' for do tipo Function ou PoPageLoginRecovery, emite para o mÃ©todo 'openUrl' do componente 'po-page-login' */\n  @Output('p-forgot-password') forgotPassword = new EventEmitter<any>();\n\n  onForgotPasswordClick(recovery) {\n    this.forgotPassword.emit(recovery);\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { PoModule } from '@portinari/portinari-ui';\n\nimport { PoModalPasswordRecoveryComponent } from '../po-modal-password-recovery/po-modal-password-recovery.component';\nimport { PoPageBackgroundModule } from '../po-page-background/index';\nimport { PoPageLoginComponent } from './po-page-login.component';\nimport { PoPageLoginPopoverComponent } from './po-page-login-popover/po-page-login-popover.component';\nimport { PoPageLoginService } from './po-page-login.service';\n\n/**\n * @description\n *\n * MÃ³dulo do template do po-page-login.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    PoPageBackgroundModule,\n    PoModule\n  ],\n  declarations: [\n    PoPageLoginComponent,\n    PoPageLoginPopoverComponent\n  ],\n  entryComponents: [\n    PoModalPasswordRecoveryComponent\n  ],\n  exports: [\n    PoPageLoginComponent\n  ],\n  providers: [PoPageLoginService]\n})\nexport class PoPageLoginModule { }\n","import { NgModule } from '@angular/core';\n\nimport { PoModalPasswordRecoveryModule } from './po-modal-password-recovery/po-modal-password-recovery.module';\nimport { PoPageBackgroundModule } from './po-page-background/po-page-background.module';\nimport { PoPageBlockedUserModule } from './po-page-blocked-user/po-page-blocked-user.module';\nimport { PoPageChangePasswordModule } from './po-page-change-password/po-page-change-password.module';\nimport { PoPageDynamicDetailModule } from './po-page-dynamic-detail/po-page-dynamic-detail.module';\nimport { PoPageDynamicEditModule } from './po-page-dynamic-edit/po-page-dynamic-edit.module';\nimport { PoPageDynamicSearchModule } from './po-page-dynamic-search/po-page-dynamic-search.module';\nimport { PoPageDynamicTableModule } from './po-page-dynamic-table/po-page-dynamic-table.module';\nimport { PoPageJobSchedulerModule } from './po-page-job-scheduler/po-page-job-scheduler.module';\nimport { PoPageLoginModule } from './po-page-login/po-page-login.module';\n\n@NgModule({\n  imports: [\n    PoModalPasswordRecoveryModule,\n    PoPageBackgroundModule,\n    PoPageBlockedUserModule,\n    PoPageChangePasswordModule,\n    PoPageDynamicDetailModule,\n    PoPageDynamicEditModule,\n    PoPageDynamicSearchModule,\n    PoPageDynamicTableModule,\n    PoPageJobSchedulerModule,\n    PoPageLoginModule\n  ],\n  exports: [\n    PoModalPasswordRecoveryModule,\n    PoPageBackgroundModule,\n    PoPageBlockedUserModule,\n    PoPageChangePasswordModule,\n    PoPageDynamicDetailModule,\n    PoPageDynamicEditModule,\n    PoPageDynamicSearchModule,\n    PoPageDynamicTableModule,\n    PoPageJobSchedulerModule,\n    PoPageLoginModule\n  ]\n})\nexport class PoComponentsModule { }\n","import { NgModule } from '@angular/core';\n\nimport { PoPageCustomizationModule } from './po-page-customization/po-page-customization.module';\nimport { PoPageDynamicModule } from './po-page-dynamic/po-page-dynamic.module';\n\n@NgModule({\n  imports: [\n    PoPageCustomizationModule,\n    PoPageDynamicModule\n  ],\n  exports: [\n    PoPageCustomizationModule,\n    PoPageDynamicModule\n  ]\n})\nexport class PoServicesModule { }\n","import { NgModule } from '@angular/core';\n\nimport { PoComponentsModule } from './components/components.module';\nimport { PoServicesModule } from './services/services.module';\n\n@NgModule({\n  imports: [\n    PoComponentsModule,\n    PoServicesModule\n  ],\n  exports: [\n    PoComponentsModule,\n    PoServicesModule\n  ]\n})\nexport class PoTemplatesModule { }\n","/**\n * @usedBy PoModalPasswordRecoveryComponent\n *\n * @description\n *\n * Interface com a definiÃ§Ã£o do objeto gerado pelo formulÃ¡rio do componente `po-modal-password-recovery`.\n */\nexport interface PoModalPasswordRecovery {\n\n  /** Valor contendo o cÃ³digo enviado por SMS e digitado pelo usuÃ¡rio. */\n  code?: string;\n\n  /** Valor contendo o email enviado pelo usuÃ¡rio. */\n  email?: string;\n\n  /** CÃ³digo de validaÃ§Ã£o da solicitaÃ§Ã£o do SMS para ser enviado junto com o cÃ³digo de verificaÃ§Ã£o do SMS */\n  hash?: string;\n\n  /** NÃºmero de tentativas de reenvio. */\n  retry?: number;\n\n  /** Valor contendo o nÃºmero de telefone enviado pelo usuÃ¡rio. */\n  sms?: string;\n\n  /** Token de alteraÃ§Ã£o de senha */\n  token?: string;\n\n  /** URL para o formulÃ¡rio de alteraÃ§Ã£o de senha */\n  urlChangePassword?: string;\n\n  /** URL usada para validaÃ§Ã£o do cÃ³digo enviado por SMS */\n  urlValidationCode?: string;\n}\n","/**\n * @usedBy PoPageBlockedUserComponent\n *\n * @description\n *\n * Interface que define os valores de customizaÃ§Ã£o da mensagem de bloqueio do componente `po-page-blocked-user`.\n */\nexport interface PoPageBlockedUserReasonParams {\n\n  /** Quantidade mÃ¡xima de tentativas. */\n  attempts?: number;\n\n  /** Quantidade de dias para expiraÃ§Ã£o de senha. */\n  days?: number;\n\n  /** Horas que o sistema permanecerÃ¡ bloqueado. */\n  hours?: number;\n\n}\n","/**\n * @usedBy PoPageChangePasswordComponent\n *\n * @description\n *\n * Interface com a definiÃ§Ã£o do objeto gerado pelo formulÃ¡rio do componente `po-page-change-password`.\n */\nexport interface PoPageChangePassword {\n\n  /** Senha atual */\n  currentPassword?: string;\n\n  /** Nova senha */\n  newPassword?: string;\n\n}\n","import { PoModalPasswordRecoveryType } from '../../po-modal-password-recovery/enums/po-modal-password-recovery-type.enum';\n\n/**\n * @usedBy PoPageChangePasswordComponent\n *\n * @description\n *\n * Interface para especificaÃ§Ã£o do tipo de recuperaÃ§Ã£o de senha no `po-modal-password-recovery`.\n */\nexport interface PoPageChangePasswordRecovery {\n\n  /** DefiniÃ§Ã£o do e-mail que Ã© exibido na mensagem para contato de suporte. */\n  contactMail?: string;\n\n  /** DefiniÃ§Ã£o da mÃ¡scara do campo de telefone. */\n  phoneMask?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Enum para especificaÃ§Ã£o do tipo de recuperaÃ§Ã£o de senha [PoModalPasswordRecoveryType](/documentation/po-modal-password-recovery).\n   *\n   * > Caso nÃ£o seja definido valor se assume o padrÃ£o `PoModalPasswordRecoveryType.Email`.\n   */\n  type?: PoModalPasswordRecoveryType;\n\n  /**\n   * Endpoint usado pelo template **PoModalPasswordRecovery** para requisiÃ§Ã£o do recurso.\n   *\n   * > Saiba mais em [PoModalPasswordRecovery](/documentation/po-modal-password-recovery).\n   */\n  url: string;\n\n}\n","/**\n * @usedBy PoPageChangePasswordComponent\n *\n * @description\n *\n * Interface com a definiÃ§Ã£o dos objetos aceitos pela propriedade `p-password-requirements`.\n */\nexport interface PoPageChangePasswordRequirement {\n\n  /** Requisito. */\n  requirement: string;\n\n  /**\n   * FunÃ§Ã£o que deve retornar um booleano para validar um requisito de senha.\n   *\n   * TambÃ©m Ã© possÃ­vel informar diretamente um valor booleano que representa esta validaÃ§Ã£o.\n   */\n  status: boolean | Function;\n\n}\n","/**\n * @usedBy PoPageDynamicDetailComponent\n *\n * @description\n *\n * Interface para as aÃ§Ãµes do componente po-page-dynamic-detail.\n */\nexport interface PoPageDynamicDetailActions {\n\n  /**\n   * @description\n   *\n   * Rota de redirecionamento para aÃ§Ã£o de voltar, caso nÃ£o seja especificada serÃ¡ usado o comando `history.back()`.\n   *\n   * > Caso queira esconder a aÃ§Ã£o deve ser passado o valor `false`;\n   *\n   * ```\n   * actions = {\n   *   back: '/'\n   * };\n   * ```\n   */\n  back?: string | boolean;\n\n  /**\n   * @description\n   *\n   * Rota para ediÃ§Ã£o do recurso, caso seja preenchida irÃ¡ habilitar a aÃ§Ã£o de ediÃ§Ã£o na tabela.\n   *\n   * > A rota deve conter um parÃ¢metro chamando id.\n   *\n   * ```\n   * actions = {\n   *  edit: 'edit/:id'\n   * };\n   * ```\n   */\n  edit?: string;\n\n  /**\n   * @description\n   *\n   * Rota de redirecionamento que serÃ¡ executada apÃ³s a confirmaÃ§Ã£o da exclusÃ£o do registro.\n   *\n   * ```\n   * actions = {\n   *   remove: 'new'\n   * };\n   * ```\n   */\n  remove?: string;\n\n}\n","import { PoDynamicViewField } from '@portinari/portinari-ui';\n\n/**\n * @usedBy PoPageDynamicDetailComponent\n *\n * @description\n *\n * Interface dos fields usados para compor o template `po-page-dynamic-detail`.\n */\n\nexport interface PoPageDynamicDetailField extends PoDynamicViewField {\n\n  /** Indica se o campo serÃ¡ duplicado caso seja executada a aÃ§Ã£o de duplicaÃ§Ã£o. */\n  duplicate?: boolean;\n\n}\n","/**\n * @usedBy PoPageDynamicEditComponent\n *\n * @description\n *\n * Interface para as aÃ§Ãµes do componente po-page-dynamic-edit.\n */\nexport interface PoPageDynamicEditActions {\n\n  /**\n   * @description\n   *\n   * Rota de redirecionamento para aÃ§Ã£o de cancelar, caso nÃ£o seja especificada serÃ¡ usado o comando `navigator.back()`.\n   *\n   * > Caso queira esconder a aÃ§Ã£o deve ser passado o valor `false`;\n   *\n   * ```\n   * actions = {\n   *   cancel: '/'\n   * };\n   * ```\n   */\n  cancel?: string | boolean;\n\n  /**\n   * @description\n   *\n   * Rota de redirecionamento que serÃ¡ executada apÃ³s a confirmaÃ§Ã£o de gravaÃ§Ã£o do registro.\n   *\n   * > A rota pode conter um parÃ¢metro chamando id.\n   *\n   * ```\n   * actions = {\n   *   save: 'detail/:id'\n   * };\n   * ```\n   */\n  save?: string;\n\n  /**\n   * @description\n   *\n   * Rota de redirecionamento que serÃ¡ executada apÃ³s a confirmaÃ§Ã£o da gravaÃ§Ã£o do registro caso o mesmo esteja editando\n   * um registro.\n   *\n   * ```\n   * actions = {\n   *   saveNew: 'new'\n   * };\n   * ```\n   */\n  saveNew?: string;\n\n}\n","import { PoDynamicFormField } from '@portinari/portinari-ui';\n\n/**\n * @usedBy PoPageDynamicEditComponent\n *\n * @description\n *\n * Interface dos fields usados para compor o template `po-page-dynamic-edit`.\n */\nexport interface PoPageDynamicEditField extends PoDynamicFormField {\n\n  /** Indica se o campo serÃ¡ duplicado caso seja executada a aÃ§Ã£o de duplicaÃ§Ã£o. */\n  duplicate?: boolean;\n\n}\n","import { PoDynamicFormField, PoPageDefault } from '@portinari/portinari-ui';\n\n/**\n * @docsPrivate\n *\n * @description\n *\n * Interface para o atributo `filter` do componente `po-page-dynamic-search`.\n */\nexport interface PoPageDynamicSearch extends PoPageDefault {\n\n  /**\n   * @description\n   *\n   * Nome do mÃ©todo a ser executado quando a busca avanÃ§ada for finalizada.\n   */\n  advancedSearch?: Function;\n\n  /**\n   * @description\n   *\n   * Lista dos filtros usados na busca avanÃ§ada.\n   */\n  filters?: Array<PoDynamicFormField>;\n\n  /**\n   * @description\n   *\n   * Nome do mÃ©todo a ser executado quando Ã© pressionado a tecla `ENTER` dentro do `input` de pesquisa rÃ¡pida do componente, o mesmo\n   * receberÃ¡ o valor digitado ao ser invocado.\n   */\n  quickSearch?: Function;\n\n}\n","/**\n * @usedBy PoPageDynamicSearchComponent\n *\n * @description\n *\n * Interface para definiÃ§Ã£o das literais usadas no `po-page-dynamic-search`.\n */\nexport interface PoPageDynamicSearchLiterals {\n\n  /** TÃ­tulo do grupo de *disclaimers* que serÃ¡ exibido apÃ³s realizar alguma busca. */\n  disclaimerGroupTitle?: string;\n\n  /** Texto exibido no botÃ£o para cancelamento da busca avaÃ§anda. */\n  filterCancelLabel?: string;\n\n  /** Texto exibido no botÃ£o para confirmaÃ§Ã£o da busca avaÃ§anda. */\n  filterConfirmLabel?: string;\n\n  /** TÃ­tulo da busca avanÃ§ada. */\n  filterTitle?: string;\n\n  /** Texto do *disclaimer* que serÃ¡ exibido em conjunto com o valor preenchido no campo de busca rÃ¡pida. */\n  quickSearchLabel?: string;\n\n  /** Mensagem que aparecerÃ¡ enquanto o campo de busca rÃ¡pida nÃ£o estiver preenchido. */\n  searchPlaceholder?: string;\n\n}\n","import { PoDynamicFormField, PoBreadcrumb, PoPageAction } from '@portinari/portinari-ui';\n\n/**\n * @usedBy PoPageDynamicSearchComponent\n *\n * @description\n *\n * Interface para a customizaÃ§Ã£o de uma pÃ¡gina dinÃ¢mica.\n */\nexport interface PoPageDynamicSearchOptions {\n\n  /**\n   * Lista dos campos usados na busca avanÃ§ada. Caso nÃ£o seja passado a busca avanÃ§ada nÃ£o serÃ¡ exibida.\n   *\n   * Caso precise alterar um filtro que jÃ¡ exista deve ser passado o atributo `property` com o mesmo conteÃºdo do original.\n   */\n  filters?: Array<PoDynamicFormField>;\n\n  /**\n   * Lista de aÃ§Ãµes que o usuÃ¡rio poderÃ¡ executar na pÃ¡gina atravÃ©s de botÃµes.\n   *\n   * Caso precise alterar uma aÃ§Ã£o que jÃ¡ exista deve ser passado o atributo `label` com o mesmo conteÃºdo do original.\n   */\n  actions?: Array<PoPageAction>;\n\n  /**\n   * Objeto com propriedades do breadcrumb.\n   *\n   * Caso esse atributo seja utilizado ele sempre irÃ¡ substituir o original.\n   */\n  breadcrumb?: PoBreadcrumb;\n\n  /**\n   * TÃ­tulo da pÃ¡gina.\n   *\n   * Caso esse atributo seja utilizado ele sempre irÃ¡ substituir o original.\n   */\n  title?: string;\n}\n","/**\n * @usedBy PoPageDynamicTableComponent\n *\n * @description\n *\n * Interface para as aÃ§Ãµes do componente po-page-dynamic-table.\n */\nexport interface PoPageDynamicTableActions {\n\n  /**\n   * @description\n   *\n   * Rota para exibiÃ§Ã£o do recurso em detalhe, caso seja preenchida irÃ¡ habilitar a aÃ§Ã£o de visualizaÃ§Ã£o na tabela.\n   *\n   * > A rota deve conter um parÃ¢metro chamando id.\n   *\n   * ```\n   * actions = {\n   *   detail: 'detail/:id'\n   * };\n   * ```\n   */\n  detail?: string;\n\n  /**\n   * @description\n   *\n   * Rota para duplicaÃ§Ã£o do recurso, caso seja preenchida irÃ¡ habilitar a aÃ§Ã£o de duplicaÃ§Ã£o na tabela.\n   *\n   * > Os valores a serem duplicados serÃ£o enviados via query string.\n   *\n   * ```\n   * actions = {\n   *   duplicate: 'duplicate'\n   * };\n   * ```\n   */\n  duplicate?: string;\n\n  /**\n   * @description\n   *\n   * Rota para ediÃ§Ã£o do recurso, caso seja preenchida irÃ¡ habilitar a aÃ§Ã£o de ediÃ§Ã£o na tabela.\n   *\n   * > A rota deve conter um parÃ¢metro chamando id.\n   *\n   * ```\n   * actions = {\n   *   edit: 'edit/:id'\n   * };\n   * ```\n   */\n  edit?: string;\n\n  /**\n   * @description\n   *\n   * Rota criar um novo recurso, caso seja preenchida sera exibido uma aÃ§Ã£o no topo da pÃ¡gina.\n   *\n   * ```\n   * actions = {\n   *   new: 'new'\n   * };\n   * ```\n   */\n  new?: string;\n\n  /** Habilita a aÃ§Ã£o de exclusÃ£o na tabela. */\n  remove?: boolean;\n\n  /** Habilita a aÃ§Ã£o de exclusÃ£o em lote na pÃ¡gina. */\n  removeAll?: boolean;\n\n}\n","import { PoDynamicFormField } from '@portinari/portinari-ui';\n\n/**\n * @usedBy PoPageDynamicTableComponent\n *\n * @description\n *\n * Interface dos fields usados para compor o template `po-page-dynamic-table`.\n */\nexport interface PoPageDynamicTableField extends PoDynamicFormField {\n\n  /** Indica se o campo serÃ¡ duplicado caso seja executada a aÃ§Ã£o de duplicaÃ§Ã£o. */\n  duplicate?: boolean;\n\n  /** Indica se o campo serÃ¡ usado para busca avanÃ§ada. */\n  filter?: boolean;\n\n  /** Tamanho da coluna em pixels ou porcetagem. */\n  width?: number | string;\n}\n","import { PoBreadcrumb } from '@portinari/portinari-ui';\n\nimport { PoPageDynamicTableField } from './po-page-dynamic-table-field.interface';\nimport { PoPageDynamicTableActions } from './po-page-dynamic-table-actions.interface';\n\n/**\n * @usedBy PoPageDynamicTableComponent\n *\n * @description\n *\n * Interface para as propriedades de uma pÃ¡gina dinÃ¢mica.\n */\nexport interface PoPageDynamicTableOptions {\n\n  /**\n   * Lista dos campos usados na tabela e busca avanÃ§ada.\n   *\n   * Caso precise alterar um field que jÃ¡ exista deve ser passado o atributo `property` com o mesmo conteÃºdo do original.\n   */\n  fields?: Array<PoPageDynamicTableField>;\n\n  /**\n   * AÃ§Ãµes que o usuÃ¡rio poderÃ¡ executar na pÃ¡gina atravÃ©s de botÃµes.\n   */\n  actions?: PoPageDynamicTableActions;\n\n  /**\n   * Objeto com propriedades do breadcrumb.\n   *\n   * Caso esse atributo seja utilizado ele sempre irÃ¡ substituir o original.\n   */\n  breadcrumb?: PoBreadcrumb;\n\n  /**\n   * TÃ­tulo da pÃ¡gina.\n   *\n   * Caso esse atributo seja utilizado ele sempre irÃ¡ substituir o original.\n   */\n  title?: string;\n}\n","import { PoPageDynamicTableOptions } from './po-page-dynamic-table-options.interface';\n\n/**\n * @docsExtends PoPageDynamicTableOptions\n *\n * @usedBy PoPageDynamicTableComponent\n *\n * @description\n *\n * <a id=\"po-page-dynamic-table-metadata\"></a>\n *\n */\nexport interface PoPageDynamicTableMetaData extends PoPageDynamicTableOptions {\n\n  /**\n   *\n   * Cria automaticamente as rotas de ediÃ§Ã£o (novo/duplicate) e detalhes caso sejam definidas aÃ§Ãµes na propriedade `p-actions`\n   *\n   * As rotas criadas serÃ£o baseadas na propriedade `p-actions`.\n   *\n   * > Para o correto funcionamento nÃ£o pode haver nenhuma rota coringa (`**`) especificada.\n   *\n   * @default false\n   */\n  autoRouter?: boolean;\n\n  /**\n   *\n   * VersÃ£o do metadata, o sistema irÃ¡ buscar a versÃ£o nas prÃ³ximas iteraÃ§Ã£o.\n   *\n   * @default false\n   */\n  version?: string;\n}\n","/**\n * @usedBy PoPageLoginComponent\n *\n * @description\n *\n * Interface com a definiÃ§Ã£o do objeto gerado pelo formulÃ¡rio do componente `po-page-login`.\n */\nexport interface PoPageLogin {\n  /** Login preenchido pelo usuÃ¡rio. */\n  login: string;\n\n  /** Senha preenchida pelo usuÃ¡rio, a mesma serÃ¡ convertida para [hash/md5] antes de ser enviada para a aplicaÃ§Ã£o. */\n  password: string;\n\n  /** Essa propriedade informa se o usuÃ¡rio quer que seus dados sejam lembrados em um acesso futuro. */\n  rememberUser: boolean;\n}\n","import { PoSelectOption } from '@portinari/portinari-ui';\n\n/**\n * @usedBy PoPageLoginComponent\n *\n * @description\n *\n * Interface com a definiÃ§Ã£o do Custom Field, podendo ser utilizado para informar um campo customizado no componente `po-page-login`.\n */\nexport interface PoPageLoginCustomField {\n\n  /** Nome da propriedade que serÃ¡ utilizado no campo customizado. */\n  property: string;\n\n /**\n  * @optional\n  *\n  * @description\n  *\n  * Valor do campo customizado.\n  */\n  value?: string | number;\n\n /**\n  * @optional\n  *\n  * @description\n  *\n  * Mensagem que serÃ¡ exibida enquanto o campo customizado nÃ£o estiver preenchido.\n  */\n  placeholder?: string;\n\n /**\n  * @optional\n  *\n  * @description\n  *\n  * ExpressÃ£o regular para validar o campo customizado, caso a expressÃ£o nÃ£o seja atendida a literal informada na\n  * propriedade `errorPattern` serÃ¡ exibida.\n  */\n  pattern?: string;\n\n /**\n  * @optional\n  *\n  * @description\n  *\n  * Mensagem que serÃ¡ exibida quando a expressÃ£o regular informada na propriedade `pattern` nÃ£o for vÃ¡lida.\n  */\n  errorPattern?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Lista de opÃ§Ãµes de um `po-select`.\n   */\n   options?: Array<PoSelectOption>;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Nesta propriedade deve ser informada a URL do serviÃ§o em que serÃ¡ realizado o filtro para carregamento da\n   * lista de itens do componente `po-combo`.\n   */\n   url?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Deve ser informado o nome da propriedade do objeto que serÃ¡ utilizado para a conversÃ£o dos itens apresentados na\n   * lista do componente `po-combo`, esta propriedade serÃ¡ responsÃ¡vel pelo valor de cada item da lista.\n   *\n   */\n   fieldValue?: string;\n}\n","/**\n * @usedBy PoPageLoginComponent\n *\n * @description\n *\n * Interface para definiÃ§Ã£o das literais usadas no `po-page-login`.\n */\nexport interface PoPageLoginLiterals {\n\n  /** Texto que informa a quantidade de tentativas restantes no popover de aviso de bloqueio. */\n  attempts?: string;\n\n  /** Texto exibido no popover de aviso de bloqueio, que orienta o usuÃ¡rio, caso ele tenha esquecido a senha, a criar uma nova senha. */\n  createANewPasswordNow?: string;\n\n  /** Mensagem de erro apresentada quando o campo customizado estÃ¡ invÃ¡lido */\n  customFieldErrorPattern?: string;\n\n  /** Placeholder para o campo customizado. */\n  customFieldPlaceholder?: string;\n\n  /** Texto que questiona o esquecimento da senha no popover de aviso de bloqueio. */\n  forgotYourPassword?: string;\n\n  /** TÃ­tulo exibido no topo da pÃ¡gina. */\n  title?: string;\n\n  /** Texto do link de 'esqueci minha senha' exibido no popover de aviso de bloqueio. */\n  iForgotMyPassword?: string;\n\n  /** Texto de aviso de tentativas exibido no popover de aviso de bloqueio. */\n  ifYouTryHarder?: string;\n\n  /** Mensagem de erro apresentada quando o campo de login estÃ¡ invÃ¡lido. */\n  loginErrorPattern?: string;\n\n  /** Texto exibido como dica para o campo de login. */\n  loginHint?: string;\n\n  /** Texto exibido como label do campo de login. */\n  loginLabel?: string;\n\n  /** Placeholder do campo de login. */\n  loginPlaceholder?: string;\n\n  /** Mensagem de erro apresentada quando o campo de password estÃ¡ invÃ¡lido. */\n  passwordErrorPattern?: string;\n\n  /** Texto exibido como label do campo de password. */\n  passwordLabel?: string;\n\n  /** Placeholder do campo de password. */\n  passwordPlaceholder?: string;\n\n  /** Texto exibido na funÃ§Ã£o \"Lembrar usuÃ¡rio\". */\n  rememberUser?: string;\n\n  /** Texto exibido como dica da funÃ§Ã£o \"Lembrar usuÃ¡rio\" */\n  rememberUserHint?: string;\n\n  /** Texto exibido no botÃ£o de confirmaÃ§Ã£o da pÃ¡gina de login. */\n  submitLabel?: string;\n\n  /** Texto exibido no botÃ£o de confirmaÃ§Ã£o da pÃ¡gina de login quando estiver em estado de carregamento. */\n  submittedLabel?: string;\n\n  /** Texto de ajuda para recuperaÃ§Ã£o dos dados de acesso. */\n  forgotPassword?: string;\n\n  /** Texto de destaque sobreposto Ã  imagem de destaque. Essa opÃ§Ã£o Ã© utilizada em conjunto com o atributo `p-background`. */\n  highlightInfo?: string;\n\n  /** Texto exibido no link de novo cadastro. */\n  registerUrl?: string;\n\n  /** TÃ­tulo do popover para aviso de bloqueio. */\n  titlePopover?: string;\n\n  /** Texto que informa ao usuÃ¡rio que o mesmo serÃ¡ bloqueado e por quanto tempo no popover de aviso de bloqueio. */\n  yourUserWillBeBlocked?: string;\n\n}\n","import { PoModalPasswordRecoveryType } from '../../po-modal-password-recovery/enums/po-modal-password-recovery-type.enum';\n\n/**\n * @usedBy PoPageLoginComponent\n *\n * @description\n *\n * Interface para especificaÃ§Ã£o do tipo de recuperaÃ§Ã£o de senha no `po-modal-password-recovery`.\n */\nexport interface PoPageLoginRecovery {\n\n  /** DefiniÃ§Ã£o do e-mail que Ã© exibido na mensagem para contato de suporte. */\n  contactMail?: string;\n\n  /** DefiniÃ§Ã£o da mÃ¡scara do campo de telefone. */\n  phoneMask?: string;\n\n  /**\n   * @optional\n   *\n   * @description\n   *\n   * Enum para especificaÃ§Ã£o do tipo de recuperaÃ§Ã£o de senha [PoModalPasswordRecoveryType](/documentation/po-modal-password-recovery).\n   *\n   * > Caso nÃ£o seja definido valor se assume o padrÃ£o `PoModalPasswordRecoveryType.Email`.\n   */\n  type?: PoModalPasswordRecoveryType;\n\n  /**\n   * Endpoint usado pelo template **PoModalPasswordRecovery** para requisiÃ§Ã£o do recurso.\n   *\n   * > Saiba mais em [PoModalPasswordRecovery](/documentation/po-modal-password-recovery).\n   */\n  url: string;\n\n}\n","export interface PoPageDynamicOptionsSchema<T> {\n  schema: Array<PoPageDynamicOptionsProp<T>>;\n}\n\nexport interface PoPageDynamicOptionsProp<T> {\n  nameProp: string;\n  merge?: boolean;\n  keyForMerge?: string;\n}\n"],"names":["util.poLocaleDefault","util.browserLanguage","util.convertToBoolean","util.mapObjectByProperties","util.valuesFromObject","util.mapArrayByProperties"],"mappings":"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"}