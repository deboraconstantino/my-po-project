/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { NgForm } from '@angular/forms';
export class PoPageJobSchedulerParametersComponent {
    constructor() {
        this.literals = (/** @type {?} */ ({}));
        this.parameters = [];
        this.valueChange = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        if (this.form) {
            setTimeout((/**
             * @return {?}
             */
            () => {
                this.form.valueChanges.subscribe((/**
                 * @param {?} value
                 * @return {?}
                 */
                value => {
                    this.valueChange.emit(value);
                }));
            }));
        }
    }
}
PoPageJobSchedulerParametersComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-page-job-scheduler-parameters',
                template: "<ng-container *ngIf=\"parameters && parameters.length; then formFieldsTemplate; else parametersNotFoundTemplate\">\r\n</ng-container>\r\n\r\n<ng-template #parametersNotFoundTemplate>\r\n\r\n  <div class=\"po-text-center\">\r\n    <span class=\"po-icon po-icon-info\"></span>\r\n    <span class=\"po-font-text-large\">\r\n      {{ literals.parametersNotFound }}\r\n    </span>\r\n  </div>\r\n\r\n</ng-template>\r\n\r\n<ng-template #formFieldsTemplate>\r\n  <form #parametersForm=\"ngForm\">\r\n    <po-dynamic-form\r\n      p-group-form\r\n      [p-fields]=\"parameters\"\r\n      [p-value]=\"value\">\r\n    </po-dynamic-form>\r\n  </form>\r\n</ng-template>\r\n"
            }] }
];
PoPageJobSchedulerParametersComponent.propDecorators = {
    form: [{ type: ViewChild, args: ['parametersForm', { static: true },] }],
    literals: [{ type: Input, args: ['p-literals',] }],
    parameters: [{ type: Input, args: ['p-parameters',] }],
    value: [{ type: Input, args: ['p-value',] }],
    valueChange: [{ type: Output, args: ['p-valueChange',] }]
};
if (false) {
    /** @type {?} */
    PoPageJobSchedulerParametersComponent.prototype.form;
    /** @type {?} */
    PoPageJobSchedulerParametersComponent.prototype.literals;
    /** @type {?} */
    PoPageJobSchedulerParametersComponent.prototype.parameters;
    /** @type {?} */
    PoPageJobSchedulerParametersComponent.prototype.value;
    /** @type {?} */
    PoPageJobSchedulerParametersComponent.prototype.valueChange;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tcGFnZS1qb2Itc2NoZWR1bGVyLXBhcmFtZXRlcnMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvcnRpbmFyaS9wb3J0aW5hcmktdGVtcGxhdGVzLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tcGFnZS1qb2Itc2NoZWR1bGVyL3BvLXBhZ2Utam9iLXNjaGVkdWxlci1wYXJhbWV0ZXJzL3BvLXBhZ2Utam9iLXNjaGVkdWxlci1wYXJhbWV0ZXJzLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFpQixTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2pHLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQVF4QyxNQUFNLE9BQU8scUNBQXFDO0lBSmxEO1FBUXVCLGFBQVEsR0FBRyxtQkFBTSxFQUFFLEVBQUEsQ0FBQztRQUVsQixlQUFVLEdBQThCLEVBQUUsQ0FBQztRQUl6QyxnQkFBVyxHQUFzQixJQUFJLFlBQVksRUFBTyxDQUFDO0lBY3BGLENBQUM7Ozs7SUFaQyxlQUFlO1FBQ2IsSUFBSSxJQUFJLENBQUMsSUFBSSxFQUFFO1lBQ2IsVUFBVTs7O1lBQUMsR0FBRyxFQUFFO2dCQUVkLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLFNBQVM7Ozs7Z0JBQUMsS0FBSyxDQUFDLEVBQUU7b0JBQ3ZDLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO2dCQUMvQixDQUFDLEVBQUMsQ0FBQztZQUVMLENBQUMsRUFBQyxDQUFDO1NBQ0o7SUFDSCxDQUFDOzs7WUExQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxrQ0FBa0M7Z0JBQzVDLGlxQkFBOEQ7YUFDL0Q7OzttQkFHRSxTQUFTLFNBQUMsZ0JBQWdCLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFO3VCQUU1QyxLQUFLLFNBQUMsWUFBWTt5QkFFbEIsS0FBSyxTQUFDLGNBQWM7b0JBRXBCLEtBQUssU0FBQyxTQUFTOzBCQUVmLE1BQU0sU0FBQyxlQUFlOzs7O0lBUnZCLHFEQUE0RDs7SUFFNUQseURBQXlDOztJQUV6QywyREFBa0U7O0lBRWxFLHNEQUF3Qjs7SUFFeEIsNERBQWtGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCwgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBOZ0Zvcm0gfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcblxyXG5pbXBvcnQgeyBQb0R5bmFtaWNGb3JtRmllbGQgfSBmcm9tICdAcG9ydGluYXJpL3BvcnRpbmFyaS11aSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ3BvLXBhZ2Utam9iLXNjaGVkdWxlci1wYXJhbWV0ZXJzJyxcclxuICB0ZW1wbGF0ZVVybDogJ3BvLXBhZ2Utam9iLXNjaGVkdWxlci1wYXJhbWV0ZXJzLmNvbXBvbmVudC5odG1sJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgUG9QYWdlSm9iU2NoZWR1bGVyUGFyYW1ldGVyc0NvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQge1xyXG5cclxuICBAVmlld0NoaWxkKCdwYXJhbWV0ZXJzRm9ybScsIHsgc3RhdGljOiB0cnVlIH0pIGZvcm06IE5nRm9ybTtcclxuXHJcbiAgQElucHV0KCdwLWxpdGVyYWxzJykgbGl0ZXJhbHMgPSA8YW55PiB7fTtcclxuXHJcbiAgQElucHV0KCdwLXBhcmFtZXRlcnMnKSBwYXJhbWV0ZXJzOiBBcnJheTxQb0R5bmFtaWNGb3JtRmllbGQ+ID0gW107XHJcblxyXG4gIEBJbnB1dCgncC12YWx1ZScpIHZhbHVlO1xyXG5cclxuICBAT3V0cHV0KCdwLXZhbHVlQ2hhbmdlJykgdmFsdWVDaGFuZ2U6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XHJcblxyXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcclxuICAgIGlmICh0aGlzLmZvcm0pIHtcclxuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcblxyXG4gICAgICAgIHRoaXMuZm9ybS52YWx1ZUNoYW5nZXMuc3Vic2NyaWJlKHZhbHVlID0+IHtcclxuICAgICAgICAgIHRoaXMudmFsdWVDaGFuZ2UuZW1pdCh2YWx1ZSk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9XHJcblxyXG59XHJcbiJdfQ==