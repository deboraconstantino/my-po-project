/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { NgForm } from '@angular/forms';
export class PoPageJobSchedulerParametersComponent {
    constructor() {
        this.literals = (/** @type {?} */ ({}));
        this.parameters = [];
        this.valueChange = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        if (this.form) {
            setTimeout((/**
             * @return {?}
             */
            () => {
                this.form.valueChanges.subscribe((/**
                 * @param {?} value
                 * @return {?}
                 */
                value => {
                    this.valueChange.emit(value);
                }));
            }));
        }
    }
}
PoPageJobSchedulerParametersComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-page-job-scheduler-parameters',
                template: "<ng-container *ngIf=\"parameters && parameters.length; then formFieldsTemplate; else parametersNotFoundTemplate\">\n</ng-container>\n\n<ng-template #parametersNotFoundTemplate>\n\n  <div class=\"po-text-center\">\n    <span class=\"po-icon po-icon-info\"></span>\n    <span class=\"po-font-text-large\">\n      {{ literals.parametersNotFound }}\n    </span>\n  </div>\n\n</ng-template>\n\n<ng-template #formFieldsTemplate>\n  <form #parametersForm=\"ngForm\">\n    <po-dynamic-form\n      p-group-form\n      [p-fields]=\"parameters\"\n      [p-value]=\"value\">\n    </po-dynamic-form>\n  </form>\n</ng-template>\n"
            }] }
];
PoPageJobSchedulerParametersComponent.propDecorators = {
    form: [{ type: ViewChild, args: ['parametersForm', { static: true },] }],
    literals: [{ type: Input, args: ['p-literals',] }],
    parameters: [{ type: Input, args: ['p-parameters',] }],
    value: [{ type: Input, args: ['p-value',] }],
    valueChange: [{ type: Output, args: ['p-valueChange',] }]
};
if (false) {
    /** @type {?} */
    PoPageJobSchedulerParametersComponent.prototype.form;
    /** @type {?} */
    PoPageJobSchedulerParametersComponent.prototype.literals;
    /** @type {?} */
    PoPageJobSchedulerParametersComponent.prototype.parameters;
    /** @type {?} */
    PoPageJobSchedulerParametersComponent.prototype.value;
    /** @type {?} */
    PoPageJobSchedulerParametersComponent.prototype.valueChange;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tcGFnZS1qb2Itc2NoZWR1bGVyLXBhcmFtZXRlcnMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvcnRpbmFyaS9wb3J0aW5hcmktdGVtcGxhdGVzLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tcGFnZS1qb2Itc2NoZWR1bGVyL3BvLXBhZ2Utam9iLXNjaGVkdWxlci1wYXJhbWV0ZXJzL3BvLXBhZ2Utam9iLXNjaGVkdWxlci1wYXJhbWV0ZXJzLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFpQixTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2pHLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQVF4QyxNQUFNLE9BQU8scUNBQXFDO0lBSmxEO1FBUXVCLGFBQVEsR0FBRyxtQkFBTSxFQUFFLEVBQUEsQ0FBQztRQUVsQixlQUFVLEdBQThCLEVBQUUsQ0FBQztRQUl6QyxnQkFBVyxHQUFzQixJQUFJLFlBQVksRUFBTyxDQUFDO0lBY3BGLENBQUM7Ozs7SUFaQyxlQUFlO1FBQ2IsSUFBSSxJQUFJLENBQUMsSUFBSSxFQUFFO1lBQ2IsVUFBVTs7O1lBQUMsR0FBRyxFQUFFO2dCQUVkLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLFNBQVM7Ozs7Z0JBQUMsS0FBSyxDQUFDLEVBQUU7b0JBQ3ZDLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO2dCQUMvQixDQUFDLEVBQUMsQ0FBQztZQUVMLENBQUMsRUFBQyxDQUFDO1NBQ0o7SUFDSCxDQUFDOzs7WUExQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxrQ0FBa0M7Z0JBQzVDLG1uQkFBOEQ7YUFDL0Q7OzttQkFHRSxTQUFTLFNBQUMsZ0JBQWdCLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFO3VCQUU1QyxLQUFLLFNBQUMsWUFBWTt5QkFFbEIsS0FBSyxTQUFDLGNBQWM7b0JBRXBCLEtBQUssU0FBQyxTQUFTOzBCQUVmLE1BQU0sU0FBQyxlQUFlOzs7O0lBUnZCLHFEQUE0RDs7SUFFNUQseURBQXlDOztJQUV6QywyREFBa0U7O0lBRWxFLHNEQUF3Qjs7SUFFeEIsNERBQWtGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCwgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmdGb3JtIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5pbXBvcnQgeyBQb0R5bmFtaWNGb3JtRmllbGQgfSBmcm9tICdAcG9ydGluYXJpL3BvcnRpbmFyaS11aSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BvLXBhZ2Utam9iLXNjaGVkdWxlci1wYXJhbWV0ZXJzJyxcbiAgdGVtcGxhdGVVcmw6ICdwby1wYWdlLWpvYi1zY2hlZHVsZXItcGFyYW1ldGVycy5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgUG9QYWdlSm9iU2NoZWR1bGVyUGFyYW1ldGVyc0NvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQge1xuXG4gIEBWaWV3Q2hpbGQoJ3BhcmFtZXRlcnNGb3JtJywgeyBzdGF0aWM6IHRydWUgfSkgZm9ybTogTmdGb3JtO1xuXG4gIEBJbnB1dCgncC1saXRlcmFscycpIGxpdGVyYWxzID0gPGFueT4ge307XG5cbiAgQElucHV0KCdwLXBhcmFtZXRlcnMnKSBwYXJhbWV0ZXJzOiBBcnJheTxQb0R5bmFtaWNGb3JtRmllbGQ+ID0gW107XG5cbiAgQElucHV0KCdwLXZhbHVlJykgdmFsdWU7XG5cbiAgQE91dHB1dCgncC12YWx1ZUNoYW5nZScpIHZhbHVlQ2hhbmdlOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgICBpZiAodGhpcy5mb3JtKSB7XG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcblxuICAgICAgICB0aGlzLmZvcm0udmFsdWVDaGFuZ2VzLnN1YnNjcmliZSh2YWx1ZSA9PiB7XG4gICAgICAgICAgdGhpcy52YWx1ZUNoYW5nZS5lbWl0KHZhbHVlKTtcbiAgICAgICAgfSk7XG5cbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG59XG4iXX0=