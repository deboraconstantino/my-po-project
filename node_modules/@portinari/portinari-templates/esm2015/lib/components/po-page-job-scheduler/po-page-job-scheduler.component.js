/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ActivatedRoute, Router } from '@angular/router';
import { Component, ViewChild, ViewEncapsulation } from '@angular/core';
import { PoDialogService, PoNotificationService, PoStepperStatus } from '@portinari/portinari-ui';
import * as util from './../../utils/util';
import { PoPageJobSchedulerInternal } from './po-page-job-scheduler-internal';
import { PoPageJobSchedulerBaseComponent } from './po-page-job-scheduler-base.component';
import { poPageJobSchedulerLiteralsDefault } from './po-page-job-scheduler-literals';
import { PoPageJobSchedulerLookupService } from './po-page-job-scheduler-lookup.service';
import { PoPageJobSchedulerService } from './po-page-job-scheduler.service';
/**
 * \@docsExtends PoPageJobSchedulerBaseComponent
 *
 * \@example
 *
 * <example name="po-page-job-scheduler-basic" title="Portinari Page Job Scheduler Basic">
 *  <file name="sample-po-page-job-scheduler-basic/sample-po-page-job-scheduler-basic.component.html"> </file>
 *  <file name="sample-po-page-job-scheduler-basic/sample-po-page-job-scheduler-basic.component.ts"> </file>
 * </example>
 *
 */
export class PoPageJobSchedulerComponent extends PoPageJobSchedulerBaseComponent {
    /**
     * @param {?} poPageDynamicLookupService
     * @param {?} activatedRoute
     * @param {?} poDialogService
     * @param {?} poNotification
     * @param {?} router
     * @param {?} poPageJobSchedulerService
     */
    constructor(poPageDynamicLookupService, activatedRoute, poDialogService, poNotification, router, poPageJobSchedulerService) {
        super(poPageJobSchedulerService);
        this.poPageDynamicLookupService = poPageDynamicLookupService;
        this.activatedRoute = activatedRoute;
        this.poDialogService = poDialogService;
        this.poNotification = poNotification;
        this.router = router;
        this.isEdit = false;
        this.literals = Object.assign({}, poPageJobSchedulerLiteralsDefault[util.poLocaleDefault], poPageJobSchedulerLiteralsDefault[util.browserLanguage()]);
        this.parameters = [];
        this.step = 1;
        this.backPageAction = {
            label: this.literals.back,
            action: this.nextStepOperation.bind(this, 'back'),
            disabled: this.isDisabledBack.bind(this)
        };
        this.concludePageActions = [
            {
                label: this.literals.conclude,
                action: this.confirmJobScheduler.bind(this)
            },
            Object.assign({}, this.backPageAction)
        ];
        this.nextPageActions = [
            {
                label: this.literals.next,
                action: this.nextStepOperation.bind(this, 'next'),
                disabled: this.isDisabledAdvance.bind(this)
            },
            Object.assign({}, this.backPageAction)
        ];
        this.jobSchedulerActions = [
            ...this.nextPageActions
        ];
        this.steps = [
            { label: this.literals.scheduling },
            { label: this.literals.parameterization },
            { label: this.literals.conclude }
        ];
    }
    /**
     * @return {?}
     */
    get stepperOrientation() {
        return window.innerWidth > 481 && window.innerWidth < 960 ? 'horizontal' : 'vertical';
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        /** @type {?} */
        const paramId = this.activatedRoute.snapshot.params['id'];
        this.isEdit = !!paramId;
        this.poPageJobSchedulerService.configServiceApi({ endpoint: this.serviceApi });
        this.loadData(paramId);
    }
    /**
     * @param {?} currentStep
     * @param {?} nextStep
     * @return {?}
     */
    changePageActionsBySteps(currentStep, nextStep) {
        /** @type {?} */
        const stepsLength = this.steps.length;
        if (nextStep === stepsLength) {
            this.jobSchedulerActions = [...this.concludePageActions];
        }
        else if (currentStep === stepsLength && nextStep < currentStep) {
            this.jobSchedulerActions = [...this.nextPageActions];
        }
    }
    /**
     * @param {?} stepNumber
     * @return {?}
     */
    nextStep(stepNumber) {
        if (stepNumber > 1 && this.schedulerExecution.form.invalid) {
            this.markAsDirtyInvalidControls(this.schedulerExecution.form.controls);
            return;
        }
        if (stepNumber > 2 && (this.schedulerParameters && this.schedulerParameters.form && this.schedulerParameters.form.invalid)) {
            this.markAsDirtyInvalidControls(this.schedulerParameters.form.controls);
            return;
        }
        this.changePageActionsBySteps(this.step, stepNumber);
        /** @type {?} */
        const steps = this.steps[this.step - 1];
        this.step = stepNumber;
        if (steps) {
            steps.status = PoStepperStatus.Done;
        }
    }
    /**
     * @param {?} process
     * @return {?}
     */
    onChangeProcess(process) {
        if (process.existAPI && process.processId) {
            this.getParametersByProcess(process.processId);
            if (!this.isEdit) {
                this.model.executionParameter = {};
            }
            return;
        }
    }
    /**
     * @private
     * @return {?}
     */
    confirmJobScheduler() {
        /** @type {?} */
        const paramId = this.activatedRoute.snapshot.params['id'];
        /** @type {?} */
        const confirmMessage = paramId ? this.literals.confirmUpdateMessage : this.literals.confirmSaveMessage;
        this.poDialogService.confirm({
            title: this.literals.confirmation,
            message: confirmMessage,
            confirm: (/**
             * @return {?}
             */
            () => {
                /** @type {?} */
                const model = Object.assign({}, this.model);
                this.save(model, paramId);
            })
        });
    }
    /**
     * @private
     * @param {?} msgSuccess
     * @param {?} saveOperation
     * @return {?}
     */
    emitSuccessMessage(msgSuccess, saveOperation) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            yield saveOperation.toPromise();
            this.poNotification.success(msgSuccess);
            this.resetJobSchedulerForm();
        });
    }
    /**
     * @private
     * @param {?} process
     * @return {?}
     */
    getParametersByProcess(process) {
        this.poPageJobSchedulerService.getParametersByProcess(process).subscribe((/**
         * @param {?} parameters
         * @return {?}
         */
        parameters => {
            this.parameters = parameters;
        }));
    }
    /**
     * @private
     * @return {?}
     */
    isDisabledAdvance() {
        return this.schedulerExecution ? this.schedulerExecution.form.invalid : false;
    }
    /**
     * @private
     * @return {?}
     */
    isDisabledBack() {
        return this.step === 1;
    }
    /**
     * @private
     * @param {?=} operation
     * @return {?}
     */
    nextStepOperation(operation) {
        /** @type {?} */
        const stepNumber = operation === 'back' ? this.step - 1 : this.step + 1;
        this.nextStep(stepNumber);
    }
    /**
     * @private
     * @return {?}
     */
    resetJobSchedulerForm() {
        this.schedulerExecution.form.reset();
        // radiogroup nÃ£o estava atribuindo novo valor, fica vermelho sem o timetout.
        setTimeout((/**
         * @return {?}
         */
        () => {
            this.model = new PoPageJobSchedulerInternal();
            this.step = 1;
            this.steps.forEach((/**
             * @param {?} step
             * @return {?}
             */
            step => {
                step.status = PoStepperStatus.Default;
            }));
            this.jobSchedulerActions = [...this.nextPageActions];
        }));
    }
    /**
     * @private
     * @param {?} model
     * @param {?} paramId
     * @return {?}
     */
    save(model, paramId) {
        /** @type {?} */
        const saveOperation = paramId
            ? this.poPageJobSchedulerService.updateResource(paramId, model)
            : this.poPageJobSchedulerService.createResource(model);
        /** @type {?} */
        const msgSuccess = paramId ? this.literals.saveNotificationSuccessUpdate : this.literals.saveNotificationSuccessSave;
        this.emitSuccessMessage(msgSuccess, saveOperation);
    }
}
PoPageJobSchedulerComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-page-job-scheduler',
                template: "<po-page-default\n  [p-actions]=\"jobSchedulerActions\"\n  [p-breadcrumb]=\"breadcrumb\"\n  [p-title]=\"title\">\n\n  <div class=\"po-row\">\n\n    <po-stepper\n      class=\"po-lg-3 po-xl-2\"\n      p-sequential=\"true\"\n      [p-orientation]=\"stepperOrientation\"\n      [p-step]=\"step\"\n      [p-steps]=\"steps\"\n      (p-change-step)=\"nextStep($event)\">\n    </po-stepper>\n\n    <po-container class=\"po-lg-8 po-xl-6\">\n      <form #formScheduler=\"ngForm\">\n        <div class=\"po-row\">\n          <po-page-job-scheduler-execution [hidden]=\"step !== 1\"\n            #schedulerExecution\n            class=\"po-md-12\"\n            [p-is-edit]=\"isEdit\"\n            [p-literals]=\"literals\"\n            [p-value]=\"model\"\n            (p-change-process)=\"onChangeProcess($event)\">\n          </po-page-job-scheduler-execution>\n\n          <po-page-job-scheduler-parameters *ngIf=\"step === 2\"\n            #schedulerParameters\n            class=\"po-md-12\"\n            [p-literals]=\"literals\"\n            [p-parameters]=\"parameters || []\"\n            [(p-value)]=\"model.executionParameter\">\n          </po-page-job-scheduler-parameters>\n\n          <po-page-job-scheduler-summary *ngIf=\"step === 3\"\n            class=\"po-md-12\"\n            [p-literals]=\"literals\"\n            [p-parameters]=\"parameters\"\n            [p-value]=\"model\">\n          </po-page-job-scheduler-summary>\n        </div>\n      </form>\n    </po-container>\n  </div>\n\n</po-page-default>\n",
                encapsulation: ViewEncapsulation.None,
                styles: [`
    po-container .po-container {
      overflow-y: unset;
    }
  `]
            }] }
];
/** @nocollapse */
PoPageJobSchedulerComponent.ctorParameters = () => [
    { type: PoPageJobSchedulerLookupService },
    { type: ActivatedRoute },
    { type: PoDialogService },
    { type: PoNotificationService },
    { type: Router },
    { type: PoPageJobSchedulerService }
];
PoPageJobSchedulerComponent.propDecorators = {
    schedulerExecution: [{ type: ViewChild, args: ['schedulerExecution', { static: true },] }],
    schedulerParameters: [{ type: ViewChild, args: ['schedulerParameters', { static: true },] }]
};
if (false) {
    /** @type {?} */
    PoPageJobSchedulerComponent.prototype.isEdit;
    /** @type {?} */
    PoPageJobSchedulerComponent.prototype.literals;
    /** @type {?} */
    PoPageJobSchedulerComponent.prototype.parameters;
    /** @type {?} */
    PoPageJobSchedulerComponent.prototype.saveOperation;
    /** @type {?} */
    PoPageJobSchedulerComponent.prototype.step;
    /**
     * @type {?}
     * @private
     */
    PoPageJobSchedulerComponent.prototype.backPageAction;
    /**
     * @type {?}
     * @private
     */
    PoPageJobSchedulerComponent.prototype.concludePageActions;
    /**
     * @type {?}
     * @private
     */
    PoPageJobSchedulerComponent.prototype.nextPageActions;
    /** @type {?} */
    PoPageJobSchedulerComponent.prototype.jobSchedulerActions;
    /** @type {?} */
    PoPageJobSchedulerComponent.prototype.steps;
    /** @type {?} */
    PoPageJobSchedulerComponent.prototype.schedulerExecution;
    /** @type {?} */
    PoPageJobSchedulerComponent.prototype.schedulerParameters;
    /** @type {?} */
    PoPageJobSchedulerComponent.prototype.poPageDynamicLookupService;
    /**
     * @type {?}
     * @private
     */
    PoPageJobSchedulerComponent.prototype.activatedRoute;
    /**
     * @type {?}
     * @private
     */
    PoPageJobSchedulerComponent.prototype.poDialogService;
    /**
     * @type {?}
     * @private
     */
    PoPageJobSchedulerComponent.prototype.poNotification;
    /**
     * @type {?}
     * @private
     */
    PoPageJobSchedulerComponent.prototype.router;
}
//# sourceMappingURL=data:application/json;base64,