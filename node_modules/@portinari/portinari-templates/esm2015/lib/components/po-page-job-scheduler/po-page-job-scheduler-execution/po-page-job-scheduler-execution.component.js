/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { NgForm } from '@angular/forms';
import { isTypeof } from '../../../utils/util';
import { PoPageJobSchedulerLookupService } from '../po-page-job-scheduler-lookup.service';
import { PoPageJobSchedulerService } from '../po-page-job-scheduler.service';
export class PoPageJobSchedulerExecutionComponent {
    /**
     * @param {?} poPageJobSchedulerService
     * @param {?} poPageJobSchedulerLookup
     */
    constructor(poPageJobSchedulerService, poPageJobSchedulerLookup) {
        this.poPageJobSchedulerService = poPageJobSchedulerService;
        this.poPageJobSchedulerLookup = poPageJobSchedulerLookup;
        this._value = {};
        this.dayPattern = '^(3[0-1]|[0-2][0-9]|[1-9]|0[1-9])$';
        this.existProcessAPI = true;
        this.minDateFirstExecution = new Date();
        this.periodicityOptions = [];
        this.timePattern = '^(2[0-3]|[01][0-9]):?([0-5][0-9])$';
        this.weekDays = [];
        this.isEdit = false;
        this.literals = (/** @type {?} */ ({}));
        this.changeProcess = new EventEmitter();
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set value(value) {
        this._value = value && isTypeof(value, 'object') ? value : {};
    }
    /**
     * @return {?}
     */
    get value() {
        return this._value;
    }
    /**
     * @return {?}
     */
    get startDateFirstExecution() {
        return this.isEdit ? undefined : this.minDateFirstExecution;
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        setTimeout((/**
         * @return {?}
         */
        () => {
            this.subscribeProcessIdValueChanges();
        }));
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.periodicityTemplates = {
            daily: this.dailyTemplate,
            monthly: this.monthlyTemplate,
            weekly: this.weeklyTempalte
        };
        this.checkExistsProcessesAPI();
        this.periodicityOptions = this.getPeriodicityOptions();
        this.weekDays = this.getWeekDays();
    }
    /**
     * @private
     * @return {?}
     */
    checkExistsProcessesAPI() {
        this.poPageJobSchedulerService.getHeadProcesses().subscribe(undefined, (/**
         * @param {?} error
         * @return {?}
         */
        error => {
            this.existProcessAPI = false;
        }));
    }
    /**
     * @private
     * @return {?}
     */
    getPeriodicityOptions() {
        return [
            { label: this.literals.single, value: 'single' },
            { label: this.literals.daily, value: 'daily' },
            { label: this.literals.weekly, value: 'weekly' },
            { label: this.literals.monthly, value: 'monthly' }
        ];
    }
    /**
     * @private
     * @return {?}
     */
    getWeekDays() {
        return [
            { label: this.literals.sunday, value: 'Sunday' },
            { label: this.literals.monday, value: 'Monday' },
            { label: this.literals.tuesday, value: 'Tuesday' },
            { label: this.literals.wednesday, value: 'Wednesday' },
            { label: this.literals.thursday, value: 'Thursday' },
            { label: this.literals.friday, value: 'Friday' },
            { label: this.literals.saturday, value: 'Saturday' }
        ];
    }
    /**
     * @private
     * @return {?}
     */
    subscribeProcessIdValueChanges() {
        this.form.controls['processID'].valueChanges.subscribe((/**
         * @param {?} processId
         * @return {?}
         */
        processId => {
            this.changeProcess.emit({ processId, existAPI: this.existProcessAPI });
        }));
    }
}
PoPageJobSchedulerExecutionComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-page-job-scheduler-execution',
                template: "<form #formExecution=\"ngForm\">\n  <div class=\"po-row\">\n    <ng-container *ngIf=\"existProcessAPI; then lookupProcessesID; else inputProcessesID\"></ng-container>\n  </div>\n\n  <div class=\"po-row\">\n    <po-divider class=\"po-md-12\" [p-label]=\"literals.firstExecution\"></po-divider>\n\n    <po-datepicker\n      class=\"po-md-4\"\n      name=\"firstExecution\"\n      [(ngModel)]=\"value.firstExecution\"\n      p-placeholder=\"dd/mm/aaaa\"\n      p-required\n      [p-disabled]=\"isEdit\"\n      [p-label]=\"literals.day\"\n      [p-min-date]=\"startDateFirstExecution\">\n    </po-datepicker>\n\n    <po-input\n      class=\"po-md-2\"\n      name=\"firstExecutionHour\"\n      [(ngModel)]=\"value.firstExecutionHour\"\n      p-mask=\"99:99\"\n      p-mask-format-model\n      p-placeholder=\"HH:mm\"\n      p-required\n      [p-disabled]=\"isEdit\"\n      [p-label]=\"literals.hour\"\n      [p-pattern]=\"timePattern\">\n    </po-input>\n\n  </div>\n\n  <hr>\n\n  <div class=\"po-row\">\n    <po-radio-group\n      class=\"po-sm-12\"\n      name=\"periodicity\"\n      [(ngModel)]=\"value.periodicity\"\n      p-columns=\"4\"\n      p-required\n      [p-label]=\"literals.periodicity\"\n      [p-options]=\"periodicityOptions\">\n    </po-radio-group>\n\n    <ng-container *ngIf=\"value.periodicity !== 'single'\">\n      <po-divider class=\"po-md-12\" [p-label]=\"literals.periodicityData\">\n      </po-divider>\n\n      <div class=\"po-row\">\n        <ng-container *ngTemplateOutlet=\"periodicityTemplates[value.periodicity]\">\n        </ng-container>\n      </div>\n\n      <div class=\"po-row\">\n        <po-switch\n          class=\"po-md-3\"\n          name=\"recurrent\"\n          [(ngModel)]=\"value.recurrent\"\n          [p-label]=\"literals.recurrent\"\n          [p-label-off]=\"literals.no\"\n          [p-label-on]=\"literals.yes\">\n        </po-switch>\n      </div>\n    </ng-container>\n  </div>\n\n  <ng-template #lookupProcessesID>\n    <po-lookup\n      class=\"po-md-12\"\n      name=\"processID\"\n      [(ngModel)]=\"value.processID\"\n      p-field-label=\"description\"\n      p-field-value=\"processID\"\n      p-required\n      [p-disabled]=\"isEdit\"\n      [p-filter-service]=\"poPageJobSchedulerLookup\"\n      [p-label]=\"literals.process\"\n      [p-placeholder]=\"literals.enterProcess\">\n    </po-lookup>\n  </ng-template>\n\n  <ng-template #inputProcessesID>\n    <po-input\n      class=\"po-md-12\"\n      name=\"processID\"\n      [(ngModel)]=\"value.processID\"\n      p-required\n      [p-disabled]=\"isEdit\"\n      [p-label]=\"literals.process\"\n      [p-placeholder]=\"literals.enterProcess\">\n    </po-input>\n  </ng-template>\n\n  <ng-template #dailyTemplate>\n    <ng-container *ngTemplateOutlet=\"inputHourTemplate\">\n    </ng-container>\n  </ng-template>\n\n  <ng-template #weeklyTemplate>\n    <div class=\"po-row\">\n      <ng-container *ngTemplateOutlet=\"inputHourTemplate\">\n      </ng-container>\n    </div>\n\n    <po-checkbox-group\n      class=\"po-md-12\"\n      name=\"daysOfWeek\"\n      [(ngModel)]=\"value.daysOfWeek\"\n      p-columns=\"4\"\n      p-required\n      [p-label]=\"literals.weekDays\"\n      [p-options]=\"weekDays\">\n    </po-checkbox-group>\n  </ng-template>\n\n  <ng-template #monthlyTemplate>\n    <po-number\n      class=\"po-md-3\"\n      name=\"dayOfMonth\"\n      [(ngModel)]=\"value.dayOfMonth\"\n      p-required\n      [p-error-pattern]=\"'Dia inv\u00E1lido'\"\n      [p-label]=\"literals.day\"\n      [p-max]=\"31\"\n      [p-pattern]=\"dayPattern\">\n    </po-number>\n\n    <ng-container *ngTemplateOutlet=\"inputHourTemplate\">\n    </ng-container>\n  </ng-template>\n\n  <ng-template #inputHourTemplate>\n    <po-input\n      class=\"po-md-2\"\n      name=\"hour\"\n      [(ngModel)]=\"value.hour\"\n      p-mask=\"99:99\"\n      p-mask-format-model\n      p-placeholder=\"HH:mm\"\n      p-required\n      [p-label]=\"literals.hour\"\n      [p-pattern]=\"timePattern\">\n    </po-input>\n  </ng-template>\n</form>\n"
            }] }
];
/** @nocollapse */
PoPageJobSchedulerExecutionComponent.ctorParameters = () => [
    { type: PoPageJobSchedulerService },
    { type: PoPageJobSchedulerLookupService }
];
PoPageJobSchedulerExecutionComponent.propDecorators = {
    form: [{ type: ViewChild, args: ['formExecution', { static: true },] }],
    dailyTemplate: [{ type: ViewChild, args: ['dailyTemplate', { static: true },] }],
    monthlyTemplate: [{ type: ViewChild, args: ['monthlyTemplate', { static: true },] }],
    weeklyTempalte: [{ type: ViewChild, args: ['weeklyTemplate', { static: true },] }],
    isEdit: [{ type: Input, args: ['p-is-edit',] }],
    literals: [{ type: Input, args: ['p-literals',] }],
    value: [{ type: Input, args: ['p-value',] }],
    changeProcess: [{ type: Output, args: ['p-change-process',] }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoPageJobSchedulerExecutionComponent.prototype._value;
    /** @type {?} */
    PoPageJobSchedulerExecutionComponent.prototype.dayPattern;
    /** @type {?} */
    PoPageJobSchedulerExecutionComponent.prototype.existProcessAPI;
    /** @type {?} */
    PoPageJobSchedulerExecutionComponent.prototype.minDateFirstExecution;
    /** @type {?} */
    PoPageJobSchedulerExecutionComponent.prototype.periodicityOptions;
    /** @type {?} */
    PoPageJobSchedulerExecutionComponent.prototype.periodicityTemplates;
    /** @type {?} */
    PoPageJobSchedulerExecutionComponent.prototype.timePattern;
    /** @type {?} */
    PoPageJobSchedulerExecutionComponent.prototype.weekDays;
    /** @type {?} */
    PoPageJobSchedulerExecutionComponent.prototype.form;
    /** @type {?} */
    PoPageJobSchedulerExecutionComponent.prototype.dailyTemplate;
    /** @type {?} */
    PoPageJobSchedulerExecutionComponent.prototype.monthlyTemplate;
    /** @type {?} */
    PoPageJobSchedulerExecutionComponent.prototype.weeklyTempalte;
    /** @type {?} */
    PoPageJobSchedulerExecutionComponent.prototype.isEdit;
    /** @type {?} */
    PoPageJobSchedulerExecutionComponent.prototype.literals;
    /** @type {?} */
    PoPageJobSchedulerExecutionComponent.prototype.changeProcess;
    /**
     * @type {?}
     * @private
     */
    PoPageJobSchedulerExecutionComponent.prototype.poPageJobSchedulerService;
    /** @type {?} */
    PoPageJobSchedulerExecutionComponent.prototype.poPageJobSchedulerLookup;
}
//# sourceMappingURL=data:application/json;base64,