/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { browserLanguage, convertToBoolean, isTypeof } from './../../utils/util';
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente para definição de cor de fundo e dos logotipos primário e secundário para os templates
 * de `po-page-login` e demais templates de login.
 */
export class PoPageBackgroundComponent {
    constructor() {
        this._showSelectLanguage = false;
        this.selectLanguageOptions = [
            { label: 'English', value: 'en' },
            { label: 'Español', value: 'es' },
            { label: 'Português', value: 'pt' },
            { label: 'Pусский', value: 'ru' }
        ];
        /**
         * Evento disparado ao selecionar alguma opção no seletor de idiomas.
         * Para este evento será passado como parâmetro o valor de idioma selecionado.
         */
        this.selectedLanguage = new EventEmitter();
    }
    /**
     * Caminho para a logomarca localizada na parte superior.
     * @param {?} value
     * @return {?}
     */
    set logo(value) {
        this._logo = isTypeof(value, 'string') && value.trim() ? value : undefined;
    }
    /**
     * @return {?}
     */
    get logo() {
        return this._logo;
    }
    /**
     * \@optional
     *
     * \@description
     *
     * Caminho para a logomarca localizada no rodapé.
     * @param {?} value
     * @return {?}
     */
    set secondaryLogo(value) {
        this._secondaryLogo = isTypeof(value, 'string') && value.trim() ? value : undefined;
    }
    /**
     * @return {?}
     */
    get secondaryLogo() {
        return this._secondaryLogo;
    }
    /**
     * Define se o seletor de idiomas deve ser exibido.
     * @param {?} showSelectLanguage
     * @return {?}
     */
    set showSelectLanguage(showSelectLanguage) {
        this._showSelectLanguage = convertToBoolean(showSelectLanguage);
    }
    /**
     * @return {?}
     */
    get showSelectLanguage() {
        return this._showSelectLanguage;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.selectedLanguageOption = browserLanguage();
    }
    /**
     * @return {?}
     */
    onChangeLanguage() {
        this.selectedLanguage.emit(this.selectedLanguageOption);
    }
}
PoPageBackgroundComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-page-background',
                template: "<div class=\"po-page-login-container\">\n  <div class=\"po-page-login-panel\">\n    <img *ngIf=\"logo\"\n      class=\"po-page-background-main-logo\"\n      [class.po-page-background-hide-logo]=\"hideLogo\"\n      alt=\"main-logo\"\n      [src]=\"logo\">\n\n    <div class=\"po-page-login-body\">\n      <div class=\"po-page-login-panel-content\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n    <div class=\"po-page-background-footer po-sm-12\">\n\n      <po-divider class=\"po-page-background-footer-mobile-only\"></po-divider>\n\n      <div class=\"po-page-background-footer-content\">\n        <div *ngIf=\"showSelectLanguage\" class=\"po-page-background-footer-select\">\n          <po-select\n            name=\"selectedLanguageOption\"\n            [(ngModel)]=\"selectedLanguageOption\"\n            [p-options]=\"selectLanguageOptions\"\n            (p-change) = \"onChangeLanguage()\">\n          </po-select>\n        </div>\n\n        <div class=\"po-page-background-secondary-logo\"\n          [ngClass]=\"showSelectLanguage ? 'po-page-background-secondary-logo-right' : 'po-page-background-secondary-logo-centered'\">\n\n          <img *ngIf=\"secondaryLogo\"\n            class=\"po-page-background-secondary-logo-image\"\n            alt=\"secondary-logo\"\n            [src]=\"secondaryLogo\">\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div *ngIf=\"background\"\n    [ngClass]=\"background ? 'po-page-login-highlight-image' : 'po-page-login-highlight-image-off'\"\n    [style.background-image]=\"'url(' + background + ')'\">\n    <div class=\"po-page-login-highlight-text\">\n      <div class=\"po-font-display\">{{ highlightInfo }}</div>\n    </div>\n  </div>\n</div>\n"
            }] }
];
PoPageBackgroundComponent.propDecorators = {
    background: [{ type: Input, args: ['p-background',] }],
    hideLogo: [{ type: Input, args: ['p-hide-logo',] }],
    highlightInfo: [{ type: Input, args: ['p-highlight-info',] }],
    logo: [{ type: Input, args: ['p-logo',] }],
    secondaryLogo: [{ type: Input, args: ['p-secondary-logo',] }],
    showSelectLanguage: [{ type: Input, args: ['p-show-select-language',] }],
    selectedLanguage: [{ type: Output, args: ['p-selected-language',] }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoPageBackgroundComponent.prototype._logo;
    /**
     * @type {?}
     * @private
     */
    PoPageBackgroundComponent.prototype._secondaryLogo;
    /**
     * @type {?}
     * @private
     */
    PoPageBackgroundComponent.prototype._showSelectLanguage;
    /** @type {?} */
    PoPageBackgroundComponent.prototype.selectedLanguageOption;
    /** @type {?} */
    PoPageBackgroundComponent.prototype.selectLanguageOptions;
    /**
     * Insere uma imagem de destaque ao lado direito do container.
     * @type {?}
     */
    PoPageBackgroundComponent.prototype.background;
    /**
     * Designa se o logotipo deve desaparecer em resoluções menores.
     * @type {?}
     */
    PoPageBackgroundComponent.prototype.hideLogo;
    /**
     * Texto de destaque sobreposto à imagem de destaque. Essa opção é utilizada em conjunto com o atributo `p-background`.
     * @type {?}
     */
    PoPageBackgroundComponent.prototype.highlightInfo;
    /**
     * Evento disparado ao selecionar alguma opção no seletor de idiomas.
     * Para este evento será passado como parâmetro o valor de idioma selecionado.
     * @type {?}
     */
    PoPageBackgroundComponent.prototype.selectedLanguage;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tcGFnZS1iYWNrZ3JvdW5kLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwb3J0aW5hcmkvcG9ydGluYXJpLXRlbXBsYXRlcy8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3BvLXBhZ2UtYmFja2dyb3VuZC9wby1wYWdlLWJhY2tncm91bmQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQVUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRS9FLE9BQU8sRUFBRSxlQUFlLEVBQUUsZ0JBQWdCLEVBQUUsUUFBUSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFRakY7Ozs7Ozs7R0FPRztBQUNILE1BQU0sT0FBTyx5QkFBeUI7SUFidEM7UUFpQlUsd0JBQW1CLEdBQWEsS0FBSyxDQUFDO1FBSTlDLDBCQUFxQixHQUEwQjtZQUM3QyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRTtZQUNqQyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRTtZQUNqQyxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRTtZQUNuQyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRTtTQUNsQyxDQUFDOzs7OztRQStDNkIscUJBQWdCLEdBQXVCLElBQUksWUFBWSxFQUFPLENBQUM7SUFVaEcsQ0FBQzs7Ozs7O0lBN0NDLElBQXFCLElBQUksQ0FBQyxLQUFVO1FBQ2xDLElBQUksQ0FBQyxLQUFLLEdBQUcsUUFBUSxDQUFDLEtBQUssRUFBRSxRQUFRLENBQUMsSUFBSSxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDO0lBQzdFLENBQUM7Ozs7SUFFRCxJQUFJLElBQUk7UUFDTixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDcEIsQ0FBQzs7Ozs7Ozs7OztJQVNELElBQStCLGFBQWEsQ0FBQyxLQUFVO1FBQ3JELElBQUksQ0FBQyxjQUFjLEdBQUcsUUFBUSxDQUFDLEtBQUssRUFBRSxRQUFRLENBQUMsSUFBSSxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDO0lBQ3RGLENBQUM7Ozs7SUFFRCxJQUFJLGFBQWE7UUFDZixPQUFPLElBQUksQ0FBQyxjQUFjLENBQUM7SUFDN0IsQ0FBQzs7Ozs7O0lBR0QsSUFBcUMsa0JBQWtCLENBQUMsa0JBQTJCO1FBQ2pGLElBQUksQ0FBQyxtQkFBbUIsR0FBRyxnQkFBZ0IsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0lBQ2xFLENBQUM7Ozs7SUFDRCxJQUFJLGtCQUFrQjtRQUNwQixPQUFPLElBQUksQ0FBQyxtQkFBbUIsQ0FBQztJQUNsQyxDQUFDOzs7O0lBUUQsUUFBUTtRQUNOLElBQUksQ0FBQyxzQkFBc0IsR0FBRyxlQUFlLEVBQUUsQ0FBQztJQUNsRCxDQUFDOzs7O0lBRUQsZ0JBQWdCO1FBQ2QsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsc0JBQXNCLENBQUMsQ0FBQztJQUMxRCxDQUFDOzs7WUFqRkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxvQkFBb0I7Z0JBQzlCLG9zREFBa0Q7YUFDbkQ7Ozt5QkEwQkUsS0FBSyxTQUFDLGNBQWM7dUJBR3BCLEtBQUssU0FBQyxhQUFhOzRCQUduQixLQUFLLFNBQUMsa0JBQWtCO21CQUd4QixLQUFLLFNBQUMsUUFBUTs0QkFlZCxLQUFLLFNBQUMsa0JBQWtCO2lDQVN4QixLQUFLLFNBQUMsd0JBQXdCOytCQVc5QixNQUFNLFNBQUMscUJBQXFCOzs7Ozs7O0lBMUQ3QiwwQ0FBdUI7Ozs7O0lBQ3ZCLG1EQUFnQzs7Ozs7SUFDaEMsd0RBQThDOztJQUU5QywyREFBK0I7O0lBRS9CLDBEQUtFOzs7OztJQUdGLCtDQUEyQzs7Ozs7SUFHM0MsNkNBQXlDOzs7OztJQUd6QyxrREFBa0Q7Ozs7OztJQXNDbEQscURBQThGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPbkluaXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBicm93c2VyTGFuZ3VhZ2UsIGNvbnZlcnRUb0Jvb2xlYW4sIGlzVHlwZW9mIH0gZnJvbSAnLi8uLi8uLi91dGlscy91dGlsJztcbmltcG9ydCB7IFBvU2VsZWN0T3B0aW9uIH0gZnJvbSAnQHBvcnRpbmFyaS9wb3J0aW5hcmktdWknO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwby1wYWdlLWJhY2tncm91bmQnLFxuICB0ZW1wbGF0ZVVybDogJy4vcG8tcGFnZS1iYWNrZ3JvdW5kLmNvbXBvbmVudC5odG1sJ1xufSlcblxuLyoqXG4gKiBAZG9jc1ByaXZhdGVcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBDb21wb25lbnRlIHBhcmEgZGVmaW5pw6fDo28gZGUgY29yIGRlIGZ1bmRvIGUgZG9zIGxvZ290aXBvcyBwcmltw6FyaW8gZSBzZWN1bmTDoXJpbyBwYXJhIG9zIHRlbXBsYXRlc1xuICogZGUgYHBvLXBhZ2UtbG9naW5gIGUgZGVtYWlzIHRlbXBsYXRlcyBkZSBsb2dpbi5cbiAqL1xuZXhwb3J0IGNsYXNzIFBvUGFnZUJhY2tncm91bmRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gIHByaXZhdGUgX2xvZ28/OiBzdHJpbmc7XG4gIHByaXZhdGUgX3NlY29uZGFyeUxvZ28/OiBzdHJpbmc7XG4gIHByaXZhdGUgX3Nob3dTZWxlY3RMYW5ndWFnZT86IGJvb2xlYW4gPSBmYWxzZTtcblxuICBzZWxlY3RlZExhbmd1YWdlT3B0aW9uOiBzdHJpbmc7XG5cbiAgc2VsZWN0TGFuZ3VhZ2VPcHRpb25zOiBBcnJheTxQb1NlbGVjdE9wdGlvbj4gPSBbXG4gICAgeyBsYWJlbDogJ0VuZ2xpc2gnLCB2YWx1ZTogJ2VuJyB9LFxuICAgIHsgbGFiZWw6ICdFc3Bhw7FvbCcsIHZhbHVlOiAnZXMnIH0sXG4gICAgeyBsYWJlbDogJ1BvcnR1Z3XDqnMnLCB2YWx1ZTogJ3B0JyB9LFxuICAgIHsgbGFiZWw6ICdQ0YPRgdGB0LrQuNC5JywgdmFsdWU6ICdydScgfVxuICBdO1xuXG4gIC8qKiBJbnNlcmUgdW1hIGltYWdlbSBkZSBkZXN0YXF1ZSBhbyBsYWRvIGRpcmVpdG8gZG8gY29udGFpbmVyLiAqL1xuICBASW5wdXQoJ3AtYmFja2dyb3VuZCcpIGJhY2tncm91bmQ/OiBzdHJpbmc7XG5cbiAgLyoqIERlc2lnbmEgc2UgbyBsb2dvdGlwbyBkZXZlIGRlc2FwYXJlY2VyIGVtIHJlc29sdcOnw7VlcyBtZW5vcmVzLiAqL1xuICBASW5wdXQoJ3AtaGlkZS1sb2dvJykgaGlkZUxvZ28/OiBib29sZWFuO1xuXG4gIC8qKiBUZXh0byBkZSBkZXN0YXF1ZSBzb2JyZXBvc3RvIMOgIGltYWdlbSBkZSBkZXN0YXF1ZS4gRXNzYSBvcMOnw6NvIMOpIHV0aWxpemFkYSBlbSBjb25qdW50byBjb20gbyBhdHJpYnV0byBgcC1iYWNrZ3JvdW5kYC4gKi9cbiAgQElucHV0KCdwLWhpZ2hsaWdodC1pbmZvJykgaGlnaGxpZ2h0SW5mbz86IHN0cmluZztcblxuICAvKiogQ2FtaW5obyBwYXJhIGEgbG9nb21hcmNhIGxvY2FsaXphZGEgbmEgcGFydGUgc3VwZXJpb3IuICovXG4gIEBJbnB1dCgncC1sb2dvJykgc2V0IGxvZ28odmFsdWU6IGFueSkge1xuICAgIHRoaXMuX2xvZ28gPSBpc1R5cGVvZih2YWx1ZSwgJ3N0cmluZycpICYmIHZhbHVlLnRyaW0oKSA/IHZhbHVlIDogdW5kZWZpbmVkO1xuICB9XG5cbiAgZ2V0IGxvZ28oKSB7XG4gICAgcmV0dXJuIHRoaXMuX2xvZ287XG4gIH1cblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBDYW1pbmhvIHBhcmEgYSBsb2dvbWFyY2EgbG9jYWxpemFkYSBubyByb2RhcMOpLlxuICAgKi9cbiAgQElucHV0KCdwLXNlY29uZGFyeS1sb2dvJykgc2V0IHNlY29uZGFyeUxvZ28odmFsdWU6IGFueSkge1xuICAgIHRoaXMuX3NlY29uZGFyeUxvZ28gPSBpc1R5cGVvZih2YWx1ZSwgJ3N0cmluZycpICYmIHZhbHVlLnRyaW0oKSA/IHZhbHVlIDogdW5kZWZpbmVkO1xuICB9XG5cbiAgZ2V0IHNlY29uZGFyeUxvZ28oKSB7XG4gICAgcmV0dXJuIHRoaXMuX3NlY29uZGFyeUxvZ287XG4gIH1cblxuICAvKiogRGVmaW5lIHNlIG8gc2VsZXRvciBkZSBpZGlvbWFzIGRldmUgc2VyIGV4aWJpZG8uICovXG4gIEBJbnB1dCgncC1zaG93LXNlbGVjdC1sYW5ndWFnZScpIHNldCBzaG93U2VsZWN0TGFuZ3VhZ2Uoc2hvd1NlbGVjdExhbmd1YWdlOiBib29sZWFuKSB7XG4gICAgdGhpcy5fc2hvd1NlbGVjdExhbmd1YWdlID0gY29udmVydFRvQm9vbGVhbihzaG93U2VsZWN0TGFuZ3VhZ2UpO1xuICB9XG4gIGdldCBzaG93U2VsZWN0TGFuZ3VhZ2UoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3Nob3dTZWxlY3RMYW5ndWFnZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBFdmVudG8gZGlzcGFyYWRvIGFvIHNlbGVjaW9uYXIgYWxndW1hIG9ww6fDo28gbm8gc2VsZXRvciBkZSBpZGlvbWFzLlxuICAgKiBQYXJhIGVzdGUgZXZlbnRvIHNlcsOhIHBhc3NhZG8gY29tbyBwYXLDom1ldHJvIG8gdmFsb3IgZGUgaWRpb21hIHNlbGVjaW9uYWRvLlxuICAgKi9cbiAgQE91dHB1dCgncC1zZWxlY3RlZC1sYW5ndWFnZScpIHNlbGVjdGVkTGFuZ3VhZ2U/OiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuc2VsZWN0ZWRMYW5ndWFnZU9wdGlvbiA9IGJyb3dzZXJMYW5ndWFnZSgpO1xuICB9XG5cbiAgb25DaGFuZ2VMYW5ndWFnZSgpIHtcbiAgICB0aGlzLnNlbGVjdGVkTGFuZ3VhZ2UuZW1pdCh0aGlzLnNlbGVjdGVkTGFuZ3VhZ2VPcHRpb24pO1xuICB9XG5cbn1cbiJdfQ==