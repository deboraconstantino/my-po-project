/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewChild } from '@angular/core';
import { NgForm } from '@angular/forms';
import { Router } from '@angular/router';
import { isExternalLink } from '../../utils/util';
import { PoI18nPipe, PoModalComponent } from '@portinari/portinari-ui';
import { PoModalPasswordRecoveryBaseComponent } from './po-modal-password-recovery-base.component';
import { PoModalPasswordRecoveryModalContent } from './enums/po-modal-password-recovery-modal-content.enum';
import { PoModalPasswordRecoveryService } from './po-modal-password-recovery.service';
import { PoModalPasswordRecoveryType } from './enums/po-modal-password-recovery-type.enum';
/**
 * \@docsExtends PoModalPasswordRecoveryBaseComponent
 *
 * \@example
 *
 * <example name="po-modal-password-recovery-basic" title="Portinari Modal Password Recovery Basic">
 *  <file name="sample-po-modal-password-recovery-basic/sample-po-modal-password-recovery-basic.component.html"> </file>
 *  <file name="sample-po-modal-password-recovery-basic/sample-po-modal-password-recovery-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-modal-password-recovery-labs" title="Portinari Modal Password Recovery Labs">
 *  <file name="sample-po-modal-password-recovery-labs/sample-po-modal-password-recovery-labs.component.html"> </file>
 *  <file name="sample-po-modal-password-recovery-labs/sample-po-modal-password-recovery-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-modal-password-recovery-request" title="Portinari Modal Password Recovery Request">
 *  <file name="sample-po-modal-password-recovery-request/sample-po-modal-password-recovery-request.component.html"> </file>
 *  <file name="sample-po-modal-password-recovery-request/sample-po-modal-password-recovery-request.component.ts"> </file>
 * </example>
 */
export class PoModalPasswordRecoveryComponent extends PoModalPasswordRecoveryBaseComponent {
    /**
     * @param {?} router
     * @param {?} poI18nPipe
     * @param {?} poModalPasswordRecoveryService
     */
    constructor(router, poI18nPipe, poModalPasswordRecoveryService) {
        super();
        this.router = router;
        this.poI18nPipe = poI18nPipe;
        this.poModalPasswordRecoveryService = poModalPasswordRecoveryService;
        this.chosenTypeFormOption = PoModalPasswordRecoveryType.Email;
        this.codeMask = '9 9 9 9 9 9';
        this.emailModal = true;
        this.emailModalPhrases = { firstPhrase: (/** @type {?} */ (null)), secondPhrase: (/** @type {?} */ (null)) };
        this.endpoint = '.';
        this.invalidCode = false;
        this.invalidEmail = false;
        this.modalType = PoModalPasswordRecoveryModalContent.Email;
        this.submittedCodeValue = (/** @type {?} */ ({}));
        this.submittedContactValue = (/** @type {?} */ ({}));
        this.primaryAction = { label: undefined, action: (/**
             * @return {?}
             */
            () => { }) };
        this.secondaryAction = { label: undefined, action: (/**
             * @return {?}
             */
            () => { }) };
        this.typeFormOptions = [
            { label: 'e-mail', value: PoModalPasswordRecoveryType.Email },
            { label: 'SMS', value: PoModalPasswordRecoveryType.SMS }
        ];
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        if (this.passwordRecoverySubscription) {
            this.passwordRecoverySubscription.unsubscribe();
        }
        if (this.smsCodeSubscription) {
            this.smsCodeSubscription.unsubscribe();
        }
    }
    /**
     * @return {?}
     */
    completed() {
        this.cancelAction();
    }
    /**
     * @param {?} form
     * @return {?}
     */
    formModelChangesCheck(form) {
        /** @type {?} */
        const invalidForm = form.invalid;
        this.invalidEmail = invalidForm && form.dirty;
        this.primaryAction.disabled = invalidForm;
        if (this.modalType === PoModalPasswordRecoveryModalContent.SMSCode) {
            /** @type {?} */
            const codeError = this.codeError !== undefined && this.codeError !== '';
            this.showCustomCodeError = codeError && form.pristine;
        }
    }
    /**
     * @param {?} type
     * @return {?}
     */
    getInputType(type) {
        this.type = type;
        this.pipeModalPhrases();
        setTimeout((/**
         * @return {?}
         */
        () => {
            this.control = this.emailForm.controls[type];
            this.formModelChangesCheck(this.emailForm);
            this.resetFormFields(this.control);
        }));
    }
    /**
     * @return {?}
     */
    open() {
        /** @type {?} */
        const control = this.checkFormType(this.type);
        this.control = this.emailForm.controls[control];
        this.setEmailModalPhrasesAndActions();
        this.formModelChangesCheck(this.emailForm);
        this.recoveryModalElement.open();
    }
    /**
     * @return {?}
     */
    openConfirmation() {
        this.modalTitle = this.literals.emailSentTitle;
        this.modalType = PoModalPasswordRecoveryModalContent.Confirmation;
        this.setActions(this.cancelAction, this.literals.closeButton, this.submitAction, this.literals.resendEmailButton, false);
    }
    /**
     * @return {?}
     */
    openSmsCode() {
        this.modalTitle = this.literals.typeCodeTitle;
        this.modalType = PoModalPasswordRecoveryModalContent.SMSCode;
        this.setActions(this.submitSmsCodeAction, this.literals.continueButton, this.cancelAction, this.literals.cancelButton, true);
        setTimeout((/**
         * @return {?}
         */
        () => {
            this.control = this.smsCodeForm.controls['sms'];
            this.formModelChangesCheck(this.smsCodeForm);
        }));
    }
    /**
     * @return {?}
     */
    resendSmsCode() {
        this.incrementRetryAttempts();
        if (this.urlRecovery) {
            this.submitActionRequest(this.submittedContactValue, this.type);
        }
        else {
            this.submit.emit(this.submittedContactValue);
        }
    }
    /**
     * @private
     * @param {?} responseObj
     * @return {?}
     */
    assignSmsResponse(responseObj) {
        this.smsBodyResponse = Object.assign({}, { hash: responseObj.hash });
        if (responseObj.urlValidationCode) {
            this.smsBodyResponse = Object.assign(this.smsBodyResponse, { urlValidationCode: responseObj.urlValidationCode });
        }
    }
    /**
     * @private
     * @return {?}
     */
    cancelAction() {
        this.resetFormFields(this.control);
        this.submittedContactValue = {};
        this.chosenTypeFormOption = PoModalPasswordRecoveryType.Email;
        this.modalType = PoModalPasswordRecoveryModalContent.Email;
        this.type = this.modalPasswordRecoveryTypeAll ? PoModalPasswordRecoveryType.All : this.type;
        this.recoveryModalElement.close();
    }
    /**
     * @private
     * @param {?} type
     * @return {?}
     */
    checkFormType(type) {
        return type !== PoModalPasswordRecoveryType.All ? type : PoModalPasswordRecoveryType.Email;
    }
    /**
     * @private
     * @param {?} control
     * @return {?}
     */
    formReset(control) {
        control.markAsPristine();
        control.markAsUntouched();
        control.updateValueAndValidity();
    }
    /**
     * @private
     * @param {?} type
     * @return {?}
     */
    getEmitValue(type) {
        return type === PoModalPasswordRecoveryType.SMS ? this.phone : this.email;
    }
    /**
     * @private
     * @return {?}
     */
    incrementRetryAttempts() {
        this.submittedContactValue.retry = (this.submittedContactValue.retry + 1 || 1);
    }
    /**
     * @private
     * @param {?} url
     * @param {?} queryParam
     * @return {?}
     */
    openExternalLink(url, queryParam) {
        window.open(`${url}?token=${queryParam}`, '_self');
    }
    /**
     * @private
     * @param {?} url
     * @param {?} endpoint
     * @param {?} queryParam
     * @return {?}
     */
    openInternalLink(url, endpoint, queryParam) {
        this.router.navigate([`${url}/${endpoint}`], { queryParams: { token: queryParam } });
    }
    /**
     * @private
     * @return {?}
     */
    pipeModalPhrases() {
        if (this.type === PoModalPasswordRecoveryType.SMS) {
            this.emailModalPhrases.firstPhrase = this.setPipeArguments(this.literals.recoveryPasswordPhrase, this.literals.sms);
            this.emailModalPhrases.secondPhrase = this.setPipeArguments(this.literals.supportContact, this.literals.telephone);
        }
        else {
            this.emailModalPhrases.firstPhrase = this.setPipeArguments(this.literals.recoveryPasswordPhrase, this.literals.email);
            this.emailModalPhrases.secondPhrase = this.setPipeArguments(this.literals.supportContact, this.literals.email);
        }
    }
    /**
     * @private
     * @param {?} recoveryToken
     * @return {?}
     */
    redirectToChangePassword(recoveryToken) {
        /** @type {?} */
        const urlChangePassword = recoveryToken.urlChangePassword;
        if (urlChangePassword) {
            isExternalLink(urlChangePassword) ?
                this.openExternalLink(urlChangePassword, recoveryToken.token) :
                this.openInternalLink(this.urlRecovery, urlChangePassword, recoveryToken.token);
        }
        else {
            /** @type {?} */
            const changePasswordEndpoint = 'changePassword';
            this.openInternalLink(this.urlRecovery, changePasswordEndpoint, recoveryToken.token);
        }
    }
    /**
     * @private
     * @param {?} control
     * @return {?}
     */
    resetFormFields(control) {
        this.formReset(control);
        this.email = undefined;
        this.phone = undefined;
        this.smsCode = undefined;
    }
    /**
     * @private
     * @param {?} primaryAction
     * @param {?} primarylabel
     * @param {?} secondaryAction
     * @param {?} secondaryLabel
     * @param {?} disabled
     * @return {?}
     */
    setActions(primaryAction, primarylabel, secondaryAction, secondaryLabel, disabled) {
        this.primaryAction.action = (/**
         * @return {?}
         */
        () => primaryAction.call(this));
        this.primaryAction.label = primarylabel;
        this.secondaryAction.action = (/**
         * @return {?}
         */
        () => secondaryAction.call(this));
        this.secondaryAction.label = secondaryLabel;
        this.primaryAction.disabled = disabled;
    }
    /**
     * @private
     * @return {?}
     */
    setEmailModalPhrasesAndActions() {
        this.modalTitle = this.literals.forgotPasswordTitle;
        this.pipeModalPhrases();
        this.modalPasswordRecoveryTypeAll = this.type === PoModalPasswordRecoveryType.All;
        this.setActions(this.submitAction, this.literals.sendButton, this.cancelAction, this.literals.cancelButton, true);
    }
    /**
     * @private
     * @param {?=} urlValidationCode
     * @return {?}
     */
    setRequestEndpoint(urlValidationCode) {
        /** @type {?} */
        const endpoint = urlValidationCode || 'validation';
        return `${this.urlRecovery}/${endpoint}`;
    }
    /**
     * @private
     * @param {?} literalAttr
     * @param {?} arg
     * @return {?}
     */
    setPipeArguments(literalAttr, arg) {
        return this.poI18nPipe.transform(literalAttr, arg);
    }
    /**
     * @private
     * @return {?}
     */
    submitAction() {
        this.modalType === PoModalPasswordRecoveryModalContent.Confirmation ? this.incrementRetryAttempts() : this.formReset(this.control);
        this.submittedContactValue[this.checkFormType(this.type)] = this.getEmitValue(this.type);
        if (this.urlRecovery) {
            this.submitActionRequest(this.submittedContactValue, this.type);
        }
        else {
            this.submit.emit(this.submittedContactValue);
        }
    }
    /**
     * @private
     * @param {?} data
     * @param {?} modalType
     * @return {?}
     */
    submitActionRequest(data, modalType) {
        /** @type {?} */
        const params = modalType === PoModalPasswordRecoveryType.SMS ? { type: 'sms' } : undefined;
        this.passwordRecoverySubscription =
            this.poModalPasswordRecoveryService.post(this.urlRecovery, data, params)
                .subscribe((/**
             * @param {?} response
             * @return {?}
             */
            response => {
                if ((modalType === PoModalPasswordRecoveryType.Email || modalType === PoModalPasswordRecoveryType.All) && response.status === 204) {
                    this.openConfirmation();
                }
                else if (modalType === PoModalPasswordRecoveryType.SMS && response.status === 200) {
                    this.assignSmsResponse(response.body);
                    this.openSmsCode();
                }
            }));
    }
    /**
     * @private
     * @return {?}
     */
    submitSmsCodeAction() {
        this.submittedCodeValue.code = this.smsCode;
        if (this.urlRecovery) {
            this.submittedCodeValue = Object.assign(this.submittedCodeValue, { hash: this.smsBodyResponse.hash });
            this.submitSmsCodeRequest(this.submittedCodeValue);
        }
        else {
            this.codeSubmit.emit(this.submittedCodeValue);
        }
        this.resetFormFields(this.control);
    }
    /**
     * @private
     * @param {?} data
     * @return {?}
     */
    submitSmsCodeRequest(data) {
        this.smsCodeSubscription = this.poModalPasswordRecoveryService
            .post(this.setRequestEndpoint(this.smsBodyResponse.urlValidationCode), data)
            .subscribe((/**
         * @param {?} response
         * @return {?}
         */
        response => {
            /** @type {?} */
            const successStatus = response.status === 200;
            if (successStatus) {
                this.completed();
                this.redirectToChangePassword(response.body);
            }
        }), (/**
         * @param {?} error
         * @return {?}
         */
        error => {
            this.codeError = error.error.message;
            this.openSmsCode();
        }));
    }
}
PoModalPasswordRecoveryComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-modal-password-recovery',
                template: "<po-modal #recoveryModal\n  p-hide-close\n  p-size=\"auto\"\n  [ngSwitch]=\"modalType\"\n  [p-primary-action]=\"primaryAction\"\n  [p-secondary-action]=\"secondaryAction\"\n  [p-title]=\"modalTitle\"> \n  <div class=\"po-modal-password-recovery-wrapper\">\n    <div *ngSwitchCase=\"'email'\" class=\"po-modal-password-recovery-content po-row\">\n      <div class=\"po-modal-password-recovery-text po-md-12 po-mb-1\">\n        {{ emailModalPhrases.firstPhrase }}\n      </div>\n      <div class=\"po-mb-2 po-md-12\">\n        <form #emailForm=\"ngForm\">\n\n          <div *ngIf=\"modalPasswordRecoveryTypeAll\">\n            <po-radio-group \n              name=\"type\"\n              [(ngModel)]=\"chosenTypeFormOption\"\n              [p-options]=\"typeFormOptions\"\n              (p-change)=\"getInputType($event)\">\n            </po-radio-group>\n          </div>\n\n          <div class=\"po-mt-1\">\n            <po-email *ngIf=\"type === 'email' || type === 'all'\"\n              name=\"email\"\n              [(ngModel)]=\"email\"\n              p-required\n              [p-label]=\"literals.insertEmail\"\n              (p-change-model)=\"formModelChangesCheck(emailForm)\">\n            </po-email>\n    \n            <po-input *ngIf=\"type === 'sms'\"\n              name=\"sms\"\n              [(ngModel)]=\"phone\"\n              p-icon=\"po-icon-telephone\"\n              p-required\n              [p-label]=\"literals.insertPhone\"\n              [p-mask]=\"phoneMask\"\n              [p-maxlength]=\"maxLength\"\n              [p-minlength]=\"minLength\"\n              (p-change-model)=\"formModelChangesCheck(emailForm)\">\n            </po-input>\n          </div>\n          \n          <div class=\"po-field-container-bottom po-field-container-error-container\">\n            <po-modal-password-recovery-error-message *ngIf=\"invalidEmail && control.dirty\" \n              [p-text]=\"type === 'sms' ? literals.phoneErrorMessagePhrase : literals.emailErrorMessagePhrase\">\n            </po-modal-password-recovery-error-message>\n          </div>\n        </form>\n      </div>\n      <div class=\"po-modal-password-recovery-text po-md-12\">{{ emailModalPhrases.secondPhrase }}<span *ngIf=\"contactEmail\">\n        {{ literals.prepositionIn }} \n          <a class=\"po-modal-password-recovery-link\" href=\"mailto:{{ contactEmail }}\" target=\"_self\">{{ contactEmail }}</a>\n        </span>{{ endpoint }}\n      </div>\n    </div>\n\n    <div #smsCodeModal *ngSwitchCase=\"'smsCode'\" class=\"po-modal-password-recovery-content po-row\">\n      <div class=\"po-modal-password-recovery-text po-md-12 po-mb-1\">{{ literals.sentSmsCodePhrase }}</div>\n      <div class=\"po-mb-2 po-md-12\">\n        <form #smsCodeForm=\"ngForm\">\n          <po-input\n            name=\"sms\"\n            [(ngModel)]=\"smsCode\"\n            p-maxlength=\"11\"\n            p-minlength=\"11\"\n            p-required\n            [p-label]=\"literals.insertCode\"\n            [p-mask]=\"codeMask\"\n            (p-change-model)=\"formModelChangesCheck(smsCodeForm)\">\n          </po-input>\n          <div class=\"po-field-container-bottom po-field-container-error-container\">\n            <po-modal-password-recovery-error-message *ngIf=\"invalidEmail\"\n              [p-text]=\"smsCodeErrorMessage || this.literals.smsCodeErrorMessagePhrase\">\n            </po-modal-password-recovery-error-message>\n            <po-modal-password-recovery-error-message *ngIf=\"showCustomCodeError\"\n              [p-text]=\"codeError\">\n            </po-modal-password-recovery-error-message>\n          </div>\n        </form>\n      </div>\n      <div class=\"po-modal-password-recovery-text po-md-12\">\n        {{ literals.sendAgainPhrase }} \n        <span class=\"po-modal-password-recovery-link\" (click)=\"resendSmsCode()\">{{ literals.sendAgain }}</span>\n      </div>\n    </div>\n    \n    <div #confirmationModal *ngSwitchCase=\"'confirmation'\" class=\"po-modal-password-recovery-content po-row\">\n      <img \n        class=\"po-modal-password-recovery-user-image po-mb-2\" \n        src=\"./assets/images/email-sent.svg\"> \n      <div class=\"po-modal-password-recovery-text\">\n        {{ literals.emailSentConfirmationPhrase }}\n      </div>\n    </div>\n  </div>\n</po-modal>\n"
            }] }
];
/** @nocollapse */
PoModalPasswordRecoveryComponent.ctorParameters = () => [
    { type: Router },
    { type: PoI18nPipe },
    { type: PoModalPasswordRecoveryService }
];
PoModalPasswordRecoveryComponent.propDecorators = {
    emailForm: [{ type: ViewChild, args: ['emailForm', { static: false },] }],
    recoveryModalElement: [{ type: ViewChild, args: ['recoveryModal', { static: true },] }],
    smsCodeForm: [{ type: ViewChild, args: ['smsCodeForm', { static: false },] }]
};
if (false) {
    /** @type {?} */
    PoModalPasswordRecoveryComponent.prototype.chosenTypeFormOption;
    /** @type {?} */
    PoModalPasswordRecoveryComponent.prototype.codeMask;
    /** @type {?} */
    PoModalPasswordRecoveryComponent.prototype.control;
    /** @type {?} */
    PoModalPasswordRecoveryComponent.prototype.emailModal;
    /** @type {?} */
    PoModalPasswordRecoveryComponent.prototype.emailModalPhrases;
    /** @type {?} */
    PoModalPasswordRecoveryComponent.prototype.endpoint;
    /** @type {?} */
    PoModalPasswordRecoveryComponent.prototype.invalidCode;
    /** @type {?} */
    PoModalPasswordRecoveryComponent.prototype.invalidEmail;
    /** @type {?} */
    PoModalPasswordRecoveryComponent.prototype.modalTitle;
    /** @type {?} */
    PoModalPasswordRecoveryComponent.prototype.modalType;
    /** @type {?} */
    PoModalPasswordRecoveryComponent.prototype.showCustomCodeError;
    /** @type {?} */
    PoModalPasswordRecoveryComponent.prototype.smsCodeErrorMessagePhrase;
    /** @type {?} */
    PoModalPasswordRecoveryComponent.prototype.submittedCodeValue;
    /** @type {?} */
    PoModalPasswordRecoveryComponent.prototype.submittedContactValue;
    /**
     * @type {?}
     * @private
     */
    PoModalPasswordRecoveryComponent.prototype.passwordRecoverySubscription;
    /**
     * @type {?}
     * @private
     */
    PoModalPasswordRecoveryComponent.prototype.smsBodyResponse;
    /**
     * @type {?}
     * @private
     */
    PoModalPasswordRecoveryComponent.prototype.smsCodeSubscription;
    /** @type {?} */
    PoModalPasswordRecoveryComponent.prototype.emailForm;
    /** @type {?} */
    PoModalPasswordRecoveryComponent.prototype.recoveryModalElement;
    /** @type {?} */
    PoModalPasswordRecoveryComponent.prototype.smsCodeForm;
    /** @type {?} */
    PoModalPasswordRecoveryComponent.prototype.primaryAction;
    /** @type {?} */
    PoModalPasswordRecoveryComponent.prototype.secondaryAction;
    /** @type {?} */
    PoModalPasswordRecoveryComponent.prototype.typeFormOptions;
    /**
     * @type {?}
     * @private
     */
    PoModalPasswordRecoveryComponent.prototype.router;
    /**
     * @type {?}
     * @private
     */
    PoModalPasswordRecoveryComponent.prototype.poI18nPipe;
    /**
     * @type {?}
     * @private
     */
    PoModalPasswordRecoveryComponent.prototype.poModalPasswordRecoveryService;
}
//# sourceMappingURL=data:application/json;base64,