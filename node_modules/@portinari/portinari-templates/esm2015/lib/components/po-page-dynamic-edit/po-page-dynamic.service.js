/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { HttpClient, HttpHeaders } from '@angular/common/http';
import { map } from 'rxjs/operators';
export class PoPageDynamicService {
    /**
     * @param {?} http
     */
    constructor(http) {
        this.http = http;
        this.endpoint = '/';
        this.headers = new HttpHeaders({
            'X-PORTINARI-SCREEN-LOCK': 'true'
        });
    }
    /**
     * @param {?=} config
     * @return {?}
     */
    configServiceApi(config = {}) {
        this.endpoint = config.endpoint;
        this.metadata = config.metadata || this.metadata;
    }
    /**
     * @param {?=} type
     * @return {?}
     */
    getMetadata(type = 'list') {
        /** @type {?} */
        const key = `${this.endpoint}-${type}-metadata`;
        /** @type {?} */
        const cache = JSON.parse(localStorage.getItem(key)) || {};
        /** @type {?} */
        const metadataUrlBase = this.metadata || `${this.endpoint}/metadata`;
        /** @type {?} */
        const url = `${metadataUrlBase}?type=${type}&version=${cache.version || ''}`;
        return this.http.get(url).pipe(map((/**
         * @param {?} response
         * @return {?}
         */
        (response) => {
            if (response.version === cache.version) {
                return cache;
            }
            localStorage.setItem(key, JSON.stringify(response));
            return Object.assign({}, cache, response);
        })));
    }
    // Deleta um único recurso
    /**
     * @param {?} id
     * @return {?}
     */
    deleteResource(id) {
        return this.http.delete(`${this.endpoint}/${id}`, { headers: this.headers });
    }
    // Deleta recursos em lote
    /**
     * @param {?} ids
     * @return {?}
     */
    deleteResources(ids) {
        return this.http.request('delete', `${this.endpoint}`, { headers: this.headers, body: ids });
    }
    // Busca uma lista de recursos
    /**
     * @param {?=} params
     * @return {?}
     */
    getResources(params = {}) {
        return this.http.get(this.endpoint, { headers: this.headers, params });
    }
    // Busca um único recurso
    /**
     * @param {?} id
     * @return {?}
     */
    getResource(id) {
        return this.http.get(`${this.endpoint}/${id}`, { headers: this.headers });
    }
    // Cria um recurso
    /**
     * @param {?} resource
     * @return {?}
     */
    createResource(resource) {
        return this.http.post(`${this.endpoint}`, resource, { headers: this.headers });
    }
    // Atualiza um recurso
    /**
     * @param {?} id
     * @param {?} resource
     * @return {?}
     */
    updateResource(id, resource) {
        return this.http.put(`${this.endpoint}/${id}`, resource, { headers: this.headers });
    }
}
PoPageDynamicService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
PoPageDynamicService.ctorParameters = () => [
    { type: HttpClient }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoPageDynamicService.prototype.endpoint;
    /**
     * @type {?}
     * @private
     */
    PoPageDynamicService.prototype.metadata;
    /** @type {?} */
    PoPageDynamicService.prototype.headers;
    /**
     * @type {?}
     * @private
     */
    PoPageDynamicService.prototype.http;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tcGFnZS1keW5hbWljLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcG9ydGluYXJpL3BvcnRpbmFyaS10ZW1wbGF0ZXMvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby1wYWdlLWR5bmFtaWMtZWRpdC9wby1wYWdlLWR5bmFtaWMuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBRy9ELE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUdyQyxNQUFNLE9BQU8sb0JBQW9COzs7O0lBUy9CLFlBQW9CLElBQWdCO1FBQWhCLFNBQUksR0FBSixJQUFJLENBQVk7UUFQNUIsYUFBUSxHQUFHLEdBQUcsQ0FBQztRQUdkLFlBQU8sR0FBZ0IsSUFBSSxXQUFXLENBQUM7WUFDOUMseUJBQXlCLEVBQUUsTUFBTTtTQUNsQyxDQUFDLENBQUM7SUFFcUMsQ0FBQzs7Ozs7SUFFekMsZ0JBQWdCLENBQUMsU0FBbUQsRUFBRTtRQUNwRSxJQUFJLENBQUMsUUFBUSxHQUFHLE1BQU0sQ0FBQyxRQUFRLENBQUM7UUFDaEMsSUFBSSxDQUFDLFFBQVEsR0FBRyxNQUFNLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDbkQsQ0FBQzs7Ozs7SUFFRCxXQUFXLENBQUMsT0FBZSxNQUFNOztjQUN6QixHQUFHLEdBQUcsR0FBRyxJQUFJLENBQUMsUUFBUSxJQUFJLElBQUksV0FBVzs7Y0FDekMsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLEVBQUU7O2NBQ25ELGVBQWUsR0FBRyxJQUFJLENBQUMsUUFBUSxJQUFJLEdBQUcsSUFBSSxDQUFDLFFBQVEsV0FBVzs7Y0FFOUQsR0FBRyxHQUFHLEdBQUcsZUFBZSxTQUFTLElBQUksWUFBWSxLQUFLLENBQUMsT0FBTyxJQUFJLEVBQUUsRUFBRTtRQUU1RSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHOzs7O1FBQUMsQ0FBQyxRQUFhLEVBQUUsRUFBRTtZQUNuRCxJQUFJLFFBQVEsQ0FBQyxPQUFPLEtBQUssS0FBSyxDQUFDLE9BQU8sRUFBRTtnQkFDdEMsT0FBTyxLQUFLLENBQUM7YUFDZDtZQUVELFlBQVksQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUVwRCx5QkFBYSxLQUFLLEVBQUssUUFBUSxFQUFHO1FBQ3BDLENBQUMsRUFBQyxDQUFDLENBQUM7SUFDTixDQUFDOzs7Ozs7SUFHRCxjQUFjLENBQUMsRUFBRTtRQUNmLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUMsUUFBUSxJQUFJLEVBQUUsRUFBRSxFQUFFLEVBQUUsT0FBTyxFQUFFLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDO0lBQy9FLENBQUM7Ozs7OztJQUdELGVBQWUsQ0FBQyxHQUFlO1FBQzdCLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLEdBQUcsSUFBSSxDQUFDLFFBQVEsRUFBRSxFQUFFLEVBQUUsT0FBTyxFQUFFLElBQUksQ0FBQyxPQUFPLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxDQUFFLENBQUM7SUFDaEcsQ0FBQzs7Ozs7O0lBR0QsWUFBWSxDQUFDLFNBQWEsRUFBRTtRQUMxQixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLE9BQU8sRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFDO0lBQ3pFLENBQUM7Ozs7OztJQUdELFdBQVcsQ0FBQyxFQUFFO1FBQ1osT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxRQUFRLElBQUksRUFBRSxFQUFFLEVBQUUsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUM7SUFDNUUsQ0FBQzs7Ozs7O0lBR0QsY0FBYyxDQUFDLFFBQVE7UUFDckIsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxRQUFRLEVBQUUsRUFBRSxRQUFRLEVBQUUsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUM7SUFDakYsQ0FBQzs7Ozs7OztJQUdELGNBQWMsQ0FBQyxFQUFFLEVBQUUsUUFBUTtRQUN6QixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDLFFBQVEsSUFBSSxFQUFFLEVBQUUsRUFBRSxRQUFRLEVBQUUsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUM7SUFDdEYsQ0FBQzs7O1lBL0RGLFVBQVU7Ozs7WUFMRixVQUFVOzs7Ozs7O0lBUWpCLHdDQUF1Qjs7Ozs7SUFDdkIsd0NBQXlCOztJQUV6Qix1Q0FFRzs7Ozs7SUFFUyxvQ0FBd0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBIdHRwQ2xpZW50LCBIdHRwSGVhZGVycyB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcblxuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgbWFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgUG9QYWdlRHluYW1pY1NlcnZpY2Uge1xuXG4gIHByaXZhdGUgZW5kcG9pbnQgPSAnLyc7XG4gIHByaXZhdGUgbWV0YWRhdGE6IHN0cmluZztcblxuICByZWFkb25seSBoZWFkZXJzOiBIdHRwSGVhZGVycyA9IG5ldyBIdHRwSGVhZGVycyh7XG4gICAgJ1gtUE9SVElOQVJJLVNDUkVFTi1MT0NLJzogJ3RydWUnXG4gIH0pO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgaHR0cDogSHR0cENsaWVudCkgeyB9XG5cbiAgY29uZmlnU2VydmljZUFwaShjb25maWc6IHsgZW5kcG9pbnQ/OiBzdHJpbmcsIG1ldGFkYXRhPzogc3RyaW5nIH0gPSB7fSkge1xuICAgIHRoaXMuZW5kcG9pbnQgPSBjb25maWcuZW5kcG9pbnQ7XG4gICAgdGhpcy5tZXRhZGF0YSA9IGNvbmZpZy5tZXRhZGF0YSB8fCB0aGlzLm1ldGFkYXRhO1xuICB9XG5cbiAgZ2V0TWV0YWRhdGEodHlwZTogc3RyaW5nID0gJ2xpc3QnKTogT2JzZXJ2YWJsZTxhbnk+IHtcbiAgICBjb25zdCBrZXkgPSBgJHt0aGlzLmVuZHBvaW50fS0ke3R5cGV9LW1ldGFkYXRhYDtcbiAgICBjb25zdCBjYWNoZSA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oa2V5KSkgfHwge307XG4gICAgY29uc3QgbWV0YWRhdGFVcmxCYXNlID0gdGhpcy5tZXRhZGF0YSB8fCBgJHt0aGlzLmVuZHBvaW50fS9tZXRhZGF0YWA7XG5cbiAgICBjb25zdCB1cmwgPSBgJHttZXRhZGF0YVVybEJhc2V9P3R5cGU9JHt0eXBlfSZ2ZXJzaW9uPSR7Y2FjaGUudmVyc2lvbiB8fCAnJ31gO1xuXG4gICAgcmV0dXJuIHRoaXMuaHR0cC5nZXQodXJsKS5waXBlKG1hcCgocmVzcG9uc2U6IGFueSkgPT4ge1xuICAgICAgaWYgKHJlc3BvbnNlLnZlcnNpb24gPT09IGNhY2hlLnZlcnNpb24pIHtcbiAgICAgICAgcmV0dXJuIGNhY2hlO1xuICAgICAgfVxuXG4gICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShrZXksIEpTT04uc3RyaW5naWZ5KHJlc3BvbnNlKSk7XG5cbiAgICAgIHJldHVybiAgeyAuLi5jYWNoZSwgLi4ucmVzcG9uc2UgfTtcbiAgICB9KSk7XG4gIH1cblxuICAvLyBEZWxldGEgdW0gw7puaWNvIHJlY3Vyc29cbiAgZGVsZXRlUmVzb3VyY2UoaWQpOiBPYnNlcnZhYmxlPGFueT4ge1xuICAgIHJldHVybiB0aGlzLmh0dHAuZGVsZXRlKGAke3RoaXMuZW5kcG9pbnR9LyR7aWR9YCwgeyBoZWFkZXJzOiB0aGlzLmhlYWRlcnMgfSk7XG4gIH1cblxuICAvLyBEZWxldGEgcmVjdXJzb3MgZW0gbG90ZVxuICBkZWxldGVSZXNvdXJjZXMoaWRzOiBBcnJheTxhbnk+KTogT2JzZXJ2YWJsZTxhbnk+IHtcbiAgICByZXR1cm4gdGhpcy5odHRwLnJlcXVlc3QoJ2RlbGV0ZScsIGAke3RoaXMuZW5kcG9pbnR9YCwgeyBoZWFkZXJzOiB0aGlzLmhlYWRlcnMsIGJvZHk6IGlkcyB9ICk7XG4gIH1cblxuICAvLyBCdXNjYSB1bWEgbGlzdGEgZGUgcmVjdXJzb3NcbiAgZ2V0UmVzb3VyY2VzKHBhcmFtczoge30gPSB7fSk6IE9ic2VydmFibGU8YW55PiB7XG4gICAgcmV0dXJuIHRoaXMuaHR0cC5nZXQodGhpcy5lbmRwb2ludCwgeyBoZWFkZXJzOiB0aGlzLmhlYWRlcnMsIHBhcmFtcyB9KTtcbiAgfVxuXG4gIC8vIEJ1c2NhIHVtIMO6bmljbyByZWN1cnNvXG4gIGdldFJlc291cmNlKGlkKTogT2JzZXJ2YWJsZTxhbnk+IHtcbiAgICByZXR1cm4gdGhpcy5odHRwLmdldChgJHt0aGlzLmVuZHBvaW50fS8ke2lkfWAsIHsgaGVhZGVyczogdGhpcy5oZWFkZXJzIH0pO1xuICB9XG5cbiAgLy8gQ3JpYSB1bSByZWN1cnNvXG4gIGNyZWF0ZVJlc291cmNlKHJlc291cmNlKTogT2JzZXJ2YWJsZTxhbnk+IHtcbiAgICByZXR1cm4gdGhpcy5odHRwLnBvc3QoYCR7dGhpcy5lbmRwb2ludH1gLCByZXNvdXJjZSwgeyBoZWFkZXJzOiB0aGlzLmhlYWRlcnMgfSk7XG4gIH1cblxuICAvLyBBdHVhbGl6YSB1bSByZWN1cnNvXG4gIHVwZGF0ZVJlc291cmNlKGlkLCByZXNvdXJjZSk6IE9ic2VydmFibGU8YW55PiB7XG4gICAgcmV0dXJuIHRoaXMuaHR0cC5wdXQoYCR7dGhpcy5lbmRwb2ludH0vJHtpZH1gLCByZXNvdXJjZSwgeyBoZWFkZXJzOiB0aGlzLmhlYWRlcnMgfSk7XG4gIH1cbn1cbiJdfQ==