/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Input } from '@angular/core';
import { convertToBoolean } from '../../utils/util';
export class PoPageDynamicListBaseComponent {
    constructor() {
        this._autoRouter = false;
        this._columns = [];
        this._duplicates = [];
        this._fields = [];
        this._filters = [];
        this._keys = [];
        /**
         * Objeto com propriedades do breadcrumb.
         */
        this.breadcrumb = { items: [] };
    }
    /**
     * \@optional
     *
     * \@description
     *
     * Cria automaticamente as rotas de edição (novo/duplicate) e detalhes caso sejam definidas ações na propriedade `p-actions`
     *
     * As rotas criadas serão baseadas na propriedade `p-actions`.
     *
     * > Para o correto funcionamento não pode haver nenhuma rota coringa (`**`) especificada.
     *
     * \@default false
     * @param {?} value
     * @return {?}
     */
    set autoRouter(value) {
        this._autoRouter = convertToBoolean(value);
    }
    /**
     * @return {?}
     */
    get autoRouter() {
        return this._autoRouter;
    }
    /**
     * \@optional
     *
     * \@description
     *
     * Lista dos campos usados na tabela e busca avançada.
     *
     *
     * > Caso não seja definido fields a tabela assumirá o comportamento padrão.
     * @param {?} fields
     * @return {?}
     */
    set fields(fields) {
        this._fields = Array.isArray(fields) ? [...fields] : [];
        this.setFieldsProperties(this.fields);
    }
    /**
     * @return {?}
     */
    get fields() {
        return this._fields;
    }
    /**
     * @return {?}
     */
    get columns() {
        return [...this._columns];
    }
    /**
     * @return {?}
     */
    get duplicates() {
        return [...this._duplicates];
    }
    /**
     * @return {?}
     */
    get filters() {
        return [...this._filters];
    }
    /**
     * @return {?}
     */
    get keys() {
        return [...this._keys];
    }
    /**
     * @private
     * @param {?} fields
     * @return {?}
     */
    setFieldsProperties(fields) {
        this._filters = fields.filter((/**
         * @param {?} field
         * @return {?}
         */
        field => field.filter === true));
        this._columns = fields.filter((/**
         * @param {?} field
         * @return {?}
         */
        field => field.visible === undefined || field.visible === true));
        this._keys = fields.filter((/**
         * @param {?} field
         * @return {?}
         */
        field => field.key === true)).map((/**
         * @param {?} field
         * @return {?}
         */
        field => field.property));
        this._duplicates = fields.filter((/**
         * @param {?} field
         * @return {?}
         */
        field => field.duplicate === true)).map((/**
         * @param {?} field
         * @return {?}
         */
        field => field.property));
    }
}
PoPageDynamicListBaseComponent.propDecorators = {
    autoRouter: [{ type: Input, args: ['p-auto-router',] }],
    breadcrumb: [{ type: Input, args: ['p-breadcrumb',] }],
    fields: [{ type: Input, args: ['p-fields',] }],
    serviceApi: [{ type: Input, args: ['p-service-api',] }],
    title: [{ type: Input, args: ['p-title',] }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    PoPageDynamicListBaseComponent.prototype._autoRouter;
    /**
     * @type {?}
     * @private
     */
    PoPageDynamicListBaseComponent.prototype._columns;
    /**
     * @type {?}
     * @private
     */
    PoPageDynamicListBaseComponent.prototype._duplicates;
    /**
     * @type {?}
     * @private
     */
    PoPageDynamicListBaseComponent.prototype._fields;
    /**
     * @type {?}
     * @private
     */
    PoPageDynamicListBaseComponent.prototype._filters;
    /**
     * @type {?}
     * @private
     */
    PoPageDynamicListBaseComponent.prototype._keys;
    /**
     * Objeto com propriedades do breadcrumb.
     * @type {?}
     */
    PoPageDynamicListBaseComponent.prototype.breadcrumb;
    /**
     * \@description
     *
     * Endpoint usado pelo template para requisição dos recursos que serão exibidos.
     *
     * Ao realizar requisições de busca, podem ser enviados os parâmetros (caso possuam valor): `page`, `pageSize`, `search` e `order`.
     *
     * Caso a coluna estiver ordenada descendentemente será enviada da seguinte forma: `-name`, se for ordenada
     * ascendentemente será enviada apenas com o nome da coluna, por exemplo: `name`.
     *
     * Exemplo de uma requisição de busca:
     *
     * > `GET {end-point}/{resource}?page=1&pageSize=10&search=components&order=-name`
     *
     * Caso a ação `remove` estiver configurada, será feito uma requisição de exclusão nesse mesmo endpoint passando os campos
     * setados como `key: true`.
     *
     * > `DELETE {end-point}/{keys}`
     *
     * ```
     *  <po-page-dynamic-table
     *    [p-actions]="{ remove: true }"
     *    [p-fields]="[ { property: 'id', key: true } ]"
     *    p-service="/api/po-samples/v1/people"
     *    ...>
     *  </po-page-dynamic-table>
     * ```
     *
     * Resquisição disparada, onde a propriedade `id` é igual a 2:
     *
     * ```
     *  DELETE /api/po-samples/v1/people/2 HTTP/1.1
     *  Host: localhost:4000
     *  Connection: keep-alive
     *  Accept: application/json, text/plain
     *  ...
     * ```
     *
     * Para a ação `removeAll`, será feito uma requisição de exclusão em lote para esse mesmo endpoint passando, uma lista
     * de objetos com os campos setados como `key: true` via `payload`.
     *
     * > `DELETE {end-point}`
     *
     * > `Payload: [ {key}, {key} ... {key} ]`
     *
     * ```
     *  <po-page-dynamic-table
     *    [p-actions]="{ removeAll: true }"
     *    [p-fields]="[ { property: 'id', key: true } ]"
     *    p-service="/api/po-samples/v1/people"
     *    ...>
     *  </po-page-dynamic-table>
     * ```
     *
     * Resquisição disparada, onde foram selecionados 3 itens para serem removidos:
     *
     * ```
     *  DELETE /api/po-samples/v1/people HTTP/1.1
     *  Host: localhost:4000
     *  Connection: keep-alive
     *  Accept: application/json, text/plain
     *  ...
     * ```
     *
     * Request payload:
     *
     * ```
     * [{"id":2},{"id":4},{"id":5}]
     * ```
     *
     * > Caso esteja usando metadados com o template, será disparado uma requisição na inicialização do template para buscar
     * > os metadados da página passando o tipo do metadado esperado e a versão cacheada pelo browser.
     * >
     * > `GET {end-point}/metadata?type=list&version={version}`
     * @type {?}
     */
    PoPageDynamicListBaseComponent.prototype.serviceApi;
    /**
     * Título da página.
     * @type {?}
     */
    PoPageDynamicListBaseComponent.prototype.title;
}
//# sourceMappingURL=data:application/json;base64,