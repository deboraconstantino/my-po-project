import { EventEmitter } from '@angular/core';
import { PoBreadcrumb, PoDynamicFormField, PoLanguageService, PoPageAction } from '@portinari/portinari-ui';
import { PoPageDynamicOptions } from './../../services/po-page-customization/po-page-dynamic-options.interface';
import { PoPageDynamicSearchLiterals } from './po-page-dynamic-search-literals.interface';
import { PoAdvancedFilterLiterals } from './po-advanced-filter/po-advanced-filter-literals.interface';
export declare const poPageDynamicSearchLiteralsDefault: {
    en: PoPageDynamicSearchLiterals;
    es: PoPageDynamicSearchLiterals;
    pt: PoPageDynamicSearchLiterals;
    ru: PoPageDynamicSearchLiterals;
};
/**
 * @description
 *
 * Componente com as ações de pesquisa já definidas, bastando que o desenvolvedor implemente apenas a chamada para as APIs
 * e exiba as informações.
 */
export declare class PoPageDynamicSearchBaseComponent {
    private _filters;
    private _literals;
    advancedFilterLiterals: PoAdvancedFilterLiterals;
    private language;
    /** Nesta propriedade deve ser definido um array de objetos que implementam a interface `PoPageAction`. */
    actions?: Array<PoPageAction>;
    /** Objeto com propriedades do breadcrumb. */
    breadcrumb?: PoBreadcrumb;
    /**
     * @optional
     *
     * @description
     *
     * Objeto com as literais usadas no `po-page-dynamic-search`.
     *
     * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponíveis:
     *
     * ```
     *  const customLiterals: PoPageDynamicSearchLiterals = {
     *    disclaimerGroupTitle: 'Filtros aplicados:',
     *    filterTitle: 'Filtro avançado',
     *    filterCancelLabel: 'Fechar',
     *    filterConfirmLabel: 'Aplicar',
     *    quickSearchLabel: 'Valor pesquisado:',
     *    searchPlaceholder: 'Pesquise aqui'
     *  };
     * ```
     *
     * Ou passando apenas as literais que deseja customizar:
     *
     * ```
     *  const customLiterals: PoPageDynamicSearchLiterals = {
     *    filterTitle: 'Filtro avançado'
     *  };
     * ```
     *
     * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.
     *
     * ```
     * <po-page-dynamic-search
     *   [p-literals]="customLiterals">
     * </po-page-dynamic-search>
     * ```
     *
     * > O valor padrão será traduzido de acordo com o idioma configurado no [`PoI18nService`](/documentation/po-i18n) ou *browser*.
     */
    literals: PoPageDynamicSearchLiterals;
    /**
     * @optional
     *
     * @description
     *
     * Lista dos campos usados na busca avançada. Caso o mesmo não seja passado a busca avançada não será exibida.
     */
    filters: Array<PoDynamicFormField>;
    /**
     * Função ou serviço que será executado na inicialização do componente.
     *
     * A propriedade aceita os seguintes tipos:
     * - `string`: *Endpoint* usado pelo componente para requisição via `POST`.
     * - `function`: Método que será executado.
     *
     * O retorno desta função deve ser do tipo `PoPageDynamicOptions`,
     * onde o usuário poderá customizar novos filtros, breadcrumb, title e actions
     *
     * Por exemplo:
     *
     * ```
     * getPageOptions(): PoPageDynamicOptions {
     * return {
     *   actions: [
     *     { label: 'Find on Google' },
     *   ],
     *   filters: [
     *     { property: 'idCard', gridColumns: 6 }
     *   ]
     * };
     * }
     *
     * ```
     * Para referenciar a sua função utilize a propriedade `bind`, por exemplo:
     * ```
     *  [p-load]="onLoadOptions.bind(this)"
     * ```
     */
    onLoad: string | (() => PoPageDynamicOptions);
    /** Título da página. */
    title: string;
    /**
     * @description
     *
     * Evento disparado ao executar a pesquisa avançada, o mesmo irá repassar um objeto com os valores preenchidos no modal de pesquisa.
     *
     * > Campos não preenchidos não irão aparecer no objeto passado por parâmetro.
     */
    advancedSearch?: EventEmitter<any>;
    /** Evento disparado ao remover um ou todos os disclaimers pelo usuário. */
    changeDisclaimers?: EventEmitter<any>;
    /** Evento disparado ao realizar uma busca pelo campo de pesquisa rápida, o mesmo será chamado repassando o valor digitado. */
    quickSearch?: EventEmitter<string>;
    constructor(languageService: PoLanguageService);
    protected setAdvancedFilterLiterals(literals: PoPageDynamicSearchLiterals): void;
}
