import { AfterViewInit, OnDestroy, OnInit, ViewContainerRef } from '@angular/core';
import { NgForm } from '@angular/forms';
import { ActivatedRoute, Router } from '@angular/router';
import { PoComponentInjectorService, PoModalAction, PoModalComponent } from '@portinari/portinari-ui';
import { PoPageChangePasswordBaseComponent } from './po-page-change-password-base.component';
import { PoPageChangePasswordRequirement } from './interfaces/po-page-change-password-requirement.interface';
import { PoPageChangePasswordService } from './po-page-change-password.service';
/**
 * @docsExtends PoPageChangePasswordBaseComponent
 *
 * @example
 *
 * <example name="po-page-change-password-basic" title="Portinari Page Change Password Basic">
 *  <file name="sample-po-page-change-password-basic/sample-po-page-change-password-basic.component.html"> </file>
 *  <file name="sample-po-page-change-password-basic/sample-po-page-change-password-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-page-change-password-labs" title="Portinari Page Change Password Labs">
 *  <file name="sample-po-page-change-password-labs/sample-po-page-change-password-labs.component.html"> </file>
 *  <file name="sample-po-page-change-password-labs/sample-po-page-change-password-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-page-change-password-modify" title="Portinari Page Change Password Modify">
 *  <file name="sample-po-page-change-password-modify/sample-po-page-change-password-modify.component.html"> </file>
 *  <file name="sample-po-page-change-password-modify/sample-po-page-change-password-modify.component.ts"> </file>
 * </example>
 *
 * <example name="po-page-change-password-create" title="Portinari Page Change Password Create">
 *  <file name="sample-po-page-change-password-create/sample-po-page-change-password-create.component.html"> </file>
 *  <file name="sample-po-page-change-password-create/sample-po-page-change-password-create.component.ts"> </file>
 * </example>
 *
 * <example name="po-page-change-password-request" title="Portinari Page Change Password Request">
 *  <file name="sample-po-page-change-password-request/sample-po-page-change-password-request.component.html"> </file>
 *  <file name="sample-po-page-change-password-request/sample-po-page-change-password-request.component.ts"> </file>
 * </example>
 */
export declare class PoPageChangePasswordComponent extends PoPageChangePasswordBaseComponent implements AfterViewInit, OnDestroy, OnInit {
    private activatedRoute;
    private route;
    private router;
    private service;
    private poComponentInjector;
    private newPasswordSubscription;
    readonly literals: {
        backButton: string;
        confirmPassword: string;
        createNewPassword: string;
        createNewPasswordPhrase: string;
        currentPassword: string;
        enterSystemButton: string;
        forgotPassword: string;
        newPassword: string;
        passwordSuccessfullyCreated: string;
        passwordSuccessfullyUpdated: string;
        requirements: string;
        safetyTips: string;
        safetyTipsPhrase: string;
        safetyTipsFirst: string;
        safetyTipsSecond: string;
        safetyTipsThird: string;
        saveButton: string;
    };
    private componentRef;
    modalAction: PoModalAction;
    parentRef: any;
    modal: PoModalComponent;
    pageChangePassword: ViewContainerRef;
    passwordForm: NgForm;
    constructor(activatedRoute: ActivatedRoute, route: ActivatedRoute, router: Router, service: PoPageChangePasswordService, poComponentInjector: PoComponentInjectorService, viewRef: ViewContainerRef);
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    ngOnInit(): void;
    navigateTo(url: string): void;
    onForgotPasswordClick(recovery: any): void;
    onLoginSubmit(): void;
    /**
     * Abre uma modal de confirmação com texto, imagem e botão que redireciona para o link definido na propriedade `p-url-home`
     */
    openConfirmation(): void;
    validatePassword(): void;
    validateRequirement(requirement: PoPageChangePasswordRequirement): any;
    private checkingForMetadataProperty;
    private checkingForRouteMetadata;
    private createModalPasswordRecoveryComponent;
    private emitSubmit;
    private getLoginForm;
    private postUrlNewPassword;
    private setFormErrors;
    private subscribeToTokenParameter;
}
