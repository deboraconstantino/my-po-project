import { OnInit } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { PoBreadcrumb, PoDialogService, PoDynamicFormComponent, PoGridComponent, PoGridRowActions, PoNotificationService, PoPageAction } from '@portinari/portinari-ui';
import { PoPageDynamicEditActions } from './interfaces/po-page-dynamic-edit-actions.interface';
import { PoPageDynamicEditField } from './interfaces/po-page-dynamic-edit-field.interface';
import { PoPageDynamicService } from './po-page-dynamic.service';
export declare const poPageDynamicEditLiteralsDefault: {
    en: {
        cancelConfirmMessage: string;
        detailActionNew: string;
        pageActionCancel: string;
        pageActionSave: string;
        pageActionSaveNew: string;
        registerNotFound: string;
        saveNewNotificationSuccessSave: string;
        saveNewNotificationSuccessUpdate: string;
        saveNewNotificationWarning: string;
        saveNotificationSuccessSave: string;
        saveNotificationSuccessUpdate: string;
        saveNotificationWarning: string;
    };
    es: {
        cancelConfirmMessage: string;
        detailActionNew: string;
        pageActionCancel: string;
        pageActionSave: string;
        pageActionSaveNew: string;
        registerNotFound: string;
        saveNewNotificationSuccessSave: string;
        saveNewNotificationSuccessUpdate: string;
        saveNewNotificationWarning: string;
        saveNotificationSuccessSave: string;
        saveNotificationSuccessUpdate: string;
        saveNotificationWarning: string;
    };
    pt: {
        cancelConfirmMessage: string;
        detailActionNew: string;
        pageActionCancel: string;
        pageActionSave: string;
        pageActionSaveNew: string;
        registerNotFound: string;
        saveNewNotificationSuccessSave: string;
        saveNewNotificationSuccessUpdate: string;
        saveNewNotificationWarning: string;
        saveNotificationSuccessSave: string;
        saveNotificationSuccessUpdate: string;
        saveNotificationWarning: string;
    };
};
/**
 * @description
 *
 * O `po-page-dynamic-edit` é uma página que pode servir para editar ou criar novos registros,
 * o mesmo também suporta metadados conforme especificado na documentação.
 *
 * ### Utilização via rota
 *
 * Ao utilizar as rotas para carregar o template, o `page-dynamic-edit` disponibiliza propriedades para
 * poder especificar o endpoint dos dados e dos metadados. Exemplo de utilização:
 *
 * ```
 * {
 *   path: 'people',
 *   component: PoPageDynamicEditComponent,
 *   data: {
 *     serviceApi: 'http://localhost:3000/v1/people', // endpoint dos dados
 *     serviceMetadataApi: 'http://localhost:3000/v1/metadata' // endpoint dos metadados
 *   }
 * }
 * ```
 *
 * Para carregar com um recurso já existente, deve-se ser incluído um parâmetro na rota chamado `id`:
 *
 * ```
 * {
 *   path: 'people/:id',
 *   component: PoPageDynamicEditComponent,
 *   data: {
 *     serviceApi: 'http://localhost:3000/v1/people', // endpoint dos dados
 *     serviceMetadataApi: 'http://localhost:3000/v1/metadata' // endpoint dos metadados
 *   }
 * }
 * ```
 *
 * A requisição dos metadados é feita na inicialização do template para buscar os metadados da página passando o
 * tipo do metadado esperado e a versão cacheada pelo browser.
 *
 * O formato esperado na resposta da requisição está especificado na interface
 * [PoPageDynamicEditMetadata](/documentation/po-page-dynamic-edit#po-page-dynamic-edit-metadata). Por exemplo:
 *
 * ```
 *  {
 *   version: 1,
 *   title: 'Person edit',
 *   fields: [
 *     { property: 'id', key: true, disabled: true },
 *     { property: 'status' },
 *     { property: 'name' },
 *     { property: 'nickname' },
 *     { property: 'birthdate', label: 'Birth date' },
 *     { property: 'genre' },
 *     { property: 'city' },
 *     { property: 'country' }
 *   ]
 * }
 * ```
 *
 * > Caso o endpoint dos metadados não seja especificado, será feito uma requisição utilizando o `serviceApi` da seguinte forma:
 * ```
 * GET {end-point}/metadata?type=edit&version={version}
 * ```
 *
 * @example
 *
 * <example name="po-page-dynamic-edit-basic" title="Portinari Page Dynamic Edit Basic">
 *  <file name="sample-po-page-dynamic-edit-basic/sample-po-page-dynamic-edit-basic.component.html"> </file>
 *  <file name="sample-po-page-dynamic-edit-basic/sample-po-page-dynamic-edit-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-page-dynamic-edit-user" title="Portinari Page Dynamic Edit - User">
 *  <file name="sample-po-page-dynamic-edit-user/sample-po-page-dynamic-edit-user.component.html"> </file>
 *  <file name="sample-po-page-dynamic-edit-user/sample-po-page-dynamic-edit-user.component.ts"> </file>
 * </example>
 *
 * <example name="po-page-dynamic-edit-master-detail" title="Portinari Page Dynamic Edit - Master Detail">
 *  <file name="sample-po-page-dynamic-edit-master-detail/sample-po-page-dynamic-edit-master-detail.component.html"> </file>
 *  <file name="sample-po-page-dynamic-edit-master-detail/sample-po-page-dynamic-edit-master-detail.component.ts"> </file>
 * </example>
 */
export declare class PoPageDynamicEditComponent implements OnInit {
    private router;
    private activatedRoute;
    private poNotification;
    private poDialogService;
    private poPageDynamicService;
    private _actions;
    private _autoRouter;
    private _controlFields;
    private _detailFields;
    private _duplicates;
    private _fields;
    private _keys;
    private _pageActions;
    literals: any;
    model: any;
    readonly detailActions: PoGridRowActions;
    /**
     * @optional
     *
     * @description
     *
     * Ações da página.
     */
    actions: PoPageDynamicEditActions;
    /**
     * @todo Validar rotas na mão pois se existir uma rota '**' o catch do navigation não funciona.
     *
     * @optional
     *
     * @description
     *
     * Cria automaticamente as rotas de edição (novo/duplicate) e detalhes caso as ações
     * estejam definidas nas ações.
     *
     * > Para o correto funcionamento não pode haver nenhum rota coringa (`**`) especificada.
     *
     * @default false
     */
    autoRouter: boolean;
    /** Objeto com propriedades do breadcrumb. */
    breadcrumb?: PoBreadcrumb;
    /** Lista dos campos usados na tabela e busca avançada. */
    fields: Array<PoPageDynamicEditField>;
    /**
     * @description
     *
     * Endpoint usado pelo template para requisição do recurso que será exibido para edição.
     *
     * Para as ações de `save` e `saveNew`, será feito uma requisição de criação nesse mesmo endpoint passando os valores
     * preenchidos pelo usuário via payload.
     *
     * > `POST {end-point}`
     *
     * ```
     *  <po-page-dynamic-edit
     *    [p-actions]="{ save: '/', saveNew: 'new' }"
     *    [p-fields]="[ { property: 'name' }, { property: 'city' } ]"
     *    p-service="/api/po-samples/v1/people"
     *    ...>
     *  </po-page-dynamic-edit>
     * ```
     *
     * Resquisição disparada, onde a propriedade `name` e `city` foram preenchidas:
     *
     * ```
     *  POST /api/po-samples/v1/people HTTP/1.1
     *  Host: localhost:4000
     *  Connection: keep-alive
     *  Accept: application/json, text/plain
     *  ...
     * ```
     *
     * Request payload:
     *
     * ```
     * { "name": "Fulano", "city": "Smallville" }
     * ```
     *
     * Caso queira que o template carregue um recurso já existente, deve-se ser incluído um parametro na rota chamado `id`.
     *
     * Exemplo de configuração de rota:
     *
     * ```
     *  RouterModule.forRoot([
     *    ...
     *    { path: 'edit/:id', component: PersonEditComponent },
     *    ...
     *  ],
     * ```
     *
     * Baseado nisso, na inicialização do template, será disparado uma requisição para buscar o recurso que será editado.
     *
     * > `GET {end-point}/{id}`
     *
     * Nos métodos de `save` e `saveNew`, ao invés de um `POST`, será disparado um `PUT`.
     *
     * Resquisição disparada, onde a propriedade `name` e `city` foram preenchidas / atualizadas, e o `id` da url é 2:
     *
     * ```
     *  PUT /api/po-samples/v1/people/2 HTTP/1.1
     *  Host: localhost:4000
     *  Connection: keep-alive
     *  Accept: application/json, text/plain
     *  ...
     * ```
     *
     * Request payload:
     *
     * ```
     * { "name": "Fulano", "city": "Metropolis" }
     * ```
     */
    serviceApi: string;
    /** Título da página. */
    title: string;
    dynamicForm: PoDynamicFormComponent;
    gridDetail: PoGridComponent;
    constructor(router: Router, activatedRoute: ActivatedRoute, poNotification: PoNotificationService, poDialogService: PoDialogService, poPageDynamicService: PoPageDynamicService);
    ngOnInit(): void;
    readonly duplicates: any[];
    readonly keys: any[];
    readonly pageActions: PoPageAction[];
    readonly controlFields: any[];
    readonly detailFields: any[];
    detailActionNew(): void;
    private cancel;
    private formatUniqueKey;
    private goBack;
    private loadData;
    private loadMetadata;
    private navigateTo;
    private resolveUrl;
    private save;
    private saveNew;
    private getKeysByFields;
    private getControlFields;
    private getDetailFields;
    private getDuplicatesByFields;
    private getPageActions;
    private isObject;
}
